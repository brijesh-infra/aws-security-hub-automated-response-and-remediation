#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
const sharrplaybook_construct_1 = require("../../../lib/sharrplaybook-construct");
const cdk = require("@aws-cdk/core");
const cdk_nag = require("cdk-nag");
require("source-map-support/register");
// SOLUTION_* - set by solution_env.sh
const SOLUTION_ID = process.env['SOLUTION_ID'] || 'undefined';
const SOLUTION_NAME = process.env['SOLUTION_NAME'] || 'undefined';
// DIST_* - set by build-s3-dist.sh
const DIST_VERSION = process.env['DIST_VERSION'] || '%%VERSION%%';
const DIST_OUTPUT_BUCKET = process.env['DIST_OUTPUT_BUCKET'] || '%%BUCKET%%';
const DIST_SOLUTION_NAME = process.env['DIST_SOLUTION_NAME'] || '%%SOLUTION%%';
const standardShortName = 'NPB';
const standardLongName = 'New Playbook';
const standardVersion = '1.1.1'; // DO NOT INCLUDE 'V'
const app = new cdk.App();
cdk.Aspects.of(app).add(new cdk_nag.AwsSolutionsChecks());
// Creates one rule per control Id. The Step Function determines what document to run based on
// Security Standard and Control Id. See cis-member-stack
const remediations = [
    { "control": "RDS.6" }
];
const adminStack = new sharrplaybook_construct_1.PlaybookPrimaryStack(app, 'NPBStack', {
    description: `(${SOLUTION_ID}P) ${SOLUTION_NAME} ${standardShortName} ${standardVersion} Compliance Pack - Admin Account, ${DIST_VERSION}`,
    solutionId: SOLUTION_ID,
    solutionVersion: DIST_VERSION,
    solutionDistBucket: DIST_OUTPUT_BUCKET,
    solutionDistName: DIST_SOLUTION_NAME,
    remediations: remediations,
    securityStandardLongName: standardLongName,
    securityStandard: standardShortName,
    securityStandardVersion: standardVersion
});
const memberStack = new sharrplaybook_construct_1.PlaybookMemberStack(app, 'NPBMemberStack', {
    description: `(${SOLUTION_ID}M) ${SOLUTION_NAME} ${standardShortName} ${standardVersion} Compliance Pack - Member Account, ${DIST_VERSION}`,
    solutionId: SOLUTION_ID,
    solutionVersion: DIST_VERSION,
    solutionDistBucket: DIST_OUTPUT_BUCKET,
    securityStandard: standardShortName,
    securityStandardVersion: standardVersion,
    securityStandardLongName: standardLongName,
    remediations: remediations
});
adminStack.templateOptions.templateFormatVersion = "2010-09-09";
memberStack.templateOptions.templateFormatVersion = "2010-09-09";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV3cGxheWJvb2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZXdwbGF5Ym9vay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxxRUFBcUU7QUFDckUsc0NBQXNDO0FBQ3RDLGtGQUk4QztBQUM5QyxxQ0FBcUM7QUFDckMsbUNBQW1DO0FBQ25DLHVDQUFxQztBQUVyQyxzQ0FBc0M7QUFDdEMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsSUFBSSxXQUFXLENBQUM7QUFDOUQsTUFBTSxhQUFhLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsSUFBSSxXQUFXLENBQUM7QUFDbEUsbUNBQW1DO0FBQ25DLE1BQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLElBQUksYUFBYSxDQUFDO0FBQ2xFLE1BQU0sa0JBQWtCLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLFlBQVksQ0FBQztBQUM3RSxNQUFNLGtCQUFrQixHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLENBQUMsSUFBSSxjQUFjLENBQUM7QUFFL0UsTUFBTSxpQkFBaUIsR0FBRyxLQUFLLENBQUM7QUFDaEMsTUFBTSxnQkFBZ0IsR0FBRyxjQUFjLENBQUM7QUFDeEMsTUFBTSxlQUFlLEdBQUcsT0FBTyxDQUFDLENBQUMscUJBQXFCO0FBRXRELE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQzFCLEdBQUcsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLENBQUM7QUFFMUQsOEZBQThGO0FBQzlGLHlEQUF5RDtBQUN6RCxNQUFNLFlBQVksR0FBZTtJQUMvQixFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUU7Q0FDdkIsQ0FBQztBQUVGLE1BQU0sVUFBVSxHQUFHLElBQUksOENBQW9CLENBQUMsR0FBRyxFQUFFLFVBQVUsRUFBRTtJQUMzRCxXQUFXLEVBQUUsSUFBSSxXQUFXLE1BQU0sYUFBYSxJQUFJLGlCQUFpQixJQUFJLGVBQWUscUNBQXFDLFlBQVksRUFBRTtJQUMxSSxVQUFVLEVBQUUsV0FBVztJQUN2QixlQUFlLEVBQUUsWUFBWTtJQUM3QixrQkFBa0IsRUFBRSxrQkFBa0I7SUFDdEMsZ0JBQWdCLEVBQUUsa0JBQWtCO0lBQ3BDLFlBQVksRUFBRSxZQUFZO0lBQzFCLHdCQUF3QixFQUFFLGdCQUFnQjtJQUMxQyxnQkFBZ0IsRUFBRSxpQkFBaUI7SUFDbkMsdUJBQXVCLEVBQUUsZUFBZTtDQUN6QyxDQUFDLENBQUM7QUFFSCxNQUFNLFdBQVcsR0FBRyxJQUFJLDZDQUFtQixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRTtJQUNqRSxXQUFXLEVBQUUsSUFBSSxXQUFXLE1BQU0sYUFBYSxJQUFJLGlCQUFpQixJQUFJLGVBQWUsc0NBQXNDLFlBQVksRUFBRTtJQUMzSSxVQUFVLEVBQUUsV0FBVztJQUN2QixlQUFlLEVBQUUsWUFBWTtJQUM3QixrQkFBa0IsRUFBRSxrQkFBa0I7SUFDdEMsZ0JBQWdCLEVBQUUsaUJBQWlCO0lBQ25DLHVCQUF1QixFQUFFLGVBQWU7SUFDeEMsd0JBQXdCLEVBQUUsZ0JBQWdCO0lBQzFDLFlBQVksRUFBRSxZQUFZO0NBQzNCLENBQUMsQ0FBQztBQUVILFVBQVUsQ0FBQyxlQUFlLENBQUMscUJBQXFCLEdBQUcsWUFBWSxDQUFDO0FBQ2hFLFdBQVcsQ0FBQyxlQUFlLENBQUMscUJBQXFCLEdBQUcsWUFBWSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2Jpbi9lbnYgbm9kZVxuLy8gQ29weXJpZ2h0IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuaW1wb3J0IHtcbiAgUGxheWJvb2tQcmltYXJ5U3RhY2ssXG4gIFBsYXlib29rTWVtYmVyU3RhY2ssXG4gIElDb250cm9sXG59IGZyb20gJy4uLy4uLy4uL2xpYi9zaGFycnBsYXlib29rLWNvbnN0cnVjdCc7XG5pbXBvcnQgKiBhcyBjZGsgZnJvbSAnQGF3cy1jZGsvY29yZSc7XG5pbXBvcnQgKiBhcyBjZGtfbmFnIGZyb20gJ2Nkay1uYWcnO1xuaW1wb3J0ICdzb3VyY2UtbWFwLXN1cHBvcnQvcmVnaXN0ZXInO1xuXG4vLyBTT0xVVElPTl8qIC0gc2V0IGJ5IHNvbHV0aW9uX2Vudi5zaFxuY29uc3QgU09MVVRJT05fSUQgPSBwcm9jZXNzLmVudlsnU09MVVRJT05fSUQnXSB8fCAndW5kZWZpbmVkJztcbmNvbnN0IFNPTFVUSU9OX05BTUUgPSBwcm9jZXNzLmVudlsnU09MVVRJT05fTkFNRSddIHx8ICd1bmRlZmluZWQnO1xuLy8gRElTVF8qIC0gc2V0IGJ5IGJ1aWxkLXMzLWRpc3Quc2hcbmNvbnN0IERJU1RfVkVSU0lPTiA9IHByb2Nlc3MuZW52WydESVNUX1ZFUlNJT04nXSB8fCAnJSVWRVJTSU9OJSUnO1xuY29uc3QgRElTVF9PVVRQVVRfQlVDS0VUID0gcHJvY2Vzcy5lbnZbJ0RJU1RfT1VUUFVUX0JVQ0tFVCddIHx8ICclJUJVQ0tFVCUlJztcbmNvbnN0IERJU1RfU09MVVRJT05fTkFNRSA9IHByb2Nlc3MuZW52WydESVNUX1NPTFVUSU9OX05BTUUnXSB8fCAnJSVTT0xVVElPTiUlJztcblxuY29uc3Qgc3RhbmRhcmRTaG9ydE5hbWUgPSAnTlBCJztcbmNvbnN0IHN0YW5kYXJkTG9uZ05hbWUgPSAnTmV3IFBsYXlib29rJztcbmNvbnN0IHN0YW5kYXJkVmVyc2lvbiA9ICcxLjEuMSc7IC8vIERPIE5PVCBJTkNMVURFICdWJ1xuXG5jb25zdCBhcHAgPSBuZXcgY2RrLkFwcCgpO1xuY2RrLkFzcGVjdHMub2YoYXBwKS5hZGQobmV3IGNka19uYWcuQXdzU29sdXRpb25zQ2hlY2tzKCkpO1xuXG4vLyBDcmVhdGVzIG9uZSBydWxlIHBlciBjb250cm9sIElkLiBUaGUgU3RlcCBGdW5jdGlvbiBkZXRlcm1pbmVzIHdoYXQgZG9jdW1lbnQgdG8gcnVuIGJhc2VkIG9uXG4vLyBTZWN1cml0eSBTdGFuZGFyZCBhbmQgQ29udHJvbCBJZC4gU2VlIGNpcy1tZW1iZXItc3RhY2tcbmNvbnN0IHJlbWVkaWF0aW9uczogSUNvbnRyb2xbXSA9IFtcbiAgeyBcImNvbnRyb2xcIjogXCJSRFMuNlwiIH1cbl07XG5cbmNvbnN0IGFkbWluU3RhY2sgPSBuZXcgUGxheWJvb2tQcmltYXJ5U3RhY2soYXBwLCAnTlBCU3RhY2snLCB7XG4gIGRlc2NyaXB0aW9uOiBgKCR7U09MVVRJT05fSUR9UCkgJHtTT0xVVElPTl9OQU1FfSAke3N0YW5kYXJkU2hvcnROYW1lfSAke3N0YW5kYXJkVmVyc2lvbn0gQ29tcGxpYW5jZSBQYWNrIC0gQWRtaW4gQWNjb3VudCwgJHtESVNUX1ZFUlNJT059YCxcbiAgc29sdXRpb25JZDogU09MVVRJT05fSUQsXG4gIHNvbHV0aW9uVmVyc2lvbjogRElTVF9WRVJTSU9OLFxuICBzb2x1dGlvbkRpc3RCdWNrZXQ6IERJU1RfT1VUUFVUX0JVQ0tFVCxcbiAgc29sdXRpb25EaXN0TmFtZTogRElTVF9TT0xVVElPTl9OQU1FLFxuICByZW1lZGlhdGlvbnM6IHJlbWVkaWF0aW9ucyxcbiAgc2VjdXJpdHlTdGFuZGFyZExvbmdOYW1lOiBzdGFuZGFyZExvbmdOYW1lLFxuICBzZWN1cml0eVN0YW5kYXJkOiBzdGFuZGFyZFNob3J0TmFtZSxcbiAgc2VjdXJpdHlTdGFuZGFyZFZlcnNpb246IHN0YW5kYXJkVmVyc2lvblxufSk7XG5cbmNvbnN0IG1lbWJlclN0YWNrID0gbmV3IFBsYXlib29rTWVtYmVyU3RhY2soYXBwLCAnTlBCTWVtYmVyU3RhY2snLCB7XG4gIGRlc2NyaXB0aW9uOiBgKCR7U09MVVRJT05fSUR9TSkgJHtTT0xVVElPTl9OQU1FfSAke3N0YW5kYXJkU2hvcnROYW1lfSAke3N0YW5kYXJkVmVyc2lvbn0gQ29tcGxpYW5jZSBQYWNrIC0gTWVtYmVyIEFjY291bnQsICR7RElTVF9WRVJTSU9OfWAsXG4gIHNvbHV0aW9uSWQ6IFNPTFVUSU9OX0lELFxuICBzb2x1dGlvblZlcnNpb246IERJU1RfVkVSU0lPTixcbiAgc29sdXRpb25EaXN0QnVja2V0OiBESVNUX09VVFBVVF9CVUNLRVQsXG4gIHNlY3VyaXR5U3RhbmRhcmQ6IHN0YW5kYXJkU2hvcnROYW1lLFxuICBzZWN1cml0eVN0YW5kYXJkVmVyc2lvbjogc3RhbmRhcmRWZXJzaW9uLFxuICBzZWN1cml0eVN0YW5kYXJkTG9uZ05hbWU6IHN0YW5kYXJkTG9uZ05hbWUsXG4gIHJlbWVkaWF0aW9uczogcmVtZWRpYXRpb25zXG59KTtcblxuYWRtaW5TdGFjay50ZW1wbGF0ZU9wdGlvbnMudGVtcGxhdGVGb3JtYXRWZXJzaW9uID0gXCIyMDEwLTA5LTA5XCI7XG5tZW1iZXJTdGFjay50ZW1wbGF0ZU9wdGlvbnMudGVtcGxhdGVGb3JtYXRWZXJzaW9uID0gXCIyMDEwLTA5LTA5XCI7XG4iXX0=