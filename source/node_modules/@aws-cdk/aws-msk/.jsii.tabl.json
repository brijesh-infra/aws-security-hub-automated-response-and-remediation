{
  "version": "2",
  "toolVersion": "1.63.2",
  "snippets": {
    "50c8eae427e7b659bf5f14f0324d2c9fc85b49fde9cc6d4dcdf24de7007509ef": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"Cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\nCluster cluster = new Cluster(this, \"Cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"Cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"Cluster\"), &clusterProps{\n\tclusterName: jsii.String(\"myCluster\"),\n\tkafkaVersion: msk.kafkaVersion_V2_8_1(),\n\tvpc: vpc,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'Cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-msk"
        },
        "field": {
          "field": "markdown",
          "line": 28
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.ClusterProps",
        "@aws-cdk/aws-msk.KafkaVersion",
        "@aws-cdk/aws-msk.KafkaVersion#V2_8_1",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'Cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 12,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 2,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "a8c6573f89c5f647114540111ae8d92703ce639c85e049bbbcd8ee9fbb06fb96"
    },
    "3d8d93c60ecae55063994e44522cd5f5f5b180664aed79aadfb9ee0073f2e0f5": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"Cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc\n)\n\ncluster.connections.allow_from(\n    ec2.Peer.ipv4(\"1.2.3.4/8\"),\n    ec2.Port.tcp(2181))\ncluster.connections.allow_from(\n    ec2.Peer.ipv4(\"1.2.3.4/8\"),\n    ec2.Port.tcp(9094))",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\nCluster cluster = new Cluster(this, \"Cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc\n});\n\ncluster.Connections.AllowFrom(Peer.Ipv4(\"1.2.3.4/8\"), Port.Tcp(2181));\ncluster.Connections.AllowFrom(Peer.Ipv4(\"1.2.3.4/8\"), Port.Tcp(9094));",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"Cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .build();\n\ncluster.connections.allowFrom(Peer.ipv4(\"1.2.3.4/8\"), Port.tcp(2181));\ncluster.connections.allowFrom(Peer.ipv4(\"1.2.3.4/8\"), Port.tcp(9094));",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"Cluster\"), &clusterProps{\n\tclusterName: jsii.String(\"myCluster\"),\n\tkafkaVersion: msk.kafkaVersion_V2_8_1(),\n\tvpc: vpc,\n})\n\ncluster.connections.allowFrom(ec2.peer.ipv4(jsii.String(\"1.2.3.4/8\")), ec2.port.tcp(jsii.Number(2181)))\ncluster.connections.allowFrom(ec2.peer.ipv4(jsii.String(\"1.2.3.4/8\")), ec2.port.tcp(jsii.Number(9094)))",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'Cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n});\n\ncluster.connections.allowFrom(\n  ec2.Peer.ipv4('1.2.3.4/8'),\n  ec2.Port.tcp(2181),\n);\ncluster.connections.allowFrom(\n  ec2.Peer.ipv4('1.2.3.4/8'),\n  ec2.Port.tcp(9094),\n);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-msk"
        },
        "field": {
          "field": "markdown",
          "line": 41
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.Connections#allowFrom",
        "@aws-cdk/aws-ec2.IConnectable",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.Peer",
        "@aws-cdk/aws-ec2.Peer#ipv4",
        "@aws-cdk/aws-ec2.Port",
        "@aws-cdk/aws-ec2.Port#tcp",
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.ClusterProps",
        "@aws-cdk/aws-msk.KafkaVersion",
        "@aws-cdk/aws-msk.KafkaVersion#V2_8_1",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'Cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n});\n\ncluster.connections.allowFrom(\n  ec2.Peer.ipv4('1.2.3.4/8'),\n  ec2.Port.tcp(2181),\n);\ncluster.connections.allowFrom(\n  ec2.Peer.ipv4('1.2.3.4/8'),\n  ec2.Port.tcp(9094),\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "8": 2,
        "10": 4,
        "75": 30,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 15,
        "196": 6,
        "197": 1,
        "225": 2,
        "226": 2,
        "242": 2,
        "243": 2,
        "281": 2,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "a887ad80ce01a17c6606a7b4d2b44b2839529be0be93e2918f7f91e6750af7c9"
    },
    "7afb391a211d908e2cfc06e9ee7d1da8927598274929d184482a7c9b2b90bb91": {
      "translations": {
        "python": {
          "source": "# cluster: msk.Cluster\n\nCfnOutput(self, \"BootstrapBrokers\", value=cluster.bootstrap_brokers)\nCfnOutput(self, \"BootstrapBrokersTls\", value=cluster.bootstrap_brokers_tls)\nCfnOutput(self, \"BootstrapBrokersSaslScram\", value=cluster.bootstrap_brokers_sasl_scram)\nCfnOutput(self, \"ZookeeperConnection\", value=cluster.zookeeper_connection_string)\nCfnOutput(self, \"ZookeeperConnectionTls\", value=cluster.zookeeper_connection_string_tls)",
          "version": "2"
        },
        "csharp": {
          "source": "Cluster cluster;\n\nnew CfnOutput(this, \"BootstrapBrokers\", new CfnOutputProps { Value = cluster.BootstrapBrokers });\nnew CfnOutput(this, \"BootstrapBrokersTls\", new CfnOutputProps { Value = cluster.BootstrapBrokersTls });\nnew CfnOutput(this, \"BootstrapBrokersSaslScram\", new CfnOutputProps { Value = cluster.BootstrapBrokersSaslScram });\nnew CfnOutput(this, \"ZookeeperConnection\", new CfnOutputProps { Value = cluster.ZookeeperConnectionString });\nnew CfnOutput(this, \"ZookeeperConnectionTls\", new CfnOutputProps { Value = cluster.ZookeeperConnectionStringTls });",
          "version": "1"
        },
        "java": {
          "source": "Cluster cluster;\n\nCfnOutput.Builder.create(this, \"BootstrapBrokers\").value(cluster.getBootstrapBrokers()).build();\nCfnOutput.Builder.create(this, \"BootstrapBrokersTls\").value(cluster.getBootstrapBrokersTls()).build();\nCfnOutput.Builder.create(this, \"BootstrapBrokersSaslScram\").value(cluster.getBootstrapBrokersSaslScram()).build();\nCfnOutput.Builder.create(this, \"ZookeeperConnection\").value(cluster.getZookeeperConnectionString()).build();\nCfnOutput.Builder.create(this, \"ZookeeperConnectionTls\").value(cluster.getZookeeperConnectionStringTls()).build();",
          "version": "1"
        },
        "go": {
          "source": "var cluster cluster\n\nawscdkcore.NewCfnOutput(this, jsii.String(\"BootstrapBrokers\"), &cfnOutputProps{\n\tvalue: cluster.bootstrapBrokers,\n})\nawscdkcore.NewCfnOutput(this, jsii.String(\"BootstrapBrokersTls\"), &cfnOutputProps{\n\tvalue: cluster.bootstrapBrokersTls,\n})\nawscdkcore.NewCfnOutput(this, jsii.String(\"BootstrapBrokersSaslScram\"), &cfnOutputProps{\n\tvalue: cluster.bootstrapBrokersSaslScram,\n})\nawscdkcore.NewCfnOutput(this, jsii.String(\"ZookeeperConnection\"), &cfnOutputProps{\n\tvalue: cluster.zookeeperConnectionString,\n})\nawscdkcore.NewCfnOutput(this, jsii.String(\"ZookeeperConnectionTls\"), &cfnOutputProps{\n\tvalue: cluster.zookeeperConnectionStringTls,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const cluster: msk.Cluster;\nnew CfnOutput(this, 'BootstrapBrokers', { value: cluster.bootstrapBrokers });\nnew CfnOutput(this, 'BootstrapBrokersTls', { value: cluster.bootstrapBrokersTls });\nnew CfnOutput(this, 'BootstrapBrokersSaslScram', { value: cluster.bootstrapBrokersSaslScram });\nnew CfnOutput(this, 'ZookeeperConnection', { value: cluster.zookeeperConnectionString });\nnew CfnOutput(this, 'ZookeeperConnectionTls', { value: cluster.zookeeperConnectionStringTls });",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-msk"
        },
        "field": {
          "field": "markdown",
          "line": 63
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/core.CfnOutput",
        "@aws-cdk/core.CfnOutputProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const cluster: msk.Cluster;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nnew CfnOutput(this, 'BootstrapBrokers', { value: cluster.bootstrapBrokers });\nnew CfnOutput(this, 'BootstrapBrokersTls', { value: cluster.bootstrapBrokersTls });\nnew CfnOutput(this, 'BootstrapBrokersSaslScram', { value: cluster.bootstrapBrokersSaslScram });\nnew CfnOutput(this, 'ZookeeperConnection', { value: cluster.zookeeperConnectionString });\nnew CfnOutput(this, 'ZookeeperConnectionTls', { value: cluster.zookeeperConnectionStringTls });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 5,
        "75": 23,
        "104": 5,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 5,
        "194": 5,
        "197": 5,
        "225": 1,
        "226": 5,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "271eaea8f29c4784e6fe448916532a8cf12e5ed031173af7fa6b87931137baa9"
    },
    "88ac55263d5c97d1bc53a07107292dfc5c919087d076b96c35fed5c6c5d55a51": {
      "translations": {
        "python": {
          "source": "cluster = msk.Cluster.from_cluster_arn(self, \"Cluster\", \"arn:aws:kafka:us-west-2:1234567890:cluster/a-cluster/11111111-1111-1111-1111-111111111111-1\")",
          "version": "2"
        },
        "csharp": {
          "source": "ICluster cluster = Cluster.FromClusterArn(this, \"Cluster\", \"arn:aws:kafka:us-west-2:1234567890:cluster/a-cluster/11111111-1111-1111-1111-111111111111-1\");",
          "version": "1"
        },
        "java": {
          "source": "ICluster cluster = Cluster.fromClusterArn(this, \"Cluster\", \"arn:aws:kafka:us-west-2:1234567890:cluster/a-cluster/11111111-1111-1111-1111-111111111111-1\");",
          "version": "1"
        },
        "go": {
          "source": "cluster := msk.cluster.fromClusterArn(this, jsii.String(\"Cluster\"), jsii.String(\"arn:aws:kafka:us-west-2:1234567890:cluster/a-cluster/11111111-1111-1111-1111-111111111111-1\"))",
          "version": "1"
        },
        "$": {
          "source": "const cluster = msk.Cluster.fromClusterArn(this, 'Cluster',\n  'arn:aws:kafka:us-west-2:1234567890:cluster/a-cluster/11111111-1111-1111-1111-111111111111-1',\n);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-msk"
        },
        "field": {
          "field": "markdown",
          "line": 76
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.Cluster#fromClusterArn",
        "@aws-cdk/aws-msk.ICluster",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst cluster = msk.Cluster.fromClusterArn(this, 'Cluster',\n  'arn:aws:kafka:us-west-2:1234567890:cluster/a-cluster/11111111-1111-1111-1111-111111111111-1',\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 4,
        "104": 1,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "a3b3ef45e5b0f75fba69236152753bfe09f0ba61cba1084db47221bdc571c584"
    },
    "c5e52425fab2027270bd7da9d37a8d6fe2ff009af34300922da65b141a4a0efc": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_acmpca as acmpca\n\n# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"Cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc,\n    encryption_in_transit=msk.EncryptionInTransitConfig(\n        client_broker=msk.ClientBrokerEncryption.TLS\n    ),\n    client_authentication=msk.ClientAuthentication.tls(\n        certificate_authorities=[\n            acmpca.CertificateAuthority.from_certificate_authority_arn(self, \"CertificateAuthority\", \"arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111\")\n        ]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.ACMPCA;\n\nVpc vpc;\n\nCluster cluster = new Cluster(this, \"Cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc,\n    EncryptionInTransit = new EncryptionInTransitConfig {\n        ClientBroker = ClientBrokerEncryption.TLS\n    },\n    ClientAuthentication = ClientAuthentication.Tls(new TlsAuthProps {\n        CertificateAuthorities = new [] { CertificateAuthority.FromCertificateAuthorityArn(this, \"CertificateAuthority\", \"arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111\") }\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.acmpca.*;\n\nVpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"Cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .encryptionInTransit(EncryptionInTransitConfig.builder()\n                .clientBroker(ClientBrokerEncryption.TLS)\n                .build())\n        .clientAuthentication(ClientAuthentication.tls(TlsAuthProps.builder()\n                .certificateAuthorities(List.of(CertificateAuthority.fromCertificateAuthorityArn(this, \"CertificateAuthority\", \"arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111\")))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nvar vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"Cluster\"), &clusterProps{\n\tclusterName: jsii.String(\"myCluster\"),\n\tkafkaVersion: msk.kafkaVersion_V2_8_1(),\n\tvpc: vpc,\n\tencryptionInTransit: &encryptionInTransitConfig{\n\t\tclientBroker: msk.clientBrokerEncryption_TLS,\n\t},\n\tclientAuthentication: msk.clientAuthentication.tls(&tlsAuthProps{\n\t\tcertificateAuthorities: []iCertificateAuthority{\n\t\t\tacmpca.certificateAuthority.fromCertificateAuthorityArn(this, jsii.String(\"CertificateAuthority\"), jsii.String(\"arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111\")),\n\t\t},\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as acmpca from '@aws-cdk/aws-acmpca';\n\ndeclare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'Cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.tls({\n    certificateAuthorities: [\n      acmpca.CertificateAuthority.fromCertificateAuthorityArn(\n        this,\n        'CertificateAuthority',\n        'arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111',\n      ),\n    ],\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-msk"
        },
        "field": {
          "field": "markdown",
          "line": 92
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-acmpca.CertificateAuthority",
        "@aws-cdk/aws-acmpca.CertificateAuthority#fromCertificateAuthorityArn",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-msk.ClientAuthentication",
        "@aws-cdk/aws-msk.ClientAuthentication#tls",
        "@aws-cdk/aws-msk.ClientBrokerEncryption",
        "@aws-cdk/aws-msk.ClientBrokerEncryption#TLS",
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.ClusterProps",
        "@aws-cdk/aws-msk.EncryptionInTransitConfig",
        "@aws-cdk/aws-msk.KafkaVersion",
        "@aws-cdk/aws-msk.KafkaVersion#V2_8_1",
        "@aws-cdk/aws-msk.TlsAuthProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'Cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.tls({\n    certificateAuthorities: [\n      acmpca.CertificateAuthority.fromCertificateAuthorityArn(\n        this,\n        'CertificateAuthority',\n        'arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111',\n      ),\n    ],\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 5,
        "75": 26,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "194": 9,
        "196": 2,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "aa98d614523877584f1e4ff9f7ebdd8a9ce195bfbc7d1493f326be61fd6bfe51"
    },
    "9013970c64fd2d5a191ac8a6b4483c9d7d41bda126a9a287b1f87679faf296b9": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc,\n    encryption_in_transit=msk.EncryptionInTransitConfig(\n        client_broker=msk.ClientBrokerEncryption.TLS\n    ),\n    client_authentication=msk.ClientAuthentication.sasl(\n        scram=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\nCluster cluster = new Cluster(this, \"cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc,\n    EncryptionInTransit = new EncryptionInTransitConfig {\n        ClientBroker = ClientBrokerEncryption.TLS\n    },\n    ClientAuthentication = ClientAuthentication.Sasl(new SaslAuthProps {\n        Scram = true\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .encryptionInTransit(EncryptionInTransitConfig.builder()\n                .clientBroker(ClientBrokerEncryption.TLS)\n                .build())\n        .clientAuthentication(ClientAuthentication.sasl(SaslAuthProps.builder()\n                .scram(true)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"cluster\"), &clusterProps{\n\tclusterName: jsii.String(\"myCluster\"),\n\tkafkaVersion: msk.kafkaVersion_V2_8_1(),\n\tvpc: vpc,\n\tencryptionInTransit: &encryptionInTransitConfig{\n\t\tclientBroker: msk.clientBrokerEncryption_TLS,\n\t},\n\tclientAuthentication: msk.clientAuthentication.sasl(&saslAuthProps{\n\t\tscram: jsii.Boolean(true),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-msk"
        },
        "field": {
          "field": "markdown",
          "line": 119
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-msk.ClientAuthentication",
        "@aws-cdk/aws-msk.ClientAuthentication#sasl",
        "@aws-cdk/aws-msk.ClientBrokerEncryption",
        "@aws-cdk/aws-msk.ClientBrokerEncryption#TLS",
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.ClusterProps",
        "@aws-cdk/aws-msk.EncryptionInTransitConfig",
        "@aws-cdk/aws-msk.KafkaVersion",
        "@aws-cdk/aws-msk.KafkaVersion#V2_8_1",
        "@aws-cdk/aws-msk.SaslAuthProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 22,
        "104": 1,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 7,
        "196": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 6,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "91ed9999a6558234287a8e8dc81c788a786323117bd0d7e5d87837b592b70766"
    },
    "0f17105e22adf3fd92b3a72da2aaf56963615f43b5ff3a7b52a90a41dfa91fef": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc,\n    encryption_in_transit=msk.EncryptionInTransitConfig(\n        client_broker=msk.ClientBrokerEncryption.TLS\n    ),\n    client_authentication=msk.ClientAuthentication.sasl(\n        iam=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\nCluster cluster = new Cluster(this, \"cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc,\n    EncryptionInTransit = new EncryptionInTransitConfig {\n        ClientBroker = ClientBrokerEncryption.TLS\n    },\n    ClientAuthentication = ClientAuthentication.Sasl(new SaslAuthProps {\n        Iam = true\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .encryptionInTransit(EncryptionInTransitConfig.builder()\n                .clientBroker(ClientBrokerEncryption.TLS)\n                .build())\n        .clientAuthentication(ClientAuthentication.sasl(SaslAuthProps.builder()\n                .iam(true)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"cluster\"), &clusterProps{\n\tclusterName: jsii.String(\"myCluster\"),\n\tkafkaVersion: msk.kafkaVersion_V2_8_1(),\n\tvpc: vpc,\n\tencryptionInTransit: &encryptionInTransitConfig{\n\t\tclientBroker: msk.clientBrokerEncryption_TLS,\n\t},\n\tclientAuthentication: msk.clientAuthentication.sasl(&saslAuthProps{\n\t\tiam: jsii.Boolean(true),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    iam: true,\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-msk"
        },
        "field": {
          "field": "markdown",
          "line": 138
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-msk.ClientAuthentication",
        "@aws-cdk/aws-msk.ClientAuthentication#sasl",
        "@aws-cdk/aws-msk.ClientBrokerEncryption",
        "@aws-cdk/aws-msk.ClientBrokerEncryption#TLS",
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.ClusterProps",
        "@aws-cdk/aws-msk.EncryptionInTransitConfig",
        "@aws-cdk/aws-msk.KafkaVersion",
        "@aws-cdk/aws-msk.KafkaVersion#V2_8_1",
        "@aws-cdk/aws-msk.SaslAuthProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    iam: true,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 22,
        "104": 1,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 7,
        "196": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 6,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "91ed9999a6558234287a8e8dc81c788a786323117bd0d7e5d87837b592b70766"
    },
    "2316c4d687c15452fa5db96ebddd45d342d0b3d7c956559609da6f6fc8e92049": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\nimport aws_cdk.aws_msk as msk\nimport aws_cdk.aws_s3 as s3\n\n# bucket: s3.Bucket\n# log_group: logs.LogGroup\n\nbroker_logging = msk.BrokerLogging(\n    cloudwatch_log_group=log_group,\n    firehose_delivery_stream_name=\"firehoseDeliveryStreamName\",\n    s3=msk.S3LoggingConfiguration(\n        bucket=bucket,\n\n        # the properties below are optional\n        prefix=\"prefix\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\nusing Amazon.CDK.AWS.MSK;\nusing Amazon.CDK.AWS.S3;\n\nBucket bucket;\nLogGroup logGroup;\n\nBrokerLogging brokerLogging = new BrokerLogging {\n    CloudwatchLogGroup = logGroup,\n    FirehoseDeliveryStreamName = \"firehoseDeliveryStreamName\",\n    S3 = new S3LoggingConfiguration {\n        Bucket = bucket,\n\n        // the properties below are optional\n        Prefix = \"prefix\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\nimport software.amazon.awscdk.services.msk.*;\nimport software.amazon.awscdk.services.s3.*;\n\nBucket bucket;\nLogGroup logGroup;\n\nBrokerLogging brokerLogging = BrokerLogging.builder()\n        .cloudwatchLogGroup(logGroup)\n        .firehoseDeliveryStreamName(\"firehoseDeliveryStreamName\")\n        .s3(S3LoggingConfiguration.builder()\n                .bucket(bucket)\n\n                // the properties below are optional\n                .prefix(\"prefix\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\nimport s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar bucket bucket\nvar logGroup logGroup\n\nbrokerLogging := &brokerLogging{\n\tcloudwatchLogGroup: logGroup,\n\tfirehoseDeliveryStreamName: jsii.String(\"firehoseDeliveryStreamName\"),\n\ts3: &s3LoggingConfiguration{\n\t\tbucket: bucket,\n\n\t\t// the properties below are optional\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\ndeclare const logGroup: logs.LogGroup;\nconst brokerLogging: msk.BrokerLogging = {\n  cloudwatchLogGroup: logGroup,\n  firehoseDeliveryStreamName: 'firehoseDeliveryStreamName',\n  s3: {\n    bucket: bucket,\n\n    // the properties below are optional\n    prefix: 'prefix',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.BrokerLogging"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-logs.ILogGroup",
        "@aws-cdk/aws-msk.BrokerLogging",
        "@aws-cdk/aws-msk.S3LoggingConfiguration",
        "@aws-cdk/aws-s3.IBucket"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\ndeclare const logGroup: logs.LogGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst brokerLogging: msk.BrokerLogging = {\n  cloudwatchLogGroup: logGroup,\n  firehoseDeliveryStreamName: 'firehoseDeliveryStreamName',\n  s3: {\n    bucket: bucket,\n\n    // the properties below are optional\n    prefix: 'prefix',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 19,
        "130": 2,
        "153": 3,
        "169": 3,
        "193": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "21c2c16914497f06dbdc995c117d7171eeee73414f2b50fd743bdccffe7fefa5"
    },
    "aa0b6e3822effdc08d797bd601bda1c9735aba8c672bc76d554ca12ed112b1b1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\ncfn_batch_scram_secret = msk.CfnBatchScramSecret(self, \"MyCfnBatchScramSecret\",\n    cluster_arn=\"clusterArn\",\n\n    # the properties below are optional\n    secret_arn_list=[\"secretArnList\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nCfnBatchScramSecret cfnBatchScramSecret = new CfnBatchScramSecret(this, \"MyCfnBatchScramSecret\", new CfnBatchScramSecretProps {\n    ClusterArn = \"clusterArn\",\n\n    // the properties below are optional\n    SecretArnList = new [] { \"secretArnList\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nCfnBatchScramSecret cfnBatchScramSecret = CfnBatchScramSecret.Builder.create(this, \"MyCfnBatchScramSecret\")\n        .clusterArn(\"clusterArn\")\n\n        // the properties below are optional\n        .secretArnList(List.of(\"secretArnList\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\ncfnBatchScramSecret := msk.NewCfnBatchScramSecret(this, jsii.String(\"MyCfnBatchScramSecret\"), &cfnBatchScramSecretProps{\n\tclusterArn: jsii.String(\"clusterArn\"),\n\n\t// the properties below are optional\n\tsecretArnList: []*string{\n\t\tjsii.String(\"secretArnList\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst cfnBatchScramSecret = new msk.CfnBatchScramSecret(this, 'MyCfnBatchScramSecret', {\n  clusterArn: 'clusterArn',\n\n  // the properties below are optional\n  secretArnList: ['secretArnList'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnBatchScramSecret"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnBatchScramSecret",
        "@aws-cdk/aws-msk.CfnBatchScramSecretProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnBatchScramSecret = new msk.CfnBatchScramSecret(this, 'MyCfnBatchScramSecret', {\n  clusterArn: 'clusterArn',\n\n  // the properties below are optional\n  secretArnList: ['secretArnList'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 6,
        "104": 1,
        "192": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "b82f16aa211122ddf59d049ed2063a40e73657dd358114f52e2c391052b32d37"
    },
    "eb19f3376ae1e0133ecbd667658c2c8677f2aa4a184da9c6de8d05e2fa93d256": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\ncfn_batch_scram_secret_props = msk.CfnBatchScramSecretProps(\n    cluster_arn=\"clusterArn\",\n\n    # the properties below are optional\n    secret_arn_list=[\"secretArnList\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nCfnBatchScramSecretProps cfnBatchScramSecretProps = new CfnBatchScramSecretProps {\n    ClusterArn = \"clusterArn\",\n\n    // the properties below are optional\n    SecretArnList = new [] { \"secretArnList\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nCfnBatchScramSecretProps cfnBatchScramSecretProps = CfnBatchScramSecretProps.builder()\n        .clusterArn(\"clusterArn\")\n\n        // the properties below are optional\n        .secretArnList(List.of(\"secretArnList\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\ncfnBatchScramSecretProps := &cfnBatchScramSecretProps{\n\tclusterArn: jsii.String(\"clusterArn\"),\n\n\t// the properties below are optional\n\tsecretArnList: []*string{\n\t\tjsii.String(\"secretArnList\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst cfnBatchScramSecretProps: msk.CfnBatchScramSecretProps = {\n  clusterArn: 'clusterArn',\n\n  // the properties below are optional\n  secretArnList: ['secretArnList'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnBatchScramSecretProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnBatchScramSecretProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnBatchScramSecretProps: msk.CfnBatchScramSecretProps = {\n  clusterArn: 'clusterArn',\n\n  // the properties below are optional\n  secretArnList: ['secretArnList'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "75a3c72986bce170a3f4554e7677fc1486377f2ff52b3bdb639df188243225e1"
    },
    "87c2d467eba9b26c6dfaa80b721485e05930f4eb2e9b59c4ccd3803980fd6b13": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\ncfn_cluster = msk.CfnCluster(self, \"MyCfnCluster\",\n    broker_node_group_info=msk.CfnCluster.BrokerNodeGroupInfoProperty(\n        client_subnets=[\"clientSubnets\"],\n        instance_type=\"instanceType\",\n\n        # the properties below are optional\n        broker_az_distribution=\"brokerAzDistribution\",\n        connectivity_info=msk.CfnCluster.ConnectivityInfoProperty(\n            public_access=msk.CfnCluster.PublicAccessProperty(\n                type=\"type\"\n            )\n        ),\n        security_groups=[\"securityGroups\"],\n        storage_info=msk.CfnCluster.StorageInfoProperty(\n            ebs_storage_info=msk.CfnCluster.EBSStorageInfoProperty(\n                provisioned_throughput=msk.CfnCluster.ProvisionedThroughputProperty(\n                    enabled=False,\n                    volume_throughput=123\n                ),\n                volume_size=123\n            )\n        )\n    ),\n    cluster_name=\"clusterName\",\n    kafka_version=\"kafkaVersion\",\n    number_of_broker_nodes=123,\n\n    # the properties below are optional\n    client_authentication=msk.CfnCluster.ClientAuthenticationProperty(\n        sasl=msk.CfnCluster.SaslProperty(\n            iam=msk.CfnCluster.IamProperty(\n                enabled=False\n            ),\n            scram=msk.CfnCluster.ScramProperty(\n                enabled=False\n            )\n        ),\n        tls=msk.CfnCluster.TlsProperty(\n            certificate_authority_arn_list=[\"certificateAuthorityArnList\"],\n            enabled=False\n        ),\n        unauthenticated=msk.CfnCluster.UnauthenticatedProperty(\n            enabled=False\n        )\n    ),\n    configuration_info=msk.CfnCluster.ConfigurationInfoProperty(\n        arn=\"arn\",\n        revision=123\n    ),\n    current_version=\"currentVersion\",\n    encryption_info=msk.CfnCluster.EncryptionInfoProperty(\n        encryption_at_rest=msk.CfnCluster.EncryptionAtRestProperty(\n            data_volume_kms_key_id=\"dataVolumeKmsKeyId\"\n        ),\n        encryption_in_transit=msk.CfnCluster.EncryptionInTransitProperty(\n            client_broker=\"clientBroker\",\n            in_cluster=False\n        )\n    ),\n    enhanced_monitoring=\"enhancedMonitoring\",\n    logging_info=msk.CfnCluster.LoggingInfoProperty(\n        broker_logs=msk.CfnCluster.BrokerLogsProperty(\n            cloud_watch_logs=msk.CfnCluster.CloudWatchLogsProperty(\n                enabled=False,\n\n                # the properties below are optional\n                log_group=\"logGroup\"\n            ),\n            firehose=msk.CfnCluster.FirehoseProperty(\n                enabled=False,\n\n                # the properties below are optional\n                delivery_stream=\"deliveryStream\"\n            ),\n            s3=msk.CfnCluster.S3Property(\n                enabled=False,\n\n                # the properties below are optional\n                bucket=\"bucket\",\n                prefix=\"prefix\"\n            )\n        )\n    ),\n    open_monitoring=msk.CfnCluster.OpenMonitoringProperty(\n        prometheus=msk.CfnCluster.PrometheusProperty(\n            jmx_exporter=msk.CfnCluster.JmxExporterProperty(\n                enabled_in_broker=False\n            ),\n            node_exporter=msk.CfnCluster.NodeExporterProperty(\n                enabled_in_broker=False\n            )\n        )\n    ),\n    tags={\n        \"tags_key\": \"tags\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nCfnCluster cfnCluster = new CfnCluster(this, \"MyCfnCluster\", new CfnClusterProps {\n    BrokerNodeGroupInfo = new BrokerNodeGroupInfoProperty {\n        ClientSubnets = new [] { \"clientSubnets\" },\n        InstanceType = \"instanceType\",\n\n        // the properties below are optional\n        BrokerAzDistribution = \"brokerAzDistribution\",\n        ConnectivityInfo = new ConnectivityInfoProperty {\n            PublicAccess = new PublicAccessProperty {\n                Type = \"type\"\n            }\n        },\n        SecurityGroups = new [] { \"securityGroups\" },\n        StorageInfo = new StorageInfoProperty {\n            EbsStorageInfo = new EBSStorageInfoProperty {\n                ProvisionedThroughput = new ProvisionedThroughputProperty {\n                    Enabled = false,\n                    VolumeThroughput = 123\n                },\n                VolumeSize = 123\n            }\n        }\n    },\n    ClusterName = \"clusterName\",\n    KafkaVersion = \"kafkaVersion\",\n    NumberOfBrokerNodes = 123,\n\n    // the properties below are optional\n    ClientAuthentication = new ClientAuthenticationProperty {\n        Sasl = new SaslProperty {\n            Iam = new IamProperty {\n                Enabled = false\n            },\n            Scram = new ScramProperty {\n                Enabled = false\n            }\n        },\n        Tls = new TlsProperty {\n            CertificateAuthorityArnList = new [] { \"certificateAuthorityArnList\" },\n            Enabled = false\n        },\n        Unauthenticated = new UnauthenticatedProperty {\n            Enabled = false\n        }\n    },\n    ConfigurationInfo = new ConfigurationInfoProperty {\n        Arn = \"arn\",\n        Revision = 123\n    },\n    CurrentVersion = \"currentVersion\",\n    EncryptionInfo = new EncryptionInfoProperty {\n        EncryptionAtRest = new EncryptionAtRestProperty {\n            DataVolumeKmsKeyId = \"dataVolumeKmsKeyId\"\n        },\n        EncryptionInTransit = new EncryptionInTransitProperty {\n            ClientBroker = \"clientBroker\",\n            InCluster = false\n        }\n    },\n    EnhancedMonitoring = \"enhancedMonitoring\",\n    LoggingInfo = new LoggingInfoProperty {\n        BrokerLogs = new BrokerLogsProperty {\n            CloudWatchLogs = new CloudWatchLogsProperty {\n                Enabled = false,\n\n                // the properties below are optional\n                LogGroup = \"logGroup\"\n            },\n            Firehose = new FirehoseProperty {\n                Enabled = false,\n\n                // the properties below are optional\n                DeliveryStream = \"deliveryStream\"\n            },\n            S3 = new S3Property {\n                Enabled = false,\n\n                // the properties below are optional\n                Bucket = \"bucket\",\n                Prefix = \"prefix\"\n            }\n        }\n    },\n    OpenMonitoring = new OpenMonitoringProperty {\n        Prometheus = new PrometheusProperty {\n            JmxExporter = new JmxExporterProperty {\n                EnabledInBroker = false\n            },\n            NodeExporter = new NodeExporterProperty {\n                EnabledInBroker = false\n            }\n        }\n    },\n    Tags = new Dictionary<string, string> {\n        { \"tagsKey\", \"tags\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nCfnCluster cfnCluster = CfnCluster.Builder.create(this, \"MyCfnCluster\")\n        .brokerNodeGroupInfo(BrokerNodeGroupInfoProperty.builder()\n                .clientSubnets(List.of(\"clientSubnets\"))\n                .instanceType(\"instanceType\")\n\n                // the properties below are optional\n                .brokerAzDistribution(\"brokerAzDistribution\")\n                .connectivityInfo(ConnectivityInfoProperty.builder()\n                        .publicAccess(PublicAccessProperty.builder()\n                                .type(\"type\")\n                                .build())\n                        .build())\n                .securityGroups(List.of(\"securityGroups\"))\n                .storageInfo(StorageInfoProperty.builder()\n                        .ebsStorageInfo(EBSStorageInfoProperty.builder()\n                                .provisionedThroughput(ProvisionedThroughputProperty.builder()\n                                        .enabled(false)\n                                        .volumeThroughput(123)\n                                        .build())\n                                .volumeSize(123)\n                                .build())\n                        .build())\n                .build())\n        .clusterName(\"clusterName\")\n        .kafkaVersion(\"kafkaVersion\")\n        .numberOfBrokerNodes(123)\n\n        // the properties below are optional\n        .clientAuthentication(ClientAuthenticationProperty.builder()\n                .sasl(SaslProperty.builder()\n                        .iam(IamProperty.builder()\n                                .enabled(false)\n                                .build())\n                        .scram(ScramProperty.builder()\n                                .enabled(false)\n                                .build())\n                        .build())\n                .tls(TlsProperty.builder()\n                        .certificateAuthorityArnList(List.of(\"certificateAuthorityArnList\"))\n                        .enabled(false)\n                        .build())\n                .unauthenticated(UnauthenticatedProperty.builder()\n                        .enabled(false)\n                        .build())\n                .build())\n        .configurationInfo(ConfigurationInfoProperty.builder()\n                .arn(\"arn\")\n                .revision(123)\n                .build())\n        .currentVersion(\"currentVersion\")\n        .encryptionInfo(EncryptionInfoProperty.builder()\n                .encryptionAtRest(EncryptionAtRestProperty.builder()\n                        .dataVolumeKmsKeyId(\"dataVolumeKmsKeyId\")\n                        .build())\n                .encryptionInTransit(EncryptionInTransitProperty.builder()\n                        .clientBroker(\"clientBroker\")\n                        .inCluster(false)\n                        .build())\n                .build())\n        .enhancedMonitoring(\"enhancedMonitoring\")\n        .loggingInfo(LoggingInfoProperty.builder()\n                .brokerLogs(BrokerLogsProperty.builder()\n                        .cloudWatchLogs(CloudWatchLogsProperty.builder()\n                                .enabled(false)\n\n                                // the properties below are optional\n                                .logGroup(\"logGroup\")\n                                .build())\n                        .firehose(FirehoseProperty.builder()\n                                .enabled(false)\n\n                                // the properties below are optional\n                                .deliveryStream(\"deliveryStream\")\n                                .build())\n                        .s3(S3Property.builder()\n                                .enabled(false)\n\n                                // the properties below are optional\n                                .bucket(\"bucket\")\n                                .prefix(\"prefix\")\n                                .build())\n                        .build())\n                .build())\n        .openMonitoring(OpenMonitoringProperty.builder()\n                .prometheus(PrometheusProperty.builder()\n                        .jmxExporter(JmxExporterProperty.builder()\n                                .enabledInBroker(false)\n                                .build())\n                        .nodeExporter(NodeExporterProperty.builder()\n                                .enabledInBroker(false)\n                                .build())\n                        .build())\n                .build())\n        .tags(Map.of(\n                \"tagsKey\", \"tags\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\ncfnCluster := msk.NewCfnCluster(this, jsii.String(\"MyCfnCluster\"), &cfnClusterProps{\n\tbrokerNodeGroupInfo: &brokerNodeGroupInfoProperty{\n\t\tclientSubnets: []*string{\n\t\t\tjsii.String(\"clientSubnets\"),\n\t\t},\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\n\t\t// the properties below are optional\n\t\tbrokerAzDistribution: jsii.String(\"brokerAzDistribution\"),\n\t\tconnectivityInfo: &connectivityInfoProperty{\n\t\t\tpublicAccess: &publicAccessProperty{\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t\tsecurityGroups: []*string{\n\t\t\tjsii.String(\"securityGroups\"),\n\t\t},\n\t\tstorageInfo: &storageInfoProperty{\n\t\t\tebsStorageInfo: &eBSStorageInfoProperty{\n\t\t\t\tprovisionedThroughput: &provisionedThroughputProperty{\n\t\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\t\tvolumeThroughput: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tvolumeSize: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\tclusterName: jsii.String(\"clusterName\"),\n\tkafkaVersion: jsii.String(\"kafkaVersion\"),\n\tnumberOfBrokerNodes: jsii.Number(123),\n\n\t// the properties below are optional\n\tclientAuthentication: &clientAuthenticationProperty{\n\t\tsasl: &saslProperty{\n\t\t\tiam: &iamProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\tscram: &scramProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t\ttls: &tlsProperty{\n\t\t\tcertificateAuthorityArnList: []*string{\n\t\t\t\tjsii.String(\"certificateAuthorityArnList\"),\n\t\t\t},\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tunauthenticated: &unauthenticatedProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t},\n\tconfigurationInfo: &configurationInfoProperty{\n\t\tarn: jsii.String(\"arn\"),\n\t\trevision: jsii.Number(123),\n\t},\n\tcurrentVersion: jsii.String(\"currentVersion\"),\n\tencryptionInfo: &encryptionInfoProperty{\n\t\tencryptionAtRest: &encryptionAtRestProperty{\n\t\t\tdataVolumeKmsKeyId: jsii.String(\"dataVolumeKmsKeyId\"),\n\t\t},\n\t\tencryptionInTransit: &encryptionInTransitProperty{\n\t\t\tclientBroker: jsii.String(\"clientBroker\"),\n\t\t\tinCluster: jsii.Boolean(false),\n\t\t},\n\t},\n\tenhancedMonitoring: jsii.String(\"enhancedMonitoring\"),\n\tloggingInfo: &loggingInfoProperty{\n\t\tbrokerLogs: &brokerLogsProperty{\n\t\t\tcloudWatchLogs: &cloudWatchLogsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tlogGroup: jsii.String(\"logGroup\"),\n\t\t\t},\n\t\t\tfirehose: &firehoseProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tdeliveryStream: jsii.String(\"deliveryStream\"),\n\t\t\t},\n\t\t\ts3: &s3Property{\n\t\t\t\tenabled: jsii.Boolean(false),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbucket: jsii.String(\"bucket\"),\n\t\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t\t},\n\t\t},\n\t},\n\topenMonitoring: &openMonitoringProperty{\n\t\tprometheus: &prometheusProperty{\n\t\t\tjmxExporter: &jmxExporterProperty{\n\t\t\t\tenabledInBroker: jsii.Boolean(false),\n\t\t\t},\n\t\t\tnodeExporter: &nodeExporterProperty{\n\t\t\t\tenabledInBroker: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t},\n\ttags: map[string]*string{\n\t\t\"tagsKey\": jsii.String(\"tags\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst cfnCluster = new msk.CfnCluster(this, 'MyCfnCluster', {\n  brokerNodeGroupInfo: {\n    clientSubnets: ['clientSubnets'],\n    instanceType: 'instanceType',\n\n    // the properties below are optional\n    brokerAzDistribution: 'brokerAzDistribution',\n    connectivityInfo: {\n      publicAccess: {\n        type: 'type',\n      },\n    },\n    securityGroups: ['securityGroups'],\n    storageInfo: {\n      ebsStorageInfo: {\n        provisionedThroughput: {\n          enabled: false,\n          volumeThroughput: 123,\n        },\n        volumeSize: 123,\n      },\n    },\n  },\n  clusterName: 'clusterName',\n  kafkaVersion: 'kafkaVersion',\n  numberOfBrokerNodes: 123,\n\n  // the properties below are optional\n  clientAuthentication: {\n    sasl: {\n      iam: {\n        enabled: false,\n      },\n      scram: {\n        enabled: false,\n      },\n    },\n    tls: {\n      certificateAuthorityArnList: ['certificateAuthorityArnList'],\n      enabled: false,\n    },\n    unauthenticated: {\n      enabled: false,\n    },\n  },\n  configurationInfo: {\n    arn: 'arn',\n    revision: 123,\n  },\n  currentVersion: 'currentVersion',\n  encryptionInfo: {\n    encryptionAtRest: {\n      dataVolumeKmsKeyId: 'dataVolumeKmsKeyId',\n    },\n    encryptionInTransit: {\n      clientBroker: 'clientBroker',\n      inCluster: false,\n    },\n  },\n  enhancedMonitoring: 'enhancedMonitoring',\n  loggingInfo: {\n    brokerLogs: {\n      cloudWatchLogs: {\n        enabled: false,\n\n        // the properties below are optional\n        logGroup: 'logGroup',\n      },\n      firehose: {\n        enabled: false,\n\n        // the properties below are optional\n        deliveryStream: 'deliveryStream',\n      },\n      s3: {\n        enabled: false,\n\n        // the properties below are optional\n        bucket: 'bucket',\n        prefix: 'prefix',\n      },\n    },\n  },\n  openMonitoring: {\n    prometheus: {\n      jmxExporter: {\n        enabledInBroker: false,\n      },\n      nodeExporter: {\n        enabledInBroker: false,\n      },\n    },\n  },\n  tags: {\n    tagsKey: 'tags',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster",
        "@aws-cdk/aws-msk.CfnClusterProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCluster = new msk.CfnCluster(this, 'MyCfnCluster', {\n  brokerNodeGroupInfo: {\n    clientSubnets: ['clientSubnets'],\n    instanceType: 'instanceType',\n\n    // the properties below are optional\n    brokerAzDistribution: 'brokerAzDistribution',\n    connectivityInfo: {\n      publicAccess: {\n        type: 'type',\n      },\n    },\n    securityGroups: ['securityGroups'],\n    storageInfo: {\n      ebsStorageInfo: {\n        provisionedThroughput: {\n          enabled: false,\n          volumeThroughput: 123,\n        },\n        volumeSize: 123,\n      },\n    },\n  },\n  clusterName: 'clusterName',\n  kafkaVersion: 'kafkaVersion',\n  numberOfBrokerNodes: 123,\n\n  // the properties below are optional\n  clientAuthentication: {\n    sasl: {\n      iam: {\n        enabled: false,\n      },\n      scram: {\n        enabled: false,\n      },\n    },\n    tls: {\n      certificateAuthorityArnList: ['certificateAuthorityArnList'],\n      enabled: false,\n    },\n    unauthenticated: {\n      enabled: false,\n    },\n  },\n  configurationInfo: {\n    arn: 'arn',\n    revision: 123,\n  },\n  currentVersion: 'currentVersion',\n  encryptionInfo: {\n    encryptionAtRest: {\n      dataVolumeKmsKeyId: 'dataVolumeKmsKeyId',\n    },\n    encryptionInTransit: {\n      clientBroker: 'clientBroker',\n      inCluster: false,\n    },\n  },\n  enhancedMonitoring: 'enhancedMonitoring',\n  loggingInfo: {\n    brokerLogs: {\n      cloudWatchLogs: {\n        enabled: false,\n\n        // the properties below are optional\n        logGroup: 'logGroup',\n      },\n      firehose: {\n        enabled: false,\n\n        // the properties below are optional\n        deliveryStream: 'deliveryStream',\n      },\n      s3: {\n        enabled: false,\n\n        // the properties below are optional\n        bucket: 'bucket',\n        prefix: 'prefix',\n      },\n    },\n  },\n  openMonitoring: {\n    prometheus: {\n      jmxExporter: {\n        enabledInBroker: false,\n      },\n      nodeExporter: {\n        enabledInBroker: false,\n      },\n    },\n  },\n  tags: {\n    tagsKey: 'tags',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 20,
        "75": 63,
        "91": 11,
        "104": 1,
        "192": 3,
        "193": 27,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 59,
        "290": 1
      },
      "fqnsFingerprint": "328410120652775d63e47b0f7e1dc6cbf11da31782752f2380ffb22ff812ac25"
    },
    "fa5557fd1595f2a227dc570ec73ed6af1c6962d4e468445206a4a120b03e8792": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nbroker_logs_property = msk.CfnCluster.BrokerLogsProperty(\n    cloud_watch_logs=msk.CfnCluster.CloudWatchLogsProperty(\n        enabled=False,\n\n        # the properties below are optional\n        log_group=\"logGroup\"\n    ),\n    firehose=msk.CfnCluster.FirehoseProperty(\n        enabled=False,\n\n        # the properties below are optional\n        delivery_stream=\"deliveryStream\"\n    ),\n    s3=msk.CfnCluster.S3Property(\n        enabled=False,\n\n        # the properties below are optional\n        bucket=\"bucket\",\n        prefix=\"prefix\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nBrokerLogsProperty brokerLogsProperty = new BrokerLogsProperty {\n    CloudWatchLogs = new CloudWatchLogsProperty {\n        Enabled = false,\n\n        // the properties below are optional\n        LogGroup = \"logGroup\"\n    },\n    Firehose = new FirehoseProperty {\n        Enabled = false,\n\n        // the properties below are optional\n        DeliveryStream = \"deliveryStream\"\n    },\n    S3 = new S3Property {\n        Enabled = false,\n\n        // the properties below are optional\n        Bucket = \"bucket\",\n        Prefix = \"prefix\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nBrokerLogsProperty brokerLogsProperty = BrokerLogsProperty.builder()\n        .cloudWatchLogs(CloudWatchLogsProperty.builder()\n                .enabled(false)\n\n                // the properties below are optional\n                .logGroup(\"logGroup\")\n                .build())\n        .firehose(FirehoseProperty.builder()\n                .enabled(false)\n\n                // the properties below are optional\n                .deliveryStream(\"deliveryStream\")\n                .build())\n        .s3(S3Property.builder()\n                .enabled(false)\n\n                // the properties below are optional\n                .bucket(\"bucket\")\n                .prefix(\"prefix\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nbrokerLogsProperty := &brokerLogsProperty{\n\tcloudWatchLogs: &cloudWatchLogsProperty{\n\t\tenabled: jsii.Boolean(false),\n\n\t\t// the properties below are optional\n\t\tlogGroup: jsii.String(\"logGroup\"),\n\t},\n\tfirehose: &firehoseProperty{\n\t\tenabled: jsii.Boolean(false),\n\n\t\t// the properties below are optional\n\t\tdeliveryStream: jsii.String(\"deliveryStream\"),\n\t},\n\ts3: &s3Property{\n\t\tenabled: jsii.Boolean(false),\n\n\t\t// the properties below are optional\n\t\tbucket: jsii.String(\"bucket\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst brokerLogsProperty: msk.CfnCluster.BrokerLogsProperty = {\n  cloudWatchLogs: {\n    enabled: false,\n\n    // the properties below are optional\n    logGroup: 'logGroup',\n  },\n  firehose: {\n    enabled: false,\n\n    // the properties below are optional\n    deliveryStream: 'deliveryStream',\n  },\n  s3: {\n    enabled: false,\n\n    // the properties below are optional\n    bucket: 'bucket',\n    prefix: 'prefix',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.BrokerLogsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.BrokerLogsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst brokerLogsProperty: msk.CfnCluster.BrokerLogsProperty = {\n  cloudWatchLogs: {\n    enabled: false,\n\n    // the properties below are optional\n    logGroup: 'logGroup',\n  },\n  firehose: {\n    enabled: false,\n\n    // the properties below are optional\n    deliveryStream: 'deliveryStream',\n  },\n  s3: {\n    enabled: false,\n\n    // the properties below are optional\n    bucket: 'bucket',\n    prefix: 'prefix',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 15,
        "91": 3,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 10,
        "290": 1
      },
      "fqnsFingerprint": "b187a5bd635f91b0d07b2043873b92e6baacf134c5dbe6e7065b37911869ec2e"
    },
    "133d5260b5af7dee9de607b5e7088a389de0b1b4b4e532ed1c2f1e6c6a785c75": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nbroker_node_group_info_property = msk.CfnCluster.BrokerNodeGroupInfoProperty(\n    client_subnets=[\"clientSubnets\"],\n    instance_type=\"instanceType\",\n\n    # the properties below are optional\n    broker_az_distribution=\"brokerAzDistribution\",\n    connectivity_info=msk.CfnCluster.ConnectivityInfoProperty(\n        public_access=msk.CfnCluster.PublicAccessProperty(\n            type=\"type\"\n        )\n    ),\n    security_groups=[\"securityGroups\"],\n    storage_info=msk.CfnCluster.StorageInfoProperty(\n        ebs_storage_info=msk.CfnCluster.EBSStorageInfoProperty(\n            provisioned_throughput=msk.CfnCluster.ProvisionedThroughputProperty(\n                enabled=False,\n                volume_throughput=123\n            ),\n            volume_size=123\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nBrokerNodeGroupInfoProperty brokerNodeGroupInfoProperty = new BrokerNodeGroupInfoProperty {\n    ClientSubnets = new [] { \"clientSubnets\" },\n    InstanceType = \"instanceType\",\n\n    // the properties below are optional\n    BrokerAzDistribution = \"brokerAzDistribution\",\n    ConnectivityInfo = new ConnectivityInfoProperty {\n        PublicAccess = new PublicAccessProperty {\n            Type = \"type\"\n        }\n    },\n    SecurityGroups = new [] { \"securityGroups\" },\n    StorageInfo = new StorageInfoProperty {\n        EbsStorageInfo = new EBSStorageInfoProperty {\n            ProvisionedThroughput = new ProvisionedThroughputProperty {\n                Enabled = false,\n                VolumeThroughput = 123\n            },\n            VolumeSize = 123\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nBrokerNodeGroupInfoProperty brokerNodeGroupInfoProperty = BrokerNodeGroupInfoProperty.builder()\n        .clientSubnets(List.of(\"clientSubnets\"))\n        .instanceType(\"instanceType\")\n\n        // the properties below are optional\n        .brokerAzDistribution(\"brokerAzDistribution\")\n        .connectivityInfo(ConnectivityInfoProperty.builder()\n                .publicAccess(PublicAccessProperty.builder()\n                        .type(\"type\")\n                        .build())\n                .build())\n        .securityGroups(List.of(\"securityGroups\"))\n        .storageInfo(StorageInfoProperty.builder()\n                .ebsStorageInfo(EBSStorageInfoProperty.builder()\n                        .provisionedThroughput(ProvisionedThroughputProperty.builder()\n                                .enabled(false)\n                                .volumeThroughput(123)\n                                .build())\n                        .volumeSize(123)\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nbrokerNodeGroupInfoProperty := &brokerNodeGroupInfoProperty{\n\tclientSubnets: []*string{\n\t\tjsii.String(\"clientSubnets\"),\n\t},\n\tinstanceType: jsii.String(\"instanceType\"),\n\n\t// the properties below are optional\n\tbrokerAzDistribution: jsii.String(\"brokerAzDistribution\"),\n\tconnectivityInfo: &connectivityInfoProperty{\n\t\tpublicAccess: &publicAccessProperty{\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n\tsecurityGroups: []*string{\n\t\tjsii.String(\"securityGroups\"),\n\t},\n\tstorageInfo: &storageInfoProperty{\n\t\tebsStorageInfo: &eBSStorageInfoProperty{\n\t\t\tprovisionedThroughput: &provisionedThroughputProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tvolumeThroughput: jsii.Number(123),\n\t\t\t},\n\t\t\tvolumeSize: jsii.Number(123),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst brokerNodeGroupInfoProperty: msk.CfnCluster.BrokerNodeGroupInfoProperty = {\n  clientSubnets: ['clientSubnets'],\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  brokerAzDistribution: 'brokerAzDistribution',\n  connectivityInfo: {\n    publicAccess: {\n      type: 'type',\n    },\n  },\n  securityGroups: ['securityGroups'],\n  storageInfo: {\n    ebsStorageInfo: {\n      provisionedThroughput: {\n        enabled: false,\n        volumeThroughput: 123,\n      },\n      volumeSize: 123,\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.BrokerNodeGroupInfoProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.BrokerNodeGroupInfoProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst brokerNodeGroupInfoProperty: msk.CfnCluster.BrokerNodeGroupInfoProperty = {\n  clientSubnets: ['clientSubnets'],\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  brokerAzDistribution: 'brokerAzDistribution',\n  connectivityInfo: {\n    publicAccess: {\n      type: 'type',\n    },\n  },\n  securityGroups: ['securityGroups'],\n  storageInfo: {\n    ebsStorageInfo: {\n      provisionedThroughput: {\n        enabled: false,\n        volumeThroughput: 123,\n      },\n      volumeSize: 123,\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 6,
        "75": 18,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 6,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "87f4ebd322d6586655a036584db781fd6f08ca45a1ae0625559522a93fd3b502"
    },
    "2bb2bad074f6422fca0f02b839f11eccd5a847aa102cdfef267eba3ba0c3c3a8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nclient_authentication_property = msk.CfnCluster.ClientAuthenticationProperty(\n    sasl=msk.CfnCluster.SaslProperty(\n        iam=msk.CfnCluster.IamProperty(\n            enabled=False\n        ),\n        scram=msk.CfnCluster.ScramProperty(\n            enabled=False\n        )\n    ),\n    tls=msk.CfnCluster.TlsProperty(\n        certificate_authority_arn_list=[\"certificateAuthorityArnList\"],\n        enabled=False\n    ),\n    unauthenticated=msk.CfnCluster.UnauthenticatedProperty(\n        enabled=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nClientAuthenticationProperty clientAuthenticationProperty = new ClientAuthenticationProperty {\n    Sasl = new SaslProperty {\n        Iam = new IamProperty {\n            Enabled = false\n        },\n        Scram = new ScramProperty {\n            Enabled = false\n        }\n    },\n    Tls = new TlsProperty {\n        CertificateAuthorityArnList = new [] { \"certificateAuthorityArnList\" },\n        Enabled = false\n    },\n    Unauthenticated = new UnauthenticatedProperty {\n        Enabled = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nClientAuthenticationProperty clientAuthenticationProperty = ClientAuthenticationProperty.builder()\n        .sasl(SaslProperty.builder()\n                .iam(IamProperty.builder()\n                        .enabled(false)\n                        .build())\n                .scram(ScramProperty.builder()\n                        .enabled(false)\n                        .build())\n                .build())\n        .tls(TlsProperty.builder()\n                .certificateAuthorityArnList(List.of(\"certificateAuthorityArnList\"))\n                .enabled(false)\n                .build())\n        .unauthenticated(UnauthenticatedProperty.builder()\n                .enabled(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nclientAuthenticationProperty := &clientAuthenticationProperty{\n\tsasl: &saslProperty{\n\t\tiam: &iamProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tscram: &scramProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t},\n\ttls: &tlsProperty{\n\t\tcertificateAuthorityArnList: []*string{\n\t\t\tjsii.String(\"certificateAuthorityArnList\"),\n\t\t},\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tunauthenticated: &unauthenticatedProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst clientAuthenticationProperty: msk.CfnCluster.ClientAuthenticationProperty = {\n  sasl: {\n    iam: {\n      enabled: false,\n    },\n    scram: {\n      enabled: false,\n    },\n  },\n  tls: {\n    certificateAuthorityArnList: ['certificateAuthorityArnList'],\n    enabled: false,\n  },\n  unauthenticated: {\n    enabled: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.ClientAuthenticationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.ClientAuthenticationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst clientAuthenticationProperty: msk.CfnCluster.ClientAuthenticationProperty = {\n  sasl: {\n    iam: {\n      enabled: false,\n    },\n    scram: {\n      enabled: false,\n    },\n  },\n  tls: {\n    certificateAuthorityArnList: ['certificateAuthorityArnList'],\n    enabled: false,\n  },\n  unauthenticated: {\n    enabled: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 15,
        "91": 4,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 6,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 10,
        "290": 1
      },
      "fqnsFingerprint": "85e68b0417b9ac188715861cedad12fdee35a38b41e1665460a219d075e9751a"
    },
    "c2311f7057c9d6d9ebcf2a52bef43a9c9c084eb147b0fd4cfc0008dd196875ff": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\ncloud_watch_logs_property = msk.CfnCluster.CloudWatchLogsProperty(\n    enabled=False,\n\n    # the properties below are optional\n    log_group=\"logGroup\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nCloudWatchLogsProperty cloudWatchLogsProperty = new CloudWatchLogsProperty {\n    Enabled = false,\n\n    // the properties below are optional\n    LogGroup = \"logGroup\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nCloudWatchLogsProperty cloudWatchLogsProperty = CloudWatchLogsProperty.builder()\n        .enabled(false)\n\n        // the properties below are optional\n        .logGroup(\"logGroup\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\ncloudWatchLogsProperty := &cloudWatchLogsProperty{\n\tenabled: jsii.Boolean(false),\n\n\t// the properties below are optional\n\tlogGroup: jsii.String(\"logGroup\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst cloudWatchLogsProperty: msk.CfnCluster.CloudWatchLogsProperty = {\n  enabled: false,\n\n  // the properties below are optional\n  logGroup: 'logGroup',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.CloudWatchLogsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.CloudWatchLogsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cloudWatchLogsProperty: msk.CfnCluster.CloudWatchLogsProperty = {\n  enabled: false,\n\n  // the properties below are optional\n  logGroup: 'logGroup',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1caec67b3499153485c6ef7199622a1dbd36bdeec5bc33b660167553f373b9c3"
    },
    "6611725ac2bc4e98f298b203b9c806c00887057d2a08f21d37bca1cd44d7aaa5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nconfiguration_info_property = msk.CfnCluster.ConfigurationInfoProperty(\n    arn=\"arn\",\n    revision=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nConfigurationInfoProperty configurationInfoProperty = new ConfigurationInfoProperty {\n    Arn = \"arn\",\n    Revision = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nConfigurationInfoProperty configurationInfoProperty = ConfigurationInfoProperty.builder()\n        .arn(\"arn\")\n        .revision(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nconfigurationInfoProperty := &configurationInfoProperty{\n\tarn: jsii.String(\"arn\"),\n\trevision: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst configurationInfoProperty: msk.CfnCluster.ConfigurationInfoProperty = {\n  arn: 'arn',\n  revision: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.ConfigurationInfoProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.ConfigurationInfoProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst configurationInfoProperty: msk.CfnCluster.ConfigurationInfoProperty = {\n  arn: 'arn',\n  revision: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "ca48718626a7ff47a05a074050cc165ec36273c4136990748644bb6a7ab0b1dc"
    },
    "af0f4e01b28cc81c5d2dff27bf8b0fec75da7d1f337556c9d1da79128a559f35": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nconnectivity_info_property = msk.CfnCluster.ConnectivityInfoProperty(\n    public_access=msk.CfnCluster.PublicAccessProperty(\n        type=\"type\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nConnectivityInfoProperty connectivityInfoProperty = new ConnectivityInfoProperty {\n    PublicAccess = new PublicAccessProperty {\n        Type = \"type\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nConnectivityInfoProperty connectivityInfoProperty = ConnectivityInfoProperty.builder()\n        .publicAccess(PublicAccessProperty.builder()\n                .type(\"type\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nconnectivityInfoProperty := &connectivityInfoProperty{\n\tpublicAccess: &publicAccessProperty{\n\t\ttype: jsii.String(\"type\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst connectivityInfoProperty: msk.CfnCluster.ConnectivityInfoProperty = {\n  publicAccess: {\n    type: 'type',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.ConnectivityInfoProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.ConnectivityInfoProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst connectivityInfoProperty: msk.CfnCluster.ConnectivityInfoProperty = {\n  publicAccess: {\n    type: 'type',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "cd17fb8bee1a452fdf11779cb0b3467f293edffcbdad630571596644d07f6e63"
    },
    "41b4e8a616e6595df2949848d7ff6e57f900c7c74f0552e786c8bd65a2199565": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\ne_bSStorage_info_property = msk.CfnCluster.EBSStorageInfoProperty(\n    provisioned_throughput=msk.CfnCluster.ProvisionedThroughputProperty(\n        enabled=False,\n        volume_throughput=123\n    ),\n    volume_size=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nEBSStorageInfoProperty eBSStorageInfoProperty = new EBSStorageInfoProperty {\n    ProvisionedThroughput = new ProvisionedThroughputProperty {\n        Enabled = false,\n        VolumeThroughput = 123\n    },\n    VolumeSize = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nEBSStorageInfoProperty eBSStorageInfoProperty = EBSStorageInfoProperty.builder()\n        .provisionedThroughput(ProvisionedThroughputProperty.builder()\n                .enabled(false)\n                .volumeThroughput(123)\n                .build())\n        .volumeSize(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\neBSStorageInfoProperty := &eBSStorageInfoProperty{\n\tprovisionedThroughput: &provisionedThroughputProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tvolumeThroughput: jsii.Number(123),\n\t},\n\tvolumeSize: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst eBSStorageInfoProperty: msk.CfnCluster.EBSStorageInfoProperty = {\n  provisionedThroughput: {\n    enabled: false,\n    volumeThroughput: 123,\n  },\n  volumeSize: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.EBSStorageInfoProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.EBSStorageInfoProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst eBSStorageInfoProperty: msk.CfnCluster.EBSStorageInfoProperty = {\n  provisionedThroughput: {\n    enabled: false,\n    volumeThroughput: 123,\n  },\n  volumeSize: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 9,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "86e816dd5e739a23bec5c4e104d71ad3b4ef68ee3aa55dc5ecacb9016b4aa991"
    },
    "912cd9108942663404397324f34e6539ac20f3b9b0f76cfa32b705d4fcaf234b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nencryption_at_rest_property = msk.CfnCluster.EncryptionAtRestProperty(\n    data_volume_kms_key_id=\"dataVolumeKmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nEncryptionAtRestProperty encryptionAtRestProperty = new EncryptionAtRestProperty {\n    DataVolumeKmsKeyId = \"dataVolumeKmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nEncryptionAtRestProperty encryptionAtRestProperty = EncryptionAtRestProperty.builder()\n        .dataVolumeKmsKeyId(\"dataVolumeKmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nencryptionAtRestProperty := &encryptionAtRestProperty{\n\tdataVolumeKmsKeyId: jsii.String(\"dataVolumeKmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst encryptionAtRestProperty: msk.CfnCluster.EncryptionAtRestProperty = {\n  dataVolumeKmsKeyId: 'dataVolumeKmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.EncryptionAtRestProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.EncryptionAtRestProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst encryptionAtRestProperty: msk.CfnCluster.EncryptionAtRestProperty = {\n  dataVolumeKmsKeyId: 'dataVolumeKmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "911571d643f21c5ef8a5ce305f9b9857313f5237181beb17c1674eb4ad6dccdb"
    },
    "b56bc6fdfc690b9f1f632f9c406d0a9121023d98cc3199155382ad0d096988de": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nencryption_in_transit_property = msk.CfnCluster.EncryptionInTransitProperty(\n    client_broker=\"clientBroker\",\n    in_cluster=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nEncryptionInTransitProperty encryptionInTransitProperty = new EncryptionInTransitProperty {\n    ClientBroker = \"clientBroker\",\n    InCluster = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nEncryptionInTransitProperty encryptionInTransitProperty = EncryptionInTransitProperty.builder()\n        .clientBroker(\"clientBroker\")\n        .inCluster(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nencryptionInTransitProperty := &encryptionInTransitProperty{\n\tclientBroker: jsii.String(\"clientBroker\"),\n\tinCluster: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst encryptionInTransitProperty: msk.CfnCluster.EncryptionInTransitProperty = {\n  clientBroker: 'clientBroker',\n  inCluster: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.EncryptionInTransitProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.EncryptionInTransitProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst encryptionInTransitProperty: msk.CfnCluster.EncryptionInTransitProperty = {\n  clientBroker: 'clientBroker',\n  inCluster: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "75a10aad47e409dec8742b3ac1485758f97fed99c0a4257075656eb961ab0913"
    },
    "6f3dc7a5f04b8c6d46b53ca443e08c9d01edce892293ee1ea72124c56b8f3eea": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nencryption_info_property = msk.CfnCluster.EncryptionInfoProperty(\n    encryption_at_rest=msk.CfnCluster.EncryptionAtRestProperty(\n        data_volume_kms_key_id=\"dataVolumeKmsKeyId\"\n    ),\n    encryption_in_transit=msk.CfnCluster.EncryptionInTransitProperty(\n        client_broker=\"clientBroker\",\n        in_cluster=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nEncryptionInfoProperty encryptionInfoProperty = new EncryptionInfoProperty {\n    EncryptionAtRest = new EncryptionAtRestProperty {\n        DataVolumeKmsKeyId = \"dataVolumeKmsKeyId\"\n    },\n    EncryptionInTransit = new EncryptionInTransitProperty {\n        ClientBroker = \"clientBroker\",\n        InCluster = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nEncryptionInfoProperty encryptionInfoProperty = EncryptionInfoProperty.builder()\n        .encryptionAtRest(EncryptionAtRestProperty.builder()\n                .dataVolumeKmsKeyId(\"dataVolumeKmsKeyId\")\n                .build())\n        .encryptionInTransit(EncryptionInTransitProperty.builder()\n                .clientBroker(\"clientBroker\")\n                .inCluster(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nencryptionInfoProperty := &encryptionInfoProperty{\n\tencryptionAtRest: &encryptionAtRestProperty{\n\t\tdataVolumeKmsKeyId: jsii.String(\"dataVolumeKmsKeyId\"),\n\t},\n\tencryptionInTransit: &encryptionInTransitProperty{\n\t\tclientBroker: jsii.String(\"clientBroker\"),\n\t\tinCluster: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst encryptionInfoProperty: msk.CfnCluster.EncryptionInfoProperty = {\n  encryptionAtRest: {\n    dataVolumeKmsKeyId: 'dataVolumeKmsKeyId',\n  },\n  encryptionInTransit: {\n    clientBroker: 'clientBroker',\n    inCluster: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.EncryptionInfoProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.EncryptionInfoProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst encryptionInfoProperty: msk.CfnCluster.EncryptionInfoProperty = {\n  encryptionAtRest: {\n    dataVolumeKmsKeyId: 'dataVolumeKmsKeyId',\n  },\n  encryptionInTransit: {\n    clientBroker: 'clientBroker',\n    inCluster: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "c077b21182deb387b26a9493f6e170746d554278b341c97c6d19173ef8e03710"
    },
    "73ddaa62b588849432935702d8eecd3bea50db08485967ca81495d8f2cbfa326": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nfirehose_property = msk.CfnCluster.FirehoseProperty(\n    enabled=False,\n\n    # the properties below are optional\n    delivery_stream=\"deliveryStream\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nFirehoseProperty firehoseProperty = new FirehoseProperty {\n    Enabled = false,\n\n    // the properties below are optional\n    DeliveryStream = \"deliveryStream\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nFirehoseProperty firehoseProperty = FirehoseProperty.builder()\n        .enabled(false)\n\n        // the properties below are optional\n        .deliveryStream(\"deliveryStream\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nfirehoseProperty := &firehoseProperty{\n\tenabled: jsii.Boolean(false),\n\n\t// the properties below are optional\n\tdeliveryStream: jsii.String(\"deliveryStream\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst firehoseProperty: msk.CfnCluster.FirehoseProperty = {\n  enabled: false,\n\n  // the properties below are optional\n  deliveryStream: 'deliveryStream',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.FirehoseProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.FirehoseProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst firehoseProperty: msk.CfnCluster.FirehoseProperty = {\n  enabled: false,\n\n  // the properties below are optional\n  deliveryStream: 'deliveryStream',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "794ee239d110984cd0058b56808f5f809597654de68d1e72368f142a3f56f23c"
    },
    "db2410fde7326790171f1f5716e428a922fbd34b2f8d65d6251a4649f1ba4dba": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\niam_property = msk.CfnCluster.IamProperty(\n    enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nIamProperty iamProperty = new IamProperty {\n    Enabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nIamProperty iamProperty = IamProperty.builder()\n        .enabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\niamProperty := &iamProperty{\n\tenabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst iamProperty: msk.CfnCluster.IamProperty = {\n  enabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.IamProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.IamProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst iamProperty: msk.CfnCluster.IamProperty = {\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "8fbac7f5962ce46dc170eba981474db225ba29f3df392206b244fbb35ca62288"
    },
    "928ca025af973c4750ce6aebeb539c71af6f673dcf78df031fb7b7238fad87be": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\njmx_exporter_property = msk.CfnCluster.JmxExporterProperty(\n    enabled_in_broker=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nJmxExporterProperty jmxExporterProperty = new JmxExporterProperty {\n    EnabledInBroker = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nJmxExporterProperty jmxExporterProperty = JmxExporterProperty.builder()\n        .enabledInBroker(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\njmxExporterProperty := &jmxExporterProperty{\n\tenabledInBroker: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst jmxExporterProperty: msk.CfnCluster.JmxExporterProperty = {\n  enabledInBroker: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.JmxExporterProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.JmxExporterProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jmxExporterProperty: msk.CfnCluster.JmxExporterProperty = {\n  enabledInBroker: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "07aed897230037b684263d8827f4e2162cdeb254915ac9cd73db7e11b04d1f03"
    },
    "070e9208ed3ae1038d1596cc89f2dbd8f05c452e0c48b6c15a8699ab3ef17433": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nlogging_info_property = msk.CfnCluster.LoggingInfoProperty(\n    broker_logs=msk.CfnCluster.BrokerLogsProperty(\n        cloud_watch_logs=msk.CfnCluster.CloudWatchLogsProperty(\n            enabled=False,\n\n            # the properties below are optional\n            log_group=\"logGroup\"\n        ),\n        firehose=msk.CfnCluster.FirehoseProperty(\n            enabled=False,\n\n            # the properties below are optional\n            delivery_stream=\"deliveryStream\"\n        ),\n        s3=msk.CfnCluster.S3Property(\n            enabled=False,\n\n            # the properties below are optional\n            bucket=\"bucket\",\n            prefix=\"prefix\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nLoggingInfoProperty loggingInfoProperty = new LoggingInfoProperty {\n    BrokerLogs = new BrokerLogsProperty {\n        CloudWatchLogs = new CloudWatchLogsProperty {\n            Enabled = false,\n\n            // the properties below are optional\n            LogGroup = \"logGroup\"\n        },\n        Firehose = new FirehoseProperty {\n            Enabled = false,\n\n            // the properties below are optional\n            DeliveryStream = \"deliveryStream\"\n        },\n        S3 = new S3Property {\n            Enabled = false,\n\n            // the properties below are optional\n            Bucket = \"bucket\",\n            Prefix = \"prefix\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nLoggingInfoProperty loggingInfoProperty = LoggingInfoProperty.builder()\n        .brokerLogs(BrokerLogsProperty.builder()\n                .cloudWatchLogs(CloudWatchLogsProperty.builder()\n                        .enabled(false)\n\n                        // the properties below are optional\n                        .logGroup(\"logGroup\")\n                        .build())\n                .firehose(FirehoseProperty.builder()\n                        .enabled(false)\n\n                        // the properties below are optional\n                        .deliveryStream(\"deliveryStream\")\n                        .build())\n                .s3(S3Property.builder()\n                        .enabled(false)\n\n                        // the properties below are optional\n                        .bucket(\"bucket\")\n                        .prefix(\"prefix\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nloggingInfoProperty := &loggingInfoProperty{\n\tbrokerLogs: &brokerLogsProperty{\n\t\tcloudWatchLogs: &cloudWatchLogsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\n\t\t\t// the properties below are optional\n\t\t\tlogGroup: jsii.String(\"logGroup\"),\n\t\t},\n\t\tfirehose: &firehoseProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\n\t\t\t// the properties below are optional\n\t\t\tdeliveryStream: jsii.String(\"deliveryStream\"),\n\t\t},\n\t\ts3: &s3Property{\n\t\t\tenabled: jsii.Boolean(false),\n\n\t\t\t// the properties below are optional\n\t\t\tbucket: jsii.String(\"bucket\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst loggingInfoProperty: msk.CfnCluster.LoggingInfoProperty = {\n  brokerLogs: {\n    cloudWatchLogs: {\n      enabled: false,\n\n      // the properties below are optional\n      logGroup: 'logGroup',\n    },\n    firehose: {\n      enabled: false,\n\n      // the properties below are optional\n      deliveryStream: 'deliveryStream',\n    },\n    s3: {\n      enabled: false,\n\n      // the properties below are optional\n      bucket: 'bucket',\n      prefix: 'prefix',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.LoggingInfoProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.LoggingInfoProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst loggingInfoProperty: msk.CfnCluster.LoggingInfoProperty = {\n  brokerLogs: {\n    cloudWatchLogs: {\n      enabled: false,\n\n      // the properties below are optional\n      logGroup: 'logGroup',\n    },\n    firehose: {\n      enabled: false,\n\n      // the properties below are optional\n      deliveryStream: 'deliveryStream',\n    },\n    s3: {\n      enabled: false,\n\n      // the properties below are optional\n      bucket: 'bucket',\n      prefix: 'prefix',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 16,
        "91": 3,
        "153": 2,
        "169": 1,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "c0115c7339ca4eeb14f7ea21ea093e67c48680eb96b14fefb09b90cbc0ca830b"
    },
    "c220d561b82dce2ca2a8d8f20d33a59781c042544b3d45b4c48bfd40941017b4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nnode_exporter_property = msk.CfnCluster.NodeExporterProperty(\n    enabled_in_broker=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nNodeExporterProperty nodeExporterProperty = new NodeExporterProperty {\n    EnabledInBroker = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nNodeExporterProperty nodeExporterProperty = NodeExporterProperty.builder()\n        .enabledInBroker(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nnodeExporterProperty := &nodeExporterProperty{\n\tenabledInBroker: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst nodeExporterProperty: msk.CfnCluster.NodeExporterProperty = {\n  enabledInBroker: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.NodeExporterProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.NodeExporterProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst nodeExporterProperty: msk.CfnCluster.NodeExporterProperty = {\n  enabledInBroker: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "2357d7aacd0c2cd6aed0ef7f09539dc09635bf4b5f06b06122e93f833d16f45c"
    },
    "80f0f642c4af4829772770daa4037db75ee73bcc805757bb7162dfbe57149f0c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nopen_monitoring_property = msk.CfnCluster.OpenMonitoringProperty(\n    prometheus=msk.CfnCluster.PrometheusProperty(\n        jmx_exporter=msk.CfnCluster.JmxExporterProperty(\n            enabled_in_broker=False\n        ),\n        node_exporter=msk.CfnCluster.NodeExporterProperty(\n            enabled_in_broker=False\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nOpenMonitoringProperty openMonitoringProperty = new OpenMonitoringProperty {\n    Prometheus = new PrometheusProperty {\n        JmxExporter = new JmxExporterProperty {\n            EnabledInBroker = false\n        },\n        NodeExporter = new NodeExporterProperty {\n            EnabledInBroker = false\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nOpenMonitoringProperty openMonitoringProperty = OpenMonitoringProperty.builder()\n        .prometheus(PrometheusProperty.builder()\n                .jmxExporter(JmxExporterProperty.builder()\n                        .enabledInBroker(false)\n                        .build())\n                .nodeExporter(NodeExporterProperty.builder()\n                        .enabledInBroker(false)\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nopenMonitoringProperty := &openMonitoringProperty{\n\tprometheus: &prometheusProperty{\n\t\tjmxExporter: &jmxExporterProperty{\n\t\t\tenabledInBroker: jsii.Boolean(false),\n\t\t},\n\t\tnodeExporter: &nodeExporterProperty{\n\t\t\tenabledInBroker: jsii.Boolean(false),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst openMonitoringProperty: msk.CfnCluster.OpenMonitoringProperty = {\n  prometheus: {\n    jmxExporter: {\n      enabledInBroker: false,\n    },\n    nodeExporter: {\n      enabledInBroker: false,\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.OpenMonitoringProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.OpenMonitoringProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst openMonitoringProperty: msk.CfnCluster.OpenMonitoringProperty = {\n  prometheus: {\n    jmxExporter: {\n      enabledInBroker: false,\n    },\n    nodeExporter: {\n      enabledInBroker: false,\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 10,
        "91": 2,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "19d20610f6f675ea4e13a6702841a05f09fec2b483b9668dd1400d4259ab4256"
    },
    "fd84b7408c24291b88e5e5cc50db81bc31be4bfd070fba59d4c6a7c58702ca48": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nprometheus_property = msk.CfnCluster.PrometheusProperty(\n    jmx_exporter=msk.CfnCluster.JmxExporterProperty(\n        enabled_in_broker=False\n    ),\n    node_exporter=msk.CfnCluster.NodeExporterProperty(\n        enabled_in_broker=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nPrometheusProperty prometheusProperty = new PrometheusProperty {\n    JmxExporter = new JmxExporterProperty {\n        EnabledInBroker = false\n    },\n    NodeExporter = new NodeExporterProperty {\n        EnabledInBroker = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nPrometheusProperty prometheusProperty = PrometheusProperty.builder()\n        .jmxExporter(JmxExporterProperty.builder()\n                .enabledInBroker(false)\n                .build())\n        .nodeExporter(NodeExporterProperty.builder()\n                .enabledInBroker(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nprometheusProperty := &prometheusProperty{\n\tjmxExporter: &jmxExporterProperty{\n\t\tenabledInBroker: jsii.Boolean(false),\n\t},\n\tnodeExporter: &nodeExporterProperty{\n\t\tenabledInBroker: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst prometheusProperty: msk.CfnCluster.PrometheusProperty = {\n  jmxExporter: {\n    enabledInBroker: false,\n  },\n  nodeExporter: {\n    enabledInBroker: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.PrometheusProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.PrometheusProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst prometheusProperty: msk.CfnCluster.PrometheusProperty = {\n  jmxExporter: {\n    enabledInBroker: false,\n  },\n  nodeExporter: {\n    enabledInBroker: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 9,
        "91": 2,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "4616e4b5f4b8fb585dac4f764f1632ba1a87bce13f5718be63e0615f13c91fa9"
    },
    "745cfd2df501e54fef5ea57edfd87ecd72ebc3d7000bae6ede406254a918ec02": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nprovisioned_throughput_property = msk.CfnCluster.ProvisionedThroughputProperty(\n    enabled=False,\n    volume_throughput=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nProvisionedThroughputProperty provisionedThroughputProperty = new ProvisionedThroughputProperty {\n    Enabled = false,\n    VolumeThroughput = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nProvisionedThroughputProperty provisionedThroughputProperty = ProvisionedThroughputProperty.builder()\n        .enabled(false)\n        .volumeThroughput(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nprovisionedThroughputProperty := &provisionedThroughputProperty{\n\tenabled: jsii.Boolean(false),\n\tvolumeThroughput: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst provisionedThroughputProperty: msk.CfnCluster.ProvisionedThroughputProperty = {\n  enabled: false,\n  volumeThroughput: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.ProvisionedThroughputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.ProvisionedThroughputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst provisionedThroughputProperty: msk.CfnCluster.ProvisionedThroughputProperty = {\n  enabled: false,\n  volumeThroughput: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "98258092a5dd6c83d169f0dc3790b005f23ff28f3b025637e2821906bd52e9c9"
    },
    "e9c92bdcaeed93486196f490aff680145e58d77da8574e3ff9a4677573bec4f5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\npublic_access_property = msk.CfnCluster.PublicAccessProperty(\n    type=\"type\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nPublicAccessProperty publicAccessProperty = new PublicAccessProperty {\n    Type = \"type\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nPublicAccessProperty publicAccessProperty = PublicAccessProperty.builder()\n        .type(\"type\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\npublicAccessProperty := &publicAccessProperty{\n\ttype: jsii.String(\"type\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst publicAccessProperty: msk.CfnCluster.PublicAccessProperty = {\n  type: 'type',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.PublicAccessProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.PublicAccessProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst publicAccessProperty: msk.CfnCluster.PublicAccessProperty = {\n  type: 'type',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "68d5b82254b8d14617df539ba5e9b2ece2e59e1a8b58983a19ea4c733f0a8f7b"
    },
    "e6cf46a484b51a266ed4e3f8ac8770af22bff818cec6bd39e0840dc627bb1d9e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\ns3_property = msk.CfnCluster.S3Property(\n    enabled=False,\n\n    # the properties below are optional\n    bucket=\"bucket\",\n    prefix=\"prefix\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nS3Property s3Property = new S3Property {\n    Enabled = false,\n\n    // the properties below are optional\n    Bucket = \"bucket\",\n    Prefix = \"prefix\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nS3Property s3Property = S3Property.builder()\n        .enabled(false)\n\n        // the properties below are optional\n        .bucket(\"bucket\")\n        .prefix(\"prefix\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\ns3Property := &s3Property{\n\tenabled: jsii.Boolean(false),\n\n\t// the properties below are optional\n\tbucket: jsii.String(\"bucket\"),\n\tprefix: jsii.String(\"prefix\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst s3Property: msk.CfnCluster.S3Property = {\n  enabled: false,\n\n  // the properties below are optional\n  bucket: 'bucket',\n  prefix: 'prefix',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.S3Property"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.S3Property"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3Property: msk.CfnCluster.S3Property = {\n  enabled: false,\n\n  // the properties below are optional\n  bucket: 'bucket',\n  prefix: 'prefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "3c159daf872e3fb94128e47372cbf175c0e97b7c0fc443872299ba4eb2dfe712"
    },
    "c8524eab04aa07851abd0bbba44a4d5b9dd01ff5648d599e7d31bf58c8de9e00": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nsasl_property = msk.CfnCluster.SaslProperty(\n    iam=msk.CfnCluster.IamProperty(\n        enabled=False\n    ),\n    scram=msk.CfnCluster.ScramProperty(\n        enabled=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nSaslProperty saslProperty = new SaslProperty {\n    Iam = new IamProperty {\n        Enabled = false\n    },\n    Scram = new ScramProperty {\n        Enabled = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nSaslProperty saslProperty = SaslProperty.builder()\n        .iam(IamProperty.builder()\n                .enabled(false)\n                .build())\n        .scram(ScramProperty.builder()\n                .enabled(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nsaslProperty := &saslProperty{\n\tiam: &iamProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tscram: &scramProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst saslProperty: msk.CfnCluster.SaslProperty = {\n  iam: {\n    enabled: false,\n  },\n  scram: {\n    enabled: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.SaslProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.SaslProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst saslProperty: msk.CfnCluster.SaslProperty = {\n  iam: {\n    enabled: false,\n  },\n  scram: {\n    enabled: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 9,
        "91": 2,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "d0fa67bc3ff908ba2b22b79cbe74eaef5a909268733862b75cf8976bdda50d53"
    },
    "50bbb0d8720866373330860dd5f086dae933224afe77582e94ee9faf8973620c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nscram_property = msk.CfnCluster.ScramProperty(\n    enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nScramProperty scramProperty = new ScramProperty {\n    Enabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nScramProperty scramProperty = ScramProperty.builder()\n        .enabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nscramProperty := &scramProperty{\n\tenabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst scramProperty: msk.CfnCluster.ScramProperty = {\n  enabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.ScramProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.ScramProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst scramProperty: msk.CfnCluster.ScramProperty = {\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "eb51707184a239c1aaae87e1660f1c6eff02ab51e008b74779db7d1b8c9cdd33"
    },
    "eccf2c2feed2de4c70e2ff0479e81c41e4cb984480428856fdf58922a607e055": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nstorage_info_property = msk.CfnCluster.StorageInfoProperty(\n    ebs_storage_info=msk.CfnCluster.EBSStorageInfoProperty(\n        provisioned_throughput=msk.CfnCluster.ProvisionedThroughputProperty(\n            enabled=False,\n            volume_throughput=123\n        ),\n        volume_size=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nStorageInfoProperty storageInfoProperty = new StorageInfoProperty {\n    EbsStorageInfo = new EBSStorageInfoProperty {\n        ProvisionedThroughput = new ProvisionedThroughputProperty {\n            Enabled = false,\n            VolumeThroughput = 123\n        },\n        VolumeSize = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nStorageInfoProperty storageInfoProperty = StorageInfoProperty.builder()\n        .ebsStorageInfo(EBSStorageInfoProperty.builder()\n                .provisionedThroughput(ProvisionedThroughputProperty.builder()\n                        .enabled(false)\n                        .volumeThroughput(123)\n                        .build())\n                .volumeSize(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nstorageInfoProperty := &storageInfoProperty{\n\tebsStorageInfo: &eBSStorageInfoProperty{\n\t\tprovisionedThroughput: &provisionedThroughputProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tvolumeThroughput: jsii.Number(123),\n\t\t},\n\t\tvolumeSize: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst storageInfoProperty: msk.CfnCluster.StorageInfoProperty = {\n  ebsStorageInfo: {\n    provisionedThroughput: {\n      enabled: false,\n      volumeThroughput: 123,\n    },\n    volumeSize: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.StorageInfoProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.StorageInfoProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst storageInfoProperty: msk.CfnCluster.StorageInfoProperty = {\n  ebsStorageInfo: {\n    provisionedThroughput: {\n      enabled: false,\n      volumeThroughput: 123,\n    },\n    volumeSize: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 10,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "70574a1355e74ea91ed149172e27bc57489abf8bc3dda7ecf923bd3905ff8ea7"
    },
    "ccc4c55da14d0f98e60bb266d43eba601072a5d0cd7bfa6e40d022d3ad287efd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\ntls_property = msk.CfnCluster.TlsProperty(\n    certificate_authority_arn_list=[\"certificateAuthorityArnList\"],\n    enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nTlsProperty tlsProperty = new TlsProperty {\n    CertificateAuthorityArnList = new [] { \"certificateAuthorityArnList\" },\n    Enabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nTlsProperty tlsProperty = TlsProperty.builder()\n        .certificateAuthorityArnList(List.of(\"certificateAuthorityArnList\"))\n        .enabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\ntlsProperty := &tlsProperty{\n\tcertificateAuthorityArnList: []*string{\n\t\tjsii.String(\"certificateAuthorityArnList\"),\n\t},\n\tenabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst tlsProperty: msk.CfnCluster.TlsProperty = {\n  certificateAuthorityArnList: ['certificateAuthorityArnList'],\n  enabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.TlsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.TlsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tlsProperty: msk.CfnCluster.TlsProperty = {\n  certificateAuthorityArnList: ['certificateAuthorityArnList'],\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "6d665b6527035366684fd31f63f36959e32b6bd49a28c6bc76c57c73e8e85ee2"
    },
    "ca3bedb7d9101df38f4e1c1dd99adf0e05270554202d3c62bae01e11aceab21d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nunauthenticated_property = msk.CfnCluster.UnauthenticatedProperty(\n    enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nUnauthenticatedProperty unauthenticatedProperty = new UnauthenticatedProperty {\n    Enabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nUnauthenticatedProperty unauthenticatedProperty = UnauthenticatedProperty.builder()\n        .enabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nunauthenticatedProperty := &unauthenticatedProperty{\n\tenabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst unauthenticatedProperty: msk.CfnCluster.UnauthenticatedProperty = {\n  enabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnCluster.UnauthenticatedProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnCluster.UnauthenticatedProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst unauthenticatedProperty: msk.CfnCluster.UnauthenticatedProperty = {\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "ba113863b38f3d97f3ab48fca3297bbc3d395272f73b90b2b3f5d6d2200da20d"
    },
    "0b7bbdeb389b1a00bd33c4cefd41af3584f6fc904bba594c224f5bc00947532f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\ncfn_cluster_props = msk.CfnClusterProps(\n    broker_node_group_info=msk.CfnCluster.BrokerNodeGroupInfoProperty(\n        client_subnets=[\"clientSubnets\"],\n        instance_type=\"instanceType\",\n\n        # the properties below are optional\n        broker_az_distribution=\"brokerAzDistribution\",\n        connectivity_info=msk.CfnCluster.ConnectivityInfoProperty(\n            public_access=msk.CfnCluster.PublicAccessProperty(\n                type=\"type\"\n            )\n        ),\n        security_groups=[\"securityGroups\"],\n        storage_info=msk.CfnCluster.StorageInfoProperty(\n            ebs_storage_info=msk.CfnCluster.EBSStorageInfoProperty(\n                provisioned_throughput=msk.CfnCluster.ProvisionedThroughputProperty(\n                    enabled=False,\n                    volume_throughput=123\n                ),\n                volume_size=123\n            )\n        )\n    ),\n    cluster_name=\"clusterName\",\n    kafka_version=\"kafkaVersion\",\n    number_of_broker_nodes=123,\n\n    # the properties below are optional\n    client_authentication=msk.CfnCluster.ClientAuthenticationProperty(\n        sasl=msk.CfnCluster.SaslProperty(\n            iam=msk.CfnCluster.IamProperty(\n                enabled=False\n            ),\n            scram=msk.CfnCluster.ScramProperty(\n                enabled=False\n            )\n        ),\n        tls=msk.CfnCluster.TlsProperty(\n            certificate_authority_arn_list=[\"certificateAuthorityArnList\"],\n            enabled=False\n        ),\n        unauthenticated=msk.CfnCluster.UnauthenticatedProperty(\n            enabled=False\n        )\n    ),\n    configuration_info=msk.CfnCluster.ConfigurationInfoProperty(\n        arn=\"arn\",\n        revision=123\n    ),\n    current_version=\"currentVersion\",\n    encryption_info=msk.CfnCluster.EncryptionInfoProperty(\n        encryption_at_rest=msk.CfnCluster.EncryptionAtRestProperty(\n            data_volume_kms_key_id=\"dataVolumeKmsKeyId\"\n        ),\n        encryption_in_transit=msk.CfnCluster.EncryptionInTransitProperty(\n            client_broker=\"clientBroker\",\n            in_cluster=False\n        )\n    ),\n    enhanced_monitoring=\"enhancedMonitoring\",\n    logging_info=msk.CfnCluster.LoggingInfoProperty(\n        broker_logs=msk.CfnCluster.BrokerLogsProperty(\n            cloud_watch_logs=msk.CfnCluster.CloudWatchLogsProperty(\n                enabled=False,\n\n                # the properties below are optional\n                log_group=\"logGroup\"\n            ),\n            firehose=msk.CfnCluster.FirehoseProperty(\n                enabled=False,\n\n                # the properties below are optional\n                delivery_stream=\"deliveryStream\"\n            ),\n            s3=msk.CfnCluster.S3Property(\n                enabled=False,\n\n                # the properties below are optional\n                bucket=\"bucket\",\n                prefix=\"prefix\"\n            )\n        )\n    ),\n    open_monitoring=msk.CfnCluster.OpenMonitoringProperty(\n        prometheus=msk.CfnCluster.PrometheusProperty(\n            jmx_exporter=msk.CfnCluster.JmxExporterProperty(\n                enabled_in_broker=False\n            ),\n            node_exporter=msk.CfnCluster.NodeExporterProperty(\n                enabled_in_broker=False\n            )\n        )\n    ),\n    tags={\n        \"tags_key\": \"tags\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nCfnClusterProps cfnClusterProps = new CfnClusterProps {\n    BrokerNodeGroupInfo = new BrokerNodeGroupInfoProperty {\n        ClientSubnets = new [] { \"clientSubnets\" },\n        InstanceType = \"instanceType\",\n\n        // the properties below are optional\n        BrokerAzDistribution = \"brokerAzDistribution\",\n        ConnectivityInfo = new ConnectivityInfoProperty {\n            PublicAccess = new PublicAccessProperty {\n                Type = \"type\"\n            }\n        },\n        SecurityGroups = new [] { \"securityGroups\" },\n        StorageInfo = new StorageInfoProperty {\n            EbsStorageInfo = new EBSStorageInfoProperty {\n                ProvisionedThroughput = new ProvisionedThroughputProperty {\n                    Enabled = false,\n                    VolumeThroughput = 123\n                },\n                VolumeSize = 123\n            }\n        }\n    },\n    ClusterName = \"clusterName\",\n    KafkaVersion = \"kafkaVersion\",\n    NumberOfBrokerNodes = 123,\n\n    // the properties below are optional\n    ClientAuthentication = new ClientAuthenticationProperty {\n        Sasl = new SaslProperty {\n            Iam = new IamProperty {\n                Enabled = false\n            },\n            Scram = new ScramProperty {\n                Enabled = false\n            }\n        },\n        Tls = new TlsProperty {\n            CertificateAuthorityArnList = new [] { \"certificateAuthorityArnList\" },\n            Enabled = false\n        },\n        Unauthenticated = new UnauthenticatedProperty {\n            Enabled = false\n        }\n    },\n    ConfigurationInfo = new ConfigurationInfoProperty {\n        Arn = \"arn\",\n        Revision = 123\n    },\n    CurrentVersion = \"currentVersion\",\n    EncryptionInfo = new EncryptionInfoProperty {\n        EncryptionAtRest = new EncryptionAtRestProperty {\n            DataVolumeKmsKeyId = \"dataVolumeKmsKeyId\"\n        },\n        EncryptionInTransit = new EncryptionInTransitProperty {\n            ClientBroker = \"clientBroker\",\n            InCluster = false\n        }\n    },\n    EnhancedMonitoring = \"enhancedMonitoring\",\n    LoggingInfo = new LoggingInfoProperty {\n        BrokerLogs = new BrokerLogsProperty {\n            CloudWatchLogs = new CloudWatchLogsProperty {\n                Enabled = false,\n\n                // the properties below are optional\n                LogGroup = \"logGroup\"\n            },\n            Firehose = new FirehoseProperty {\n                Enabled = false,\n\n                // the properties below are optional\n                DeliveryStream = \"deliveryStream\"\n            },\n            S3 = new S3Property {\n                Enabled = false,\n\n                // the properties below are optional\n                Bucket = \"bucket\",\n                Prefix = \"prefix\"\n            }\n        }\n    },\n    OpenMonitoring = new OpenMonitoringProperty {\n        Prometheus = new PrometheusProperty {\n            JmxExporter = new JmxExporterProperty {\n                EnabledInBroker = false\n            },\n            NodeExporter = new NodeExporterProperty {\n                EnabledInBroker = false\n            }\n        }\n    },\n    Tags = new Dictionary<string, string> {\n        { \"tagsKey\", \"tags\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nCfnClusterProps cfnClusterProps = CfnClusterProps.builder()\n        .brokerNodeGroupInfo(BrokerNodeGroupInfoProperty.builder()\n                .clientSubnets(List.of(\"clientSubnets\"))\n                .instanceType(\"instanceType\")\n\n                // the properties below are optional\n                .brokerAzDistribution(\"brokerAzDistribution\")\n                .connectivityInfo(ConnectivityInfoProperty.builder()\n                        .publicAccess(PublicAccessProperty.builder()\n                                .type(\"type\")\n                                .build())\n                        .build())\n                .securityGroups(List.of(\"securityGroups\"))\n                .storageInfo(StorageInfoProperty.builder()\n                        .ebsStorageInfo(EBSStorageInfoProperty.builder()\n                                .provisionedThroughput(ProvisionedThroughputProperty.builder()\n                                        .enabled(false)\n                                        .volumeThroughput(123)\n                                        .build())\n                                .volumeSize(123)\n                                .build())\n                        .build())\n                .build())\n        .clusterName(\"clusterName\")\n        .kafkaVersion(\"kafkaVersion\")\n        .numberOfBrokerNodes(123)\n\n        // the properties below are optional\n        .clientAuthentication(ClientAuthenticationProperty.builder()\n                .sasl(SaslProperty.builder()\n                        .iam(IamProperty.builder()\n                                .enabled(false)\n                                .build())\n                        .scram(ScramProperty.builder()\n                                .enabled(false)\n                                .build())\n                        .build())\n                .tls(TlsProperty.builder()\n                        .certificateAuthorityArnList(List.of(\"certificateAuthorityArnList\"))\n                        .enabled(false)\n                        .build())\n                .unauthenticated(UnauthenticatedProperty.builder()\n                        .enabled(false)\n                        .build())\n                .build())\n        .configurationInfo(ConfigurationInfoProperty.builder()\n                .arn(\"arn\")\n                .revision(123)\n                .build())\n        .currentVersion(\"currentVersion\")\n        .encryptionInfo(EncryptionInfoProperty.builder()\n                .encryptionAtRest(EncryptionAtRestProperty.builder()\n                        .dataVolumeKmsKeyId(\"dataVolumeKmsKeyId\")\n                        .build())\n                .encryptionInTransit(EncryptionInTransitProperty.builder()\n                        .clientBroker(\"clientBroker\")\n                        .inCluster(false)\n                        .build())\n                .build())\n        .enhancedMonitoring(\"enhancedMonitoring\")\n        .loggingInfo(LoggingInfoProperty.builder()\n                .brokerLogs(BrokerLogsProperty.builder()\n                        .cloudWatchLogs(CloudWatchLogsProperty.builder()\n                                .enabled(false)\n\n                                // the properties below are optional\n                                .logGroup(\"logGroup\")\n                                .build())\n                        .firehose(FirehoseProperty.builder()\n                                .enabled(false)\n\n                                // the properties below are optional\n                                .deliveryStream(\"deliveryStream\")\n                                .build())\n                        .s3(S3Property.builder()\n                                .enabled(false)\n\n                                // the properties below are optional\n                                .bucket(\"bucket\")\n                                .prefix(\"prefix\")\n                                .build())\n                        .build())\n                .build())\n        .openMonitoring(OpenMonitoringProperty.builder()\n                .prometheus(PrometheusProperty.builder()\n                        .jmxExporter(JmxExporterProperty.builder()\n                                .enabledInBroker(false)\n                                .build())\n                        .nodeExporter(NodeExporterProperty.builder()\n                                .enabledInBroker(false)\n                                .build())\n                        .build())\n                .build())\n        .tags(Map.of(\n                \"tagsKey\", \"tags\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\ncfnClusterProps := &cfnClusterProps{\n\tbrokerNodeGroupInfo: &brokerNodeGroupInfoProperty{\n\t\tclientSubnets: []*string{\n\t\t\tjsii.String(\"clientSubnets\"),\n\t\t},\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\n\t\t// the properties below are optional\n\t\tbrokerAzDistribution: jsii.String(\"brokerAzDistribution\"),\n\t\tconnectivityInfo: &connectivityInfoProperty{\n\t\t\tpublicAccess: &publicAccessProperty{\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t\tsecurityGroups: []*string{\n\t\t\tjsii.String(\"securityGroups\"),\n\t\t},\n\t\tstorageInfo: &storageInfoProperty{\n\t\t\tebsStorageInfo: &eBSStorageInfoProperty{\n\t\t\t\tprovisionedThroughput: &provisionedThroughputProperty{\n\t\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\t\tvolumeThroughput: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tvolumeSize: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\tclusterName: jsii.String(\"clusterName\"),\n\tkafkaVersion: jsii.String(\"kafkaVersion\"),\n\tnumberOfBrokerNodes: jsii.Number(123),\n\n\t// the properties below are optional\n\tclientAuthentication: &clientAuthenticationProperty{\n\t\tsasl: &saslProperty{\n\t\t\tiam: &iamProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\tscram: &scramProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t\ttls: &tlsProperty{\n\t\t\tcertificateAuthorityArnList: []*string{\n\t\t\t\tjsii.String(\"certificateAuthorityArnList\"),\n\t\t\t},\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tunauthenticated: &unauthenticatedProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t},\n\tconfigurationInfo: &configurationInfoProperty{\n\t\tarn: jsii.String(\"arn\"),\n\t\trevision: jsii.Number(123),\n\t},\n\tcurrentVersion: jsii.String(\"currentVersion\"),\n\tencryptionInfo: &encryptionInfoProperty{\n\t\tencryptionAtRest: &encryptionAtRestProperty{\n\t\t\tdataVolumeKmsKeyId: jsii.String(\"dataVolumeKmsKeyId\"),\n\t\t},\n\t\tencryptionInTransit: &encryptionInTransitProperty{\n\t\t\tclientBroker: jsii.String(\"clientBroker\"),\n\t\t\tinCluster: jsii.Boolean(false),\n\t\t},\n\t},\n\tenhancedMonitoring: jsii.String(\"enhancedMonitoring\"),\n\tloggingInfo: &loggingInfoProperty{\n\t\tbrokerLogs: &brokerLogsProperty{\n\t\t\tcloudWatchLogs: &cloudWatchLogsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tlogGroup: jsii.String(\"logGroup\"),\n\t\t\t},\n\t\t\tfirehose: &firehoseProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tdeliveryStream: jsii.String(\"deliveryStream\"),\n\t\t\t},\n\t\t\ts3: &s3Property{\n\t\t\t\tenabled: jsii.Boolean(false),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbucket: jsii.String(\"bucket\"),\n\t\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t\t},\n\t\t},\n\t},\n\topenMonitoring: &openMonitoringProperty{\n\t\tprometheus: &prometheusProperty{\n\t\t\tjmxExporter: &jmxExporterProperty{\n\t\t\t\tenabledInBroker: jsii.Boolean(false),\n\t\t\t},\n\t\t\tnodeExporter: &nodeExporterProperty{\n\t\t\t\tenabledInBroker: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t},\n\ttags: map[string]*string{\n\t\t\"tagsKey\": jsii.String(\"tags\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst cfnClusterProps: msk.CfnClusterProps = {\n  brokerNodeGroupInfo: {\n    clientSubnets: ['clientSubnets'],\n    instanceType: 'instanceType',\n\n    // the properties below are optional\n    brokerAzDistribution: 'brokerAzDistribution',\n    connectivityInfo: {\n      publicAccess: {\n        type: 'type',\n      },\n    },\n    securityGroups: ['securityGroups'],\n    storageInfo: {\n      ebsStorageInfo: {\n        provisionedThroughput: {\n          enabled: false,\n          volumeThroughput: 123,\n        },\n        volumeSize: 123,\n      },\n    },\n  },\n  clusterName: 'clusterName',\n  kafkaVersion: 'kafkaVersion',\n  numberOfBrokerNodes: 123,\n\n  // the properties below are optional\n  clientAuthentication: {\n    sasl: {\n      iam: {\n        enabled: false,\n      },\n      scram: {\n        enabled: false,\n      },\n    },\n    tls: {\n      certificateAuthorityArnList: ['certificateAuthorityArnList'],\n      enabled: false,\n    },\n    unauthenticated: {\n      enabled: false,\n    },\n  },\n  configurationInfo: {\n    arn: 'arn',\n    revision: 123,\n  },\n  currentVersion: 'currentVersion',\n  encryptionInfo: {\n    encryptionAtRest: {\n      dataVolumeKmsKeyId: 'dataVolumeKmsKeyId',\n    },\n    encryptionInTransit: {\n      clientBroker: 'clientBroker',\n      inCluster: false,\n    },\n  },\n  enhancedMonitoring: 'enhancedMonitoring',\n  loggingInfo: {\n    brokerLogs: {\n      cloudWatchLogs: {\n        enabled: false,\n\n        // the properties below are optional\n        logGroup: 'logGroup',\n      },\n      firehose: {\n        enabled: false,\n\n        // the properties below are optional\n        deliveryStream: 'deliveryStream',\n      },\n      s3: {\n        enabled: false,\n\n        // the properties below are optional\n        bucket: 'bucket',\n        prefix: 'prefix',\n      },\n    },\n  },\n  openMonitoring: {\n    prometheus: {\n      jmxExporter: {\n        enabledInBroker: false,\n      },\n      nodeExporter: {\n        enabledInBroker: false,\n      },\n    },\n  },\n  tags: {\n    tagsKey: 'tags',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnClusterProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnClusterProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnClusterProps: msk.CfnClusterProps = {\n  brokerNodeGroupInfo: {\n    clientSubnets: ['clientSubnets'],\n    instanceType: 'instanceType',\n\n    // the properties below are optional\n    brokerAzDistribution: 'brokerAzDistribution',\n    connectivityInfo: {\n      publicAccess: {\n        type: 'type',\n      },\n    },\n    securityGroups: ['securityGroups'],\n    storageInfo: {\n      ebsStorageInfo: {\n        provisionedThroughput: {\n          enabled: false,\n          volumeThroughput: 123,\n        },\n        volumeSize: 123,\n      },\n    },\n  },\n  clusterName: 'clusterName',\n  kafkaVersion: 'kafkaVersion',\n  numberOfBrokerNodes: 123,\n\n  // the properties below are optional\n  clientAuthentication: {\n    sasl: {\n      iam: {\n        enabled: false,\n      },\n      scram: {\n        enabled: false,\n      },\n    },\n    tls: {\n      certificateAuthorityArnList: ['certificateAuthorityArnList'],\n      enabled: false,\n    },\n    unauthenticated: {\n      enabled: false,\n    },\n  },\n  configurationInfo: {\n    arn: 'arn',\n    revision: 123,\n  },\n  currentVersion: 'currentVersion',\n  encryptionInfo: {\n    encryptionAtRest: {\n      dataVolumeKmsKeyId: 'dataVolumeKmsKeyId',\n    },\n    encryptionInTransit: {\n      clientBroker: 'clientBroker',\n      inCluster: false,\n    },\n  },\n  enhancedMonitoring: 'enhancedMonitoring',\n  loggingInfo: {\n    brokerLogs: {\n      cloudWatchLogs: {\n        enabled: false,\n\n        // the properties below are optional\n        logGroup: 'logGroup',\n      },\n      firehose: {\n        enabled: false,\n\n        // the properties below are optional\n        deliveryStream: 'deliveryStream',\n      },\n      s3: {\n        enabled: false,\n\n        // the properties below are optional\n        bucket: 'bucket',\n        prefix: 'prefix',\n      },\n    },\n  },\n  openMonitoring: {\n    prometheus: {\n      jmxExporter: {\n        enabledInBroker: false,\n      },\n      nodeExporter: {\n        enabledInBroker: false,\n      },\n    },\n  },\n  tags: {\n    tagsKey: 'tags',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 19,
        "75": 63,
        "91": 11,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 27,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 59,
        "290": 1
      },
      "fqnsFingerprint": "4fef297e45adda505ccf700858cd6e0812b48e9a011466fef0ab990218904f56"
    },
    "01111a6053ad2c143941ab0302ebb4129af683fcffcf10c01990ac23ae7a95ce": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\ncfn_configuration = msk.CfnConfiguration(self, \"MyCfnConfiguration\",\n    name=\"name\",\n    server_properties=\"serverProperties\",\n\n    # the properties below are optional\n    description=\"description\",\n    kafka_versions_list=[\"kafkaVersionsList\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nCfnConfiguration cfnConfiguration = new CfnConfiguration(this, \"MyCfnConfiguration\", new CfnConfigurationProps {\n    Name = \"name\",\n    ServerProperties = \"serverProperties\",\n\n    // the properties below are optional\n    Description = \"description\",\n    KafkaVersionsList = new [] { \"kafkaVersionsList\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nCfnConfiguration cfnConfiguration = CfnConfiguration.Builder.create(this, \"MyCfnConfiguration\")\n        .name(\"name\")\n        .serverProperties(\"serverProperties\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .kafkaVersionsList(List.of(\"kafkaVersionsList\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\ncfnConfiguration := msk.NewCfnConfiguration(this, jsii.String(\"MyCfnConfiguration\"), &cfnConfigurationProps{\n\tname: jsii.String(\"name\"),\n\tserverProperties: jsii.String(\"serverProperties\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tkafkaVersionsList: []*string{\n\t\tjsii.String(\"kafkaVersionsList\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst cfnConfiguration = new msk.CfnConfiguration(this, 'MyCfnConfiguration', {\n  name: 'name',\n  serverProperties: 'serverProperties',\n\n  // the properties below are optional\n  description: 'description',\n  kafkaVersionsList: ['kafkaVersionsList'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnConfiguration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnConfiguration",
        "@aws-cdk/aws-msk.CfnConfigurationProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnConfiguration = new msk.CfnConfiguration(this, 'MyCfnConfiguration', {\n  name: 'name',\n  serverProperties: 'serverProperties',\n\n  // the properties below are optional\n  description: 'description',\n  kafkaVersionsList: ['kafkaVersionsList'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 8,
        "104": 1,
        "192": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "08a618790a74fbca760ac17cdb83dc84ab2bff9f0e39365d9ae748952695117b"
    },
    "8ff1ffde70d1d91d767e8cb76aed7e70d1336d3d375ba4bc0f197b3a5247f3e2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\ncfn_configuration_props = msk.CfnConfigurationProps(\n    name=\"name\",\n    server_properties=\"serverProperties\",\n\n    # the properties below are optional\n    description=\"description\",\n    kafka_versions_list=[\"kafkaVersionsList\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nCfnConfigurationProps cfnConfigurationProps = new CfnConfigurationProps {\n    Name = \"name\",\n    ServerProperties = \"serverProperties\",\n\n    // the properties below are optional\n    Description = \"description\",\n    KafkaVersionsList = new [] { \"kafkaVersionsList\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nCfnConfigurationProps cfnConfigurationProps = CfnConfigurationProps.builder()\n        .name(\"name\")\n        .serverProperties(\"serverProperties\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .kafkaVersionsList(List.of(\"kafkaVersionsList\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\ncfnConfigurationProps := &cfnConfigurationProps{\n\tname: jsii.String(\"name\"),\n\tserverProperties: jsii.String(\"serverProperties\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tkafkaVersionsList: []*string{\n\t\tjsii.String(\"kafkaVersionsList\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst cfnConfigurationProps: msk.CfnConfigurationProps = {\n  name: 'name',\n  serverProperties: 'serverProperties',\n\n  // the properties below are optional\n  description: 'description',\n  kafkaVersionsList: ['kafkaVersionsList'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnConfigurationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnConfigurationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnConfigurationProps: msk.CfnConfigurationProps = {\n  name: 'name',\n  serverProperties: 'serverProperties',\n\n  // the properties below are optional\n  description: 'description',\n  kafkaVersionsList: ['kafkaVersionsList'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 8,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "4d540fc9d422528b4c982e39a7c4961f7fb740191931768b15ef1e567cbd61d8"
    },
    "f77599f603a4d649562977ac1cb264e69f0950934f5eb88136612df64d1040b7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\ncfn_serverless_cluster = msk.CfnServerlessCluster(self, \"MyCfnServerlessCluster\",\n    client_authentication=msk.CfnServerlessCluster.ClientAuthenticationProperty(\n        sasl=msk.CfnServerlessCluster.SaslProperty(\n            iam=msk.CfnServerlessCluster.IamProperty(\n                enabled=False\n            )\n        )\n    ),\n    cluster_name=\"clusterName\",\n    vpc_configs=[msk.CfnServerlessCluster.VpcConfigProperty(\n        subnet_ids=[\"subnetIds\"],\n\n        # the properties below are optional\n        security_groups=[\"securityGroups\"]\n    )],\n\n    # the properties below are optional\n    tags={\n        \"tags_key\": \"tags\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nCfnServerlessCluster cfnServerlessCluster = new CfnServerlessCluster(this, \"MyCfnServerlessCluster\", new CfnServerlessClusterProps {\n    ClientAuthentication = new ClientAuthenticationProperty {\n        Sasl = new SaslProperty {\n            Iam = new IamProperty {\n                Enabled = false\n            }\n        }\n    },\n    ClusterName = \"clusterName\",\n    VpcConfigs = new [] { new VpcConfigProperty {\n        SubnetIds = new [] { \"subnetIds\" },\n\n        // the properties below are optional\n        SecurityGroups = new [] { \"securityGroups\" }\n    } },\n\n    // the properties below are optional\n    Tags = new Dictionary<string, string> {\n        { \"tagsKey\", \"tags\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nCfnServerlessCluster cfnServerlessCluster = CfnServerlessCluster.Builder.create(this, \"MyCfnServerlessCluster\")\n        .clientAuthentication(ClientAuthenticationProperty.builder()\n                .sasl(SaslProperty.builder()\n                        .iam(IamProperty.builder()\n                                .enabled(false)\n                                .build())\n                        .build())\n                .build())\n        .clusterName(\"clusterName\")\n        .vpcConfigs(List.of(VpcConfigProperty.builder()\n                .subnetIds(List.of(\"subnetIds\"))\n\n                // the properties below are optional\n                .securityGroups(List.of(\"securityGroups\"))\n                .build()))\n\n        // the properties below are optional\n        .tags(Map.of(\n                \"tagsKey\", \"tags\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\ncfnServerlessCluster := msk.NewCfnServerlessCluster(this, jsii.String(\"MyCfnServerlessCluster\"), &cfnServerlessClusterProps{\n\tclientAuthentication: &clientAuthenticationProperty{\n\t\tsasl: &saslProperty{\n\t\t\tiam: &iamProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t},\n\tclusterName: jsii.String(\"clusterName\"),\n\tvpcConfigs: []interface{}{\n\t\t&vpcConfigProperty{\n\t\t\tsubnetIds: []*string{\n\t\t\t\tjsii.String(\"subnetIds\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsecurityGroups: []*string{\n\t\t\t\tjsii.String(\"securityGroups\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\ttags: map[string]*string{\n\t\t\"tagsKey\": jsii.String(\"tags\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst cfnServerlessCluster = new msk.CfnServerlessCluster(this, 'MyCfnServerlessCluster', {\n  clientAuthentication: {\n    sasl: {\n      iam: {\n        enabled: false,\n      },\n    },\n  },\n  clusterName: 'clusterName',\n  vpcConfigs: [{\n    subnetIds: ['subnetIds'],\n\n    // the properties below are optional\n    securityGroups: ['securityGroups'],\n  }],\n\n  // the properties below are optional\n  tags: {\n    tagsKey: 'tags',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnServerlessCluster"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnServerlessCluster",
        "@aws-cdk/aws-msk.CfnServerlessClusterProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnServerlessCluster = new msk.CfnServerlessCluster(this, 'MyCfnServerlessCluster', {\n  clientAuthentication: {\n    sasl: {\n      iam: {\n        enabled: false,\n      },\n    },\n  },\n  clusterName: 'clusterName',\n  vpcConfigs: [{\n    subnetIds: ['subnetIds'],\n\n    // the properties below are optional\n    securityGroups: ['securityGroups'],\n  }],\n\n  // the properties below are optional\n  tags: {\n    tagsKey: 'tags',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 14,
        "91": 1,
        "104": 1,
        "192": 3,
        "193": 6,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 10,
        "290": 1
      },
      "fqnsFingerprint": "7402d708556e683b756eaa615683b5ca2b19895a102d57894e227326b7c03799"
    },
    "2ad126e43a49c167421cc2b9d9d3618c3308ea379bacfe303351c14e749ae772": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nclient_authentication_property = msk.CfnServerlessCluster.ClientAuthenticationProperty(\n    sasl=msk.CfnServerlessCluster.SaslProperty(\n        iam=msk.CfnServerlessCluster.IamProperty(\n            enabled=False\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nClientAuthenticationProperty clientAuthenticationProperty = new ClientAuthenticationProperty {\n    Sasl = new SaslProperty {\n        Iam = new IamProperty {\n            Enabled = false\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nClientAuthenticationProperty clientAuthenticationProperty = ClientAuthenticationProperty.builder()\n        .sasl(SaslProperty.builder()\n                .iam(IamProperty.builder()\n                        .enabled(false)\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nclientAuthenticationProperty := &clientAuthenticationProperty{\n\tsasl: &saslProperty{\n\t\tiam: &iamProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst clientAuthenticationProperty: msk.CfnServerlessCluster.ClientAuthenticationProperty = {\n  sasl: {\n    iam: {\n      enabled: false,\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnServerlessCluster.ClientAuthenticationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnServerlessCluster.ClientAuthenticationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst clientAuthenticationProperty: msk.CfnServerlessCluster.ClientAuthenticationProperty = {\n  sasl: {\n    iam: {\n      enabled: false,\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "60bc7eec427b06444cb04cce9e84c35b98b8ed819774d22daacca8fa368be894"
    },
    "6fd708e818bae3ec8e0e494489583fa0cbd41f9f727652235717c749e8fe4913": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\niam_property = msk.CfnServerlessCluster.IamProperty(\n    enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nIamProperty iamProperty = new IamProperty {\n    Enabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nIamProperty iamProperty = IamProperty.builder()\n        .enabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\niamProperty := &iamProperty{\n\tenabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst iamProperty: msk.CfnServerlessCluster.IamProperty = {\n  enabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnServerlessCluster.IamProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnServerlessCluster.IamProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst iamProperty: msk.CfnServerlessCluster.IamProperty = {\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "a94b1cc0e7e5971e7afb4c43cf3189dc0f76c4420edbb7f29a973c8fd5a843f7"
    },
    "6f34f114dc55825b3ca9d24db1837cde7d4b899751c946b9cf64405e29fe3dfd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nsasl_property = msk.CfnServerlessCluster.SaslProperty(\n    iam=msk.CfnServerlessCluster.IamProperty(\n        enabled=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nSaslProperty saslProperty = new SaslProperty {\n    Iam = new IamProperty {\n        Enabled = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nSaslProperty saslProperty = SaslProperty.builder()\n        .iam(IamProperty.builder()\n                .enabled(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nsaslProperty := &saslProperty{\n\tiam: &iamProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst saslProperty: msk.CfnServerlessCluster.SaslProperty = {\n  iam: {\n    enabled: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnServerlessCluster.SaslProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnServerlessCluster.SaslProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst saslProperty: msk.CfnServerlessCluster.SaslProperty = {\n  iam: {\n    enabled: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "c8508d1754989354711e4bd80356014643aa9a1597144fc66e4159ae22402e79"
    },
    "a1e1f4e099f0f77570747f6558d9b33fccad443964a87f24380d354d9fa7d17c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nvpc_config_property = msk.CfnServerlessCluster.VpcConfigProperty(\n    subnet_ids=[\"subnetIds\"],\n\n    # the properties below are optional\n    security_groups=[\"securityGroups\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nVpcConfigProperty vpcConfigProperty = new VpcConfigProperty {\n    SubnetIds = new [] { \"subnetIds\" },\n\n    // the properties below are optional\n    SecurityGroups = new [] { \"securityGroups\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nVpcConfigProperty vpcConfigProperty = VpcConfigProperty.builder()\n        .subnetIds(List.of(\"subnetIds\"))\n\n        // the properties below are optional\n        .securityGroups(List.of(\"securityGroups\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nvpcConfigProperty := &vpcConfigProperty{\n\tsubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n\n\t// the properties below are optional\n\tsecurityGroups: []*string{\n\t\tjsii.String(\"securityGroups\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst vpcConfigProperty: msk.CfnServerlessCluster.VpcConfigProperty = {\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  securityGroups: ['securityGroups'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnServerlessCluster.VpcConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnServerlessCluster.VpcConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vpcConfigProperty: msk.CfnServerlessCluster.VpcConfigProperty = {\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  securityGroups: ['securityGroups'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "75ccfa9277d64f7e7921bd4a32044724e38056a58662a16d932e513319927c6c"
    },
    "f0ff39eceaa733694f0438e9804eb9d16b5d1ba7d3b3cf3c3d1ae863306f55da": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\ncfn_serverless_cluster_props = msk.CfnServerlessClusterProps(\n    client_authentication=msk.CfnServerlessCluster.ClientAuthenticationProperty(\n        sasl=msk.CfnServerlessCluster.SaslProperty(\n            iam=msk.CfnServerlessCluster.IamProperty(\n                enabled=False\n            )\n        )\n    ),\n    cluster_name=\"clusterName\",\n    vpc_configs=[msk.CfnServerlessCluster.VpcConfigProperty(\n        subnet_ids=[\"subnetIds\"],\n\n        # the properties below are optional\n        security_groups=[\"securityGroups\"]\n    )],\n\n    # the properties below are optional\n    tags={\n        \"tags_key\": \"tags\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nCfnServerlessClusterProps cfnServerlessClusterProps = new CfnServerlessClusterProps {\n    ClientAuthentication = new ClientAuthenticationProperty {\n        Sasl = new SaslProperty {\n            Iam = new IamProperty {\n                Enabled = false\n            }\n        }\n    },\n    ClusterName = \"clusterName\",\n    VpcConfigs = new [] { new VpcConfigProperty {\n        SubnetIds = new [] { \"subnetIds\" },\n\n        // the properties below are optional\n        SecurityGroups = new [] { \"securityGroups\" }\n    } },\n\n    // the properties below are optional\n    Tags = new Dictionary<string, string> {\n        { \"tagsKey\", \"tags\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nCfnServerlessClusterProps cfnServerlessClusterProps = CfnServerlessClusterProps.builder()\n        .clientAuthentication(ClientAuthenticationProperty.builder()\n                .sasl(SaslProperty.builder()\n                        .iam(IamProperty.builder()\n                                .enabled(false)\n                                .build())\n                        .build())\n                .build())\n        .clusterName(\"clusterName\")\n        .vpcConfigs(List.of(VpcConfigProperty.builder()\n                .subnetIds(List.of(\"subnetIds\"))\n\n                // the properties below are optional\n                .securityGroups(List.of(\"securityGroups\"))\n                .build()))\n\n        // the properties below are optional\n        .tags(Map.of(\n                \"tagsKey\", \"tags\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\ncfnServerlessClusterProps := &cfnServerlessClusterProps{\n\tclientAuthentication: &clientAuthenticationProperty{\n\t\tsasl: &saslProperty{\n\t\t\tiam: &iamProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t},\n\tclusterName: jsii.String(\"clusterName\"),\n\tvpcConfigs: []interface{}{\n\t\t&vpcConfigProperty{\n\t\t\tsubnetIds: []*string{\n\t\t\t\tjsii.String(\"subnetIds\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsecurityGroups: []*string{\n\t\t\t\tjsii.String(\"securityGroups\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\ttags: map[string]*string{\n\t\t\"tagsKey\": jsii.String(\"tags\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst cfnServerlessClusterProps: msk.CfnServerlessClusterProps = {\n  clientAuthentication: {\n    sasl: {\n      iam: {\n        enabled: false,\n      },\n    },\n  },\n  clusterName: 'clusterName',\n  vpcConfigs: [{\n    subnetIds: ['subnetIds'],\n\n    // the properties below are optional\n    securityGroups: ['securityGroups'],\n  }],\n\n  // the properties below are optional\n  tags: {\n    tagsKey: 'tags',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.CfnServerlessClusterProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.CfnServerlessClusterProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnServerlessClusterProps: msk.CfnServerlessClusterProps = {\n  clientAuthentication: {\n    sasl: {\n      iam: {\n        enabled: false,\n      },\n    },\n  },\n  clusterName: 'clusterName',\n  vpcConfigs: [{\n    subnetIds: ['subnetIds'],\n\n    // the properties below are optional\n    securityGroups: ['securityGroups'],\n  }],\n\n  // the properties below are optional\n  tags: {\n    tagsKey: 'tags',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 14,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 6,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 10,
        "290": 1
      },
      "fqnsFingerprint": "06bcc570c1392ec9bcbc93b1292e1e5fe40a8d271cb58911af0b4d90915a6618"
    },
    "f58dfdb2f69a8210873048bc0b67727222ebb4275fe22b3949fe74252c09aa0f": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc,\n    encryption_in_transit=msk.EncryptionInTransitConfig(\n        client_broker=msk.ClientBrokerEncryption.TLS\n    ),\n    client_authentication=msk.ClientAuthentication.sasl(\n        scram=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\nCluster cluster = new Cluster(this, \"cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc,\n    EncryptionInTransit = new EncryptionInTransitConfig {\n        ClientBroker = ClientBrokerEncryption.TLS\n    },\n    ClientAuthentication = ClientAuthentication.Sasl(new SaslAuthProps {\n        Scram = true\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .encryptionInTransit(EncryptionInTransitConfig.builder()\n                .clientBroker(ClientBrokerEncryption.TLS)\n                .build())\n        .clientAuthentication(ClientAuthentication.sasl(SaslAuthProps.builder()\n                .scram(true)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"cluster\"), &clusterProps{\n\tclusterName: jsii.String(\"myCluster\"),\n\tkafkaVersion: msk.kafkaVersion_V2_8_1(),\n\tvpc: vpc,\n\tencryptionInTransit: &encryptionInTransitConfig{\n\t\tclientBroker: msk.clientBrokerEncryption_TLS,\n\t},\n\tclientAuthentication: msk.clientAuthentication.sasl(&saslAuthProps{\n\t\tscram: jsii.Boolean(true),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.ClientAuthentication"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-msk.ClientAuthentication",
        "@aws-cdk/aws-msk.ClientAuthentication#sasl",
        "@aws-cdk/aws-msk.ClientBrokerEncryption",
        "@aws-cdk/aws-msk.ClientBrokerEncryption#TLS",
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.ClusterProps",
        "@aws-cdk/aws-msk.EncryptionInTransitConfig",
        "@aws-cdk/aws-msk.KafkaVersion",
        "@aws-cdk/aws-msk.KafkaVersion#V2_8_1",
        "@aws-cdk/aws-msk.SaslAuthProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 22,
        "104": 1,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 7,
        "196": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 6,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "91ed9999a6558234287a8e8dc81c788a786323117bd0d7e5d87837b592b70766"
    },
    "26c47b610006e5c18172e021de761380eeb5854c948ed77174f9768fedd81c26": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc,\n    encryption_in_transit=msk.EncryptionInTransitConfig(\n        client_broker=msk.ClientBrokerEncryption.TLS\n    ),\n    client_authentication=msk.ClientAuthentication.sasl(\n        scram=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\nCluster cluster = new Cluster(this, \"cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc,\n    EncryptionInTransit = new EncryptionInTransitConfig {\n        ClientBroker = ClientBrokerEncryption.TLS\n    },\n    ClientAuthentication = ClientAuthentication.Sasl(new SaslAuthProps {\n        Scram = true\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .encryptionInTransit(EncryptionInTransitConfig.builder()\n                .clientBroker(ClientBrokerEncryption.TLS)\n                .build())\n        .clientAuthentication(ClientAuthentication.sasl(SaslAuthProps.builder()\n                .scram(true)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"cluster\"), &clusterProps{\n\tclusterName: jsii.String(\"myCluster\"),\n\tkafkaVersion: msk.kafkaVersion_V2_8_1(),\n\tvpc: vpc,\n\tencryptionInTransit: &encryptionInTransitConfig{\n\t\tclientBroker: msk.clientBrokerEncryption_TLS,\n\t},\n\tclientAuthentication: msk.clientAuthentication.sasl(&saslAuthProps{\n\t\tscram: jsii.Boolean(true),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.ClientBrokerEncryption"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-msk.ClientAuthentication",
        "@aws-cdk/aws-msk.ClientAuthentication#sasl",
        "@aws-cdk/aws-msk.ClientBrokerEncryption",
        "@aws-cdk/aws-msk.ClientBrokerEncryption#TLS",
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.ClusterProps",
        "@aws-cdk/aws-msk.EncryptionInTransitConfig",
        "@aws-cdk/aws-msk.KafkaVersion",
        "@aws-cdk/aws-msk.KafkaVersion#V2_8_1",
        "@aws-cdk/aws-msk.SaslAuthProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 22,
        "104": 1,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 7,
        "196": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 6,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "91ed9999a6558234287a8e8dc81c788a786323117bd0d7e5d87837b592b70766"
    },
    "23bd2b2f0d42ea73cb8f849461c72df1dd990bc938509a4b32953ad35fa927b3": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc,\n    encryption_in_transit=msk.EncryptionInTransitConfig(\n        client_broker=msk.ClientBrokerEncryption.TLS\n    ),\n    client_authentication=msk.ClientAuthentication.sasl(\n        scram=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\nCluster cluster = new Cluster(this, \"cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc,\n    EncryptionInTransit = new EncryptionInTransitConfig {\n        ClientBroker = ClientBrokerEncryption.TLS\n    },\n    ClientAuthentication = ClientAuthentication.Sasl(new SaslAuthProps {\n        Scram = true\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .encryptionInTransit(EncryptionInTransitConfig.builder()\n                .clientBroker(ClientBrokerEncryption.TLS)\n                .build())\n        .clientAuthentication(ClientAuthentication.sasl(SaslAuthProps.builder()\n                .scram(true)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"cluster\"), &clusterProps{\n\tclusterName: jsii.String(\"myCluster\"),\n\tkafkaVersion: msk.kafkaVersion_V2_8_1(),\n\tvpc: vpc,\n\tencryptionInTransit: &encryptionInTransitConfig{\n\t\tclientBroker: msk.clientBrokerEncryption_TLS,\n\t},\n\tclientAuthentication: msk.clientAuthentication.sasl(&saslAuthProps{\n\t\tscram: jsii.Boolean(true),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.Cluster"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-msk.ClientAuthentication",
        "@aws-cdk/aws-msk.ClientAuthentication#sasl",
        "@aws-cdk/aws-msk.ClientBrokerEncryption",
        "@aws-cdk/aws-msk.ClientBrokerEncryption#TLS",
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.ClusterProps",
        "@aws-cdk/aws-msk.EncryptionInTransitConfig",
        "@aws-cdk/aws-msk.KafkaVersion",
        "@aws-cdk/aws-msk.KafkaVersion#V2_8_1",
        "@aws-cdk/aws-msk.SaslAuthProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 22,
        "104": 1,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 7,
        "196": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 6,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "91ed9999a6558234287a8e8dc81c788a786323117bd0d7e5d87837b592b70766"
    },
    "160fa4e5a815f74f75cffce2c9adf2631f2abc05a2a56dfb139b0fd14bd6a4a4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\ncluster_configuration_info = msk.ClusterConfigurationInfo(\n    arn=\"arn\",\n    revision=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nClusterConfigurationInfo clusterConfigurationInfo = new ClusterConfigurationInfo {\n    Arn = \"arn\",\n    Revision = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nClusterConfigurationInfo clusterConfigurationInfo = ClusterConfigurationInfo.builder()\n        .arn(\"arn\")\n        .revision(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nclusterConfigurationInfo := &clusterConfigurationInfo{\n\tarn: jsii.String(\"arn\"),\n\trevision: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst clusterConfigurationInfo: msk.ClusterConfigurationInfo = {\n  arn: 'arn',\n  revision: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.ClusterConfigurationInfo"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.ClusterConfigurationInfo"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst clusterConfigurationInfo: msk.ClusterConfigurationInfo = {\n  arn: 'arn',\n  revision: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "7130f3cb98982e7f81070b50b0cf64e59fe8943ccea9d3a2781d4889d0febf87"
    },
    "5334e4335289f828e6d0b25626b1056a1509fccb2768ad447de69e0a1a52b49c": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc,\n    encryption_in_transit=msk.EncryptionInTransitConfig(\n        client_broker=msk.ClientBrokerEncryption.TLS\n    ),\n    client_authentication=msk.ClientAuthentication.sasl(\n        scram=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\nCluster cluster = new Cluster(this, \"cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc,\n    EncryptionInTransit = new EncryptionInTransitConfig {\n        ClientBroker = ClientBrokerEncryption.TLS\n    },\n    ClientAuthentication = ClientAuthentication.Sasl(new SaslAuthProps {\n        Scram = true\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .encryptionInTransit(EncryptionInTransitConfig.builder()\n                .clientBroker(ClientBrokerEncryption.TLS)\n                .build())\n        .clientAuthentication(ClientAuthentication.sasl(SaslAuthProps.builder()\n                .scram(true)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"cluster\"), &clusterProps{\n\tclusterName: jsii.String(\"myCluster\"),\n\tkafkaVersion: msk.kafkaVersion_V2_8_1(),\n\tvpc: vpc,\n\tencryptionInTransit: &encryptionInTransitConfig{\n\t\tclientBroker: msk.clientBrokerEncryption_TLS,\n\t},\n\tclientAuthentication: msk.clientAuthentication.sasl(&saslAuthProps{\n\t\tscram: jsii.Boolean(true),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.ClusterProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-msk.ClientAuthentication",
        "@aws-cdk/aws-msk.ClientAuthentication#sasl",
        "@aws-cdk/aws-msk.ClientBrokerEncryption",
        "@aws-cdk/aws-msk.ClientBrokerEncryption#TLS",
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.ClusterProps",
        "@aws-cdk/aws-msk.EncryptionInTransitConfig",
        "@aws-cdk/aws-msk.KafkaVersion",
        "@aws-cdk/aws-msk.KafkaVersion#V2_8_1",
        "@aws-cdk/aws-msk.SaslAuthProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 22,
        "104": 1,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 7,
        "196": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 6,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "91ed9999a6558234287a8e8dc81c788a786323117bd0d7e5d87837b592b70766"
    },
    "118d07a082d6cf00fc54a528e893df8d2b574825847df93219819409f07d1c5e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kms as kms\nimport aws_cdk.aws_msk as msk\n\n# key: kms.Key\n\nebs_storage_info = msk.EbsStorageInfo(\n    encryption_key=key,\n    volume_size=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KMS;\nusing Amazon.CDK.AWS.MSK;\n\nKey key;\n\nEbsStorageInfo ebsStorageInfo = new EbsStorageInfo {\n    EncryptionKey = key,\n    VolumeSize = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kms.*;\nimport software.amazon.awscdk.services.msk.*;\n\nKey key;\n\nEbsStorageInfo ebsStorageInfo = EbsStorageInfo.builder()\n        .encryptionKey(key)\n        .volumeSize(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kms \"github.com/aws-samples/dummy/awscdkawskms\"\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nvar key key\n\nebsStorageInfo := &ebsStorageInfo{\n\tencryptionKey: key,\n\tvolumeSize: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as msk from '@aws-cdk/aws-msk';\n\ndeclare const key: kms.Key;\nconst ebsStorageInfo: msk.EbsStorageInfo = {\n  encryptionKey: key,\n  volumeSize: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.EbsStorageInfo"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-msk.EbsStorageInfo"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as msk from '@aws-cdk/aws-msk';\n\ndeclare const key: kms.Key;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ebsStorageInfo: msk.EbsStorageInfo = {\n  encryptionKey: key,\n  volumeSize: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 11,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d67cbac1b378dcbe443d5aa501ac9f0fb2e9a94dfc898864df8f62176a5826a3"
    },
    "0a34f928aa1f610366e877b91a9d482506f6294f6c3dafd860bb621468ca2d33": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc,\n    encryption_in_transit=msk.EncryptionInTransitConfig(\n        client_broker=msk.ClientBrokerEncryption.TLS\n    ),\n    client_authentication=msk.ClientAuthentication.sasl(\n        scram=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\nCluster cluster = new Cluster(this, \"cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc,\n    EncryptionInTransit = new EncryptionInTransitConfig {\n        ClientBroker = ClientBrokerEncryption.TLS\n    },\n    ClientAuthentication = ClientAuthentication.Sasl(new SaslAuthProps {\n        Scram = true\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .encryptionInTransit(EncryptionInTransitConfig.builder()\n                .clientBroker(ClientBrokerEncryption.TLS)\n                .build())\n        .clientAuthentication(ClientAuthentication.sasl(SaslAuthProps.builder()\n                .scram(true)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"cluster\"), &clusterProps{\n\tclusterName: jsii.String(\"myCluster\"),\n\tkafkaVersion: msk.kafkaVersion_V2_8_1(),\n\tvpc: vpc,\n\tencryptionInTransit: &encryptionInTransitConfig{\n\t\tclientBroker: msk.clientBrokerEncryption_TLS,\n\t},\n\tclientAuthentication: msk.clientAuthentication.sasl(&saslAuthProps{\n\t\tscram: jsii.Boolean(true),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.EncryptionInTransitConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-msk.ClientAuthentication",
        "@aws-cdk/aws-msk.ClientAuthentication#sasl",
        "@aws-cdk/aws-msk.ClientBrokerEncryption",
        "@aws-cdk/aws-msk.ClientBrokerEncryption#TLS",
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.ClusterProps",
        "@aws-cdk/aws-msk.EncryptionInTransitConfig",
        "@aws-cdk/aws-msk.KafkaVersion",
        "@aws-cdk/aws-msk.KafkaVersion#V2_8_1",
        "@aws-cdk/aws-msk.SaslAuthProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 22,
        "104": 1,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 7,
        "196": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 6,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "91ed9999a6558234287a8e8dc81c788a786323117bd0d7e5d87837b592b70766"
    },
    "a0ffe1094d81c86192ce7dbc6ff8ab76e88bfee89d60a79dc6736950f4ba5db9": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc,\n    encryption_in_transit=msk.EncryptionInTransitConfig(\n        client_broker=msk.ClientBrokerEncryption.TLS\n    ),\n    client_authentication=msk.ClientAuthentication.sasl(\n        scram=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\nCluster cluster = new Cluster(this, \"cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc,\n    EncryptionInTransit = new EncryptionInTransitConfig {\n        ClientBroker = ClientBrokerEncryption.TLS\n    },\n    ClientAuthentication = ClientAuthentication.Sasl(new SaslAuthProps {\n        Scram = true\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .encryptionInTransit(EncryptionInTransitConfig.builder()\n                .clientBroker(ClientBrokerEncryption.TLS)\n                .build())\n        .clientAuthentication(ClientAuthentication.sasl(SaslAuthProps.builder()\n                .scram(true)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"cluster\"), &clusterProps{\n\tclusterName: jsii.String(\"myCluster\"),\n\tkafkaVersion: msk.kafkaVersion_V2_8_1(),\n\tvpc: vpc,\n\tencryptionInTransit: &encryptionInTransitConfig{\n\t\tclientBroker: msk.clientBrokerEncryption_TLS,\n\t},\n\tclientAuthentication: msk.clientAuthentication.sasl(&saslAuthProps{\n\t\tscram: jsii.Boolean(true),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.KafkaVersion"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-msk.ClientAuthentication",
        "@aws-cdk/aws-msk.ClientAuthentication#sasl",
        "@aws-cdk/aws-msk.ClientBrokerEncryption",
        "@aws-cdk/aws-msk.ClientBrokerEncryption#TLS",
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.ClusterProps",
        "@aws-cdk/aws-msk.EncryptionInTransitConfig",
        "@aws-cdk/aws-msk.KafkaVersion",
        "@aws-cdk/aws-msk.KafkaVersion#V2_8_1",
        "@aws-cdk/aws-msk.SaslAuthProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 22,
        "104": 1,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 7,
        "196": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 6,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "91ed9999a6558234287a8e8dc81c788a786323117bd0d7e5d87837b592b70766"
    },
    "455ea35f41c626dfaf1754abbd228f4bcbef2259df1cbd38a7b6c325d9d82aab": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\n\nmonitoring_configuration = msk.MonitoringConfiguration(\n    cluster_monitoring_level=msk.ClusterMonitoringLevel.DEFAULT,\n    enable_prometheus_jmx_exporter=False,\n    enable_prometheus_node_exporter=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\n\nMonitoringConfiguration monitoringConfiguration = new MonitoringConfiguration {\n    ClusterMonitoringLevel = ClusterMonitoringLevel.DEFAULT,\n    EnablePrometheusJmxExporter = false,\n    EnablePrometheusNodeExporter = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\n\nMonitoringConfiguration monitoringConfiguration = MonitoringConfiguration.builder()\n        .clusterMonitoringLevel(ClusterMonitoringLevel.DEFAULT)\n        .enablePrometheusJmxExporter(false)\n        .enablePrometheusNodeExporter(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\n\nmonitoringConfiguration := &monitoringConfiguration{\n\tclusterMonitoringLevel: msk.clusterMonitoringLevel_DEFAULT,\n\tenablePrometheusJmxExporter: jsii.Boolean(false),\n\tenablePrometheusNodeExporter: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nconst monitoringConfiguration: msk.MonitoringConfiguration = {\n  clusterMonitoringLevel: msk.ClusterMonitoringLevel.DEFAULT,\n  enablePrometheusJmxExporter: false,\n  enablePrometheusNodeExporter: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.MonitoringConfiguration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.ClusterMonitoringLevel",
        "@aws-cdk/aws-msk.ClusterMonitoringLevel#DEFAULT",
        "@aws-cdk/aws-msk.MonitoringConfiguration"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringConfiguration: msk.MonitoringConfiguration = {\n  clusterMonitoringLevel: msk.ClusterMonitoringLevel.DEFAULT,\n  enablePrometheusJmxExporter: false,\n  enablePrometheusNodeExporter: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 10,
        "91": 2,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "5bad30e9ab78bee826f9dbb70954504fcad5045148485dbded9185af58c11fbb"
    },
    "5bb38622bde4ba147e9b59ea7f268a4a71651533549f3215aa55e88dcd6e68d1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_msk as msk\nimport aws_cdk.aws_s3 as s3\n\n# bucket: s3.Bucket\n\ns3_logging_configuration = msk.S3LoggingConfiguration(\n    bucket=bucket,\n\n    # the properties below are optional\n    prefix=\"prefix\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MSK;\nusing Amazon.CDK.AWS.S3;\n\nBucket bucket;\n\nS3LoggingConfiguration s3LoggingConfiguration = new S3LoggingConfiguration {\n    Bucket = bucket,\n\n    // the properties below are optional\n    Prefix = \"prefix\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.msk.*;\nimport software.amazon.awscdk.services.s3.*;\n\nBucket bucket;\n\nS3LoggingConfiguration s3LoggingConfiguration = S3LoggingConfiguration.builder()\n        .bucket(bucket)\n\n        // the properties below are optional\n        .prefix(\"prefix\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport msk \"github.com/aws-samples/dummy/awscdkawsmsk\"\nimport s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar bucket bucket\n\ns3LoggingConfiguration := &s3LoggingConfiguration{\n\tbucket: bucket,\n\n\t// the properties below are optional\n\tprefix: jsii.String(\"prefix\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\nconst s3LoggingConfiguration: msk.S3LoggingConfiguration = {\n  bucket: bucket,\n\n  // the properties below are optional\n  prefix: 'prefix',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.S3LoggingConfiguration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-msk.S3LoggingConfiguration",
        "@aws-cdk/aws-s3.IBucket"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3LoggingConfiguration: msk.S3LoggingConfiguration = {\n  bucket: bucket,\n\n  // the properties below are optional\n  prefix: 'prefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 11,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "b89d986c7a075c19c26801b784ac486098e3877385641cffd022c37c788375c4"
    },
    "15d22d3c08ec0fb312b43103846fa1f13493c4c6ecc68239fe5f7621a3060371": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc,\n    encryption_in_transit=msk.EncryptionInTransitConfig(\n        client_broker=msk.ClientBrokerEncryption.TLS\n    ),\n    client_authentication=msk.ClientAuthentication.sasl(\n        scram=True\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\nCluster cluster = new Cluster(this, \"cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc,\n    EncryptionInTransit = new EncryptionInTransitConfig {\n        ClientBroker = ClientBrokerEncryption.TLS\n    },\n    ClientAuthentication = ClientAuthentication.Sasl(new SaslAuthProps {\n        Scram = true\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .encryptionInTransit(EncryptionInTransitConfig.builder()\n                .clientBroker(ClientBrokerEncryption.TLS)\n                .build())\n        .clientAuthentication(ClientAuthentication.sasl(SaslAuthProps.builder()\n                .scram(true)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"cluster\"), &clusterProps{\n\tclusterName: jsii.String(\"myCluster\"),\n\tkafkaVersion: msk.kafkaVersion_V2_8_1(),\n\tvpc: vpc,\n\tencryptionInTransit: &encryptionInTransitConfig{\n\t\tclientBroker: msk.clientBrokerEncryption_TLS,\n\t},\n\tclientAuthentication: msk.clientAuthentication.sasl(&saslAuthProps{\n\t\tscram: jsii.Boolean(true),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.SaslAuthProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-msk.ClientAuthentication",
        "@aws-cdk/aws-msk.ClientAuthentication#sasl",
        "@aws-cdk/aws-msk.ClientBrokerEncryption",
        "@aws-cdk/aws-msk.ClientBrokerEncryption#TLS",
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.ClusterProps",
        "@aws-cdk/aws-msk.EncryptionInTransitConfig",
        "@aws-cdk/aws-msk.KafkaVersion",
        "@aws-cdk/aws-msk.KafkaVersion#V2_8_1",
        "@aws-cdk/aws-msk.SaslAuthProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.sasl({\n    scram: true,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 22,
        "104": 1,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 7,
        "196": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 6,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "91ed9999a6558234287a8e8dc81c788a786323117bd0d7e5d87837b592b70766"
    },
    "ab3ed7e1a170d49b4b927e11fa4c490eeb9123566c261fd5c0d30a06a6c03a8f": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_acmpca as acmpca\n\n# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"Cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc,\n    encryption_in_transit=msk.EncryptionInTransitConfig(\n        client_broker=msk.ClientBrokerEncryption.TLS\n    ),\n    client_authentication=msk.ClientAuthentication.tls(\n        certificate_authorities=[\n            acmpca.CertificateAuthority.from_certificate_authority_arn(self, \"CertificateAuthority\", \"arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111\")\n        ]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.ACMPCA;\n\nVpc vpc;\n\nCluster cluster = new Cluster(this, \"Cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc,\n    EncryptionInTransit = new EncryptionInTransitConfig {\n        ClientBroker = ClientBrokerEncryption.TLS\n    },\n    ClientAuthentication = ClientAuthentication.Tls(new TlsAuthProps {\n        CertificateAuthorities = new [] { CertificateAuthority.FromCertificateAuthorityArn(this, \"CertificateAuthority\", \"arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111\") }\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.acmpca.*;\n\nVpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"Cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .encryptionInTransit(EncryptionInTransitConfig.builder()\n                .clientBroker(ClientBrokerEncryption.TLS)\n                .build())\n        .clientAuthentication(ClientAuthentication.tls(TlsAuthProps.builder()\n                .certificateAuthorities(List.of(CertificateAuthority.fromCertificateAuthorityArn(this, \"CertificateAuthority\", \"arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111\")))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nvar vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"Cluster\"), &clusterProps{\n\tclusterName: jsii.String(\"myCluster\"),\n\tkafkaVersion: msk.kafkaVersion_V2_8_1(),\n\tvpc: vpc,\n\tencryptionInTransit: &encryptionInTransitConfig{\n\t\tclientBroker: msk.clientBrokerEncryption_TLS,\n\t},\n\tclientAuthentication: msk.clientAuthentication.tls(&tlsAuthProps{\n\t\tcertificateAuthorities: []iCertificateAuthority{\n\t\t\tacmpca.certificateAuthority.fromCertificateAuthorityArn(this, jsii.String(\"CertificateAuthority\"), jsii.String(\"arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111\")),\n\t\t},\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as acmpca from '@aws-cdk/aws-acmpca';\n\ndeclare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'Cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.tls({\n    certificateAuthorities: [\n      acmpca.CertificateAuthority.fromCertificateAuthorityArn(\n        this,\n        'CertificateAuthority',\n        'arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111',\n      ),\n    ],\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-msk.TlsAuthProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-acmpca.CertificateAuthority",
        "@aws-cdk/aws-acmpca.CertificateAuthority#fromCertificateAuthorityArn",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-msk.ClientAuthentication",
        "@aws-cdk/aws-msk.ClientAuthentication#tls",
        "@aws-cdk/aws-msk.ClientBrokerEncryption",
        "@aws-cdk/aws-msk.ClientBrokerEncryption#TLS",
        "@aws-cdk/aws-msk.Cluster",
        "@aws-cdk/aws-msk.ClusterProps",
        "@aws-cdk/aws-msk.EncryptionInTransitConfig",
        "@aws-cdk/aws-msk.KafkaVersion",
        "@aws-cdk/aws-msk.KafkaVersion#V2_8_1",
        "@aws-cdk/aws-msk.TlsAuthProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'Cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.tls({\n    certificateAuthorities: [\n      acmpca.CertificateAuthority.fromCertificateAuthorityArn(\n        this,\n        'CertificateAuthority',\n        'arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111',\n      ),\n    ],\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 5,
        "75": 26,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "194": 9,
        "196": 2,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "aa98d614523877584f1e4ff9f7ebdd8a9ce195bfbc7d1493f326be61fd6bfe51"
    }
  }
}