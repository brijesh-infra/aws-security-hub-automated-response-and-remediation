function _aws_cdk_aws_msk_ICluster(p) {
}
function _aws_cdk_aws_msk_ClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kafkaVersion))
            _aws_cdk_aws_msk_KafkaVersion(p.kafkaVersion);
        if (!visitedObjects.has(p.clientAuthentication))
            _aws_cdk_aws_msk_ClientAuthentication(p.clientAuthentication);
        if (!visitedObjects.has(p.configurationInfo))
            _aws_cdk_aws_msk_ClusterConfigurationInfo(p.configurationInfo);
        if (!visitedObjects.has(p.ebsStorageInfo))
            _aws_cdk_aws_msk_EbsStorageInfo(p.ebsStorageInfo);
        if (!visitedObjects.has(p.encryptionInTransit))
            _aws_cdk_aws_msk_EncryptionInTransitConfig(p.encryptionInTransit);
        if (!visitedObjects.has(p.logging))
            _aws_cdk_aws_msk_BrokerLogging(p.logging);
        if (!visitedObjects.has(p.monitoring))
            _aws_cdk_aws_msk_MonitoringConfiguration(p.monitoring);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_msk_EbsStorageInfo(p) {
}
function _aws_cdk_aws_msk_ClusterConfigurationInfo(p) {
}
function _aws_cdk_aws_msk_ClusterMonitoringLevel(p) {
}
function _aws_cdk_aws_msk_MonitoringConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterMonitoringLevel))
            _aws_cdk_aws_msk_ClusterMonitoringLevel(p.clusterMonitoringLevel);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_msk_BrokerLogging(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3))
            _aws_cdk_aws_msk_S3LoggingConfiguration(p.s3);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_msk_S3LoggingConfiguration(p) {
}
function _aws_cdk_aws_msk_ClientBrokerEncryption(p) {
}
function _aws_cdk_aws_msk_EncryptionInTransitConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientBroker))
            _aws_cdk_aws_msk_ClientBrokerEncryption(p.clientBroker);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_msk_SaslAuthProps(p) {
}
function _aws_cdk_aws_msk_TlsAuthProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.certificateAuthorities))
            require("@aws-cdk/aws-acmpca/.warnings.jsii.js")._aws_cdk_aws_acmpca_ICertificateAuthority(p.certificateAuthorities);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_msk_ClientAuthentication(p) {
}
function _aws_cdk_aws_msk_Cluster(p) {
}
function _aws_cdk_aws_msk_KafkaVersion(p) {
}
function _aws_cdk_aws_msk_CfnBatchScramSecretProps(p) {
}
function _aws_cdk_aws_msk_CfnBatchScramSecret(p) {
}
function _aws_cdk_aws_msk_CfnClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.brokerNodeGroupInfo))
            _aws_cdk_aws_msk_CfnCluster_BrokerNodeGroupInfoProperty(p.brokerNodeGroupInfo);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_msk_CfnCluster(p) {
}
function _aws_cdk_aws_msk_CfnCluster_BrokerLogsProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_BrokerNodeGroupInfoProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_ClientAuthenticationProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_CloudWatchLogsProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_ConfigurationInfoProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_ConnectivityInfoProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_EBSStorageInfoProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_EncryptionAtRestProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_EncryptionInTransitProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_EncryptionInfoProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_FirehoseProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_IamProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_JmxExporterProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_LoggingInfoProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_NodeExporterProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_OpenMonitoringProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_PrometheusProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_ProvisionedThroughputProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_PublicAccessProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_S3Property(p) {
}
function _aws_cdk_aws_msk_CfnCluster_SaslProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_ScramProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_StorageInfoProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_TlsProperty(p) {
}
function _aws_cdk_aws_msk_CfnCluster_UnauthenticatedProperty(p) {
}
function _aws_cdk_aws_msk_CfnConfigurationProps(p) {
}
function _aws_cdk_aws_msk_CfnConfiguration(p) {
}
function _aws_cdk_aws_msk_CfnServerlessClusterProps(p) {
}
function _aws_cdk_aws_msk_CfnServerlessCluster(p) {
}
function _aws_cdk_aws_msk_CfnServerlessCluster_ClientAuthenticationProperty(p) {
}
function _aws_cdk_aws_msk_CfnServerlessCluster_IamProperty(p) {
}
function _aws_cdk_aws_msk_CfnServerlessCluster_SaslProperty(p) {
}
function _aws_cdk_aws_msk_CfnServerlessCluster_VpcConfigProperty(p) {
}
function print(name, deprecationMessage) {
    const deprecated = process.env.JSII_DEPRECATED;
    const deprecationMode = ["warn", "fail", "quiet"].includes(deprecated) ? deprecated : "warn";
    const message = `${name} is deprecated.\n  ${deprecationMessage.trim()}\n  This API will be removed in the next major release.`;
    switch (deprecationMode) {
        case "fail":
            throw new DeprecationError(message);
        case "warn":
            console.warn("[WARNING]", message);
            break;
    }
}
function getPropertyDescriptor(obj, prop) {
    const descriptor = Object.getOwnPropertyDescriptor(obj, prop);
    if (descriptor) {
        return descriptor;
    }
    const proto = Object.getPrototypeOf(obj);
    const prototypeDescriptor = proto && getPropertyDescriptor(proto, prop);
    if (prototypeDescriptor) {
        return prototypeDescriptor;
    }
    return {};
}
const visitedObjects = new Set();
class DeprecationError extends Error {
    constructor(...args) {
        super(...args);
        Object.defineProperty(this, "name", {
            configurable: false,
            enumerable: true,
            value: "DeprecationError",
            writable: false,
        });
    }
}
module.exports = { print, getPropertyDescriptor, DeprecationError, _aws_cdk_aws_msk_ICluster, _aws_cdk_aws_msk_ClusterProps, _aws_cdk_aws_msk_EbsStorageInfo, _aws_cdk_aws_msk_ClusterConfigurationInfo, _aws_cdk_aws_msk_ClusterMonitoringLevel, _aws_cdk_aws_msk_MonitoringConfiguration, _aws_cdk_aws_msk_BrokerLogging, _aws_cdk_aws_msk_S3LoggingConfiguration, _aws_cdk_aws_msk_ClientBrokerEncryption, _aws_cdk_aws_msk_EncryptionInTransitConfig, _aws_cdk_aws_msk_SaslAuthProps, _aws_cdk_aws_msk_TlsAuthProps, _aws_cdk_aws_msk_ClientAuthentication, _aws_cdk_aws_msk_Cluster, _aws_cdk_aws_msk_KafkaVersion, _aws_cdk_aws_msk_CfnBatchScramSecretProps, _aws_cdk_aws_msk_CfnBatchScramSecret, _aws_cdk_aws_msk_CfnClusterProps, _aws_cdk_aws_msk_CfnCluster, _aws_cdk_aws_msk_CfnCluster_BrokerLogsProperty, _aws_cdk_aws_msk_CfnCluster_BrokerNodeGroupInfoProperty, _aws_cdk_aws_msk_CfnCluster_ClientAuthenticationProperty, _aws_cdk_aws_msk_CfnCluster_CloudWatchLogsProperty, _aws_cdk_aws_msk_CfnCluster_ConfigurationInfoProperty, _aws_cdk_aws_msk_CfnCluster_ConnectivityInfoProperty, _aws_cdk_aws_msk_CfnCluster_EBSStorageInfoProperty, _aws_cdk_aws_msk_CfnCluster_EncryptionAtRestProperty, _aws_cdk_aws_msk_CfnCluster_EncryptionInTransitProperty, _aws_cdk_aws_msk_CfnCluster_EncryptionInfoProperty, _aws_cdk_aws_msk_CfnCluster_FirehoseProperty, _aws_cdk_aws_msk_CfnCluster_IamProperty, _aws_cdk_aws_msk_CfnCluster_JmxExporterProperty, _aws_cdk_aws_msk_CfnCluster_LoggingInfoProperty, _aws_cdk_aws_msk_CfnCluster_NodeExporterProperty, _aws_cdk_aws_msk_CfnCluster_OpenMonitoringProperty, _aws_cdk_aws_msk_CfnCluster_PrometheusProperty, _aws_cdk_aws_msk_CfnCluster_ProvisionedThroughputProperty, _aws_cdk_aws_msk_CfnCluster_PublicAccessProperty, _aws_cdk_aws_msk_CfnCluster_S3Property, _aws_cdk_aws_msk_CfnCluster_SaslProperty, _aws_cdk_aws_msk_CfnCluster_ScramProperty, _aws_cdk_aws_msk_CfnCluster_StorageInfoProperty, _aws_cdk_aws_msk_CfnCluster_TlsProperty, _aws_cdk_aws_msk_CfnCluster_UnauthenticatedProperty, _aws_cdk_aws_msk_CfnConfigurationProps, _aws_cdk_aws_msk_CfnConfiguration, _aws_cdk_aws_msk_CfnServerlessClusterProps, _aws_cdk_aws_msk_CfnServerlessCluster, _aws_cdk_aws_msk_CfnServerlessCluster_ClientAuthenticationProperty, _aws_cdk_aws_msk_CfnServerlessCluster_IamProperty, _aws_cdk_aws_msk_CfnServerlessCluster_SaslProperty, _aws_cdk_aws_msk_CfnServerlessCluster_VpcConfigProperty };
