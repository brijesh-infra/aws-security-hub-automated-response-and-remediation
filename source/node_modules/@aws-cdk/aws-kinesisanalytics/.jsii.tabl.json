{
  "version": "2",
  "toolVersion": "1.63.2",
  "snippets": {
    "bb733bfd722895747d0dc5536bdb1b2ea94a64c158ded63f772eb91ef6165252": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_kinesisanalytics as kinesisanalytics",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.KinesisAnalytics;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.kinesisanalytics.*;",
          "version": "1"
        },
        "go": {
          "source": "import kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"",
          "version": "1"
        },
        "$": {
          "source": "import * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisanalytics"
        },
        "field": {
          "field": "markdown",
          "line": 18
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';",
      "syntaxKindCounter": {
        "10": 1,
        "75": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "a98f9cf44d768a0e575ebb7c18a15b8b209fbb8b8987a34482e4e2a332280dd0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application = kinesisanalytics.CfnApplication(self, \"MyCfnApplication\",\n    inputs=[kinesisanalytics.CfnApplication.InputProperty(\n        input_schema=kinesisanalytics.CfnApplication.InputSchemaProperty(\n            record_columns=[kinesisanalytics.CfnApplication.RecordColumnProperty(\n                name=\"name\",\n                sql_type=\"sqlType\",\n\n                # the properties below are optional\n                mapping=\"mapping\"\n            )],\n            record_format=kinesisanalytics.CfnApplication.RecordFormatProperty(\n                record_format_type=\"recordFormatType\",\n\n                # the properties below are optional\n                mapping_parameters=kinesisanalytics.CfnApplication.MappingParametersProperty(\n                    csv_mapping_parameters=kinesisanalytics.CfnApplication.CSVMappingParametersProperty(\n                        record_column_delimiter=\"recordColumnDelimiter\",\n                        record_row_delimiter=\"recordRowDelimiter\"\n                    ),\n                    json_mapping_parameters=kinesisanalytics.CfnApplication.JSONMappingParametersProperty(\n                        record_row_path=\"recordRowPath\"\n                    )\n                )\n            ),\n\n            # the properties below are optional\n            record_encoding=\"recordEncoding\"\n        ),\n        name_prefix=\"namePrefix\",\n\n        # the properties below are optional\n        input_parallelism=kinesisanalytics.CfnApplication.InputParallelismProperty(\n            count=123\n        ),\n        input_processing_configuration=kinesisanalytics.CfnApplication.InputProcessingConfigurationProperty(\n            input_lambda_processor=kinesisanalytics.CfnApplication.InputLambdaProcessorProperty(\n                resource_arn=\"resourceArn\",\n                role_arn=\"roleArn\"\n            )\n        ),\n        kinesis_firehose_input=kinesisanalytics.CfnApplication.KinesisFirehoseInputProperty(\n            resource_arn=\"resourceArn\",\n            role_arn=\"roleArn\"\n        ),\n        kinesis_streams_input=kinesisanalytics.CfnApplication.KinesisStreamsInputProperty(\n            resource_arn=\"resourceArn\",\n            role_arn=\"roleArn\"\n        )\n    )],\n\n    # the properties below are optional\n    application_code=\"applicationCode\",\n    application_description=\"applicationDescription\",\n    application_name=\"applicationName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplication cfnApplication = new CfnApplication(this, \"MyCfnApplication\", new CfnApplicationProps {\n    Inputs = new [] { new InputProperty {\n        InputSchema = new InputSchemaProperty {\n            RecordColumns = new [] { new RecordColumnProperty {\n                Name = \"name\",\n                SqlType = \"sqlType\",\n\n                // the properties below are optional\n                Mapping = \"mapping\"\n            } },\n            RecordFormat = new RecordFormatProperty {\n                RecordFormatType = \"recordFormatType\",\n\n                // the properties below are optional\n                MappingParameters = new MappingParametersProperty {\n                    CsvMappingParameters = new CSVMappingParametersProperty {\n                        RecordColumnDelimiter = \"recordColumnDelimiter\",\n                        RecordRowDelimiter = \"recordRowDelimiter\"\n                    },\n                    JsonMappingParameters = new JSONMappingParametersProperty {\n                        RecordRowPath = \"recordRowPath\"\n                    }\n                }\n            },\n\n            // the properties below are optional\n            RecordEncoding = \"recordEncoding\"\n        },\n        NamePrefix = \"namePrefix\",\n\n        // the properties below are optional\n        InputParallelism = new InputParallelismProperty {\n            Count = 123\n        },\n        InputProcessingConfiguration = new InputProcessingConfigurationProperty {\n            InputLambdaProcessor = new InputLambdaProcessorProperty {\n                ResourceArn = \"resourceArn\",\n                RoleArn = \"roleArn\"\n            }\n        },\n        KinesisFirehoseInput = new KinesisFirehoseInputProperty {\n            ResourceArn = \"resourceArn\",\n            RoleArn = \"roleArn\"\n        },\n        KinesisStreamsInput = new KinesisStreamsInputProperty {\n            ResourceArn = \"resourceArn\",\n            RoleArn = \"roleArn\"\n        }\n    } },\n\n    // the properties below are optional\n    ApplicationCode = \"applicationCode\",\n    ApplicationDescription = \"applicationDescription\",\n    ApplicationName = \"applicationName\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplication cfnApplication = CfnApplication.Builder.create(this, \"MyCfnApplication\")\n        .inputs(List.of(InputProperty.builder()\n                .inputSchema(InputSchemaProperty.builder()\n                        .recordColumns(List.of(RecordColumnProperty.builder()\n                                .name(\"name\")\n                                .sqlType(\"sqlType\")\n\n                                // the properties below are optional\n                                .mapping(\"mapping\")\n                                .build()))\n                        .recordFormat(RecordFormatProperty.builder()\n                                .recordFormatType(\"recordFormatType\")\n\n                                // the properties below are optional\n                                .mappingParameters(MappingParametersProperty.builder()\n                                        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                                .recordRowDelimiter(\"recordRowDelimiter\")\n                                                .build())\n                                        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                                .recordRowPath(\"recordRowPath\")\n                                                .build())\n                                        .build())\n                                .build())\n\n                        // the properties below are optional\n                        .recordEncoding(\"recordEncoding\")\n                        .build())\n                .namePrefix(\"namePrefix\")\n\n                // the properties below are optional\n                .inputParallelism(InputParallelismProperty.builder()\n                        .count(123)\n                        .build())\n                .inputProcessingConfiguration(InputProcessingConfigurationProperty.builder()\n                        .inputLambdaProcessor(InputLambdaProcessorProperty.builder()\n                                .resourceArn(\"resourceArn\")\n                                .roleArn(\"roleArn\")\n                                .build())\n                        .build())\n                .kinesisFirehoseInput(KinesisFirehoseInputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .roleArn(\"roleArn\")\n                        .build())\n                .kinesisStreamsInput(KinesisStreamsInputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .roleArn(\"roleArn\")\n                        .build())\n                .build()))\n\n        // the properties below are optional\n        .applicationCode(\"applicationCode\")\n        .applicationDescription(\"applicationDescription\")\n        .applicationName(\"applicationName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplication := kinesisanalytics.NewCfnApplication(this, jsii.String(\"MyCfnApplication\"), &cfnApplicationProps{\n\tinputs: []interface{}{\n\t\t&inputProperty{\n\t\t\tinputSchema: &inputSchemaProperty{\n\t\t\t\trecordColumns: []interface{}{\n\t\t\t\t\t&recordColumnProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trecordFormat: &recordFormatProperty{\n\t\t\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t\t\t},\n\t\t\tnamePrefix: jsii.String(\"namePrefix\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinputParallelism: &inputParallelismProperty{\n\t\t\t\tcount: jsii.Number(123),\n\t\t\t},\n\t\t\tinputProcessingConfiguration: &inputProcessingConfigurationProperty{\n\t\t\t\tinputLambdaProcessor: &inputLambdaProcessorProperty{\n\t\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tkinesisFirehoseInput: &kinesisFirehoseInputProperty{\n\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t},\n\t\t\tkinesisStreamsInput: &kinesisStreamsInputProperty{\n\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tapplicationCode: jsii.String(\"applicationCode\"),\n\tapplicationDescription: jsii.String(\"applicationDescription\"),\n\tapplicationName: jsii.String(\"applicationName\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplication = new kinesisanalytics.CfnApplication(this, 'MyCfnApplication', {\n  inputs: [{\n    inputSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n    namePrefix: 'namePrefix',\n\n    // the properties below are optional\n    inputParallelism: {\n      count: 123,\n    },\n    inputProcessingConfiguration: {\n      inputLambdaProcessor: {\n        resourceArn: 'resourceArn',\n        roleArn: 'roleArn',\n      },\n    },\n    kinesisFirehoseInput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    kinesisStreamsInput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n  }],\n\n  // the properties below are optional\n  applicationCode: 'applicationCode',\n  applicationDescription: 'applicationDescription',\n  applicationName: 'applicationName',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplication"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplication",
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplication = new kinesisanalytics.CfnApplication(this, 'MyCfnApplication', {\n  inputs: [{\n    inputSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n    namePrefix: 'namePrefix',\n\n    // the properties below are optional\n    inputParallelism: {\n      count: 123,\n    },\n    inputProcessingConfiguration: {\n      inputLambdaProcessor: {\n        resourceArn: 'resourceArn',\n        roleArn: 'roleArn',\n      },\n    },\n    kinesisFirehoseInput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    kinesisStreamsInput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n  }],\n\n  // the properties below are optional\n  applicationCode: 'applicationCode',\n  applicationDescription: 'applicationDescription',\n  applicationName: 'applicationName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 20,
        "75": 35,
        "104": 1,
        "192": 2,
        "193": 13,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 31,
        "290": 1
      },
      "fqnsFingerprint": "b8c03f5527193d467290e1ec76602cedfac72e61d22f2a34b1e9679e58c6cb72"
    },
    "5f899ec4c4346cf058372bfc466885b41d26590c2180a3f23a85b4f6b8abb984": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nc_sVMapping_parameters_property = kinesisanalytics.CfnApplication.CSVMappingParametersProperty(\n    record_column_delimiter=\"recordColumnDelimiter\",\n    record_row_delimiter=\"recordRowDelimiter\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCSVMappingParametersProperty cSVMappingParametersProperty = new CSVMappingParametersProperty {\n    RecordColumnDelimiter = \"recordColumnDelimiter\",\n    RecordRowDelimiter = \"recordRowDelimiter\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCSVMappingParametersProperty cSVMappingParametersProperty = CSVMappingParametersProperty.builder()\n        .recordColumnDelimiter(\"recordColumnDelimiter\")\n        .recordRowDelimiter(\"recordRowDelimiter\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncSVMappingParametersProperty := &cSVMappingParametersProperty{\n\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cSVMappingParametersProperty: kinesisanalytics.CfnApplication.CSVMappingParametersProperty = {\n  recordColumnDelimiter: 'recordColumnDelimiter',\n  recordRowDelimiter: 'recordRowDelimiter',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplication.CSVMappingParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplication.CSVMappingParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cSVMappingParametersProperty: kinesisanalytics.CfnApplication.CSVMappingParametersProperty = {\n  recordColumnDelimiter: 'recordColumnDelimiter',\n  recordRowDelimiter: 'recordRowDelimiter',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "9946221595dfaa7ae5173e60e81cfa1be675f1c91ec4034f4b5dfd416aee8c6a"
    },
    "e3f7ccd30b9b84da4eb42d5d5a47536254d4aa27c9a862f8127c7564b8dad8e5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ninput_lambda_processor_property = kinesisanalytics.CfnApplication.InputLambdaProcessorProperty(\n    resource_arn=\"resourceArn\",\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nInputLambdaProcessorProperty inputLambdaProcessorProperty = new InputLambdaProcessorProperty {\n    ResourceArn = \"resourceArn\",\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nInputLambdaProcessorProperty inputLambdaProcessorProperty = InputLambdaProcessorProperty.builder()\n        .resourceArn(\"resourceArn\")\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ninputLambdaProcessorProperty := &inputLambdaProcessorProperty{\n\tresourceArn: jsii.String(\"resourceArn\"),\n\troleArn: jsii.String(\"roleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst inputLambdaProcessorProperty: kinesisanalytics.CfnApplication.InputLambdaProcessorProperty = {\n  resourceArn: 'resourceArn',\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplication.InputLambdaProcessorProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplication.InputLambdaProcessorProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputLambdaProcessorProperty: kinesisanalytics.CfnApplication.InputLambdaProcessorProperty = {\n  resourceArn: 'resourceArn',\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "6d252fba16eef38bbf32c638be4f384cb0b08eb3d15133a316db514184ebbb44"
    },
    "ada7108ffb339cfcec4e37beff095396a16617d9345962ebd4032f1f539719c4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ninput_parallelism_property = kinesisanalytics.CfnApplication.InputParallelismProperty(\n    count=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nInputParallelismProperty inputParallelismProperty = new InputParallelismProperty {\n    Count = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nInputParallelismProperty inputParallelismProperty = InputParallelismProperty.builder()\n        .count(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ninputParallelismProperty := &inputParallelismProperty{\n\tcount: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst inputParallelismProperty: kinesisanalytics.CfnApplication.InputParallelismProperty = {\n  count: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplication.InputParallelismProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplication.InputParallelismProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputParallelismProperty: kinesisanalytics.CfnApplication.InputParallelismProperty = {\n  count: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "f350b080d4443961a987a11fb92e665088bf7aab09c6d9811d6304118c487587"
    },
    "848b9779ce7182ee7ee7df37093e8b196804cda9252067454ea1e40600d8d3dd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ninput_processing_configuration_property = kinesisanalytics.CfnApplication.InputProcessingConfigurationProperty(\n    input_lambda_processor=kinesisanalytics.CfnApplication.InputLambdaProcessorProperty(\n        resource_arn=\"resourceArn\",\n        role_arn=\"roleArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nInputProcessingConfigurationProperty inputProcessingConfigurationProperty = new InputProcessingConfigurationProperty {\n    InputLambdaProcessor = new InputLambdaProcessorProperty {\n        ResourceArn = \"resourceArn\",\n        RoleArn = \"roleArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nInputProcessingConfigurationProperty inputProcessingConfigurationProperty = InputProcessingConfigurationProperty.builder()\n        .inputLambdaProcessor(InputLambdaProcessorProperty.builder()\n                .resourceArn(\"resourceArn\")\n                .roleArn(\"roleArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ninputProcessingConfigurationProperty := &inputProcessingConfigurationProperty{\n\tinputLambdaProcessor: &inputLambdaProcessorProperty{\n\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst inputProcessingConfigurationProperty: kinesisanalytics.CfnApplication.InputProcessingConfigurationProperty = {\n  inputLambdaProcessor: {\n    resourceArn: 'resourceArn',\n    roleArn: 'roleArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplication.InputProcessingConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplication.InputProcessingConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputProcessingConfigurationProperty: kinesisanalytics.CfnApplication.InputProcessingConfigurationProperty = {\n  inputLambdaProcessor: {\n    resourceArn: 'resourceArn',\n    roleArn: 'roleArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "b5e278232118366ae002c04a8862401f49fe1797c9db16b7988c2a8f6057a5f4"
    },
    "dff07408ae679fce8b733860674e47032889b827a1d89e936c2a48833adbd6ab": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ninput_property = kinesisanalytics.CfnApplication.InputProperty(\n    input_schema=kinesisanalytics.CfnApplication.InputSchemaProperty(\n        record_columns=[kinesisanalytics.CfnApplication.RecordColumnProperty(\n            name=\"name\",\n            sql_type=\"sqlType\",\n\n            # the properties below are optional\n            mapping=\"mapping\"\n        )],\n        record_format=kinesisanalytics.CfnApplication.RecordFormatProperty(\n            record_format_type=\"recordFormatType\",\n\n            # the properties below are optional\n            mapping_parameters=kinesisanalytics.CfnApplication.MappingParametersProperty(\n                csv_mapping_parameters=kinesisanalytics.CfnApplication.CSVMappingParametersProperty(\n                    record_column_delimiter=\"recordColumnDelimiter\",\n                    record_row_delimiter=\"recordRowDelimiter\"\n                ),\n                json_mapping_parameters=kinesisanalytics.CfnApplication.JSONMappingParametersProperty(\n                    record_row_path=\"recordRowPath\"\n                )\n            )\n        ),\n\n        # the properties below are optional\n        record_encoding=\"recordEncoding\"\n    ),\n    name_prefix=\"namePrefix\",\n\n    # the properties below are optional\n    input_parallelism=kinesisanalytics.CfnApplication.InputParallelismProperty(\n        count=123\n    ),\n    input_processing_configuration=kinesisanalytics.CfnApplication.InputProcessingConfigurationProperty(\n        input_lambda_processor=kinesisanalytics.CfnApplication.InputLambdaProcessorProperty(\n            resource_arn=\"resourceArn\",\n            role_arn=\"roleArn\"\n        )\n    ),\n    kinesis_firehose_input=kinesisanalytics.CfnApplication.KinesisFirehoseInputProperty(\n        resource_arn=\"resourceArn\",\n        role_arn=\"roleArn\"\n    ),\n    kinesis_streams_input=kinesisanalytics.CfnApplication.KinesisStreamsInputProperty(\n        resource_arn=\"resourceArn\",\n        role_arn=\"roleArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nInputProperty inputProperty = new InputProperty {\n    InputSchema = new InputSchemaProperty {\n        RecordColumns = new [] { new RecordColumnProperty {\n            Name = \"name\",\n            SqlType = \"sqlType\",\n\n            // the properties below are optional\n            Mapping = \"mapping\"\n        } },\n        RecordFormat = new RecordFormatProperty {\n            RecordFormatType = \"recordFormatType\",\n\n            // the properties below are optional\n            MappingParameters = new MappingParametersProperty {\n                CsvMappingParameters = new CSVMappingParametersProperty {\n                    RecordColumnDelimiter = \"recordColumnDelimiter\",\n                    RecordRowDelimiter = \"recordRowDelimiter\"\n                },\n                JsonMappingParameters = new JSONMappingParametersProperty {\n                    RecordRowPath = \"recordRowPath\"\n                }\n            }\n        },\n\n        // the properties below are optional\n        RecordEncoding = \"recordEncoding\"\n    },\n    NamePrefix = \"namePrefix\",\n\n    // the properties below are optional\n    InputParallelism = new InputParallelismProperty {\n        Count = 123\n    },\n    InputProcessingConfiguration = new InputProcessingConfigurationProperty {\n        InputLambdaProcessor = new InputLambdaProcessorProperty {\n            ResourceArn = \"resourceArn\",\n            RoleArn = \"roleArn\"\n        }\n    },\n    KinesisFirehoseInput = new KinesisFirehoseInputProperty {\n        ResourceArn = \"resourceArn\",\n        RoleArn = \"roleArn\"\n    },\n    KinesisStreamsInput = new KinesisStreamsInputProperty {\n        ResourceArn = \"resourceArn\",\n        RoleArn = \"roleArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nInputProperty inputProperty = InputProperty.builder()\n        .inputSchema(InputSchemaProperty.builder()\n                .recordColumns(List.of(RecordColumnProperty.builder()\n                        .name(\"name\")\n                        .sqlType(\"sqlType\")\n\n                        // the properties below are optional\n                        .mapping(\"mapping\")\n                        .build()))\n                .recordFormat(RecordFormatProperty.builder()\n                        .recordFormatType(\"recordFormatType\")\n\n                        // the properties below are optional\n                        .mappingParameters(MappingParametersProperty.builder()\n                                .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                        .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                        .recordRowDelimiter(\"recordRowDelimiter\")\n                                        .build())\n                                .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                        .recordRowPath(\"recordRowPath\")\n                                        .build())\n                                .build())\n                        .build())\n\n                // the properties below are optional\n                .recordEncoding(\"recordEncoding\")\n                .build())\n        .namePrefix(\"namePrefix\")\n\n        // the properties below are optional\n        .inputParallelism(InputParallelismProperty.builder()\n                .count(123)\n                .build())\n        .inputProcessingConfiguration(InputProcessingConfigurationProperty.builder()\n                .inputLambdaProcessor(InputLambdaProcessorProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .roleArn(\"roleArn\")\n                        .build())\n                .build())\n        .kinesisFirehoseInput(KinesisFirehoseInputProperty.builder()\n                .resourceArn(\"resourceArn\")\n                .roleArn(\"roleArn\")\n                .build())\n        .kinesisStreamsInput(KinesisStreamsInputProperty.builder()\n                .resourceArn(\"resourceArn\")\n                .roleArn(\"roleArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ninputProperty := &inputProperty{\n\tinputSchema: &inputSchemaProperty{\n\t\trecordColumns: []interface{}{\n\t\t\t&recordColumnProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t},\n\t\t},\n\t\trecordFormat: &recordFormatProperty{\n\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t},\n\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t},\n\tnamePrefix: jsii.String(\"namePrefix\"),\n\n\t// the properties below are optional\n\tinputParallelism: &inputParallelismProperty{\n\t\tcount: jsii.Number(123),\n\t},\n\tinputProcessingConfiguration: &inputProcessingConfigurationProperty{\n\t\tinputLambdaProcessor: &inputLambdaProcessorProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t},\n\t},\n\tkinesisFirehoseInput: &kinesisFirehoseInputProperty{\n\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t},\n\tkinesisStreamsInput: &kinesisStreamsInputProperty{\n\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst inputProperty: kinesisanalytics.CfnApplication.InputProperty = {\n  inputSchema: {\n    recordColumns: [{\n      name: 'name',\n      sqlType: 'sqlType',\n\n      // the properties below are optional\n      mapping: 'mapping',\n    }],\n    recordFormat: {\n      recordFormatType: 'recordFormatType',\n\n      // the properties below are optional\n      mappingParameters: {\n        csvMappingParameters: {\n          recordColumnDelimiter: 'recordColumnDelimiter',\n          recordRowDelimiter: 'recordRowDelimiter',\n        },\n        jsonMappingParameters: {\n          recordRowPath: 'recordRowPath',\n        },\n      },\n    },\n\n    // the properties below are optional\n    recordEncoding: 'recordEncoding',\n  },\n  namePrefix: 'namePrefix',\n\n  // the properties below are optional\n  inputParallelism: {\n    count: 123,\n  },\n  inputProcessingConfiguration: {\n    inputLambdaProcessor: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n  },\n  kinesisFirehoseInput: {\n    resourceArn: 'resourceArn',\n    roleArn: 'roleArn',\n  },\n  kinesisStreamsInput: {\n    resourceArn: 'resourceArn',\n    roleArn: 'roleArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplication.InputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplication.InputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputProperty: kinesisanalytics.CfnApplication.InputProperty = {\n  inputSchema: {\n    recordColumns: [{\n      name: 'name',\n      sqlType: 'sqlType',\n\n      // the properties below are optional\n      mapping: 'mapping',\n    }],\n    recordFormat: {\n      recordFormatType: 'recordFormatType',\n\n      // the properties below are optional\n      mappingParameters: {\n        csvMappingParameters: {\n          recordColumnDelimiter: 'recordColumnDelimiter',\n          recordRowDelimiter: 'recordRowDelimiter',\n        },\n        jsonMappingParameters: {\n          recordRowPath: 'recordRowPath',\n        },\n      },\n    },\n\n    // the properties below are optional\n    recordEncoding: 'recordEncoding',\n  },\n  namePrefix: 'namePrefix',\n\n  // the properties below are optional\n  inputParallelism: {\n    count: 123,\n  },\n  inputProcessingConfiguration: {\n    inputLambdaProcessor: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n  },\n  kinesisFirehoseInput: {\n    resourceArn: 'resourceArn',\n    roleArn: 'roleArn',\n  },\n  kinesisStreamsInput: {\n    resourceArn: 'resourceArn',\n    roleArn: 'roleArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 16,
        "75": 32,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 12,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 27,
        "290": 1
      },
      "fqnsFingerprint": "82d279d88b88647b87400a88efd6c1726843dd7a1f9e86e2c59390ac1437afe7"
    },
    "27f57ea83c05682c9c90d589d1c76a89baf3847be695451b15b2cef23c8eea50": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ninput_schema_property = kinesisanalytics.CfnApplication.InputSchemaProperty(\n    record_columns=[kinesisanalytics.CfnApplication.RecordColumnProperty(\n        name=\"name\",\n        sql_type=\"sqlType\",\n\n        # the properties below are optional\n        mapping=\"mapping\"\n    )],\n    record_format=kinesisanalytics.CfnApplication.RecordFormatProperty(\n        record_format_type=\"recordFormatType\",\n\n        # the properties below are optional\n        mapping_parameters=kinesisanalytics.CfnApplication.MappingParametersProperty(\n            csv_mapping_parameters=kinesisanalytics.CfnApplication.CSVMappingParametersProperty(\n                record_column_delimiter=\"recordColumnDelimiter\",\n                record_row_delimiter=\"recordRowDelimiter\"\n            ),\n            json_mapping_parameters=kinesisanalytics.CfnApplication.JSONMappingParametersProperty(\n                record_row_path=\"recordRowPath\"\n            )\n        )\n    ),\n\n    # the properties below are optional\n    record_encoding=\"recordEncoding\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nInputSchemaProperty inputSchemaProperty = new InputSchemaProperty {\n    RecordColumns = new [] { new RecordColumnProperty {\n        Name = \"name\",\n        SqlType = \"sqlType\",\n\n        // the properties below are optional\n        Mapping = \"mapping\"\n    } },\n    RecordFormat = new RecordFormatProperty {\n        RecordFormatType = \"recordFormatType\",\n\n        // the properties below are optional\n        MappingParameters = new MappingParametersProperty {\n            CsvMappingParameters = new CSVMappingParametersProperty {\n                RecordColumnDelimiter = \"recordColumnDelimiter\",\n                RecordRowDelimiter = \"recordRowDelimiter\"\n            },\n            JsonMappingParameters = new JSONMappingParametersProperty {\n                RecordRowPath = \"recordRowPath\"\n            }\n        }\n    },\n\n    // the properties below are optional\n    RecordEncoding = \"recordEncoding\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nInputSchemaProperty inputSchemaProperty = InputSchemaProperty.builder()\n        .recordColumns(List.of(RecordColumnProperty.builder()\n                .name(\"name\")\n                .sqlType(\"sqlType\")\n\n                // the properties below are optional\n                .mapping(\"mapping\")\n                .build()))\n        .recordFormat(RecordFormatProperty.builder()\n                .recordFormatType(\"recordFormatType\")\n\n                // the properties below are optional\n                .mappingParameters(MappingParametersProperty.builder()\n                        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                .recordRowDelimiter(\"recordRowDelimiter\")\n                                .build())\n                        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                .recordRowPath(\"recordRowPath\")\n                                .build())\n                        .build())\n                .build())\n\n        // the properties below are optional\n        .recordEncoding(\"recordEncoding\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ninputSchemaProperty := &inputSchemaProperty{\n\trecordColumns: []interface{}{\n\t\t&recordColumnProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t},\n\t},\n\trecordFormat: &recordFormatProperty{\n\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t// the properties below are optional\n\t\tmappingParameters: &mappingParametersProperty{\n\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t},\n\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\trecordEncoding: jsii.String(\"recordEncoding\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst inputSchemaProperty: kinesisanalytics.CfnApplication.InputSchemaProperty = {\n  recordColumns: [{\n    name: 'name',\n    sqlType: 'sqlType',\n\n    // the properties below are optional\n    mapping: 'mapping',\n  }],\n  recordFormat: {\n    recordFormatType: 'recordFormatType',\n\n    // the properties below are optional\n    mappingParameters: {\n      csvMappingParameters: {\n        recordColumnDelimiter: 'recordColumnDelimiter',\n        recordRowDelimiter: 'recordRowDelimiter',\n      },\n      jsonMappingParameters: {\n        recordRowPath: 'recordRowPath',\n      },\n    },\n  },\n\n  // the properties below are optional\n  recordEncoding: 'recordEncoding',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplication.InputSchemaProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplication.InputSchemaProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputSchemaProperty: kinesisanalytics.CfnApplication.InputSchemaProperty = {\n  recordColumns: [{\n    name: 'name',\n    sqlType: 'sqlType',\n\n    // the properties below are optional\n    mapping: 'mapping',\n  }],\n  recordFormat: {\n    recordFormatType: 'recordFormatType',\n\n    // the properties below are optional\n    mappingParameters: {\n      csvMappingParameters: {\n        recordColumnDelimiter: 'recordColumnDelimiter',\n        recordRowDelimiter: 'recordRowDelimiter',\n      },\n      jsonMappingParameters: {\n        recordRowPath: 'recordRowPath',\n      },\n    },\n  },\n\n  // the properties below are optional\n  recordEncoding: 'recordEncoding',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 18,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 6,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "98930ca81a2d607018e1a5a54026f4b574ceeee7bda9062094c794296ae27e7e"
    },
    "01a2fc94eb22963c56667d5e9378b2c455a735cdb79657f63c0151468e726712": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nj_sONMapping_parameters_property = kinesisanalytics.CfnApplication.JSONMappingParametersProperty(\n    record_row_path=\"recordRowPath\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nJSONMappingParametersProperty jSONMappingParametersProperty = new JSONMappingParametersProperty {\n    RecordRowPath = \"recordRowPath\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nJSONMappingParametersProperty jSONMappingParametersProperty = JSONMappingParametersProperty.builder()\n        .recordRowPath(\"recordRowPath\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\njSONMappingParametersProperty := &jSONMappingParametersProperty{\n\trecordRowPath: jsii.String(\"recordRowPath\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst jSONMappingParametersProperty: kinesisanalytics.CfnApplication.JSONMappingParametersProperty = {\n  recordRowPath: 'recordRowPath',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplication.JSONMappingParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplication.JSONMappingParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jSONMappingParametersProperty: kinesisanalytics.CfnApplication.JSONMappingParametersProperty = {\n  recordRowPath: 'recordRowPath',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "83adad5afc6d8a0eae51c9ea7701451d9ddefed2b37465ed7db71d944ad70ff2"
    },
    "25798d377c37603ff2afda517e23f750938755b625da080597f7959202801fcf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nkinesis_firehose_input_property = kinesisanalytics.CfnApplication.KinesisFirehoseInputProperty(\n    resource_arn=\"resourceArn\",\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nKinesisFirehoseInputProperty kinesisFirehoseInputProperty = new KinesisFirehoseInputProperty {\n    ResourceArn = \"resourceArn\",\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nKinesisFirehoseInputProperty kinesisFirehoseInputProperty = KinesisFirehoseInputProperty.builder()\n        .resourceArn(\"resourceArn\")\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nkinesisFirehoseInputProperty := &kinesisFirehoseInputProperty{\n\tresourceArn: jsii.String(\"resourceArn\"),\n\troleArn: jsii.String(\"roleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst kinesisFirehoseInputProperty: kinesisanalytics.CfnApplication.KinesisFirehoseInputProperty = {\n  resourceArn: 'resourceArn',\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplication.KinesisFirehoseInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplication.KinesisFirehoseInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisFirehoseInputProperty: kinesisanalytics.CfnApplication.KinesisFirehoseInputProperty = {\n  resourceArn: 'resourceArn',\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "00461334cea15418897f0d4ce7cb1d282ec247b0a490e0cc4afd9406147d1f2a"
    },
    "9379306a0da4e173aaa5d1021a288b555da7101eca3a276ea1e1db65bd977246": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nkinesis_streams_input_property = kinesisanalytics.CfnApplication.KinesisStreamsInputProperty(\n    resource_arn=\"resourceArn\",\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nKinesisStreamsInputProperty kinesisStreamsInputProperty = new KinesisStreamsInputProperty {\n    ResourceArn = \"resourceArn\",\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nKinesisStreamsInputProperty kinesisStreamsInputProperty = KinesisStreamsInputProperty.builder()\n        .resourceArn(\"resourceArn\")\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nkinesisStreamsInputProperty := &kinesisStreamsInputProperty{\n\tresourceArn: jsii.String(\"resourceArn\"),\n\troleArn: jsii.String(\"roleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst kinesisStreamsInputProperty: kinesisanalytics.CfnApplication.KinesisStreamsInputProperty = {\n  resourceArn: 'resourceArn',\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplication.KinesisStreamsInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplication.KinesisStreamsInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisStreamsInputProperty: kinesisanalytics.CfnApplication.KinesisStreamsInputProperty = {\n  resourceArn: 'resourceArn',\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "5f60ebe8e11693a608f92129ff1727066d41c6e25feb8adabc4577ba5b264941"
    },
    "16083214db8d3f282247d2e6b3521ea6ac0c381059db834603065d2d633911de": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nmapping_parameters_property = kinesisanalytics.CfnApplication.MappingParametersProperty(\n    csv_mapping_parameters=kinesisanalytics.CfnApplication.CSVMappingParametersProperty(\n        record_column_delimiter=\"recordColumnDelimiter\",\n        record_row_delimiter=\"recordRowDelimiter\"\n    ),\n    json_mapping_parameters=kinesisanalytics.CfnApplication.JSONMappingParametersProperty(\n        record_row_path=\"recordRowPath\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nMappingParametersProperty mappingParametersProperty = new MappingParametersProperty {\n    CsvMappingParameters = new CSVMappingParametersProperty {\n        RecordColumnDelimiter = \"recordColumnDelimiter\",\n        RecordRowDelimiter = \"recordRowDelimiter\"\n    },\n    JsonMappingParameters = new JSONMappingParametersProperty {\n        RecordRowPath = \"recordRowPath\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nMappingParametersProperty mappingParametersProperty = MappingParametersProperty.builder()\n        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                .recordRowDelimiter(\"recordRowDelimiter\")\n                .build())\n        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                .recordRowPath(\"recordRowPath\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nmappingParametersProperty := &mappingParametersProperty{\n\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t},\n\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst mappingParametersProperty: kinesisanalytics.CfnApplication.MappingParametersProperty = {\n  csvMappingParameters: {\n    recordColumnDelimiter: 'recordColumnDelimiter',\n    recordRowDelimiter: 'recordRowDelimiter',\n  },\n  jsonMappingParameters: {\n    recordRowPath: 'recordRowPath',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplication.MappingParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplication.MappingParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst mappingParametersProperty: kinesisanalytics.CfnApplication.MappingParametersProperty = {\n  csvMappingParameters: {\n    recordColumnDelimiter: 'recordColumnDelimiter',\n    recordRowDelimiter: 'recordRowDelimiter',\n  },\n  jsonMappingParameters: {\n    recordRowPath: 'recordRowPath',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "89ee2b010d02ada7c27dd0f15c4355ad5fe98f400be4a964e729844f356df148"
    },
    "154c40feeaeb7cde14100d3f8092131b99fd9298ae18ddefdda621e6defb3d2f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nrecord_column_property = kinesisanalytics.CfnApplication.RecordColumnProperty(\n    name=\"name\",\n    sql_type=\"sqlType\",\n\n    # the properties below are optional\n    mapping=\"mapping\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nRecordColumnProperty recordColumnProperty = new RecordColumnProperty {\n    Name = \"name\",\n    SqlType = \"sqlType\",\n\n    // the properties below are optional\n    Mapping = \"mapping\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nRecordColumnProperty recordColumnProperty = RecordColumnProperty.builder()\n        .name(\"name\")\n        .sqlType(\"sqlType\")\n\n        // the properties below are optional\n        .mapping(\"mapping\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nrecordColumnProperty := &recordColumnProperty{\n\tname: jsii.String(\"name\"),\n\tsqlType: jsii.String(\"sqlType\"),\n\n\t// the properties below are optional\n\tmapping: jsii.String(\"mapping\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst recordColumnProperty: kinesisanalytics.CfnApplication.RecordColumnProperty = {\n  name: 'name',\n  sqlType: 'sqlType',\n\n  // the properties below are optional\n  mapping: 'mapping',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplication.RecordColumnProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplication.RecordColumnProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst recordColumnProperty: kinesisanalytics.CfnApplication.RecordColumnProperty = {\n  name: 'name',\n  sqlType: 'sqlType',\n\n  // the properties below are optional\n  mapping: 'mapping',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "27cdca387e47cd345011e056c520cacb9e44996e57bcaee4a8cdb783f4be769f"
    },
    "a2365773e337e174baa3cbafa2d0afd0612d8c6f3b6661e8d0bc99ee648fa6e7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nrecord_format_property = kinesisanalytics.CfnApplication.RecordFormatProperty(\n    record_format_type=\"recordFormatType\",\n\n    # the properties below are optional\n    mapping_parameters=kinesisanalytics.CfnApplication.MappingParametersProperty(\n        csv_mapping_parameters=kinesisanalytics.CfnApplication.CSVMappingParametersProperty(\n            record_column_delimiter=\"recordColumnDelimiter\",\n            record_row_delimiter=\"recordRowDelimiter\"\n        ),\n        json_mapping_parameters=kinesisanalytics.CfnApplication.JSONMappingParametersProperty(\n            record_row_path=\"recordRowPath\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nRecordFormatProperty recordFormatProperty = new RecordFormatProperty {\n    RecordFormatType = \"recordFormatType\",\n\n    // the properties below are optional\n    MappingParameters = new MappingParametersProperty {\n        CsvMappingParameters = new CSVMappingParametersProperty {\n            RecordColumnDelimiter = \"recordColumnDelimiter\",\n            RecordRowDelimiter = \"recordRowDelimiter\"\n        },\n        JsonMappingParameters = new JSONMappingParametersProperty {\n            RecordRowPath = \"recordRowPath\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nRecordFormatProperty recordFormatProperty = RecordFormatProperty.builder()\n        .recordFormatType(\"recordFormatType\")\n\n        // the properties below are optional\n        .mappingParameters(MappingParametersProperty.builder()\n                .csvMappingParameters(CSVMappingParametersProperty.builder()\n                        .recordColumnDelimiter(\"recordColumnDelimiter\")\n                        .recordRowDelimiter(\"recordRowDelimiter\")\n                        .build())\n                .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                        .recordRowPath(\"recordRowPath\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nrecordFormatProperty := &recordFormatProperty{\n\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t// the properties below are optional\n\tmappingParameters: &mappingParametersProperty{\n\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t},\n\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst recordFormatProperty: kinesisanalytics.CfnApplication.RecordFormatProperty = {\n  recordFormatType: 'recordFormatType',\n\n  // the properties below are optional\n  mappingParameters: {\n    csvMappingParameters: {\n      recordColumnDelimiter: 'recordColumnDelimiter',\n      recordRowDelimiter: 'recordRowDelimiter',\n    },\n    jsonMappingParameters: {\n      recordRowPath: 'recordRowPath',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplication.RecordFormatProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplication.RecordFormatProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst recordFormatProperty: kinesisanalytics.CfnApplication.RecordFormatProperty = {\n  recordFormatType: 'recordFormatType',\n\n  // the properties below are optional\n  mappingParameters: {\n    csvMappingParameters: {\n      recordColumnDelimiter: 'recordColumnDelimiter',\n      recordRowDelimiter: 'recordRowDelimiter',\n    },\n    jsonMappingParameters: {\n      recordRowPath: 'recordRowPath',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 12,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "fe5012de37cfa9afd2c974387d0ce373d061de99792fee4b711fc8f672cf9a37"
    },
    "582f20f772f5406a0aeeda7a50fbe0b53ebda9a7082ee8ee2567214be1b27f37": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application_cloud_watch_logging_option_v2 = kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2(self, \"MyCfnApplicationCloudWatchLoggingOptionV2\",\n    application_name=\"applicationName\",\n    cloud_watch_logging_option=kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2.CloudWatchLoggingOptionProperty(\n        log_stream_arn=\"logStreamArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplicationCloudWatchLoggingOptionV2 cfnApplicationCloudWatchLoggingOptionV2 = new CfnApplicationCloudWatchLoggingOptionV2(this, \"MyCfnApplicationCloudWatchLoggingOptionV2\", new CfnApplicationCloudWatchLoggingOptionV2Props {\n    ApplicationName = \"applicationName\",\n    CloudWatchLoggingOption = new CloudWatchLoggingOptionProperty {\n        LogStreamArn = \"logStreamArn\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplicationCloudWatchLoggingOptionV2 cfnApplicationCloudWatchLoggingOptionV2 = CfnApplicationCloudWatchLoggingOptionV2.Builder.create(this, \"MyCfnApplicationCloudWatchLoggingOptionV2\")\n        .applicationName(\"applicationName\")\n        .cloudWatchLoggingOption(CloudWatchLoggingOptionProperty.builder()\n                .logStreamArn(\"logStreamArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplicationCloudWatchLoggingOptionV2 := kinesisanalytics.NewCfnApplicationCloudWatchLoggingOptionV2(this, jsii.String(\"MyCfnApplicationCloudWatchLoggingOptionV2\"), &cfnApplicationCloudWatchLoggingOptionV2Props{\n\tapplicationName: jsii.String(\"applicationName\"),\n\tcloudWatchLoggingOption: &cloudWatchLoggingOptionProperty{\n\t\tlogStreamArn: jsii.String(\"logStreamArn\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplicationCloudWatchLoggingOptionV2 = new kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2(this, 'MyCfnApplicationCloudWatchLoggingOptionV2', {\n  applicationName: 'applicationName',\n  cloudWatchLoggingOption: {\n    logStreamArn: 'logStreamArn',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2",
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2Props",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationCloudWatchLoggingOptionV2 = new kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2(this, 'MyCfnApplicationCloudWatchLoggingOptionV2', {\n  applicationName: 'applicationName',\n  cloudWatchLoggingOption: {\n    logStreamArn: 'logStreamArn',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "0b4d786a61a52df5fdd06ea652cd4ac700c2cd0365f7f7ac12dcdb7de4817f0d"
    },
    "72abe7f74e5b6a6432c021836fa0cf2bfea98781ed3737c1d197fe2bef1f347e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncloud_watch_logging_option_property = kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2.CloudWatchLoggingOptionProperty(\n    log_stream_arn=\"logStreamArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCloudWatchLoggingOptionProperty cloudWatchLoggingOptionProperty = new CloudWatchLoggingOptionProperty {\n    LogStreamArn = \"logStreamArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCloudWatchLoggingOptionProperty cloudWatchLoggingOptionProperty = CloudWatchLoggingOptionProperty.builder()\n        .logStreamArn(\"logStreamArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncloudWatchLoggingOptionProperty := &cloudWatchLoggingOptionProperty{\n\tlogStreamArn: jsii.String(\"logStreamArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cloudWatchLoggingOptionProperty: kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2.CloudWatchLoggingOptionProperty = {\n  logStreamArn: 'logStreamArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2.CloudWatchLoggingOptionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2.CloudWatchLoggingOptionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cloudWatchLoggingOptionProperty: kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2.CloudWatchLoggingOptionProperty = {\n  logStreamArn: 'logStreamArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "8afcf27561a6f97dab73c361ba0efa28e1e30fef902fcf857aaf6f7feb967c72"
    },
    "6cbd907a204fa966fdfcadc0486eba7820b17c8a8d4bdada4779c3e8e1ffa387": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application_cloud_watch_logging_option_v2_props = kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2Props(\n    application_name=\"applicationName\",\n    cloud_watch_logging_option=kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2.CloudWatchLoggingOptionProperty(\n        log_stream_arn=\"logStreamArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplicationCloudWatchLoggingOptionV2Props cfnApplicationCloudWatchLoggingOptionV2Props = new CfnApplicationCloudWatchLoggingOptionV2Props {\n    ApplicationName = \"applicationName\",\n    CloudWatchLoggingOption = new CloudWatchLoggingOptionProperty {\n        LogStreamArn = \"logStreamArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplicationCloudWatchLoggingOptionV2Props cfnApplicationCloudWatchLoggingOptionV2Props = CfnApplicationCloudWatchLoggingOptionV2Props.builder()\n        .applicationName(\"applicationName\")\n        .cloudWatchLoggingOption(CloudWatchLoggingOptionProperty.builder()\n                .logStreamArn(\"logStreamArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplicationCloudWatchLoggingOptionV2Props := &cfnApplicationCloudWatchLoggingOptionV2Props{\n\tapplicationName: jsii.String(\"applicationName\"),\n\tcloudWatchLoggingOption: &cloudWatchLoggingOptionProperty{\n\t\tlogStreamArn: jsii.String(\"logStreamArn\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplicationCloudWatchLoggingOptionV2Props: kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2Props = {\n  applicationName: 'applicationName',\n  cloudWatchLoggingOption: {\n    logStreamArn: 'logStreamArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2Props"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2Props"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationCloudWatchLoggingOptionV2Props: kinesisanalytics.CfnApplicationCloudWatchLoggingOptionV2Props = {\n  applicationName: 'applicationName',\n  cloudWatchLoggingOption: {\n    logStreamArn: 'logStreamArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "89c9beb205fb078a7b2a521f118d65616ff1ab46657d52f4f55122c3421b3bb3"
    },
    "30405c9e98c6c88f61c07df85f9f1e857bdc36e5f5ca4297398d48641a100edf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application_output = kinesisanalytics.CfnApplicationOutput(self, \"MyCfnApplicationOutput\",\n    application_name=\"applicationName\",\n    output=kinesisanalytics.CfnApplicationOutput.OutputProperty(\n        destination_schema=kinesisanalytics.CfnApplicationOutput.DestinationSchemaProperty(\n            record_format_type=\"recordFormatType\"\n        ),\n\n        # the properties below are optional\n        kinesis_firehose_output=kinesisanalytics.CfnApplicationOutput.KinesisFirehoseOutputProperty(\n            resource_arn=\"resourceArn\",\n            role_arn=\"roleArn\"\n        ),\n        kinesis_streams_output=kinesisanalytics.CfnApplicationOutput.KinesisStreamsOutputProperty(\n            resource_arn=\"resourceArn\",\n            role_arn=\"roleArn\"\n        ),\n        lambda_output=kinesisanalytics.CfnApplicationOutput.LambdaOutputProperty(\n            resource_arn=\"resourceArn\",\n            role_arn=\"roleArn\"\n        ),\n        name=\"name\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplicationOutput cfnApplicationOutput = new CfnApplicationOutput(this, \"MyCfnApplicationOutput\", new CfnApplicationOutputProps {\n    ApplicationName = \"applicationName\",\n    Output = new OutputProperty {\n        DestinationSchema = new DestinationSchemaProperty {\n            RecordFormatType = \"recordFormatType\"\n        },\n\n        // the properties below are optional\n        KinesisFirehoseOutput = new KinesisFirehoseOutputProperty {\n            ResourceArn = \"resourceArn\",\n            RoleArn = \"roleArn\"\n        },\n        KinesisStreamsOutput = new KinesisStreamsOutputProperty {\n            ResourceArn = \"resourceArn\",\n            RoleArn = \"roleArn\"\n        },\n        LambdaOutput = new LambdaOutputProperty {\n            ResourceArn = \"resourceArn\",\n            RoleArn = \"roleArn\"\n        },\n        Name = \"name\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplicationOutput cfnApplicationOutput = CfnApplicationOutput.Builder.create(this, \"MyCfnApplicationOutput\")\n        .applicationName(\"applicationName\")\n        .output(OutputProperty.builder()\n                .destinationSchema(DestinationSchemaProperty.builder()\n                        .recordFormatType(\"recordFormatType\")\n                        .build())\n\n                // the properties below are optional\n                .kinesisFirehoseOutput(KinesisFirehoseOutputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .roleArn(\"roleArn\")\n                        .build())\n                .kinesisStreamsOutput(KinesisStreamsOutputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .roleArn(\"roleArn\")\n                        .build())\n                .lambdaOutput(LambdaOutputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .roleArn(\"roleArn\")\n                        .build())\n                .name(\"name\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplicationOutput := kinesisanalytics.NewCfnApplicationOutput(this, jsii.String(\"MyCfnApplicationOutput\"), &cfnApplicationOutputProps{\n\tapplicationName: jsii.String(\"applicationName\"),\n\toutput: &outputProperty{\n\t\tdestinationSchema: &destinationSchemaProperty{\n\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tkinesisFirehoseOutput: &kinesisFirehoseOutputProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t},\n\t\tkinesisStreamsOutput: &kinesisStreamsOutputProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t},\n\t\tlambdaOutput: &lambdaOutputProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t},\n\t\tname: jsii.String(\"name\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplicationOutput = new kinesisanalytics.CfnApplicationOutput(this, 'MyCfnApplicationOutput', {\n  applicationName: 'applicationName',\n  output: {\n    destinationSchema: {\n      recordFormatType: 'recordFormatType',\n    },\n\n    // the properties below are optional\n    kinesisFirehoseOutput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    kinesisStreamsOutput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    lambdaOutput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    name: 'name',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutput"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutput",
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationOutput = new kinesisanalytics.CfnApplicationOutput(this, 'MyCfnApplicationOutput', {\n  applicationName: 'applicationName',\n  output: {\n    destinationSchema: {\n      recordFormatType: 'recordFormatType',\n    },\n\n    // the properties below are optional\n    kinesisFirehoseOutput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    kinesisStreamsOutput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    lambdaOutput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    name: 'name',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 11,
        "75": 18,
        "104": 1,
        "193": 6,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "625a76fbd794de1ece6b9721038d63528905f2f2df32d60453b3fe23803fd432"
    },
    "621050e514d6c3952ee78ea23f036879accc167989b24569aae9667635af6037": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ndestination_schema_property = kinesisanalytics.CfnApplicationOutput.DestinationSchemaProperty(\n    record_format_type=\"recordFormatType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nDestinationSchemaProperty destinationSchemaProperty = new DestinationSchemaProperty {\n    RecordFormatType = \"recordFormatType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nDestinationSchemaProperty destinationSchemaProperty = DestinationSchemaProperty.builder()\n        .recordFormatType(\"recordFormatType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ndestinationSchemaProperty := &destinationSchemaProperty{\n\trecordFormatType: jsii.String(\"recordFormatType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst destinationSchemaProperty: kinesisanalytics.CfnApplicationOutput.DestinationSchemaProperty = {\n  recordFormatType: 'recordFormatType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutput.DestinationSchemaProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutput.DestinationSchemaProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst destinationSchemaProperty: kinesisanalytics.CfnApplicationOutput.DestinationSchemaProperty = {\n  recordFormatType: 'recordFormatType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "5d60ec9d2ce5177cdcba61b525c72486a2ef1fdccf78ecbb10538ff9f3acf000"
    },
    "598869878fcef843d224bea23a73dbb20340587e2b786686f72edd53a7a7c25d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nkinesis_firehose_output_property = kinesisanalytics.CfnApplicationOutput.KinesisFirehoseOutputProperty(\n    resource_arn=\"resourceArn\",\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nKinesisFirehoseOutputProperty kinesisFirehoseOutputProperty = new KinesisFirehoseOutputProperty {\n    ResourceArn = \"resourceArn\",\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nKinesisFirehoseOutputProperty kinesisFirehoseOutputProperty = KinesisFirehoseOutputProperty.builder()\n        .resourceArn(\"resourceArn\")\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nkinesisFirehoseOutputProperty := &kinesisFirehoseOutputProperty{\n\tresourceArn: jsii.String(\"resourceArn\"),\n\troleArn: jsii.String(\"roleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst kinesisFirehoseOutputProperty: kinesisanalytics.CfnApplicationOutput.KinesisFirehoseOutputProperty = {\n  resourceArn: 'resourceArn',\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutput.KinesisFirehoseOutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutput.KinesisFirehoseOutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisFirehoseOutputProperty: kinesisanalytics.CfnApplicationOutput.KinesisFirehoseOutputProperty = {\n  resourceArn: 'resourceArn',\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "ea9cf840428d29ee5be3e129356b72a771c2bbf1a1b464e81d05b563315fc36a"
    },
    "b8e9e1035ed1dada6ca385072182ed82de292b9ee7edd4a6aa6db354d96303ac": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nkinesis_streams_output_property = kinesisanalytics.CfnApplicationOutput.KinesisStreamsOutputProperty(\n    resource_arn=\"resourceArn\",\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nKinesisStreamsOutputProperty kinesisStreamsOutputProperty = new KinesisStreamsOutputProperty {\n    ResourceArn = \"resourceArn\",\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nKinesisStreamsOutputProperty kinesisStreamsOutputProperty = KinesisStreamsOutputProperty.builder()\n        .resourceArn(\"resourceArn\")\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nkinesisStreamsOutputProperty := &kinesisStreamsOutputProperty{\n\tresourceArn: jsii.String(\"resourceArn\"),\n\troleArn: jsii.String(\"roleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst kinesisStreamsOutputProperty: kinesisanalytics.CfnApplicationOutput.KinesisStreamsOutputProperty = {\n  resourceArn: 'resourceArn',\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutput.KinesisStreamsOutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutput.KinesisStreamsOutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisStreamsOutputProperty: kinesisanalytics.CfnApplicationOutput.KinesisStreamsOutputProperty = {\n  resourceArn: 'resourceArn',\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "962ea3b4a6d86fc60ac20764a8e27529b45475154fea945404287325f9faa3a1"
    },
    "24b901acac7cf4d856126e8c59c29f286a6183a29f15f64c9ff6356751d5d669": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nlambda_output_property = kinesisanalytics.CfnApplicationOutput.LambdaOutputProperty(\n    resource_arn=\"resourceArn\",\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nLambdaOutputProperty lambdaOutputProperty = new LambdaOutputProperty {\n    ResourceArn = \"resourceArn\",\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nLambdaOutputProperty lambdaOutputProperty = LambdaOutputProperty.builder()\n        .resourceArn(\"resourceArn\")\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nlambdaOutputProperty := &lambdaOutputProperty{\n\tresourceArn: jsii.String(\"resourceArn\"),\n\troleArn: jsii.String(\"roleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst lambdaOutputProperty: kinesisanalytics.CfnApplicationOutput.LambdaOutputProperty = {\n  resourceArn: 'resourceArn',\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutput.LambdaOutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutput.LambdaOutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lambdaOutputProperty: kinesisanalytics.CfnApplicationOutput.LambdaOutputProperty = {\n  resourceArn: 'resourceArn',\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "369c7d3c159ae4ec32b8367af908daeb698a8c41802c93334ad54072f040d73a"
    },
    "7df3e111d6f9edf240f24b9cff65ea10b8767137d95897f6faaa058c8bdfea1d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\noutput_property = kinesisanalytics.CfnApplicationOutput.OutputProperty(\n    destination_schema=kinesisanalytics.CfnApplicationOutput.DestinationSchemaProperty(\n        record_format_type=\"recordFormatType\"\n    ),\n\n    # the properties below are optional\n    kinesis_firehose_output=kinesisanalytics.CfnApplicationOutput.KinesisFirehoseOutputProperty(\n        resource_arn=\"resourceArn\",\n        role_arn=\"roleArn\"\n    ),\n    kinesis_streams_output=kinesisanalytics.CfnApplicationOutput.KinesisStreamsOutputProperty(\n        resource_arn=\"resourceArn\",\n        role_arn=\"roleArn\"\n    ),\n    lambda_output=kinesisanalytics.CfnApplicationOutput.LambdaOutputProperty(\n        resource_arn=\"resourceArn\",\n        role_arn=\"roleArn\"\n    ),\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nOutputProperty outputProperty = new OutputProperty {\n    DestinationSchema = new DestinationSchemaProperty {\n        RecordFormatType = \"recordFormatType\"\n    },\n\n    // the properties below are optional\n    KinesisFirehoseOutput = new KinesisFirehoseOutputProperty {\n        ResourceArn = \"resourceArn\",\n        RoleArn = \"roleArn\"\n    },\n    KinesisStreamsOutput = new KinesisStreamsOutputProperty {\n        ResourceArn = \"resourceArn\",\n        RoleArn = \"roleArn\"\n    },\n    LambdaOutput = new LambdaOutputProperty {\n        ResourceArn = \"resourceArn\",\n        RoleArn = \"roleArn\"\n    },\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nOutputProperty outputProperty = OutputProperty.builder()\n        .destinationSchema(DestinationSchemaProperty.builder()\n                .recordFormatType(\"recordFormatType\")\n                .build())\n\n        // the properties below are optional\n        .kinesisFirehoseOutput(KinesisFirehoseOutputProperty.builder()\n                .resourceArn(\"resourceArn\")\n                .roleArn(\"roleArn\")\n                .build())\n        .kinesisStreamsOutput(KinesisStreamsOutputProperty.builder()\n                .resourceArn(\"resourceArn\")\n                .roleArn(\"roleArn\")\n                .build())\n        .lambdaOutput(LambdaOutputProperty.builder()\n                .resourceArn(\"resourceArn\")\n                .roleArn(\"roleArn\")\n                .build())\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\noutputProperty := &outputProperty{\n\tdestinationSchema: &destinationSchemaProperty{\n\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\t},\n\n\t// the properties below are optional\n\tkinesisFirehoseOutput: &kinesisFirehoseOutputProperty{\n\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t},\n\tkinesisStreamsOutput: &kinesisStreamsOutputProperty{\n\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t},\n\tlambdaOutput: &lambdaOutputProperty{\n\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t},\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst outputProperty: kinesisanalytics.CfnApplicationOutput.OutputProperty = {\n  destinationSchema: {\n    recordFormatType: 'recordFormatType',\n  },\n\n  // the properties below are optional\n  kinesisFirehoseOutput: {\n    resourceArn: 'resourceArn',\n    roleArn: 'roleArn',\n  },\n  kinesisStreamsOutput: {\n    resourceArn: 'resourceArn',\n    roleArn: 'roleArn',\n  },\n  lambdaOutput: {\n    resourceArn: 'resourceArn',\n    roleArn: 'roleArn',\n  },\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutput.OutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutput.OutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst outputProperty: kinesisanalytics.CfnApplicationOutput.OutputProperty = {\n  destinationSchema: {\n    recordFormatType: 'recordFormatType',\n  },\n\n  // the properties below are optional\n  kinesisFirehoseOutput: {\n    resourceArn: 'resourceArn',\n    roleArn: 'roleArn',\n  },\n  kinesisStreamsOutput: {\n    resourceArn: 'resourceArn',\n    roleArn: 'roleArn',\n  },\n  lambdaOutput: {\n    resourceArn: 'resourceArn',\n    roleArn: 'roleArn',\n  },\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 17,
        "153": 2,
        "169": 1,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "d0a19ed289b27b7d9b5d59fb232fb93e1526bee314155dcc2340052217abb09e"
    },
    "e999eb0c5a88639ce34d6f6ff2971ca0cad8e2e1a97c9df1fd50d32520b077e8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application_output_props = kinesisanalytics.CfnApplicationOutputProps(\n    application_name=\"applicationName\",\n    output=kinesisanalytics.CfnApplicationOutput.OutputProperty(\n        destination_schema=kinesisanalytics.CfnApplicationOutput.DestinationSchemaProperty(\n            record_format_type=\"recordFormatType\"\n        ),\n\n        # the properties below are optional\n        kinesis_firehose_output=kinesisanalytics.CfnApplicationOutput.KinesisFirehoseOutputProperty(\n            resource_arn=\"resourceArn\",\n            role_arn=\"roleArn\"\n        ),\n        kinesis_streams_output=kinesisanalytics.CfnApplicationOutput.KinesisStreamsOutputProperty(\n            resource_arn=\"resourceArn\",\n            role_arn=\"roleArn\"\n        ),\n        lambda_output=kinesisanalytics.CfnApplicationOutput.LambdaOutputProperty(\n            resource_arn=\"resourceArn\",\n            role_arn=\"roleArn\"\n        ),\n        name=\"name\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplicationOutputProps cfnApplicationOutputProps = new CfnApplicationOutputProps {\n    ApplicationName = \"applicationName\",\n    Output = new OutputProperty {\n        DestinationSchema = new DestinationSchemaProperty {\n            RecordFormatType = \"recordFormatType\"\n        },\n\n        // the properties below are optional\n        KinesisFirehoseOutput = new KinesisFirehoseOutputProperty {\n            ResourceArn = \"resourceArn\",\n            RoleArn = \"roleArn\"\n        },\n        KinesisStreamsOutput = new KinesisStreamsOutputProperty {\n            ResourceArn = \"resourceArn\",\n            RoleArn = \"roleArn\"\n        },\n        LambdaOutput = new LambdaOutputProperty {\n            ResourceArn = \"resourceArn\",\n            RoleArn = \"roleArn\"\n        },\n        Name = \"name\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplicationOutputProps cfnApplicationOutputProps = CfnApplicationOutputProps.builder()\n        .applicationName(\"applicationName\")\n        .output(OutputProperty.builder()\n                .destinationSchema(DestinationSchemaProperty.builder()\n                        .recordFormatType(\"recordFormatType\")\n                        .build())\n\n                // the properties below are optional\n                .kinesisFirehoseOutput(KinesisFirehoseOutputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .roleArn(\"roleArn\")\n                        .build())\n                .kinesisStreamsOutput(KinesisStreamsOutputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .roleArn(\"roleArn\")\n                        .build())\n                .lambdaOutput(LambdaOutputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .roleArn(\"roleArn\")\n                        .build())\n                .name(\"name\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplicationOutputProps := &cfnApplicationOutputProps{\n\tapplicationName: jsii.String(\"applicationName\"),\n\toutput: &outputProperty{\n\t\tdestinationSchema: &destinationSchemaProperty{\n\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tkinesisFirehoseOutput: &kinesisFirehoseOutputProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t},\n\t\tkinesisStreamsOutput: &kinesisStreamsOutputProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t},\n\t\tlambdaOutput: &lambdaOutputProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t},\n\t\tname: jsii.String(\"name\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplicationOutputProps: kinesisanalytics.CfnApplicationOutputProps = {\n  applicationName: 'applicationName',\n  output: {\n    destinationSchema: {\n      recordFormatType: 'recordFormatType',\n    },\n\n    // the properties below are optional\n    kinesisFirehoseOutput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    kinesisStreamsOutput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    lambdaOutput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    name: 'name',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationOutputProps: kinesisanalytics.CfnApplicationOutputProps = {\n  applicationName: 'applicationName',\n  output: {\n    destinationSchema: {\n      recordFormatType: 'recordFormatType',\n    },\n\n    // the properties below are optional\n    kinesisFirehoseOutput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    kinesisStreamsOutput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    lambdaOutput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    name: 'name',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 18,
        "153": 1,
        "169": 1,
        "193": 6,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "a92b02ed884aebe2ab44687dfa1d55c4a83c03ae1d6ad119a8ef6b20f4267f2d"
    },
    "68632ed047607cf3234a8d45e141377f9ede88f3a4bc30d48947100fa95605c0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application_output_v2 = kinesisanalytics.CfnApplicationOutputV2(self, \"MyCfnApplicationOutputV2\",\n    application_name=\"applicationName\",\n    output=kinesisanalytics.CfnApplicationOutputV2.OutputProperty(\n        destination_schema=kinesisanalytics.CfnApplicationOutputV2.DestinationSchemaProperty(\n            record_format_type=\"recordFormatType\"\n        ),\n\n        # the properties below are optional\n        kinesis_firehose_output=kinesisanalytics.CfnApplicationOutputV2.KinesisFirehoseOutputProperty(\n            resource_arn=\"resourceArn\"\n        ),\n        kinesis_streams_output=kinesisanalytics.CfnApplicationOutputV2.KinesisStreamsOutputProperty(\n            resource_arn=\"resourceArn\"\n        ),\n        lambda_output=kinesisanalytics.CfnApplicationOutputV2.LambdaOutputProperty(\n            resource_arn=\"resourceArn\"\n        ),\n        name=\"name\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplicationOutputV2 cfnApplicationOutputV2 = new CfnApplicationOutputV2(this, \"MyCfnApplicationOutputV2\", new CfnApplicationOutputV2Props {\n    ApplicationName = \"applicationName\",\n    Output = new OutputProperty {\n        DestinationSchema = new DestinationSchemaProperty {\n            RecordFormatType = \"recordFormatType\"\n        },\n\n        // the properties below are optional\n        KinesisFirehoseOutput = new KinesisFirehoseOutputProperty {\n            ResourceArn = \"resourceArn\"\n        },\n        KinesisStreamsOutput = new KinesisStreamsOutputProperty {\n            ResourceArn = \"resourceArn\"\n        },\n        LambdaOutput = new LambdaOutputProperty {\n            ResourceArn = \"resourceArn\"\n        },\n        Name = \"name\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplicationOutputV2 cfnApplicationOutputV2 = CfnApplicationOutputV2.Builder.create(this, \"MyCfnApplicationOutputV2\")\n        .applicationName(\"applicationName\")\n        .output(OutputProperty.builder()\n                .destinationSchema(DestinationSchemaProperty.builder()\n                        .recordFormatType(\"recordFormatType\")\n                        .build())\n\n                // the properties below are optional\n                .kinesisFirehoseOutput(KinesisFirehoseOutputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .build())\n                .kinesisStreamsOutput(KinesisStreamsOutputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .build())\n                .lambdaOutput(LambdaOutputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .build())\n                .name(\"name\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplicationOutputV2 := kinesisanalytics.NewCfnApplicationOutputV2(this, jsii.String(\"MyCfnApplicationOutputV2\"), &cfnApplicationOutputV2Props{\n\tapplicationName: jsii.String(\"applicationName\"),\n\toutput: &outputProperty{\n\t\tdestinationSchema: &destinationSchemaProperty{\n\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tkinesisFirehoseOutput: &kinesisFirehoseOutputProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t},\n\t\tkinesisStreamsOutput: &kinesisStreamsOutputProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t},\n\t\tlambdaOutput: &lambdaOutputProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t},\n\t\tname: jsii.String(\"name\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplicationOutputV2 = new kinesisanalytics.CfnApplicationOutputV2(this, 'MyCfnApplicationOutputV2', {\n  applicationName: 'applicationName',\n  output: {\n    destinationSchema: {\n      recordFormatType: 'recordFormatType',\n    },\n\n    // the properties below are optional\n    kinesisFirehoseOutput: {\n      resourceArn: 'resourceArn',\n    },\n    kinesisStreamsOutput: {\n      resourceArn: 'resourceArn',\n    },\n    lambdaOutput: {\n      resourceArn: 'resourceArn',\n    },\n    name: 'name',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2",
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2Props",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationOutputV2 = new kinesisanalytics.CfnApplicationOutputV2(this, 'MyCfnApplicationOutputV2', {\n  applicationName: 'applicationName',\n  output: {\n    destinationSchema: {\n      recordFormatType: 'recordFormatType',\n    },\n\n    // the properties below are optional\n    kinesisFirehoseOutput: {\n      resourceArn: 'resourceArn',\n    },\n    kinesisStreamsOutput: {\n      resourceArn: 'resourceArn',\n    },\n    lambdaOutput: {\n      resourceArn: 'resourceArn',\n    },\n    name: 'name',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 15,
        "104": 1,
        "193": 6,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "fea15564df1b2ce6410231117d8f4a0b371f3192b6b6a1f5a04cfc1f61ae4fcd"
    },
    "fe09ff8c86e91b481d79cc978fbf412195bb2f9954814af3adafe1b713a6c88e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ndestination_schema_property = kinesisanalytics.CfnApplicationOutputV2.DestinationSchemaProperty(\n    record_format_type=\"recordFormatType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nDestinationSchemaProperty destinationSchemaProperty = new DestinationSchemaProperty {\n    RecordFormatType = \"recordFormatType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nDestinationSchemaProperty destinationSchemaProperty = DestinationSchemaProperty.builder()\n        .recordFormatType(\"recordFormatType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ndestinationSchemaProperty := &destinationSchemaProperty{\n\trecordFormatType: jsii.String(\"recordFormatType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst destinationSchemaProperty: kinesisanalytics.CfnApplicationOutputV2.DestinationSchemaProperty = {\n  recordFormatType: 'recordFormatType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2.DestinationSchemaProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2.DestinationSchemaProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst destinationSchemaProperty: kinesisanalytics.CfnApplicationOutputV2.DestinationSchemaProperty = {\n  recordFormatType: 'recordFormatType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "61b8baf6b9cdf98f467cfd872b377c929a7582bb661a2cdb0d5503dbc8e3f22d"
    },
    "6cae520500b997cd2cb40b43dbad7edb7992df17b768f3ba3f535cda93e63a17": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nkinesis_firehose_output_property = kinesisanalytics.CfnApplicationOutputV2.KinesisFirehoseOutputProperty(\n    resource_arn=\"resourceArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nKinesisFirehoseOutputProperty kinesisFirehoseOutputProperty = new KinesisFirehoseOutputProperty {\n    ResourceArn = \"resourceArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nKinesisFirehoseOutputProperty kinesisFirehoseOutputProperty = KinesisFirehoseOutputProperty.builder()\n        .resourceArn(\"resourceArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nkinesisFirehoseOutputProperty := &kinesisFirehoseOutputProperty{\n\tresourceArn: jsii.String(\"resourceArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst kinesisFirehoseOutputProperty: kinesisanalytics.CfnApplicationOutputV2.KinesisFirehoseOutputProperty = {\n  resourceArn: 'resourceArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2.KinesisFirehoseOutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2.KinesisFirehoseOutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisFirehoseOutputProperty: kinesisanalytics.CfnApplicationOutputV2.KinesisFirehoseOutputProperty = {\n  resourceArn: 'resourceArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "25939678b3fc48a3d467d96ef8027ff5e569688c62f7bbeb6c2e42bb9aadc76a"
    },
    "ec01b14fabcc3ceb898ca0004cf3d5e91f06055c067f9174b83f8a2e6d701108": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nkinesis_streams_output_property = kinesisanalytics.CfnApplicationOutputV2.KinesisStreamsOutputProperty(\n    resource_arn=\"resourceArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nKinesisStreamsOutputProperty kinesisStreamsOutputProperty = new KinesisStreamsOutputProperty {\n    ResourceArn = \"resourceArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nKinesisStreamsOutputProperty kinesisStreamsOutputProperty = KinesisStreamsOutputProperty.builder()\n        .resourceArn(\"resourceArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nkinesisStreamsOutputProperty := &kinesisStreamsOutputProperty{\n\tresourceArn: jsii.String(\"resourceArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst kinesisStreamsOutputProperty: kinesisanalytics.CfnApplicationOutputV2.KinesisStreamsOutputProperty = {\n  resourceArn: 'resourceArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2.KinesisStreamsOutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2.KinesisStreamsOutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisStreamsOutputProperty: kinesisanalytics.CfnApplicationOutputV2.KinesisStreamsOutputProperty = {\n  resourceArn: 'resourceArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "dc475e22e9755b0274bcc1d11f5f3653d4e8b769bc8797234ae1528c96c75207"
    },
    "446f0c04dafc649cae0695e4fe2f47888522640485e0bfa4c08ccfcea9066656": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nlambda_output_property = kinesisanalytics.CfnApplicationOutputV2.LambdaOutputProperty(\n    resource_arn=\"resourceArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nLambdaOutputProperty lambdaOutputProperty = new LambdaOutputProperty {\n    ResourceArn = \"resourceArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nLambdaOutputProperty lambdaOutputProperty = LambdaOutputProperty.builder()\n        .resourceArn(\"resourceArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nlambdaOutputProperty := &lambdaOutputProperty{\n\tresourceArn: jsii.String(\"resourceArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst lambdaOutputProperty: kinesisanalytics.CfnApplicationOutputV2.LambdaOutputProperty = {\n  resourceArn: 'resourceArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2.LambdaOutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2.LambdaOutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lambdaOutputProperty: kinesisanalytics.CfnApplicationOutputV2.LambdaOutputProperty = {\n  resourceArn: 'resourceArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "4b02d1d56642a6400a2b1d304e0ee642c3005e62c5d720c210d0f5704b54e67e"
    },
    "4cc2a4039ed04f79d5736dd549cd6315a38fab4fc88962a4768b5cedad03b3ea": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\noutput_property = kinesisanalytics.CfnApplicationOutputV2.OutputProperty(\n    destination_schema=kinesisanalytics.CfnApplicationOutputV2.DestinationSchemaProperty(\n        record_format_type=\"recordFormatType\"\n    ),\n\n    # the properties below are optional\n    kinesis_firehose_output=kinesisanalytics.CfnApplicationOutputV2.KinesisFirehoseOutputProperty(\n        resource_arn=\"resourceArn\"\n    ),\n    kinesis_streams_output=kinesisanalytics.CfnApplicationOutputV2.KinesisStreamsOutputProperty(\n        resource_arn=\"resourceArn\"\n    ),\n    lambda_output=kinesisanalytics.CfnApplicationOutputV2.LambdaOutputProperty(\n        resource_arn=\"resourceArn\"\n    ),\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nOutputProperty outputProperty = new OutputProperty {\n    DestinationSchema = new DestinationSchemaProperty {\n        RecordFormatType = \"recordFormatType\"\n    },\n\n    // the properties below are optional\n    KinesisFirehoseOutput = new KinesisFirehoseOutputProperty {\n        ResourceArn = \"resourceArn\"\n    },\n    KinesisStreamsOutput = new KinesisStreamsOutputProperty {\n        ResourceArn = \"resourceArn\"\n    },\n    LambdaOutput = new LambdaOutputProperty {\n        ResourceArn = \"resourceArn\"\n    },\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nOutputProperty outputProperty = OutputProperty.builder()\n        .destinationSchema(DestinationSchemaProperty.builder()\n                .recordFormatType(\"recordFormatType\")\n                .build())\n\n        // the properties below are optional\n        .kinesisFirehoseOutput(KinesisFirehoseOutputProperty.builder()\n                .resourceArn(\"resourceArn\")\n                .build())\n        .kinesisStreamsOutput(KinesisStreamsOutputProperty.builder()\n                .resourceArn(\"resourceArn\")\n                .build())\n        .lambdaOutput(LambdaOutputProperty.builder()\n                .resourceArn(\"resourceArn\")\n                .build())\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\noutputProperty := &outputProperty{\n\tdestinationSchema: &destinationSchemaProperty{\n\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\t},\n\n\t// the properties below are optional\n\tkinesisFirehoseOutput: &kinesisFirehoseOutputProperty{\n\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t},\n\tkinesisStreamsOutput: &kinesisStreamsOutputProperty{\n\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t},\n\tlambdaOutput: &lambdaOutputProperty{\n\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t},\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst outputProperty: kinesisanalytics.CfnApplicationOutputV2.OutputProperty = {\n  destinationSchema: {\n    recordFormatType: 'recordFormatType',\n  },\n\n  // the properties below are optional\n  kinesisFirehoseOutput: {\n    resourceArn: 'resourceArn',\n  },\n  kinesisStreamsOutput: {\n    resourceArn: 'resourceArn',\n  },\n  lambdaOutput: {\n    resourceArn: 'resourceArn',\n  },\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2.OutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2.OutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst outputProperty: kinesisanalytics.CfnApplicationOutputV2.OutputProperty = {\n  destinationSchema: {\n    recordFormatType: 'recordFormatType',\n  },\n\n  // the properties below are optional\n  kinesisFirehoseOutput: {\n    resourceArn: 'resourceArn',\n  },\n  kinesisStreamsOutput: {\n    resourceArn: 'resourceArn',\n  },\n  lambdaOutput: {\n    resourceArn: 'resourceArn',\n  },\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 14,
        "153": 2,
        "169": 1,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "d80dabec677e41849037aef62d9d8b99a2b735d313830bfdefa58addbf8cb77b"
    },
    "361c74fea66c8d202b2509197970783b0fe3b3e95476e75985f0a9c28c8b6963": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application_output_v2_props = kinesisanalytics.CfnApplicationOutputV2Props(\n    application_name=\"applicationName\",\n    output=kinesisanalytics.CfnApplicationOutputV2.OutputProperty(\n        destination_schema=kinesisanalytics.CfnApplicationOutputV2.DestinationSchemaProperty(\n            record_format_type=\"recordFormatType\"\n        ),\n\n        # the properties below are optional\n        kinesis_firehose_output=kinesisanalytics.CfnApplicationOutputV2.KinesisFirehoseOutputProperty(\n            resource_arn=\"resourceArn\"\n        ),\n        kinesis_streams_output=kinesisanalytics.CfnApplicationOutputV2.KinesisStreamsOutputProperty(\n            resource_arn=\"resourceArn\"\n        ),\n        lambda_output=kinesisanalytics.CfnApplicationOutputV2.LambdaOutputProperty(\n            resource_arn=\"resourceArn\"\n        ),\n        name=\"name\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplicationOutputV2Props cfnApplicationOutputV2Props = new CfnApplicationOutputV2Props {\n    ApplicationName = \"applicationName\",\n    Output = new OutputProperty {\n        DestinationSchema = new DestinationSchemaProperty {\n            RecordFormatType = \"recordFormatType\"\n        },\n\n        // the properties below are optional\n        KinesisFirehoseOutput = new KinesisFirehoseOutputProperty {\n            ResourceArn = \"resourceArn\"\n        },\n        KinesisStreamsOutput = new KinesisStreamsOutputProperty {\n            ResourceArn = \"resourceArn\"\n        },\n        LambdaOutput = new LambdaOutputProperty {\n            ResourceArn = \"resourceArn\"\n        },\n        Name = \"name\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplicationOutputV2Props cfnApplicationOutputV2Props = CfnApplicationOutputV2Props.builder()\n        .applicationName(\"applicationName\")\n        .output(OutputProperty.builder()\n                .destinationSchema(DestinationSchemaProperty.builder()\n                        .recordFormatType(\"recordFormatType\")\n                        .build())\n\n                // the properties below are optional\n                .kinesisFirehoseOutput(KinesisFirehoseOutputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .build())\n                .kinesisStreamsOutput(KinesisStreamsOutputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .build())\n                .lambdaOutput(LambdaOutputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .build())\n                .name(\"name\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplicationOutputV2Props := &cfnApplicationOutputV2Props{\n\tapplicationName: jsii.String(\"applicationName\"),\n\toutput: &outputProperty{\n\t\tdestinationSchema: &destinationSchemaProperty{\n\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tkinesisFirehoseOutput: &kinesisFirehoseOutputProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t},\n\t\tkinesisStreamsOutput: &kinesisStreamsOutputProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t},\n\t\tlambdaOutput: &lambdaOutputProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t},\n\t\tname: jsii.String(\"name\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplicationOutputV2Props: kinesisanalytics.CfnApplicationOutputV2Props = {\n  applicationName: 'applicationName',\n  output: {\n    destinationSchema: {\n      recordFormatType: 'recordFormatType',\n    },\n\n    // the properties below are optional\n    kinesisFirehoseOutput: {\n      resourceArn: 'resourceArn',\n    },\n    kinesisStreamsOutput: {\n      resourceArn: 'resourceArn',\n    },\n    lambdaOutput: {\n      resourceArn: 'resourceArn',\n    },\n    name: 'name',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2Props"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationOutputV2Props"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationOutputV2Props: kinesisanalytics.CfnApplicationOutputV2Props = {\n  applicationName: 'applicationName',\n  output: {\n    destinationSchema: {\n      recordFormatType: 'recordFormatType',\n    },\n\n    // the properties below are optional\n    kinesisFirehoseOutput: {\n      resourceArn: 'resourceArn',\n    },\n    kinesisStreamsOutput: {\n      resourceArn: 'resourceArn',\n    },\n    lambdaOutput: {\n      resourceArn: 'resourceArn',\n    },\n    name: 'name',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 15,
        "153": 1,
        "169": 1,
        "193": 6,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "4e2a5c37803ac46324d3d92f10fe20bc9d937696011bcaab34c0f6b2c852ea9c"
    },
    "eafbf62c5ca685503bdb34ffa712c5a972e6417974066ce885cb1d7957d37bcd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application_props = kinesisanalytics.CfnApplicationProps(\n    inputs=[kinesisanalytics.CfnApplication.InputProperty(\n        input_schema=kinesisanalytics.CfnApplication.InputSchemaProperty(\n            record_columns=[kinesisanalytics.CfnApplication.RecordColumnProperty(\n                name=\"name\",\n                sql_type=\"sqlType\",\n\n                # the properties below are optional\n                mapping=\"mapping\"\n            )],\n            record_format=kinesisanalytics.CfnApplication.RecordFormatProperty(\n                record_format_type=\"recordFormatType\",\n\n                # the properties below are optional\n                mapping_parameters=kinesisanalytics.CfnApplication.MappingParametersProperty(\n                    csv_mapping_parameters=kinesisanalytics.CfnApplication.CSVMappingParametersProperty(\n                        record_column_delimiter=\"recordColumnDelimiter\",\n                        record_row_delimiter=\"recordRowDelimiter\"\n                    ),\n                    json_mapping_parameters=kinesisanalytics.CfnApplication.JSONMappingParametersProperty(\n                        record_row_path=\"recordRowPath\"\n                    )\n                )\n            ),\n\n            # the properties below are optional\n            record_encoding=\"recordEncoding\"\n        ),\n        name_prefix=\"namePrefix\",\n\n        # the properties below are optional\n        input_parallelism=kinesisanalytics.CfnApplication.InputParallelismProperty(\n            count=123\n        ),\n        input_processing_configuration=kinesisanalytics.CfnApplication.InputProcessingConfigurationProperty(\n            input_lambda_processor=kinesisanalytics.CfnApplication.InputLambdaProcessorProperty(\n                resource_arn=\"resourceArn\",\n                role_arn=\"roleArn\"\n            )\n        ),\n        kinesis_firehose_input=kinesisanalytics.CfnApplication.KinesisFirehoseInputProperty(\n            resource_arn=\"resourceArn\",\n            role_arn=\"roleArn\"\n        ),\n        kinesis_streams_input=kinesisanalytics.CfnApplication.KinesisStreamsInputProperty(\n            resource_arn=\"resourceArn\",\n            role_arn=\"roleArn\"\n        )\n    )],\n\n    # the properties below are optional\n    application_code=\"applicationCode\",\n    application_description=\"applicationDescription\",\n    application_name=\"applicationName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplicationProps cfnApplicationProps = new CfnApplicationProps {\n    Inputs = new [] { new InputProperty {\n        InputSchema = new InputSchemaProperty {\n            RecordColumns = new [] { new RecordColumnProperty {\n                Name = \"name\",\n                SqlType = \"sqlType\",\n\n                // the properties below are optional\n                Mapping = \"mapping\"\n            } },\n            RecordFormat = new RecordFormatProperty {\n                RecordFormatType = \"recordFormatType\",\n\n                // the properties below are optional\n                MappingParameters = new MappingParametersProperty {\n                    CsvMappingParameters = new CSVMappingParametersProperty {\n                        RecordColumnDelimiter = \"recordColumnDelimiter\",\n                        RecordRowDelimiter = \"recordRowDelimiter\"\n                    },\n                    JsonMappingParameters = new JSONMappingParametersProperty {\n                        RecordRowPath = \"recordRowPath\"\n                    }\n                }\n            },\n\n            // the properties below are optional\n            RecordEncoding = \"recordEncoding\"\n        },\n        NamePrefix = \"namePrefix\",\n\n        // the properties below are optional\n        InputParallelism = new InputParallelismProperty {\n            Count = 123\n        },\n        InputProcessingConfiguration = new InputProcessingConfigurationProperty {\n            InputLambdaProcessor = new InputLambdaProcessorProperty {\n                ResourceArn = \"resourceArn\",\n                RoleArn = \"roleArn\"\n            }\n        },\n        KinesisFirehoseInput = new KinesisFirehoseInputProperty {\n            ResourceArn = \"resourceArn\",\n            RoleArn = \"roleArn\"\n        },\n        KinesisStreamsInput = new KinesisStreamsInputProperty {\n            ResourceArn = \"resourceArn\",\n            RoleArn = \"roleArn\"\n        }\n    } },\n\n    // the properties below are optional\n    ApplicationCode = \"applicationCode\",\n    ApplicationDescription = \"applicationDescription\",\n    ApplicationName = \"applicationName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplicationProps cfnApplicationProps = CfnApplicationProps.builder()\n        .inputs(List.of(InputProperty.builder()\n                .inputSchema(InputSchemaProperty.builder()\n                        .recordColumns(List.of(RecordColumnProperty.builder()\n                                .name(\"name\")\n                                .sqlType(\"sqlType\")\n\n                                // the properties below are optional\n                                .mapping(\"mapping\")\n                                .build()))\n                        .recordFormat(RecordFormatProperty.builder()\n                                .recordFormatType(\"recordFormatType\")\n\n                                // the properties below are optional\n                                .mappingParameters(MappingParametersProperty.builder()\n                                        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                                .recordRowDelimiter(\"recordRowDelimiter\")\n                                                .build())\n                                        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                                .recordRowPath(\"recordRowPath\")\n                                                .build())\n                                        .build())\n                                .build())\n\n                        // the properties below are optional\n                        .recordEncoding(\"recordEncoding\")\n                        .build())\n                .namePrefix(\"namePrefix\")\n\n                // the properties below are optional\n                .inputParallelism(InputParallelismProperty.builder()\n                        .count(123)\n                        .build())\n                .inputProcessingConfiguration(InputProcessingConfigurationProperty.builder()\n                        .inputLambdaProcessor(InputLambdaProcessorProperty.builder()\n                                .resourceArn(\"resourceArn\")\n                                .roleArn(\"roleArn\")\n                                .build())\n                        .build())\n                .kinesisFirehoseInput(KinesisFirehoseInputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .roleArn(\"roleArn\")\n                        .build())\n                .kinesisStreamsInput(KinesisStreamsInputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .roleArn(\"roleArn\")\n                        .build())\n                .build()))\n\n        // the properties below are optional\n        .applicationCode(\"applicationCode\")\n        .applicationDescription(\"applicationDescription\")\n        .applicationName(\"applicationName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplicationProps := &cfnApplicationProps{\n\tinputs: []interface{}{\n\t\t&inputProperty{\n\t\t\tinputSchema: &inputSchemaProperty{\n\t\t\t\trecordColumns: []interface{}{\n\t\t\t\t\t&recordColumnProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trecordFormat: &recordFormatProperty{\n\t\t\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t\t\t},\n\t\t\tnamePrefix: jsii.String(\"namePrefix\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinputParallelism: &inputParallelismProperty{\n\t\t\t\tcount: jsii.Number(123),\n\t\t\t},\n\t\t\tinputProcessingConfiguration: &inputProcessingConfigurationProperty{\n\t\t\t\tinputLambdaProcessor: &inputLambdaProcessorProperty{\n\t\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tkinesisFirehoseInput: &kinesisFirehoseInputProperty{\n\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t},\n\t\t\tkinesisStreamsInput: &kinesisStreamsInputProperty{\n\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tapplicationCode: jsii.String(\"applicationCode\"),\n\tapplicationDescription: jsii.String(\"applicationDescription\"),\n\tapplicationName: jsii.String(\"applicationName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplicationProps: kinesisanalytics.CfnApplicationProps = {\n  inputs: [{\n    inputSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n    namePrefix: 'namePrefix',\n\n    // the properties below are optional\n    inputParallelism: {\n      count: 123,\n    },\n    inputProcessingConfiguration: {\n      inputLambdaProcessor: {\n        resourceArn: 'resourceArn',\n        roleArn: 'roleArn',\n      },\n    },\n    kinesisFirehoseInput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    kinesisStreamsInput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n  }],\n\n  // the properties below are optional\n  applicationCode: 'applicationCode',\n  applicationDescription: 'applicationDescription',\n  applicationName: 'applicationName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationProps: kinesisanalytics.CfnApplicationProps = {\n  inputs: [{\n    inputSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n    namePrefix: 'namePrefix',\n\n    // the properties below are optional\n    inputParallelism: {\n      count: 123,\n    },\n    inputProcessingConfiguration: {\n      inputLambdaProcessor: {\n        resourceArn: 'resourceArn',\n        roleArn: 'roleArn',\n      },\n    },\n    kinesisFirehoseInput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n    kinesisStreamsInput: {\n      resourceArn: 'resourceArn',\n      roleArn: 'roleArn',\n    },\n  }],\n\n  // the properties below are optional\n  applicationCode: 'applicationCode',\n  applicationDescription: 'applicationDescription',\n  applicationName: 'applicationName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 19,
        "75": 35,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 13,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 31,
        "290": 1
      },
      "fqnsFingerprint": "ef32224baa0bc6dc2dae96c086d131160f625555cf08d3254ca51924a0c5ffff"
    },
    "c2176fbc0f7399faa3e8d8de1aa38c22b82c2e05eeaaa19c84f4b7233ba2cbd2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application_reference_data_source = kinesisanalytics.CfnApplicationReferenceDataSource(self, \"MyCfnApplicationReferenceDataSource\",\n    application_name=\"applicationName\",\n    reference_data_source=kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceDataSourceProperty(\n        reference_schema=kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceSchemaProperty(\n            record_columns=[kinesisanalytics.CfnApplicationReferenceDataSource.RecordColumnProperty(\n                name=\"name\",\n                sql_type=\"sqlType\",\n\n                # the properties below are optional\n                mapping=\"mapping\"\n            )],\n            record_format=kinesisanalytics.CfnApplicationReferenceDataSource.RecordFormatProperty(\n                record_format_type=\"recordFormatType\",\n\n                # the properties below are optional\n                mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.MappingParametersProperty(\n                    csv_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.CSVMappingParametersProperty(\n                        record_column_delimiter=\"recordColumnDelimiter\",\n                        record_row_delimiter=\"recordRowDelimiter\"\n                    ),\n                    json_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.JSONMappingParametersProperty(\n                        record_row_path=\"recordRowPath\"\n                    )\n                )\n            ),\n\n            # the properties below are optional\n            record_encoding=\"recordEncoding\"\n        ),\n\n        # the properties below are optional\n        s3_reference_data_source=kinesisanalytics.CfnApplicationReferenceDataSource.S3ReferenceDataSourceProperty(\n            bucket_arn=\"bucketArn\",\n            file_key=\"fileKey\",\n            reference_role_arn=\"referenceRoleArn\"\n        ),\n        table_name=\"tableName\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplicationReferenceDataSource cfnApplicationReferenceDataSource = new CfnApplicationReferenceDataSource(this, \"MyCfnApplicationReferenceDataSource\", new CfnApplicationReferenceDataSourceProps {\n    ApplicationName = \"applicationName\",\n    ReferenceDataSource = new ReferenceDataSourceProperty {\n        ReferenceSchema = new ReferenceSchemaProperty {\n            RecordColumns = new [] { new RecordColumnProperty {\n                Name = \"name\",\n                SqlType = \"sqlType\",\n\n                // the properties below are optional\n                Mapping = \"mapping\"\n            } },\n            RecordFormat = new RecordFormatProperty {\n                RecordFormatType = \"recordFormatType\",\n\n                // the properties below are optional\n                MappingParameters = new MappingParametersProperty {\n                    CsvMappingParameters = new CSVMappingParametersProperty {\n                        RecordColumnDelimiter = \"recordColumnDelimiter\",\n                        RecordRowDelimiter = \"recordRowDelimiter\"\n                    },\n                    JsonMappingParameters = new JSONMappingParametersProperty {\n                        RecordRowPath = \"recordRowPath\"\n                    }\n                }\n            },\n\n            // the properties below are optional\n            RecordEncoding = \"recordEncoding\"\n        },\n\n        // the properties below are optional\n        S3ReferenceDataSource = new S3ReferenceDataSourceProperty {\n            BucketArn = \"bucketArn\",\n            FileKey = \"fileKey\",\n            ReferenceRoleArn = \"referenceRoleArn\"\n        },\n        TableName = \"tableName\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplicationReferenceDataSource cfnApplicationReferenceDataSource = CfnApplicationReferenceDataSource.Builder.create(this, \"MyCfnApplicationReferenceDataSource\")\n        .applicationName(\"applicationName\")\n        .referenceDataSource(ReferenceDataSourceProperty.builder()\n                .referenceSchema(ReferenceSchemaProperty.builder()\n                        .recordColumns(List.of(RecordColumnProperty.builder()\n                                .name(\"name\")\n                                .sqlType(\"sqlType\")\n\n                                // the properties below are optional\n                                .mapping(\"mapping\")\n                                .build()))\n                        .recordFormat(RecordFormatProperty.builder()\n                                .recordFormatType(\"recordFormatType\")\n\n                                // the properties below are optional\n                                .mappingParameters(MappingParametersProperty.builder()\n                                        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                                .recordRowDelimiter(\"recordRowDelimiter\")\n                                                .build())\n                                        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                                .recordRowPath(\"recordRowPath\")\n                                                .build())\n                                        .build())\n                                .build())\n\n                        // the properties below are optional\n                        .recordEncoding(\"recordEncoding\")\n                        .build())\n\n                // the properties below are optional\n                .s3ReferenceDataSource(S3ReferenceDataSourceProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .fileKey(\"fileKey\")\n                        .referenceRoleArn(\"referenceRoleArn\")\n                        .build())\n                .tableName(\"tableName\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplicationReferenceDataSource := kinesisanalytics.NewCfnApplicationReferenceDataSource(this, jsii.String(\"MyCfnApplicationReferenceDataSource\"), &cfnApplicationReferenceDataSourceProps{\n\tapplicationName: jsii.String(\"applicationName\"),\n\treferenceDataSource: &referenceDataSourceProperty{\n\t\treferenceSchema: &referenceSchemaProperty{\n\t\t\trecordColumns: []interface{}{\n\t\t\t\t&recordColumnProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\trecordFormat: &recordFormatProperty{\n\t\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\ts3ReferenceDataSource: &s3ReferenceDataSourceProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\tfileKey: jsii.String(\"fileKey\"),\n\t\t\treferenceRoleArn: jsii.String(\"referenceRoleArn\"),\n\t\t},\n\t\ttableName: jsii.String(\"tableName\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplicationReferenceDataSource = new kinesisanalytics.CfnApplicationReferenceDataSource(this, 'MyCfnApplicationReferenceDataSource', {\n  applicationName: 'applicationName',\n  referenceDataSource: {\n    referenceSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n\n    // the properties below are optional\n    s3ReferenceDataSource: {\n      bucketArn: 'bucketArn',\n      fileKey: 'fileKey',\n      referenceRoleArn: 'referenceRoleArn',\n    },\n    tableName: 'tableName',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource",
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationReferenceDataSource = new kinesisanalytics.CfnApplicationReferenceDataSource(this, 'MyCfnApplicationReferenceDataSource', {\n  applicationName: 'applicationName',\n  referenceDataSource: {\n    referenceSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n\n    // the properties below are optional\n    s3ReferenceDataSource: {\n      bucketArn: 'bucketArn',\n      fileKey: 'fileKey',\n      referenceRoleArn: 'referenceRoleArn',\n    },\n    tableName: 'tableName',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 15,
        "75": 25,
        "104": 1,
        "192": 1,
        "193": 9,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 21,
        "290": 1
      },
      "fqnsFingerprint": "e37433f96f1ccc53ad4e8ffc3ced42d57d601568e8f3d390016b8a5149d75551"
    },
    "0ae0fd6d391c57f06b7c5c2ca6b436456f9a2d9c9ee76fb01b9854686226f04c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nc_sVMapping_parameters_property = kinesisanalytics.CfnApplicationReferenceDataSource.CSVMappingParametersProperty(\n    record_column_delimiter=\"recordColumnDelimiter\",\n    record_row_delimiter=\"recordRowDelimiter\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCSVMappingParametersProperty cSVMappingParametersProperty = new CSVMappingParametersProperty {\n    RecordColumnDelimiter = \"recordColumnDelimiter\",\n    RecordRowDelimiter = \"recordRowDelimiter\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCSVMappingParametersProperty cSVMappingParametersProperty = CSVMappingParametersProperty.builder()\n        .recordColumnDelimiter(\"recordColumnDelimiter\")\n        .recordRowDelimiter(\"recordRowDelimiter\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncSVMappingParametersProperty := &cSVMappingParametersProperty{\n\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cSVMappingParametersProperty: kinesisanalytics.CfnApplicationReferenceDataSource.CSVMappingParametersProperty = {\n  recordColumnDelimiter: 'recordColumnDelimiter',\n  recordRowDelimiter: 'recordRowDelimiter',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.CSVMappingParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.CSVMappingParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cSVMappingParametersProperty: kinesisanalytics.CfnApplicationReferenceDataSource.CSVMappingParametersProperty = {\n  recordColumnDelimiter: 'recordColumnDelimiter',\n  recordRowDelimiter: 'recordRowDelimiter',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "e5e2f40e59d3f2f24fa0d9c7ef3bf4fb55d4d078946fe16bf1e9361b55c37a06"
    },
    "80799f5830fae90012e9119df8770e79f89e271438beb78e5f9d812091000691": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nj_sONMapping_parameters_property = kinesisanalytics.CfnApplicationReferenceDataSource.JSONMappingParametersProperty(\n    record_row_path=\"recordRowPath\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nJSONMappingParametersProperty jSONMappingParametersProperty = new JSONMappingParametersProperty {\n    RecordRowPath = \"recordRowPath\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nJSONMappingParametersProperty jSONMappingParametersProperty = JSONMappingParametersProperty.builder()\n        .recordRowPath(\"recordRowPath\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\njSONMappingParametersProperty := &jSONMappingParametersProperty{\n\trecordRowPath: jsii.String(\"recordRowPath\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst jSONMappingParametersProperty: kinesisanalytics.CfnApplicationReferenceDataSource.JSONMappingParametersProperty = {\n  recordRowPath: 'recordRowPath',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.JSONMappingParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.JSONMappingParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jSONMappingParametersProperty: kinesisanalytics.CfnApplicationReferenceDataSource.JSONMappingParametersProperty = {\n  recordRowPath: 'recordRowPath',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "09af03d133e40f7d55695b890626733bbf36ce4468d7422072039d677b784d68"
    },
    "befacb6cd00c782f23f20589fceb8324090f5efb727ef6370dc92377dc01d79b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nmapping_parameters_property = kinesisanalytics.CfnApplicationReferenceDataSource.MappingParametersProperty(\n    csv_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.CSVMappingParametersProperty(\n        record_column_delimiter=\"recordColumnDelimiter\",\n        record_row_delimiter=\"recordRowDelimiter\"\n    ),\n    json_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.JSONMappingParametersProperty(\n        record_row_path=\"recordRowPath\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nMappingParametersProperty mappingParametersProperty = new MappingParametersProperty {\n    CsvMappingParameters = new CSVMappingParametersProperty {\n        RecordColumnDelimiter = \"recordColumnDelimiter\",\n        RecordRowDelimiter = \"recordRowDelimiter\"\n    },\n    JsonMappingParameters = new JSONMappingParametersProperty {\n        RecordRowPath = \"recordRowPath\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nMappingParametersProperty mappingParametersProperty = MappingParametersProperty.builder()\n        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                .recordRowDelimiter(\"recordRowDelimiter\")\n                .build())\n        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                .recordRowPath(\"recordRowPath\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nmappingParametersProperty := &mappingParametersProperty{\n\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t},\n\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst mappingParametersProperty: kinesisanalytics.CfnApplicationReferenceDataSource.MappingParametersProperty = {\n  csvMappingParameters: {\n    recordColumnDelimiter: 'recordColumnDelimiter',\n    recordRowDelimiter: 'recordRowDelimiter',\n  },\n  jsonMappingParameters: {\n    recordRowPath: 'recordRowPath',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.MappingParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.MappingParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst mappingParametersProperty: kinesisanalytics.CfnApplicationReferenceDataSource.MappingParametersProperty = {\n  csvMappingParameters: {\n    recordColumnDelimiter: 'recordColumnDelimiter',\n    recordRowDelimiter: 'recordRowDelimiter',\n  },\n  jsonMappingParameters: {\n    recordRowPath: 'recordRowPath',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "1acf41590a13b3d5064ec6725e9ecfd2cc967ff3371a2fd9f3c6b398505dc885"
    },
    "b073b4f49e453554b07c21fe0f5865a9e995c3b2e0750db46150a9061c6a82de": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nrecord_column_property = kinesisanalytics.CfnApplicationReferenceDataSource.RecordColumnProperty(\n    name=\"name\",\n    sql_type=\"sqlType\",\n\n    # the properties below are optional\n    mapping=\"mapping\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nRecordColumnProperty recordColumnProperty = new RecordColumnProperty {\n    Name = \"name\",\n    SqlType = \"sqlType\",\n\n    // the properties below are optional\n    Mapping = \"mapping\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nRecordColumnProperty recordColumnProperty = RecordColumnProperty.builder()\n        .name(\"name\")\n        .sqlType(\"sqlType\")\n\n        // the properties below are optional\n        .mapping(\"mapping\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nrecordColumnProperty := &recordColumnProperty{\n\tname: jsii.String(\"name\"),\n\tsqlType: jsii.String(\"sqlType\"),\n\n\t// the properties below are optional\n\tmapping: jsii.String(\"mapping\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst recordColumnProperty: kinesisanalytics.CfnApplicationReferenceDataSource.RecordColumnProperty = {\n  name: 'name',\n  sqlType: 'sqlType',\n\n  // the properties below are optional\n  mapping: 'mapping',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.RecordColumnProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.RecordColumnProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst recordColumnProperty: kinesisanalytics.CfnApplicationReferenceDataSource.RecordColumnProperty = {\n  name: 'name',\n  sqlType: 'sqlType',\n\n  // the properties below are optional\n  mapping: 'mapping',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "27d7025ba1acab0404ad5f1b875a5a8847e115779412f34d9f56b2fe1d35993a"
    },
    "94e9f0b135b78e434d8d266d2b240af4ec190ae04c71046e8aa5135a95c05eac": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nrecord_format_property = kinesisanalytics.CfnApplicationReferenceDataSource.RecordFormatProperty(\n    record_format_type=\"recordFormatType\",\n\n    # the properties below are optional\n    mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.MappingParametersProperty(\n        csv_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.CSVMappingParametersProperty(\n            record_column_delimiter=\"recordColumnDelimiter\",\n            record_row_delimiter=\"recordRowDelimiter\"\n        ),\n        json_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.JSONMappingParametersProperty(\n            record_row_path=\"recordRowPath\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nRecordFormatProperty recordFormatProperty = new RecordFormatProperty {\n    RecordFormatType = \"recordFormatType\",\n\n    // the properties below are optional\n    MappingParameters = new MappingParametersProperty {\n        CsvMappingParameters = new CSVMappingParametersProperty {\n            RecordColumnDelimiter = \"recordColumnDelimiter\",\n            RecordRowDelimiter = \"recordRowDelimiter\"\n        },\n        JsonMappingParameters = new JSONMappingParametersProperty {\n            RecordRowPath = \"recordRowPath\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nRecordFormatProperty recordFormatProperty = RecordFormatProperty.builder()\n        .recordFormatType(\"recordFormatType\")\n\n        // the properties below are optional\n        .mappingParameters(MappingParametersProperty.builder()\n                .csvMappingParameters(CSVMappingParametersProperty.builder()\n                        .recordColumnDelimiter(\"recordColumnDelimiter\")\n                        .recordRowDelimiter(\"recordRowDelimiter\")\n                        .build())\n                .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                        .recordRowPath(\"recordRowPath\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nrecordFormatProperty := &recordFormatProperty{\n\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t// the properties below are optional\n\tmappingParameters: &mappingParametersProperty{\n\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t},\n\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst recordFormatProperty: kinesisanalytics.CfnApplicationReferenceDataSource.RecordFormatProperty = {\n  recordFormatType: 'recordFormatType',\n\n  // the properties below are optional\n  mappingParameters: {\n    csvMappingParameters: {\n      recordColumnDelimiter: 'recordColumnDelimiter',\n      recordRowDelimiter: 'recordRowDelimiter',\n    },\n    jsonMappingParameters: {\n      recordRowPath: 'recordRowPath',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.RecordFormatProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.RecordFormatProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst recordFormatProperty: kinesisanalytics.CfnApplicationReferenceDataSource.RecordFormatProperty = {\n  recordFormatType: 'recordFormatType',\n\n  // the properties below are optional\n  mappingParameters: {\n    csvMappingParameters: {\n      recordColumnDelimiter: 'recordColumnDelimiter',\n      recordRowDelimiter: 'recordRowDelimiter',\n    },\n    jsonMappingParameters: {\n      recordRowPath: 'recordRowPath',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 12,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "d2bee44803fd4c11617e02851180cb6dd291f3b0d2a35487a0d1bfe97d7850ad"
    },
    "c7609d894213bdee4de57222292ba07e989c0970144a8ec93dfc1a21d445cd95": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nreference_data_source_property = kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceDataSourceProperty(\n    reference_schema=kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceSchemaProperty(\n        record_columns=[kinesisanalytics.CfnApplicationReferenceDataSource.RecordColumnProperty(\n            name=\"name\",\n            sql_type=\"sqlType\",\n\n            # the properties below are optional\n            mapping=\"mapping\"\n        )],\n        record_format=kinesisanalytics.CfnApplicationReferenceDataSource.RecordFormatProperty(\n            record_format_type=\"recordFormatType\",\n\n            # the properties below are optional\n            mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.MappingParametersProperty(\n                csv_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.CSVMappingParametersProperty(\n                    record_column_delimiter=\"recordColumnDelimiter\",\n                    record_row_delimiter=\"recordRowDelimiter\"\n                ),\n                json_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.JSONMappingParametersProperty(\n                    record_row_path=\"recordRowPath\"\n                )\n            )\n        ),\n\n        # the properties below are optional\n        record_encoding=\"recordEncoding\"\n    ),\n\n    # the properties below are optional\n    s3_reference_data_source=kinesisanalytics.CfnApplicationReferenceDataSource.S3ReferenceDataSourceProperty(\n        bucket_arn=\"bucketArn\",\n        file_key=\"fileKey\",\n        reference_role_arn=\"referenceRoleArn\"\n    ),\n    table_name=\"tableName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nReferenceDataSourceProperty referenceDataSourceProperty = new ReferenceDataSourceProperty {\n    ReferenceSchema = new ReferenceSchemaProperty {\n        RecordColumns = new [] { new RecordColumnProperty {\n            Name = \"name\",\n            SqlType = \"sqlType\",\n\n            // the properties below are optional\n            Mapping = \"mapping\"\n        } },\n        RecordFormat = new RecordFormatProperty {\n            RecordFormatType = \"recordFormatType\",\n\n            // the properties below are optional\n            MappingParameters = new MappingParametersProperty {\n                CsvMappingParameters = new CSVMappingParametersProperty {\n                    RecordColumnDelimiter = \"recordColumnDelimiter\",\n                    RecordRowDelimiter = \"recordRowDelimiter\"\n                },\n                JsonMappingParameters = new JSONMappingParametersProperty {\n                    RecordRowPath = \"recordRowPath\"\n                }\n            }\n        },\n\n        // the properties below are optional\n        RecordEncoding = \"recordEncoding\"\n    },\n\n    // the properties below are optional\n    S3ReferenceDataSource = new S3ReferenceDataSourceProperty {\n        BucketArn = \"bucketArn\",\n        FileKey = \"fileKey\",\n        ReferenceRoleArn = \"referenceRoleArn\"\n    },\n    TableName = \"tableName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nReferenceDataSourceProperty referenceDataSourceProperty = ReferenceDataSourceProperty.builder()\n        .referenceSchema(ReferenceSchemaProperty.builder()\n                .recordColumns(List.of(RecordColumnProperty.builder()\n                        .name(\"name\")\n                        .sqlType(\"sqlType\")\n\n                        // the properties below are optional\n                        .mapping(\"mapping\")\n                        .build()))\n                .recordFormat(RecordFormatProperty.builder()\n                        .recordFormatType(\"recordFormatType\")\n\n                        // the properties below are optional\n                        .mappingParameters(MappingParametersProperty.builder()\n                                .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                        .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                        .recordRowDelimiter(\"recordRowDelimiter\")\n                                        .build())\n                                .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                        .recordRowPath(\"recordRowPath\")\n                                        .build())\n                                .build())\n                        .build())\n\n                // the properties below are optional\n                .recordEncoding(\"recordEncoding\")\n                .build())\n\n        // the properties below are optional\n        .s3ReferenceDataSource(S3ReferenceDataSourceProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .fileKey(\"fileKey\")\n                .referenceRoleArn(\"referenceRoleArn\")\n                .build())\n        .tableName(\"tableName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nreferenceDataSourceProperty := &referenceDataSourceProperty{\n\treferenceSchema: &referenceSchemaProperty{\n\t\trecordColumns: []interface{}{\n\t\t\t&recordColumnProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t},\n\t\t},\n\t\trecordFormat: &recordFormatProperty{\n\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t},\n\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t},\n\n\t// the properties below are optional\n\ts3ReferenceDataSource: &s3ReferenceDataSourceProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\tfileKey: jsii.String(\"fileKey\"),\n\t\treferenceRoleArn: jsii.String(\"referenceRoleArn\"),\n\t},\n\ttableName: jsii.String(\"tableName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst referenceDataSourceProperty: kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceDataSourceProperty = {\n  referenceSchema: {\n    recordColumns: [{\n      name: 'name',\n      sqlType: 'sqlType',\n\n      // the properties below are optional\n      mapping: 'mapping',\n    }],\n    recordFormat: {\n      recordFormatType: 'recordFormatType',\n\n      // the properties below are optional\n      mappingParameters: {\n        csvMappingParameters: {\n          recordColumnDelimiter: 'recordColumnDelimiter',\n          recordRowDelimiter: 'recordRowDelimiter',\n        },\n        jsonMappingParameters: {\n          recordRowPath: 'recordRowPath',\n        },\n      },\n    },\n\n    // the properties below are optional\n    recordEncoding: 'recordEncoding',\n  },\n\n  // the properties below are optional\n  s3ReferenceDataSource: {\n    bucketArn: 'bucketArn',\n    fileKey: 'fileKey',\n    referenceRoleArn: 'referenceRoleArn',\n  },\n  tableName: 'tableName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceDataSourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceDataSourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst referenceDataSourceProperty: kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceDataSourceProperty = {\n  referenceSchema: {\n    recordColumns: [{\n      name: 'name',\n      sqlType: 'sqlType',\n\n      // the properties below are optional\n      mapping: 'mapping',\n    }],\n    recordFormat: {\n      recordFormatType: 'recordFormatType',\n\n      // the properties below are optional\n      mappingParameters: {\n        csvMappingParameters: {\n          recordColumnDelimiter: 'recordColumnDelimiter',\n          recordRowDelimiter: 'recordRowDelimiter',\n        },\n        jsonMappingParameters: {\n          recordRowPath: 'recordRowPath',\n        },\n      },\n    },\n\n    // the properties below are optional\n    recordEncoding: 'recordEncoding',\n  },\n\n  // the properties below are optional\n  s3ReferenceDataSource: {\n    bucketArn: 'bucketArn',\n    fileKey: 'fileKey',\n    referenceRoleArn: 'referenceRoleArn',\n  },\n  tableName: 'tableName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 13,
        "75": 24,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 8,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 19,
        "290": 1
      },
      "fqnsFingerprint": "b319eba16cc7239400c8128cd4223393902a31b4a2cf97b2acf37b66f3941cf2"
    },
    "70179b297acdac829654ffdfedf4bfa22617799ba79528e3f37fd15b1df12b73": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nreference_schema_property = kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceSchemaProperty(\n    record_columns=[kinesisanalytics.CfnApplicationReferenceDataSource.RecordColumnProperty(\n        name=\"name\",\n        sql_type=\"sqlType\",\n\n        # the properties below are optional\n        mapping=\"mapping\"\n    )],\n    record_format=kinesisanalytics.CfnApplicationReferenceDataSource.RecordFormatProperty(\n        record_format_type=\"recordFormatType\",\n\n        # the properties below are optional\n        mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.MappingParametersProperty(\n            csv_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.CSVMappingParametersProperty(\n                record_column_delimiter=\"recordColumnDelimiter\",\n                record_row_delimiter=\"recordRowDelimiter\"\n            ),\n            json_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.JSONMappingParametersProperty(\n                record_row_path=\"recordRowPath\"\n            )\n        )\n    ),\n\n    # the properties below are optional\n    record_encoding=\"recordEncoding\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nReferenceSchemaProperty referenceSchemaProperty = new ReferenceSchemaProperty {\n    RecordColumns = new [] { new RecordColumnProperty {\n        Name = \"name\",\n        SqlType = \"sqlType\",\n\n        // the properties below are optional\n        Mapping = \"mapping\"\n    } },\n    RecordFormat = new RecordFormatProperty {\n        RecordFormatType = \"recordFormatType\",\n\n        // the properties below are optional\n        MappingParameters = new MappingParametersProperty {\n            CsvMappingParameters = new CSVMappingParametersProperty {\n                RecordColumnDelimiter = \"recordColumnDelimiter\",\n                RecordRowDelimiter = \"recordRowDelimiter\"\n            },\n            JsonMappingParameters = new JSONMappingParametersProperty {\n                RecordRowPath = \"recordRowPath\"\n            }\n        }\n    },\n\n    // the properties below are optional\n    RecordEncoding = \"recordEncoding\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nReferenceSchemaProperty referenceSchemaProperty = ReferenceSchemaProperty.builder()\n        .recordColumns(List.of(RecordColumnProperty.builder()\n                .name(\"name\")\n                .sqlType(\"sqlType\")\n\n                // the properties below are optional\n                .mapping(\"mapping\")\n                .build()))\n        .recordFormat(RecordFormatProperty.builder()\n                .recordFormatType(\"recordFormatType\")\n\n                // the properties below are optional\n                .mappingParameters(MappingParametersProperty.builder()\n                        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                .recordRowDelimiter(\"recordRowDelimiter\")\n                                .build())\n                        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                .recordRowPath(\"recordRowPath\")\n                                .build())\n                        .build())\n                .build())\n\n        // the properties below are optional\n        .recordEncoding(\"recordEncoding\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nreferenceSchemaProperty := &referenceSchemaProperty{\n\trecordColumns: []interface{}{\n\t\t&recordColumnProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t},\n\t},\n\trecordFormat: &recordFormatProperty{\n\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t// the properties below are optional\n\t\tmappingParameters: &mappingParametersProperty{\n\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t},\n\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\trecordEncoding: jsii.String(\"recordEncoding\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst referenceSchemaProperty: kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceSchemaProperty = {\n  recordColumns: [{\n    name: 'name',\n    sqlType: 'sqlType',\n\n    // the properties below are optional\n    mapping: 'mapping',\n  }],\n  recordFormat: {\n    recordFormatType: 'recordFormatType',\n\n    // the properties below are optional\n    mappingParameters: {\n      csvMappingParameters: {\n        recordColumnDelimiter: 'recordColumnDelimiter',\n        recordRowDelimiter: 'recordRowDelimiter',\n      },\n      jsonMappingParameters: {\n        recordRowPath: 'recordRowPath',\n      },\n    },\n  },\n\n  // the properties below are optional\n  recordEncoding: 'recordEncoding',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceSchemaProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceSchemaProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst referenceSchemaProperty: kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceSchemaProperty = {\n  recordColumns: [{\n    name: 'name',\n    sqlType: 'sqlType',\n\n    // the properties below are optional\n    mapping: 'mapping',\n  }],\n  recordFormat: {\n    recordFormatType: 'recordFormatType',\n\n    // the properties below are optional\n    mappingParameters: {\n      csvMappingParameters: {\n        recordColumnDelimiter: 'recordColumnDelimiter',\n        recordRowDelimiter: 'recordRowDelimiter',\n      },\n      jsonMappingParameters: {\n        recordRowPath: 'recordRowPath',\n      },\n    },\n  },\n\n  // the properties below are optional\n  recordEncoding: 'recordEncoding',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 18,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 6,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "29dbfff380791287ae7a6fc4600eaf023a87631c914849d293679b8a4c55189c"
    },
    "bf7943c4446a5f8a87f4b8439c2274985d3bec1baafa2b8e92f3923e16467769": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ns3_reference_data_source_property = kinesisanalytics.CfnApplicationReferenceDataSource.S3ReferenceDataSourceProperty(\n    bucket_arn=\"bucketArn\",\n    file_key=\"fileKey\",\n    reference_role_arn=\"referenceRoleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nS3ReferenceDataSourceProperty s3ReferenceDataSourceProperty = new S3ReferenceDataSourceProperty {\n    BucketArn = \"bucketArn\",\n    FileKey = \"fileKey\",\n    ReferenceRoleArn = \"referenceRoleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nS3ReferenceDataSourceProperty s3ReferenceDataSourceProperty = S3ReferenceDataSourceProperty.builder()\n        .bucketArn(\"bucketArn\")\n        .fileKey(\"fileKey\")\n        .referenceRoleArn(\"referenceRoleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ns3ReferenceDataSourceProperty := &s3ReferenceDataSourceProperty{\n\tbucketArn: jsii.String(\"bucketArn\"),\n\tfileKey: jsii.String(\"fileKey\"),\n\treferenceRoleArn: jsii.String(\"referenceRoleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst s3ReferenceDataSourceProperty: kinesisanalytics.CfnApplicationReferenceDataSource.S3ReferenceDataSourceProperty = {\n  bucketArn: 'bucketArn',\n  fileKey: 'fileKey',\n  referenceRoleArn: 'referenceRoleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.S3ReferenceDataSourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSource.S3ReferenceDataSourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3ReferenceDataSourceProperty: kinesisanalytics.CfnApplicationReferenceDataSource.S3ReferenceDataSourceProperty = {\n  bucketArn: 'bucketArn',\n  fileKey: 'fileKey',\n  referenceRoleArn: 'referenceRoleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "4288791cab5cbf3d4cf9ab83b1a1670d8da006bdd33c819a17d28f01353c8343"
    },
    "90f4ffdf66972a060c80c7302ddeb3a8968dd0dc9920d794211ce423b540de1f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application_reference_data_source_props = kinesisanalytics.CfnApplicationReferenceDataSourceProps(\n    application_name=\"applicationName\",\n    reference_data_source=kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceDataSourceProperty(\n        reference_schema=kinesisanalytics.CfnApplicationReferenceDataSource.ReferenceSchemaProperty(\n            record_columns=[kinesisanalytics.CfnApplicationReferenceDataSource.RecordColumnProperty(\n                name=\"name\",\n                sql_type=\"sqlType\",\n\n                # the properties below are optional\n                mapping=\"mapping\"\n            )],\n            record_format=kinesisanalytics.CfnApplicationReferenceDataSource.RecordFormatProperty(\n                record_format_type=\"recordFormatType\",\n\n                # the properties below are optional\n                mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.MappingParametersProperty(\n                    csv_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.CSVMappingParametersProperty(\n                        record_column_delimiter=\"recordColumnDelimiter\",\n                        record_row_delimiter=\"recordRowDelimiter\"\n                    ),\n                    json_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSource.JSONMappingParametersProperty(\n                        record_row_path=\"recordRowPath\"\n                    )\n                )\n            ),\n\n            # the properties below are optional\n            record_encoding=\"recordEncoding\"\n        ),\n\n        # the properties below are optional\n        s3_reference_data_source=kinesisanalytics.CfnApplicationReferenceDataSource.S3ReferenceDataSourceProperty(\n            bucket_arn=\"bucketArn\",\n            file_key=\"fileKey\",\n            reference_role_arn=\"referenceRoleArn\"\n        ),\n        table_name=\"tableName\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplicationReferenceDataSourceProps cfnApplicationReferenceDataSourceProps = new CfnApplicationReferenceDataSourceProps {\n    ApplicationName = \"applicationName\",\n    ReferenceDataSource = new ReferenceDataSourceProperty {\n        ReferenceSchema = new ReferenceSchemaProperty {\n            RecordColumns = new [] { new RecordColumnProperty {\n                Name = \"name\",\n                SqlType = \"sqlType\",\n\n                // the properties below are optional\n                Mapping = \"mapping\"\n            } },\n            RecordFormat = new RecordFormatProperty {\n                RecordFormatType = \"recordFormatType\",\n\n                // the properties below are optional\n                MappingParameters = new MappingParametersProperty {\n                    CsvMappingParameters = new CSVMappingParametersProperty {\n                        RecordColumnDelimiter = \"recordColumnDelimiter\",\n                        RecordRowDelimiter = \"recordRowDelimiter\"\n                    },\n                    JsonMappingParameters = new JSONMappingParametersProperty {\n                        RecordRowPath = \"recordRowPath\"\n                    }\n                }\n            },\n\n            // the properties below are optional\n            RecordEncoding = \"recordEncoding\"\n        },\n\n        // the properties below are optional\n        S3ReferenceDataSource = new S3ReferenceDataSourceProperty {\n            BucketArn = \"bucketArn\",\n            FileKey = \"fileKey\",\n            ReferenceRoleArn = \"referenceRoleArn\"\n        },\n        TableName = \"tableName\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplicationReferenceDataSourceProps cfnApplicationReferenceDataSourceProps = CfnApplicationReferenceDataSourceProps.builder()\n        .applicationName(\"applicationName\")\n        .referenceDataSource(ReferenceDataSourceProperty.builder()\n                .referenceSchema(ReferenceSchemaProperty.builder()\n                        .recordColumns(List.of(RecordColumnProperty.builder()\n                                .name(\"name\")\n                                .sqlType(\"sqlType\")\n\n                                // the properties below are optional\n                                .mapping(\"mapping\")\n                                .build()))\n                        .recordFormat(RecordFormatProperty.builder()\n                                .recordFormatType(\"recordFormatType\")\n\n                                // the properties below are optional\n                                .mappingParameters(MappingParametersProperty.builder()\n                                        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                                .recordRowDelimiter(\"recordRowDelimiter\")\n                                                .build())\n                                        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                                .recordRowPath(\"recordRowPath\")\n                                                .build())\n                                        .build())\n                                .build())\n\n                        // the properties below are optional\n                        .recordEncoding(\"recordEncoding\")\n                        .build())\n\n                // the properties below are optional\n                .s3ReferenceDataSource(S3ReferenceDataSourceProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .fileKey(\"fileKey\")\n                        .referenceRoleArn(\"referenceRoleArn\")\n                        .build())\n                .tableName(\"tableName\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplicationReferenceDataSourceProps := &cfnApplicationReferenceDataSourceProps{\n\tapplicationName: jsii.String(\"applicationName\"),\n\treferenceDataSource: &referenceDataSourceProperty{\n\t\treferenceSchema: &referenceSchemaProperty{\n\t\t\trecordColumns: []interface{}{\n\t\t\t\t&recordColumnProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\trecordFormat: &recordFormatProperty{\n\t\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\ts3ReferenceDataSource: &s3ReferenceDataSourceProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\tfileKey: jsii.String(\"fileKey\"),\n\t\t\treferenceRoleArn: jsii.String(\"referenceRoleArn\"),\n\t\t},\n\t\ttableName: jsii.String(\"tableName\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplicationReferenceDataSourceProps: kinesisanalytics.CfnApplicationReferenceDataSourceProps = {\n  applicationName: 'applicationName',\n  referenceDataSource: {\n    referenceSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n\n    // the properties below are optional\n    s3ReferenceDataSource: {\n      bucketArn: 'bucketArn',\n      fileKey: 'fileKey',\n      referenceRoleArn: 'referenceRoleArn',\n    },\n    tableName: 'tableName',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationReferenceDataSourceProps: kinesisanalytics.CfnApplicationReferenceDataSourceProps = {\n  applicationName: 'applicationName',\n  referenceDataSource: {\n    referenceSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n\n    // the properties below are optional\n    s3ReferenceDataSource: {\n      bucketArn: 'bucketArn',\n      fileKey: 'fileKey',\n      referenceRoleArn: 'referenceRoleArn',\n    },\n    tableName: 'tableName',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 14,
        "75": 25,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 9,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 21,
        "290": 1
      },
      "fqnsFingerprint": "28edf94a07ba6db3875560e4af5dbf1bf3201d19a76fc89014df268ddec85eb2"
    },
    "9073832b5d077f8d8110b0bda5ffeafa08e44431c09cd1918c46ef49d3ab11f3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application_reference_data_source_v2 = kinesisanalytics.CfnApplicationReferenceDataSourceV2(self, \"MyCfnApplicationReferenceDataSourceV2\",\n    application_name=\"applicationName\",\n    reference_data_source=kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceDataSourceProperty(\n        reference_schema=kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceSchemaProperty(\n            record_columns=[kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordColumnProperty(\n                name=\"name\",\n                sql_type=\"sqlType\",\n\n                # the properties below are optional\n                mapping=\"mapping\"\n            )],\n            record_format=kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordFormatProperty(\n                record_format_type=\"recordFormatType\",\n\n                # the properties below are optional\n                mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.MappingParametersProperty(\n                    csv_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.CSVMappingParametersProperty(\n                        record_column_delimiter=\"recordColumnDelimiter\",\n                        record_row_delimiter=\"recordRowDelimiter\"\n                    ),\n                    json_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.JSONMappingParametersProperty(\n                        record_row_path=\"recordRowPath\"\n                    )\n                )\n            ),\n\n            # the properties below are optional\n            record_encoding=\"recordEncoding\"\n        ),\n\n        # the properties below are optional\n        s3_reference_data_source=kinesisanalytics.CfnApplicationReferenceDataSourceV2.S3ReferenceDataSourceProperty(\n            bucket_arn=\"bucketArn\",\n            file_key=\"fileKey\"\n        ),\n        table_name=\"tableName\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplicationReferenceDataSourceV2 cfnApplicationReferenceDataSourceV2 = new CfnApplicationReferenceDataSourceV2(this, \"MyCfnApplicationReferenceDataSourceV2\", new CfnApplicationReferenceDataSourceV2Props {\n    ApplicationName = \"applicationName\",\n    ReferenceDataSource = new ReferenceDataSourceProperty {\n        ReferenceSchema = new ReferenceSchemaProperty {\n            RecordColumns = new [] { new RecordColumnProperty {\n                Name = \"name\",\n                SqlType = \"sqlType\",\n\n                // the properties below are optional\n                Mapping = \"mapping\"\n            } },\n            RecordFormat = new RecordFormatProperty {\n                RecordFormatType = \"recordFormatType\",\n\n                // the properties below are optional\n                MappingParameters = new MappingParametersProperty {\n                    CsvMappingParameters = new CSVMappingParametersProperty {\n                        RecordColumnDelimiter = \"recordColumnDelimiter\",\n                        RecordRowDelimiter = \"recordRowDelimiter\"\n                    },\n                    JsonMappingParameters = new JSONMappingParametersProperty {\n                        RecordRowPath = \"recordRowPath\"\n                    }\n                }\n            },\n\n            // the properties below are optional\n            RecordEncoding = \"recordEncoding\"\n        },\n\n        // the properties below are optional\n        S3ReferenceDataSource = new S3ReferenceDataSourceProperty {\n            BucketArn = \"bucketArn\",\n            FileKey = \"fileKey\"\n        },\n        TableName = \"tableName\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplicationReferenceDataSourceV2 cfnApplicationReferenceDataSourceV2 = CfnApplicationReferenceDataSourceV2.Builder.create(this, \"MyCfnApplicationReferenceDataSourceV2\")\n        .applicationName(\"applicationName\")\n        .referenceDataSource(ReferenceDataSourceProperty.builder()\n                .referenceSchema(ReferenceSchemaProperty.builder()\n                        .recordColumns(List.of(RecordColumnProperty.builder()\n                                .name(\"name\")\n                                .sqlType(\"sqlType\")\n\n                                // the properties below are optional\n                                .mapping(\"mapping\")\n                                .build()))\n                        .recordFormat(RecordFormatProperty.builder()\n                                .recordFormatType(\"recordFormatType\")\n\n                                // the properties below are optional\n                                .mappingParameters(MappingParametersProperty.builder()\n                                        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                                .recordRowDelimiter(\"recordRowDelimiter\")\n                                                .build())\n                                        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                                .recordRowPath(\"recordRowPath\")\n                                                .build())\n                                        .build())\n                                .build())\n\n                        // the properties below are optional\n                        .recordEncoding(\"recordEncoding\")\n                        .build())\n\n                // the properties below are optional\n                .s3ReferenceDataSource(S3ReferenceDataSourceProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .fileKey(\"fileKey\")\n                        .build())\n                .tableName(\"tableName\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplicationReferenceDataSourceV2 := kinesisanalytics.NewCfnApplicationReferenceDataSourceV2(this, jsii.String(\"MyCfnApplicationReferenceDataSourceV2\"), &cfnApplicationReferenceDataSourceV2Props{\n\tapplicationName: jsii.String(\"applicationName\"),\n\treferenceDataSource: &referenceDataSourceProperty{\n\t\treferenceSchema: &referenceSchemaProperty{\n\t\t\trecordColumns: []interface{}{\n\t\t\t\t&recordColumnProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\trecordFormat: &recordFormatProperty{\n\t\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\ts3ReferenceDataSource: &s3ReferenceDataSourceProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\tfileKey: jsii.String(\"fileKey\"),\n\t\t},\n\t\ttableName: jsii.String(\"tableName\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplicationReferenceDataSourceV2 = new kinesisanalytics.CfnApplicationReferenceDataSourceV2(this, 'MyCfnApplicationReferenceDataSourceV2', {\n  applicationName: 'applicationName',\n  referenceDataSource: {\n    referenceSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n\n    // the properties below are optional\n    s3ReferenceDataSource: {\n      bucketArn: 'bucketArn',\n      fileKey: 'fileKey',\n    },\n    tableName: 'tableName',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2",
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2Props",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationReferenceDataSourceV2 = new kinesisanalytics.CfnApplicationReferenceDataSourceV2(this, 'MyCfnApplicationReferenceDataSourceV2', {\n  applicationName: 'applicationName',\n  referenceDataSource: {\n    referenceSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n\n    // the properties below are optional\n    s3ReferenceDataSource: {\n      bucketArn: 'bucketArn',\n      fileKey: 'fileKey',\n    },\n    tableName: 'tableName',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 14,
        "75": 24,
        "104": 1,
        "192": 1,
        "193": 9,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 20,
        "290": 1
      },
      "fqnsFingerprint": "2ed5048a4142fca026397f8c11c00c9c094131912aaded4a86932075a6abf6b4"
    },
    "3ba29c89deae11bea691f398520cdd956ce590614c82a2275ee9bb9113765348": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nc_sVMapping_parameters_property = kinesisanalytics.CfnApplicationReferenceDataSourceV2.CSVMappingParametersProperty(\n    record_column_delimiter=\"recordColumnDelimiter\",\n    record_row_delimiter=\"recordRowDelimiter\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCSVMappingParametersProperty cSVMappingParametersProperty = new CSVMappingParametersProperty {\n    RecordColumnDelimiter = \"recordColumnDelimiter\",\n    RecordRowDelimiter = \"recordRowDelimiter\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCSVMappingParametersProperty cSVMappingParametersProperty = CSVMappingParametersProperty.builder()\n        .recordColumnDelimiter(\"recordColumnDelimiter\")\n        .recordRowDelimiter(\"recordRowDelimiter\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncSVMappingParametersProperty := &cSVMappingParametersProperty{\n\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cSVMappingParametersProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.CSVMappingParametersProperty = {\n  recordColumnDelimiter: 'recordColumnDelimiter',\n  recordRowDelimiter: 'recordRowDelimiter',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.CSVMappingParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.CSVMappingParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cSVMappingParametersProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.CSVMappingParametersProperty = {\n  recordColumnDelimiter: 'recordColumnDelimiter',\n  recordRowDelimiter: 'recordRowDelimiter',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1984765dcdda9823ee3becf08b250084b644702b3206f5c2c7f77317f2fb2f42"
    },
    "e2276dfae72e0c8d9e7903abd8b858446e335b648c0de904f68934f33b841c38": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nj_sONMapping_parameters_property = kinesisanalytics.CfnApplicationReferenceDataSourceV2.JSONMappingParametersProperty(\n    record_row_path=\"recordRowPath\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nJSONMappingParametersProperty jSONMappingParametersProperty = new JSONMappingParametersProperty {\n    RecordRowPath = \"recordRowPath\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nJSONMappingParametersProperty jSONMappingParametersProperty = JSONMappingParametersProperty.builder()\n        .recordRowPath(\"recordRowPath\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\njSONMappingParametersProperty := &jSONMappingParametersProperty{\n\trecordRowPath: jsii.String(\"recordRowPath\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst jSONMappingParametersProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.JSONMappingParametersProperty = {\n  recordRowPath: 'recordRowPath',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.JSONMappingParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.JSONMappingParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jSONMappingParametersProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.JSONMappingParametersProperty = {\n  recordRowPath: 'recordRowPath',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "7b51195b1749bc7d3234118747b8cfdc00d18dfbc751e1ccd5a907125dc08149"
    },
    "ccd76050e1d886331b4d97ad6977c6205ed9b4a01898eae8883771b2ffa274bf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nmapping_parameters_property = kinesisanalytics.CfnApplicationReferenceDataSourceV2.MappingParametersProperty(\n    csv_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.CSVMappingParametersProperty(\n        record_column_delimiter=\"recordColumnDelimiter\",\n        record_row_delimiter=\"recordRowDelimiter\"\n    ),\n    json_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.JSONMappingParametersProperty(\n        record_row_path=\"recordRowPath\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nMappingParametersProperty mappingParametersProperty = new MappingParametersProperty {\n    CsvMappingParameters = new CSVMappingParametersProperty {\n        RecordColumnDelimiter = \"recordColumnDelimiter\",\n        RecordRowDelimiter = \"recordRowDelimiter\"\n    },\n    JsonMappingParameters = new JSONMappingParametersProperty {\n        RecordRowPath = \"recordRowPath\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nMappingParametersProperty mappingParametersProperty = MappingParametersProperty.builder()\n        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                .recordRowDelimiter(\"recordRowDelimiter\")\n                .build())\n        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                .recordRowPath(\"recordRowPath\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nmappingParametersProperty := &mappingParametersProperty{\n\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t},\n\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst mappingParametersProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.MappingParametersProperty = {\n  csvMappingParameters: {\n    recordColumnDelimiter: 'recordColumnDelimiter',\n    recordRowDelimiter: 'recordRowDelimiter',\n  },\n  jsonMappingParameters: {\n    recordRowPath: 'recordRowPath',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.MappingParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.MappingParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst mappingParametersProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.MappingParametersProperty = {\n  csvMappingParameters: {\n    recordColumnDelimiter: 'recordColumnDelimiter',\n    recordRowDelimiter: 'recordRowDelimiter',\n  },\n  jsonMappingParameters: {\n    recordRowPath: 'recordRowPath',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "aa5afeca5b66ae5a267bc8b4e4f9c2ba0f2c10339fa47d1bd0fb9d88dde520d4"
    },
    "cebe122396c2189a4a13602ed4eddf5a4ba62b8ea77623af4d424f3a5b8fd80c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nrecord_column_property = kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordColumnProperty(\n    name=\"name\",\n    sql_type=\"sqlType\",\n\n    # the properties below are optional\n    mapping=\"mapping\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nRecordColumnProperty recordColumnProperty = new RecordColumnProperty {\n    Name = \"name\",\n    SqlType = \"sqlType\",\n\n    // the properties below are optional\n    Mapping = \"mapping\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nRecordColumnProperty recordColumnProperty = RecordColumnProperty.builder()\n        .name(\"name\")\n        .sqlType(\"sqlType\")\n\n        // the properties below are optional\n        .mapping(\"mapping\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nrecordColumnProperty := &recordColumnProperty{\n\tname: jsii.String(\"name\"),\n\tsqlType: jsii.String(\"sqlType\"),\n\n\t// the properties below are optional\n\tmapping: jsii.String(\"mapping\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst recordColumnProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordColumnProperty = {\n  name: 'name',\n  sqlType: 'sqlType',\n\n  // the properties below are optional\n  mapping: 'mapping',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordColumnProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordColumnProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst recordColumnProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordColumnProperty = {\n  name: 'name',\n  sqlType: 'sqlType',\n\n  // the properties below are optional\n  mapping: 'mapping',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "5fe495a812760bf378a6f2b3d6a18d747e8393e9990ef754f472243f1f94c60d"
    },
    "8e81e023af2bb0ecb090e5b10e9d4e9daee38b25a4c7bc49bc9f3e05768eef62": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nrecord_format_property = kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordFormatProperty(\n    record_format_type=\"recordFormatType\",\n\n    # the properties below are optional\n    mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.MappingParametersProperty(\n        csv_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.CSVMappingParametersProperty(\n            record_column_delimiter=\"recordColumnDelimiter\",\n            record_row_delimiter=\"recordRowDelimiter\"\n        ),\n        json_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.JSONMappingParametersProperty(\n            record_row_path=\"recordRowPath\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nRecordFormatProperty recordFormatProperty = new RecordFormatProperty {\n    RecordFormatType = \"recordFormatType\",\n\n    // the properties below are optional\n    MappingParameters = new MappingParametersProperty {\n        CsvMappingParameters = new CSVMappingParametersProperty {\n            RecordColumnDelimiter = \"recordColumnDelimiter\",\n            RecordRowDelimiter = \"recordRowDelimiter\"\n        },\n        JsonMappingParameters = new JSONMappingParametersProperty {\n            RecordRowPath = \"recordRowPath\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nRecordFormatProperty recordFormatProperty = RecordFormatProperty.builder()\n        .recordFormatType(\"recordFormatType\")\n\n        // the properties below are optional\n        .mappingParameters(MappingParametersProperty.builder()\n                .csvMappingParameters(CSVMappingParametersProperty.builder()\n                        .recordColumnDelimiter(\"recordColumnDelimiter\")\n                        .recordRowDelimiter(\"recordRowDelimiter\")\n                        .build())\n                .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                        .recordRowPath(\"recordRowPath\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nrecordFormatProperty := &recordFormatProperty{\n\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t// the properties below are optional\n\tmappingParameters: &mappingParametersProperty{\n\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t},\n\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst recordFormatProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordFormatProperty = {\n  recordFormatType: 'recordFormatType',\n\n  // the properties below are optional\n  mappingParameters: {\n    csvMappingParameters: {\n      recordColumnDelimiter: 'recordColumnDelimiter',\n      recordRowDelimiter: 'recordRowDelimiter',\n    },\n    jsonMappingParameters: {\n      recordRowPath: 'recordRowPath',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordFormatProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordFormatProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst recordFormatProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordFormatProperty = {\n  recordFormatType: 'recordFormatType',\n\n  // the properties below are optional\n  mappingParameters: {\n    csvMappingParameters: {\n      recordColumnDelimiter: 'recordColumnDelimiter',\n      recordRowDelimiter: 'recordRowDelimiter',\n    },\n    jsonMappingParameters: {\n      recordRowPath: 'recordRowPath',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 12,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "19caf15386a443b98870a578152dbe00366ea939e6a75b13f921e330f50e3b87"
    },
    "7c423cf140dd528ee5cc182896cdc9fe72e8f2e213a4d57d1583c52ffea578ae": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nreference_data_source_property = kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceDataSourceProperty(\n    reference_schema=kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceSchemaProperty(\n        record_columns=[kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordColumnProperty(\n            name=\"name\",\n            sql_type=\"sqlType\",\n\n            # the properties below are optional\n            mapping=\"mapping\"\n        )],\n        record_format=kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordFormatProperty(\n            record_format_type=\"recordFormatType\",\n\n            # the properties below are optional\n            mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.MappingParametersProperty(\n                csv_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.CSVMappingParametersProperty(\n                    record_column_delimiter=\"recordColumnDelimiter\",\n                    record_row_delimiter=\"recordRowDelimiter\"\n                ),\n                json_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.JSONMappingParametersProperty(\n                    record_row_path=\"recordRowPath\"\n                )\n            )\n        ),\n\n        # the properties below are optional\n        record_encoding=\"recordEncoding\"\n    ),\n\n    # the properties below are optional\n    s3_reference_data_source=kinesisanalytics.CfnApplicationReferenceDataSourceV2.S3ReferenceDataSourceProperty(\n        bucket_arn=\"bucketArn\",\n        file_key=\"fileKey\"\n    ),\n    table_name=\"tableName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nReferenceDataSourceProperty referenceDataSourceProperty = new ReferenceDataSourceProperty {\n    ReferenceSchema = new ReferenceSchemaProperty {\n        RecordColumns = new [] { new RecordColumnProperty {\n            Name = \"name\",\n            SqlType = \"sqlType\",\n\n            // the properties below are optional\n            Mapping = \"mapping\"\n        } },\n        RecordFormat = new RecordFormatProperty {\n            RecordFormatType = \"recordFormatType\",\n\n            // the properties below are optional\n            MappingParameters = new MappingParametersProperty {\n                CsvMappingParameters = new CSVMappingParametersProperty {\n                    RecordColumnDelimiter = \"recordColumnDelimiter\",\n                    RecordRowDelimiter = \"recordRowDelimiter\"\n                },\n                JsonMappingParameters = new JSONMappingParametersProperty {\n                    RecordRowPath = \"recordRowPath\"\n                }\n            }\n        },\n\n        // the properties below are optional\n        RecordEncoding = \"recordEncoding\"\n    },\n\n    // the properties below are optional\n    S3ReferenceDataSource = new S3ReferenceDataSourceProperty {\n        BucketArn = \"bucketArn\",\n        FileKey = \"fileKey\"\n    },\n    TableName = \"tableName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nReferenceDataSourceProperty referenceDataSourceProperty = ReferenceDataSourceProperty.builder()\n        .referenceSchema(ReferenceSchemaProperty.builder()\n                .recordColumns(List.of(RecordColumnProperty.builder()\n                        .name(\"name\")\n                        .sqlType(\"sqlType\")\n\n                        // the properties below are optional\n                        .mapping(\"mapping\")\n                        .build()))\n                .recordFormat(RecordFormatProperty.builder()\n                        .recordFormatType(\"recordFormatType\")\n\n                        // the properties below are optional\n                        .mappingParameters(MappingParametersProperty.builder()\n                                .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                        .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                        .recordRowDelimiter(\"recordRowDelimiter\")\n                                        .build())\n                                .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                        .recordRowPath(\"recordRowPath\")\n                                        .build())\n                                .build())\n                        .build())\n\n                // the properties below are optional\n                .recordEncoding(\"recordEncoding\")\n                .build())\n\n        // the properties below are optional\n        .s3ReferenceDataSource(S3ReferenceDataSourceProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .fileKey(\"fileKey\")\n                .build())\n        .tableName(\"tableName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nreferenceDataSourceProperty := &referenceDataSourceProperty{\n\treferenceSchema: &referenceSchemaProperty{\n\t\trecordColumns: []interface{}{\n\t\t\t&recordColumnProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t},\n\t\t},\n\t\trecordFormat: &recordFormatProperty{\n\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t},\n\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t},\n\n\t// the properties below are optional\n\ts3ReferenceDataSource: &s3ReferenceDataSourceProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\tfileKey: jsii.String(\"fileKey\"),\n\t},\n\ttableName: jsii.String(\"tableName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst referenceDataSourceProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceDataSourceProperty = {\n  referenceSchema: {\n    recordColumns: [{\n      name: 'name',\n      sqlType: 'sqlType',\n\n      // the properties below are optional\n      mapping: 'mapping',\n    }],\n    recordFormat: {\n      recordFormatType: 'recordFormatType',\n\n      // the properties below are optional\n      mappingParameters: {\n        csvMappingParameters: {\n          recordColumnDelimiter: 'recordColumnDelimiter',\n          recordRowDelimiter: 'recordRowDelimiter',\n        },\n        jsonMappingParameters: {\n          recordRowPath: 'recordRowPath',\n        },\n      },\n    },\n\n    // the properties below are optional\n    recordEncoding: 'recordEncoding',\n  },\n\n  // the properties below are optional\n  s3ReferenceDataSource: {\n    bucketArn: 'bucketArn',\n    fileKey: 'fileKey',\n  },\n  tableName: 'tableName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceDataSourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceDataSourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst referenceDataSourceProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceDataSourceProperty = {\n  referenceSchema: {\n    recordColumns: [{\n      name: 'name',\n      sqlType: 'sqlType',\n\n      // the properties below are optional\n      mapping: 'mapping',\n    }],\n    recordFormat: {\n      recordFormatType: 'recordFormatType',\n\n      // the properties below are optional\n      mappingParameters: {\n        csvMappingParameters: {\n          recordColumnDelimiter: 'recordColumnDelimiter',\n          recordRowDelimiter: 'recordRowDelimiter',\n        },\n        jsonMappingParameters: {\n          recordRowPath: 'recordRowPath',\n        },\n      },\n    },\n\n    // the properties below are optional\n    recordEncoding: 'recordEncoding',\n  },\n\n  // the properties below are optional\n  s3ReferenceDataSource: {\n    bucketArn: 'bucketArn',\n    fileKey: 'fileKey',\n  },\n  tableName: 'tableName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 12,
        "75": 23,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 8,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 18,
        "290": 1
      },
      "fqnsFingerprint": "39c545330f04a6fae391ee50234d20b5e4550decf4b21b097a9ffac46495f0af"
    },
    "e702fd96485c2df8a77bf7776f198373bef67576242469d9925675d5bf45c916": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nreference_schema_property = kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceSchemaProperty(\n    record_columns=[kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordColumnProperty(\n        name=\"name\",\n        sql_type=\"sqlType\",\n\n        # the properties below are optional\n        mapping=\"mapping\"\n    )],\n    record_format=kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordFormatProperty(\n        record_format_type=\"recordFormatType\",\n\n        # the properties below are optional\n        mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.MappingParametersProperty(\n            csv_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.CSVMappingParametersProperty(\n                record_column_delimiter=\"recordColumnDelimiter\",\n                record_row_delimiter=\"recordRowDelimiter\"\n            ),\n            json_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.JSONMappingParametersProperty(\n                record_row_path=\"recordRowPath\"\n            )\n        )\n    ),\n\n    # the properties below are optional\n    record_encoding=\"recordEncoding\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nReferenceSchemaProperty referenceSchemaProperty = new ReferenceSchemaProperty {\n    RecordColumns = new [] { new RecordColumnProperty {\n        Name = \"name\",\n        SqlType = \"sqlType\",\n\n        // the properties below are optional\n        Mapping = \"mapping\"\n    } },\n    RecordFormat = new RecordFormatProperty {\n        RecordFormatType = \"recordFormatType\",\n\n        // the properties below are optional\n        MappingParameters = new MappingParametersProperty {\n            CsvMappingParameters = new CSVMappingParametersProperty {\n                RecordColumnDelimiter = \"recordColumnDelimiter\",\n                RecordRowDelimiter = \"recordRowDelimiter\"\n            },\n            JsonMappingParameters = new JSONMappingParametersProperty {\n                RecordRowPath = \"recordRowPath\"\n            }\n        }\n    },\n\n    // the properties below are optional\n    RecordEncoding = \"recordEncoding\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nReferenceSchemaProperty referenceSchemaProperty = ReferenceSchemaProperty.builder()\n        .recordColumns(List.of(RecordColumnProperty.builder()\n                .name(\"name\")\n                .sqlType(\"sqlType\")\n\n                // the properties below are optional\n                .mapping(\"mapping\")\n                .build()))\n        .recordFormat(RecordFormatProperty.builder()\n                .recordFormatType(\"recordFormatType\")\n\n                // the properties below are optional\n                .mappingParameters(MappingParametersProperty.builder()\n                        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                .recordRowDelimiter(\"recordRowDelimiter\")\n                                .build())\n                        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                .recordRowPath(\"recordRowPath\")\n                                .build())\n                        .build())\n                .build())\n\n        // the properties below are optional\n        .recordEncoding(\"recordEncoding\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nreferenceSchemaProperty := &referenceSchemaProperty{\n\trecordColumns: []interface{}{\n\t\t&recordColumnProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t},\n\t},\n\trecordFormat: &recordFormatProperty{\n\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t// the properties below are optional\n\t\tmappingParameters: &mappingParametersProperty{\n\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t},\n\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\trecordEncoding: jsii.String(\"recordEncoding\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst referenceSchemaProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceSchemaProperty = {\n  recordColumns: [{\n    name: 'name',\n    sqlType: 'sqlType',\n\n    // the properties below are optional\n    mapping: 'mapping',\n  }],\n  recordFormat: {\n    recordFormatType: 'recordFormatType',\n\n    // the properties below are optional\n    mappingParameters: {\n      csvMappingParameters: {\n        recordColumnDelimiter: 'recordColumnDelimiter',\n        recordRowDelimiter: 'recordRowDelimiter',\n      },\n      jsonMappingParameters: {\n        recordRowPath: 'recordRowPath',\n      },\n    },\n  },\n\n  // the properties below are optional\n  recordEncoding: 'recordEncoding',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceSchemaProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceSchemaProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst referenceSchemaProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceSchemaProperty = {\n  recordColumns: [{\n    name: 'name',\n    sqlType: 'sqlType',\n\n    // the properties below are optional\n    mapping: 'mapping',\n  }],\n  recordFormat: {\n    recordFormatType: 'recordFormatType',\n\n    // the properties below are optional\n    mappingParameters: {\n      csvMappingParameters: {\n        recordColumnDelimiter: 'recordColumnDelimiter',\n        recordRowDelimiter: 'recordRowDelimiter',\n      },\n      jsonMappingParameters: {\n        recordRowPath: 'recordRowPath',\n      },\n    },\n  },\n\n  // the properties below are optional\n  recordEncoding: 'recordEncoding',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 18,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 6,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "e11f70e06b9045d236854d5384f054914ab3af89f83a84b33c8c6ba7c212f33e"
    },
    "cdf292a912dcebb7cf5bcca15dfe7b634cd282e2a43a62aa7feff187c902d5ca": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ns3_reference_data_source_property = kinesisanalytics.CfnApplicationReferenceDataSourceV2.S3ReferenceDataSourceProperty(\n    bucket_arn=\"bucketArn\",\n    file_key=\"fileKey\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nS3ReferenceDataSourceProperty s3ReferenceDataSourceProperty = new S3ReferenceDataSourceProperty {\n    BucketArn = \"bucketArn\",\n    FileKey = \"fileKey\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nS3ReferenceDataSourceProperty s3ReferenceDataSourceProperty = S3ReferenceDataSourceProperty.builder()\n        .bucketArn(\"bucketArn\")\n        .fileKey(\"fileKey\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ns3ReferenceDataSourceProperty := &s3ReferenceDataSourceProperty{\n\tbucketArn: jsii.String(\"bucketArn\"),\n\tfileKey: jsii.String(\"fileKey\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst s3ReferenceDataSourceProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.S3ReferenceDataSourceProperty = {\n  bucketArn: 'bucketArn',\n  fileKey: 'fileKey',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.S3ReferenceDataSourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2.S3ReferenceDataSourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3ReferenceDataSourceProperty: kinesisanalytics.CfnApplicationReferenceDataSourceV2.S3ReferenceDataSourceProperty = {\n  bucketArn: 'bucketArn',\n  fileKey: 'fileKey',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "8d1ff05c17b12b83b6fc13273354bbe7a158ea23141c56f50dc124e13a72cb58"
    },
    "2979219b54e1a1f69eb9c7b8a83035398824e4d1af23ef3ce25d491e94893ea0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application_reference_data_source_v2_props = kinesisanalytics.CfnApplicationReferenceDataSourceV2Props(\n    application_name=\"applicationName\",\n    reference_data_source=kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceDataSourceProperty(\n        reference_schema=kinesisanalytics.CfnApplicationReferenceDataSourceV2.ReferenceSchemaProperty(\n            record_columns=[kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordColumnProperty(\n                name=\"name\",\n                sql_type=\"sqlType\",\n\n                # the properties below are optional\n                mapping=\"mapping\"\n            )],\n            record_format=kinesisanalytics.CfnApplicationReferenceDataSourceV2.RecordFormatProperty(\n                record_format_type=\"recordFormatType\",\n\n                # the properties below are optional\n                mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.MappingParametersProperty(\n                    csv_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.CSVMappingParametersProperty(\n                        record_column_delimiter=\"recordColumnDelimiter\",\n                        record_row_delimiter=\"recordRowDelimiter\"\n                    ),\n                    json_mapping_parameters=kinesisanalytics.CfnApplicationReferenceDataSourceV2.JSONMappingParametersProperty(\n                        record_row_path=\"recordRowPath\"\n                    )\n                )\n            ),\n\n            # the properties below are optional\n            record_encoding=\"recordEncoding\"\n        ),\n\n        # the properties below are optional\n        s3_reference_data_source=kinesisanalytics.CfnApplicationReferenceDataSourceV2.S3ReferenceDataSourceProperty(\n            bucket_arn=\"bucketArn\",\n            file_key=\"fileKey\"\n        ),\n        table_name=\"tableName\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplicationReferenceDataSourceV2Props cfnApplicationReferenceDataSourceV2Props = new CfnApplicationReferenceDataSourceV2Props {\n    ApplicationName = \"applicationName\",\n    ReferenceDataSource = new ReferenceDataSourceProperty {\n        ReferenceSchema = new ReferenceSchemaProperty {\n            RecordColumns = new [] { new RecordColumnProperty {\n                Name = \"name\",\n                SqlType = \"sqlType\",\n\n                // the properties below are optional\n                Mapping = \"mapping\"\n            } },\n            RecordFormat = new RecordFormatProperty {\n                RecordFormatType = \"recordFormatType\",\n\n                // the properties below are optional\n                MappingParameters = new MappingParametersProperty {\n                    CsvMappingParameters = new CSVMappingParametersProperty {\n                        RecordColumnDelimiter = \"recordColumnDelimiter\",\n                        RecordRowDelimiter = \"recordRowDelimiter\"\n                    },\n                    JsonMappingParameters = new JSONMappingParametersProperty {\n                        RecordRowPath = \"recordRowPath\"\n                    }\n                }\n            },\n\n            // the properties below are optional\n            RecordEncoding = \"recordEncoding\"\n        },\n\n        // the properties below are optional\n        S3ReferenceDataSource = new S3ReferenceDataSourceProperty {\n            BucketArn = \"bucketArn\",\n            FileKey = \"fileKey\"\n        },\n        TableName = \"tableName\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplicationReferenceDataSourceV2Props cfnApplicationReferenceDataSourceV2Props = CfnApplicationReferenceDataSourceV2Props.builder()\n        .applicationName(\"applicationName\")\n        .referenceDataSource(ReferenceDataSourceProperty.builder()\n                .referenceSchema(ReferenceSchemaProperty.builder()\n                        .recordColumns(List.of(RecordColumnProperty.builder()\n                                .name(\"name\")\n                                .sqlType(\"sqlType\")\n\n                                // the properties below are optional\n                                .mapping(\"mapping\")\n                                .build()))\n                        .recordFormat(RecordFormatProperty.builder()\n                                .recordFormatType(\"recordFormatType\")\n\n                                // the properties below are optional\n                                .mappingParameters(MappingParametersProperty.builder()\n                                        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                                .recordRowDelimiter(\"recordRowDelimiter\")\n                                                .build())\n                                        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                                .recordRowPath(\"recordRowPath\")\n                                                .build())\n                                        .build())\n                                .build())\n\n                        // the properties below are optional\n                        .recordEncoding(\"recordEncoding\")\n                        .build())\n\n                // the properties below are optional\n                .s3ReferenceDataSource(S3ReferenceDataSourceProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .fileKey(\"fileKey\")\n                        .build())\n                .tableName(\"tableName\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplicationReferenceDataSourceV2Props := &cfnApplicationReferenceDataSourceV2Props{\n\tapplicationName: jsii.String(\"applicationName\"),\n\treferenceDataSource: &referenceDataSourceProperty{\n\t\treferenceSchema: &referenceSchemaProperty{\n\t\t\trecordColumns: []interface{}{\n\t\t\t\t&recordColumnProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\trecordFormat: &recordFormatProperty{\n\t\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\ts3ReferenceDataSource: &s3ReferenceDataSourceProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\tfileKey: jsii.String(\"fileKey\"),\n\t\t},\n\t\ttableName: jsii.String(\"tableName\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplicationReferenceDataSourceV2Props: kinesisanalytics.CfnApplicationReferenceDataSourceV2Props = {\n  applicationName: 'applicationName',\n  referenceDataSource: {\n    referenceSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n\n    // the properties below are optional\n    s3ReferenceDataSource: {\n      bucketArn: 'bucketArn',\n      fileKey: 'fileKey',\n    },\n    tableName: 'tableName',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2Props"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationReferenceDataSourceV2Props"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationReferenceDataSourceV2Props: kinesisanalytics.CfnApplicationReferenceDataSourceV2Props = {\n  applicationName: 'applicationName',\n  referenceDataSource: {\n    referenceSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n\n    // the properties below are optional\n    s3ReferenceDataSource: {\n      bucketArn: 'bucketArn',\n      fileKey: 'fileKey',\n    },\n    tableName: 'tableName',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 13,
        "75": 24,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 9,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 20,
        "290": 1
      },
      "fqnsFingerprint": "f7fad5b54d91b960ee79ccbb3c27a4cbe8a608fb8d778bce40fc89ab30859982"
    },
    "8e5917ba3c8b09004af22f991a9445cf8ee90e11077ed298296ff5d4843bbe99": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application_v2 = kinesisanalytics.CfnApplicationV2(self, \"MyCfnApplicationV2\",\n    runtime_environment=\"runtimeEnvironment\",\n    service_execution_role=\"serviceExecutionRole\",\n\n    # the properties below are optional\n    application_configuration=kinesisanalytics.CfnApplicationV2.ApplicationConfigurationProperty(\n        application_code_configuration=kinesisanalytics.CfnApplicationV2.ApplicationCodeConfigurationProperty(\n            code_content=kinesisanalytics.CfnApplicationV2.CodeContentProperty(\n                s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty(\n                    bucket_arn=\"bucketArn\",\n                    file_key=\"fileKey\",\n\n                    # the properties below are optional\n                    object_version=\"objectVersion\"\n                ),\n                text_content=\"textContent\",\n                zip_file_content=\"zipFileContent\"\n            ),\n            code_content_type=\"codeContentType\"\n        ),\n        application_snapshot_configuration=kinesisanalytics.CfnApplicationV2.ApplicationSnapshotConfigurationProperty(\n            snapshots_enabled=False\n        ),\n        environment_properties=kinesisanalytics.CfnApplicationV2.EnvironmentPropertiesProperty(\n            property_groups=[kinesisanalytics.CfnApplicationV2.PropertyGroupProperty(\n                property_group_id=\"propertyGroupId\",\n                property_map={\n                    \"property_map_key\": \"propertyMap\"\n                }\n            )]\n        ),\n        flink_application_configuration=kinesisanalytics.CfnApplicationV2.FlinkApplicationConfigurationProperty(\n            checkpoint_configuration=kinesisanalytics.CfnApplicationV2.CheckpointConfigurationProperty(\n                configuration_type=\"configurationType\",\n\n                # the properties below are optional\n                checkpointing_enabled=False,\n                checkpoint_interval=123,\n                min_pause_between_checkpoints=123\n            ),\n            monitoring_configuration=kinesisanalytics.CfnApplicationV2.MonitoringConfigurationProperty(\n                configuration_type=\"configurationType\",\n\n                # the properties below are optional\n                log_level=\"logLevel\",\n                metrics_level=\"metricsLevel\"\n            ),\n            parallelism_configuration=kinesisanalytics.CfnApplicationV2.ParallelismConfigurationProperty(\n                configuration_type=\"configurationType\",\n\n                # the properties below are optional\n                auto_scaling_enabled=False,\n                parallelism=123,\n                parallelism_per_kpu=123\n            )\n        ),\n        sql_application_configuration=kinesisanalytics.CfnApplicationV2.SqlApplicationConfigurationProperty(\n            inputs=[kinesisanalytics.CfnApplicationV2.InputProperty(\n                input_schema=kinesisanalytics.CfnApplicationV2.InputSchemaProperty(\n                    record_columns=[kinesisanalytics.CfnApplicationV2.RecordColumnProperty(\n                        name=\"name\",\n                        sql_type=\"sqlType\",\n\n                        # the properties below are optional\n                        mapping=\"mapping\"\n                    )],\n                    record_format=kinesisanalytics.CfnApplicationV2.RecordFormatProperty(\n                        record_format_type=\"recordFormatType\",\n\n                        # the properties below are optional\n                        mapping_parameters=kinesisanalytics.CfnApplicationV2.MappingParametersProperty(\n                            csv_mapping_parameters=kinesisanalytics.CfnApplicationV2.CSVMappingParametersProperty(\n                                record_column_delimiter=\"recordColumnDelimiter\",\n                                record_row_delimiter=\"recordRowDelimiter\"\n                            ),\n                            json_mapping_parameters=kinesisanalytics.CfnApplicationV2.JSONMappingParametersProperty(\n                                record_row_path=\"recordRowPath\"\n                            )\n                        )\n                    ),\n\n                    # the properties below are optional\n                    record_encoding=\"recordEncoding\"\n                ),\n                name_prefix=\"namePrefix\",\n\n                # the properties below are optional\n                input_parallelism=kinesisanalytics.CfnApplicationV2.InputParallelismProperty(\n                    count=123\n                ),\n                input_processing_configuration=kinesisanalytics.CfnApplicationV2.InputProcessingConfigurationProperty(\n                    input_lambda_processor=kinesisanalytics.CfnApplicationV2.InputLambdaProcessorProperty(\n                        resource_arn=\"resourceArn\"\n                    )\n                ),\n                kinesis_firehose_input=kinesisanalytics.CfnApplicationV2.KinesisFirehoseInputProperty(\n                    resource_arn=\"resourceArn\"\n                ),\n                kinesis_streams_input=kinesisanalytics.CfnApplicationV2.KinesisStreamsInputProperty(\n                    resource_arn=\"resourceArn\"\n                )\n            )]\n        ),\n        vpc_configurations=[kinesisanalytics.CfnApplicationV2.VpcConfigurationProperty(\n            security_group_ids=[\"securityGroupIds\"],\n            subnet_ids=[\"subnetIds\"]\n        )],\n        zeppelin_application_configuration=kinesisanalytics.CfnApplicationV2.ZeppelinApplicationConfigurationProperty(\n            catalog_configuration=kinesisanalytics.CfnApplicationV2.CatalogConfigurationProperty(\n                glue_data_catalog_configuration=kinesisanalytics.CfnApplicationV2.GlueDataCatalogConfigurationProperty(\n                    database_arn=\"databaseArn\"\n                )\n            ),\n            custom_artifacts_configuration=[kinesisanalytics.CfnApplicationV2.CustomArtifactConfigurationProperty(\n                artifact_type=\"artifactType\",\n\n                # the properties below are optional\n                maven_reference=kinesisanalytics.CfnApplicationV2.MavenReferenceProperty(\n                    artifact_id=\"artifactId\",\n                    group_id=\"groupId\",\n                    version=\"version\"\n                ),\n                s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty(\n                    bucket_arn=\"bucketArn\",\n                    file_key=\"fileKey\",\n\n                    # the properties below are optional\n                    object_version=\"objectVersion\"\n                )\n            )],\n            deploy_as_application_configuration=kinesisanalytics.CfnApplicationV2.DeployAsApplicationConfigurationProperty(\n                s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentBaseLocationProperty(\n                    bucket_arn=\"bucketArn\",\n\n                    # the properties below are optional\n                    base_path=\"basePath\"\n                )\n            ),\n            monitoring_configuration=kinesisanalytics.CfnApplicationV2.ZeppelinMonitoringConfigurationProperty(\n                log_level=\"logLevel\"\n            )\n        )\n    ),\n    application_description=\"applicationDescription\",\n    application_maintenance_configuration=kinesisanalytics.CfnApplicationV2.ApplicationMaintenanceConfigurationProperty(\n        application_maintenance_window_start_time=\"applicationMaintenanceWindowStartTime\"\n    ),\n    application_mode=\"applicationMode\",\n    application_name=\"applicationName\",\n    run_configuration=kinesisanalytics.CfnApplicationV2.RunConfigurationProperty(\n        application_restore_configuration=kinesisanalytics.CfnApplicationV2.ApplicationRestoreConfigurationProperty(\n            application_restore_type=\"applicationRestoreType\",\n\n            # the properties below are optional\n            snapshot_name=\"snapshotName\"\n        ),\n        flink_run_configuration=kinesisanalytics.CfnApplicationV2.FlinkRunConfigurationProperty(\n            allow_non_restored_state=False\n        )\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplicationV2 cfnApplicationV2 = new CfnApplicationV2(this, \"MyCfnApplicationV2\", new CfnApplicationV2Props {\n    RuntimeEnvironment = \"runtimeEnvironment\",\n    ServiceExecutionRole = \"serviceExecutionRole\",\n\n    // the properties below are optional\n    ApplicationConfiguration = new ApplicationConfigurationProperty {\n        ApplicationCodeConfiguration = new ApplicationCodeConfigurationProperty {\n            CodeContent = new CodeContentProperty {\n                S3ContentLocation = new S3ContentLocationProperty {\n                    BucketArn = \"bucketArn\",\n                    FileKey = \"fileKey\",\n\n                    // the properties below are optional\n                    ObjectVersion = \"objectVersion\"\n                },\n                TextContent = \"textContent\",\n                ZipFileContent = \"zipFileContent\"\n            },\n            CodeContentType = \"codeContentType\"\n        },\n        ApplicationSnapshotConfiguration = new ApplicationSnapshotConfigurationProperty {\n            SnapshotsEnabled = false\n        },\n        EnvironmentProperties = new EnvironmentPropertiesProperty {\n            PropertyGroups = new [] { new PropertyGroupProperty {\n                PropertyGroupId = \"propertyGroupId\",\n                PropertyMap = new Dictionary<string, string> {\n                    { \"propertyMapKey\", \"propertyMap\" }\n                }\n            } }\n        },\n        FlinkApplicationConfiguration = new FlinkApplicationConfigurationProperty {\n            CheckpointConfiguration = new CheckpointConfigurationProperty {\n                ConfigurationType = \"configurationType\",\n\n                // the properties below are optional\n                CheckpointingEnabled = false,\n                CheckpointInterval = 123,\n                MinPauseBetweenCheckpoints = 123\n            },\n            MonitoringConfiguration = new MonitoringConfigurationProperty {\n                ConfigurationType = \"configurationType\",\n\n                // the properties below are optional\n                LogLevel = \"logLevel\",\n                MetricsLevel = \"metricsLevel\"\n            },\n            ParallelismConfiguration = new ParallelismConfigurationProperty {\n                ConfigurationType = \"configurationType\",\n\n                // the properties below are optional\n                AutoScalingEnabled = false,\n                Parallelism = 123,\n                ParallelismPerKpu = 123\n            }\n        },\n        SqlApplicationConfiguration = new SqlApplicationConfigurationProperty {\n            Inputs = new [] { new InputProperty {\n                InputSchema = new InputSchemaProperty {\n                    RecordColumns = new [] { new RecordColumnProperty {\n                        Name = \"name\",\n                        SqlType = \"sqlType\",\n\n                        // the properties below are optional\n                        Mapping = \"mapping\"\n                    } },\n                    RecordFormat = new RecordFormatProperty {\n                        RecordFormatType = \"recordFormatType\",\n\n                        // the properties below are optional\n                        MappingParameters = new MappingParametersProperty {\n                            CsvMappingParameters = new CSVMappingParametersProperty {\n                                RecordColumnDelimiter = \"recordColumnDelimiter\",\n                                RecordRowDelimiter = \"recordRowDelimiter\"\n                            },\n                            JsonMappingParameters = new JSONMappingParametersProperty {\n                                RecordRowPath = \"recordRowPath\"\n                            }\n                        }\n                    },\n\n                    // the properties below are optional\n                    RecordEncoding = \"recordEncoding\"\n                },\n                NamePrefix = \"namePrefix\",\n\n                // the properties below are optional\n                InputParallelism = new InputParallelismProperty {\n                    Count = 123\n                },\n                InputProcessingConfiguration = new InputProcessingConfigurationProperty {\n                    InputLambdaProcessor = new InputLambdaProcessorProperty {\n                        ResourceArn = \"resourceArn\"\n                    }\n                },\n                KinesisFirehoseInput = new KinesisFirehoseInputProperty {\n                    ResourceArn = \"resourceArn\"\n                },\n                KinesisStreamsInput = new KinesisStreamsInputProperty {\n                    ResourceArn = \"resourceArn\"\n                }\n            } }\n        },\n        VpcConfigurations = new [] { new VpcConfigurationProperty {\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            SubnetIds = new [] { \"subnetIds\" }\n        } },\n        ZeppelinApplicationConfiguration = new ZeppelinApplicationConfigurationProperty {\n            CatalogConfiguration = new CatalogConfigurationProperty {\n                GlueDataCatalogConfiguration = new GlueDataCatalogConfigurationProperty {\n                    DatabaseArn = \"databaseArn\"\n                }\n            },\n            CustomArtifactsConfiguration = new [] { new CustomArtifactConfigurationProperty {\n                ArtifactType = \"artifactType\",\n\n                // the properties below are optional\n                MavenReference = new MavenReferenceProperty {\n                    ArtifactId = \"artifactId\",\n                    GroupId = \"groupId\",\n                    Version = \"version\"\n                },\n                S3ContentLocation = new S3ContentLocationProperty {\n                    BucketArn = \"bucketArn\",\n                    FileKey = \"fileKey\",\n\n                    // the properties below are optional\n                    ObjectVersion = \"objectVersion\"\n                }\n            } },\n            DeployAsApplicationConfiguration = new DeployAsApplicationConfigurationProperty {\n                S3ContentLocation = new S3ContentBaseLocationProperty {\n                    BucketArn = \"bucketArn\",\n\n                    // the properties below are optional\n                    BasePath = \"basePath\"\n                }\n            },\n            MonitoringConfiguration = new ZeppelinMonitoringConfigurationProperty {\n                LogLevel = \"logLevel\"\n            }\n        }\n    },\n    ApplicationDescription = \"applicationDescription\",\n    ApplicationMaintenanceConfiguration = new ApplicationMaintenanceConfigurationProperty {\n        ApplicationMaintenanceWindowStartTime = \"applicationMaintenanceWindowStartTime\"\n    },\n    ApplicationMode = \"applicationMode\",\n    ApplicationName = \"applicationName\",\n    RunConfiguration = new RunConfigurationProperty {\n        ApplicationRestoreConfiguration = new ApplicationRestoreConfigurationProperty {\n            ApplicationRestoreType = \"applicationRestoreType\",\n\n            // the properties below are optional\n            SnapshotName = \"snapshotName\"\n        },\n        FlinkRunConfiguration = new FlinkRunConfigurationProperty {\n            AllowNonRestoredState = false\n        }\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplicationV2 cfnApplicationV2 = CfnApplicationV2.Builder.create(this, \"MyCfnApplicationV2\")\n        .runtimeEnvironment(\"runtimeEnvironment\")\n        .serviceExecutionRole(\"serviceExecutionRole\")\n\n        // the properties below are optional\n        .applicationConfiguration(ApplicationConfigurationProperty.builder()\n                .applicationCodeConfiguration(ApplicationCodeConfigurationProperty.builder()\n                        .codeContent(CodeContentProperty.builder()\n                                .s3ContentLocation(S3ContentLocationProperty.builder()\n                                        .bucketArn(\"bucketArn\")\n                                        .fileKey(\"fileKey\")\n\n                                        // the properties below are optional\n                                        .objectVersion(\"objectVersion\")\n                                        .build())\n                                .textContent(\"textContent\")\n                                .zipFileContent(\"zipFileContent\")\n                                .build())\n                        .codeContentType(\"codeContentType\")\n                        .build())\n                .applicationSnapshotConfiguration(ApplicationSnapshotConfigurationProperty.builder()\n                        .snapshotsEnabled(false)\n                        .build())\n                .environmentProperties(EnvironmentPropertiesProperty.builder()\n                        .propertyGroups(List.of(PropertyGroupProperty.builder()\n                                .propertyGroupId(\"propertyGroupId\")\n                                .propertyMap(Map.of(\n                                        \"propertyMapKey\", \"propertyMap\"))\n                                .build()))\n                        .build())\n                .flinkApplicationConfiguration(FlinkApplicationConfigurationProperty.builder()\n                        .checkpointConfiguration(CheckpointConfigurationProperty.builder()\n                                .configurationType(\"configurationType\")\n\n                                // the properties below are optional\n                                .checkpointingEnabled(false)\n                                .checkpointInterval(123)\n                                .minPauseBetweenCheckpoints(123)\n                                .build())\n                        .monitoringConfiguration(MonitoringConfigurationProperty.builder()\n                                .configurationType(\"configurationType\")\n\n                                // the properties below are optional\n                                .logLevel(\"logLevel\")\n                                .metricsLevel(\"metricsLevel\")\n                                .build())\n                        .parallelismConfiguration(ParallelismConfigurationProperty.builder()\n                                .configurationType(\"configurationType\")\n\n                                // the properties below are optional\n                                .autoScalingEnabled(false)\n                                .parallelism(123)\n                                .parallelismPerKpu(123)\n                                .build())\n                        .build())\n                .sqlApplicationConfiguration(SqlApplicationConfigurationProperty.builder()\n                        .inputs(List.of(InputProperty.builder()\n                                .inputSchema(InputSchemaProperty.builder()\n                                        .recordColumns(List.of(RecordColumnProperty.builder()\n                                                .name(\"name\")\n                                                .sqlType(\"sqlType\")\n\n                                                // the properties below are optional\n                                                .mapping(\"mapping\")\n                                                .build()))\n                                        .recordFormat(RecordFormatProperty.builder()\n                                                .recordFormatType(\"recordFormatType\")\n\n                                                // the properties below are optional\n                                                .mappingParameters(MappingParametersProperty.builder()\n                                                        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                                                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                                                .recordRowDelimiter(\"recordRowDelimiter\")\n                                                                .build())\n                                                        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                                                .recordRowPath(\"recordRowPath\")\n                                                                .build())\n                                                        .build())\n                                                .build())\n\n                                        // the properties below are optional\n                                        .recordEncoding(\"recordEncoding\")\n                                        .build())\n                                .namePrefix(\"namePrefix\")\n\n                                // the properties below are optional\n                                .inputParallelism(InputParallelismProperty.builder()\n                                        .count(123)\n                                        .build())\n                                .inputProcessingConfiguration(InputProcessingConfigurationProperty.builder()\n                                        .inputLambdaProcessor(InputLambdaProcessorProperty.builder()\n                                                .resourceArn(\"resourceArn\")\n                                                .build())\n                                        .build())\n                                .kinesisFirehoseInput(KinesisFirehoseInputProperty.builder()\n                                        .resourceArn(\"resourceArn\")\n                                        .build())\n                                .kinesisStreamsInput(KinesisStreamsInputProperty.builder()\n                                        .resourceArn(\"resourceArn\")\n                                        .build())\n                                .build()))\n                        .build())\n                .vpcConfigurations(List.of(VpcConfigurationProperty.builder()\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnetIds(List.of(\"subnetIds\"))\n                        .build()))\n                .zeppelinApplicationConfiguration(ZeppelinApplicationConfigurationProperty.builder()\n                        .catalogConfiguration(CatalogConfigurationProperty.builder()\n                                .glueDataCatalogConfiguration(GlueDataCatalogConfigurationProperty.builder()\n                                        .databaseArn(\"databaseArn\")\n                                        .build())\n                                .build())\n                        .customArtifactsConfiguration(List.of(CustomArtifactConfigurationProperty.builder()\n                                .artifactType(\"artifactType\")\n\n                                // the properties below are optional\n                                .mavenReference(MavenReferenceProperty.builder()\n                                        .artifactId(\"artifactId\")\n                                        .groupId(\"groupId\")\n                                        .version(\"version\")\n                                        .build())\n                                .s3ContentLocation(S3ContentLocationProperty.builder()\n                                        .bucketArn(\"bucketArn\")\n                                        .fileKey(\"fileKey\")\n\n                                        // the properties below are optional\n                                        .objectVersion(\"objectVersion\")\n                                        .build())\n                                .build()))\n                        .deployAsApplicationConfiguration(DeployAsApplicationConfigurationProperty.builder()\n                                .s3ContentLocation(S3ContentBaseLocationProperty.builder()\n                                        .bucketArn(\"bucketArn\")\n\n                                        // the properties below are optional\n                                        .basePath(\"basePath\")\n                                        .build())\n                                .build())\n                        .monitoringConfiguration(ZeppelinMonitoringConfigurationProperty.builder()\n                                .logLevel(\"logLevel\")\n                                .build())\n                        .build())\n                .build())\n        .applicationDescription(\"applicationDescription\")\n        .applicationMaintenanceConfiguration(ApplicationMaintenanceConfigurationProperty.builder()\n                .applicationMaintenanceWindowStartTime(\"applicationMaintenanceWindowStartTime\")\n                .build())\n        .applicationMode(\"applicationMode\")\n        .applicationName(\"applicationName\")\n        .runConfiguration(RunConfigurationProperty.builder()\n                .applicationRestoreConfiguration(ApplicationRestoreConfigurationProperty.builder()\n                        .applicationRestoreType(\"applicationRestoreType\")\n\n                        // the properties below are optional\n                        .snapshotName(\"snapshotName\")\n                        .build())\n                .flinkRunConfiguration(FlinkRunConfigurationProperty.builder()\n                        .allowNonRestoredState(false)\n                        .build())\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplicationV2 := kinesisanalytics.NewCfnApplicationV2(this, jsii.String(\"MyCfnApplicationV2\"), &cfnApplicationV2Props{\n\truntimeEnvironment: jsii.String(\"runtimeEnvironment\"),\n\tserviceExecutionRole: jsii.String(\"serviceExecutionRole\"),\n\n\t// the properties below are optional\n\tapplicationConfiguration: &applicationConfigurationProperty{\n\t\tapplicationCodeConfiguration: &applicationCodeConfigurationProperty{\n\t\t\tcodeContent: &codeContentProperty{\n\t\t\t\ts3ContentLocation: &s3ContentLocationProperty{\n\t\t\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\t\t\tfileKey: jsii.String(\"fileKey\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tobjectVersion: jsii.String(\"objectVersion\"),\n\t\t\t\t},\n\t\t\t\ttextContent: jsii.String(\"textContent\"),\n\t\t\t\tzipFileContent: jsii.String(\"zipFileContent\"),\n\t\t\t},\n\t\t\tcodeContentType: jsii.String(\"codeContentType\"),\n\t\t},\n\t\tapplicationSnapshotConfiguration: &applicationSnapshotConfigurationProperty{\n\t\t\tsnapshotsEnabled: jsii.Boolean(false),\n\t\t},\n\t\tenvironmentProperties: &environmentPropertiesProperty{\n\t\t\tpropertyGroups: []interface{}{\n\t\t\t\t&propertyGroupProperty{\n\t\t\t\t\tpropertyGroupId: jsii.String(\"propertyGroupId\"),\n\t\t\t\t\tpropertyMap: map[string]*string{\n\t\t\t\t\t\t\"propertyMapKey\": jsii.String(\"propertyMap\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tflinkApplicationConfiguration: &flinkApplicationConfigurationProperty{\n\t\t\tcheckpointConfiguration: &checkpointConfigurationProperty{\n\t\t\t\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcheckpointingEnabled: jsii.Boolean(false),\n\t\t\t\tcheckpointInterval: jsii.Number(123),\n\t\t\t\tminPauseBetweenCheckpoints: jsii.Number(123),\n\t\t\t},\n\t\t\tmonitoringConfiguration: &monitoringConfigurationProperty{\n\t\t\t\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tlogLevel: jsii.String(\"logLevel\"),\n\t\t\t\tmetricsLevel: jsii.String(\"metricsLevel\"),\n\t\t\t},\n\t\t\tparallelismConfiguration: &parallelismConfigurationProperty{\n\t\t\t\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tautoScalingEnabled: jsii.Boolean(false),\n\t\t\t\tparallelism: jsii.Number(123),\n\t\t\t\tparallelismPerKpu: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\tsqlApplicationConfiguration: &sqlApplicationConfigurationProperty{\n\t\t\tinputs: []interface{}{\n\t\t\t\t&inputProperty{\n\t\t\t\t\tinputSchema: &inputSchemaProperty{\n\t\t\t\t\t\trecordColumns: []interface{}{\n\t\t\t\t\t\t\t&recordColumnProperty{\n\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\trecordFormat: &recordFormatProperty{\n\t\t\t\t\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\t\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t\t\t\t\t},\n\t\t\t\t\tnamePrefix: jsii.String(\"namePrefix\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinputParallelism: &inputParallelismProperty{\n\t\t\t\t\t\tcount: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tinputProcessingConfiguration: &inputProcessingConfigurationProperty{\n\t\t\t\t\t\tinputLambdaProcessor: &inputLambdaProcessorProperty{\n\t\t\t\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tkinesisFirehoseInput: &kinesisFirehoseInputProperty{\n\t\t\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\t\t},\n\t\t\t\t\tkinesisStreamsInput: &kinesisStreamsInputProperty{\n\t\t\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tvpcConfigurations: []interface{}{\n\t\t\t&vpcConfigurationProperty{\n\t\t\t\tsecurityGroupIds: []*string{\n\t\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t\t},\n\t\t\t\tsubnetIds: []*string{\n\t\t\t\t\tjsii.String(\"subnetIds\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tzeppelinApplicationConfiguration: &zeppelinApplicationConfigurationProperty{\n\t\t\tcatalogConfiguration: &catalogConfigurationProperty{\n\t\t\t\tglueDataCatalogConfiguration: &glueDataCatalogConfigurationProperty{\n\t\t\t\t\tdatabaseArn: jsii.String(\"databaseArn\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcustomArtifactsConfiguration: []interface{}{\n\t\t\t\t&customArtifactConfigurationProperty{\n\t\t\t\t\tartifactType: jsii.String(\"artifactType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tmavenReference: &mavenReferenceProperty{\n\t\t\t\t\t\tartifactId: jsii.String(\"artifactId\"),\n\t\t\t\t\t\tgroupId: jsii.String(\"groupId\"),\n\t\t\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t\t\t},\n\t\t\t\t\ts3ContentLocation: &s3ContentLocationProperty{\n\t\t\t\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\t\t\t\tfileKey: jsii.String(\"fileKey\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tobjectVersion: jsii.String(\"objectVersion\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdeployAsApplicationConfiguration: &deployAsApplicationConfigurationProperty{\n\t\t\t\ts3ContentLocation: &s3ContentBaseLocationProperty{\n\t\t\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tbasePath: jsii.String(\"basePath\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmonitoringConfiguration: &zeppelinMonitoringConfigurationProperty{\n\t\t\t\tlogLevel: jsii.String(\"logLevel\"),\n\t\t\t},\n\t\t},\n\t},\n\tapplicationDescription: jsii.String(\"applicationDescription\"),\n\tapplicationMaintenanceConfiguration: &applicationMaintenanceConfigurationProperty{\n\t\tapplicationMaintenanceWindowStartTime: jsii.String(\"applicationMaintenanceWindowStartTime\"),\n\t},\n\tapplicationMode: jsii.String(\"applicationMode\"),\n\tapplicationName: jsii.String(\"applicationName\"),\n\trunConfiguration: &runConfigurationProperty{\n\t\tapplicationRestoreConfiguration: &applicationRestoreConfigurationProperty{\n\t\t\tapplicationRestoreType: jsii.String(\"applicationRestoreType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tsnapshotName: jsii.String(\"snapshotName\"),\n\t\t},\n\t\tflinkRunConfiguration: &flinkRunConfigurationProperty{\n\t\t\tallowNonRestoredState: jsii.Boolean(false),\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplicationV2 = new kinesisanalytics.CfnApplicationV2(this, 'MyCfnApplicationV2', {\n  runtimeEnvironment: 'runtimeEnvironment',\n  serviceExecutionRole: 'serviceExecutionRole',\n\n  // the properties below are optional\n  applicationConfiguration: {\n    applicationCodeConfiguration: {\n      codeContent: {\n        s3ContentLocation: {\n          bucketArn: 'bucketArn',\n          fileKey: 'fileKey',\n\n          // the properties below are optional\n          objectVersion: 'objectVersion',\n        },\n        textContent: 'textContent',\n        zipFileContent: 'zipFileContent',\n      },\n      codeContentType: 'codeContentType',\n    },\n    applicationSnapshotConfiguration: {\n      snapshotsEnabled: false,\n    },\n    environmentProperties: {\n      propertyGroups: [{\n        propertyGroupId: 'propertyGroupId',\n        propertyMap: {\n          propertyMapKey: 'propertyMap',\n        },\n      }],\n    },\n    flinkApplicationConfiguration: {\n      checkpointConfiguration: {\n        configurationType: 'configurationType',\n\n        // the properties below are optional\n        checkpointingEnabled: false,\n        checkpointInterval: 123,\n        minPauseBetweenCheckpoints: 123,\n      },\n      monitoringConfiguration: {\n        configurationType: 'configurationType',\n\n        // the properties below are optional\n        logLevel: 'logLevel',\n        metricsLevel: 'metricsLevel',\n      },\n      parallelismConfiguration: {\n        configurationType: 'configurationType',\n\n        // the properties below are optional\n        autoScalingEnabled: false,\n        parallelism: 123,\n        parallelismPerKpu: 123,\n      },\n    },\n    sqlApplicationConfiguration: {\n      inputs: [{\n        inputSchema: {\n          recordColumns: [{\n            name: 'name',\n            sqlType: 'sqlType',\n\n            // the properties below are optional\n            mapping: 'mapping',\n          }],\n          recordFormat: {\n            recordFormatType: 'recordFormatType',\n\n            // the properties below are optional\n            mappingParameters: {\n              csvMappingParameters: {\n                recordColumnDelimiter: 'recordColumnDelimiter',\n                recordRowDelimiter: 'recordRowDelimiter',\n              },\n              jsonMappingParameters: {\n                recordRowPath: 'recordRowPath',\n              },\n            },\n          },\n\n          // the properties below are optional\n          recordEncoding: 'recordEncoding',\n        },\n        namePrefix: 'namePrefix',\n\n        // the properties below are optional\n        inputParallelism: {\n          count: 123,\n        },\n        inputProcessingConfiguration: {\n          inputLambdaProcessor: {\n            resourceArn: 'resourceArn',\n          },\n        },\n        kinesisFirehoseInput: {\n          resourceArn: 'resourceArn',\n        },\n        kinesisStreamsInput: {\n          resourceArn: 'resourceArn',\n        },\n      }],\n    },\n    vpcConfigurations: [{\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    }],\n    zeppelinApplicationConfiguration: {\n      catalogConfiguration: {\n        glueDataCatalogConfiguration: {\n          databaseArn: 'databaseArn',\n        },\n      },\n      customArtifactsConfiguration: [{\n        artifactType: 'artifactType',\n\n        // the properties below are optional\n        mavenReference: {\n          artifactId: 'artifactId',\n          groupId: 'groupId',\n          version: 'version',\n        },\n        s3ContentLocation: {\n          bucketArn: 'bucketArn',\n          fileKey: 'fileKey',\n\n          // the properties below are optional\n          objectVersion: 'objectVersion',\n        },\n      }],\n      deployAsApplicationConfiguration: {\n        s3ContentLocation: {\n          bucketArn: 'bucketArn',\n\n          // the properties below are optional\n          basePath: 'basePath',\n        },\n      },\n      monitoringConfiguration: {\n        logLevel: 'logLevel',\n      },\n    },\n  },\n  applicationDescription: 'applicationDescription',\n  applicationMaintenanceConfiguration: {\n    applicationMaintenanceWindowStartTime: 'applicationMaintenanceWindowStartTime',\n  },\n  applicationMode: 'applicationMode',\n  applicationName: 'applicationName',\n  runConfiguration: {\n    applicationRestoreConfiguration: {\n      applicationRestoreType: 'applicationRestoreType',\n\n      // the properties below are optional\n      snapshotName: 'snapshotName',\n    },\n    flinkRunConfiguration: {\n      allowNonRestoredState: false,\n    },\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2",
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2Props",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationV2 = new kinesisanalytics.CfnApplicationV2(this, 'MyCfnApplicationV2', {\n  runtimeEnvironment: 'runtimeEnvironment',\n  serviceExecutionRole: 'serviceExecutionRole',\n\n  // the properties below are optional\n  applicationConfiguration: {\n    applicationCodeConfiguration: {\n      codeContent: {\n        s3ContentLocation: {\n          bucketArn: 'bucketArn',\n          fileKey: 'fileKey',\n\n          // the properties below are optional\n          objectVersion: 'objectVersion',\n        },\n        textContent: 'textContent',\n        zipFileContent: 'zipFileContent',\n      },\n      codeContentType: 'codeContentType',\n    },\n    applicationSnapshotConfiguration: {\n      snapshotsEnabled: false,\n    },\n    environmentProperties: {\n      propertyGroups: [{\n        propertyGroupId: 'propertyGroupId',\n        propertyMap: {\n          propertyMapKey: 'propertyMap',\n        },\n      }],\n    },\n    flinkApplicationConfiguration: {\n      checkpointConfiguration: {\n        configurationType: 'configurationType',\n\n        // the properties below are optional\n        checkpointingEnabled: false,\n        checkpointInterval: 123,\n        minPauseBetweenCheckpoints: 123,\n      },\n      monitoringConfiguration: {\n        configurationType: 'configurationType',\n\n        // the properties below are optional\n        logLevel: 'logLevel',\n        metricsLevel: 'metricsLevel',\n      },\n      parallelismConfiguration: {\n        configurationType: 'configurationType',\n\n        // the properties below are optional\n        autoScalingEnabled: false,\n        parallelism: 123,\n        parallelismPerKpu: 123,\n      },\n    },\n    sqlApplicationConfiguration: {\n      inputs: [{\n        inputSchema: {\n          recordColumns: [{\n            name: 'name',\n            sqlType: 'sqlType',\n\n            // the properties below are optional\n            mapping: 'mapping',\n          }],\n          recordFormat: {\n            recordFormatType: 'recordFormatType',\n\n            // the properties below are optional\n            mappingParameters: {\n              csvMappingParameters: {\n                recordColumnDelimiter: 'recordColumnDelimiter',\n                recordRowDelimiter: 'recordRowDelimiter',\n              },\n              jsonMappingParameters: {\n                recordRowPath: 'recordRowPath',\n              },\n            },\n          },\n\n          // the properties below are optional\n          recordEncoding: 'recordEncoding',\n        },\n        namePrefix: 'namePrefix',\n\n        // the properties below are optional\n        inputParallelism: {\n          count: 123,\n        },\n        inputProcessingConfiguration: {\n          inputLambdaProcessor: {\n            resourceArn: 'resourceArn',\n          },\n        },\n        kinesisFirehoseInput: {\n          resourceArn: 'resourceArn',\n        },\n        kinesisStreamsInput: {\n          resourceArn: 'resourceArn',\n        },\n      }],\n    },\n    vpcConfigurations: [{\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    }],\n    zeppelinApplicationConfiguration: {\n      catalogConfiguration: {\n        glueDataCatalogConfiguration: {\n          databaseArn: 'databaseArn',\n        },\n      },\n      customArtifactsConfiguration: [{\n        artifactType: 'artifactType',\n\n        // the properties below are optional\n        mavenReference: {\n          artifactId: 'artifactId',\n          groupId: 'groupId',\n          version: 'version',\n        },\n        s3ContentLocation: {\n          bucketArn: 'bucketArn',\n          fileKey: 'fileKey',\n\n          // the properties below are optional\n          objectVersion: 'objectVersion',\n        },\n      }],\n      deployAsApplicationConfiguration: {\n        s3ContentLocation: {\n          bucketArn: 'bucketArn',\n\n          // the properties below are optional\n          basePath: 'basePath',\n        },\n      },\n      monitoringConfiguration: {\n        logLevel: 'logLevel',\n      },\n    },\n  },\n  applicationDescription: 'applicationDescription',\n  applicationMaintenanceConfiguration: {\n    applicationMaintenanceWindowStartTime: 'applicationMaintenanceWindowStartTime',\n  },\n  applicationMode: 'applicationMode',\n  applicationName: 'applicationName',\n  runConfiguration: {\n    applicationRestoreConfiguration: {\n      applicationRestoreType: 'applicationRestoreType',\n\n      // the properties below are optional\n      snapshotName: 'snapshotName',\n    },\n    flinkRunConfiguration: {\n      allowNonRestoredState: false,\n    },\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 50,
        "75": 101,
        "91": 4,
        "104": 1,
        "192": 8,
        "193": 41,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 97,
        "290": 1
      },
      "fqnsFingerprint": "41bdfaebd7d42027bfcba2fe016faa69413e536457298f6f415bf54b1cbae8da"
    },
    "40117c663b26f3ccab766de0d0eb7325ea0ad73f5d4f869e9cb63218e006a862": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\napplication_code_configuration_property = kinesisanalytics.CfnApplicationV2.ApplicationCodeConfigurationProperty(\n    code_content=kinesisanalytics.CfnApplicationV2.CodeContentProperty(\n        s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty(\n            bucket_arn=\"bucketArn\",\n            file_key=\"fileKey\",\n\n            # the properties below are optional\n            object_version=\"objectVersion\"\n        ),\n        text_content=\"textContent\",\n        zip_file_content=\"zipFileContent\"\n    ),\n    code_content_type=\"codeContentType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nApplicationCodeConfigurationProperty applicationCodeConfigurationProperty = new ApplicationCodeConfigurationProperty {\n    CodeContent = new CodeContentProperty {\n        S3ContentLocation = new S3ContentLocationProperty {\n            BucketArn = \"bucketArn\",\n            FileKey = \"fileKey\",\n\n            // the properties below are optional\n            ObjectVersion = \"objectVersion\"\n        },\n        TextContent = \"textContent\",\n        ZipFileContent = \"zipFileContent\"\n    },\n    CodeContentType = \"codeContentType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nApplicationCodeConfigurationProperty applicationCodeConfigurationProperty = ApplicationCodeConfigurationProperty.builder()\n        .codeContent(CodeContentProperty.builder()\n                .s3ContentLocation(S3ContentLocationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .fileKey(\"fileKey\")\n\n                        // the properties below are optional\n                        .objectVersion(\"objectVersion\")\n                        .build())\n                .textContent(\"textContent\")\n                .zipFileContent(\"zipFileContent\")\n                .build())\n        .codeContentType(\"codeContentType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\napplicationCodeConfigurationProperty := &applicationCodeConfigurationProperty{\n\tcodeContent: &codeContentProperty{\n\t\ts3ContentLocation: &s3ContentLocationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\tfileKey: jsii.String(\"fileKey\"),\n\n\t\t\t// the properties below are optional\n\t\t\tobjectVersion: jsii.String(\"objectVersion\"),\n\t\t},\n\t\ttextContent: jsii.String(\"textContent\"),\n\t\tzipFileContent: jsii.String(\"zipFileContent\"),\n\t},\n\tcodeContentType: jsii.String(\"codeContentType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst applicationCodeConfigurationProperty: kinesisanalytics.CfnApplicationV2.ApplicationCodeConfigurationProperty = {\n  codeContent: {\n    s3ContentLocation: {\n      bucketArn: 'bucketArn',\n      fileKey: 'fileKey',\n\n      // the properties below are optional\n      objectVersion: 'objectVersion',\n    },\n    textContent: 'textContent',\n    zipFileContent: 'zipFileContent',\n  },\n  codeContentType: 'codeContentType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ApplicationCodeConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ApplicationCodeConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationCodeConfigurationProperty: kinesisanalytics.CfnApplicationV2.ApplicationCodeConfigurationProperty = {\n  codeContent: {\n    s3ContentLocation: {\n      bucketArn: 'bucketArn',\n      fileKey: 'fileKey',\n\n      // the properties below are optional\n      objectVersion: 'objectVersion',\n    },\n    textContent: 'textContent',\n    zipFileContent: 'zipFileContent',\n  },\n  codeContentType: 'codeContentType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 13,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "ac2632913a52f786186f4eb7a3c4d0cccfaba8a7bb67ec5814e688e03b483517"
    },
    "29cd7ec212c0d2aa880a3ed82fd017f7795c2e25f326393bfd5941da7de4faca": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\napplication_configuration_property = kinesisanalytics.CfnApplicationV2.ApplicationConfigurationProperty(\n    application_code_configuration=kinesisanalytics.CfnApplicationV2.ApplicationCodeConfigurationProperty(\n        code_content=kinesisanalytics.CfnApplicationV2.CodeContentProperty(\n            s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty(\n                bucket_arn=\"bucketArn\",\n                file_key=\"fileKey\",\n\n                # the properties below are optional\n                object_version=\"objectVersion\"\n            ),\n            text_content=\"textContent\",\n            zip_file_content=\"zipFileContent\"\n        ),\n        code_content_type=\"codeContentType\"\n    ),\n    application_snapshot_configuration=kinesisanalytics.CfnApplicationV2.ApplicationSnapshotConfigurationProperty(\n        snapshots_enabled=False\n    ),\n    environment_properties=kinesisanalytics.CfnApplicationV2.EnvironmentPropertiesProperty(\n        property_groups=[kinesisanalytics.CfnApplicationV2.PropertyGroupProperty(\n            property_group_id=\"propertyGroupId\",\n            property_map={\n                \"property_map_key\": \"propertyMap\"\n            }\n        )]\n    ),\n    flink_application_configuration=kinesisanalytics.CfnApplicationV2.FlinkApplicationConfigurationProperty(\n        checkpoint_configuration=kinesisanalytics.CfnApplicationV2.CheckpointConfigurationProperty(\n            configuration_type=\"configurationType\",\n\n            # the properties below are optional\n            checkpointing_enabled=False,\n            checkpoint_interval=123,\n            min_pause_between_checkpoints=123\n        ),\n        monitoring_configuration=kinesisanalytics.CfnApplicationV2.MonitoringConfigurationProperty(\n            configuration_type=\"configurationType\",\n\n            # the properties below are optional\n            log_level=\"logLevel\",\n            metrics_level=\"metricsLevel\"\n        ),\n        parallelism_configuration=kinesisanalytics.CfnApplicationV2.ParallelismConfigurationProperty(\n            configuration_type=\"configurationType\",\n\n            # the properties below are optional\n            auto_scaling_enabled=False,\n            parallelism=123,\n            parallelism_per_kpu=123\n        )\n    ),\n    sql_application_configuration=kinesisanalytics.CfnApplicationV2.SqlApplicationConfigurationProperty(\n        inputs=[kinesisanalytics.CfnApplicationV2.InputProperty(\n            input_schema=kinesisanalytics.CfnApplicationV2.InputSchemaProperty(\n                record_columns=[kinesisanalytics.CfnApplicationV2.RecordColumnProperty(\n                    name=\"name\",\n                    sql_type=\"sqlType\",\n\n                    # the properties below are optional\n                    mapping=\"mapping\"\n                )],\n                record_format=kinesisanalytics.CfnApplicationV2.RecordFormatProperty(\n                    record_format_type=\"recordFormatType\",\n\n                    # the properties below are optional\n                    mapping_parameters=kinesisanalytics.CfnApplicationV2.MappingParametersProperty(\n                        csv_mapping_parameters=kinesisanalytics.CfnApplicationV2.CSVMappingParametersProperty(\n                            record_column_delimiter=\"recordColumnDelimiter\",\n                            record_row_delimiter=\"recordRowDelimiter\"\n                        ),\n                        json_mapping_parameters=kinesisanalytics.CfnApplicationV2.JSONMappingParametersProperty(\n                            record_row_path=\"recordRowPath\"\n                        )\n                    )\n                ),\n\n                # the properties below are optional\n                record_encoding=\"recordEncoding\"\n            ),\n            name_prefix=\"namePrefix\",\n\n            # the properties below are optional\n            input_parallelism=kinesisanalytics.CfnApplicationV2.InputParallelismProperty(\n                count=123\n            ),\n            input_processing_configuration=kinesisanalytics.CfnApplicationV2.InputProcessingConfigurationProperty(\n                input_lambda_processor=kinesisanalytics.CfnApplicationV2.InputLambdaProcessorProperty(\n                    resource_arn=\"resourceArn\"\n                )\n            ),\n            kinesis_firehose_input=kinesisanalytics.CfnApplicationV2.KinesisFirehoseInputProperty(\n                resource_arn=\"resourceArn\"\n            ),\n            kinesis_streams_input=kinesisanalytics.CfnApplicationV2.KinesisStreamsInputProperty(\n                resource_arn=\"resourceArn\"\n            )\n        )]\n    ),\n    vpc_configurations=[kinesisanalytics.CfnApplicationV2.VpcConfigurationProperty(\n        security_group_ids=[\"securityGroupIds\"],\n        subnet_ids=[\"subnetIds\"]\n    )],\n    zeppelin_application_configuration=kinesisanalytics.CfnApplicationV2.ZeppelinApplicationConfigurationProperty(\n        catalog_configuration=kinesisanalytics.CfnApplicationV2.CatalogConfigurationProperty(\n            glue_data_catalog_configuration=kinesisanalytics.CfnApplicationV2.GlueDataCatalogConfigurationProperty(\n                database_arn=\"databaseArn\"\n            )\n        ),\n        custom_artifacts_configuration=[kinesisanalytics.CfnApplicationV2.CustomArtifactConfigurationProperty(\n            artifact_type=\"artifactType\",\n\n            # the properties below are optional\n            maven_reference=kinesisanalytics.CfnApplicationV2.MavenReferenceProperty(\n                artifact_id=\"artifactId\",\n                group_id=\"groupId\",\n                version=\"version\"\n            ),\n            s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty(\n                bucket_arn=\"bucketArn\",\n                file_key=\"fileKey\",\n\n                # the properties below are optional\n                object_version=\"objectVersion\"\n            )\n        )],\n        deploy_as_application_configuration=kinesisanalytics.CfnApplicationV2.DeployAsApplicationConfigurationProperty(\n            s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentBaseLocationProperty(\n                bucket_arn=\"bucketArn\",\n\n                # the properties below are optional\n                base_path=\"basePath\"\n            )\n        ),\n        monitoring_configuration=kinesisanalytics.CfnApplicationV2.ZeppelinMonitoringConfigurationProperty(\n            log_level=\"logLevel\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nApplicationConfigurationProperty applicationConfigurationProperty = new ApplicationConfigurationProperty {\n    ApplicationCodeConfiguration = new ApplicationCodeConfigurationProperty {\n        CodeContent = new CodeContentProperty {\n            S3ContentLocation = new S3ContentLocationProperty {\n                BucketArn = \"bucketArn\",\n                FileKey = \"fileKey\",\n\n                // the properties below are optional\n                ObjectVersion = \"objectVersion\"\n            },\n            TextContent = \"textContent\",\n            ZipFileContent = \"zipFileContent\"\n        },\n        CodeContentType = \"codeContentType\"\n    },\n    ApplicationSnapshotConfiguration = new ApplicationSnapshotConfigurationProperty {\n        SnapshotsEnabled = false\n    },\n    EnvironmentProperties = new EnvironmentPropertiesProperty {\n        PropertyGroups = new [] { new PropertyGroupProperty {\n            PropertyGroupId = \"propertyGroupId\",\n            PropertyMap = new Dictionary<string, string> {\n                { \"propertyMapKey\", \"propertyMap\" }\n            }\n        } }\n    },\n    FlinkApplicationConfiguration = new FlinkApplicationConfigurationProperty {\n        CheckpointConfiguration = new CheckpointConfigurationProperty {\n            ConfigurationType = \"configurationType\",\n\n            // the properties below are optional\n            CheckpointingEnabled = false,\n            CheckpointInterval = 123,\n            MinPauseBetweenCheckpoints = 123\n        },\n        MonitoringConfiguration = new MonitoringConfigurationProperty {\n            ConfigurationType = \"configurationType\",\n\n            // the properties below are optional\n            LogLevel = \"logLevel\",\n            MetricsLevel = \"metricsLevel\"\n        },\n        ParallelismConfiguration = new ParallelismConfigurationProperty {\n            ConfigurationType = \"configurationType\",\n\n            // the properties below are optional\n            AutoScalingEnabled = false,\n            Parallelism = 123,\n            ParallelismPerKpu = 123\n        }\n    },\n    SqlApplicationConfiguration = new SqlApplicationConfigurationProperty {\n        Inputs = new [] { new InputProperty {\n            InputSchema = new InputSchemaProperty {\n                RecordColumns = new [] { new RecordColumnProperty {\n                    Name = \"name\",\n                    SqlType = \"sqlType\",\n\n                    // the properties below are optional\n                    Mapping = \"mapping\"\n                } },\n                RecordFormat = new RecordFormatProperty {\n                    RecordFormatType = \"recordFormatType\",\n\n                    // the properties below are optional\n                    MappingParameters = new MappingParametersProperty {\n                        CsvMappingParameters = new CSVMappingParametersProperty {\n                            RecordColumnDelimiter = \"recordColumnDelimiter\",\n                            RecordRowDelimiter = \"recordRowDelimiter\"\n                        },\n                        JsonMappingParameters = new JSONMappingParametersProperty {\n                            RecordRowPath = \"recordRowPath\"\n                        }\n                    }\n                },\n\n                // the properties below are optional\n                RecordEncoding = \"recordEncoding\"\n            },\n            NamePrefix = \"namePrefix\",\n\n            // the properties below are optional\n            InputParallelism = new InputParallelismProperty {\n                Count = 123\n            },\n            InputProcessingConfiguration = new InputProcessingConfigurationProperty {\n                InputLambdaProcessor = new InputLambdaProcessorProperty {\n                    ResourceArn = \"resourceArn\"\n                }\n            },\n            KinesisFirehoseInput = new KinesisFirehoseInputProperty {\n                ResourceArn = \"resourceArn\"\n            },\n            KinesisStreamsInput = new KinesisStreamsInputProperty {\n                ResourceArn = \"resourceArn\"\n            }\n        } }\n    },\n    VpcConfigurations = new [] { new VpcConfigurationProperty {\n        SecurityGroupIds = new [] { \"securityGroupIds\" },\n        SubnetIds = new [] { \"subnetIds\" }\n    } },\n    ZeppelinApplicationConfiguration = new ZeppelinApplicationConfigurationProperty {\n        CatalogConfiguration = new CatalogConfigurationProperty {\n            GlueDataCatalogConfiguration = new GlueDataCatalogConfigurationProperty {\n                DatabaseArn = \"databaseArn\"\n            }\n        },\n        CustomArtifactsConfiguration = new [] { new CustomArtifactConfigurationProperty {\n            ArtifactType = \"artifactType\",\n\n            // the properties below are optional\n            MavenReference = new MavenReferenceProperty {\n                ArtifactId = \"artifactId\",\n                GroupId = \"groupId\",\n                Version = \"version\"\n            },\n            S3ContentLocation = new S3ContentLocationProperty {\n                BucketArn = \"bucketArn\",\n                FileKey = \"fileKey\",\n\n                // the properties below are optional\n                ObjectVersion = \"objectVersion\"\n            }\n        } },\n        DeployAsApplicationConfiguration = new DeployAsApplicationConfigurationProperty {\n            S3ContentLocation = new S3ContentBaseLocationProperty {\n                BucketArn = \"bucketArn\",\n\n                // the properties below are optional\n                BasePath = \"basePath\"\n            }\n        },\n        MonitoringConfiguration = new ZeppelinMonitoringConfigurationProperty {\n            LogLevel = \"logLevel\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nApplicationConfigurationProperty applicationConfigurationProperty = ApplicationConfigurationProperty.builder()\n        .applicationCodeConfiguration(ApplicationCodeConfigurationProperty.builder()\n                .codeContent(CodeContentProperty.builder()\n                        .s3ContentLocation(S3ContentLocationProperty.builder()\n                                .bucketArn(\"bucketArn\")\n                                .fileKey(\"fileKey\")\n\n                                // the properties below are optional\n                                .objectVersion(\"objectVersion\")\n                                .build())\n                        .textContent(\"textContent\")\n                        .zipFileContent(\"zipFileContent\")\n                        .build())\n                .codeContentType(\"codeContentType\")\n                .build())\n        .applicationSnapshotConfiguration(ApplicationSnapshotConfigurationProperty.builder()\n                .snapshotsEnabled(false)\n                .build())\n        .environmentProperties(EnvironmentPropertiesProperty.builder()\n                .propertyGroups(List.of(PropertyGroupProperty.builder()\n                        .propertyGroupId(\"propertyGroupId\")\n                        .propertyMap(Map.of(\n                                \"propertyMapKey\", \"propertyMap\"))\n                        .build()))\n                .build())\n        .flinkApplicationConfiguration(FlinkApplicationConfigurationProperty.builder()\n                .checkpointConfiguration(CheckpointConfigurationProperty.builder()\n                        .configurationType(\"configurationType\")\n\n                        // the properties below are optional\n                        .checkpointingEnabled(false)\n                        .checkpointInterval(123)\n                        .minPauseBetweenCheckpoints(123)\n                        .build())\n                .monitoringConfiguration(MonitoringConfigurationProperty.builder()\n                        .configurationType(\"configurationType\")\n\n                        // the properties below are optional\n                        .logLevel(\"logLevel\")\n                        .metricsLevel(\"metricsLevel\")\n                        .build())\n                .parallelismConfiguration(ParallelismConfigurationProperty.builder()\n                        .configurationType(\"configurationType\")\n\n                        // the properties below are optional\n                        .autoScalingEnabled(false)\n                        .parallelism(123)\n                        .parallelismPerKpu(123)\n                        .build())\n                .build())\n        .sqlApplicationConfiguration(SqlApplicationConfigurationProperty.builder()\n                .inputs(List.of(InputProperty.builder()\n                        .inputSchema(InputSchemaProperty.builder()\n                                .recordColumns(List.of(RecordColumnProperty.builder()\n                                        .name(\"name\")\n                                        .sqlType(\"sqlType\")\n\n                                        // the properties below are optional\n                                        .mapping(\"mapping\")\n                                        .build()))\n                                .recordFormat(RecordFormatProperty.builder()\n                                        .recordFormatType(\"recordFormatType\")\n\n                                        // the properties below are optional\n                                        .mappingParameters(MappingParametersProperty.builder()\n                                                .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                                        .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                                        .recordRowDelimiter(\"recordRowDelimiter\")\n                                                        .build())\n                                                .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                                        .recordRowPath(\"recordRowPath\")\n                                                        .build())\n                                                .build())\n                                        .build())\n\n                                // the properties below are optional\n                                .recordEncoding(\"recordEncoding\")\n                                .build())\n                        .namePrefix(\"namePrefix\")\n\n                        // the properties below are optional\n                        .inputParallelism(InputParallelismProperty.builder()\n                                .count(123)\n                                .build())\n                        .inputProcessingConfiguration(InputProcessingConfigurationProperty.builder()\n                                .inputLambdaProcessor(InputLambdaProcessorProperty.builder()\n                                        .resourceArn(\"resourceArn\")\n                                        .build())\n                                .build())\n                        .kinesisFirehoseInput(KinesisFirehoseInputProperty.builder()\n                                .resourceArn(\"resourceArn\")\n                                .build())\n                        .kinesisStreamsInput(KinesisStreamsInputProperty.builder()\n                                .resourceArn(\"resourceArn\")\n                                .build())\n                        .build()))\n                .build())\n        .vpcConfigurations(List.of(VpcConfigurationProperty.builder()\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .subnetIds(List.of(\"subnetIds\"))\n                .build()))\n        .zeppelinApplicationConfiguration(ZeppelinApplicationConfigurationProperty.builder()\n                .catalogConfiguration(CatalogConfigurationProperty.builder()\n                        .glueDataCatalogConfiguration(GlueDataCatalogConfigurationProperty.builder()\n                                .databaseArn(\"databaseArn\")\n                                .build())\n                        .build())\n                .customArtifactsConfiguration(List.of(CustomArtifactConfigurationProperty.builder()\n                        .artifactType(\"artifactType\")\n\n                        // the properties below are optional\n                        .mavenReference(MavenReferenceProperty.builder()\n                                .artifactId(\"artifactId\")\n                                .groupId(\"groupId\")\n                                .version(\"version\")\n                                .build())\n                        .s3ContentLocation(S3ContentLocationProperty.builder()\n                                .bucketArn(\"bucketArn\")\n                                .fileKey(\"fileKey\")\n\n                                // the properties below are optional\n                                .objectVersion(\"objectVersion\")\n                                .build())\n                        .build()))\n                .deployAsApplicationConfiguration(DeployAsApplicationConfigurationProperty.builder()\n                        .s3ContentLocation(S3ContentBaseLocationProperty.builder()\n                                .bucketArn(\"bucketArn\")\n\n                                // the properties below are optional\n                                .basePath(\"basePath\")\n                                .build())\n                        .build())\n                .monitoringConfiguration(ZeppelinMonitoringConfigurationProperty.builder()\n                        .logLevel(\"logLevel\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\napplicationConfigurationProperty := &applicationConfigurationProperty{\n\tapplicationCodeConfiguration: &applicationCodeConfigurationProperty{\n\t\tcodeContent: &codeContentProperty{\n\t\t\ts3ContentLocation: &s3ContentLocationProperty{\n\t\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\t\tfileKey: jsii.String(\"fileKey\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tobjectVersion: jsii.String(\"objectVersion\"),\n\t\t\t},\n\t\t\ttextContent: jsii.String(\"textContent\"),\n\t\t\tzipFileContent: jsii.String(\"zipFileContent\"),\n\t\t},\n\t\tcodeContentType: jsii.String(\"codeContentType\"),\n\t},\n\tapplicationSnapshotConfiguration: &applicationSnapshotConfigurationProperty{\n\t\tsnapshotsEnabled: jsii.Boolean(false),\n\t},\n\tenvironmentProperties: &environmentPropertiesProperty{\n\t\tpropertyGroups: []interface{}{\n\t\t\t&propertyGroupProperty{\n\t\t\t\tpropertyGroupId: jsii.String(\"propertyGroupId\"),\n\t\t\t\tpropertyMap: map[string]*string{\n\t\t\t\t\t\"propertyMapKey\": jsii.String(\"propertyMap\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tflinkApplicationConfiguration: &flinkApplicationConfigurationProperty{\n\t\tcheckpointConfiguration: &checkpointConfigurationProperty{\n\t\t\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcheckpointingEnabled: jsii.Boolean(false),\n\t\t\tcheckpointInterval: jsii.Number(123),\n\t\t\tminPauseBetweenCheckpoints: jsii.Number(123),\n\t\t},\n\t\tmonitoringConfiguration: &monitoringConfigurationProperty{\n\t\t\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tlogLevel: jsii.String(\"logLevel\"),\n\t\t\tmetricsLevel: jsii.String(\"metricsLevel\"),\n\t\t},\n\t\tparallelismConfiguration: &parallelismConfigurationProperty{\n\t\t\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tautoScalingEnabled: jsii.Boolean(false),\n\t\t\tparallelism: jsii.Number(123),\n\t\t\tparallelismPerKpu: jsii.Number(123),\n\t\t},\n\t},\n\tsqlApplicationConfiguration: &sqlApplicationConfigurationProperty{\n\t\tinputs: []interface{}{\n\t\t\t&inputProperty{\n\t\t\t\tinputSchema: &inputSchemaProperty{\n\t\t\t\t\trecordColumns: []interface{}{\n\t\t\t\t\t\t&recordColumnProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\trecordFormat: &recordFormatProperty{\n\t\t\t\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t\t\t\t},\n\t\t\t\tnamePrefix: jsii.String(\"namePrefix\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tinputParallelism: &inputParallelismProperty{\n\t\t\t\t\tcount: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tinputProcessingConfiguration: &inputProcessingConfigurationProperty{\n\t\t\t\t\tinputLambdaProcessor: &inputLambdaProcessorProperty{\n\t\t\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tkinesisFirehoseInput: &kinesisFirehoseInputProperty{\n\t\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\t},\n\t\t\t\tkinesisStreamsInput: &kinesisStreamsInputProperty{\n\t\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tvpcConfigurations: []interface{}{\n\t\t&vpcConfigurationProperty{\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnetIds: []*string{\n\t\t\t\tjsii.String(\"subnetIds\"),\n\t\t\t},\n\t\t},\n\t},\n\tzeppelinApplicationConfiguration: &zeppelinApplicationConfigurationProperty{\n\t\tcatalogConfiguration: &catalogConfigurationProperty{\n\t\t\tglueDataCatalogConfiguration: &glueDataCatalogConfigurationProperty{\n\t\t\t\tdatabaseArn: jsii.String(\"databaseArn\"),\n\t\t\t},\n\t\t},\n\t\tcustomArtifactsConfiguration: []interface{}{\n\t\t\t&customArtifactConfigurationProperty{\n\t\t\t\tartifactType: jsii.String(\"artifactType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmavenReference: &mavenReferenceProperty{\n\t\t\t\t\tartifactId: jsii.String(\"artifactId\"),\n\t\t\t\t\tgroupId: jsii.String(\"groupId\"),\n\t\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t\t},\n\t\t\t\ts3ContentLocation: &s3ContentLocationProperty{\n\t\t\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\t\t\tfileKey: jsii.String(\"fileKey\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tobjectVersion: jsii.String(\"objectVersion\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tdeployAsApplicationConfiguration: &deployAsApplicationConfigurationProperty{\n\t\t\ts3ContentLocation: &s3ContentBaseLocationProperty{\n\t\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbasePath: jsii.String(\"basePath\"),\n\t\t\t},\n\t\t},\n\t\tmonitoringConfiguration: &zeppelinMonitoringConfigurationProperty{\n\t\t\tlogLevel: jsii.String(\"logLevel\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst applicationConfigurationProperty: kinesisanalytics.CfnApplicationV2.ApplicationConfigurationProperty = {\n  applicationCodeConfiguration: {\n    codeContent: {\n      s3ContentLocation: {\n        bucketArn: 'bucketArn',\n        fileKey: 'fileKey',\n\n        // the properties below are optional\n        objectVersion: 'objectVersion',\n      },\n      textContent: 'textContent',\n      zipFileContent: 'zipFileContent',\n    },\n    codeContentType: 'codeContentType',\n  },\n  applicationSnapshotConfiguration: {\n    snapshotsEnabled: false,\n  },\n  environmentProperties: {\n    propertyGroups: [{\n      propertyGroupId: 'propertyGroupId',\n      propertyMap: {\n        propertyMapKey: 'propertyMap',\n      },\n    }],\n  },\n  flinkApplicationConfiguration: {\n    checkpointConfiguration: {\n      configurationType: 'configurationType',\n\n      // the properties below are optional\n      checkpointingEnabled: false,\n      checkpointInterval: 123,\n      minPauseBetweenCheckpoints: 123,\n    },\n    monitoringConfiguration: {\n      configurationType: 'configurationType',\n\n      // the properties below are optional\n      logLevel: 'logLevel',\n      metricsLevel: 'metricsLevel',\n    },\n    parallelismConfiguration: {\n      configurationType: 'configurationType',\n\n      // the properties below are optional\n      autoScalingEnabled: false,\n      parallelism: 123,\n      parallelismPerKpu: 123,\n    },\n  },\n  sqlApplicationConfiguration: {\n    inputs: [{\n      inputSchema: {\n        recordColumns: [{\n          name: 'name',\n          sqlType: 'sqlType',\n\n          // the properties below are optional\n          mapping: 'mapping',\n        }],\n        recordFormat: {\n          recordFormatType: 'recordFormatType',\n\n          // the properties below are optional\n          mappingParameters: {\n            csvMappingParameters: {\n              recordColumnDelimiter: 'recordColumnDelimiter',\n              recordRowDelimiter: 'recordRowDelimiter',\n            },\n            jsonMappingParameters: {\n              recordRowPath: 'recordRowPath',\n            },\n          },\n        },\n\n        // the properties below are optional\n        recordEncoding: 'recordEncoding',\n      },\n      namePrefix: 'namePrefix',\n\n      // the properties below are optional\n      inputParallelism: {\n        count: 123,\n      },\n      inputProcessingConfiguration: {\n        inputLambdaProcessor: {\n          resourceArn: 'resourceArn',\n        },\n      },\n      kinesisFirehoseInput: {\n        resourceArn: 'resourceArn',\n      },\n      kinesisStreamsInput: {\n        resourceArn: 'resourceArn',\n      },\n    }],\n  },\n  vpcConfigurations: [{\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  }],\n  zeppelinApplicationConfiguration: {\n    catalogConfiguration: {\n      glueDataCatalogConfiguration: {\n        databaseArn: 'databaseArn',\n      },\n    },\n    customArtifactsConfiguration: [{\n      artifactType: 'artifactType',\n\n      // the properties below are optional\n      mavenReference: {\n        artifactId: 'artifactId',\n        groupId: 'groupId',\n        version: 'version',\n      },\n      s3ContentLocation: {\n        bucketArn: 'bucketArn',\n        fileKey: 'fileKey',\n\n        // the properties below are optional\n        objectVersion: 'objectVersion',\n      },\n    }],\n    deployAsApplicationConfiguration: {\n      s3ContentLocation: {\n        bucketArn: 'bucketArn',\n\n        // the properties below are optional\n        basePath: 'basePath',\n      },\n    },\n    monitoringConfiguration: {\n      logLevel: 'logLevel',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ApplicationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ApplicationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationConfigurationProperty: kinesisanalytics.CfnApplicationV2.ApplicationConfigurationProperty = {\n  applicationCodeConfiguration: {\n    codeContent: {\n      s3ContentLocation: {\n        bucketArn: 'bucketArn',\n        fileKey: 'fileKey',\n\n        // the properties below are optional\n        objectVersion: 'objectVersion',\n      },\n      textContent: 'textContent',\n      zipFileContent: 'zipFileContent',\n    },\n    codeContentType: 'codeContentType',\n  },\n  applicationSnapshotConfiguration: {\n    snapshotsEnabled: false,\n  },\n  environmentProperties: {\n    propertyGroups: [{\n      propertyGroupId: 'propertyGroupId',\n      propertyMap: {\n        propertyMapKey: 'propertyMap',\n      },\n    }],\n  },\n  flinkApplicationConfiguration: {\n    checkpointConfiguration: {\n      configurationType: 'configurationType',\n\n      // the properties below are optional\n      checkpointingEnabled: false,\n      checkpointInterval: 123,\n      minPauseBetweenCheckpoints: 123,\n    },\n    monitoringConfiguration: {\n      configurationType: 'configurationType',\n\n      // the properties below are optional\n      logLevel: 'logLevel',\n      metricsLevel: 'metricsLevel',\n    },\n    parallelismConfiguration: {\n      configurationType: 'configurationType',\n\n      // the properties below are optional\n      autoScalingEnabled: false,\n      parallelism: 123,\n      parallelismPerKpu: 123,\n    },\n  },\n  sqlApplicationConfiguration: {\n    inputs: [{\n      inputSchema: {\n        recordColumns: [{\n          name: 'name',\n          sqlType: 'sqlType',\n\n          // the properties below are optional\n          mapping: 'mapping',\n        }],\n        recordFormat: {\n          recordFormatType: 'recordFormatType',\n\n          // the properties below are optional\n          mappingParameters: {\n            csvMappingParameters: {\n              recordColumnDelimiter: 'recordColumnDelimiter',\n              recordRowDelimiter: 'recordRowDelimiter',\n            },\n            jsonMappingParameters: {\n              recordRowPath: 'recordRowPath',\n            },\n          },\n        },\n\n        // the properties below are optional\n        recordEncoding: 'recordEncoding',\n      },\n      namePrefix: 'namePrefix',\n\n      // the properties below are optional\n      inputParallelism: {\n        count: 123,\n      },\n      inputProcessingConfiguration: {\n        inputLambdaProcessor: {\n          resourceArn: 'resourceArn',\n        },\n      },\n      kinesisFirehoseInput: {\n        resourceArn: 'resourceArn',\n      },\n      kinesisStreamsInput: {\n        resourceArn: 'resourceArn',\n      },\n    }],\n  },\n  vpcConfigurations: [{\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  }],\n  zeppelinApplicationConfiguration: {\n    catalogConfiguration: {\n      glueDataCatalogConfiguration: {\n        databaseArn: 'databaseArn',\n      },\n    },\n    customArtifactsConfiguration: [{\n      artifactType: 'artifactType',\n\n      // the properties below are optional\n      mavenReference: {\n        artifactId: 'artifactId',\n        groupId: 'groupId',\n        version: 'version',\n      },\n      s3ContentLocation: {\n        bucketArn: 'bucketArn',\n        fileKey: 'fileKey',\n\n        // the properties below are optional\n        objectVersion: 'objectVersion',\n      },\n    }],\n    deployAsApplicationConfiguration: {\n      s3ContentLocation: {\n        bucketArn: 'bucketArn',\n\n        // the properties below are optional\n        basePath: 'basePath',\n      },\n    },\n    monitoringConfiguration: {\n      logLevel: 'logLevel',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 39,
        "75": 85,
        "91": 3,
        "153": 2,
        "169": 1,
        "192": 7,
        "193": 35,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 80,
        "290": 1
      },
      "fqnsFingerprint": "2be55248f74584b967d99b6caf146b8c0e41028eea496dd47b1dc7978e7400eb"
    },
    "b6ca510a90541d342c20ba8ce939fc58c6bd5f5d6f6321854f28304e1188433d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\napplication_maintenance_configuration_property = kinesisanalytics.CfnApplicationV2.ApplicationMaintenanceConfigurationProperty(\n    application_maintenance_window_start_time=\"applicationMaintenanceWindowStartTime\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nApplicationMaintenanceConfigurationProperty applicationMaintenanceConfigurationProperty = new ApplicationMaintenanceConfigurationProperty {\n    ApplicationMaintenanceWindowStartTime = \"applicationMaintenanceWindowStartTime\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nApplicationMaintenanceConfigurationProperty applicationMaintenanceConfigurationProperty = ApplicationMaintenanceConfigurationProperty.builder()\n        .applicationMaintenanceWindowStartTime(\"applicationMaintenanceWindowStartTime\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\napplicationMaintenanceConfigurationProperty := &applicationMaintenanceConfigurationProperty{\n\tapplicationMaintenanceWindowStartTime: jsii.String(\"applicationMaintenanceWindowStartTime\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst applicationMaintenanceConfigurationProperty: kinesisanalytics.CfnApplicationV2.ApplicationMaintenanceConfigurationProperty = {\n  applicationMaintenanceWindowStartTime: 'applicationMaintenanceWindowStartTime',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ApplicationMaintenanceConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ApplicationMaintenanceConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationMaintenanceConfigurationProperty: kinesisanalytics.CfnApplicationV2.ApplicationMaintenanceConfigurationProperty = {\n  applicationMaintenanceWindowStartTime: 'applicationMaintenanceWindowStartTime',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "63e152aa5004a0d4c1781bdaff6a565b051489934a61e60617f6c866a39d9919"
    },
    "e45f52389668766dc3848183164834975626b6996a1f698885ff70e0f888a4e2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\napplication_restore_configuration_property = kinesisanalytics.CfnApplicationV2.ApplicationRestoreConfigurationProperty(\n    application_restore_type=\"applicationRestoreType\",\n\n    # the properties below are optional\n    snapshot_name=\"snapshotName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nApplicationRestoreConfigurationProperty applicationRestoreConfigurationProperty = new ApplicationRestoreConfigurationProperty {\n    ApplicationRestoreType = \"applicationRestoreType\",\n\n    // the properties below are optional\n    SnapshotName = \"snapshotName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nApplicationRestoreConfigurationProperty applicationRestoreConfigurationProperty = ApplicationRestoreConfigurationProperty.builder()\n        .applicationRestoreType(\"applicationRestoreType\")\n\n        // the properties below are optional\n        .snapshotName(\"snapshotName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\napplicationRestoreConfigurationProperty := &applicationRestoreConfigurationProperty{\n\tapplicationRestoreType: jsii.String(\"applicationRestoreType\"),\n\n\t// the properties below are optional\n\tsnapshotName: jsii.String(\"snapshotName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst applicationRestoreConfigurationProperty: kinesisanalytics.CfnApplicationV2.ApplicationRestoreConfigurationProperty = {\n  applicationRestoreType: 'applicationRestoreType',\n\n  // the properties below are optional\n  snapshotName: 'snapshotName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ApplicationRestoreConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ApplicationRestoreConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationRestoreConfigurationProperty: kinesisanalytics.CfnApplicationV2.ApplicationRestoreConfigurationProperty = {\n  applicationRestoreType: 'applicationRestoreType',\n\n  // the properties below are optional\n  snapshotName: 'snapshotName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "b54bda47db154413c5a55634014c6c1c037ece8900328e1f07e76c3d6d6e93cb"
    },
    "440be8c3015b08a42a6cb7808dad499f3310eed6f78580f6767c17baa2fba30c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\napplication_snapshot_configuration_property = kinesisanalytics.CfnApplicationV2.ApplicationSnapshotConfigurationProperty(\n    snapshots_enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nApplicationSnapshotConfigurationProperty applicationSnapshotConfigurationProperty = new ApplicationSnapshotConfigurationProperty {\n    SnapshotsEnabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nApplicationSnapshotConfigurationProperty applicationSnapshotConfigurationProperty = ApplicationSnapshotConfigurationProperty.builder()\n        .snapshotsEnabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\napplicationSnapshotConfigurationProperty := &applicationSnapshotConfigurationProperty{\n\tsnapshotsEnabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst applicationSnapshotConfigurationProperty: kinesisanalytics.CfnApplicationV2.ApplicationSnapshotConfigurationProperty = {\n  snapshotsEnabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ApplicationSnapshotConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ApplicationSnapshotConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationSnapshotConfigurationProperty: kinesisanalytics.CfnApplicationV2.ApplicationSnapshotConfigurationProperty = {\n  snapshotsEnabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "bec8ece1e4ea24816bfe1a5d2cfaed0380cd3b12a64a1334a591bdb21f5b8e63"
    },
    "279489ce66fdc6fb2780b5ba0a4fd2afb762ef7e54d7500cfb331b963757b2f3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nc_sVMapping_parameters_property = kinesisanalytics.CfnApplicationV2.CSVMappingParametersProperty(\n    record_column_delimiter=\"recordColumnDelimiter\",\n    record_row_delimiter=\"recordRowDelimiter\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCSVMappingParametersProperty cSVMappingParametersProperty = new CSVMappingParametersProperty {\n    RecordColumnDelimiter = \"recordColumnDelimiter\",\n    RecordRowDelimiter = \"recordRowDelimiter\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCSVMappingParametersProperty cSVMappingParametersProperty = CSVMappingParametersProperty.builder()\n        .recordColumnDelimiter(\"recordColumnDelimiter\")\n        .recordRowDelimiter(\"recordRowDelimiter\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncSVMappingParametersProperty := &cSVMappingParametersProperty{\n\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cSVMappingParametersProperty: kinesisanalytics.CfnApplicationV2.CSVMappingParametersProperty = {\n  recordColumnDelimiter: 'recordColumnDelimiter',\n  recordRowDelimiter: 'recordRowDelimiter',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.CSVMappingParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.CSVMappingParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cSVMappingParametersProperty: kinesisanalytics.CfnApplicationV2.CSVMappingParametersProperty = {\n  recordColumnDelimiter: 'recordColumnDelimiter',\n  recordRowDelimiter: 'recordRowDelimiter',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "797e22d552dfbf9bef338dcc1bad612315f022494efc5e040627628f9c01b0fa"
    },
    "b4a750fcb4566ee9b7238a30e04861c55cc7e8ee323cf0a8415a9f0e2e0dce3e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncatalog_configuration_property = kinesisanalytics.CfnApplicationV2.CatalogConfigurationProperty(\n    glue_data_catalog_configuration=kinesisanalytics.CfnApplicationV2.GlueDataCatalogConfigurationProperty(\n        database_arn=\"databaseArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCatalogConfigurationProperty catalogConfigurationProperty = new CatalogConfigurationProperty {\n    GlueDataCatalogConfiguration = new GlueDataCatalogConfigurationProperty {\n        DatabaseArn = \"databaseArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCatalogConfigurationProperty catalogConfigurationProperty = CatalogConfigurationProperty.builder()\n        .glueDataCatalogConfiguration(GlueDataCatalogConfigurationProperty.builder()\n                .databaseArn(\"databaseArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncatalogConfigurationProperty := &catalogConfigurationProperty{\n\tglueDataCatalogConfiguration: &glueDataCatalogConfigurationProperty{\n\t\tdatabaseArn: jsii.String(\"databaseArn\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst catalogConfigurationProperty: kinesisanalytics.CfnApplicationV2.CatalogConfigurationProperty = {\n  glueDataCatalogConfiguration: {\n    databaseArn: 'databaseArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.CatalogConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.CatalogConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst catalogConfigurationProperty: kinesisanalytics.CfnApplicationV2.CatalogConfigurationProperty = {\n  glueDataCatalogConfiguration: {\n    databaseArn: 'databaseArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "5b772b296dd8c263eeeac1f064879d4adb5762af3e1d86152014753a0ac5c096"
    },
    "e47826f232c7f0bde1c5205f68094f806c4ccd69b243a79692a7d353e39ffa02": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncheckpoint_configuration_property = kinesisanalytics.CfnApplicationV2.CheckpointConfigurationProperty(\n    configuration_type=\"configurationType\",\n\n    # the properties below are optional\n    checkpointing_enabled=False,\n    checkpoint_interval=123,\n    min_pause_between_checkpoints=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCheckpointConfigurationProperty checkpointConfigurationProperty = new CheckpointConfigurationProperty {\n    ConfigurationType = \"configurationType\",\n\n    // the properties below are optional\n    CheckpointingEnabled = false,\n    CheckpointInterval = 123,\n    MinPauseBetweenCheckpoints = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCheckpointConfigurationProperty checkpointConfigurationProperty = CheckpointConfigurationProperty.builder()\n        .configurationType(\"configurationType\")\n\n        // the properties below are optional\n        .checkpointingEnabled(false)\n        .checkpointInterval(123)\n        .minPauseBetweenCheckpoints(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncheckpointConfigurationProperty := &checkpointConfigurationProperty{\n\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t// the properties below are optional\n\tcheckpointingEnabled: jsii.Boolean(false),\n\tcheckpointInterval: jsii.Number(123),\n\tminPauseBetweenCheckpoints: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst checkpointConfigurationProperty: kinesisanalytics.CfnApplicationV2.CheckpointConfigurationProperty = {\n  configurationType: 'configurationType',\n\n  // the properties below are optional\n  checkpointingEnabled: false,\n  checkpointInterval: 123,\n  minPauseBetweenCheckpoints: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.CheckpointConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.CheckpointConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst checkpointConfigurationProperty: kinesisanalytics.CfnApplicationV2.CheckpointConfigurationProperty = {\n  configurationType: 'configurationType',\n\n  // the properties below are optional\n  checkpointingEnabled: false,\n  checkpointInterval: 123,\n  minPauseBetweenCheckpoints: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 9,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "286d2c4b1bf89669ec03f828d54cf0bff830c36131e5562bcdea752d1ea0c1c1"
    },
    "b0ae05d1ae724adfd746b1d78c281b9e80953aaaee5cbe894034200a8bd25a06": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncode_content_property = kinesisanalytics.CfnApplicationV2.CodeContentProperty(\n    s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty(\n        bucket_arn=\"bucketArn\",\n        file_key=\"fileKey\",\n\n        # the properties below are optional\n        object_version=\"objectVersion\"\n    ),\n    text_content=\"textContent\",\n    zip_file_content=\"zipFileContent\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCodeContentProperty codeContentProperty = new CodeContentProperty {\n    S3ContentLocation = new S3ContentLocationProperty {\n        BucketArn = \"bucketArn\",\n        FileKey = \"fileKey\",\n\n        // the properties below are optional\n        ObjectVersion = \"objectVersion\"\n    },\n    TextContent = \"textContent\",\n    ZipFileContent = \"zipFileContent\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCodeContentProperty codeContentProperty = CodeContentProperty.builder()\n        .s3ContentLocation(S3ContentLocationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .fileKey(\"fileKey\")\n\n                // the properties below are optional\n                .objectVersion(\"objectVersion\")\n                .build())\n        .textContent(\"textContent\")\n        .zipFileContent(\"zipFileContent\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncodeContentProperty := &codeContentProperty{\n\ts3ContentLocation: &s3ContentLocationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\tfileKey: jsii.String(\"fileKey\"),\n\n\t\t// the properties below are optional\n\t\tobjectVersion: jsii.String(\"objectVersion\"),\n\t},\n\ttextContent: jsii.String(\"textContent\"),\n\tzipFileContent: jsii.String(\"zipFileContent\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst codeContentProperty: kinesisanalytics.CfnApplicationV2.CodeContentProperty = {\n  s3ContentLocation: {\n    bucketArn: 'bucketArn',\n    fileKey: 'fileKey',\n\n    // the properties below are optional\n    objectVersion: 'objectVersion',\n  },\n  textContent: 'textContent',\n  zipFileContent: 'zipFileContent',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.CodeContentProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.CodeContentProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst codeContentProperty: kinesisanalytics.CfnApplicationV2.CodeContentProperty = {\n  s3ContentLocation: {\n    bucketArn: 'bucketArn',\n    fileKey: 'fileKey',\n\n    // the properties below are optional\n    objectVersion: 'objectVersion',\n  },\n  textContent: 'textContent',\n  zipFileContent: 'zipFileContent',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 11,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "e96f04b3e747c59b543705253f3815eaa2e64a1c978cde6e39e273bda255053d"
    },
    "809f999a2fe31521b232ff76ff5ffbe18819b622f27030d914df9792cd1c6a06": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncustom_artifact_configuration_property = kinesisanalytics.CfnApplicationV2.CustomArtifactConfigurationProperty(\n    artifact_type=\"artifactType\",\n\n    # the properties below are optional\n    maven_reference=kinesisanalytics.CfnApplicationV2.MavenReferenceProperty(\n        artifact_id=\"artifactId\",\n        group_id=\"groupId\",\n        version=\"version\"\n    ),\n    s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty(\n        bucket_arn=\"bucketArn\",\n        file_key=\"fileKey\",\n\n        # the properties below are optional\n        object_version=\"objectVersion\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCustomArtifactConfigurationProperty customArtifactConfigurationProperty = new CustomArtifactConfigurationProperty {\n    ArtifactType = \"artifactType\",\n\n    // the properties below are optional\n    MavenReference = new MavenReferenceProperty {\n        ArtifactId = \"artifactId\",\n        GroupId = \"groupId\",\n        Version = \"version\"\n    },\n    S3ContentLocation = new S3ContentLocationProperty {\n        BucketArn = \"bucketArn\",\n        FileKey = \"fileKey\",\n\n        // the properties below are optional\n        ObjectVersion = \"objectVersion\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCustomArtifactConfigurationProperty customArtifactConfigurationProperty = CustomArtifactConfigurationProperty.builder()\n        .artifactType(\"artifactType\")\n\n        // the properties below are optional\n        .mavenReference(MavenReferenceProperty.builder()\n                .artifactId(\"artifactId\")\n                .groupId(\"groupId\")\n                .version(\"version\")\n                .build())\n        .s3ContentLocation(S3ContentLocationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .fileKey(\"fileKey\")\n\n                // the properties below are optional\n                .objectVersion(\"objectVersion\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncustomArtifactConfigurationProperty := &customArtifactConfigurationProperty{\n\tartifactType: jsii.String(\"artifactType\"),\n\n\t// the properties below are optional\n\tmavenReference: &mavenReferenceProperty{\n\t\tartifactId: jsii.String(\"artifactId\"),\n\t\tgroupId: jsii.String(\"groupId\"),\n\t\tversion: jsii.String(\"version\"),\n\t},\n\ts3ContentLocation: &s3ContentLocationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\tfileKey: jsii.String(\"fileKey\"),\n\n\t\t// the properties below are optional\n\t\tobjectVersion: jsii.String(\"objectVersion\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst customArtifactConfigurationProperty: kinesisanalytics.CfnApplicationV2.CustomArtifactConfigurationProperty = {\n  artifactType: 'artifactType',\n\n  // the properties below are optional\n  mavenReference: {\n    artifactId: 'artifactId',\n    groupId: 'groupId',\n    version: 'version',\n  },\n  s3ContentLocation: {\n    bucketArn: 'bucketArn',\n    fileKey: 'fileKey',\n\n    // the properties below are optional\n    objectVersion: 'objectVersion',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.CustomArtifactConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.CustomArtifactConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customArtifactConfigurationProperty: kinesisanalytics.CfnApplicationV2.CustomArtifactConfigurationProperty = {\n  artifactType: 'artifactType',\n\n  // the properties below are optional\n  mavenReference: {\n    artifactId: 'artifactId',\n    groupId: 'groupId',\n    version: 'version',\n  },\n  s3ContentLocation: {\n    bucketArn: 'bucketArn',\n    fileKey: 'fileKey',\n\n    // the properties below are optional\n    objectVersion: 'objectVersion',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 14,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "08a514e85d951dff787b812d602926e46a21ec9f64598af6d0bb45cb7d3d973f"
    },
    "20809b692a7636465cb41ce4d8e0ef358eb26862847348e1bed32628069788ff": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ndeploy_as_application_configuration_property = kinesisanalytics.CfnApplicationV2.DeployAsApplicationConfigurationProperty(\n    s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentBaseLocationProperty(\n        bucket_arn=\"bucketArn\",\n\n        # the properties below are optional\n        base_path=\"basePath\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nDeployAsApplicationConfigurationProperty deployAsApplicationConfigurationProperty = new DeployAsApplicationConfigurationProperty {\n    S3ContentLocation = new S3ContentBaseLocationProperty {\n        BucketArn = \"bucketArn\",\n\n        // the properties below are optional\n        BasePath = \"basePath\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nDeployAsApplicationConfigurationProperty deployAsApplicationConfigurationProperty = DeployAsApplicationConfigurationProperty.builder()\n        .s3ContentLocation(S3ContentBaseLocationProperty.builder()\n                .bucketArn(\"bucketArn\")\n\n                // the properties below are optional\n                .basePath(\"basePath\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ndeployAsApplicationConfigurationProperty := &deployAsApplicationConfigurationProperty{\n\ts3ContentLocation: &s3ContentBaseLocationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\n\t\t// the properties below are optional\n\t\tbasePath: jsii.String(\"basePath\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst deployAsApplicationConfigurationProperty: kinesisanalytics.CfnApplicationV2.DeployAsApplicationConfigurationProperty = {\n  s3ContentLocation: {\n    bucketArn: 'bucketArn',\n\n    // the properties below are optional\n    basePath: 'basePath',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.DeployAsApplicationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.DeployAsApplicationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst deployAsApplicationConfigurationProperty: kinesisanalytics.CfnApplicationV2.DeployAsApplicationConfigurationProperty = {\n  s3ContentLocation: {\n    bucketArn: 'bucketArn',\n\n    // the properties below are optional\n    basePath: 'basePath',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "9f5f6fb7bbc88d56eba7d95e0b477da786b8618a31895bf049d9e55b717d92a9"
    },
    "54ba0447a67718adb670e10b56747530378ba2bc38591530c176fa9ce844f88d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nenvironment_properties_property = kinesisanalytics.CfnApplicationV2.EnvironmentPropertiesProperty(\n    property_groups=[kinesisanalytics.CfnApplicationV2.PropertyGroupProperty(\n        property_group_id=\"propertyGroupId\",\n        property_map={\n            \"property_map_key\": \"propertyMap\"\n        }\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nEnvironmentPropertiesProperty environmentPropertiesProperty = new EnvironmentPropertiesProperty {\n    PropertyGroups = new [] { new PropertyGroupProperty {\n        PropertyGroupId = \"propertyGroupId\",\n        PropertyMap = new Dictionary<string, string> {\n            { \"propertyMapKey\", \"propertyMap\" }\n        }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nEnvironmentPropertiesProperty environmentPropertiesProperty = EnvironmentPropertiesProperty.builder()\n        .propertyGroups(List.of(PropertyGroupProperty.builder()\n                .propertyGroupId(\"propertyGroupId\")\n                .propertyMap(Map.of(\n                        \"propertyMapKey\", \"propertyMap\"))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nenvironmentPropertiesProperty := &environmentPropertiesProperty{\n\tpropertyGroups: []interface{}{\n\t\t&propertyGroupProperty{\n\t\t\tpropertyGroupId: jsii.String(\"propertyGroupId\"),\n\t\t\tpropertyMap: map[string]*string{\n\t\t\t\t\"propertyMapKey\": jsii.String(\"propertyMap\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst environmentPropertiesProperty: kinesisanalytics.CfnApplicationV2.EnvironmentPropertiesProperty = {\n  propertyGroups: [{\n    propertyGroupId: 'propertyGroupId',\n    propertyMap: {\n      propertyMapKey: 'propertyMap',\n    },\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.EnvironmentPropertiesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.EnvironmentPropertiesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst environmentPropertiesProperty: kinesisanalytics.CfnApplicationV2.EnvironmentPropertiesProperty = {\n  propertyGroups: [{\n    propertyGroupId: 'propertyGroupId',\n    propertyMap: {\n      propertyMapKey: 'propertyMap',\n    },\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "30cfdf1d96feed723e0cbcbd6c243dd2d101ae2d945770f01d41d201b97886db"
    },
    "2b56800f7b41d98de9fa5ca45230a05b7c68feac93f6a543a1202b10589f0bdf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nflink_application_configuration_property = kinesisanalytics.CfnApplicationV2.FlinkApplicationConfigurationProperty(\n    checkpoint_configuration=kinesisanalytics.CfnApplicationV2.CheckpointConfigurationProperty(\n        configuration_type=\"configurationType\",\n\n        # the properties below are optional\n        checkpointing_enabled=False,\n        checkpoint_interval=123,\n        min_pause_between_checkpoints=123\n    ),\n    monitoring_configuration=kinesisanalytics.CfnApplicationV2.MonitoringConfigurationProperty(\n        configuration_type=\"configurationType\",\n\n        # the properties below are optional\n        log_level=\"logLevel\",\n        metrics_level=\"metricsLevel\"\n    ),\n    parallelism_configuration=kinesisanalytics.CfnApplicationV2.ParallelismConfigurationProperty(\n        configuration_type=\"configurationType\",\n\n        # the properties below are optional\n        auto_scaling_enabled=False,\n        parallelism=123,\n        parallelism_per_kpu=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nFlinkApplicationConfigurationProperty flinkApplicationConfigurationProperty = new FlinkApplicationConfigurationProperty {\n    CheckpointConfiguration = new CheckpointConfigurationProperty {\n        ConfigurationType = \"configurationType\",\n\n        // the properties below are optional\n        CheckpointingEnabled = false,\n        CheckpointInterval = 123,\n        MinPauseBetweenCheckpoints = 123\n    },\n    MonitoringConfiguration = new MonitoringConfigurationProperty {\n        ConfigurationType = \"configurationType\",\n\n        // the properties below are optional\n        LogLevel = \"logLevel\",\n        MetricsLevel = \"metricsLevel\"\n    },\n    ParallelismConfiguration = new ParallelismConfigurationProperty {\n        ConfigurationType = \"configurationType\",\n\n        // the properties below are optional\n        AutoScalingEnabled = false,\n        Parallelism = 123,\n        ParallelismPerKpu = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nFlinkApplicationConfigurationProperty flinkApplicationConfigurationProperty = FlinkApplicationConfigurationProperty.builder()\n        .checkpointConfiguration(CheckpointConfigurationProperty.builder()\n                .configurationType(\"configurationType\")\n\n                // the properties below are optional\n                .checkpointingEnabled(false)\n                .checkpointInterval(123)\n                .minPauseBetweenCheckpoints(123)\n                .build())\n        .monitoringConfiguration(MonitoringConfigurationProperty.builder()\n                .configurationType(\"configurationType\")\n\n                // the properties below are optional\n                .logLevel(\"logLevel\")\n                .metricsLevel(\"metricsLevel\")\n                .build())\n        .parallelismConfiguration(ParallelismConfigurationProperty.builder()\n                .configurationType(\"configurationType\")\n\n                // the properties below are optional\n                .autoScalingEnabled(false)\n                .parallelism(123)\n                .parallelismPerKpu(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nflinkApplicationConfigurationProperty := &flinkApplicationConfigurationProperty{\n\tcheckpointConfiguration: &checkpointConfigurationProperty{\n\t\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t\t// the properties below are optional\n\t\tcheckpointingEnabled: jsii.Boolean(false),\n\t\tcheckpointInterval: jsii.Number(123),\n\t\tminPauseBetweenCheckpoints: jsii.Number(123),\n\t},\n\tmonitoringConfiguration: &monitoringConfigurationProperty{\n\t\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t\t// the properties below are optional\n\t\tlogLevel: jsii.String(\"logLevel\"),\n\t\tmetricsLevel: jsii.String(\"metricsLevel\"),\n\t},\n\tparallelismConfiguration: &parallelismConfigurationProperty{\n\t\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t\t// the properties below are optional\n\t\tautoScalingEnabled: jsii.Boolean(false),\n\t\tparallelism: jsii.Number(123),\n\t\tparallelismPerKpu: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst flinkApplicationConfigurationProperty: kinesisanalytics.CfnApplicationV2.FlinkApplicationConfigurationProperty = {\n  checkpointConfiguration: {\n    configurationType: 'configurationType',\n\n    // the properties below are optional\n    checkpointingEnabled: false,\n    checkpointInterval: 123,\n    minPauseBetweenCheckpoints: 123,\n  },\n  monitoringConfiguration: {\n    configurationType: 'configurationType',\n\n    // the properties below are optional\n    logLevel: 'logLevel',\n    metricsLevel: 'metricsLevel',\n  },\n  parallelismConfiguration: {\n    configurationType: 'configurationType',\n\n    // the properties below are optional\n    autoScalingEnabled: false,\n    parallelism: 123,\n    parallelismPerKpu: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.FlinkApplicationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.FlinkApplicationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst flinkApplicationConfigurationProperty: kinesisanalytics.CfnApplicationV2.FlinkApplicationConfigurationProperty = {\n  checkpointConfiguration: {\n    configurationType: 'configurationType',\n\n    // the properties below are optional\n    checkpointingEnabled: false,\n    checkpointInterval: 123,\n    minPauseBetweenCheckpoints: 123,\n  },\n  monitoringConfiguration: {\n    configurationType: 'configurationType',\n\n    // the properties below are optional\n    logLevel: 'logLevel',\n    metricsLevel: 'metricsLevel',\n  },\n  parallelismConfiguration: {\n    configurationType: 'configurationType',\n\n    // the properties below are optional\n    autoScalingEnabled: false,\n    parallelism: 123,\n    parallelismPerKpu: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 6,
        "75": 19,
        "91": 2,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "7755776502cbbb5aa4566820e330f342ac52eb0cad940a31d68f9d743280c210"
    },
    "b7e4db8cdefb099b14a0847a6a0be868c22fc44e108bb99cfe70cbab65f0be88": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nflink_run_configuration_property = kinesisanalytics.CfnApplicationV2.FlinkRunConfigurationProperty(\n    allow_non_restored_state=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nFlinkRunConfigurationProperty flinkRunConfigurationProperty = new FlinkRunConfigurationProperty {\n    AllowNonRestoredState = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nFlinkRunConfigurationProperty flinkRunConfigurationProperty = FlinkRunConfigurationProperty.builder()\n        .allowNonRestoredState(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nflinkRunConfigurationProperty := &flinkRunConfigurationProperty{\n\tallowNonRestoredState: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst flinkRunConfigurationProperty: kinesisanalytics.CfnApplicationV2.FlinkRunConfigurationProperty = {\n  allowNonRestoredState: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.FlinkRunConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.FlinkRunConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst flinkRunConfigurationProperty: kinesisanalytics.CfnApplicationV2.FlinkRunConfigurationProperty = {\n  allowNonRestoredState: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "d5a13984979d33a43393c2c82a43c22c0a08b9316420fd81499da518dc031ad5"
    },
    "06421a0770fb20fc7895c9802fb2d33a0488f5b9795575d1d94c7c4cb3f9e98b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nglue_data_catalog_configuration_property = kinesisanalytics.CfnApplicationV2.GlueDataCatalogConfigurationProperty(\n    database_arn=\"databaseArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nGlueDataCatalogConfigurationProperty glueDataCatalogConfigurationProperty = new GlueDataCatalogConfigurationProperty {\n    DatabaseArn = \"databaseArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nGlueDataCatalogConfigurationProperty glueDataCatalogConfigurationProperty = GlueDataCatalogConfigurationProperty.builder()\n        .databaseArn(\"databaseArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nglueDataCatalogConfigurationProperty := &glueDataCatalogConfigurationProperty{\n\tdatabaseArn: jsii.String(\"databaseArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst glueDataCatalogConfigurationProperty: kinesisanalytics.CfnApplicationV2.GlueDataCatalogConfigurationProperty = {\n  databaseArn: 'databaseArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.GlueDataCatalogConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.GlueDataCatalogConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst glueDataCatalogConfigurationProperty: kinesisanalytics.CfnApplicationV2.GlueDataCatalogConfigurationProperty = {\n  databaseArn: 'databaseArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "2a162e2bf8375ce5f0419eacbefaa7e35ee0b6117fb54cf5d30702ed2da602f4"
    },
    "8ae4a8d9dfa05b20b02490657097c7e9fa4fbbd58a7ecb30271293f64c9f032e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ninput_lambda_processor_property = kinesisanalytics.CfnApplicationV2.InputLambdaProcessorProperty(\n    resource_arn=\"resourceArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nInputLambdaProcessorProperty inputLambdaProcessorProperty = new InputLambdaProcessorProperty {\n    ResourceArn = \"resourceArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nInputLambdaProcessorProperty inputLambdaProcessorProperty = InputLambdaProcessorProperty.builder()\n        .resourceArn(\"resourceArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ninputLambdaProcessorProperty := &inputLambdaProcessorProperty{\n\tresourceArn: jsii.String(\"resourceArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst inputLambdaProcessorProperty: kinesisanalytics.CfnApplicationV2.InputLambdaProcessorProperty = {\n  resourceArn: 'resourceArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.InputLambdaProcessorProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.InputLambdaProcessorProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputLambdaProcessorProperty: kinesisanalytics.CfnApplicationV2.InputLambdaProcessorProperty = {\n  resourceArn: 'resourceArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "5b5ce72ec0397dac622f81b32ef3931967116ba6de3d7eedf3b8c5fcc22ecde3"
    },
    "b155e45edf2746cb99bb6c6f8762bfd316b06bd4bf36bff25ac98608fe5fa73d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ninput_parallelism_property = kinesisanalytics.CfnApplicationV2.InputParallelismProperty(\n    count=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nInputParallelismProperty inputParallelismProperty = new InputParallelismProperty {\n    Count = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nInputParallelismProperty inputParallelismProperty = InputParallelismProperty.builder()\n        .count(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ninputParallelismProperty := &inputParallelismProperty{\n\tcount: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst inputParallelismProperty: kinesisanalytics.CfnApplicationV2.InputParallelismProperty = {\n  count: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.InputParallelismProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.InputParallelismProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputParallelismProperty: kinesisanalytics.CfnApplicationV2.InputParallelismProperty = {\n  count: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "d89aa97b6394db3f4fcffac88b30ff37cc69735401531cd1e00135a92a81aa3d"
    },
    "5605270d0ba14c08e807a89ef0ce96c95dcb6af6b590a67b24e9134e3653a041": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ninput_processing_configuration_property = kinesisanalytics.CfnApplicationV2.InputProcessingConfigurationProperty(\n    input_lambda_processor=kinesisanalytics.CfnApplicationV2.InputLambdaProcessorProperty(\n        resource_arn=\"resourceArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nInputProcessingConfigurationProperty inputProcessingConfigurationProperty = new InputProcessingConfigurationProperty {\n    InputLambdaProcessor = new InputLambdaProcessorProperty {\n        ResourceArn = \"resourceArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nInputProcessingConfigurationProperty inputProcessingConfigurationProperty = InputProcessingConfigurationProperty.builder()\n        .inputLambdaProcessor(InputLambdaProcessorProperty.builder()\n                .resourceArn(\"resourceArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ninputProcessingConfigurationProperty := &inputProcessingConfigurationProperty{\n\tinputLambdaProcessor: &inputLambdaProcessorProperty{\n\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst inputProcessingConfigurationProperty: kinesisanalytics.CfnApplicationV2.InputProcessingConfigurationProperty = {\n  inputLambdaProcessor: {\n    resourceArn: 'resourceArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.InputProcessingConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.InputProcessingConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputProcessingConfigurationProperty: kinesisanalytics.CfnApplicationV2.InputProcessingConfigurationProperty = {\n  inputLambdaProcessor: {\n    resourceArn: 'resourceArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "0295cdd81ec402f073118c5b5ef7ad848b0afdde6420557549654859277e3164"
    },
    "102d6ebc3e171f0708146d8e1587ad1d4c4e51bf09f9e04231f4a95db13d6e99": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ninput_property = kinesisanalytics.CfnApplicationV2.InputProperty(\n    input_schema=kinesisanalytics.CfnApplicationV2.InputSchemaProperty(\n        record_columns=[kinesisanalytics.CfnApplicationV2.RecordColumnProperty(\n            name=\"name\",\n            sql_type=\"sqlType\",\n\n            # the properties below are optional\n            mapping=\"mapping\"\n        )],\n        record_format=kinesisanalytics.CfnApplicationV2.RecordFormatProperty(\n            record_format_type=\"recordFormatType\",\n\n            # the properties below are optional\n            mapping_parameters=kinesisanalytics.CfnApplicationV2.MappingParametersProperty(\n                csv_mapping_parameters=kinesisanalytics.CfnApplicationV2.CSVMappingParametersProperty(\n                    record_column_delimiter=\"recordColumnDelimiter\",\n                    record_row_delimiter=\"recordRowDelimiter\"\n                ),\n                json_mapping_parameters=kinesisanalytics.CfnApplicationV2.JSONMappingParametersProperty(\n                    record_row_path=\"recordRowPath\"\n                )\n            )\n        ),\n\n        # the properties below are optional\n        record_encoding=\"recordEncoding\"\n    ),\n    name_prefix=\"namePrefix\",\n\n    # the properties below are optional\n    input_parallelism=kinesisanalytics.CfnApplicationV2.InputParallelismProperty(\n        count=123\n    ),\n    input_processing_configuration=kinesisanalytics.CfnApplicationV2.InputProcessingConfigurationProperty(\n        input_lambda_processor=kinesisanalytics.CfnApplicationV2.InputLambdaProcessorProperty(\n            resource_arn=\"resourceArn\"\n        )\n    ),\n    kinesis_firehose_input=kinesisanalytics.CfnApplicationV2.KinesisFirehoseInputProperty(\n        resource_arn=\"resourceArn\"\n    ),\n    kinesis_streams_input=kinesisanalytics.CfnApplicationV2.KinesisStreamsInputProperty(\n        resource_arn=\"resourceArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nInputProperty inputProperty = new InputProperty {\n    InputSchema = new InputSchemaProperty {\n        RecordColumns = new [] { new RecordColumnProperty {\n            Name = \"name\",\n            SqlType = \"sqlType\",\n\n            // the properties below are optional\n            Mapping = \"mapping\"\n        } },\n        RecordFormat = new RecordFormatProperty {\n            RecordFormatType = \"recordFormatType\",\n\n            // the properties below are optional\n            MappingParameters = new MappingParametersProperty {\n                CsvMappingParameters = new CSVMappingParametersProperty {\n                    RecordColumnDelimiter = \"recordColumnDelimiter\",\n                    RecordRowDelimiter = \"recordRowDelimiter\"\n                },\n                JsonMappingParameters = new JSONMappingParametersProperty {\n                    RecordRowPath = \"recordRowPath\"\n                }\n            }\n        },\n\n        // the properties below are optional\n        RecordEncoding = \"recordEncoding\"\n    },\n    NamePrefix = \"namePrefix\",\n\n    // the properties below are optional\n    InputParallelism = new InputParallelismProperty {\n        Count = 123\n    },\n    InputProcessingConfiguration = new InputProcessingConfigurationProperty {\n        InputLambdaProcessor = new InputLambdaProcessorProperty {\n            ResourceArn = \"resourceArn\"\n        }\n    },\n    KinesisFirehoseInput = new KinesisFirehoseInputProperty {\n        ResourceArn = \"resourceArn\"\n    },\n    KinesisStreamsInput = new KinesisStreamsInputProperty {\n        ResourceArn = \"resourceArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nInputProperty inputProperty = InputProperty.builder()\n        .inputSchema(InputSchemaProperty.builder()\n                .recordColumns(List.of(RecordColumnProperty.builder()\n                        .name(\"name\")\n                        .sqlType(\"sqlType\")\n\n                        // the properties below are optional\n                        .mapping(\"mapping\")\n                        .build()))\n                .recordFormat(RecordFormatProperty.builder()\n                        .recordFormatType(\"recordFormatType\")\n\n                        // the properties below are optional\n                        .mappingParameters(MappingParametersProperty.builder()\n                                .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                        .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                        .recordRowDelimiter(\"recordRowDelimiter\")\n                                        .build())\n                                .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                        .recordRowPath(\"recordRowPath\")\n                                        .build())\n                                .build())\n                        .build())\n\n                // the properties below are optional\n                .recordEncoding(\"recordEncoding\")\n                .build())\n        .namePrefix(\"namePrefix\")\n\n        // the properties below are optional\n        .inputParallelism(InputParallelismProperty.builder()\n                .count(123)\n                .build())\n        .inputProcessingConfiguration(InputProcessingConfigurationProperty.builder()\n                .inputLambdaProcessor(InputLambdaProcessorProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .build())\n                .build())\n        .kinesisFirehoseInput(KinesisFirehoseInputProperty.builder()\n                .resourceArn(\"resourceArn\")\n                .build())\n        .kinesisStreamsInput(KinesisStreamsInputProperty.builder()\n                .resourceArn(\"resourceArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ninputProperty := &inputProperty{\n\tinputSchema: &inputSchemaProperty{\n\t\trecordColumns: []interface{}{\n\t\t\t&recordColumnProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t},\n\t\t},\n\t\trecordFormat: &recordFormatProperty{\n\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t},\n\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t},\n\tnamePrefix: jsii.String(\"namePrefix\"),\n\n\t// the properties below are optional\n\tinputParallelism: &inputParallelismProperty{\n\t\tcount: jsii.Number(123),\n\t},\n\tinputProcessingConfiguration: &inputProcessingConfigurationProperty{\n\t\tinputLambdaProcessor: &inputLambdaProcessorProperty{\n\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t},\n\t},\n\tkinesisFirehoseInput: &kinesisFirehoseInputProperty{\n\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t},\n\tkinesisStreamsInput: &kinesisStreamsInputProperty{\n\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst inputProperty: kinesisanalytics.CfnApplicationV2.InputProperty = {\n  inputSchema: {\n    recordColumns: [{\n      name: 'name',\n      sqlType: 'sqlType',\n\n      // the properties below are optional\n      mapping: 'mapping',\n    }],\n    recordFormat: {\n      recordFormatType: 'recordFormatType',\n\n      // the properties below are optional\n      mappingParameters: {\n        csvMappingParameters: {\n          recordColumnDelimiter: 'recordColumnDelimiter',\n          recordRowDelimiter: 'recordRowDelimiter',\n        },\n        jsonMappingParameters: {\n          recordRowPath: 'recordRowPath',\n        },\n      },\n    },\n\n    // the properties below are optional\n    recordEncoding: 'recordEncoding',\n  },\n  namePrefix: 'namePrefix',\n\n  // the properties below are optional\n  inputParallelism: {\n    count: 123,\n  },\n  inputProcessingConfiguration: {\n    inputLambdaProcessor: {\n      resourceArn: 'resourceArn',\n    },\n  },\n  kinesisFirehoseInput: {\n    resourceArn: 'resourceArn',\n  },\n  kinesisStreamsInput: {\n    resourceArn: 'resourceArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.InputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.InputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputProperty: kinesisanalytics.CfnApplicationV2.InputProperty = {\n  inputSchema: {\n    recordColumns: [{\n      name: 'name',\n      sqlType: 'sqlType',\n\n      // the properties below are optional\n      mapping: 'mapping',\n    }],\n    recordFormat: {\n      recordFormatType: 'recordFormatType',\n\n      // the properties below are optional\n      mappingParameters: {\n        csvMappingParameters: {\n          recordColumnDelimiter: 'recordColumnDelimiter',\n          recordRowDelimiter: 'recordRowDelimiter',\n        },\n        jsonMappingParameters: {\n          recordRowPath: 'recordRowPath',\n        },\n      },\n    },\n\n    // the properties below are optional\n    recordEncoding: 'recordEncoding',\n  },\n  namePrefix: 'namePrefix',\n\n  // the properties below are optional\n  inputParallelism: {\n    count: 123,\n  },\n  inputProcessingConfiguration: {\n    inputLambdaProcessor: {\n      resourceArn: 'resourceArn',\n    },\n  },\n  kinesisFirehoseInput: {\n    resourceArn: 'resourceArn',\n  },\n  kinesisStreamsInput: {\n    resourceArn: 'resourceArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 13,
        "75": 29,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 12,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 24,
        "290": 1
      },
      "fqnsFingerprint": "8a0e507a06f255d7590e77c86af666b084edc21bd1f370bc980dd57f523c6d74"
    },
    "002362c4816eb66d66e8c7bd9a0facacd54c10b56fdc040c6262f283c534ec83": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ninput_schema_property = kinesisanalytics.CfnApplicationV2.InputSchemaProperty(\n    record_columns=[kinesisanalytics.CfnApplicationV2.RecordColumnProperty(\n        name=\"name\",\n        sql_type=\"sqlType\",\n\n        # the properties below are optional\n        mapping=\"mapping\"\n    )],\n    record_format=kinesisanalytics.CfnApplicationV2.RecordFormatProperty(\n        record_format_type=\"recordFormatType\",\n\n        # the properties below are optional\n        mapping_parameters=kinesisanalytics.CfnApplicationV2.MappingParametersProperty(\n            csv_mapping_parameters=kinesisanalytics.CfnApplicationV2.CSVMappingParametersProperty(\n                record_column_delimiter=\"recordColumnDelimiter\",\n                record_row_delimiter=\"recordRowDelimiter\"\n            ),\n            json_mapping_parameters=kinesisanalytics.CfnApplicationV2.JSONMappingParametersProperty(\n                record_row_path=\"recordRowPath\"\n            )\n        )\n    ),\n\n    # the properties below are optional\n    record_encoding=\"recordEncoding\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nInputSchemaProperty inputSchemaProperty = new InputSchemaProperty {\n    RecordColumns = new [] { new RecordColumnProperty {\n        Name = \"name\",\n        SqlType = \"sqlType\",\n\n        // the properties below are optional\n        Mapping = \"mapping\"\n    } },\n    RecordFormat = new RecordFormatProperty {\n        RecordFormatType = \"recordFormatType\",\n\n        // the properties below are optional\n        MappingParameters = new MappingParametersProperty {\n            CsvMappingParameters = new CSVMappingParametersProperty {\n                RecordColumnDelimiter = \"recordColumnDelimiter\",\n                RecordRowDelimiter = \"recordRowDelimiter\"\n            },\n            JsonMappingParameters = new JSONMappingParametersProperty {\n                RecordRowPath = \"recordRowPath\"\n            }\n        }\n    },\n\n    // the properties below are optional\n    RecordEncoding = \"recordEncoding\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nInputSchemaProperty inputSchemaProperty = InputSchemaProperty.builder()\n        .recordColumns(List.of(RecordColumnProperty.builder()\n                .name(\"name\")\n                .sqlType(\"sqlType\")\n\n                // the properties below are optional\n                .mapping(\"mapping\")\n                .build()))\n        .recordFormat(RecordFormatProperty.builder()\n                .recordFormatType(\"recordFormatType\")\n\n                // the properties below are optional\n                .mappingParameters(MappingParametersProperty.builder()\n                        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                .recordRowDelimiter(\"recordRowDelimiter\")\n                                .build())\n                        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                .recordRowPath(\"recordRowPath\")\n                                .build())\n                        .build())\n                .build())\n\n        // the properties below are optional\n        .recordEncoding(\"recordEncoding\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ninputSchemaProperty := &inputSchemaProperty{\n\trecordColumns: []interface{}{\n\t\t&recordColumnProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t},\n\t},\n\trecordFormat: &recordFormatProperty{\n\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t// the properties below are optional\n\t\tmappingParameters: &mappingParametersProperty{\n\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t},\n\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\trecordEncoding: jsii.String(\"recordEncoding\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst inputSchemaProperty: kinesisanalytics.CfnApplicationV2.InputSchemaProperty = {\n  recordColumns: [{\n    name: 'name',\n    sqlType: 'sqlType',\n\n    // the properties below are optional\n    mapping: 'mapping',\n  }],\n  recordFormat: {\n    recordFormatType: 'recordFormatType',\n\n    // the properties below are optional\n    mappingParameters: {\n      csvMappingParameters: {\n        recordColumnDelimiter: 'recordColumnDelimiter',\n        recordRowDelimiter: 'recordRowDelimiter',\n      },\n      jsonMappingParameters: {\n        recordRowPath: 'recordRowPath',\n      },\n    },\n  },\n\n  // the properties below are optional\n  recordEncoding: 'recordEncoding',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.InputSchemaProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.InputSchemaProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputSchemaProperty: kinesisanalytics.CfnApplicationV2.InputSchemaProperty = {\n  recordColumns: [{\n    name: 'name',\n    sqlType: 'sqlType',\n\n    // the properties below are optional\n    mapping: 'mapping',\n  }],\n  recordFormat: {\n    recordFormatType: 'recordFormatType',\n\n    // the properties below are optional\n    mappingParameters: {\n      csvMappingParameters: {\n        recordColumnDelimiter: 'recordColumnDelimiter',\n        recordRowDelimiter: 'recordRowDelimiter',\n      },\n      jsonMappingParameters: {\n        recordRowPath: 'recordRowPath',\n      },\n    },\n  },\n\n  // the properties below are optional\n  recordEncoding: 'recordEncoding',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 18,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 6,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "e25b987f86fb335b308fa4e29668b17e13a36b3d85aef64a3b7e1be31e02075e"
    },
    "1c8541c52d7587b9050f495013bed30c2b0531e32136d3a405d6ae12cc309098": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nj_sONMapping_parameters_property = kinesisanalytics.CfnApplicationV2.JSONMappingParametersProperty(\n    record_row_path=\"recordRowPath\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nJSONMappingParametersProperty jSONMappingParametersProperty = new JSONMappingParametersProperty {\n    RecordRowPath = \"recordRowPath\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nJSONMappingParametersProperty jSONMappingParametersProperty = JSONMappingParametersProperty.builder()\n        .recordRowPath(\"recordRowPath\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\njSONMappingParametersProperty := &jSONMappingParametersProperty{\n\trecordRowPath: jsii.String(\"recordRowPath\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst jSONMappingParametersProperty: kinesisanalytics.CfnApplicationV2.JSONMappingParametersProperty = {\n  recordRowPath: 'recordRowPath',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.JSONMappingParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.JSONMappingParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jSONMappingParametersProperty: kinesisanalytics.CfnApplicationV2.JSONMappingParametersProperty = {\n  recordRowPath: 'recordRowPath',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "950336abb4ab6266afa40c4d0f63e8eb940ba43f0a1c2d2834a0b52f6fdc2f0d"
    },
    "5229ffa8cfdc7753d3d0bba6fe30917dc946a51899c552d1c28705055dcac5fb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nkinesis_firehose_input_property = kinesisanalytics.CfnApplicationV2.KinesisFirehoseInputProperty(\n    resource_arn=\"resourceArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nKinesisFirehoseInputProperty kinesisFirehoseInputProperty = new KinesisFirehoseInputProperty {\n    ResourceArn = \"resourceArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nKinesisFirehoseInputProperty kinesisFirehoseInputProperty = KinesisFirehoseInputProperty.builder()\n        .resourceArn(\"resourceArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nkinesisFirehoseInputProperty := &kinesisFirehoseInputProperty{\n\tresourceArn: jsii.String(\"resourceArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst kinesisFirehoseInputProperty: kinesisanalytics.CfnApplicationV2.KinesisFirehoseInputProperty = {\n  resourceArn: 'resourceArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.KinesisFirehoseInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.KinesisFirehoseInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisFirehoseInputProperty: kinesisanalytics.CfnApplicationV2.KinesisFirehoseInputProperty = {\n  resourceArn: 'resourceArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "587e924522ada90589342763e985b79a599494eda50f87cb9b5565f1b5477db8"
    },
    "7ebb9138180a5fd48107753aa28bb02a365c693c62f3df0acc9e6f90a69cdf61": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nkinesis_streams_input_property = kinesisanalytics.CfnApplicationV2.KinesisStreamsInputProperty(\n    resource_arn=\"resourceArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nKinesisStreamsInputProperty kinesisStreamsInputProperty = new KinesisStreamsInputProperty {\n    ResourceArn = \"resourceArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nKinesisStreamsInputProperty kinesisStreamsInputProperty = KinesisStreamsInputProperty.builder()\n        .resourceArn(\"resourceArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nkinesisStreamsInputProperty := &kinesisStreamsInputProperty{\n\tresourceArn: jsii.String(\"resourceArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst kinesisStreamsInputProperty: kinesisanalytics.CfnApplicationV2.KinesisStreamsInputProperty = {\n  resourceArn: 'resourceArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.KinesisStreamsInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.KinesisStreamsInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisStreamsInputProperty: kinesisanalytics.CfnApplicationV2.KinesisStreamsInputProperty = {\n  resourceArn: 'resourceArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "878e23a40162054a7bb4f7ad63e27a1445abb39dc7818399f94f9695e037cfba"
    },
    "6be052fe96a15ead3b160c6541286ad7b7dcdb5e76d5556f8640843a4482c2ec": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nmapping_parameters_property = kinesisanalytics.CfnApplicationV2.MappingParametersProperty(\n    csv_mapping_parameters=kinesisanalytics.CfnApplicationV2.CSVMappingParametersProperty(\n        record_column_delimiter=\"recordColumnDelimiter\",\n        record_row_delimiter=\"recordRowDelimiter\"\n    ),\n    json_mapping_parameters=kinesisanalytics.CfnApplicationV2.JSONMappingParametersProperty(\n        record_row_path=\"recordRowPath\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nMappingParametersProperty mappingParametersProperty = new MappingParametersProperty {\n    CsvMappingParameters = new CSVMappingParametersProperty {\n        RecordColumnDelimiter = \"recordColumnDelimiter\",\n        RecordRowDelimiter = \"recordRowDelimiter\"\n    },\n    JsonMappingParameters = new JSONMappingParametersProperty {\n        RecordRowPath = \"recordRowPath\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nMappingParametersProperty mappingParametersProperty = MappingParametersProperty.builder()\n        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                .recordRowDelimiter(\"recordRowDelimiter\")\n                .build())\n        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                .recordRowPath(\"recordRowPath\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nmappingParametersProperty := &mappingParametersProperty{\n\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t},\n\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst mappingParametersProperty: kinesisanalytics.CfnApplicationV2.MappingParametersProperty = {\n  csvMappingParameters: {\n    recordColumnDelimiter: 'recordColumnDelimiter',\n    recordRowDelimiter: 'recordRowDelimiter',\n  },\n  jsonMappingParameters: {\n    recordRowPath: 'recordRowPath',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.MappingParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.MappingParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst mappingParametersProperty: kinesisanalytics.CfnApplicationV2.MappingParametersProperty = {\n  csvMappingParameters: {\n    recordColumnDelimiter: 'recordColumnDelimiter',\n    recordRowDelimiter: 'recordRowDelimiter',\n  },\n  jsonMappingParameters: {\n    recordRowPath: 'recordRowPath',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "6638eeaf98d2434fead6abc33d9565b634a90c5c799b6ea14c1cc81a5a205275"
    },
    "d9481e341d4a312dadc2f879802111de2ee3367199c0f1a97e56daf1477ae94b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nmaven_reference_property = kinesisanalytics.CfnApplicationV2.MavenReferenceProperty(\n    artifact_id=\"artifactId\",\n    group_id=\"groupId\",\n    version=\"version\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nMavenReferenceProperty mavenReferenceProperty = new MavenReferenceProperty {\n    ArtifactId = \"artifactId\",\n    GroupId = \"groupId\",\n    Version = \"version\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nMavenReferenceProperty mavenReferenceProperty = MavenReferenceProperty.builder()\n        .artifactId(\"artifactId\")\n        .groupId(\"groupId\")\n        .version(\"version\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nmavenReferenceProperty := &mavenReferenceProperty{\n\tartifactId: jsii.String(\"artifactId\"),\n\tgroupId: jsii.String(\"groupId\"),\n\tversion: jsii.String(\"version\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst mavenReferenceProperty: kinesisanalytics.CfnApplicationV2.MavenReferenceProperty = {\n  artifactId: 'artifactId',\n  groupId: 'groupId',\n  version: 'version',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.MavenReferenceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.MavenReferenceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst mavenReferenceProperty: kinesisanalytics.CfnApplicationV2.MavenReferenceProperty = {\n  artifactId: 'artifactId',\n  groupId: 'groupId',\n  version: 'version',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "9446d2be85eedde74322055de5ce094c6a4e65953cbf505a0b8348ad3c88a8b9"
    },
    "5084d3c0a27b77d198568100d6ead67fb7811aad7a54c008b70ce3195a0fb995": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nmonitoring_configuration_property = kinesisanalytics.CfnApplicationV2.MonitoringConfigurationProperty(\n    configuration_type=\"configurationType\",\n\n    # the properties below are optional\n    log_level=\"logLevel\",\n    metrics_level=\"metricsLevel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nMonitoringConfigurationProperty monitoringConfigurationProperty = new MonitoringConfigurationProperty {\n    ConfigurationType = \"configurationType\",\n\n    // the properties below are optional\n    LogLevel = \"logLevel\",\n    MetricsLevel = \"metricsLevel\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nMonitoringConfigurationProperty monitoringConfigurationProperty = MonitoringConfigurationProperty.builder()\n        .configurationType(\"configurationType\")\n\n        // the properties below are optional\n        .logLevel(\"logLevel\")\n        .metricsLevel(\"metricsLevel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nmonitoringConfigurationProperty := &monitoringConfigurationProperty{\n\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t// the properties below are optional\n\tlogLevel: jsii.String(\"logLevel\"),\n\tmetricsLevel: jsii.String(\"metricsLevel\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst monitoringConfigurationProperty: kinesisanalytics.CfnApplicationV2.MonitoringConfigurationProperty = {\n  configurationType: 'configurationType',\n\n  // the properties below are optional\n  logLevel: 'logLevel',\n  metricsLevel: 'metricsLevel',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.MonitoringConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.MonitoringConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringConfigurationProperty: kinesisanalytics.CfnApplicationV2.MonitoringConfigurationProperty = {\n  configurationType: 'configurationType',\n\n  // the properties below are optional\n  logLevel: 'logLevel',\n  metricsLevel: 'metricsLevel',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "6a9a410df48b336e97801db713c27c0d8993021b42e73ab0a17f90587042c96f"
    },
    "b931464b00d61b4097c616717f877c3a865eb9e8c01ee6a496cc6d905f4a9d38": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nparallelism_configuration_property = kinesisanalytics.CfnApplicationV2.ParallelismConfigurationProperty(\n    configuration_type=\"configurationType\",\n\n    # the properties below are optional\n    auto_scaling_enabled=False,\n    parallelism=123,\n    parallelism_per_kpu=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nParallelismConfigurationProperty parallelismConfigurationProperty = new ParallelismConfigurationProperty {\n    ConfigurationType = \"configurationType\",\n\n    // the properties below are optional\n    AutoScalingEnabled = false,\n    Parallelism = 123,\n    ParallelismPerKpu = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nParallelismConfigurationProperty parallelismConfigurationProperty = ParallelismConfigurationProperty.builder()\n        .configurationType(\"configurationType\")\n\n        // the properties below are optional\n        .autoScalingEnabled(false)\n        .parallelism(123)\n        .parallelismPerKpu(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nparallelismConfigurationProperty := &parallelismConfigurationProperty{\n\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t// the properties below are optional\n\tautoScalingEnabled: jsii.Boolean(false),\n\tparallelism: jsii.Number(123),\n\tparallelismPerKpu: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst parallelismConfigurationProperty: kinesisanalytics.CfnApplicationV2.ParallelismConfigurationProperty = {\n  configurationType: 'configurationType',\n\n  // the properties below are optional\n  autoScalingEnabled: false,\n  parallelism: 123,\n  parallelismPerKpu: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ParallelismConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ParallelismConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst parallelismConfigurationProperty: kinesisanalytics.CfnApplicationV2.ParallelismConfigurationProperty = {\n  configurationType: 'configurationType',\n\n  // the properties below are optional\n  autoScalingEnabled: false,\n  parallelism: 123,\n  parallelismPerKpu: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 9,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "8194e073f1a5d04763dbeea7fa92e037c710dfb9fe6a581fc8e183be2a89fb8b"
    },
    "2fa94be0722da7de0bf4970d2747e8447bd9176ababca24dc6b3a0d9fa6de806": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nproperty_group_property = kinesisanalytics.CfnApplicationV2.PropertyGroupProperty(\n    property_group_id=\"propertyGroupId\",\n    property_map={\n        \"property_map_key\": \"propertyMap\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nPropertyGroupProperty propertyGroupProperty = new PropertyGroupProperty {\n    PropertyGroupId = \"propertyGroupId\",\n    PropertyMap = new Dictionary<string, string> {\n        { \"propertyMapKey\", \"propertyMap\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nPropertyGroupProperty propertyGroupProperty = PropertyGroupProperty.builder()\n        .propertyGroupId(\"propertyGroupId\")\n        .propertyMap(Map.of(\n                \"propertyMapKey\", \"propertyMap\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\npropertyGroupProperty := &propertyGroupProperty{\n\tpropertyGroupId: jsii.String(\"propertyGroupId\"),\n\tpropertyMap: map[string]*string{\n\t\t\"propertyMapKey\": jsii.String(\"propertyMap\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst propertyGroupProperty: kinesisanalytics.CfnApplicationV2.PropertyGroupProperty = {\n  propertyGroupId: 'propertyGroupId',\n  propertyMap: {\n    propertyMapKey: 'propertyMap',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.PropertyGroupProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.PropertyGroupProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst propertyGroupProperty: kinesisanalytics.CfnApplicationV2.PropertyGroupProperty = {\n  propertyGroupId: 'propertyGroupId',\n  propertyMap: {\n    propertyMapKey: 'propertyMap',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "9c035ef18097fda83f13aab30ccc1e3c77b977f39d5dda796867ff31a89871a3"
    },
    "6569f267b0cfedf4d26ee9a7c0beb66d5fb8d1bded22cf9210d98a1729d76e70": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nrecord_column_property = kinesisanalytics.CfnApplicationV2.RecordColumnProperty(\n    name=\"name\",\n    sql_type=\"sqlType\",\n\n    # the properties below are optional\n    mapping=\"mapping\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nRecordColumnProperty recordColumnProperty = new RecordColumnProperty {\n    Name = \"name\",\n    SqlType = \"sqlType\",\n\n    // the properties below are optional\n    Mapping = \"mapping\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nRecordColumnProperty recordColumnProperty = RecordColumnProperty.builder()\n        .name(\"name\")\n        .sqlType(\"sqlType\")\n\n        // the properties below are optional\n        .mapping(\"mapping\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nrecordColumnProperty := &recordColumnProperty{\n\tname: jsii.String(\"name\"),\n\tsqlType: jsii.String(\"sqlType\"),\n\n\t// the properties below are optional\n\tmapping: jsii.String(\"mapping\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst recordColumnProperty: kinesisanalytics.CfnApplicationV2.RecordColumnProperty = {\n  name: 'name',\n  sqlType: 'sqlType',\n\n  // the properties below are optional\n  mapping: 'mapping',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.RecordColumnProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.RecordColumnProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst recordColumnProperty: kinesisanalytics.CfnApplicationV2.RecordColumnProperty = {\n  name: 'name',\n  sqlType: 'sqlType',\n\n  // the properties below are optional\n  mapping: 'mapping',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "0c02344d4600959521219c4fab8d6c43f49aa409bd4fcd5a406167719620d94b"
    },
    "0ac162d097f18690bd5bcd2e9921deb3abb35c9d956dd15f9fb1b7e37ef63cec": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nrecord_format_property = kinesisanalytics.CfnApplicationV2.RecordFormatProperty(\n    record_format_type=\"recordFormatType\",\n\n    # the properties below are optional\n    mapping_parameters=kinesisanalytics.CfnApplicationV2.MappingParametersProperty(\n        csv_mapping_parameters=kinesisanalytics.CfnApplicationV2.CSVMappingParametersProperty(\n            record_column_delimiter=\"recordColumnDelimiter\",\n            record_row_delimiter=\"recordRowDelimiter\"\n        ),\n        json_mapping_parameters=kinesisanalytics.CfnApplicationV2.JSONMappingParametersProperty(\n            record_row_path=\"recordRowPath\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nRecordFormatProperty recordFormatProperty = new RecordFormatProperty {\n    RecordFormatType = \"recordFormatType\",\n\n    // the properties below are optional\n    MappingParameters = new MappingParametersProperty {\n        CsvMappingParameters = new CSVMappingParametersProperty {\n            RecordColumnDelimiter = \"recordColumnDelimiter\",\n            RecordRowDelimiter = \"recordRowDelimiter\"\n        },\n        JsonMappingParameters = new JSONMappingParametersProperty {\n            RecordRowPath = \"recordRowPath\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nRecordFormatProperty recordFormatProperty = RecordFormatProperty.builder()\n        .recordFormatType(\"recordFormatType\")\n\n        // the properties below are optional\n        .mappingParameters(MappingParametersProperty.builder()\n                .csvMappingParameters(CSVMappingParametersProperty.builder()\n                        .recordColumnDelimiter(\"recordColumnDelimiter\")\n                        .recordRowDelimiter(\"recordRowDelimiter\")\n                        .build())\n                .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                        .recordRowPath(\"recordRowPath\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nrecordFormatProperty := &recordFormatProperty{\n\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t// the properties below are optional\n\tmappingParameters: &mappingParametersProperty{\n\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t},\n\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst recordFormatProperty: kinesisanalytics.CfnApplicationV2.RecordFormatProperty = {\n  recordFormatType: 'recordFormatType',\n\n  // the properties below are optional\n  mappingParameters: {\n    csvMappingParameters: {\n      recordColumnDelimiter: 'recordColumnDelimiter',\n      recordRowDelimiter: 'recordRowDelimiter',\n    },\n    jsonMappingParameters: {\n      recordRowPath: 'recordRowPath',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.RecordFormatProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.RecordFormatProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst recordFormatProperty: kinesisanalytics.CfnApplicationV2.RecordFormatProperty = {\n  recordFormatType: 'recordFormatType',\n\n  // the properties below are optional\n  mappingParameters: {\n    csvMappingParameters: {\n      recordColumnDelimiter: 'recordColumnDelimiter',\n      recordRowDelimiter: 'recordRowDelimiter',\n    },\n    jsonMappingParameters: {\n      recordRowPath: 'recordRowPath',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 12,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "413a5294e615906f08ee35097c7b92eeaf0bd2d5a29c0919344a29660a84c1e3"
    },
    "aa08cd07f8a3a3a5c4ef734acf4fbc36abc433d21f3a3c21e353797ed22eef4d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nrun_configuration_property = kinesisanalytics.CfnApplicationV2.RunConfigurationProperty(\n    application_restore_configuration=kinesisanalytics.CfnApplicationV2.ApplicationRestoreConfigurationProperty(\n        application_restore_type=\"applicationRestoreType\",\n\n        # the properties below are optional\n        snapshot_name=\"snapshotName\"\n    ),\n    flink_run_configuration=kinesisanalytics.CfnApplicationV2.FlinkRunConfigurationProperty(\n        allow_non_restored_state=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nRunConfigurationProperty runConfigurationProperty = new RunConfigurationProperty {\n    ApplicationRestoreConfiguration = new ApplicationRestoreConfigurationProperty {\n        ApplicationRestoreType = \"applicationRestoreType\",\n\n        // the properties below are optional\n        SnapshotName = \"snapshotName\"\n    },\n    FlinkRunConfiguration = new FlinkRunConfigurationProperty {\n        AllowNonRestoredState = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nRunConfigurationProperty runConfigurationProperty = RunConfigurationProperty.builder()\n        .applicationRestoreConfiguration(ApplicationRestoreConfigurationProperty.builder()\n                .applicationRestoreType(\"applicationRestoreType\")\n\n                // the properties below are optional\n                .snapshotName(\"snapshotName\")\n                .build())\n        .flinkRunConfiguration(FlinkRunConfigurationProperty.builder()\n                .allowNonRestoredState(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nrunConfigurationProperty := &runConfigurationProperty{\n\tapplicationRestoreConfiguration: &applicationRestoreConfigurationProperty{\n\t\tapplicationRestoreType: jsii.String(\"applicationRestoreType\"),\n\n\t\t// the properties below are optional\n\t\tsnapshotName: jsii.String(\"snapshotName\"),\n\t},\n\tflinkRunConfiguration: &flinkRunConfigurationProperty{\n\t\tallowNonRestoredState: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst runConfigurationProperty: kinesisanalytics.CfnApplicationV2.RunConfigurationProperty = {\n  applicationRestoreConfiguration: {\n    applicationRestoreType: 'applicationRestoreType',\n\n    // the properties below are optional\n    snapshotName: 'snapshotName',\n  },\n  flinkRunConfiguration: {\n    allowNonRestoredState: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.RunConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.RunConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst runConfigurationProperty: kinesisanalytics.CfnApplicationV2.RunConfigurationProperty = {\n  applicationRestoreConfiguration: {\n    applicationRestoreType: 'applicationRestoreType',\n\n    // the properties below are optional\n    snapshotName: 'snapshotName',\n  },\n  flinkRunConfiguration: {\n    allowNonRestoredState: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "80f5ebe1cca83a483084c11aabe211079057a183921cecb39500ea68e66b4f7a"
    },
    "904d16b527af2905ba9b6fc859478ca5260efe6fe95dcdeeff3137cab8ade493": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ns3_content_base_location_property = kinesisanalytics.CfnApplicationV2.S3ContentBaseLocationProperty(\n    bucket_arn=\"bucketArn\",\n\n    # the properties below are optional\n    base_path=\"basePath\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nS3ContentBaseLocationProperty s3ContentBaseLocationProperty = new S3ContentBaseLocationProperty {\n    BucketArn = \"bucketArn\",\n\n    // the properties below are optional\n    BasePath = \"basePath\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nS3ContentBaseLocationProperty s3ContentBaseLocationProperty = S3ContentBaseLocationProperty.builder()\n        .bucketArn(\"bucketArn\")\n\n        // the properties below are optional\n        .basePath(\"basePath\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ns3ContentBaseLocationProperty := &s3ContentBaseLocationProperty{\n\tbucketArn: jsii.String(\"bucketArn\"),\n\n\t// the properties below are optional\n\tbasePath: jsii.String(\"basePath\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst s3ContentBaseLocationProperty: kinesisanalytics.CfnApplicationV2.S3ContentBaseLocationProperty = {\n  bucketArn: 'bucketArn',\n\n  // the properties below are optional\n  basePath: 'basePath',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.S3ContentBaseLocationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.S3ContentBaseLocationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3ContentBaseLocationProperty: kinesisanalytics.CfnApplicationV2.S3ContentBaseLocationProperty = {\n  bucketArn: 'bucketArn',\n\n  // the properties below are optional\n  basePath: 'basePath',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "7c721f10c78db73d55a35951ed1dd7349e513e71cc72f26b1d8abfd067a21be8"
    },
    "a842d6366fad890947f08bde682c65195a65a6074d685e4e7ed9bd893da6b73c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ns3_content_location_property = kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty(\n    bucket_arn=\"bucketArn\",\n    file_key=\"fileKey\",\n\n    # the properties below are optional\n    object_version=\"objectVersion\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nS3ContentLocationProperty s3ContentLocationProperty = new S3ContentLocationProperty {\n    BucketArn = \"bucketArn\",\n    FileKey = \"fileKey\",\n\n    // the properties below are optional\n    ObjectVersion = \"objectVersion\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nS3ContentLocationProperty s3ContentLocationProperty = S3ContentLocationProperty.builder()\n        .bucketArn(\"bucketArn\")\n        .fileKey(\"fileKey\")\n\n        // the properties below are optional\n        .objectVersion(\"objectVersion\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ns3ContentLocationProperty := &s3ContentLocationProperty{\n\tbucketArn: jsii.String(\"bucketArn\"),\n\tfileKey: jsii.String(\"fileKey\"),\n\n\t// the properties below are optional\n\tobjectVersion: jsii.String(\"objectVersion\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst s3ContentLocationProperty: kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty = {\n  bucketArn: 'bucketArn',\n  fileKey: 'fileKey',\n\n  // the properties below are optional\n  objectVersion: 'objectVersion',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3ContentLocationProperty: kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty = {\n  bucketArn: 'bucketArn',\n  fileKey: 'fileKey',\n\n  // the properties below are optional\n  objectVersion: 'objectVersion',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "70da6645039326e47531462e1540aedae00598de6bf38fd66e8d51518a5b0beb"
    },
    "0c57a07c44ffa9bf054313231f4d7fd1eb1aa794fe8f5e1db3a11921c603614e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nsql_application_configuration_property = kinesisanalytics.CfnApplicationV2.SqlApplicationConfigurationProperty(\n    inputs=[kinesisanalytics.CfnApplicationV2.InputProperty(\n        input_schema=kinesisanalytics.CfnApplicationV2.InputSchemaProperty(\n            record_columns=[kinesisanalytics.CfnApplicationV2.RecordColumnProperty(\n                name=\"name\",\n                sql_type=\"sqlType\",\n\n                # the properties below are optional\n                mapping=\"mapping\"\n            )],\n            record_format=kinesisanalytics.CfnApplicationV2.RecordFormatProperty(\n                record_format_type=\"recordFormatType\",\n\n                # the properties below are optional\n                mapping_parameters=kinesisanalytics.CfnApplicationV2.MappingParametersProperty(\n                    csv_mapping_parameters=kinesisanalytics.CfnApplicationV2.CSVMappingParametersProperty(\n                        record_column_delimiter=\"recordColumnDelimiter\",\n                        record_row_delimiter=\"recordRowDelimiter\"\n                    ),\n                    json_mapping_parameters=kinesisanalytics.CfnApplicationV2.JSONMappingParametersProperty(\n                        record_row_path=\"recordRowPath\"\n                    )\n                )\n            ),\n\n            # the properties below are optional\n            record_encoding=\"recordEncoding\"\n        ),\n        name_prefix=\"namePrefix\",\n\n        # the properties below are optional\n        input_parallelism=kinesisanalytics.CfnApplicationV2.InputParallelismProperty(\n            count=123\n        ),\n        input_processing_configuration=kinesisanalytics.CfnApplicationV2.InputProcessingConfigurationProperty(\n            input_lambda_processor=kinesisanalytics.CfnApplicationV2.InputLambdaProcessorProperty(\n                resource_arn=\"resourceArn\"\n            )\n        ),\n        kinesis_firehose_input=kinesisanalytics.CfnApplicationV2.KinesisFirehoseInputProperty(\n            resource_arn=\"resourceArn\"\n        ),\n        kinesis_streams_input=kinesisanalytics.CfnApplicationV2.KinesisStreamsInputProperty(\n            resource_arn=\"resourceArn\"\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nSqlApplicationConfigurationProperty sqlApplicationConfigurationProperty = new SqlApplicationConfigurationProperty {\n    Inputs = new [] { new InputProperty {\n        InputSchema = new InputSchemaProperty {\n            RecordColumns = new [] { new RecordColumnProperty {\n                Name = \"name\",\n                SqlType = \"sqlType\",\n\n                // the properties below are optional\n                Mapping = \"mapping\"\n            } },\n            RecordFormat = new RecordFormatProperty {\n                RecordFormatType = \"recordFormatType\",\n\n                // the properties below are optional\n                MappingParameters = new MappingParametersProperty {\n                    CsvMappingParameters = new CSVMappingParametersProperty {\n                        RecordColumnDelimiter = \"recordColumnDelimiter\",\n                        RecordRowDelimiter = \"recordRowDelimiter\"\n                    },\n                    JsonMappingParameters = new JSONMappingParametersProperty {\n                        RecordRowPath = \"recordRowPath\"\n                    }\n                }\n            },\n\n            // the properties below are optional\n            RecordEncoding = \"recordEncoding\"\n        },\n        NamePrefix = \"namePrefix\",\n\n        // the properties below are optional\n        InputParallelism = new InputParallelismProperty {\n            Count = 123\n        },\n        InputProcessingConfiguration = new InputProcessingConfigurationProperty {\n            InputLambdaProcessor = new InputLambdaProcessorProperty {\n                ResourceArn = \"resourceArn\"\n            }\n        },\n        KinesisFirehoseInput = new KinesisFirehoseInputProperty {\n            ResourceArn = \"resourceArn\"\n        },\n        KinesisStreamsInput = new KinesisStreamsInputProperty {\n            ResourceArn = \"resourceArn\"\n        }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nSqlApplicationConfigurationProperty sqlApplicationConfigurationProperty = SqlApplicationConfigurationProperty.builder()\n        .inputs(List.of(InputProperty.builder()\n                .inputSchema(InputSchemaProperty.builder()\n                        .recordColumns(List.of(RecordColumnProperty.builder()\n                                .name(\"name\")\n                                .sqlType(\"sqlType\")\n\n                                // the properties below are optional\n                                .mapping(\"mapping\")\n                                .build()))\n                        .recordFormat(RecordFormatProperty.builder()\n                                .recordFormatType(\"recordFormatType\")\n\n                                // the properties below are optional\n                                .mappingParameters(MappingParametersProperty.builder()\n                                        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                                .recordRowDelimiter(\"recordRowDelimiter\")\n                                                .build())\n                                        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                                .recordRowPath(\"recordRowPath\")\n                                                .build())\n                                        .build())\n                                .build())\n\n                        // the properties below are optional\n                        .recordEncoding(\"recordEncoding\")\n                        .build())\n                .namePrefix(\"namePrefix\")\n\n                // the properties below are optional\n                .inputParallelism(InputParallelismProperty.builder()\n                        .count(123)\n                        .build())\n                .inputProcessingConfiguration(InputProcessingConfigurationProperty.builder()\n                        .inputLambdaProcessor(InputLambdaProcessorProperty.builder()\n                                .resourceArn(\"resourceArn\")\n                                .build())\n                        .build())\n                .kinesisFirehoseInput(KinesisFirehoseInputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .build())\n                .kinesisStreamsInput(KinesisStreamsInputProperty.builder()\n                        .resourceArn(\"resourceArn\")\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nsqlApplicationConfigurationProperty := &sqlApplicationConfigurationProperty{\n\tinputs: []interface{}{\n\t\t&inputProperty{\n\t\t\tinputSchema: &inputSchemaProperty{\n\t\t\t\trecordColumns: []interface{}{\n\t\t\t\t\t&recordColumnProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trecordFormat: &recordFormatProperty{\n\t\t\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t\t\t},\n\t\t\tnamePrefix: jsii.String(\"namePrefix\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinputParallelism: &inputParallelismProperty{\n\t\t\t\tcount: jsii.Number(123),\n\t\t\t},\n\t\t\tinputProcessingConfiguration: &inputProcessingConfigurationProperty{\n\t\t\t\tinputLambdaProcessor: &inputLambdaProcessorProperty{\n\t\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tkinesisFirehoseInput: &kinesisFirehoseInputProperty{\n\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t},\n\t\t\tkinesisStreamsInput: &kinesisStreamsInputProperty{\n\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst sqlApplicationConfigurationProperty: kinesisanalytics.CfnApplicationV2.SqlApplicationConfigurationProperty = {\n  inputs: [{\n    inputSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n    namePrefix: 'namePrefix',\n\n    // the properties below are optional\n    inputParallelism: {\n      count: 123,\n    },\n    inputProcessingConfiguration: {\n      inputLambdaProcessor: {\n        resourceArn: 'resourceArn',\n      },\n    },\n    kinesisFirehoseInput: {\n      resourceArn: 'resourceArn',\n    },\n    kinesisStreamsInput: {\n      resourceArn: 'resourceArn',\n    },\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.SqlApplicationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.SqlApplicationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sqlApplicationConfigurationProperty: kinesisanalytics.CfnApplicationV2.SqlApplicationConfigurationProperty = {\n  inputs: [{\n    inputSchema: {\n      recordColumns: [{\n        name: 'name',\n        sqlType: 'sqlType',\n\n        // the properties below are optional\n        mapping: 'mapping',\n      }],\n      recordFormat: {\n        recordFormatType: 'recordFormatType',\n\n        // the properties below are optional\n        mappingParameters: {\n          csvMappingParameters: {\n            recordColumnDelimiter: 'recordColumnDelimiter',\n            recordRowDelimiter: 'recordRowDelimiter',\n          },\n          jsonMappingParameters: {\n            recordRowPath: 'recordRowPath',\n          },\n        },\n      },\n\n      // the properties below are optional\n      recordEncoding: 'recordEncoding',\n    },\n    namePrefix: 'namePrefix',\n\n    // the properties below are optional\n    inputParallelism: {\n      count: 123,\n    },\n    inputProcessingConfiguration: {\n      inputLambdaProcessor: {\n        resourceArn: 'resourceArn',\n      },\n    },\n    kinesisFirehoseInput: {\n      resourceArn: 'resourceArn',\n    },\n    kinesisStreamsInput: {\n      resourceArn: 'resourceArn',\n    },\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 13,
        "75": 30,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 13,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 25,
        "290": 1
      },
      "fqnsFingerprint": "95f11ad387190147479439b3cf7fb14d918c16592b17effac81e536c4b7d929b"
    },
    "b773ebec7492507d5f02b940e127595ced2d97754e553adeca5d87851e722b03": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nvpc_configuration_property = kinesisanalytics.CfnApplicationV2.VpcConfigurationProperty(\n    security_group_ids=[\"securityGroupIds\"],\n    subnet_ids=[\"subnetIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nVpcConfigurationProperty vpcConfigurationProperty = new VpcConfigurationProperty {\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    SubnetIds = new [] { \"subnetIds\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nVpcConfigurationProperty vpcConfigurationProperty = VpcConfigurationProperty.builder()\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .subnetIds(List.of(\"subnetIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nvpcConfigurationProperty := &vpcConfigurationProperty{\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst vpcConfigurationProperty: kinesisanalytics.CfnApplicationV2.VpcConfigurationProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnetIds: ['subnetIds'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.VpcConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.VpcConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vpcConfigurationProperty: kinesisanalytics.CfnApplicationV2.VpcConfigurationProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnetIds: ['subnetIds'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "4e9301ec16bd5719cc7e6589dc4bfdc5568bac71d90d5e0184491c8d0bae1ea0"
    },
    "6491a57b27901380d4dc382d1bcccdcedf590e56794b67ab496afc6c5001abc8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nzeppelin_application_configuration_property = kinesisanalytics.CfnApplicationV2.ZeppelinApplicationConfigurationProperty(\n    catalog_configuration=kinesisanalytics.CfnApplicationV2.CatalogConfigurationProperty(\n        glue_data_catalog_configuration=kinesisanalytics.CfnApplicationV2.GlueDataCatalogConfigurationProperty(\n            database_arn=\"databaseArn\"\n        )\n    ),\n    custom_artifacts_configuration=[kinesisanalytics.CfnApplicationV2.CustomArtifactConfigurationProperty(\n        artifact_type=\"artifactType\",\n\n        # the properties below are optional\n        maven_reference=kinesisanalytics.CfnApplicationV2.MavenReferenceProperty(\n            artifact_id=\"artifactId\",\n            group_id=\"groupId\",\n            version=\"version\"\n        ),\n        s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty(\n            bucket_arn=\"bucketArn\",\n            file_key=\"fileKey\",\n\n            # the properties below are optional\n            object_version=\"objectVersion\"\n        )\n    )],\n    deploy_as_application_configuration=kinesisanalytics.CfnApplicationV2.DeployAsApplicationConfigurationProperty(\n        s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentBaseLocationProperty(\n            bucket_arn=\"bucketArn\",\n\n            # the properties below are optional\n            base_path=\"basePath\"\n        )\n    ),\n    monitoring_configuration=kinesisanalytics.CfnApplicationV2.ZeppelinMonitoringConfigurationProperty(\n        log_level=\"logLevel\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nZeppelinApplicationConfigurationProperty zeppelinApplicationConfigurationProperty = new ZeppelinApplicationConfigurationProperty {\n    CatalogConfiguration = new CatalogConfigurationProperty {\n        GlueDataCatalogConfiguration = new GlueDataCatalogConfigurationProperty {\n            DatabaseArn = \"databaseArn\"\n        }\n    },\n    CustomArtifactsConfiguration = new [] { new CustomArtifactConfigurationProperty {\n        ArtifactType = \"artifactType\",\n\n        // the properties below are optional\n        MavenReference = new MavenReferenceProperty {\n            ArtifactId = \"artifactId\",\n            GroupId = \"groupId\",\n            Version = \"version\"\n        },\n        S3ContentLocation = new S3ContentLocationProperty {\n            BucketArn = \"bucketArn\",\n            FileKey = \"fileKey\",\n\n            // the properties below are optional\n            ObjectVersion = \"objectVersion\"\n        }\n    } },\n    DeployAsApplicationConfiguration = new DeployAsApplicationConfigurationProperty {\n        S3ContentLocation = new S3ContentBaseLocationProperty {\n            BucketArn = \"bucketArn\",\n\n            // the properties below are optional\n            BasePath = \"basePath\"\n        }\n    },\n    MonitoringConfiguration = new ZeppelinMonitoringConfigurationProperty {\n        LogLevel = \"logLevel\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nZeppelinApplicationConfigurationProperty zeppelinApplicationConfigurationProperty = ZeppelinApplicationConfigurationProperty.builder()\n        .catalogConfiguration(CatalogConfigurationProperty.builder()\n                .glueDataCatalogConfiguration(GlueDataCatalogConfigurationProperty.builder()\n                        .databaseArn(\"databaseArn\")\n                        .build())\n                .build())\n        .customArtifactsConfiguration(List.of(CustomArtifactConfigurationProperty.builder()\n                .artifactType(\"artifactType\")\n\n                // the properties below are optional\n                .mavenReference(MavenReferenceProperty.builder()\n                        .artifactId(\"artifactId\")\n                        .groupId(\"groupId\")\n                        .version(\"version\")\n                        .build())\n                .s3ContentLocation(S3ContentLocationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .fileKey(\"fileKey\")\n\n                        // the properties below are optional\n                        .objectVersion(\"objectVersion\")\n                        .build())\n                .build()))\n        .deployAsApplicationConfiguration(DeployAsApplicationConfigurationProperty.builder()\n                .s3ContentLocation(S3ContentBaseLocationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n\n                        // the properties below are optional\n                        .basePath(\"basePath\")\n                        .build())\n                .build())\n        .monitoringConfiguration(ZeppelinMonitoringConfigurationProperty.builder()\n                .logLevel(\"logLevel\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nzeppelinApplicationConfigurationProperty := &zeppelinApplicationConfigurationProperty{\n\tcatalogConfiguration: &catalogConfigurationProperty{\n\t\tglueDataCatalogConfiguration: &glueDataCatalogConfigurationProperty{\n\t\t\tdatabaseArn: jsii.String(\"databaseArn\"),\n\t\t},\n\t},\n\tcustomArtifactsConfiguration: []interface{}{\n\t\t&customArtifactConfigurationProperty{\n\t\t\tartifactType: jsii.String(\"artifactType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmavenReference: &mavenReferenceProperty{\n\t\t\t\tartifactId: jsii.String(\"artifactId\"),\n\t\t\t\tgroupId: jsii.String(\"groupId\"),\n\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t},\n\t\t\ts3ContentLocation: &s3ContentLocationProperty{\n\t\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\t\tfileKey: jsii.String(\"fileKey\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tobjectVersion: jsii.String(\"objectVersion\"),\n\t\t\t},\n\t\t},\n\t},\n\tdeployAsApplicationConfiguration: &deployAsApplicationConfigurationProperty{\n\t\ts3ContentLocation: &s3ContentBaseLocationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbasePath: jsii.String(\"basePath\"),\n\t\t},\n\t},\n\tmonitoringConfiguration: &zeppelinMonitoringConfigurationProperty{\n\t\tlogLevel: jsii.String(\"logLevel\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst zeppelinApplicationConfigurationProperty: kinesisanalytics.CfnApplicationV2.ZeppelinApplicationConfigurationProperty = {\n  catalogConfiguration: {\n    glueDataCatalogConfiguration: {\n      databaseArn: 'databaseArn',\n    },\n  },\n  customArtifactsConfiguration: [{\n    artifactType: 'artifactType',\n\n    // the properties below are optional\n    mavenReference: {\n      artifactId: 'artifactId',\n      groupId: 'groupId',\n      version: 'version',\n    },\n    s3ContentLocation: {\n      bucketArn: 'bucketArn',\n      fileKey: 'fileKey',\n\n      // the properties below are optional\n      objectVersion: 'objectVersion',\n    },\n  }],\n  deployAsApplicationConfiguration: {\n    s3ContentLocation: {\n      bucketArn: 'bucketArn',\n\n      // the properties below are optional\n      basePath: 'basePath',\n    },\n  },\n  monitoringConfiguration: {\n    logLevel: 'logLevel',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ZeppelinApplicationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ZeppelinApplicationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst zeppelinApplicationConfigurationProperty: kinesisanalytics.CfnApplicationV2.ZeppelinApplicationConfigurationProperty = {\n  catalogConfiguration: {\n    glueDataCatalogConfiguration: {\n      databaseArn: 'databaseArn',\n    },\n  },\n  customArtifactsConfiguration: [{\n    artifactType: 'artifactType',\n\n    // the properties below are optional\n    mavenReference: {\n      artifactId: 'artifactId',\n      groupId: 'groupId',\n      version: 'version',\n    },\n    s3ContentLocation: {\n      bucketArn: 'bucketArn',\n      fileKey: 'fileKey',\n\n      // the properties below are optional\n      objectVersion: 'objectVersion',\n    },\n  }],\n  deployAsApplicationConfiguration: {\n    s3ContentLocation: {\n      bucketArn: 'bucketArn',\n\n      // the properties below are optional\n      basePath: 'basePath',\n    },\n  },\n  monitoringConfiguration: {\n    logLevel: 'logLevel',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 12,
        "75": 24,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 9,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 19,
        "290": 1
      },
      "fqnsFingerprint": "9a1ab80f7a966c5f1182dc1e6c23d3f04cfb3d937dc808d56a44cff60c95ae3a"
    },
    "00b94a45242d6bc984d490105a4a1dbe15e5298a69ec36a5b5830fec03a189fa": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\nzeppelin_monitoring_configuration_property = kinesisanalytics.CfnApplicationV2.ZeppelinMonitoringConfigurationProperty(\n    log_level=\"logLevel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nZeppelinMonitoringConfigurationProperty zeppelinMonitoringConfigurationProperty = new ZeppelinMonitoringConfigurationProperty {\n    LogLevel = \"logLevel\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nZeppelinMonitoringConfigurationProperty zeppelinMonitoringConfigurationProperty = ZeppelinMonitoringConfigurationProperty.builder()\n        .logLevel(\"logLevel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\nzeppelinMonitoringConfigurationProperty := &zeppelinMonitoringConfigurationProperty{\n\tlogLevel: jsii.String(\"logLevel\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst zeppelinMonitoringConfigurationProperty: kinesisanalytics.CfnApplicationV2.ZeppelinMonitoringConfigurationProperty = {\n  logLevel: 'logLevel',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ZeppelinMonitoringConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2.ZeppelinMonitoringConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst zeppelinMonitoringConfigurationProperty: kinesisanalytics.CfnApplicationV2.ZeppelinMonitoringConfigurationProperty = {\n  logLevel: 'logLevel',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "0cbcd68bf32e9e212d39fc80b421090a6565da65990b2ff95bc3302159db8153"
    },
    "297855d7cfc71e004853c13cc5b5314fbc40176420dd49e30ec8ab53f8917815": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisanalytics as kinesisanalytics\n\ncfn_application_v2_props = kinesisanalytics.CfnApplicationV2Props(\n    runtime_environment=\"runtimeEnvironment\",\n    service_execution_role=\"serviceExecutionRole\",\n\n    # the properties below are optional\n    application_configuration=kinesisanalytics.CfnApplicationV2.ApplicationConfigurationProperty(\n        application_code_configuration=kinesisanalytics.CfnApplicationV2.ApplicationCodeConfigurationProperty(\n            code_content=kinesisanalytics.CfnApplicationV2.CodeContentProperty(\n                s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty(\n                    bucket_arn=\"bucketArn\",\n                    file_key=\"fileKey\",\n\n                    # the properties below are optional\n                    object_version=\"objectVersion\"\n                ),\n                text_content=\"textContent\",\n                zip_file_content=\"zipFileContent\"\n            ),\n            code_content_type=\"codeContentType\"\n        ),\n        application_snapshot_configuration=kinesisanalytics.CfnApplicationV2.ApplicationSnapshotConfigurationProperty(\n            snapshots_enabled=False\n        ),\n        environment_properties=kinesisanalytics.CfnApplicationV2.EnvironmentPropertiesProperty(\n            property_groups=[kinesisanalytics.CfnApplicationV2.PropertyGroupProperty(\n                property_group_id=\"propertyGroupId\",\n                property_map={\n                    \"property_map_key\": \"propertyMap\"\n                }\n            )]\n        ),\n        flink_application_configuration=kinesisanalytics.CfnApplicationV2.FlinkApplicationConfigurationProperty(\n            checkpoint_configuration=kinesisanalytics.CfnApplicationV2.CheckpointConfigurationProperty(\n                configuration_type=\"configurationType\",\n\n                # the properties below are optional\n                checkpointing_enabled=False,\n                checkpoint_interval=123,\n                min_pause_between_checkpoints=123\n            ),\n            monitoring_configuration=kinesisanalytics.CfnApplicationV2.MonitoringConfigurationProperty(\n                configuration_type=\"configurationType\",\n\n                # the properties below are optional\n                log_level=\"logLevel\",\n                metrics_level=\"metricsLevel\"\n            ),\n            parallelism_configuration=kinesisanalytics.CfnApplicationV2.ParallelismConfigurationProperty(\n                configuration_type=\"configurationType\",\n\n                # the properties below are optional\n                auto_scaling_enabled=False,\n                parallelism=123,\n                parallelism_per_kpu=123\n            )\n        ),\n        sql_application_configuration=kinesisanalytics.CfnApplicationV2.SqlApplicationConfigurationProperty(\n            inputs=[kinesisanalytics.CfnApplicationV2.InputProperty(\n                input_schema=kinesisanalytics.CfnApplicationV2.InputSchemaProperty(\n                    record_columns=[kinesisanalytics.CfnApplicationV2.RecordColumnProperty(\n                        name=\"name\",\n                        sql_type=\"sqlType\",\n\n                        # the properties below are optional\n                        mapping=\"mapping\"\n                    )],\n                    record_format=kinesisanalytics.CfnApplicationV2.RecordFormatProperty(\n                        record_format_type=\"recordFormatType\",\n\n                        # the properties below are optional\n                        mapping_parameters=kinesisanalytics.CfnApplicationV2.MappingParametersProperty(\n                            csv_mapping_parameters=kinesisanalytics.CfnApplicationV2.CSVMappingParametersProperty(\n                                record_column_delimiter=\"recordColumnDelimiter\",\n                                record_row_delimiter=\"recordRowDelimiter\"\n                            ),\n                            json_mapping_parameters=kinesisanalytics.CfnApplicationV2.JSONMappingParametersProperty(\n                                record_row_path=\"recordRowPath\"\n                            )\n                        )\n                    ),\n\n                    # the properties below are optional\n                    record_encoding=\"recordEncoding\"\n                ),\n                name_prefix=\"namePrefix\",\n\n                # the properties below are optional\n                input_parallelism=kinesisanalytics.CfnApplicationV2.InputParallelismProperty(\n                    count=123\n                ),\n                input_processing_configuration=kinesisanalytics.CfnApplicationV2.InputProcessingConfigurationProperty(\n                    input_lambda_processor=kinesisanalytics.CfnApplicationV2.InputLambdaProcessorProperty(\n                        resource_arn=\"resourceArn\"\n                    )\n                ),\n                kinesis_firehose_input=kinesisanalytics.CfnApplicationV2.KinesisFirehoseInputProperty(\n                    resource_arn=\"resourceArn\"\n                ),\n                kinesis_streams_input=kinesisanalytics.CfnApplicationV2.KinesisStreamsInputProperty(\n                    resource_arn=\"resourceArn\"\n                )\n            )]\n        ),\n        vpc_configurations=[kinesisanalytics.CfnApplicationV2.VpcConfigurationProperty(\n            security_group_ids=[\"securityGroupIds\"],\n            subnet_ids=[\"subnetIds\"]\n        )],\n        zeppelin_application_configuration=kinesisanalytics.CfnApplicationV2.ZeppelinApplicationConfigurationProperty(\n            catalog_configuration=kinesisanalytics.CfnApplicationV2.CatalogConfigurationProperty(\n                glue_data_catalog_configuration=kinesisanalytics.CfnApplicationV2.GlueDataCatalogConfigurationProperty(\n                    database_arn=\"databaseArn\"\n                )\n            ),\n            custom_artifacts_configuration=[kinesisanalytics.CfnApplicationV2.CustomArtifactConfigurationProperty(\n                artifact_type=\"artifactType\",\n\n                # the properties below are optional\n                maven_reference=kinesisanalytics.CfnApplicationV2.MavenReferenceProperty(\n                    artifact_id=\"artifactId\",\n                    group_id=\"groupId\",\n                    version=\"version\"\n                ),\n                s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentLocationProperty(\n                    bucket_arn=\"bucketArn\",\n                    file_key=\"fileKey\",\n\n                    # the properties below are optional\n                    object_version=\"objectVersion\"\n                )\n            )],\n            deploy_as_application_configuration=kinesisanalytics.CfnApplicationV2.DeployAsApplicationConfigurationProperty(\n                s3_content_location=kinesisanalytics.CfnApplicationV2.S3ContentBaseLocationProperty(\n                    bucket_arn=\"bucketArn\",\n\n                    # the properties below are optional\n                    base_path=\"basePath\"\n                )\n            ),\n            monitoring_configuration=kinesisanalytics.CfnApplicationV2.ZeppelinMonitoringConfigurationProperty(\n                log_level=\"logLevel\"\n            )\n        )\n    ),\n    application_description=\"applicationDescription\",\n    application_maintenance_configuration=kinesisanalytics.CfnApplicationV2.ApplicationMaintenanceConfigurationProperty(\n        application_maintenance_window_start_time=\"applicationMaintenanceWindowStartTime\"\n    ),\n    application_mode=\"applicationMode\",\n    application_name=\"applicationName\",\n    run_configuration=kinesisanalytics.CfnApplicationV2.RunConfigurationProperty(\n        application_restore_configuration=kinesisanalytics.CfnApplicationV2.ApplicationRestoreConfigurationProperty(\n            application_restore_type=\"applicationRestoreType\",\n\n            # the properties below are optional\n            snapshot_name=\"snapshotName\"\n        ),\n        flink_run_configuration=kinesisanalytics.CfnApplicationV2.FlinkRunConfigurationProperty(\n            allow_non_restored_state=False\n        )\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisAnalytics;\n\nCfnApplicationV2Props cfnApplicationV2Props = new CfnApplicationV2Props {\n    RuntimeEnvironment = \"runtimeEnvironment\",\n    ServiceExecutionRole = \"serviceExecutionRole\",\n\n    // the properties below are optional\n    ApplicationConfiguration = new ApplicationConfigurationProperty {\n        ApplicationCodeConfiguration = new ApplicationCodeConfigurationProperty {\n            CodeContent = new CodeContentProperty {\n                S3ContentLocation = new S3ContentLocationProperty {\n                    BucketArn = \"bucketArn\",\n                    FileKey = \"fileKey\",\n\n                    // the properties below are optional\n                    ObjectVersion = \"objectVersion\"\n                },\n                TextContent = \"textContent\",\n                ZipFileContent = \"zipFileContent\"\n            },\n            CodeContentType = \"codeContentType\"\n        },\n        ApplicationSnapshotConfiguration = new ApplicationSnapshotConfigurationProperty {\n            SnapshotsEnabled = false\n        },\n        EnvironmentProperties = new EnvironmentPropertiesProperty {\n            PropertyGroups = new [] { new PropertyGroupProperty {\n                PropertyGroupId = \"propertyGroupId\",\n                PropertyMap = new Dictionary<string, string> {\n                    { \"propertyMapKey\", \"propertyMap\" }\n                }\n            } }\n        },\n        FlinkApplicationConfiguration = new FlinkApplicationConfigurationProperty {\n            CheckpointConfiguration = new CheckpointConfigurationProperty {\n                ConfigurationType = \"configurationType\",\n\n                // the properties below are optional\n                CheckpointingEnabled = false,\n                CheckpointInterval = 123,\n                MinPauseBetweenCheckpoints = 123\n            },\n            MonitoringConfiguration = new MonitoringConfigurationProperty {\n                ConfigurationType = \"configurationType\",\n\n                // the properties below are optional\n                LogLevel = \"logLevel\",\n                MetricsLevel = \"metricsLevel\"\n            },\n            ParallelismConfiguration = new ParallelismConfigurationProperty {\n                ConfigurationType = \"configurationType\",\n\n                // the properties below are optional\n                AutoScalingEnabled = false,\n                Parallelism = 123,\n                ParallelismPerKpu = 123\n            }\n        },\n        SqlApplicationConfiguration = new SqlApplicationConfigurationProperty {\n            Inputs = new [] { new InputProperty {\n                InputSchema = new InputSchemaProperty {\n                    RecordColumns = new [] { new RecordColumnProperty {\n                        Name = \"name\",\n                        SqlType = \"sqlType\",\n\n                        // the properties below are optional\n                        Mapping = \"mapping\"\n                    } },\n                    RecordFormat = new RecordFormatProperty {\n                        RecordFormatType = \"recordFormatType\",\n\n                        // the properties below are optional\n                        MappingParameters = new MappingParametersProperty {\n                            CsvMappingParameters = new CSVMappingParametersProperty {\n                                RecordColumnDelimiter = \"recordColumnDelimiter\",\n                                RecordRowDelimiter = \"recordRowDelimiter\"\n                            },\n                            JsonMappingParameters = new JSONMappingParametersProperty {\n                                RecordRowPath = \"recordRowPath\"\n                            }\n                        }\n                    },\n\n                    // the properties below are optional\n                    RecordEncoding = \"recordEncoding\"\n                },\n                NamePrefix = \"namePrefix\",\n\n                // the properties below are optional\n                InputParallelism = new InputParallelismProperty {\n                    Count = 123\n                },\n                InputProcessingConfiguration = new InputProcessingConfigurationProperty {\n                    InputLambdaProcessor = new InputLambdaProcessorProperty {\n                        ResourceArn = \"resourceArn\"\n                    }\n                },\n                KinesisFirehoseInput = new KinesisFirehoseInputProperty {\n                    ResourceArn = \"resourceArn\"\n                },\n                KinesisStreamsInput = new KinesisStreamsInputProperty {\n                    ResourceArn = \"resourceArn\"\n                }\n            } }\n        },\n        VpcConfigurations = new [] { new VpcConfigurationProperty {\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            SubnetIds = new [] { \"subnetIds\" }\n        } },\n        ZeppelinApplicationConfiguration = new ZeppelinApplicationConfigurationProperty {\n            CatalogConfiguration = new CatalogConfigurationProperty {\n                GlueDataCatalogConfiguration = new GlueDataCatalogConfigurationProperty {\n                    DatabaseArn = \"databaseArn\"\n                }\n            },\n            CustomArtifactsConfiguration = new [] { new CustomArtifactConfigurationProperty {\n                ArtifactType = \"artifactType\",\n\n                // the properties below are optional\n                MavenReference = new MavenReferenceProperty {\n                    ArtifactId = \"artifactId\",\n                    GroupId = \"groupId\",\n                    Version = \"version\"\n                },\n                S3ContentLocation = new S3ContentLocationProperty {\n                    BucketArn = \"bucketArn\",\n                    FileKey = \"fileKey\",\n\n                    // the properties below are optional\n                    ObjectVersion = \"objectVersion\"\n                }\n            } },\n            DeployAsApplicationConfiguration = new DeployAsApplicationConfigurationProperty {\n                S3ContentLocation = new S3ContentBaseLocationProperty {\n                    BucketArn = \"bucketArn\",\n\n                    // the properties below are optional\n                    BasePath = \"basePath\"\n                }\n            },\n            MonitoringConfiguration = new ZeppelinMonitoringConfigurationProperty {\n                LogLevel = \"logLevel\"\n            }\n        }\n    },\n    ApplicationDescription = \"applicationDescription\",\n    ApplicationMaintenanceConfiguration = new ApplicationMaintenanceConfigurationProperty {\n        ApplicationMaintenanceWindowStartTime = \"applicationMaintenanceWindowStartTime\"\n    },\n    ApplicationMode = \"applicationMode\",\n    ApplicationName = \"applicationName\",\n    RunConfiguration = new RunConfigurationProperty {\n        ApplicationRestoreConfiguration = new ApplicationRestoreConfigurationProperty {\n            ApplicationRestoreType = \"applicationRestoreType\",\n\n            // the properties below are optional\n            SnapshotName = \"snapshotName\"\n        },\n        FlinkRunConfiguration = new FlinkRunConfigurationProperty {\n            AllowNonRestoredState = false\n        }\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisanalytics.*;\n\nCfnApplicationV2Props cfnApplicationV2Props = CfnApplicationV2Props.builder()\n        .runtimeEnvironment(\"runtimeEnvironment\")\n        .serviceExecutionRole(\"serviceExecutionRole\")\n\n        // the properties below are optional\n        .applicationConfiguration(ApplicationConfigurationProperty.builder()\n                .applicationCodeConfiguration(ApplicationCodeConfigurationProperty.builder()\n                        .codeContent(CodeContentProperty.builder()\n                                .s3ContentLocation(S3ContentLocationProperty.builder()\n                                        .bucketArn(\"bucketArn\")\n                                        .fileKey(\"fileKey\")\n\n                                        // the properties below are optional\n                                        .objectVersion(\"objectVersion\")\n                                        .build())\n                                .textContent(\"textContent\")\n                                .zipFileContent(\"zipFileContent\")\n                                .build())\n                        .codeContentType(\"codeContentType\")\n                        .build())\n                .applicationSnapshotConfiguration(ApplicationSnapshotConfigurationProperty.builder()\n                        .snapshotsEnabled(false)\n                        .build())\n                .environmentProperties(EnvironmentPropertiesProperty.builder()\n                        .propertyGroups(List.of(PropertyGroupProperty.builder()\n                                .propertyGroupId(\"propertyGroupId\")\n                                .propertyMap(Map.of(\n                                        \"propertyMapKey\", \"propertyMap\"))\n                                .build()))\n                        .build())\n                .flinkApplicationConfiguration(FlinkApplicationConfigurationProperty.builder()\n                        .checkpointConfiguration(CheckpointConfigurationProperty.builder()\n                                .configurationType(\"configurationType\")\n\n                                // the properties below are optional\n                                .checkpointingEnabled(false)\n                                .checkpointInterval(123)\n                                .minPauseBetweenCheckpoints(123)\n                                .build())\n                        .monitoringConfiguration(MonitoringConfigurationProperty.builder()\n                                .configurationType(\"configurationType\")\n\n                                // the properties below are optional\n                                .logLevel(\"logLevel\")\n                                .metricsLevel(\"metricsLevel\")\n                                .build())\n                        .parallelismConfiguration(ParallelismConfigurationProperty.builder()\n                                .configurationType(\"configurationType\")\n\n                                // the properties below are optional\n                                .autoScalingEnabled(false)\n                                .parallelism(123)\n                                .parallelismPerKpu(123)\n                                .build())\n                        .build())\n                .sqlApplicationConfiguration(SqlApplicationConfigurationProperty.builder()\n                        .inputs(List.of(InputProperty.builder()\n                                .inputSchema(InputSchemaProperty.builder()\n                                        .recordColumns(List.of(RecordColumnProperty.builder()\n                                                .name(\"name\")\n                                                .sqlType(\"sqlType\")\n\n                                                // the properties below are optional\n                                                .mapping(\"mapping\")\n                                                .build()))\n                                        .recordFormat(RecordFormatProperty.builder()\n                                                .recordFormatType(\"recordFormatType\")\n\n                                                // the properties below are optional\n                                                .mappingParameters(MappingParametersProperty.builder()\n                                                        .csvMappingParameters(CSVMappingParametersProperty.builder()\n                                                                .recordColumnDelimiter(\"recordColumnDelimiter\")\n                                                                .recordRowDelimiter(\"recordRowDelimiter\")\n                                                                .build())\n                                                        .jsonMappingParameters(JSONMappingParametersProperty.builder()\n                                                                .recordRowPath(\"recordRowPath\")\n                                                                .build())\n                                                        .build())\n                                                .build())\n\n                                        // the properties below are optional\n                                        .recordEncoding(\"recordEncoding\")\n                                        .build())\n                                .namePrefix(\"namePrefix\")\n\n                                // the properties below are optional\n                                .inputParallelism(InputParallelismProperty.builder()\n                                        .count(123)\n                                        .build())\n                                .inputProcessingConfiguration(InputProcessingConfigurationProperty.builder()\n                                        .inputLambdaProcessor(InputLambdaProcessorProperty.builder()\n                                                .resourceArn(\"resourceArn\")\n                                                .build())\n                                        .build())\n                                .kinesisFirehoseInput(KinesisFirehoseInputProperty.builder()\n                                        .resourceArn(\"resourceArn\")\n                                        .build())\n                                .kinesisStreamsInput(KinesisStreamsInputProperty.builder()\n                                        .resourceArn(\"resourceArn\")\n                                        .build())\n                                .build()))\n                        .build())\n                .vpcConfigurations(List.of(VpcConfigurationProperty.builder()\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnetIds(List.of(\"subnetIds\"))\n                        .build()))\n                .zeppelinApplicationConfiguration(ZeppelinApplicationConfigurationProperty.builder()\n                        .catalogConfiguration(CatalogConfigurationProperty.builder()\n                                .glueDataCatalogConfiguration(GlueDataCatalogConfigurationProperty.builder()\n                                        .databaseArn(\"databaseArn\")\n                                        .build())\n                                .build())\n                        .customArtifactsConfiguration(List.of(CustomArtifactConfigurationProperty.builder()\n                                .artifactType(\"artifactType\")\n\n                                // the properties below are optional\n                                .mavenReference(MavenReferenceProperty.builder()\n                                        .artifactId(\"artifactId\")\n                                        .groupId(\"groupId\")\n                                        .version(\"version\")\n                                        .build())\n                                .s3ContentLocation(S3ContentLocationProperty.builder()\n                                        .bucketArn(\"bucketArn\")\n                                        .fileKey(\"fileKey\")\n\n                                        // the properties below are optional\n                                        .objectVersion(\"objectVersion\")\n                                        .build())\n                                .build()))\n                        .deployAsApplicationConfiguration(DeployAsApplicationConfigurationProperty.builder()\n                                .s3ContentLocation(S3ContentBaseLocationProperty.builder()\n                                        .bucketArn(\"bucketArn\")\n\n                                        // the properties below are optional\n                                        .basePath(\"basePath\")\n                                        .build())\n                                .build())\n                        .monitoringConfiguration(ZeppelinMonitoringConfigurationProperty.builder()\n                                .logLevel(\"logLevel\")\n                                .build())\n                        .build())\n                .build())\n        .applicationDescription(\"applicationDescription\")\n        .applicationMaintenanceConfiguration(ApplicationMaintenanceConfigurationProperty.builder()\n                .applicationMaintenanceWindowStartTime(\"applicationMaintenanceWindowStartTime\")\n                .build())\n        .applicationMode(\"applicationMode\")\n        .applicationName(\"applicationName\")\n        .runConfiguration(RunConfigurationProperty.builder()\n                .applicationRestoreConfiguration(ApplicationRestoreConfigurationProperty.builder()\n                        .applicationRestoreType(\"applicationRestoreType\")\n\n                        // the properties below are optional\n                        .snapshotName(\"snapshotName\")\n                        .build())\n                .flinkRunConfiguration(FlinkRunConfigurationProperty.builder()\n                        .allowNonRestoredState(false)\n                        .build())\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisanalytics \"github.com/aws-samples/dummy/awscdkawskinesisanalytics\"\n\ncfnApplicationV2Props := &cfnApplicationV2Props{\n\truntimeEnvironment: jsii.String(\"runtimeEnvironment\"),\n\tserviceExecutionRole: jsii.String(\"serviceExecutionRole\"),\n\n\t// the properties below are optional\n\tapplicationConfiguration: &applicationConfigurationProperty{\n\t\tapplicationCodeConfiguration: &applicationCodeConfigurationProperty{\n\t\t\tcodeContent: &codeContentProperty{\n\t\t\t\ts3ContentLocation: &s3ContentLocationProperty{\n\t\t\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\t\t\tfileKey: jsii.String(\"fileKey\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tobjectVersion: jsii.String(\"objectVersion\"),\n\t\t\t\t},\n\t\t\t\ttextContent: jsii.String(\"textContent\"),\n\t\t\t\tzipFileContent: jsii.String(\"zipFileContent\"),\n\t\t\t},\n\t\t\tcodeContentType: jsii.String(\"codeContentType\"),\n\t\t},\n\t\tapplicationSnapshotConfiguration: &applicationSnapshotConfigurationProperty{\n\t\t\tsnapshotsEnabled: jsii.Boolean(false),\n\t\t},\n\t\tenvironmentProperties: &environmentPropertiesProperty{\n\t\t\tpropertyGroups: []interface{}{\n\t\t\t\t&propertyGroupProperty{\n\t\t\t\t\tpropertyGroupId: jsii.String(\"propertyGroupId\"),\n\t\t\t\t\tpropertyMap: map[string]*string{\n\t\t\t\t\t\t\"propertyMapKey\": jsii.String(\"propertyMap\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tflinkApplicationConfiguration: &flinkApplicationConfigurationProperty{\n\t\t\tcheckpointConfiguration: &checkpointConfigurationProperty{\n\t\t\t\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcheckpointingEnabled: jsii.Boolean(false),\n\t\t\t\tcheckpointInterval: jsii.Number(123),\n\t\t\t\tminPauseBetweenCheckpoints: jsii.Number(123),\n\t\t\t},\n\t\t\tmonitoringConfiguration: &monitoringConfigurationProperty{\n\t\t\t\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tlogLevel: jsii.String(\"logLevel\"),\n\t\t\t\tmetricsLevel: jsii.String(\"metricsLevel\"),\n\t\t\t},\n\t\t\tparallelismConfiguration: &parallelismConfigurationProperty{\n\t\t\t\tconfigurationType: jsii.String(\"configurationType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tautoScalingEnabled: jsii.Boolean(false),\n\t\t\t\tparallelism: jsii.Number(123),\n\t\t\t\tparallelismPerKpu: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\tsqlApplicationConfiguration: &sqlApplicationConfigurationProperty{\n\t\t\tinputs: []interface{}{\n\t\t\t\t&inputProperty{\n\t\t\t\t\tinputSchema: &inputSchemaProperty{\n\t\t\t\t\t\trecordColumns: []interface{}{\n\t\t\t\t\t\t\t&recordColumnProperty{\n\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\tsqlType: jsii.String(\"sqlType\"),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tmapping: jsii.String(\"mapping\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\trecordFormat: &recordFormatProperty{\n\t\t\t\t\t\t\trecordFormatType: jsii.String(\"recordFormatType\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tmappingParameters: &mappingParametersProperty{\n\t\t\t\t\t\t\t\tcsvMappingParameters: &cSVMappingParametersProperty{\n\t\t\t\t\t\t\t\t\trecordColumnDelimiter: jsii.String(\"recordColumnDelimiter\"),\n\t\t\t\t\t\t\t\t\trecordRowDelimiter: jsii.String(\"recordRowDelimiter\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tjsonMappingParameters: &jSONMappingParametersProperty{\n\t\t\t\t\t\t\t\t\trecordRowPath: jsii.String(\"recordRowPath\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\trecordEncoding: jsii.String(\"recordEncoding\"),\n\t\t\t\t\t},\n\t\t\t\t\tnamePrefix: jsii.String(\"namePrefix\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinputParallelism: &inputParallelismProperty{\n\t\t\t\t\t\tcount: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tinputProcessingConfiguration: &inputProcessingConfigurationProperty{\n\t\t\t\t\t\tinputLambdaProcessor: &inputLambdaProcessorProperty{\n\t\t\t\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tkinesisFirehoseInput: &kinesisFirehoseInputProperty{\n\t\t\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\t\t},\n\t\t\t\t\tkinesisStreamsInput: &kinesisStreamsInputProperty{\n\t\t\t\t\t\tresourceArn: jsii.String(\"resourceArn\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tvpcConfigurations: []interface{}{\n\t\t\t&vpcConfigurationProperty{\n\t\t\t\tsecurityGroupIds: []*string{\n\t\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t\t},\n\t\t\t\tsubnetIds: []*string{\n\t\t\t\t\tjsii.String(\"subnetIds\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tzeppelinApplicationConfiguration: &zeppelinApplicationConfigurationProperty{\n\t\t\tcatalogConfiguration: &catalogConfigurationProperty{\n\t\t\t\tglueDataCatalogConfiguration: &glueDataCatalogConfigurationProperty{\n\t\t\t\t\tdatabaseArn: jsii.String(\"databaseArn\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcustomArtifactsConfiguration: []interface{}{\n\t\t\t\t&customArtifactConfigurationProperty{\n\t\t\t\t\tartifactType: jsii.String(\"artifactType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tmavenReference: &mavenReferenceProperty{\n\t\t\t\t\t\tartifactId: jsii.String(\"artifactId\"),\n\t\t\t\t\t\tgroupId: jsii.String(\"groupId\"),\n\t\t\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t\t\t},\n\t\t\t\t\ts3ContentLocation: &s3ContentLocationProperty{\n\t\t\t\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\t\t\t\tfileKey: jsii.String(\"fileKey\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tobjectVersion: jsii.String(\"objectVersion\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdeployAsApplicationConfiguration: &deployAsApplicationConfigurationProperty{\n\t\t\t\ts3ContentLocation: &s3ContentBaseLocationProperty{\n\t\t\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tbasePath: jsii.String(\"basePath\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmonitoringConfiguration: &zeppelinMonitoringConfigurationProperty{\n\t\t\t\tlogLevel: jsii.String(\"logLevel\"),\n\t\t\t},\n\t\t},\n\t},\n\tapplicationDescription: jsii.String(\"applicationDescription\"),\n\tapplicationMaintenanceConfiguration: &applicationMaintenanceConfigurationProperty{\n\t\tapplicationMaintenanceWindowStartTime: jsii.String(\"applicationMaintenanceWindowStartTime\"),\n\t},\n\tapplicationMode: jsii.String(\"applicationMode\"),\n\tapplicationName: jsii.String(\"applicationName\"),\n\trunConfiguration: &runConfigurationProperty{\n\t\tapplicationRestoreConfiguration: &applicationRestoreConfigurationProperty{\n\t\t\tapplicationRestoreType: jsii.String(\"applicationRestoreType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tsnapshotName: jsii.String(\"snapshotName\"),\n\t\t},\n\t\tflinkRunConfiguration: &flinkRunConfigurationProperty{\n\t\t\tallowNonRestoredState: jsii.Boolean(false),\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\nconst cfnApplicationV2Props: kinesisanalytics.CfnApplicationV2Props = {\n  runtimeEnvironment: 'runtimeEnvironment',\n  serviceExecutionRole: 'serviceExecutionRole',\n\n  // the properties below are optional\n  applicationConfiguration: {\n    applicationCodeConfiguration: {\n      codeContent: {\n        s3ContentLocation: {\n          bucketArn: 'bucketArn',\n          fileKey: 'fileKey',\n\n          // the properties below are optional\n          objectVersion: 'objectVersion',\n        },\n        textContent: 'textContent',\n        zipFileContent: 'zipFileContent',\n      },\n      codeContentType: 'codeContentType',\n    },\n    applicationSnapshotConfiguration: {\n      snapshotsEnabled: false,\n    },\n    environmentProperties: {\n      propertyGroups: [{\n        propertyGroupId: 'propertyGroupId',\n        propertyMap: {\n          propertyMapKey: 'propertyMap',\n        },\n      }],\n    },\n    flinkApplicationConfiguration: {\n      checkpointConfiguration: {\n        configurationType: 'configurationType',\n\n        // the properties below are optional\n        checkpointingEnabled: false,\n        checkpointInterval: 123,\n        minPauseBetweenCheckpoints: 123,\n      },\n      monitoringConfiguration: {\n        configurationType: 'configurationType',\n\n        // the properties below are optional\n        logLevel: 'logLevel',\n        metricsLevel: 'metricsLevel',\n      },\n      parallelismConfiguration: {\n        configurationType: 'configurationType',\n\n        // the properties below are optional\n        autoScalingEnabled: false,\n        parallelism: 123,\n        parallelismPerKpu: 123,\n      },\n    },\n    sqlApplicationConfiguration: {\n      inputs: [{\n        inputSchema: {\n          recordColumns: [{\n            name: 'name',\n            sqlType: 'sqlType',\n\n            // the properties below are optional\n            mapping: 'mapping',\n          }],\n          recordFormat: {\n            recordFormatType: 'recordFormatType',\n\n            // the properties below are optional\n            mappingParameters: {\n              csvMappingParameters: {\n                recordColumnDelimiter: 'recordColumnDelimiter',\n                recordRowDelimiter: 'recordRowDelimiter',\n              },\n              jsonMappingParameters: {\n                recordRowPath: 'recordRowPath',\n              },\n            },\n          },\n\n          // the properties below are optional\n          recordEncoding: 'recordEncoding',\n        },\n        namePrefix: 'namePrefix',\n\n        // the properties below are optional\n        inputParallelism: {\n          count: 123,\n        },\n        inputProcessingConfiguration: {\n          inputLambdaProcessor: {\n            resourceArn: 'resourceArn',\n          },\n        },\n        kinesisFirehoseInput: {\n          resourceArn: 'resourceArn',\n        },\n        kinesisStreamsInput: {\n          resourceArn: 'resourceArn',\n        },\n      }],\n    },\n    vpcConfigurations: [{\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    }],\n    zeppelinApplicationConfiguration: {\n      catalogConfiguration: {\n        glueDataCatalogConfiguration: {\n          databaseArn: 'databaseArn',\n        },\n      },\n      customArtifactsConfiguration: [{\n        artifactType: 'artifactType',\n\n        // the properties below are optional\n        mavenReference: {\n          artifactId: 'artifactId',\n          groupId: 'groupId',\n          version: 'version',\n        },\n        s3ContentLocation: {\n          bucketArn: 'bucketArn',\n          fileKey: 'fileKey',\n\n          // the properties below are optional\n          objectVersion: 'objectVersion',\n        },\n      }],\n      deployAsApplicationConfiguration: {\n        s3ContentLocation: {\n          bucketArn: 'bucketArn',\n\n          // the properties below are optional\n          basePath: 'basePath',\n        },\n      },\n      monitoringConfiguration: {\n        logLevel: 'logLevel',\n      },\n    },\n  },\n  applicationDescription: 'applicationDescription',\n  applicationMaintenanceConfiguration: {\n    applicationMaintenanceWindowStartTime: 'applicationMaintenanceWindowStartTime',\n  },\n  applicationMode: 'applicationMode',\n  applicationName: 'applicationName',\n  runConfiguration: {\n    applicationRestoreConfiguration: {\n      applicationRestoreType: 'applicationRestoreType',\n\n      // the properties below are optional\n      snapshotName: 'snapshotName',\n    },\n    flinkRunConfiguration: {\n      allowNonRestoredState: false,\n    },\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2Props"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisanalytics.CfnApplicationV2Props"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisanalytics from '@aws-cdk/aws-kinesisanalytics';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationV2Props: kinesisanalytics.CfnApplicationV2Props = {\n  runtimeEnvironment: 'runtimeEnvironment',\n  serviceExecutionRole: 'serviceExecutionRole',\n\n  // the properties below are optional\n  applicationConfiguration: {\n    applicationCodeConfiguration: {\n      codeContent: {\n        s3ContentLocation: {\n          bucketArn: 'bucketArn',\n          fileKey: 'fileKey',\n\n          // the properties below are optional\n          objectVersion: 'objectVersion',\n        },\n        textContent: 'textContent',\n        zipFileContent: 'zipFileContent',\n      },\n      codeContentType: 'codeContentType',\n    },\n    applicationSnapshotConfiguration: {\n      snapshotsEnabled: false,\n    },\n    environmentProperties: {\n      propertyGroups: [{\n        propertyGroupId: 'propertyGroupId',\n        propertyMap: {\n          propertyMapKey: 'propertyMap',\n        },\n      }],\n    },\n    flinkApplicationConfiguration: {\n      checkpointConfiguration: {\n        configurationType: 'configurationType',\n\n        // the properties below are optional\n        checkpointingEnabled: false,\n        checkpointInterval: 123,\n        minPauseBetweenCheckpoints: 123,\n      },\n      monitoringConfiguration: {\n        configurationType: 'configurationType',\n\n        // the properties below are optional\n        logLevel: 'logLevel',\n        metricsLevel: 'metricsLevel',\n      },\n      parallelismConfiguration: {\n        configurationType: 'configurationType',\n\n        // the properties below are optional\n        autoScalingEnabled: false,\n        parallelism: 123,\n        parallelismPerKpu: 123,\n      },\n    },\n    sqlApplicationConfiguration: {\n      inputs: [{\n        inputSchema: {\n          recordColumns: [{\n            name: 'name',\n            sqlType: 'sqlType',\n\n            // the properties below are optional\n            mapping: 'mapping',\n          }],\n          recordFormat: {\n            recordFormatType: 'recordFormatType',\n\n            // the properties below are optional\n            mappingParameters: {\n              csvMappingParameters: {\n                recordColumnDelimiter: 'recordColumnDelimiter',\n                recordRowDelimiter: 'recordRowDelimiter',\n              },\n              jsonMappingParameters: {\n                recordRowPath: 'recordRowPath',\n              },\n            },\n          },\n\n          // the properties below are optional\n          recordEncoding: 'recordEncoding',\n        },\n        namePrefix: 'namePrefix',\n\n        // the properties below are optional\n        inputParallelism: {\n          count: 123,\n        },\n        inputProcessingConfiguration: {\n          inputLambdaProcessor: {\n            resourceArn: 'resourceArn',\n          },\n        },\n        kinesisFirehoseInput: {\n          resourceArn: 'resourceArn',\n        },\n        kinesisStreamsInput: {\n          resourceArn: 'resourceArn',\n        },\n      }],\n    },\n    vpcConfigurations: [{\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    }],\n    zeppelinApplicationConfiguration: {\n      catalogConfiguration: {\n        glueDataCatalogConfiguration: {\n          databaseArn: 'databaseArn',\n        },\n      },\n      customArtifactsConfiguration: [{\n        artifactType: 'artifactType',\n\n        // the properties below are optional\n        mavenReference: {\n          artifactId: 'artifactId',\n          groupId: 'groupId',\n          version: 'version',\n        },\n        s3ContentLocation: {\n          bucketArn: 'bucketArn',\n          fileKey: 'fileKey',\n\n          // the properties below are optional\n          objectVersion: 'objectVersion',\n        },\n      }],\n      deployAsApplicationConfiguration: {\n        s3ContentLocation: {\n          bucketArn: 'bucketArn',\n\n          // the properties below are optional\n          basePath: 'basePath',\n        },\n      },\n      monitoringConfiguration: {\n        logLevel: 'logLevel',\n      },\n    },\n  },\n  applicationDescription: 'applicationDescription',\n  applicationMaintenanceConfiguration: {\n    applicationMaintenanceWindowStartTime: 'applicationMaintenanceWindowStartTime',\n  },\n  applicationMode: 'applicationMode',\n  applicationName: 'applicationName',\n  runConfiguration: {\n    applicationRestoreConfiguration: {\n      applicationRestoreType: 'applicationRestoreType',\n\n      // the properties below are optional\n      snapshotName: 'snapshotName',\n    },\n    flinkRunConfiguration: {\n      allowNonRestoredState: false,\n    },\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 49,
        "75": 101,
        "91": 4,
        "153": 1,
        "169": 1,
        "192": 8,
        "193": 41,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 97,
        "290": 1
      },
      "fqnsFingerprint": "30bac401bbca124f7fccd6b51c6c7864253d007cee9f4ac08746d1ddfa108360"
    }
  }
}