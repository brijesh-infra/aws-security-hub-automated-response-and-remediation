{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/core": "1.169.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::EMR",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.63.2 (build a8a8833)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "emr"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-emr",
  "readme": {
    "markdown": "# Amazon EMR Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n> All classes with the `Cfn` prefix in this module ([CFN Resources]) are always stable and safe to use.\n>\n> [CFN Resources]: https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n```ts nofixture\nimport * as emr from '@aws-cdk/aws-emr';\n```\n\n<!--BEGIN CFNONLY DISCLAIMER-->\n\nThere are no official hand-written ([L2](https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib)) constructs for this service yet. Here are some suggestions on how to proceed:\n\n- Search [Construct Hub for EMR construct libraries](https://constructs.dev/search?q=emr)\n- Use the automatically generated [L1](https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_l1_using) constructs, in the same way you would use [the CloudFormation AWS::EMR resources](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/AWS_EMR.html) directly.\n\n\n<!--BEGIN CFNONLY DISCLAIMER-->\n\nThere are no hand-written ([L2](https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib)) constructs for this service yet.\nHowever, you can still use the automatically generated [L1](https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_l1_using) constructs, and use this service exactly as you would using CloudFormation directly.\n\nFor more information on the resources and properties available for this service, see the [CloudFormation documentation for AWS::EMR](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/AWS_EMR.html).\n\n(Read the [CDK Contributing Guide](https://github.com/aws/aws-cdk/blob/master/CONTRIBUTING.md) and submit an RFC if you are interested in contributing to this construct library.)\n\n<!--END CFNONLY DISCLAIMER-->\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-emr",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.EMR",
      "packageId": "Amazon.CDK.AWS.EMR"
    },
    "java": {
      "maven": {
        "artifactId": "emr",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.emr"
    },
    "js": {
      "npm": "@aws-cdk/aws-emr"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-emr",
      "module": "aws_cdk.aws_emr"
    }
  },
  "types": {
    "@aws-cdk/aws-emr.CfnCluster": {
      "assembly": "@aws-cdk/aws-emr",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EMR::Cluster",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::EMR::Cluster` resource specifies an Amazon EMR cluster. This cluster is a collection of Amazon EC2 instances that run open source big data frameworks and applications to process and analyze vast amounts of data. For more information, see the [Amazon EMR Management Guide](https://docs.aws.amazon.com//emr/latest/ManagementGuide/) .\n\nAmazon EMR now supports launching task instance groups and task instance fleets as part of the `AWS::EMR::Cluster` resource. This can be done by using the `JobFlowInstancesConfig` property type's `TaskInstanceGroups` and `TaskInstanceFleets` subproperties. Using these subproperties reduces delays in provisioning task nodes compared to specifying task nodes with the `AWS::EMR::InstanceGroupConfig` and `AWS::EMR::InstanceFleetConfig` resources. Please refer to the examples at the bottom of this page to learn how to use these subproperties.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EMR::Cluster`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const additionalInfo: any;\ndeclare const configurationProperty_: emr.CfnCluster.ConfigurationProperty;\nconst cfnCluster = new emr.CfnCluster(this, 'MyCfnCluster', {\n  instances: {\n    additionalMasterSecurityGroups: ['additionalMasterSecurityGroups'],\n    additionalSlaveSecurityGroups: ['additionalSlaveSecurityGroups'],\n    coreInstanceFleet: {\n      instanceTypeConfigs: [{\n        instanceType: 'instanceType',\n\n        // the properties below are optional\n        bidPrice: 'bidPrice',\n        bidPriceAsPercentageOfOnDemandPrice: 123,\n        configurations: [{\n          classification: 'classification',\n          configurationProperties: {\n            configurationPropertiesKey: 'configurationProperties',\n          },\n          configurations: [configurationProperty_],\n        }],\n        customAmiId: 'customAmiId',\n        ebsConfiguration: {\n          ebsBlockDeviceConfigs: [{\n            volumeSpecification: {\n              sizeInGb: 123,\n              volumeType: 'volumeType',\n\n              // the properties below are optional\n              iops: 123,\n            },\n\n            // the properties below are optional\n            volumesPerInstance: 123,\n          }],\n          ebsOptimized: false,\n        },\n        weightedCapacity: 123,\n      }],\n      launchSpecifications: {\n        onDemandSpecification: {\n          allocationStrategy: 'allocationStrategy',\n        },\n        spotSpecification: {\n          timeoutAction: 'timeoutAction',\n          timeoutDurationMinutes: 123,\n\n          // the properties below are optional\n          allocationStrategy: 'allocationStrategy',\n          blockDurationMinutes: 123,\n        },\n      },\n      name: 'name',\n      targetOnDemandCapacity: 123,\n      targetSpotCapacity: 123,\n    },\n    coreInstanceGroup: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n\n      // the properties below are optional\n      autoScalingPolicy: {\n        constraints: {\n          maxCapacity: 123,\n          minCapacity: 123,\n        },\n        rules: [{\n          action: {\n            simpleScalingPolicyConfiguration: {\n              scalingAdjustment: 123,\n\n              // the properties below are optional\n              adjustmentType: 'adjustmentType',\n              coolDown: 123,\n            },\n\n            // the properties below are optional\n            market: 'market',\n          },\n          name: 'name',\n          trigger: {\n            cloudWatchAlarmDefinition: {\n              comparisonOperator: 'comparisonOperator',\n              metricName: 'metricName',\n              period: 123,\n              threshold: 123,\n\n              // the properties below are optional\n              dimensions: [{\n                key: 'key',\n                value: 'value',\n              }],\n              evaluationPeriods: 123,\n              namespace: 'namespace',\n              statistic: 'statistic',\n              unit: 'unit',\n            },\n          },\n\n          // the properties below are optional\n          description: 'description',\n        }],\n      },\n      bidPrice: 'bidPrice',\n      configurations: [{\n        classification: 'classification',\n        configurationProperties: {\n          configurationPropertiesKey: 'configurationProperties',\n        },\n        configurations: [configurationProperty_],\n      }],\n      customAmiId: 'customAmiId',\n      ebsConfiguration: {\n        ebsBlockDeviceConfigs: [{\n          volumeSpecification: {\n            sizeInGb: 123,\n            volumeType: 'volumeType',\n\n            // the properties below are optional\n            iops: 123,\n          },\n\n          // the properties below are optional\n          volumesPerInstance: 123,\n        }],\n        ebsOptimized: false,\n      },\n      market: 'market',\n      name: 'name',\n    },\n    ec2KeyName: 'ec2KeyName',\n    ec2SubnetId: 'ec2SubnetId',\n    ec2SubnetIds: ['ec2SubnetIds'],\n    emrManagedMasterSecurityGroup: 'emrManagedMasterSecurityGroup',\n    emrManagedSlaveSecurityGroup: 'emrManagedSlaveSecurityGroup',\n    hadoopVersion: 'hadoopVersion',\n    keepJobFlowAliveWhenNoSteps: false,\n    masterInstanceFleet: {\n      instanceTypeConfigs: [{\n        instanceType: 'instanceType',\n\n        // the properties below are optional\n        bidPrice: 'bidPrice',\n        bidPriceAsPercentageOfOnDemandPrice: 123,\n        configurations: [{\n          classification: 'classification',\n          configurationProperties: {\n            configurationPropertiesKey: 'configurationProperties',\n          },\n          configurations: [configurationProperty_],\n        }],\n        customAmiId: 'customAmiId',\n        ebsConfiguration: {\n          ebsBlockDeviceConfigs: [{\n            volumeSpecification: {\n              sizeInGb: 123,\n              volumeType: 'volumeType',\n\n              // the properties below are optional\n              iops: 123,\n            },\n\n            // the properties below are optional\n            volumesPerInstance: 123,\n          }],\n          ebsOptimized: false,\n        },\n        weightedCapacity: 123,\n      }],\n      launchSpecifications: {\n        onDemandSpecification: {\n          allocationStrategy: 'allocationStrategy',\n        },\n        spotSpecification: {\n          timeoutAction: 'timeoutAction',\n          timeoutDurationMinutes: 123,\n\n          // the properties below are optional\n          allocationStrategy: 'allocationStrategy',\n          blockDurationMinutes: 123,\n        },\n      },\n      name: 'name',\n      targetOnDemandCapacity: 123,\n      targetSpotCapacity: 123,\n    },\n    masterInstanceGroup: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n\n      // the properties below are optional\n      autoScalingPolicy: {\n        constraints: {\n          maxCapacity: 123,\n          minCapacity: 123,\n        },\n        rules: [{\n          action: {\n            simpleScalingPolicyConfiguration: {\n              scalingAdjustment: 123,\n\n              // the properties below are optional\n              adjustmentType: 'adjustmentType',\n              coolDown: 123,\n            },\n\n            // the properties below are optional\n            market: 'market',\n          },\n          name: 'name',\n          trigger: {\n            cloudWatchAlarmDefinition: {\n              comparisonOperator: 'comparisonOperator',\n              metricName: 'metricName',\n              period: 123,\n              threshold: 123,\n\n              // the properties below are optional\n              dimensions: [{\n                key: 'key',\n                value: 'value',\n              }],\n              evaluationPeriods: 123,\n              namespace: 'namespace',\n              statistic: 'statistic',\n              unit: 'unit',\n            },\n          },\n\n          // the properties below are optional\n          description: 'description',\n        }],\n      },\n      bidPrice: 'bidPrice',\n      configurations: [{\n        classification: 'classification',\n        configurationProperties: {\n          configurationPropertiesKey: 'configurationProperties',\n        },\n        configurations: [configurationProperty_],\n      }],\n      customAmiId: 'customAmiId',\n      ebsConfiguration: {\n        ebsBlockDeviceConfigs: [{\n          volumeSpecification: {\n            sizeInGb: 123,\n            volumeType: 'volumeType',\n\n            // the properties below are optional\n            iops: 123,\n          },\n\n          // the properties below are optional\n          volumesPerInstance: 123,\n        }],\n        ebsOptimized: false,\n      },\n      market: 'market',\n      name: 'name',\n    },\n    placement: {\n      availabilityZone: 'availabilityZone',\n    },\n    serviceAccessSecurityGroup: 'serviceAccessSecurityGroup',\n    taskInstanceFleets: [{\n      instanceTypeConfigs: [{\n        instanceType: 'instanceType',\n\n        // the properties below are optional\n        bidPrice: 'bidPrice',\n        bidPriceAsPercentageOfOnDemandPrice: 123,\n        configurations: [{\n          classification: 'classification',\n          configurationProperties: {\n            configurationPropertiesKey: 'configurationProperties',\n          },\n          configurations: [configurationProperty_],\n        }],\n        customAmiId: 'customAmiId',\n        ebsConfiguration: {\n          ebsBlockDeviceConfigs: [{\n            volumeSpecification: {\n              sizeInGb: 123,\n              volumeType: 'volumeType',\n\n              // the properties below are optional\n              iops: 123,\n            },\n\n            // the properties below are optional\n            volumesPerInstance: 123,\n          }],\n          ebsOptimized: false,\n        },\n        weightedCapacity: 123,\n      }],\n      launchSpecifications: {\n        onDemandSpecification: {\n          allocationStrategy: 'allocationStrategy',\n        },\n        spotSpecification: {\n          timeoutAction: 'timeoutAction',\n          timeoutDurationMinutes: 123,\n\n          // the properties below are optional\n          allocationStrategy: 'allocationStrategy',\n          blockDurationMinutes: 123,\n        },\n      },\n      name: 'name',\n      targetOnDemandCapacity: 123,\n      targetSpotCapacity: 123,\n    }],\n    taskInstanceGroups: [{\n      instanceCount: 123,\n      instanceType: 'instanceType',\n\n      // the properties below are optional\n      autoScalingPolicy: {\n        constraints: {\n          maxCapacity: 123,\n          minCapacity: 123,\n        },\n        rules: [{\n          action: {\n            simpleScalingPolicyConfiguration: {\n              scalingAdjustment: 123,\n\n              // the properties below are optional\n              adjustmentType: 'adjustmentType',\n              coolDown: 123,\n            },\n\n            // the properties below are optional\n            market: 'market',\n          },\n          name: 'name',\n          trigger: {\n            cloudWatchAlarmDefinition: {\n              comparisonOperator: 'comparisonOperator',\n              metricName: 'metricName',\n              period: 123,\n              threshold: 123,\n\n              // the properties below are optional\n              dimensions: [{\n                key: 'key',\n                value: 'value',\n              }],\n              evaluationPeriods: 123,\n              namespace: 'namespace',\n              statistic: 'statistic',\n              unit: 'unit',\n            },\n          },\n\n          // the properties below are optional\n          description: 'description',\n        }],\n      },\n      bidPrice: 'bidPrice',\n      configurations: [{\n        classification: 'classification',\n        configurationProperties: {\n          configurationPropertiesKey: 'configurationProperties',\n        },\n        configurations: [configurationProperty_],\n      }],\n      customAmiId: 'customAmiId',\n      ebsConfiguration: {\n        ebsBlockDeviceConfigs: [{\n          volumeSpecification: {\n            sizeInGb: 123,\n            volumeType: 'volumeType',\n\n            // the properties below are optional\n            iops: 123,\n          },\n\n          // the properties below are optional\n          volumesPerInstance: 123,\n        }],\n        ebsOptimized: false,\n      },\n      market: 'market',\n      name: 'name',\n    }],\n    terminationProtected: false,\n  },\n  jobFlowRole: 'jobFlowRole',\n  name: 'name',\n  serviceRole: 'serviceRole',\n\n  // the properties below are optional\n  additionalInfo: additionalInfo,\n  applications: [{\n    additionalInfo: {\n      additionalInfoKey: 'additionalInfo',\n    },\n    args: ['args'],\n    name: 'name',\n    version: 'version',\n  }],\n  autoScalingRole: 'autoScalingRole',\n  autoTerminationPolicy: {\n    idleTimeout: 123,\n  },\n  bootstrapActions: [{\n    name: 'name',\n    scriptBootstrapAction: {\n      path: 'path',\n\n      // the properties below are optional\n      args: ['args'],\n    },\n  }],\n  configurations: [{\n    classification: 'classification',\n    configurationProperties: {\n      configurationPropertiesKey: 'configurationProperties',\n    },\n    configurations: [configurationProperty_],\n  }],\n  customAmiId: 'customAmiId',\n  ebsRootVolumeSize: 123,\n  kerberosAttributes: {\n    kdcAdminPassword: 'kdcAdminPassword',\n    realm: 'realm',\n\n    // the properties below are optional\n    adDomainJoinPassword: 'adDomainJoinPassword',\n    adDomainJoinUser: 'adDomainJoinUser',\n    crossRealmTrustPrincipalPassword: 'crossRealmTrustPrincipalPassword',\n  },\n  logEncryptionKmsKeyId: 'logEncryptionKmsKeyId',\n  logUri: 'logUri',\n  managedScalingPolicy: {\n    computeLimits: {\n      maximumCapacityUnits: 123,\n      minimumCapacityUnits: 123,\n      unitType: 'unitType',\n\n      // the properties below are optional\n      maximumCoreCapacityUnits: 123,\n      maximumOnDemandCapacityUnits: 123,\n    },\n  },\n  releaseLabel: 'releaseLabel',\n  scaleDownBehavior: 'scaleDownBehavior',\n  securityConfiguration: 'securityConfiguration',\n  stepConcurrencyLevel: 123,\n  steps: [{\n    hadoopJarStep: {\n      jar: 'jar',\n\n      // the properties below are optional\n      args: ['args'],\n      mainClass: 'mainClass',\n      stepProperties: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    name: 'name',\n\n    // the properties below are optional\n    actionOnFailure: 'actionOnFailure',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  visibleToAllUsers: false,\n});"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EMR::Cluster`."
        },
        "locationInModule": {
          "filename": "lib/emr.generated.ts",
          "line": 513
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-emr.CfnClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 312
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 557
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 590
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCluster",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 316
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "MasterPublicDNS"
            },
            "stability": "external",
            "summary": "The public DNS name of the master node (instance), such as `ec2-12-123-123-123.us-west-2.compute.amazonaws.com` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 341
          },
          "name": "attrMasterPublicDns",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 562
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-tags"
            },
            "stability": "external",
            "summary": "A list of tags associated with a cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 495
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-additionalinfo"
            },
            "stability": "external",
            "summary": "A JSON string for selecting additional features."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 376
          },
          "name": "additionalInfo",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-instances"
            },
            "stability": "external",
            "summary": "A specification of the number and type of Amazon EC2 instances."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 348
          },
          "name": "instances",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.JobFlowInstancesConfigProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-jobflowrole"
            },
            "remarks": "An IAM role for an EMR cluster. The EC2 instances of the cluster assume this role. The default role is `EMR_EC2_DefaultRole` . In order to use the default role, you must have already created it using the CLI or console.",
            "stability": "external",
            "summary": "Also called instance profile and EC2 role."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 355
          },
          "name": "jobFlowRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-name"
            },
            "stability": "external",
            "summary": "The name of the cluster."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 362
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-servicerole"
            },
            "stability": "external",
            "summary": "The IAM role that Amazon EMR assumes in order to access AWS resources on your behalf."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 369
          },
          "name": "serviceRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-applications"
            },
            "stability": "external",
            "summary": "The applications to install on this cluster, for example, Spark, Flink, Oozie, Zeppelin, and so on."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 383
          },
          "name": "applications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.ApplicationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-autoscalingrole"
            },
            "remarks": "The default role is `EMR_AutoScaling_DefaultRole` . The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.",
            "stability": "external",
            "summary": "An IAM role for automatic scaling policies."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 390
          },
          "name": "autoScalingRole",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-autoterminationpolicy"
            },
            "stability": "external",
            "summary": "`AWS::EMR::Cluster.AutoTerminationPolicy`."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 397
          },
          "name": "autoTerminationPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.AutoTerminationPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-bootstrapactions"
            },
            "stability": "external",
            "summary": "A list of bootstrap actions to run before Hadoop starts on the cluster nodes."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 404
          },
          "name": "bootstrapActions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.BootstrapActionConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-configurations"
            },
            "stability": "external",
            "summary": "Applies only to Amazon EMR releases 4.x and later. The list of Configurations supplied to the EMR cluster."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 411
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.ConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-customamiid"
            },
            "stability": "external",
            "summary": "Available only in Amazon EMR version 5.7.0 and later. The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 418
          },
          "name": "customAmiId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-ebsrootvolumesize"
            },
            "remarks": "Available in Amazon EMR version 4.x and later.",
            "stability": "external",
            "summary": "The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for each EC2 instance."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 425
          },
          "name": "ebsRootVolumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-kerberosattributes"
            },
            "remarks": "For more information see [Use Kerberos Authentication](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html) in the *Amazon EMR Management Guide* .",
            "stability": "external",
            "summary": "Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 432
          },
          "name": "kerberosAttributes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.KerberosAttributesProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-logencryptionkmskeyid"
            },
            "remarks": "This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.",
            "stability": "external",
            "summary": "The AWS KMS key used for encrypting log files."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 439
          },
          "name": "logEncryptionKmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-loguri"
            },
            "stability": "external",
            "summary": "The path to the Amazon S3 location where logs for this cluster are stored."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 446
          },
          "name": "logUri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-managedscalingpolicy"
            },
            "remarks": "The managed scaling policy defines the limits for resources, such as EC2 instances that can be added or terminated from a cluster. The policy only applies to the core and task nodes. The master node cannot be scaled after initial configuration.",
            "stability": "external",
            "summary": "Creates or updates a managed scaling policy for an Amazon EMR cluster."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 453
          },
          "name": "managedScalingPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.ManagedScalingPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-releaselabel"
            },
            "remarks": "Release labels are in the form `emr-x.x.x` , where x.x.x is an Amazon EMR release version such as `emr-5.14.0` . For more information about Amazon EMR release versions and included application versions and features, see [](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/) . The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use `AmiVersion` .",
            "stability": "external",
            "summary": "The Amazon EMR release label, which determines the version of open-source application packages installed on the cluster."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 460
          },
          "name": "releaseLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-scaledownbehavior"
            },
            "remarks": "`TERMINATE_AT_INSTANCE_HOUR` indicates that Amazon EMR terminates nodes at the instance-hour boundary, regardless of when the request to terminate the instance was submitted. This option is only available with Amazon EMR 5.1.0 and later and is the default for clusters created using that version. `TERMINATE_AT_TASK_COMPLETION` indicates that Amazon EMR adds nodes to a deny list and drains tasks from nodes before terminating the Amazon EC2 instances, regardless of the instance-hour boundary. With either behavior, Amazon EMR removes the least active nodes first and blocks instance termination if it could lead to HDFS corruption. `TERMINATE_AT_TASK_COMPLETION` is available only in Amazon EMR version 4.1.0 and later, and is the default for versions of Amazon EMR earlier than 5.1.0.",
            "stability": "external",
            "summary": "The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an instance group is resized."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 467
          },
          "name": "scaleDownBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration"
            },
            "stability": "external",
            "summary": "The name of the security configuration applied to the cluster."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 474
          },
          "name": "securityConfiguration",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-stepconcurrencylevel"
            },
            "remarks": "The default value is `1` . The maximum value is `256` .",
            "stability": "external",
            "summary": "Specifies the number of steps that can be executed concurrently."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 481
          },
          "name": "stepConcurrencyLevel",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-steps"
            },
            "stability": "external",
            "summary": "A list of steps to run."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 488
          },
          "name": "steps",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.StepConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-visibletoallusers"
            },
            "remarks": "If this value is set to `true` , all IAM users of that AWS account can view and manage the cluster if they have the proper policy permissions set. If this value is `false` , only the IAM user that created the cluster can view and manage it. This value can be changed using the SetVisibleToAllUsers action.\n\n> When you create clusters directly through the EMR console or API, this value is set to `true` by default. However, for `AWS::EMR::Cluster` resources in CloudFormation, the default is `false` .",
            "stability": "external",
            "summary": "Indicates whether the cluster is visible to all IAM users of the AWS account associated with the cluster."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 504
          },
          "name": "visibleToAllUsers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster"
    },
    "@aws-cdk/aws-emr.CfnCluster.ApplicationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-application.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `Application` property type defines the open-source big data applications for EMR to install and configure when a cluster is created.\n\nWith Amazon EMR release version 4.0 and later, the only accepted parameter is the application `Name` . To pass arguments to these applications, you use configuration classifications specified using JSON objects in a `Configuration` property. For more information, see [Configuring Applications](https://docs.aws.amazon.com//emr/latest/ReleaseGuide/emr-configure-apps.html) .\n\nWith earlier Amazon EMR releases, the application is any AWS or third-party software that you can add to the cluster. You can specify the version of the application and arguments to pass to it. Amazon EMR accepts and forwards the argument list to the corresponding installation script as a bootstrap action argument.",
        "stability": "external",
        "summary": "`Application` is a property of `AWS::EMR::Cluster` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst applicationProperty: emr.CfnCluster.ApplicationProperty = {\n  additionalInfo: {\n    additionalInfoKey: 'additionalInfo',\n  },\n  args: ['args'],\n  name: 'name',\n  version: 'version',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.ApplicationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 608
      },
      "name": "ApplicationProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-application.html#cfn-elasticmapreduce-cluster-application-additionalinfo"
            },
            "remarks": "This is meta information about clusters and applications that are used for testing and troubleshooting.",
            "stability": "external",
            "summary": "This option is for advanced users only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 614
          },
          "name": "additionalInfo",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-application.html#cfn-elasticmapreduce-cluster-application-args"
            },
            "stability": "external",
            "summary": "Arguments for Amazon EMR to pass to the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 620
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-application.html#cfn-elasticmapreduce-cluster-application-name"
            },
            "stability": "external",
            "summary": "The name of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 626
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-application.html#cfn-elasticmapreduce-cluster-application-version"
            },
            "stability": "external",
            "summary": "The version of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 632
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.ApplicationProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.AutoScalingPolicyProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-autoscalingpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`AutoScalingPolicy` defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. For more information, see [Using Automatic Scaling in Amazon EMR](https://docs.aws.amazon.com//emr/latest/ManagementGuide/emr-automatic-scaling.html) in the *Amazon EMR Management Guide* .",
        "stability": "external",
        "summary": "`AutoScalingPolicy` is a subproperty of `InstanceGroupConfig` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst autoScalingPolicyProperty: emr.CfnCluster.AutoScalingPolicyProperty = {\n  constraints: {\n    maxCapacity: 123,\n    minCapacity: 123,\n  },\n  rules: [{\n    action: {\n      simpleScalingPolicyConfiguration: {\n        scalingAdjustment: 123,\n\n        // the properties below are optional\n        adjustmentType: 'adjustmentType',\n        coolDown: 123,\n      },\n\n      // the properties below are optional\n      market: 'market',\n    },\n    name: 'name',\n    trigger: {\n      cloudWatchAlarmDefinition: {\n        comparisonOperator: 'comparisonOperator',\n        metricName: 'metricName',\n        period: 123,\n        threshold: 123,\n\n        // the properties below are optional\n        dimensions: [{\n          key: 'key',\n          value: 'value',\n        }],\n        evaluationPeriods: 123,\n        namespace: 'namespace',\n        statistic: 'statistic',\n        unit: 'unit',\n      },\n    },\n\n    // the properties below are optional\n    description: 'description',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.AutoScalingPolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 702
      },
      "name": "AutoScalingPolicyProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-autoscalingpolicy.html#cfn-elasticmapreduce-cluster-autoscalingpolicy-constraints"
            },
            "remarks": "Automatic scaling activity will not cause an instance group to grow above or below these limits.",
            "stability": "external",
            "summary": "The upper and lower EC2 instance limits for an automatic scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 708
          },
          "name": "constraints",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.ScalingConstraintsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-autoscalingpolicy.html#cfn-elasticmapreduce-cluster-autoscalingpolicy-rules"
            },
            "stability": "external",
            "summary": "The scale-in and scale-out rules that comprise the automatic scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 714
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.ScalingRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.AutoScalingPolicyProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.AutoTerminationPolicyProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-autoterminationpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst autoTerminationPolicyProperty: emr.CfnCluster.AutoTerminationPolicyProperty = {\n  idleTimeout: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.AutoTerminationPolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 780
      },
      "name": "AutoTerminationPolicyProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-autoterminationpolicy.html#cfn-elasticmapreduce-cluster-autoterminationpolicy-idletimeout"
            },
            "stability": "external",
            "summary": "`CfnCluster.AutoTerminationPolicyProperty.IdleTimeout`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 786
          },
          "name": "idleTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.AutoTerminationPolicyProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.BootstrapActionConfigProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-bootstrapactionconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can use a bootstrap action to install software and configure EC2 instances for all cluster nodes before EMR installs and configures open-source big data applications on cluster instances. For more information, see [Create Bootstrap Actions to Install Additional Software](https://docs.aws.amazon.com//emr/latest/ManagementGuide/emr-plan-bootstrap.html) in the *Amazon EMR Management Guide* .",
        "stability": "external",
        "summary": "`BootstrapActionConfig` is a property of `AWS::EMR::Cluster` that can be used to run bootstrap actions on EMR clusters.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst bootstrapActionConfigProperty: emr.CfnCluster.BootstrapActionConfigProperty = {\n  name: 'name',\n  scriptBootstrapAction: {\n    path: 'path',\n\n    // the properties below are optional\n    args: ['args'],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.BootstrapActionConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 847
      },
      "name": "BootstrapActionConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-bootstrapactionconfig.html#cfn-elasticmapreduce-cluster-bootstrapactionconfig-name"
            },
            "stability": "external",
            "summary": "The name of the bootstrap action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 853
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-bootstrapactionconfig.html#cfn-elasticmapreduce-cluster-bootstrapactionconfig-scriptbootstrapaction"
            },
            "stability": "external",
            "summary": "The script run by the bootstrap action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 859
          },
          "name": "scriptBootstrapAction",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.ScriptBootstrapActionConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.BootstrapActionConfigProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.CloudWatchAlarmDefinitionProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-cloudwatchalarmdefinition.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Scaling activity begins when you satisfy the defined alarm conditions.",
        "stability": "external",
        "summary": "`CloudWatchAlarmDefinition` is a subproperty of the `ScalingTrigger` property, which determines when to trigger an automatic scaling activity.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst cloudWatchAlarmDefinitionProperty: emr.CfnCluster.CloudWatchAlarmDefinitionProperty = {\n  comparisonOperator: 'comparisonOperator',\n  metricName: 'metricName',\n  period: 123,\n  threshold: 123,\n\n  // the properties below are optional\n  dimensions: [{\n    key: 'key',\n    value: 'value',\n  }],\n  evaluationPeriods: 123,\n  namespace: 'namespace',\n  statistic: 'statistic',\n  unit: 'unit',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.CloudWatchAlarmDefinitionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 925
      },
      "name": "CloudWatchAlarmDefinitionProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-cluster-cloudwatchalarmdefinition-comparisonoperator"
            },
            "stability": "external",
            "summary": "Determines how the metric specified by `MetricName` is compared to the value specified by `Threshold` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 931
          },
          "name": "comparisonOperator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-cluster-cloudwatchalarmdefinition-metricname"
            },
            "stability": "external",
            "summary": "The name of the CloudWatch metric that is watched to determine an alarm condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 949
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-cluster-cloudwatchalarmdefinition-period"
            },
            "remarks": "EMR CloudWatch metrics are emitted every five minutes (300 seconds), so if an EMR CloudWatch metric is specified, specify `300` .",
            "stability": "external",
            "summary": "The period, in seconds, over which the statistic is applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 961
          },
          "name": "period",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-cluster-cloudwatchalarmdefinition-threshold"
            },
            "stability": "external",
            "summary": "The value against which the specified statistic is compared."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 973
          },
          "name": "threshold",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-cluster-cloudwatchalarmdefinition-dimensions"
            },
            "stability": "external",
            "summary": "A CloudWatch metric dimension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 937
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.MetricDimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-cluster-cloudwatchalarmdefinition-evaluationperiods"
            },
            "remarks": "The default value is `1` .",
            "stability": "external",
            "summary": "The number of periods, in five-minute increments, during which the alarm condition must exist before the alarm triggers automatic scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 943
          },
          "name": "evaluationPeriods",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-cluster-cloudwatchalarmdefinition-namespace"
            },
            "remarks": "The default is `AWS/ElasticMapReduce` .",
            "stability": "external",
            "summary": "The namespace for the CloudWatch metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 955
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-cluster-cloudwatchalarmdefinition-statistic"
            },
            "remarks": "The default is `AVERAGE` .",
            "stability": "external",
            "summary": "The statistic to apply to the metric associated with the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 967
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-cluster-cloudwatchalarmdefinition-unit"
            },
            "remarks": "The value specified for `Unit` must correspond to the units specified in the CloudWatch metric.",
            "stability": "external",
            "summary": "The unit of measure associated with the CloudWatch metric being watched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 979
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.CloudWatchAlarmDefinitionProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.ComputeLimitsProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-computelimits.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The managed scaling activity of a cluster can not be above or below these limits. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.",
        "stability": "external",
        "summary": "The EC2 unit limits for a managed scaling policy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst computeLimitsProperty: emr.CfnCluster.ComputeLimitsProperty = {\n  maximumCapacityUnits: 123,\n  minimumCapacityUnits: 123,\n  unitType: 'unitType',\n\n  // the properties below are optional\n  maximumCoreCapacityUnits: 123,\n  maximumOnDemandCapacityUnits: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.ComputeLimitsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 1068
      },
      "name": "ComputeLimitsProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-computelimits.html#cfn-elasticmapreduce-cluster-computelimits-maximumcapacityunits"
            },
            "remarks": "It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.",
            "stability": "external",
            "summary": "The upper boundary of EC2 units."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1074
          },
          "name": "maximumCapacityUnits",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-computelimits.html#cfn-elasticmapreduce-cluster-computelimits-minimumcapacityunits"
            },
            "remarks": "It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.",
            "stability": "external",
            "summary": "The lower boundary of EC2 units."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1092
          },
          "name": "minimumCapacityUnits",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-computelimits.html#cfn-elasticmapreduce-cluster-computelimits-unittype"
            },
            "stability": "external",
            "summary": "The unit type used for specifying a managed scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1098
          },
          "name": "unitType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-computelimits.html#cfn-elasticmapreduce-cluster-computelimits-maximumcorecapacityunits"
            },
            "remarks": "It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. The core units are not allowed to scale beyond this boundary. The parameter is used to split capacity allocation between core and task nodes.",
            "stability": "external",
            "summary": "The upper boundary of EC2 units for core node type in a cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1080
          },
          "name": "maximumCoreCapacityUnits",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-computelimits.html#cfn-elasticmapreduce-cluster-computelimits-maximumondemandcapacityunits"
            },
            "remarks": "It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. The On-Demand units are not allowed to scale beyond this boundary. The parameter is used to split capacity allocation between On-Demand and Spot Instances.",
            "stability": "external",
            "summary": "The upper boundary of On-Demand EC2 units."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1086
          },
          "name": "maximumOnDemandCapacityUnits",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.ComputeLimitsProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.ConfigurationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-configuration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`Configuration` is a subproperty of `InstanceFleetConfig` or `InstanceGroupConfig` . `Configuration` specifies optional configurations for customizing open-source big data applications and environment parameters. A configuration consists of a classification, properties, and optional nested configurations. A classification refers to an application-specific configuration file. Properties are the settings you want to change in that file. For more information, see [Configuring Applications](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) in the *Amazon EMR Release Guide* .",
        "stability": "external",
        "summary": "> Used only with Amazon EMR release 4.0 and later.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const configurationProperty_: emr.CfnCluster.ConfigurationProperty;\nconst configurationProperty: emr.CfnCluster.ConfigurationProperty = {\n  classification: 'classification',\n  configurationProperties: {\n    configurationPropertiesKey: 'configurationProperties',\n  },\n  configurations: [{\n    classification: 'classification',\n    configurationProperties: {\n      configurationPropertiesKey: 'configurationProperties',\n    },\n    configurations: [configurationProperty_],\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.ConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 1176
      },
      "name": "ConfigurationProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-configuration.html#cfn-elasticmapreduce-cluster-configuration-classification"
            },
            "stability": "external",
            "summary": "The classification within a configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1182
          },
          "name": "classification",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-configuration.html#cfn-elasticmapreduce-cluster-configuration-configurationproperties"
            },
            "stability": "external",
            "summary": "A list of additional configurations to apply within a configuration object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1188
          },
          "name": "configurationProperties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-configuration.html#cfn-elasticmapreduce-cluster-configuration-configurations"
            },
            "stability": "external",
            "summary": "A list of additional configurations to apply within a configuration object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1194
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.ConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.ConfigurationProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.EbsBlockDeviceConfigProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-ebsblockdeviceconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`EbsBlockDeviceConfig` defines the number and type of EBS volumes to associate with all EC2 instances in an EMR cluster.",
        "stability": "external",
        "summary": "`EbsBlockDeviceConfig` is a subproperty of the `EbsConfiguration` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst ebsBlockDeviceConfigProperty: emr.CfnCluster.EbsBlockDeviceConfigProperty = {\n  volumeSpecification: {\n    sizeInGb: 123,\n    volumeType: 'volumeType',\n\n    // the properties below are optional\n    iops: 123,\n  },\n\n  // the properties below are optional\n  volumesPerInstance: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.EbsBlockDeviceConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 1261
      },
      "name": "EbsBlockDeviceConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-ebsblockdeviceconfig.html#cfn-elasticmapreduce-cluster-ebsblockdeviceconfig-volumespecification"
            },
            "stability": "external",
            "summary": "EBS volume specifications such as volume type, IOPS, and size (GiB) that will be requested for the EBS volume attached to an EC2 instance in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1267
          },
          "name": "volumeSpecification",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.VolumeSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-ebsblockdeviceconfig.html#cfn-elasticmapreduce-cluster-ebsblockdeviceconfig-volumesperinstance"
            },
            "stability": "external",
            "summary": "Number of EBS volumes with a specific volume configuration that will be associated with every instance in the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1273
          },
          "name": "volumesPerInstance",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.EbsBlockDeviceConfigProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.EbsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-ebsconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`EbsConfiguration` determines the EBS volumes to attach to EMR cluster instances.",
        "stability": "external",
        "summary": "`EbsConfiguration` is a subproperty of `InstanceFleetConfig` or `InstanceGroupConfig` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst ebsConfigurationProperty: emr.CfnCluster.EbsConfigurationProperty = {\n  ebsBlockDeviceConfigs: [{\n    volumeSpecification: {\n      sizeInGb: 123,\n      volumeType: 'volumeType',\n\n      // the properties below are optional\n      iops: 123,\n    },\n\n    // the properties below are optional\n    volumesPerInstance: 123,\n  }],\n  ebsOptimized: false,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.EbsConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 1338
      },
      "name": "EbsConfigurationProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-ebsconfiguration.html#cfn-elasticmapreduce-cluster-ebsconfiguration-ebsblockdeviceconfigs"
            },
            "stability": "external",
            "summary": "An array of Amazon EBS volume specifications attached to a cluster instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1344
          },
          "name": "ebsBlockDeviceConfigs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.EbsBlockDeviceConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-ebsconfiguration.html#cfn-elasticmapreduce-cluster-ebsconfiguration-ebsoptimized"
            },
            "stability": "external",
            "summary": "Indicates whether an Amazon EBS volume is EBS-optimized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1350
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.EbsConfigurationProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.HadoopJarStepConfigProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-hadoopjarstepconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The main function submits a job for the cluster to execute as a step on the master node, and then waits for the job to finish or fail before executing subsequent steps.",
        "stability": "external",
        "summary": "The `HadoopJarStepConfig` property type specifies a job flow step consisting of a JAR file whose main function will be executed.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst hadoopJarStepConfigProperty: emr.CfnCluster.HadoopJarStepConfigProperty = {\n  jar: 'jar',\n\n  // the properties below are optional\n  args: ['args'],\n  mainClass: 'mainClass',\n  stepProperties: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.HadoopJarStepConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 1414
      },
      "name": "HadoopJarStepConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-hadoopjarstepconfig.html#cfn-elasticmapreduce-cluster-hadoopjarstepconfig-jar"
            },
            "stability": "external",
            "summary": "A path to a JAR file run during the step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1426
          },
          "name": "jar",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-hadoopjarstepconfig.html#cfn-elasticmapreduce-cluster-hadoopjarstepconfig-args"
            },
            "stability": "external",
            "summary": "A list of command line arguments passed to the JAR file's main function when executed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1420
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-hadoopjarstepconfig.html#cfn-elasticmapreduce-cluster-hadoopjarstepconfig-mainclass"
            },
            "remarks": "If not specified, the JAR file should specify a Main-Class in its manifest file.",
            "stability": "external",
            "summary": "The name of the main class in the specified Java file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1432
          },
          "name": "mainClass",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-hadoopjarstepconfig.html#cfn-elasticmapreduce-cluster-hadoopjarstepconfig-stepproperties"
            },
            "remarks": "You can use these properties to pass key-value pairs to your main function.",
            "stability": "external",
            "summary": "A list of Java properties that are set when the step runs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1438
          },
          "name": "stepProperties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.KeyValueProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.HadoopJarStepConfigProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.InstanceFleetConfigProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancefleetconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A cluster can not use both instance fleets and instance groups. For more information, see [Configure Instance Fleets](https://docs.aws.amazon.com//emr/latest/ManagementGuide/emr-instance-group-configuration.html) in the *Amazon EMR Management Guide* .\n\n> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.",
        "stability": "external",
        "summary": "Use `InstanceFleetConfig` to define instance fleets for an EMR cluster.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const configurationProperty_: emr.CfnCluster.ConfigurationProperty;\nconst instanceFleetConfigProperty: emr.CfnCluster.InstanceFleetConfigProperty = {\n  instanceTypeConfigs: [{\n    instanceType: 'instanceType',\n\n    // the properties below are optional\n    bidPrice: 'bidPrice',\n    bidPriceAsPercentageOfOnDemandPrice: 123,\n    configurations: [{\n      classification: 'classification',\n      configurationProperties: {\n        configurationPropertiesKey: 'configurationProperties',\n      },\n      configurations: [configurationProperty_],\n    }],\n    customAmiId: 'customAmiId',\n    ebsConfiguration: {\n      ebsBlockDeviceConfigs: [{\n        volumeSpecification: {\n          sizeInGb: 123,\n          volumeType: 'volumeType',\n\n          // the properties below are optional\n          iops: 123,\n        },\n\n        // the properties below are optional\n        volumesPerInstance: 123,\n      }],\n      ebsOptimized: false,\n    },\n    weightedCapacity: 123,\n  }],\n  launchSpecifications: {\n    onDemandSpecification: {\n      allocationStrategy: 'allocationStrategy',\n    },\n    spotSpecification: {\n      timeoutAction: 'timeoutAction',\n      timeoutDurationMinutes: 123,\n\n      // the properties below are optional\n      allocationStrategy: 'allocationStrategy',\n      blockDurationMinutes: 123,\n    },\n  },\n  name: 'name',\n  targetOnDemandCapacity: 123,\n  targetSpotCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.InstanceFleetConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 1511
      },
      "name": "InstanceFleetConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancefleetconfig.html#cfn-elasticmapreduce-cluster-instancefleetconfig-instancetypeconfigs"
            },
            "stability": "external",
            "summary": "The instance type configurations that define the EC2 instances in the instance fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1517
          },
          "name": "instanceTypeConfigs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.InstanceTypeConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancefleetconfig.html#cfn-elasticmapreduce-cluster-instancefleetconfig-launchspecifications"
            },
            "stability": "external",
            "summary": "The launch specification for the instance fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1523
          },
          "name": "launchSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.InstanceFleetProvisioningSpecificationsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancefleetconfig.html#cfn-elasticmapreduce-cluster-instancefleetconfig-name"
            },
            "stability": "external",
            "summary": "The friendly name of the instance fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1529
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancefleetconfig.html#cfn-elasticmapreduce-cluster-instancefleetconfig-targetondemandcapacity"
            },
            "remarks": "When the instance fleet launches, Amazon EMR tries to provision On-Demand instances as specified by `InstanceTypeConfig` . Each instance configuration has a specified `WeightedCapacity` . When an On-Demand instance is provisioned, the `WeightedCapacity` units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a `WeightedCapacity` of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units.\n\n> If not specified or set to 0, only Spot instances are provisioned for the instance fleet using `TargetSpotCapacity` . At least one of `TargetSpotCapacity` and `TargetOnDemandCapacity` should be greater than 0. For a master instance fleet, only one of `TargetSpotCapacity` and `TargetOnDemandCapacity` can be specified, and its value must be 1.",
            "stability": "external",
            "summary": "The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1537
          },
          "name": "targetOnDemandCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancefleetconfig.html#cfn-elasticmapreduce-cluster-instancefleetconfig-targetspotcapacity"
            },
            "remarks": "When the instance fleet launches, Amazon EMR tries to provision Spot instances as specified by `InstanceTypeConfig` . Each instance configuration has a specified `WeightedCapacity` . When a Spot instance is provisioned, the `WeightedCapacity` units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a `WeightedCapacity` of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units.\n\n> If not specified or set to 0, only On-Demand instances are provisioned for the instance fleet. At least one of `TargetSpotCapacity` and `TargetOnDemandCapacity` should be greater than 0. For a master instance fleet, only one of `TargetSpotCapacity` and `TargetOnDemandCapacity` can be specified, and its value must be 1.",
            "stability": "external",
            "summary": "The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1545
          },
          "name": "targetSpotCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.InstanceFleetConfigProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.InstanceFleetProvisioningSpecificationsProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancefleetprovisioningspecifications.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`InstanceFleetProvisioningSpecification` defines the launch specification for Spot instances in an instance fleet, which determines the defined duration and provisioning timeout behavior for Spot instances.\n\n> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.",
        "stability": "external",
        "summary": "`InstanceFleetProvisioningSpecification` is a subproperty of `InstanceFleetConfig` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst instanceFleetProvisioningSpecificationsProperty: emr.CfnCluster.InstanceFleetProvisioningSpecificationsProperty = {\n  onDemandSpecification: {\n    allocationStrategy: 'allocationStrategy',\n  },\n  spotSpecification: {\n    timeoutAction: 'timeoutAction',\n    timeoutDurationMinutes: 123,\n\n    // the properties below are optional\n    allocationStrategy: 'allocationStrategy',\n    blockDurationMinutes: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.InstanceFleetProvisioningSpecificationsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 1620
      },
      "name": "InstanceFleetProvisioningSpecificationsProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancefleetprovisioningspecifications.html#cfn-elasticmapreduce-cluster-instancefleetprovisioningspecifications-ondemandspecification"
            },
            "remarks": "> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. On-Demand Instances allocation strategy is available in Amazon EMR version 5.12.1 and later.",
            "stability": "external",
            "summary": "The launch specification for On-Demand Instances in the instance fleet, which determines the allocation strategy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1628
          },
          "name": "onDemandSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.OnDemandProvisioningSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancefleetprovisioningspecifications.html#cfn-elasticmapreduce-cluster-instancefleetprovisioningspecifications-spotspecification"
            },
            "stability": "external",
            "summary": "The launch specification for Spot Instances in the fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1634
          },
          "name": "spotSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.SpotProvisioningSpecificationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.InstanceFleetProvisioningSpecificationsProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.InstanceGroupConfigProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancegroupconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A cluster can not use both instance groups and instance fleets. For more information, see [Create a Cluster with Instance Fleets or Uniform Instance Groups](https://docs.aws.amazon.com//emr/latest/ManagementGuide/emr-instance-group-configuration.html) in the *Amazon EMR Management Guide* .",
        "stability": "external",
        "summary": "Use `InstanceGroupConfig` to define instance groups for an EMR cluster.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const configurationProperty_: emr.CfnCluster.ConfigurationProperty;\nconst instanceGroupConfigProperty: emr.CfnCluster.InstanceGroupConfigProperty = {\n  instanceCount: 123,\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  autoScalingPolicy: {\n    constraints: {\n      maxCapacity: 123,\n      minCapacity: 123,\n    },\n    rules: [{\n      action: {\n        simpleScalingPolicyConfiguration: {\n          scalingAdjustment: 123,\n\n          // the properties below are optional\n          adjustmentType: 'adjustmentType',\n          coolDown: 123,\n        },\n\n        // the properties below are optional\n        market: 'market',\n      },\n      name: 'name',\n      trigger: {\n        cloudWatchAlarmDefinition: {\n          comparisonOperator: 'comparisonOperator',\n          metricName: 'metricName',\n          period: 123,\n          threshold: 123,\n\n          // the properties below are optional\n          dimensions: [{\n            key: 'key',\n            value: 'value',\n          }],\n          evaluationPeriods: 123,\n          namespace: 'namespace',\n          statistic: 'statistic',\n          unit: 'unit',\n        },\n      },\n\n      // the properties below are optional\n      description: 'description',\n    }],\n  },\n  bidPrice: 'bidPrice',\n  configurations: [{\n    classification: 'classification',\n    configurationProperties: {\n      configurationPropertiesKey: 'configurationProperties',\n    },\n    configurations: [configurationProperty_],\n  }],\n  customAmiId: 'customAmiId',\n  ebsConfiguration: {\n    ebsBlockDeviceConfigs: [{\n      volumeSpecification: {\n        sizeInGb: 123,\n        volumeType: 'volumeType',\n\n        // the properties below are optional\n        iops: 123,\n      },\n\n      // the properties below are optional\n      volumesPerInstance: 123,\n    }],\n    ebsOptimized: false,\n  },\n  market: 'market',\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.InstanceGroupConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 1698
      },
      "name": "InstanceGroupConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancegroupconfig.html#cfn-elasticmapreduce-cluster-instancegroupconfig-instancecount"
            },
            "stability": "external",
            "summary": "Target number of instances for the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1736
          },
          "name": "instanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancegroupconfig.html#cfn-elasticmapreduce-cluster-instancegroupconfig-instancetype"
            },
            "stability": "external",
            "summary": "The EC2 instance type for all instances in the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1742
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancegroupconfig.html#cfn-elasticmapreduce-cluster-instancegroupconfig-autoscalingpolicy"
            },
            "stability": "external",
            "summary": "`AutoScalingPolicy` is a subproperty of the [InstanceGroupConfig](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig.html) property type that specifies the constraints and rules of an automatic scaling policy in Amazon EMR . The automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. Only core and task instance groups can use automatic scaling policies. For more information, see [Using Automatic Scaling in Amazon EMR](https://docs.aws.amazon.com//emr/latest/ManagementGuide/emr-automatic-scaling.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1704
          },
          "name": "autoScalingPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.AutoScalingPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancegroupconfig.html#cfn-elasticmapreduce-cluster-instancegroupconfig-bidprice"
            },
            "remarks": "This is the maximum price you are willing to pay for Spot Instances. Specify `OnDemandPrice` to set the amount equal to the On-Demand price, or specify an amount in USD.",
            "stability": "external",
            "summary": "If specified, indicates that the instance group uses Spot Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1710
          },
          "name": "bidPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancegroupconfig.html#cfn-elasticmapreduce-cluster-instancegroupconfig-configurations"
            },
            "remarks": "The list of configurations supplied for an EMR cluster instance group. You can specify a separate configuration for each instance group (master, core, and task).",
            "stability": "external",
            "summary": "> Amazon EMR releases 4.x or later."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1718
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.ConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancegroupconfig.html#cfn-elasticmapreduce-cluster-instancegroupconfig-customamiid"
            },
            "stability": "external",
            "summary": "The custom AMI ID to use for the provisioned instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1724
          },
          "name": "customAmiId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancegroupconfig.html#cfn-elasticmapreduce-cluster-instancegroupconfig-ebsconfiguration"
            },
            "stability": "external",
            "summary": "EBS configurations that will be attached to each EC2 instance in the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1730
          },
          "name": "ebsConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.EbsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancegroupconfig.html#cfn-elasticmapreduce-cluster-instancegroupconfig-market"
            },
            "stability": "external",
            "summary": "Market type of the EC2 instances used to create a cluster node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1748
          },
          "name": "market",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancegroupconfig.html#cfn-elasticmapreduce-cluster-instancegroupconfig-name"
            },
            "stability": "external",
            "summary": "Friendly name given to the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1754
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.InstanceGroupConfigProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.InstanceTypeConfigProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancetypeconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`InstanceTypeConfig` is a sub-property of `InstanceFleetConfig` . `InstanceTypeConfig` determines the EC2 instances that Amazon EMR attempts to provision to fulfill On-Demand and Spot target capacities.",
        "stability": "external",
        "summary": "> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const configurationProperty_: emr.CfnCluster.ConfigurationProperty;\nconst instanceTypeConfigProperty: emr.CfnCluster.InstanceTypeConfigProperty = {\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  bidPrice: 'bidPrice',\n  bidPriceAsPercentageOfOnDemandPrice: 123,\n  configurations: [{\n    classification: 'classification',\n    configurationProperties: {\n      configurationPropertiesKey: 'configurationProperties',\n    },\n    configurations: [configurationProperty_],\n  }],\n  customAmiId: 'customAmiId',\n  ebsConfiguration: {\n    ebsBlockDeviceConfigs: [{\n      volumeSpecification: {\n        sizeInGb: 123,\n        volumeType: 'volumeType',\n\n        // the properties below are optional\n        iops: 123,\n      },\n\n      // the properties below are optional\n      volumesPerInstance: 123,\n    }],\n    ebsOptimized: false,\n  },\n  weightedCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.InstanceTypeConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 1843
      },
      "name": "InstanceTypeConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancetypeconfig.html#cfn-elasticmapreduce-cluster-instancetypeconfig-instancetype"
            },
            "stability": "external",
            "summary": "An EC2 instance type, such as `m3.xlarge` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1879
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancetypeconfig.html#cfn-elasticmapreduce-cluster-instancetypeconfig-bidprice"
            },
            "remarks": "Expressed in USD. If neither `BidPrice` nor `BidPriceAsPercentageOfOnDemandPrice` is provided, `BidPriceAsPercentageOfOnDemandPrice` defaults to 100%.",
            "stability": "external",
            "summary": "The bid price for each EC2 Spot Instance type as defined by `InstanceType` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1849
          },
          "name": "bidPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancetypeconfig.html#cfn-elasticmapreduce-cluster-instancetypeconfig-bidpriceaspercentageofondemandprice"
            },
            "remarks": "Expressed as a number (for example, 20 specifies 20%). If neither `BidPrice` nor `BidPriceAsPercentageOfOnDemandPrice` is provided, `BidPriceAsPercentageOfOnDemandPrice` defaults to 100%.",
            "stability": "external",
            "summary": "The bid price, as a percentage of On-Demand price, for each EC2 Spot Instance as defined by `InstanceType` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1855
          },
          "name": "bidPriceAsPercentageOfOnDemandPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancetypeconfig.html#cfn-elasticmapreduce-cluster-instancetypeconfig-configurations"
            },
            "stability": "external",
            "summary": "A configuration classification that applies when provisioning cluster instances, which can include configurations for applications and software that run on the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1861
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.ConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancetypeconfig.html#cfn-elasticmapreduce-cluster-instancetypeconfig-customamiid"
            },
            "stability": "external",
            "summary": "The custom AMI ID to use for the instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1867
          },
          "name": "customAmiId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancetypeconfig.html#cfn-elasticmapreduce-cluster-instancetypeconfig-ebsconfiguration"
            },
            "stability": "external",
            "summary": "The configuration of Amazon Elastic Block Store (Amazon EBS) attached to each instance as defined by `InstanceType` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1873
          },
          "name": "ebsConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.EbsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-instancetypeconfig.html#cfn-elasticmapreduce-cluster-instancetypeconfig-weightedcapacity"
            },
            "remarks": "This value is 1 for a master instance fleet, and must be 1 or greater for core and task instance fleets. Defaults to 1 if not specified.",
            "stability": "external",
            "summary": "The number of units that a provisioned instance of this type provides toward fulfilling the target capacities defined in `InstanceFleetConfig` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1885
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.InstanceTypeConfigProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.JobFlowInstancesConfigProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`JobFlowInstancesConfig` defines the instance groups or instance fleets that comprise the cluster. `JobFlowInstancesConfig` must contain either `InstanceFleetConfig` or `InstanceGroupConfig` . They cannot be used together.\n\nYou can now define task instance groups or task instance fleets using the `TaskInstanceGroups` and `TaskInstanceFleets` subproperties. Using these subproperties reduces delays in provisioning task nodes compared to specifying task nodes with the `InstanceFleetConfig` and `InstanceGroupConfig` resources.",
        "stability": "external",
        "summary": "`JobFlowInstancesConfig` is a property of the `AWS::EMR::Cluster` resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const configurationProperty_: emr.CfnCluster.ConfigurationProperty;\nconst jobFlowInstancesConfigProperty: emr.CfnCluster.JobFlowInstancesConfigProperty = {\n  additionalMasterSecurityGroups: ['additionalMasterSecurityGroups'],\n  additionalSlaveSecurityGroups: ['additionalSlaveSecurityGroups'],\n  coreInstanceFleet: {\n    instanceTypeConfigs: [{\n      instanceType: 'instanceType',\n\n      // the properties below are optional\n      bidPrice: 'bidPrice',\n      bidPriceAsPercentageOfOnDemandPrice: 123,\n      configurations: [{\n        classification: 'classification',\n        configurationProperties: {\n          configurationPropertiesKey: 'configurationProperties',\n        },\n        configurations: [configurationProperty_],\n      }],\n      customAmiId: 'customAmiId',\n      ebsConfiguration: {\n        ebsBlockDeviceConfigs: [{\n          volumeSpecification: {\n            sizeInGb: 123,\n            volumeType: 'volumeType',\n\n            // the properties below are optional\n            iops: 123,\n          },\n\n          // the properties below are optional\n          volumesPerInstance: 123,\n        }],\n        ebsOptimized: false,\n      },\n      weightedCapacity: 123,\n    }],\n    launchSpecifications: {\n      onDemandSpecification: {\n        allocationStrategy: 'allocationStrategy',\n      },\n      spotSpecification: {\n        timeoutAction: 'timeoutAction',\n        timeoutDurationMinutes: 123,\n\n        // the properties below are optional\n        allocationStrategy: 'allocationStrategy',\n        blockDurationMinutes: 123,\n      },\n    },\n    name: 'name',\n    targetOnDemandCapacity: 123,\n    targetSpotCapacity: 123,\n  },\n  coreInstanceGroup: {\n    instanceCount: 123,\n    instanceType: 'instanceType',\n\n    // the properties below are optional\n    autoScalingPolicy: {\n      constraints: {\n        maxCapacity: 123,\n        minCapacity: 123,\n      },\n      rules: [{\n        action: {\n          simpleScalingPolicyConfiguration: {\n            scalingAdjustment: 123,\n\n            // the properties below are optional\n            adjustmentType: 'adjustmentType',\n            coolDown: 123,\n          },\n\n          // the properties below are optional\n          market: 'market',\n        },\n        name: 'name',\n        trigger: {\n          cloudWatchAlarmDefinition: {\n            comparisonOperator: 'comparisonOperator',\n            metricName: 'metricName',\n            period: 123,\n            threshold: 123,\n\n            // the properties below are optional\n            dimensions: [{\n              key: 'key',\n              value: 'value',\n            }],\n            evaluationPeriods: 123,\n            namespace: 'namespace',\n            statistic: 'statistic',\n            unit: 'unit',\n          },\n        },\n\n        // the properties below are optional\n        description: 'description',\n      }],\n    },\n    bidPrice: 'bidPrice',\n    configurations: [{\n      classification: 'classification',\n      configurationProperties: {\n        configurationPropertiesKey: 'configurationProperties',\n      },\n      configurations: [configurationProperty_],\n    }],\n    customAmiId: 'customAmiId',\n    ebsConfiguration: {\n      ebsBlockDeviceConfigs: [{\n        volumeSpecification: {\n          sizeInGb: 123,\n          volumeType: 'volumeType',\n\n          // the properties below are optional\n          iops: 123,\n        },\n\n        // the properties below are optional\n        volumesPerInstance: 123,\n      }],\n      ebsOptimized: false,\n    },\n    market: 'market',\n    name: 'name',\n  },\n  ec2KeyName: 'ec2KeyName',\n  ec2SubnetId: 'ec2SubnetId',\n  ec2SubnetIds: ['ec2SubnetIds'],\n  emrManagedMasterSecurityGroup: 'emrManagedMasterSecurityGroup',\n  emrManagedSlaveSecurityGroup: 'emrManagedSlaveSecurityGroup',\n  hadoopVersion: 'hadoopVersion',\n  keepJobFlowAliveWhenNoSteps: false,\n  masterInstanceFleet: {\n    instanceTypeConfigs: [{\n      instanceType: 'instanceType',\n\n      // the properties below are optional\n      bidPrice: 'bidPrice',\n      bidPriceAsPercentageOfOnDemandPrice: 123,\n      configurations: [{\n        classification: 'classification',\n        configurationProperties: {\n          configurationPropertiesKey: 'configurationProperties',\n        },\n        configurations: [configurationProperty_],\n      }],\n      customAmiId: 'customAmiId',\n      ebsConfiguration: {\n        ebsBlockDeviceConfigs: [{\n          volumeSpecification: {\n            sizeInGb: 123,\n            volumeType: 'volumeType',\n\n            // the properties below are optional\n            iops: 123,\n          },\n\n          // the properties below are optional\n          volumesPerInstance: 123,\n        }],\n        ebsOptimized: false,\n      },\n      weightedCapacity: 123,\n    }],\n    launchSpecifications: {\n      onDemandSpecification: {\n        allocationStrategy: 'allocationStrategy',\n      },\n      spotSpecification: {\n        timeoutAction: 'timeoutAction',\n        timeoutDurationMinutes: 123,\n\n        // the properties below are optional\n        allocationStrategy: 'allocationStrategy',\n        blockDurationMinutes: 123,\n      },\n    },\n    name: 'name',\n    targetOnDemandCapacity: 123,\n    targetSpotCapacity: 123,\n  },\n  masterInstanceGroup: {\n    instanceCount: 123,\n    instanceType: 'instanceType',\n\n    // the properties below are optional\n    autoScalingPolicy: {\n      constraints: {\n        maxCapacity: 123,\n        minCapacity: 123,\n      },\n      rules: [{\n        action: {\n          simpleScalingPolicyConfiguration: {\n            scalingAdjustment: 123,\n\n            // the properties below are optional\n            adjustmentType: 'adjustmentType',\n            coolDown: 123,\n          },\n\n          // the properties below are optional\n          market: 'market',\n        },\n        name: 'name',\n        trigger: {\n          cloudWatchAlarmDefinition: {\n            comparisonOperator: 'comparisonOperator',\n            metricName: 'metricName',\n            period: 123,\n            threshold: 123,\n\n            // the properties below are optional\n            dimensions: [{\n              key: 'key',\n              value: 'value',\n            }],\n            evaluationPeriods: 123,\n            namespace: 'namespace',\n            statistic: 'statistic',\n            unit: 'unit',\n          },\n        },\n\n        // the properties below are optional\n        description: 'description',\n      }],\n    },\n    bidPrice: 'bidPrice',\n    configurations: [{\n      classification: 'classification',\n      configurationProperties: {\n        configurationPropertiesKey: 'configurationProperties',\n      },\n      configurations: [configurationProperty_],\n    }],\n    customAmiId: 'customAmiId',\n    ebsConfiguration: {\n      ebsBlockDeviceConfigs: [{\n        volumeSpecification: {\n          sizeInGb: 123,\n          volumeType: 'volumeType',\n\n          // the properties below are optional\n          iops: 123,\n        },\n\n        // the properties below are optional\n        volumesPerInstance: 123,\n      }],\n      ebsOptimized: false,\n    },\n    market: 'market',\n    name: 'name',\n  },\n  placement: {\n    availabilityZone: 'availabilityZone',\n  },\n  serviceAccessSecurityGroup: 'serviceAccessSecurityGroup',\n  taskInstanceFleets: [{\n    instanceTypeConfigs: [{\n      instanceType: 'instanceType',\n\n      // the properties below are optional\n      bidPrice: 'bidPrice',\n      bidPriceAsPercentageOfOnDemandPrice: 123,\n      configurations: [{\n        classification: 'classification',\n        configurationProperties: {\n          configurationPropertiesKey: 'configurationProperties',\n        },\n        configurations: [configurationProperty_],\n      }],\n      customAmiId: 'customAmiId',\n      ebsConfiguration: {\n        ebsBlockDeviceConfigs: [{\n          volumeSpecification: {\n            sizeInGb: 123,\n            volumeType: 'volumeType',\n\n            // the properties below are optional\n            iops: 123,\n          },\n\n          // the properties below are optional\n          volumesPerInstance: 123,\n        }],\n        ebsOptimized: false,\n      },\n      weightedCapacity: 123,\n    }],\n    launchSpecifications: {\n      onDemandSpecification: {\n        allocationStrategy: 'allocationStrategy',\n      },\n      spotSpecification: {\n        timeoutAction: 'timeoutAction',\n        timeoutDurationMinutes: 123,\n\n        // the properties below are optional\n        allocationStrategy: 'allocationStrategy',\n        blockDurationMinutes: 123,\n      },\n    },\n    name: 'name',\n    targetOnDemandCapacity: 123,\n    targetSpotCapacity: 123,\n  }],\n  taskInstanceGroups: [{\n    instanceCount: 123,\n    instanceType: 'instanceType',\n\n    // the properties below are optional\n    autoScalingPolicy: {\n      constraints: {\n        maxCapacity: 123,\n        minCapacity: 123,\n      },\n      rules: [{\n        action: {\n          simpleScalingPolicyConfiguration: {\n            scalingAdjustment: 123,\n\n            // the properties below are optional\n            adjustmentType: 'adjustmentType',\n            coolDown: 123,\n          },\n\n          // the properties below are optional\n          market: 'market',\n        },\n        name: 'name',\n        trigger: {\n          cloudWatchAlarmDefinition: {\n            comparisonOperator: 'comparisonOperator',\n            metricName: 'metricName',\n            period: 123,\n            threshold: 123,\n\n            // the properties below are optional\n            dimensions: [{\n              key: 'key',\n              value: 'value',\n            }],\n            evaluationPeriods: 123,\n            namespace: 'namespace',\n            statistic: 'statistic',\n            unit: 'unit',\n          },\n        },\n\n        // the properties below are optional\n        description: 'description',\n      }],\n    },\n    bidPrice: 'bidPrice',\n    configurations: [{\n      classification: 'classification',\n      configurationProperties: {\n        configurationPropertiesKey: 'configurationProperties',\n      },\n      configurations: [configurationProperty_],\n    }],\n    customAmiId: 'customAmiId',\n    ebsConfiguration: {\n      ebsBlockDeviceConfigs: [{\n        volumeSpecification: {\n          sizeInGb: 123,\n          volumeType: 'volumeType',\n\n          // the properties below are optional\n          iops: 123,\n        },\n\n        // the properties below are optional\n        volumesPerInstance: 123,\n      }],\n      ebsOptimized: false,\n    },\n    market: 'market',\n    name: 'name',\n  }],\n  terminationProtected: false,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.JobFlowInstancesConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 1967
      },
      "name": "JobFlowInstancesConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-additionalmastersecuritygroups"
            },
            "stability": "external",
            "summary": "A list of additional Amazon EC2 security group IDs for the master node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1973
          },
          "name": "additionalMasterSecurityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-additionalslavesecuritygroups"
            },
            "stability": "external",
            "summary": "A list of additional Amazon EC2 security group IDs for the core and task nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1979
          },
          "name": "additionalSlaveSecurityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-coreinstancefleet"
            },
            "stability": "external",
            "summary": "Describes the EC2 instances and instance configurations for the core instance fleet when using clusters with the instance fleet configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1985
          },
          "name": "coreInstanceFleet",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.InstanceFleetConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-coreinstancegroup"
            },
            "stability": "external",
            "summary": "Describes the EC2 instances and instance configurations for core instance groups when using clusters with the uniform instance group configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1991
          },
          "name": "coreInstanceGroup",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.InstanceGroupConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-ec2keyname"
            },
            "stability": "external",
            "summary": "The name of the EC2 key pair that can be used to connect to the master node using SSH as the user called \"hadoop.\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 1997
          },
          "name": "ec2KeyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-ec2subnetid"
            },
            "remarks": "To launch the cluster in Amazon Virtual Private Cloud (Amazon VPC), set this parameter to the identifier of the Amazon VPC subnet where you want the cluster to launch. If you do not specify this value and your account supports EC2-Classic, the cluster launches in EC2-Classic.",
            "stability": "external",
            "summary": "Applies to clusters that use the uniform instance group configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2003
          },
          "name": "ec2SubnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-ec2subnetids"
            },
            "remarks": "When multiple EC2 subnet IDs are specified, Amazon EMR evaluates them and launches instances in the optimal subnet.\n\n> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.",
            "stability": "external",
            "summary": "Applies to clusters that use the instance fleet configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2011
          },
          "name": "ec2SubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-emrmanagedmastersecuritygroup"
            },
            "remarks": "If you specify `EmrManagedMasterSecurityGroup` , you must also specify `EmrManagedSlaveSecurityGroup` .",
            "stability": "external",
            "summary": "The identifier of the Amazon EC2 security group for the master node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2017
          },
          "name": "emrManagedMasterSecurityGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-emrmanagedslavesecuritygroup"
            },
            "remarks": "If you specify `EmrManagedSlaveSecurityGroup` , you must also specify `EmrManagedMasterSecurityGroup` .",
            "stability": "external",
            "summary": "The identifier of the Amazon EC2 security group for the core and task nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2023
          },
          "name": "emrManagedSlaveSecurityGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-hadoopversion"
            },
            "stability": "external",
            "summary": "Applies only to Amazon EMR release versions earlier than 4.0. The Hadoop version for the cluster. Valid inputs are \"0.18\" (no longer maintained), \"0.20\" (no longer maintained), \"0.20.205\" (no longer maintained), \"1.0.3\", \"2.2.0\", or \"2.4.0\". If you do not set this value, the default of 0.18 is used, unless the `AmiVersion` parameter is set in the RunJobFlow call, in which case the default version of Hadoop for that AMI version is used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2029
          },
          "name": "hadoopVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-keepjobflowalivewhennosteps"
            },
            "remarks": "Defaults to `true` . For more information about configuring cluster termination, see [Control Cluster Termination](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-termination.html) in the *EMR Management Guide* .",
            "stability": "external",
            "summary": "Specifies whether the cluster should remain available after completing all steps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2035
          },
          "name": "keepJobFlowAliveWhenNoSteps",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-masterinstancefleet"
            },
            "stability": "external",
            "summary": "Describes the EC2 instances and instance configurations for the master instance fleet when using clusters with the instance fleet configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2041
          },
          "name": "masterInstanceFleet",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.InstanceFleetConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-masterinstancegroup"
            },
            "stability": "external",
            "summary": "Describes the EC2 instances and instance configurations for the master instance group when using clusters with the uniform instance group configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2047
          },
          "name": "masterInstanceGroup",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.InstanceGroupConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-placement"
            },
            "stability": "external",
            "summary": "The Availability Zone in which the cluster runs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2053
          },
          "name": "placement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.PlacementTypeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-serviceaccesssecuritygroup"
            },
            "stability": "external",
            "summary": "The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2059
          },
          "name": "serviceAccessSecurityGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-taskinstancefleets"
            },
            "stability": "external",
            "summary": "`CfnCluster.JobFlowInstancesConfigProperty.TaskInstanceFleets`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2065
          },
          "name": "taskInstanceFleets",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.InstanceFleetConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-taskinstancegroups"
            },
            "stability": "external",
            "summary": "`CfnCluster.JobFlowInstancesConfigProperty.TaskInstanceGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2071
          },
          "name": "taskInstanceGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.InstanceGroupConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html#cfn-elasticmapreduce-cluster-jobflowinstancesconfig-terminationprotected"
            },
            "stability": "external",
            "summary": "Specifies whether to lock the cluster to prevent the Amazon EC2 instances from being terminated by API call, user intervention, or in the event of a job-flow error."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2077
          },
          "name": "terminationProtected",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.JobFlowInstancesConfigProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.KerberosAttributesProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-kerberosattributes.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`KerberosAttributes` define the cluster-specific Kerberos configuration when Kerberos authentication is enabled using a security configuration. The cluster-specific configuration must be compatible with the security configuration. For more information see [Use Kerberos Authentication](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html) in the *EMR Management Guide* .",
        "stability": "external",
        "summary": "`KerberosAttributes` is a property of the `AWS::EMR::Cluster` resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst kerberosAttributesProperty: emr.CfnCluster.KerberosAttributesProperty = {\n  kdcAdminPassword: 'kdcAdminPassword',\n  realm: 'realm',\n\n  // the properties below are optional\n  adDomainJoinPassword: 'adDomainJoinPassword',\n  adDomainJoinUser: 'adDomainJoinUser',\n  crossRealmTrustPrincipalPassword: 'crossRealmTrustPrincipalPassword',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.KerberosAttributesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 2189
      },
      "name": "KerberosAttributesProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-kerberosattributes.html#cfn-elasticmapreduce-cluster-kerberosattributes-kdcadminpassword"
            },
            "stability": "external",
            "summary": "The password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos principals, password policies, and keytabs for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2213
          },
          "name": "kdcAdminPassword",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-kerberosattributes.html#cfn-elasticmapreduce-cluster-kerberosattributes-realm"
            },
            "remarks": "For example, `EC2.INTERNAL` .",
            "stability": "external",
            "summary": "The name of the Kerberos realm to which all nodes in a cluster belong."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2219
          },
          "name": "realm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-kerberosattributes.html#cfn-elasticmapreduce-cluster-kerberosattributes-addomainjoinpassword"
            },
            "stability": "external",
            "summary": "The Active Directory password for `ADDomainJoinUser` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2195
          },
          "name": "adDomainJoinPassword",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-kerberosattributes.html#cfn-elasticmapreduce-cluster-kerberosattributes-addomainjoinuser"
            },
            "remarks": "A user with sufficient privileges to join resources to the domain.",
            "stability": "external",
            "summary": "Required only when establishing a cross-realm trust with an Active Directory domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2201
          },
          "name": "adDomainJoinUser",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-kerberosattributes.html#cfn-elasticmapreduce-cluster-kerberosattributes-crossrealmtrustprincipalpassword"
            },
            "remarks": "The cross-realm principal password, which must be identical across realms.",
            "stability": "external",
            "summary": "Required only when establishing a cross-realm trust with a KDC in a different realm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2207
          },
          "name": "crossRealmTrustPrincipalPassword",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.KerberosAttributesProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.KeyValueProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-keyvalue.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`KeyValue` is used to pass parameters to a step.",
        "stability": "external",
        "summary": "`KeyValue` is a subproperty of the `HadoopJarStepConfig` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst keyValueProperty: emr.CfnCluster.KeyValueProperty = {\n  key: 'key',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.KeyValueProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 2294
      },
      "name": "KeyValueProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-keyvalue.html#cfn-elasticmapreduce-cluster-keyvalue-key"
            },
            "stability": "external",
            "summary": "The unique identifier of a key-value pair."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2300
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-keyvalue.html#cfn-elasticmapreduce-cluster-keyvalue-value"
            },
            "stability": "external",
            "summary": "The value part of the identified key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2306
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.KeyValueProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.ManagedScalingPolicyProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-managedscalingpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The policy specifies the limits for resources that can be added or terminated from a cluster. The policy only applies to the core and task nodes. The master node cannot be scaled after initial configuration.",
        "stability": "external",
        "summary": "Managed scaling policy for an Amazon EMR cluster.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst managedScalingPolicyProperty: emr.CfnCluster.ManagedScalingPolicyProperty = {\n  computeLimits: {\n    maximumCapacityUnits: 123,\n    minimumCapacityUnits: 123,\n    unitType: 'unitType',\n\n    // the properties below are optional\n    maximumCoreCapacityUnits: 123,\n    maximumOnDemandCapacityUnits: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.ManagedScalingPolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 2370
      },
      "name": "ManagedScalingPolicyProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-managedscalingpolicy.html#cfn-elasticmapreduce-cluster-managedscalingpolicy-computelimits"
            },
            "remarks": "The managed scaling activity of a cluster is not allowed to go above or below these limits. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.",
            "stability": "external",
            "summary": "The EC2 unit limits for a managed scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2376
          },
          "name": "computeLimits",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.ComputeLimitsProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.ManagedScalingPolicyProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.MetricDimensionProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-metricdimension.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`MetricDimension` specifies a CloudWatch dimension, which is specified with a `Key` `Value` pair. The key is known as a `Name` in CloudWatch. By default, Amazon EMR uses one dimension whose `Key` is `JobFlowID` and `Value` is a variable representing the cluster ID, which is `${emr.clusterId}` . This enables the automatic scaling rule for EMR to bootstrap when the cluster ID becomes available during cluster creation.",
        "stability": "external",
        "summary": "`MetricDimension` is a subproperty of the `CloudWatchAlarmDefinition` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst metricDimensionProperty: emr.CfnCluster.MetricDimensionProperty = {\n  key: 'key',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.MetricDimensionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 2437
      },
      "name": "MetricDimensionProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-metricdimension.html#cfn-elasticmapreduce-cluster-metricdimension-key"
            },
            "stability": "external",
            "summary": "The dimension name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2443
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-metricdimension.html#cfn-elasticmapreduce-cluster-metricdimension-value"
            },
            "stability": "external",
            "summary": "The dimension value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2449
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.MetricDimensionProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.OnDemandProvisioningSpecificationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-ondemandprovisioningspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. On-Demand Instances allocation strategy is available in Amazon EMR version 5.12.1 and later.",
        "stability": "external",
        "summary": "The launch specification for On-Demand Instances in the instance fleet, which determines the allocation strategy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst onDemandProvisioningSpecificationProperty: emr.CfnCluster.OnDemandProvisioningSpecificationProperty = {\n  allocationStrategy: 'allocationStrategy',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.OnDemandProvisioningSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 2517
      },
      "name": "OnDemandProvisioningSpecificationProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-ondemandprovisioningspecification.html#cfn-elasticmapreduce-cluster-ondemandprovisioningspecification-allocationstrategy"
            },
            "remarks": "Currently, the only option is `lowest-price` (the default), which launches the lowest price first.",
            "stability": "external",
            "summary": "Specifies the strategy to use in launching On-Demand instance fleets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2523
          },
          "name": "allocationStrategy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.OnDemandProvisioningSpecificationProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.PlacementTypeProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-placementtype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`PlacementType` determines the Amazon EC2 Availability Zone configuration of the cluster (job flow).",
        "stability": "external",
        "summary": "`PlacementType` is a property of the `AWS::EMR::Cluster` resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst placementTypeProperty: emr.CfnCluster.PlacementTypeProperty = {\n  availabilityZone: 'availabilityZone',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.PlacementTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 2585
      },
      "name": "PlacementTypeProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-placementtype.html#cfn-elasticmapreduce-cluster-placementtype-availabilityzone"
            },
            "remarks": "`AvailabilityZone` is used for uniform instance groups, while `AvailabilityZones` (plural) is used for instance fleets.",
            "stability": "external",
            "summary": "The Amazon EC2 Availability Zone for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2591
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.PlacementTypeProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.ScalingActionProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`ScalingAction` determines the type of adjustment the automatic scaling activity makes when triggered, and the periodicity of the adjustment.",
        "stability": "external",
        "summary": "`ScalingAction` is a subproperty of the `ScalingRule` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst scalingActionProperty: emr.CfnCluster.ScalingActionProperty = {\n  simpleScalingPolicyConfiguration: {\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    adjustmentType: 'adjustmentType',\n    coolDown: 123,\n  },\n\n  // the properties below are optional\n  market: 'market',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.ScalingActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 2653
      },
      "name": "ScalingActionProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingaction.html#cfn-elasticmapreduce-cluster-scalingaction-simplescalingpolicyconfiguration"
            },
            "stability": "external",
            "summary": "The type of adjustment the automatic scaling activity makes when triggered, and the periodicity of the adjustment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2665
          },
          "name": "simpleScalingPolicyConfiguration",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.SimpleScalingPolicyConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingaction.html#cfn-elasticmapreduce-cluster-scalingaction-market"
            },
            "remarks": "Instance groups use the market type specified for the group.",
            "stability": "external",
            "summary": "Not available for instance groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2659
          },
          "name": "market",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.ScalingActionProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.ScalingConstraintsProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingconstraints.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`ScalingConstraints` defines the upper and lower EC2 instance limits for an automatic scaling policy. Automatic scaling activities triggered by automatic scaling rules will not cause an instance group to grow above or shrink below these limits.",
        "stability": "external",
        "summary": "`ScalingConstraints` is a subproperty of the `AutoScalingPolicy` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst scalingConstraintsProperty: emr.CfnCluster.ScalingConstraintsProperty = {\n  maxCapacity: 123,\n  minCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.ScalingConstraintsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 2730
      },
      "name": "ScalingConstraintsProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingconstraints.html#cfn-elasticmapreduce-cluster-scalingconstraints-maxcapacity"
            },
            "remarks": "Scale-out activities will not add instances beyond this boundary.",
            "stability": "external",
            "summary": "The upper boundary of EC2 instances in an instance group beyond which scaling activities are not allowed to grow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2736
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingconstraints.html#cfn-elasticmapreduce-cluster-scalingconstraints-mincapacity"
            },
            "remarks": "Scale-in activities will not terminate instances below this boundary.",
            "stability": "external",
            "summary": "The lower boundary of EC2 instances in an instance group below which scaling activities are not allowed to shrink."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2742
          },
          "name": "minCapacity",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.ScalingConstraintsProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.ScalingRuleProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`ScalingRule` defines the scale-in or scale-out rules for scaling activity, including the CloudWatch metric alarm that triggers activity, how EC2 instances are added or removed, and the periodicity of adjustments. The automatic scaling policy for an instance group can comprise one or more automatic scaling rules.",
        "stability": "external",
        "summary": "`ScalingRule` is a subproperty of the `AutoScalingPolicy` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst scalingRuleProperty: emr.CfnCluster.ScalingRuleProperty = {\n  action: {\n    simpleScalingPolicyConfiguration: {\n      scalingAdjustment: 123,\n\n      // the properties below are optional\n      adjustmentType: 'adjustmentType',\n      coolDown: 123,\n    },\n\n    // the properties below are optional\n    market: 'market',\n  },\n  name: 'name',\n  trigger: {\n    cloudWatchAlarmDefinition: {\n      comparisonOperator: 'comparisonOperator',\n      metricName: 'metricName',\n      period: 123,\n      threshold: 123,\n\n      // the properties below are optional\n      dimensions: [{\n        key: 'key',\n        value: 'value',\n      }],\n      evaluationPeriods: 123,\n      namespace: 'namespace',\n      statistic: 'statistic',\n      unit: 'unit',\n    },\n  },\n\n  // the properties below are optional\n  description: 'description',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.ScalingRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 2808
      },
      "name": "ScalingRuleProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingrule.html#cfn-elasticmapreduce-cluster-scalingrule-action"
            },
            "stability": "external",
            "summary": "The conditions that trigger an automatic scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2814
          },
          "name": "action",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.ScalingActionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingrule.html#cfn-elasticmapreduce-cluster-scalingrule-name"
            },
            "remarks": "Rule names must be unique within a scaling policy.",
            "stability": "external",
            "summary": "The name used to identify an automatic scaling rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2826
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingrule.html#cfn-elasticmapreduce-cluster-scalingrule-trigger"
            },
            "stability": "external",
            "summary": "The CloudWatch alarm definition that determines when automatic scaling activity is triggered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2832
          },
          "name": "trigger",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.ScalingTriggerProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingrule.html#cfn-elasticmapreduce-cluster-scalingrule-description"
            },
            "stability": "external",
            "summary": "A friendly, more verbose description of the automatic scaling rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2820
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.ScalingRuleProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.ScalingTriggerProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingtrigger.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`ScalingTrigger` determines the conditions that trigger an automatic scaling activity.",
        "stability": "external",
        "summary": "`ScalingTrigger` is a subproperty of the `ScalingRule` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst scalingTriggerProperty: emr.CfnCluster.ScalingTriggerProperty = {\n  cloudWatchAlarmDefinition: {\n    comparisonOperator: 'comparisonOperator',\n    metricName: 'metricName',\n    period: 123,\n    threshold: 123,\n\n    // the properties below are optional\n    dimensions: [{\n      key: 'key',\n      value: 'value',\n    }],\n    evaluationPeriods: 123,\n    namespace: 'namespace',\n    statistic: 'statistic',\n    unit: 'unit',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.ScalingTriggerProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 2905
      },
      "name": "ScalingTriggerProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scalingtrigger.html#cfn-elasticmapreduce-cluster-scalingtrigger-cloudwatchalarmdefinition"
            },
            "remarks": "When the defined alarm conditions are met along with other trigger parameters, scaling activity begins.",
            "stability": "external",
            "summary": "The definition of a CloudWatch metric alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2911
          },
          "name": "cloudWatchAlarmDefinition",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.CloudWatchAlarmDefinitionProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.ScalingTriggerProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.ScriptBootstrapActionConfigProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scriptbootstrapactionconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`ScriptBootstrapActionConfig` specifies the arguments and location of the bootstrap script for EMR to run on all cluster nodes before it installs open-source big data applications on them.",
        "stability": "external",
        "summary": "`ScriptBootstrapActionConfig` is a subproperty of the `BootstrapActionConfig` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst scriptBootstrapActionConfigProperty: emr.CfnCluster.ScriptBootstrapActionConfigProperty = {\n  path: 'path',\n\n  // the properties below are optional\n  args: ['args'],\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.ScriptBootstrapActionConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 2973
      },
      "name": "ScriptBootstrapActionConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scriptbootstrapactionconfig.html#cfn-elasticmapreduce-cluster-scriptbootstrapactionconfig-path"
            },
            "stability": "external",
            "summary": "Location in Amazon S3 of the script to run during a bootstrap action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2985
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-scriptbootstrapactionconfig.html#cfn-elasticmapreduce-cluster-scriptbootstrapactionconfig-args"
            },
            "stability": "external",
            "summary": "A list of command line arguments to pass to the bootstrap action script."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 2979
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.ScriptBootstrapActionConfigProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.SimpleScalingPolicyConfigurationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-simplescalingpolicyconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`SimpleScalingPolicyConfiguration` determines how an automatic scaling action adds or removes instances, the cooldown period, and the number of EC2 instances that are added each time the CloudWatch metric alarm condition is satisfied.",
        "stability": "external",
        "summary": "`SimpleScalingPolicyConfiguration` is a subproperty of the `ScalingAction` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst simpleScalingPolicyConfigurationProperty: emr.CfnCluster.SimpleScalingPolicyConfigurationProperty = {\n  scalingAdjustment: 123,\n\n  // the properties below are optional\n  adjustmentType: 'adjustmentType',\n  coolDown: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.SimpleScalingPolicyConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 3050
      },
      "name": "SimpleScalingPolicyConfigurationProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-simplescalingpolicyconfiguration.html#cfn-elasticmapreduce-cluster-simplescalingpolicyconfiguration-scalingadjustment"
            },
            "remarks": "A positive value adds to the instance group's EC2 instance count while a negative number removes instances. If `AdjustmentType` is set to `EXACT_CAPACITY` , the number should only be a positive integer. If `AdjustmentType` is set to `PERCENT_CHANGE_IN_CAPACITY` , the value should express the percentage as an integer. For example, -20 indicates a decrease in 20% increments of cluster capacity.",
            "stability": "external",
            "summary": "The amount by which to scale in or scale out, based on the specified `AdjustmentType` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3068
          },
          "name": "scalingAdjustment",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-simplescalingpolicyconfiguration.html#cfn-elasticmapreduce-cluster-simplescalingpolicyconfiguration-adjustmenttype"
            },
            "remarks": "`CHANGE_IN_CAPACITY` is the default. `CHANGE_IN_CAPACITY` indicates that the EC2 instance count increments or decrements by `ScalingAdjustment` , which should be expressed as an integer. `PERCENT_CHANGE_IN_CAPACITY` indicates the instance count increments or decrements by the percentage specified by `ScalingAdjustment` , which should be expressed as an integer. For example, 20 indicates an increase in 20% increments of cluster capacity. `EXACT_CAPACITY` indicates the scaling activity results in an instance group with the number of EC2 instances specified by `ScalingAdjustment` , which should be expressed as a positive integer.",
            "stability": "external",
            "summary": "The way in which EC2 instances are added (if `ScalingAdjustment` is a positive number) or terminated (if `ScalingAdjustment` is a negative number) each time the scaling activity is triggered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3056
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-simplescalingpolicyconfiguration.html#cfn-elasticmapreduce-cluster-simplescalingpolicyconfiguration-cooldown"
            },
            "remarks": "The default value is 0.",
            "stability": "external",
            "summary": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3062
          },
          "name": "coolDown",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.SimpleScalingPolicyConfigurationProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.SpotProvisioningSpecificationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-spotprovisioningspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`SpotProvisioningSpecification` determines the launch specification for Spot instances in the instance fleet, which includes the defined duration and provisioning timeout behavior.\n\n> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.",
        "stability": "external",
        "summary": "`SpotProvisioningSpecification` is a subproperty of the `InstanceFleetProvisioningSpecifications` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst spotProvisioningSpecificationProperty: emr.CfnCluster.SpotProvisioningSpecificationProperty = {\n  timeoutAction: 'timeoutAction',\n  timeoutDurationMinutes: 123,\n\n  // the properties below are optional\n  allocationStrategy: 'allocationStrategy',\n  blockDurationMinutes: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.SpotProvisioningSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 3138
      },
      "name": "SpotProvisioningSpecificationProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-spotprovisioningspecification.html#cfn-elasticmapreduce-cluster-spotprovisioningspecification-timeoutaction"
            },
            "remarks": "that is, when all Spot Instances could not be provisioned within the Spot provisioning timeout. Valid values are `TERMINATE_CLUSTER` and `SWITCH_TO_ON_DEMAND` . SWITCH_TO_ON_DEMAND specifies that if no Spot Instances are available, On-Demand Instances should be provisioned to fulfill any remaining Spot capacity.",
            "stability": "external",
            "summary": "The action to take when `TargetSpotCapacity` has not been fulfilled when the `TimeoutDurationMinutes` has expired;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3158
          },
          "name": "timeoutAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-spotprovisioningspecification.html#cfn-elasticmapreduce-cluster-spotprovisioningspecification-timeoutdurationminutes"
            },
            "remarks": "If Spot Instances are not provisioned within this time period, the `TimeOutAction` is taken. Minimum value is 5 and maximum value is 1440. The timeout applies only during initial provisioning, when the cluster is first created.",
            "stability": "external",
            "summary": "The spot provisioning timeout period in minutes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3164
          },
          "name": "timeoutDurationMinutes",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-spotprovisioningspecification.html#cfn-elasticmapreduce-cluster-spotprovisioningspecification-allocationstrategy"
            },
            "remarks": "Currently, the only option is capacity-optimized (the default), which launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.",
            "stability": "external",
            "summary": "Specifies the strategy to use in launching Spot Instance fleets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3144
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-spotprovisioningspecification.html#cfn-elasticmapreduce-cluster-spotprovisioningspecification-blockdurationminutes"
            },
            "remarks": "When specified, the Spot Instance does not terminate before the defined duration expires, and defined duration pricing for Spot Instances applies. Valid values are 60, 120, 180, 240, 300, or 360. The duration period starts as soon as a Spot Instance receives its instance ID. At the end of the duration, Amazon EC2 marks the Spot Instance for termination and provides a Spot Instance termination notice, which gives the instance a two-minute warning before it terminates.\n\n> Spot Instances with a defined duration (also known as Spot blocks) are no longer available to new customers from July 1, 2021. For customers who have previously used the feature, we will continue to support Spot Instances with a defined duration until December 31, 2022.",
            "stability": "external",
            "summary": "The defined duration for Spot Instances (also known as Spot blocks) in minutes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3152
          },
          "name": "blockDurationMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.SpotProvisioningSpecificationProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.StepConfigProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-stepconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `StepConfig` property type specifies a cluster (job flow) step, which runs only on the master node. Steps are used to submit data processing jobs to the cluster.",
        "stability": "external",
        "summary": "`StepConfig` is a property of the `AWS::EMR::Cluster` resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst stepConfigProperty: emr.CfnCluster.StepConfigProperty = {\n  hadoopJarStep: {\n    jar: 'jar',\n\n    // the properties below are optional\n    args: ['args'],\n    mainClass: 'mainClass',\n    stepProperties: [{\n      key: 'key',\n      value: 'value',\n    }],\n  },\n  name: 'name',\n\n  // the properties below are optional\n  actionOnFailure: 'actionOnFailure',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.StepConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 3236
      },
      "name": "StepConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-stepconfig.html#cfn-elasticmapreduce-cluster-stepconfig-hadoopjarstep"
            },
            "stability": "external",
            "summary": "The JAR file used for the step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3248
          },
          "name": "hadoopJarStep",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.HadoopJarStepConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-stepconfig.html#cfn-elasticmapreduce-cluster-stepconfig-name"
            },
            "stability": "external",
            "summary": "The name of the step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3254
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-stepconfig.html#cfn-elasticmapreduce-cluster-stepconfig-actiononfailure"
            },
            "remarks": "Possible values are `CANCEL_AND_WAIT` and `CONTINUE` .",
            "stability": "external",
            "summary": "The action to take when the cluster step fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3242
          },
          "name": "actionOnFailure",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.StepConfigProperty"
    },
    "@aws-cdk/aws-emr.CfnCluster.VolumeSpecificationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-volumespecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`VolumeSecification` determines the volume type, IOPS, and size (GiB) for EBS volumes attached to EC2 instances.",
        "stability": "external",
        "summary": "`VolumeSpecification` is a subproperty of the `EbsBlockDeviceConfig` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst volumeSpecificationProperty: emr.CfnCluster.VolumeSpecificationProperty = {\n  sizeInGb: 123,\n  volumeType: 'volumeType',\n\n  // the properties below are optional\n  iops: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnCluster.VolumeSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 3323
      },
      "name": "VolumeSpecificationProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-volumespecification.html#cfn-elasticmapreduce-cluster-volumespecification-sizeingb"
            },
            "remarks": "This can be a number from 1 - 1024. If the volume type is EBS-optimized, the minimum value is 10.",
            "stability": "external",
            "summary": "The volume size, in gibibytes (GiB)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3335
          },
          "name": "sizeInGb",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-volumespecification.html#cfn-elasticmapreduce-cluster-volumespecification-volumetype"
            },
            "remarks": "Volume types supported are gp2, io1, and standard.",
            "stability": "external",
            "summary": "The volume type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3341
          },
          "name": "volumeType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-volumespecification.html#cfn-elasticmapreduce-cluster-volumespecification-iops"
            },
            "stability": "external",
            "summary": "The number of I/O operations per second (IOPS) that the volume supports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3329
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnCluster.VolumeSpecificationProperty"
    },
    "@aws-cdk/aws-emr.CfnClusterProps": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCluster`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const additionalInfo: any;\ndeclare const configurationProperty_: emr.CfnCluster.ConfigurationProperty;\nconst cfnClusterProps: emr.CfnClusterProps = {\n  instances: {\n    additionalMasterSecurityGroups: ['additionalMasterSecurityGroups'],\n    additionalSlaveSecurityGroups: ['additionalSlaveSecurityGroups'],\n    coreInstanceFleet: {\n      instanceTypeConfigs: [{\n        instanceType: 'instanceType',\n\n        // the properties below are optional\n        bidPrice: 'bidPrice',\n        bidPriceAsPercentageOfOnDemandPrice: 123,\n        configurations: [{\n          classification: 'classification',\n          configurationProperties: {\n            configurationPropertiesKey: 'configurationProperties',\n          },\n          configurations: [configurationProperty_],\n        }],\n        customAmiId: 'customAmiId',\n        ebsConfiguration: {\n          ebsBlockDeviceConfigs: [{\n            volumeSpecification: {\n              sizeInGb: 123,\n              volumeType: 'volumeType',\n\n              // the properties below are optional\n              iops: 123,\n            },\n\n            // the properties below are optional\n            volumesPerInstance: 123,\n          }],\n          ebsOptimized: false,\n        },\n        weightedCapacity: 123,\n      }],\n      launchSpecifications: {\n        onDemandSpecification: {\n          allocationStrategy: 'allocationStrategy',\n        },\n        spotSpecification: {\n          timeoutAction: 'timeoutAction',\n          timeoutDurationMinutes: 123,\n\n          // the properties below are optional\n          allocationStrategy: 'allocationStrategy',\n          blockDurationMinutes: 123,\n        },\n      },\n      name: 'name',\n      targetOnDemandCapacity: 123,\n      targetSpotCapacity: 123,\n    },\n    coreInstanceGroup: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n\n      // the properties below are optional\n      autoScalingPolicy: {\n        constraints: {\n          maxCapacity: 123,\n          minCapacity: 123,\n        },\n        rules: [{\n          action: {\n            simpleScalingPolicyConfiguration: {\n              scalingAdjustment: 123,\n\n              // the properties below are optional\n              adjustmentType: 'adjustmentType',\n              coolDown: 123,\n            },\n\n            // the properties below are optional\n            market: 'market',\n          },\n          name: 'name',\n          trigger: {\n            cloudWatchAlarmDefinition: {\n              comparisonOperator: 'comparisonOperator',\n              metricName: 'metricName',\n              period: 123,\n              threshold: 123,\n\n              // the properties below are optional\n              dimensions: [{\n                key: 'key',\n                value: 'value',\n              }],\n              evaluationPeriods: 123,\n              namespace: 'namespace',\n              statistic: 'statistic',\n              unit: 'unit',\n            },\n          },\n\n          // the properties below are optional\n          description: 'description',\n        }],\n      },\n      bidPrice: 'bidPrice',\n      configurations: [{\n        classification: 'classification',\n        configurationProperties: {\n          configurationPropertiesKey: 'configurationProperties',\n        },\n        configurations: [configurationProperty_],\n      }],\n      customAmiId: 'customAmiId',\n      ebsConfiguration: {\n        ebsBlockDeviceConfigs: [{\n          volumeSpecification: {\n            sizeInGb: 123,\n            volumeType: 'volumeType',\n\n            // the properties below are optional\n            iops: 123,\n          },\n\n          // the properties below are optional\n          volumesPerInstance: 123,\n        }],\n        ebsOptimized: false,\n      },\n      market: 'market',\n      name: 'name',\n    },\n    ec2KeyName: 'ec2KeyName',\n    ec2SubnetId: 'ec2SubnetId',\n    ec2SubnetIds: ['ec2SubnetIds'],\n    emrManagedMasterSecurityGroup: 'emrManagedMasterSecurityGroup',\n    emrManagedSlaveSecurityGroup: 'emrManagedSlaveSecurityGroup',\n    hadoopVersion: 'hadoopVersion',\n    keepJobFlowAliveWhenNoSteps: false,\n    masterInstanceFleet: {\n      instanceTypeConfigs: [{\n        instanceType: 'instanceType',\n\n        // the properties below are optional\n        bidPrice: 'bidPrice',\n        bidPriceAsPercentageOfOnDemandPrice: 123,\n        configurations: [{\n          classification: 'classification',\n          configurationProperties: {\n            configurationPropertiesKey: 'configurationProperties',\n          },\n          configurations: [configurationProperty_],\n        }],\n        customAmiId: 'customAmiId',\n        ebsConfiguration: {\n          ebsBlockDeviceConfigs: [{\n            volumeSpecification: {\n              sizeInGb: 123,\n              volumeType: 'volumeType',\n\n              // the properties below are optional\n              iops: 123,\n            },\n\n            // the properties below are optional\n            volumesPerInstance: 123,\n          }],\n          ebsOptimized: false,\n        },\n        weightedCapacity: 123,\n      }],\n      launchSpecifications: {\n        onDemandSpecification: {\n          allocationStrategy: 'allocationStrategy',\n        },\n        spotSpecification: {\n          timeoutAction: 'timeoutAction',\n          timeoutDurationMinutes: 123,\n\n          // the properties below are optional\n          allocationStrategy: 'allocationStrategy',\n          blockDurationMinutes: 123,\n        },\n      },\n      name: 'name',\n      targetOnDemandCapacity: 123,\n      targetSpotCapacity: 123,\n    },\n    masterInstanceGroup: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n\n      // the properties below are optional\n      autoScalingPolicy: {\n        constraints: {\n          maxCapacity: 123,\n          minCapacity: 123,\n        },\n        rules: [{\n          action: {\n            simpleScalingPolicyConfiguration: {\n              scalingAdjustment: 123,\n\n              // the properties below are optional\n              adjustmentType: 'adjustmentType',\n              coolDown: 123,\n            },\n\n            // the properties below are optional\n            market: 'market',\n          },\n          name: 'name',\n          trigger: {\n            cloudWatchAlarmDefinition: {\n              comparisonOperator: 'comparisonOperator',\n              metricName: 'metricName',\n              period: 123,\n              threshold: 123,\n\n              // the properties below are optional\n              dimensions: [{\n                key: 'key',\n                value: 'value',\n              }],\n              evaluationPeriods: 123,\n              namespace: 'namespace',\n              statistic: 'statistic',\n              unit: 'unit',\n            },\n          },\n\n          // the properties below are optional\n          description: 'description',\n        }],\n      },\n      bidPrice: 'bidPrice',\n      configurations: [{\n        classification: 'classification',\n        configurationProperties: {\n          configurationPropertiesKey: 'configurationProperties',\n        },\n        configurations: [configurationProperty_],\n      }],\n      customAmiId: 'customAmiId',\n      ebsConfiguration: {\n        ebsBlockDeviceConfigs: [{\n          volumeSpecification: {\n            sizeInGb: 123,\n            volumeType: 'volumeType',\n\n            // the properties below are optional\n            iops: 123,\n          },\n\n          // the properties below are optional\n          volumesPerInstance: 123,\n        }],\n        ebsOptimized: false,\n      },\n      market: 'market',\n      name: 'name',\n    },\n    placement: {\n      availabilityZone: 'availabilityZone',\n    },\n    serviceAccessSecurityGroup: 'serviceAccessSecurityGroup',\n    taskInstanceFleets: [{\n      instanceTypeConfigs: [{\n        instanceType: 'instanceType',\n\n        // the properties below are optional\n        bidPrice: 'bidPrice',\n        bidPriceAsPercentageOfOnDemandPrice: 123,\n        configurations: [{\n          classification: 'classification',\n          configurationProperties: {\n            configurationPropertiesKey: 'configurationProperties',\n          },\n          configurations: [configurationProperty_],\n        }],\n        customAmiId: 'customAmiId',\n        ebsConfiguration: {\n          ebsBlockDeviceConfigs: [{\n            volumeSpecification: {\n              sizeInGb: 123,\n              volumeType: 'volumeType',\n\n              // the properties below are optional\n              iops: 123,\n            },\n\n            // the properties below are optional\n            volumesPerInstance: 123,\n          }],\n          ebsOptimized: false,\n        },\n        weightedCapacity: 123,\n      }],\n      launchSpecifications: {\n        onDemandSpecification: {\n          allocationStrategy: 'allocationStrategy',\n        },\n        spotSpecification: {\n          timeoutAction: 'timeoutAction',\n          timeoutDurationMinutes: 123,\n\n          // the properties below are optional\n          allocationStrategy: 'allocationStrategy',\n          blockDurationMinutes: 123,\n        },\n      },\n      name: 'name',\n      targetOnDemandCapacity: 123,\n      targetSpotCapacity: 123,\n    }],\n    taskInstanceGroups: [{\n      instanceCount: 123,\n      instanceType: 'instanceType',\n\n      // the properties below are optional\n      autoScalingPolicy: {\n        constraints: {\n          maxCapacity: 123,\n          minCapacity: 123,\n        },\n        rules: [{\n          action: {\n            simpleScalingPolicyConfiguration: {\n              scalingAdjustment: 123,\n\n              // the properties below are optional\n              adjustmentType: 'adjustmentType',\n              coolDown: 123,\n            },\n\n            // the properties below are optional\n            market: 'market',\n          },\n          name: 'name',\n          trigger: {\n            cloudWatchAlarmDefinition: {\n              comparisonOperator: 'comparisonOperator',\n              metricName: 'metricName',\n              period: 123,\n              threshold: 123,\n\n              // the properties below are optional\n              dimensions: [{\n                key: 'key',\n                value: 'value',\n              }],\n              evaluationPeriods: 123,\n              namespace: 'namespace',\n              statistic: 'statistic',\n              unit: 'unit',\n            },\n          },\n\n          // the properties below are optional\n          description: 'description',\n        }],\n      },\n      bidPrice: 'bidPrice',\n      configurations: [{\n        classification: 'classification',\n        configurationProperties: {\n          configurationPropertiesKey: 'configurationProperties',\n        },\n        configurations: [configurationProperty_],\n      }],\n      customAmiId: 'customAmiId',\n      ebsConfiguration: {\n        ebsBlockDeviceConfigs: [{\n          volumeSpecification: {\n            sizeInGb: 123,\n            volumeType: 'volumeType',\n\n            // the properties below are optional\n            iops: 123,\n          },\n\n          // the properties below are optional\n          volumesPerInstance: 123,\n        }],\n        ebsOptimized: false,\n      },\n      market: 'market',\n      name: 'name',\n    }],\n    terminationProtected: false,\n  },\n  jobFlowRole: 'jobFlowRole',\n  name: 'name',\n  serviceRole: 'serviceRole',\n\n  // the properties below are optional\n  additionalInfo: additionalInfo,\n  applications: [{\n    additionalInfo: {\n      additionalInfoKey: 'additionalInfo',\n    },\n    args: ['args'],\n    name: 'name',\n    version: 'version',\n  }],\n  autoScalingRole: 'autoScalingRole',\n  autoTerminationPolicy: {\n    idleTimeout: 123,\n  },\n  bootstrapActions: [{\n    name: 'name',\n    scriptBootstrapAction: {\n      path: 'path',\n\n      // the properties below are optional\n      args: ['args'],\n    },\n  }],\n  configurations: [{\n    classification: 'classification',\n    configurationProperties: {\n      configurationPropertiesKey: 'configurationProperties',\n    },\n    configurations: [configurationProperty_],\n  }],\n  customAmiId: 'customAmiId',\n  ebsRootVolumeSize: 123,\n  kerberosAttributes: {\n    kdcAdminPassword: 'kdcAdminPassword',\n    realm: 'realm',\n\n    // the properties below are optional\n    adDomainJoinPassword: 'adDomainJoinPassword',\n    adDomainJoinUser: 'adDomainJoinUser',\n    crossRealmTrustPrincipalPassword: 'crossRealmTrustPrincipalPassword',\n  },\n  logEncryptionKmsKeyId: 'logEncryptionKmsKeyId',\n  logUri: 'logUri',\n  managedScalingPolicy: {\n    computeLimits: {\n      maximumCapacityUnits: 123,\n      minimumCapacityUnits: 123,\n      unitType: 'unitType',\n\n      // the properties below are optional\n      maximumCoreCapacityUnits: 123,\n      maximumOnDemandCapacityUnits: 123,\n    },\n  },\n  releaseLabel: 'releaseLabel',\n  scaleDownBehavior: 'scaleDownBehavior',\n  securityConfiguration: 'securityConfiguration',\n  stepConcurrencyLevel: 123,\n  steps: [{\n    hadoopJarStep: {\n      jar: 'jar',\n\n      // the properties below are optional\n      args: ['args'],\n      mainClass: 'mainClass',\n      stepProperties: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    name: 'name',\n\n    // the properties below are optional\n    actionOnFailure: 'actionOnFailure',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  visibleToAllUsers: false,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 19
      },
      "name": "CfnClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-instances"
            },
            "stability": "external",
            "summary": "A specification of the number and type of Amazon EC2 instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 26
          },
          "name": "instances",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.JobFlowInstancesConfigProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-jobflowrole"
            },
            "remarks": "An IAM role for an EMR cluster. The EC2 instances of the cluster assume this role. The default role is `EMR_EC2_DefaultRole` . In order to use the default role, you must have already created it using the CLI or console.",
            "stability": "external",
            "summary": "Also called instance profile and EC2 role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 33
          },
          "name": "jobFlowRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-name"
            },
            "stability": "external",
            "summary": "The name of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 40
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-servicerole"
            },
            "stability": "external",
            "summary": "The IAM role that Amazon EMR assumes in order to access AWS resources on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 47
          },
          "name": "serviceRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-additionalinfo"
            },
            "stability": "external",
            "summary": "A JSON string for selecting additional features."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 54
          },
          "name": "additionalInfo",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-applications"
            },
            "stability": "external",
            "summary": "The applications to install on this cluster, for example, Spark, Flink, Oozie, Zeppelin, and so on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 61
          },
          "name": "applications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.ApplicationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-autoscalingrole"
            },
            "remarks": "The default role is `EMR_AutoScaling_DefaultRole` . The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.",
            "stability": "external",
            "summary": "An IAM role for automatic scaling policies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 68
          },
          "name": "autoScalingRole",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-autoterminationpolicy"
            },
            "stability": "external",
            "summary": "`AWS::EMR::Cluster.AutoTerminationPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 75
          },
          "name": "autoTerminationPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.AutoTerminationPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-bootstrapactions"
            },
            "stability": "external",
            "summary": "A list of bootstrap actions to run before Hadoop starts on the cluster nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 82
          },
          "name": "bootstrapActions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.BootstrapActionConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-configurations"
            },
            "stability": "external",
            "summary": "Applies only to Amazon EMR releases 4.x and later. The list of Configurations supplied to the EMR cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 89
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.ConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-customamiid"
            },
            "stability": "external",
            "summary": "Available only in Amazon EMR version 5.7.0 and later. The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 96
          },
          "name": "customAmiId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-ebsrootvolumesize"
            },
            "remarks": "Available in Amazon EMR version 4.x and later.",
            "stability": "external",
            "summary": "The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for each EC2 instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 103
          },
          "name": "ebsRootVolumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-kerberosattributes"
            },
            "remarks": "For more information see [Use Kerberos Authentication](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html) in the *Amazon EMR Management Guide* .",
            "stability": "external",
            "summary": "Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 110
          },
          "name": "kerberosAttributes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.KerberosAttributesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-logencryptionkmskeyid"
            },
            "remarks": "This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.",
            "stability": "external",
            "summary": "The AWS KMS key used for encrypting log files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 117
          },
          "name": "logEncryptionKmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-loguri"
            },
            "stability": "external",
            "summary": "The path to the Amazon S3 location where logs for this cluster are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 124
          },
          "name": "logUri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-managedscalingpolicy"
            },
            "remarks": "The managed scaling policy defines the limits for resources, such as EC2 instances that can be added or terminated from a cluster. The policy only applies to the core and task nodes. The master node cannot be scaled after initial configuration.",
            "stability": "external",
            "summary": "Creates or updates a managed scaling policy for an Amazon EMR cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 131
          },
          "name": "managedScalingPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnCluster.ManagedScalingPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-releaselabel"
            },
            "remarks": "Release labels are in the form `emr-x.x.x` , where x.x.x is an Amazon EMR release version such as `emr-5.14.0` . For more information about Amazon EMR release versions and included application versions and features, see [](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/) . The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use `AmiVersion` .",
            "stability": "external",
            "summary": "The Amazon EMR release label, which determines the version of open-source application packages installed on the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 138
          },
          "name": "releaseLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-scaledownbehavior"
            },
            "remarks": "`TERMINATE_AT_INSTANCE_HOUR` indicates that Amazon EMR terminates nodes at the instance-hour boundary, regardless of when the request to terminate the instance was submitted. This option is only available with Amazon EMR 5.1.0 and later and is the default for clusters created using that version. `TERMINATE_AT_TASK_COMPLETION` indicates that Amazon EMR adds nodes to a deny list and drains tasks from nodes before terminating the Amazon EC2 instances, regardless of the instance-hour boundary. With either behavior, Amazon EMR removes the least active nodes first and blocks instance termination if it could lead to HDFS corruption. `TERMINATE_AT_TASK_COMPLETION` is available only in Amazon EMR version 4.1.0 and later, and is the default for versions of Amazon EMR earlier than 5.1.0.",
            "stability": "external",
            "summary": "The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an instance group is resized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 145
          },
          "name": "scaleDownBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration"
            },
            "stability": "external",
            "summary": "The name of the security configuration applied to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 152
          },
          "name": "securityConfiguration",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-stepconcurrencylevel"
            },
            "remarks": "The default value is `1` . The maximum value is `256` .",
            "stability": "external",
            "summary": "Specifies the number of steps that can be executed concurrently."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 159
          },
          "name": "stepConcurrencyLevel",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-steps"
            },
            "stability": "external",
            "summary": "A list of steps to run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 166
          },
          "name": "steps",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnCluster.StepConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-tags"
            },
            "stability": "external",
            "summary": "A list of tags associated with a cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 173
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-visibletoallusers"
            },
            "remarks": "If this value is set to `true` , all IAM users of that AWS account can view and manage the cluster if they have the proper policy permissions set. If this value is `false` , only the IAM user that created the cluster can view and manage it. This value can be changed using the SetVisibleToAllUsers action.\n\n> When you create clusters directly through the EMR console or API, this value is set to `true` by default. However, for `AWS::EMR::Cluster` resources in CloudFormation, the default is `false` .",
            "stability": "external",
            "summary": "Indicates whether the cluster is visible to all IAM users of the AWS account associated with the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 182
          },
          "name": "visibleToAllUsers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnClusterProps"
    },
    "@aws-cdk/aws-emr.CfnInstanceFleetConfig": {
      "assembly": "@aws-cdk/aws-emr",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EMR::InstanceFleetConfig",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Use `InstanceFleetConfig` to define instance fleets for an EMR cluster. A cluster can not use both instance fleets and instance groups. For more information, see [Configure Instance Fleets](https://docs.aws.amazon.com//emr/latest/ManagementGuide/emr-instance-group-configuration.html) in the *Amazon EMR Management Guide* .\n\n> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. > You can currently only add a task instance fleet to a cluster with this resource. If you use this resource, CloudFormation waits for the cluster launch to complete before adding the task instance fleet to the cluster. In order to add a task instance fleet to the cluster as part of the cluster launch and minimize delays in provisioning task nodes, use the `TaskInstanceFleets` subproperty for the [AWS::EMR::Cluster JobFlowInstancesConfig](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html) property instead. To use this subproperty, see [AWS::EMR::Cluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html) for examples.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EMR::InstanceFleetConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const configurationProperty_: emr.CfnInstanceFleetConfig.ConfigurationProperty;\nconst cfnInstanceFleetConfig = new emr.CfnInstanceFleetConfig(this, 'MyCfnInstanceFleetConfig', {\n  clusterId: 'clusterId',\n  instanceFleetType: 'instanceFleetType',\n\n  // the properties below are optional\n  instanceTypeConfigs: [{\n    instanceType: 'instanceType',\n\n    // the properties below are optional\n    bidPrice: 'bidPrice',\n    bidPriceAsPercentageOfOnDemandPrice: 123,\n    configurations: [{\n      classification: 'classification',\n      configurationProperties: {\n        configurationPropertiesKey: 'configurationProperties',\n      },\n      configurations: [configurationProperty_],\n    }],\n    customAmiId: 'customAmiId',\n    ebsConfiguration: {\n      ebsBlockDeviceConfigs: [{\n        volumeSpecification: {\n          sizeInGb: 123,\n          volumeType: 'volumeType',\n\n          // the properties below are optional\n          iops: 123,\n        },\n\n        // the properties below are optional\n        volumesPerInstance: 123,\n      }],\n      ebsOptimized: false,\n    },\n    weightedCapacity: 123,\n  }],\n  launchSpecifications: {\n    onDemandSpecification: {\n      allocationStrategy: 'allocationStrategy',\n    },\n    spotSpecification: {\n      timeoutAction: 'timeoutAction',\n      timeoutDurationMinutes: 123,\n\n      // the properties below are optional\n      allocationStrategy: 'allocationStrategy',\n      blockDurationMinutes: 123,\n    },\n  },\n  name: 'name',\n  targetOnDemandCapacity: 123,\n  targetSpotCapacity: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EMR::InstanceFleetConfig`."
        },
        "locationInModule": {
          "filename": "lib/emr.generated.ts",
          "line": 3635
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 3546
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3655
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3672
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnInstanceFleetConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3550
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3660
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-clusterid"
            },
            "stability": "external",
            "summary": "The unique identifier of the EMR cluster."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3576
          },
          "name": "clusterId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancefleettype"
            },
            "remarks": "*Allowed Values* : TASK",
            "stability": "external",
            "summary": "The node type that the instance fleet hosts."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3585
          },
          "name": "instanceFleetType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancetypeconfigs"
            },
            "remarks": "> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.",
            "stability": "external",
            "summary": "`InstanceTypeConfigs` determine the EC2 instances that Amazon EMR attempts to provision to fulfill On-Demand and Spot target capacities."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3594
          },
          "name": "instanceTypeConfigs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.InstanceTypeConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-launchspecifications"
            },
            "stability": "external",
            "summary": "The launch specification for the instance fleet."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3601
          },
          "name": "launchSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.InstanceFleetProvisioningSpecificationsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-name"
            },
            "stability": "external",
            "summary": "The friendly name of the instance fleet."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3608
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-targetondemandcapacity"
            },
            "remarks": "When the instance fleet launches, Amazon EMR tries to provision On-Demand instances as specified by `InstanceTypeConfig` . Each instance configuration has a specified `WeightedCapacity` . When an On-Demand instance is provisioned, the `WeightedCapacity` units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a `WeightedCapacity` of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units.\n\n> If not specified or set to 0, only Spot instances are provisioned for the instance fleet using `TargetSpotCapacity` . At least one of `TargetSpotCapacity` and `TargetOnDemandCapacity` should be greater than 0. For a master instance fleet, only one of `TargetSpotCapacity` and `TargetOnDemandCapacity` can be specified, and its value must be 1.",
            "stability": "external",
            "summary": "The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3617
          },
          "name": "targetOnDemandCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-targetspotcapacity"
            },
            "remarks": "When the instance fleet launches, Amazon EMR tries to provision Spot instances as specified by `InstanceTypeConfig` . Each instance configuration has a specified `WeightedCapacity` . When a Spot instance is provisioned, the `WeightedCapacity` units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a `WeightedCapacity` of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units.\n\n> If not specified or set to 0, only On-Demand instances are provisioned for the instance fleet. At least one of `TargetSpotCapacity` and `TargetOnDemandCapacity` should be greater than 0. For a master instance fleet, only one of `TargetSpotCapacity` and `TargetOnDemandCapacity` can be specified, and its value must be 1.",
            "stability": "external",
            "summary": "The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3626
          },
          "name": "targetSpotCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceFleetConfig"
    },
    "@aws-cdk/aws-emr.CfnInstanceFleetConfig.ConfigurationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-configuration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`Configuration` specifies optional configurations for customizing open-source big data applications and environment parameters. A configuration consists of a classification, properties, and optional nested configurations. A classification refers to an application-specific configuration file. Properties are the settings you want to change in that file. For more information, see [Configuring Applications](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) in the *Amazon EMR Release Guide* .",
        "stability": "external",
        "summary": "> Used only with Amazon EMR release 4.0 and later.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const configurationProperty_: emr.CfnInstanceFleetConfig.ConfigurationProperty;\nconst configurationProperty: emr.CfnInstanceFleetConfig.ConfigurationProperty = {\n  classification: 'classification',\n  configurationProperties: {\n    configurationPropertiesKey: 'configurationProperties',\n  },\n  configurations: [{\n    classification: 'classification',\n    configurationProperties: {\n      configurationPropertiesKey: 'configurationProperties',\n    },\n    configurations: [configurationProperty_],\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.ConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 3688
      },
      "name": "ConfigurationProperty",
      "namespace": "CfnInstanceFleetConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-configuration.html#cfn-elasticmapreduce-instancefleetconfig-configuration-classification"
            },
            "stability": "external",
            "summary": "The classification within a configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3694
          },
          "name": "classification",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-configuration.html#cfn-elasticmapreduce-instancefleetconfig-configuration-configurationproperties"
            },
            "remarks": "Duplicates not allowed.",
            "stability": "external",
            "summary": "Within a configuration classification, a set of properties that represent the settings that you want to change in the configuration file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3700
          },
          "name": "configurationProperties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-configuration.html#cfn-elasticmapreduce-instancefleetconfig-configuration-configurations"
            },
            "stability": "external",
            "summary": "A list of additional configurations to apply within a configuration object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3706
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.ConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceFleetConfig.ConfigurationProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceFleetConfig.EbsBlockDeviceConfigProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-ebsblockdeviceconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`EbsBlockDeviceConfig` defines the number and type of EBS volumes to associate with all EC2 instances in an EMR cluster.",
        "stability": "external",
        "summary": "`EbsBlockDeviceConfig` is a subproperty of the `EbsConfiguration` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst ebsBlockDeviceConfigProperty: emr.CfnInstanceFleetConfig.EbsBlockDeviceConfigProperty = {\n  volumeSpecification: {\n    sizeInGb: 123,\n    volumeType: 'volumeType',\n\n    // the properties below are optional\n    iops: 123,\n  },\n\n  // the properties below are optional\n  volumesPerInstance: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.EbsBlockDeviceConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 3773
      },
      "name": "EbsBlockDeviceConfigProperty",
      "namespace": "CfnInstanceFleetConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-ebsblockdeviceconfig.html#cfn-elasticmapreduce-instancefleetconfig-ebsblockdeviceconfig-volumespecification"
            },
            "stability": "external",
            "summary": "EBS volume specifications such as volume type, IOPS, and size (GiB) that will be requested for the EBS volume attached to an EC2 instance in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3779
          },
          "name": "volumeSpecification",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.VolumeSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-ebsblockdeviceconfig.html#cfn-elasticmapreduce-instancefleetconfig-ebsblockdeviceconfig-volumesperinstance"
            },
            "stability": "external",
            "summary": "Number of EBS volumes with a specific volume configuration that will be associated with every instance in the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3785
          },
          "name": "volumesPerInstance",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceFleetConfig.EbsBlockDeviceConfigProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceFleetConfig.EbsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-ebsconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`EbsConfiguration` determines the EBS volumes to attach to EMR cluster instances.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst ebsConfigurationProperty: emr.CfnInstanceFleetConfig.EbsConfigurationProperty = {\n  ebsBlockDeviceConfigs: [{\n    volumeSpecification: {\n      sizeInGb: 123,\n      volumeType: 'volumeType',\n\n      // the properties below are optional\n      iops: 123,\n    },\n\n    // the properties below are optional\n    volumesPerInstance: 123,\n  }],\n  ebsOptimized: false,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.EbsConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 3850
      },
      "name": "EbsConfigurationProperty",
      "namespace": "CfnInstanceFleetConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-ebsconfiguration.html#cfn-elasticmapreduce-instancefleetconfig-ebsconfiguration-ebsblockdeviceconfigs"
            },
            "stability": "external",
            "summary": "An array of Amazon EBS volume specifications attached to a cluster instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3856
          },
          "name": "ebsBlockDeviceConfigs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.EbsBlockDeviceConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-ebsconfiguration.html#cfn-elasticmapreduce-instancefleetconfig-ebsconfiguration-ebsoptimized"
            },
            "stability": "external",
            "summary": "Indicates whether an Amazon EBS volume is EBS-optimized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3862
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceFleetConfig.EbsConfigurationProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceFleetConfig.InstanceFleetProvisioningSpecificationsProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-instancefleetprovisioningspecifications.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`InstanceTypeConfig` is a sub-property of `InstanceFleetConfig` . `InstanceTypeConfig` determines the EC2 instances that Amazon EMR attempts to provision to fulfill On-Demand and Spot target capacities.",
        "stability": "external",
        "summary": "> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst instanceFleetProvisioningSpecificationsProperty: emr.CfnInstanceFleetConfig.InstanceFleetProvisioningSpecificationsProperty = {\n  onDemandSpecification: {\n    allocationStrategy: 'allocationStrategy',\n  },\n  spotSpecification: {\n    timeoutAction: 'timeoutAction',\n    timeoutDurationMinutes: 123,\n\n    // the properties below are optional\n    allocationStrategy: 'allocationStrategy',\n    blockDurationMinutes: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.InstanceFleetProvisioningSpecificationsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 3928
      },
      "name": "InstanceFleetProvisioningSpecificationsProperty",
      "namespace": "CfnInstanceFleetConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-instancefleetprovisioningspecifications.html#cfn-elasticmapreduce-instancefleetconfig-instancefleetprovisioningspecifications-ondemandspecification"
            },
            "remarks": "> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. On-Demand Instances allocation strategy is available in Amazon EMR version 5.12.1 and later.",
            "stability": "external",
            "summary": "The launch specification for On-Demand Instances in the instance fleet, which determines the allocation strategy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3936
          },
          "name": "onDemandSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.OnDemandProvisioningSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-instancefleetprovisioningspecifications.html#cfn-elasticmapreduce-instancefleetconfig-instancefleetprovisioningspecifications-spotspecification"
            },
            "stability": "external",
            "summary": "The launch specification for Spot Instances in the fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3942
          },
          "name": "spotSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.SpotProvisioningSpecificationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceFleetConfig.InstanceFleetProvisioningSpecificationsProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceFleetConfig.InstanceTypeConfigProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-instancetypeconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "An instance type configuration specifies each instance type in an instance fleet. The configuration determines the EC2 instances Amazon EMR attempts to provision to fulfill On-Demand and Spot target capacities.\n\n> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.",
        "stability": "external",
        "summary": "`InstanceType` config is a subproperty of `InstanceFleetConfig` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const configurationProperty_: emr.CfnInstanceFleetConfig.ConfigurationProperty;\nconst instanceTypeConfigProperty: emr.CfnInstanceFleetConfig.InstanceTypeConfigProperty = {\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  bidPrice: 'bidPrice',\n  bidPriceAsPercentageOfOnDemandPrice: 123,\n  configurations: [{\n    classification: 'classification',\n    configurationProperties: {\n      configurationPropertiesKey: 'configurationProperties',\n    },\n    configurations: [configurationProperty_],\n  }],\n  customAmiId: 'customAmiId',\n  ebsConfiguration: {\n    ebsBlockDeviceConfigs: [{\n      volumeSpecification: {\n        sizeInGb: 123,\n        volumeType: 'volumeType',\n\n        // the properties below are optional\n        iops: 123,\n      },\n\n      // the properties below are optional\n      volumesPerInstance: 123,\n    }],\n    ebsOptimized: false,\n  },\n  weightedCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.InstanceTypeConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 4008
      },
      "name": "InstanceTypeConfigProperty",
      "namespace": "CfnInstanceFleetConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-instancetypeconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancetypeconfig-instancetype"
            },
            "stability": "external",
            "summary": "An EC2 instance type, such as `m3.xlarge` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4046
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-instancetypeconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancetypeconfig-bidprice"
            },
            "remarks": "Expressed in USD. If neither `BidPrice` nor `BidPriceAsPercentageOfOnDemandPrice` is provided, `BidPriceAsPercentageOfOnDemandPrice` defaults to 100%.",
            "stability": "external",
            "summary": "The bid price for each EC2 Spot Instance type as defined by `InstanceType` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4014
          },
          "name": "bidPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-instancetypeconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancetypeconfig-bidpriceaspercentageofondemandprice"
            },
            "remarks": "Expressed as a number (for example, 20 specifies 20%). If neither `BidPrice` nor `BidPriceAsPercentageOfOnDemandPrice` is provided, `BidPriceAsPercentageOfOnDemandPrice` defaults to 100%.",
            "stability": "external",
            "summary": "The bid price, as a percentage of On-Demand price, for each EC2 Spot Instance as defined by `InstanceType` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4020
          },
          "name": "bidPriceAsPercentageOfOnDemandPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-instancetypeconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancetypeconfig-configurations"
            },
            "remarks": "An optional configuration specification to be used when provisioning cluster instances, which can include configurations for applications and software bundled with Amazon EMR. A configuration consists of a classification, properties, and optional nested configurations. A classification refers to an application-specific configuration file. Properties are the settings you want to change in that file. For more information, see [Configuring Applications](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) .",
            "stability": "external",
            "summary": "> Amazon EMR releases 4.x or later."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4028
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.ConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-instancetypeconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancetypeconfig-customamiid"
            },
            "stability": "external",
            "summary": "The custom AMI ID to use for the instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4034
          },
          "name": "customAmiId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-instancetypeconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancetypeconfig-ebsconfiguration"
            },
            "stability": "external",
            "summary": "The configuration of Amazon Elastic Block Store (Amazon EBS) attached to each instance as defined by `InstanceType` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4040
          },
          "name": "ebsConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.EbsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-instancetypeconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancetypeconfig-weightedcapacity"
            },
            "remarks": "This value is 1 for a master instance fleet, and must be 1 or greater for core and task instance fleets. Defaults to 1 if not specified.",
            "stability": "external",
            "summary": "The number of units that a provisioned instance of this type provides toward fulfilling the target capacities defined in `InstanceFleetConfig` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4052
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceFleetConfig.InstanceTypeConfigProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceFleetConfig.OnDemandProvisioningSpecificationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-ondemandprovisioningspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. On-Demand Instances allocation strategy is available in Amazon EMR version 5.12.1 and later.",
        "stability": "external",
        "summary": "The launch specification for On-Demand Instances in the instance fleet, which determines the allocation strategy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst onDemandProvisioningSpecificationProperty: emr.CfnInstanceFleetConfig.OnDemandProvisioningSpecificationProperty = {\n  allocationStrategy: 'allocationStrategy',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.OnDemandProvisioningSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 4134
      },
      "name": "OnDemandProvisioningSpecificationProperty",
      "namespace": "CfnInstanceFleetConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-ondemandprovisioningspecification.html#cfn-elasticmapreduce-instancefleetconfig-ondemandprovisioningspecification-allocationstrategy"
            },
            "remarks": "Currently, the only option is `lowest-price` (the default), which launches the lowest price first.",
            "stability": "external",
            "summary": "Specifies the strategy to use in launching On-Demand instance fleets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4140
          },
          "name": "allocationStrategy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceFleetConfig.OnDemandProvisioningSpecificationProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceFleetConfig.SpotProvisioningSpecificationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-spotprovisioningspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`SpotProvisioningSpecification` determines the launch specification for Spot instances in the instance fleet, which includes the defined duration and provisioning timeout behavior.\n\n> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.",
        "stability": "external",
        "summary": "`SpotProvisioningSpecification` is a subproperty of the `InstanceFleetProvisioningSpecifications` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst spotProvisioningSpecificationProperty: emr.CfnInstanceFleetConfig.SpotProvisioningSpecificationProperty = {\n  timeoutAction: 'timeoutAction',\n  timeoutDurationMinutes: 123,\n\n  // the properties below are optional\n  allocationStrategy: 'allocationStrategy',\n  blockDurationMinutes: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.SpotProvisioningSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 4204
      },
      "name": "SpotProvisioningSpecificationProperty",
      "namespace": "CfnInstanceFleetConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-spotprovisioningspecification.html#cfn-elasticmapreduce-instancefleetconfig-spotprovisioningspecification-timeoutaction"
            },
            "remarks": "that is, when all Spot Instances could not be provisioned within the Spot provisioning timeout. Valid values are `TERMINATE_CLUSTER` and `SWITCH_TO_ON_DEMAND` . SWITCH_TO_ON_DEMAND specifies that if no Spot Instances are available, On-Demand Instances should be provisioned to fulfill any remaining Spot capacity.",
            "stability": "external",
            "summary": "The action to take when `TargetSpotCapacity` has not been fulfilled when the `TimeoutDurationMinutes` has expired;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4224
          },
          "name": "timeoutAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-spotprovisioningspecification.html#cfn-elasticmapreduce-instancefleetconfig-spotprovisioningspecification-timeoutdurationminutes"
            },
            "remarks": "If Spot Instances are not provisioned within this time period, the `TimeOutAction` is taken. Minimum value is 5 and maximum value is 1440. The timeout applies only during initial provisioning, when the cluster is first created.",
            "stability": "external",
            "summary": "The spot provisioning timeout period in minutes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4230
          },
          "name": "timeoutDurationMinutes",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-spotprovisioningspecification.html#cfn-elasticmapreduce-instancefleetconfig-spotprovisioningspecification-allocationstrategy"
            },
            "remarks": "Currently, the only option is capacity-optimized (the default), which launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.",
            "stability": "external",
            "summary": "Specifies the strategy to use in launching Spot Instance fleets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4210
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-spotprovisioningspecification.html#cfn-elasticmapreduce-instancefleetconfig-spotprovisioningspecification-blockdurationminutes"
            },
            "remarks": "When specified, the Spot Instance does not terminate before the defined duration expires, and defined duration pricing for Spot Instances applies. Valid values are 60, 120, 180, 240, 300, or 360. The duration period starts as soon as a Spot Instance receives its instance ID. At the end of the duration, Amazon EC2 marks the Spot Instance for termination and provides a Spot Instance termination notice, which gives the instance a two-minute warning before it terminates.\n\n> Spot Instances with a defined duration (also known as Spot blocks) are no longer available to new customers from July 1, 2021. For customers who have previously used the feature, we will continue to support Spot Instances with a defined duration until December 31, 2022.",
            "stability": "external",
            "summary": "The defined duration for Spot Instances (also known as Spot blocks) in minutes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4218
          },
          "name": "blockDurationMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceFleetConfig.SpotProvisioningSpecificationProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceFleetConfig.VolumeSpecificationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-volumespecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`VolumeSecification` determines the volume type, IOPS, and size (GiB) for EBS volumes attached to EC2 instances.",
        "stability": "external",
        "summary": "`VolumeSpecification` is a subproperty of the `EbsBlockDeviceConfig` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst volumeSpecificationProperty: emr.CfnInstanceFleetConfig.VolumeSpecificationProperty = {\n  sizeInGb: 123,\n  volumeType: 'volumeType',\n\n  // the properties below are optional\n  iops: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.VolumeSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 4302
      },
      "name": "VolumeSpecificationProperty",
      "namespace": "CfnInstanceFleetConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-volumespecification.html#cfn-elasticmapreduce-instancefleetconfig-volumespecification-sizeingb"
            },
            "remarks": "This can be a number from 1 - 1024. If the volume type is EBS-optimized, the minimum value is 10.",
            "stability": "external",
            "summary": "The volume size, in gibibytes (GiB)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4314
          },
          "name": "sizeInGb",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-volumespecification.html#cfn-elasticmapreduce-instancefleetconfig-volumespecification-volumetype"
            },
            "remarks": "Volume types supported are gp2, io1, and standard.",
            "stability": "external",
            "summary": "The volume type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4320
          },
          "name": "volumeType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancefleetconfig-volumespecification.html#cfn-elasticmapreduce-instancefleetconfig-volumespecification-iops"
            },
            "stability": "external",
            "summary": "The number of I/O operations per second (IOPS) that the volume supports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4308
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceFleetConfig.VolumeSpecificationProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceFleetConfigProps": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnInstanceFleetConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const configurationProperty_: emr.CfnInstanceFleetConfig.ConfigurationProperty;\nconst cfnInstanceFleetConfigProps: emr.CfnInstanceFleetConfigProps = {\n  clusterId: 'clusterId',\n  instanceFleetType: 'instanceFleetType',\n\n  // the properties below are optional\n  instanceTypeConfigs: [{\n    instanceType: 'instanceType',\n\n    // the properties below are optional\n    bidPrice: 'bidPrice',\n    bidPriceAsPercentageOfOnDemandPrice: 123,\n    configurations: [{\n      classification: 'classification',\n      configurationProperties: {\n        configurationPropertiesKey: 'configurationProperties',\n      },\n      configurations: [configurationProperty_],\n    }],\n    customAmiId: 'customAmiId',\n    ebsConfiguration: {\n      ebsBlockDeviceConfigs: [{\n        volumeSpecification: {\n          sizeInGb: 123,\n          volumeType: 'volumeType',\n\n          // the properties below are optional\n          iops: 123,\n        },\n\n        // the properties below are optional\n        volumesPerInstance: 123,\n      }],\n      ebsOptimized: false,\n    },\n    weightedCapacity: 123,\n  }],\n  launchSpecifications: {\n    onDemandSpecification: {\n      allocationStrategy: 'allocationStrategy',\n    },\n    spotSpecification: {\n      timeoutAction: 'timeoutAction',\n      timeoutDurationMinutes: 123,\n\n      // the properties below are optional\n      allocationStrategy: 'allocationStrategy',\n      blockDurationMinutes: 123,\n    },\n  },\n  name: 'name',\n  targetOnDemandCapacity: 123,\n  targetSpotCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 3409
      },
      "name": "CfnInstanceFleetConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-clusterid"
            },
            "stability": "external",
            "summary": "The unique identifier of the EMR cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3416
          },
          "name": "clusterId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancefleettype"
            },
            "remarks": "*Allowed Values* : TASK",
            "stability": "external",
            "summary": "The node type that the instance fleet hosts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3425
          },
          "name": "instanceFleetType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancetypeconfigs"
            },
            "remarks": "> The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.",
            "stability": "external",
            "summary": "`InstanceTypeConfigs` determine the EC2 instances that Amazon EMR attempts to provision to fulfill On-Demand and Spot target capacities."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3434
          },
          "name": "instanceTypeConfigs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.InstanceTypeConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-launchspecifications"
            },
            "stability": "external",
            "summary": "The launch specification for the instance fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3441
          },
          "name": "launchSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceFleetConfig.InstanceFleetProvisioningSpecificationsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-name"
            },
            "stability": "external",
            "summary": "The friendly name of the instance fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3448
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-targetondemandcapacity"
            },
            "remarks": "When the instance fleet launches, Amazon EMR tries to provision On-Demand instances as specified by `InstanceTypeConfig` . Each instance configuration has a specified `WeightedCapacity` . When an On-Demand instance is provisioned, the `WeightedCapacity` units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a `WeightedCapacity` of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units.\n\n> If not specified or set to 0, only Spot instances are provisioned for the instance fleet using `TargetSpotCapacity` . At least one of `TargetSpotCapacity` and `TargetOnDemandCapacity` should be greater than 0. For a master instance fleet, only one of `TargetSpotCapacity` and `TargetOnDemandCapacity` can be specified, and its value must be 1.",
            "stability": "external",
            "summary": "The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3457
          },
          "name": "targetOnDemandCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-targetspotcapacity"
            },
            "remarks": "When the instance fleet launches, Amazon EMR tries to provision Spot instances as specified by `InstanceTypeConfig` . Each instance configuration has a specified `WeightedCapacity` . When a Spot instance is provisioned, the `WeightedCapacity` units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a `WeightedCapacity` of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units.\n\n> If not specified or set to 0, only On-Demand instances are provisioned for the instance fleet. At least one of `TargetSpotCapacity` and `TargetOnDemandCapacity` should be greater than 0. For a master instance fleet, only one of `TargetSpotCapacity` and `TargetOnDemandCapacity` can be specified, and its value must be 1.",
            "stability": "external",
            "summary": "The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 3466
          },
          "name": "targetSpotCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceFleetConfigProps"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfig": {
      "assembly": "@aws-cdk/aws-emr",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EMR::InstanceGroupConfig",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Use `InstanceGroupConfig` to define instance groups for an EMR cluster. A cluster can not use both instance groups and instance fleets. For more information, see [Create a Cluster with Instance Fleets or Uniform Instance Groups](https://docs.aws.amazon.com//emr/latest/ManagementGuide/emr-instance-group-configuration.html) in the *Amazon EMR Management Guide* .\n\n> You can currently only add task instance groups to a cluster with this resource. If you use this resource, CloudFormation waits for the cluster launch to complete before adding the task instance group to the cluster. In order to add task instance groups to the cluster as part of the cluster launch and minimize delays in provisioning task nodes, use the `TaskInstanceGroups` subproperty for the [AWS::EMR::Cluster JobFlowInstancesConfig](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-cluster-jobflowinstancesconfig.html) property instead. To use this subproperty, see [AWS::EMR::Cluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html) for examples.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EMR::InstanceGroupConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const configurationProperty_: emr.CfnInstanceGroupConfig.ConfigurationProperty;\nconst cfnInstanceGroupConfig = new emr.CfnInstanceGroupConfig(this, 'MyCfnInstanceGroupConfig', {\n  instanceCount: 123,\n  instanceRole: 'instanceRole',\n  instanceType: 'instanceType',\n  jobFlowId: 'jobFlowId',\n\n  // the properties below are optional\n  autoScalingPolicy: {\n    constraints: {\n      maxCapacity: 123,\n      minCapacity: 123,\n    },\n    rules: [{\n      action: {\n        simpleScalingPolicyConfiguration: {\n          scalingAdjustment: 123,\n\n          // the properties below are optional\n          adjustmentType: 'adjustmentType',\n          coolDown: 123,\n        },\n\n        // the properties below are optional\n        market: 'market',\n      },\n      name: 'name',\n      trigger: {\n        cloudWatchAlarmDefinition: {\n          comparisonOperator: 'comparisonOperator',\n          metricName: 'metricName',\n          period: 123,\n          threshold: 123,\n\n          // the properties below are optional\n          dimensions: [{\n            key: 'key',\n            value: 'value',\n          }],\n          evaluationPeriods: 123,\n          namespace: 'namespace',\n          statistic: 'statistic',\n          unit: 'unit',\n        },\n      },\n\n      // the properties below are optional\n      description: 'description',\n    }],\n  },\n  bidPrice: 'bidPrice',\n  configurations: [{\n    classification: 'classification',\n    configurationProperties: {\n      configurationPropertiesKey: 'configurationProperties',\n    },\n    configurations: [configurationProperty_],\n  }],\n  customAmiId: 'customAmiId',\n  ebsConfiguration: {\n    ebsBlockDeviceConfigs: [{\n      volumeSpecification: {\n        sizeInGb: 123,\n        volumeType: 'volumeType',\n\n        // the properties below are optional\n        iops: 123,\n      },\n\n      // the properties below are optional\n      volumesPerInstance: 123,\n    }],\n    ebsOptimized: false,\n  },\n  market: 'market',\n  name: 'name',\n});"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EMR::InstanceGroupConfig`."
        },
        "locationInModule": {
          "filename": "lib/emr.generated.ts",
          "line": 4676
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 4563
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4702
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4723
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnInstanceGroupConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4567
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4707
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfiginstancecount-"
            },
            "stability": "external",
            "summary": "Target number of instances for the instance group."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4593
          },
          "name": "instanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-instancerole"
            },
            "remarks": "*Allowed Values* : TASK",
            "stability": "external",
            "summary": "The role of the instance group in the cluster."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4602
          },
          "name": "instanceRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-instancetype"
            },
            "stability": "external",
            "summary": "The EC2 instance type for all instances in the instance group."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4609
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-jobflowid"
            },
            "stability": "external",
            "summary": "The ID of an Amazon EMR cluster that you want to associate this instance group with."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4616
          },
          "name": "jobFlowId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-elasticmapreduce-instancegroupconfig-autoscalingpolicy"
            },
            "remarks": "`AutoScalingPolicy` defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. For more information, see [Using Automatic Scaling in Amazon EMR](https://docs.aws.amazon.com//emr/latest/ManagementGuide/emr-automatic-scaling.html) in the *Amazon EMR Management Guide* .",
            "stability": "external",
            "summary": "`AutoScalingPolicy` is a subproperty of `InstanceGroupConfig` ."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4623
          },
          "name": "autoScalingPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.AutoScalingPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-bidprice"
            },
            "remarks": "This is the maximum price you are willing to pay for Spot Instances. Specify `OnDemandPrice` to set the amount equal to the On-Demand price, or specify an amount in USD.",
            "stability": "external",
            "summary": "If specified, indicates that the instance group uses Spot Instances."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4630
          },
          "name": "bidPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-configurations"
            },
            "remarks": "The list of configurations supplied for an EMR cluster instance group. You can specify a separate configuration for each instance group (master, core, and task).",
            "stability": "external",
            "summary": "> Amazon EMR releases 4.x or later."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4639
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-customamiid"
            },
            "stability": "external",
            "summary": "The custom AMI ID to use for the provisioned instance group."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4646
          },
          "name": "customAmiId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-ebsconfiguration"
            },
            "stability": "external",
            "summary": "`EbsConfiguration` determines the EBS volumes to attach to EMR cluster instances."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4653
          },
          "name": "ebsConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.EbsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-market"
            },
            "stability": "external",
            "summary": "Market type of the EC2 instances used to create a cluster node."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4660
          },
          "name": "market",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-name"
            },
            "stability": "external",
            "summary": "Friendly name given to the instance group."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4667
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfig"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfig.AutoScalingPolicyProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-autoscalingpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Using Automatic Scaling in Amazon EMR](https://docs.aws.amazon.com//emr/latest/ManagementGuide/emr-automatic-scaling.html) in the *Amazon EMR Management Guide* .",
        "stability": "external",
        "summary": "`AutoScalingPolicy` defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst autoScalingPolicyProperty: emr.CfnInstanceGroupConfig.AutoScalingPolicyProperty = {\n  constraints: {\n    maxCapacity: 123,\n    minCapacity: 123,\n  },\n  rules: [{\n    action: {\n      simpleScalingPolicyConfiguration: {\n        scalingAdjustment: 123,\n\n        // the properties below are optional\n        adjustmentType: 'adjustmentType',\n        coolDown: 123,\n      },\n\n      // the properties below are optional\n      market: 'market',\n    },\n    name: 'name',\n    trigger: {\n      cloudWatchAlarmDefinition: {\n        comparisonOperator: 'comparisonOperator',\n        metricName: 'metricName',\n        period: 123,\n        threshold: 123,\n\n        // the properties below are optional\n        dimensions: [{\n          key: 'key',\n          value: 'value',\n        }],\n        evaluationPeriods: 123,\n        namespace: 'namespace',\n        statistic: 'statistic',\n        unit: 'unit',\n      },\n    },\n\n    // the properties below are optional\n    description: 'description',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.AutoScalingPolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 4737
      },
      "name": "AutoScalingPolicyProperty",
      "namespace": "CfnInstanceGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-autoscalingpolicy.html#cfn-elasticmapreduce-instancegroupconfig-autoscalingpolicy-constraints"
            },
            "remarks": "Automatic scaling activity will not cause an instance group to grow above or below these limits.",
            "stability": "external",
            "summary": "The upper and lower EC2 instance limits for an automatic scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4743
          },
          "name": "constraints",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ScalingConstraintsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-autoscalingpolicy.html#cfn-elasticmapreduce-instancegroupconfig-autoscalingpolicy-rules"
            },
            "stability": "external",
            "summary": "The scale-in and scale-out rules that comprise the automatic scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4749
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ScalingRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfig.AutoScalingPolicyProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfig.CloudWatchAlarmDefinitionProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Scaling activity begins when you satisfy the defined alarm conditions.",
        "stability": "external",
        "summary": "`CloudWatchAlarmDefinition` is a subproperty of the `ScalingTrigger` property, which determines when to trigger an automatic scaling activity.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst cloudWatchAlarmDefinitionProperty: emr.CfnInstanceGroupConfig.CloudWatchAlarmDefinitionProperty = {\n  comparisonOperator: 'comparisonOperator',\n  metricName: 'metricName',\n  period: 123,\n  threshold: 123,\n\n  // the properties below are optional\n  dimensions: [{\n    key: 'key',\n    value: 'value',\n  }],\n  evaluationPeriods: 123,\n  namespace: 'namespace',\n  statistic: 'statistic',\n  unit: 'unit',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.CloudWatchAlarmDefinitionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 4815
      },
      "name": "CloudWatchAlarmDefinitionProperty",
      "namespace": "CfnInstanceGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition-comparisonoperator"
            },
            "stability": "external",
            "summary": "Determines how the metric specified by `MetricName` is compared to the value specified by `Threshold` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4821
          },
          "name": "comparisonOperator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition-metricname"
            },
            "stability": "external",
            "summary": "The name of the CloudWatch metric that is watched to determine an alarm condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4839
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition-period"
            },
            "remarks": "EMR CloudWatch metrics are emitted every five minutes (300 seconds), so if an EMR CloudWatch metric is specified, specify `300` .",
            "stability": "external",
            "summary": "The period, in seconds, over which the statistic is applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4851
          },
          "name": "period",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition-threshold"
            },
            "stability": "external",
            "summary": "The value against which the specified statistic is compared."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4863
          },
          "name": "threshold",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition-dimensions"
            },
            "stability": "external",
            "summary": "A CloudWatch metric dimension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4827
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.MetricDimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition-evaluationperiods"
            },
            "remarks": "The default value is `1` .",
            "stability": "external",
            "summary": "The number of periods, in five-minute increments, during which the alarm condition must exist before the alarm triggers automatic scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4833
          },
          "name": "evaluationPeriods",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition-namespace"
            },
            "remarks": "The default is `AWS/ElasticMapReduce` .",
            "stability": "external",
            "summary": "The namespace for the CloudWatch metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4845
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition-statistic"
            },
            "remarks": "The default is `AVERAGE` .",
            "stability": "external",
            "summary": "The statistic to apply to the metric associated with the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4857
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition.html#cfn-elasticmapreduce-instancegroupconfig-cloudwatchalarmdefinition-unit"
            },
            "remarks": "The value specified for `Unit` must correspond to the units specified in the CloudWatch metric.",
            "stability": "external",
            "summary": "The unit of measure associated with the CloudWatch metric being watched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4869
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfig.CloudWatchAlarmDefinitionProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ConfigurationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-configuration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Configurations are optional. You can use them to have EMR customize applications and software bundled with Amazon EMR when a cluster is created. A configuration consists of a classification, properties, and optional nested configurations. A classification refers to an application-specific configuration file. Properties are the settings you want to change in that file. For more information, see [Configuring Applications](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) .\n\n> Applies only to Amazon EMR releases 4.0 and later.",
        "stability": "external",
        "summary": "`Configurations` is a property of the `AWS::EMR::Cluster` resource that specifies the configuration of applications on an Amazon EMR cluster.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const configurationProperty_: emr.CfnInstanceGroupConfig.ConfigurationProperty;\nconst configurationProperty: emr.CfnInstanceGroupConfig.ConfigurationProperty = {\n  classification: 'classification',\n  configurationProperties: {\n    configurationPropertiesKey: 'configurationProperties',\n  },\n  configurations: [{\n    classification: 'classification',\n    configurationProperties: {\n      configurationPropertiesKey: 'configurationProperties',\n    },\n    configurations: [configurationProperty_],\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 4962
      },
      "name": "ConfigurationProperty",
      "namespace": "CfnInstanceGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-configuration.html#cfn-emr-cluster-configuration-classification"
            },
            "stability": "external",
            "summary": "The classification within a configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4968
          },
          "name": "classification",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-configuration.html#cfn-emr-cluster-configuration-configurationproperties"
            },
            "remarks": "Duplicates not allowed.",
            "stability": "external",
            "summary": "Within a configuration classification, a set of properties that represent the settings that you want to change in the configuration file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4974
          },
          "name": "configurationProperties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-configuration.html#cfn-emr-cluster-configuration-configurations"
            },
            "stability": "external",
            "summary": "A list of additional configurations to apply within a configuration object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4980
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfig.ConfigurationProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfig.EbsBlockDeviceConfigProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Configuration of requested EBS block device associated with the instance group with count of volumes that will be associated to every instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst ebsBlockDeviceConfigProperty: emr.CfnInstanceGroupConfig.EbsBlockDeviceConfigProperty = {\n  volumeSpecification: {\n    sizeInGb: 123,\n    volumeType: 'volumeType',\n\n    // the properties below are optional\n    iops: 123,\n  },\n\n  // the properties below are optional\n  volumesPerInstance: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.EbsBlockDeviceConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 5047
      },
      "name": "EbsBlockDeviceConfigProperty",
      "namespace": "CfnInstanceGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig.html#cfn-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification"
            },
            "stability": "external",
            "summary": "EBS volume specifications such as volume type, IOPS, and size (GiB) that will be requested for the EBS volume attached to an EC2 instance in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5053
          },
          "name": "volumeSpecification",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.VolumeSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig.html#cfn-emr-ebsconfiguration-ebsblockdeviceconfig-volumesperinstance"
            },
            "stability": "external",
            "summary": "Number of EBS volumes with a specific volume configuration that will be associated with every instance in the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5059
          },
          "name": "volumesPerInstance",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfig.EbsBlockDeviceConfigProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfig.EbsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The Amazon EBS configuration of a cluster instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst ebsConfigurationProperty: emr.CfnInstanceGroupConfig.EbsConfigurationProperty = {\n  ebsBlockDeviceConfigs: [{\n    volumeSpecification: {\n      sizeInGb: 123,\n      volumeType: 'volumeType',\n\n      // the properties below are optional\n      iops: 123,\n    },\n\n    // the properties below are optional\n    volumesPerInstance: 123,\n  }],\n  ebsOptimized: false,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.EbsConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 5124
      },
      "name": "EbsConfigurationProperty",
      "namespace": "CfnInstanceGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration.html#cfn-emr-ebsconfiguration-ebsblockdeviceconfigs"
            },
            "stability": "external",
            "summary": "An array of Amazon EBS volume specifications attached to a cluster instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5130
          },
          "name": "ebsBlockDeviceConfigs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.EbsBlockDeviceConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration.html#cfn-emr-ebsconfiguration-ebsoptimized"
            },
            "stability": "external",
            "summary": "Indicates whether an Amazon EBS volume is EBS-optimized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5136
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfig.EbsConfigurationProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfig.MetricDimensionProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-metricdimension.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`MetricDimension` specifies a CloudWatch dimension, which is specified with a `Key` `Value` pair. The key is known as a `Name` in CloudWatch. By default, Amazon EMR uses one dimension whose `Key` is `JobFlowID` and `Value` is a variable representing the cluster ID, which is `${emr.clusterId}` . This enables the automatic scaling rule for EMR to bootstrap when the cluster ID becomes available during cluster creation.",
        "stability": "external",
        "summary": "`MetricDimension` is a subproperty of the `CloudWatchAlarmDefinition` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst metricDimensionProperty: emr.CfnInstanceGroupConfig.MetricDimensionProperty = {\n  key: 'key',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.MetricDimensionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 5200
      },
      "name": "MetricDimensionProperty",
      "namespace": "CfnInstanceGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-metricdimension.html#cfn-elasticmapreduce-instancegroupconfig-metricdimension-key"
            },
            "stability": "external",
            "summary": "The dimension name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5206
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-metricdimension.html#cfn-elasticmapreduce-instancegroupconfig-metricdimension-value"
            },
            "stability": "external",
            "summary": "The dimension value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5212
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfig.MetricDimensionProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ScalingActionProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`ScalingAction` determines the type of adjustment the automatic scaling activity makes when triggered, and the periodicity of the adjustment.",
        "stability": "external",
        "summary": "`ScalingAction` is a subproperty of the `ScalingRule` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst scalingActionProperty: emr.CfnInstanceGroupConfig.ScalingActionProperty = {\n  simpleScalingPolicyConfiguration: {\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    adjustmentType: 'adjustmentType',\n    coolDown: 123,\n  },\n\n  // the properties below are optional\n  market: 'market',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ScalingActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 5278
      },
      "name": "ScalingActionProperty",
      "namespace": "CfnInstanceGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingaction.html#cfn-elasticmapreduce-instancegroupconfig-scalingaction-simplescalingpolicyconfiguration"
            },
            "stability": "external",
            "summary": "The type of adjustment the automatic scaling activity makes when triggered, and the periodicity of the adjustment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5290
          },
          "name": "simpleScalingPolicyConfiguration",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.SimpleScalingPolicyConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingaction.html#cfn-elasticmapreduce-instancegroupconfig-scalingaction-market"
            },
            "remarks": "Instance groups use the market type specified for the group.",
            "stability": "external",
            "summary": "Not available for instance groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5284
          },
          "name": "market",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfig.ScalingActionProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ScalingConstraintsProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingconstraints.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`ScalingConstraints` defines the upper and lower EC2 instance limits for an automatic scaling policy. Automatic scaling activities triggered by automatic scaling rules will not cause an instance group to grow above or shrink below these limits.",
        "stability": "external",
        "summary": "`ScalingConstraints` is a subproperty of the `AutoScalingPolicy` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst scalingConstraintsProperty: emr.CfnInstanceGroupConfig.ScalingConstraintsProperty = {\n  maxCapacity: 123,\n  minCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ScalingConstraintsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 5355
      },
      "name": "ScalingConstraintsProperty",
      "namespace": "CfnInstanceGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingconstraints.html#cfn-elasticmapreduce-instancegroupconfig-scalingconstraints-maxcapacity"
            },
            "remarks": "Scale-out activities will not add instances beyond this boundary.",
            "stability": "external",
            "summary": "The upper boundary of EC2 instances in an instance group beyond which scaling activities are not allowed to grow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5361
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingconstraints.html#cfn-elasticmapreduce-instancegroupconfig-scalingconstraints-mincapacity"
            },
            "remarks": "Scale-in activities will not terminate instances below this boundary.",
            "stability": "external",
            "summary": "The lower boundary of EC2 instances in an instance group below which scaling activities are not allowed to shrink."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5367
          },
          "name": "minCapacity",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfig.ScalingConstraintsProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ScalingRuleProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`ScalingRule` defines the scale-in or scale-out rules for scaling activity, including the CloudWatch metric alarm that triggers activity, how EC2 instances are added or removed, and the periodicity of adjustments. The automatic scaling policy for an instance group can comprise one or more automatic scaling rules.",
        "stability": "external",
        "summary": "`ScalingRule` is a subproperty of the `AutoScalingPolicy` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst scalingRuleProperty: emr.CfnInstanceGroupConfig.ScalingRuleProperty = {\n  action: {\n    simpleScalingPolicyConfiguration: {\n      scalingAdjustment: 123,\n\n      // the properties below are optional\n      adjustmentType: 'adjustmentType',\n      coolDown: 123,\n    },\n\n    // the properties below are optional\n    market: 'market',\n  },\n  name: 'name',\n  trigger: {\n    cloudWatchAlarmDefinition: {\n      comparisonOperator: 'comparisonOperator',\n      metricName: 'metricName',\n      period: 123,\n      threshold: 123,\n\n      // the properties below are optional\n      dimensions: [{\n        key: 'key',\n        value: 'value',\n      }],\n      evaluationPeriods: 123,\n      namespace: 'namespace',\n      statistic: 'statistic',\n      unit: 'unit',\n    },\n  },\n\n  // the properties below are optional\n  description: 'description',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ScalingRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 5433
      },
      "name": "ScalingRuleProperty",
      "namespace": "CfnInstanceGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingrule.html#cfn-elasticmapreduce-instancegroupconfig-scalingrule-action"
            },
            "stability": "external",
            "summary": "The conditions that trigger an automatic scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5439
          },
          "name": "action",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ScalingActionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingrule.html#cfn-elasticmapreduce-instancegroupconfig-scalingrule-name"
            },
            "remarks": "Rule names must be unique within a scaling policy.",
            "stability": "external",
            "summary": "The name used to identify an automatic scaling rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5451
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingrule.html#cfn-elasticmapreduce-instancegroupconfig-scalingrule-trigger"
            },
            "stability": "external",
            "summary": "The CloudWatch alarm definition that determines when automatic scaling activity is triggered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5457
          },
          "name": "trigger",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ScalingTriggerProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingrule.html#cfn-elasticmapreduce-instancegroupconfig-scalingrule-description"
            },
            "stability": "external",
            "summary": "A friendly, more verbose description of the automatic scaling rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5445
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfig.ScalingRuleProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ScalingTriggerProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingtrigger.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`ScalingTrigger` determines the conditions that trigger an automatic scaling activity.",
        "stability": "external",
        "summary": "`ScalingTrigger` is a subproperty of the `ScalingRule` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst scalingTriggerProperty: emr.CfnInstanceGroupConfig.ScalingTriggerProperty = {\n  cloudWatchAlarmDefinition: {\n    comparisonOperator: 'comparisonOperator',\n    metricName: 'metricName',\n    period: 123,\n    threshold: 123,\n\n    // the properties below are optional\n    dimensions: [{\n      key: 'key',\n      value: 'value',\n    }],\n    evaluationPeriods: 123,\n    namespace: 'namespace',\n    statistic: 'statistic',\n    unit: 'unit',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ScalingTriggerProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 5530
      },
      "name": "ScalingTriggerProperty",
      "namespace": "CfnInstanceGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingtrigger.html#cfn-elasticmapreduce-instancegroupconfig-scalingtrigger-cloudwatchalarmdefinition"
            },
            "remarks": "When the defined alarm conditions are met along with other trigger parameters, scaling activity begins.",
            "stability": "external",
            "summary": "The definition of a CloudWatch metric alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5536
          },
          "name": "cloudWatchAlarmDefinition",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.CloudWatchAlarmDefinitionProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfig.ScalingTriggerProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfig.SimpleScalingPolicyConfigurationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-simplescalingpolicyconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`SimpleScalingPolicyConfiguration` determines how an automatic scaling action adds or removes instances, the cooldown period, and the number of EC2 instances that are added each time the CloudWatch metric alarm condition is satisfied.",
        "stability": "external",
        "summary": "`SimpleScalingPolicyConfiguration` is a subproperty of the `ScalingAction` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst simpleScalingPolicyConfigurationProperty: emr.CfnInstanceGroupConfig.SimpleScalingPolicyConfigurationProperty = {\n  scalingAdjustment: 123,\n\n  // the properties below are optional\n  adjustmentType: 'adjustmentType',\n  coolDown: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.SimpleScalingPolicyConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 5598
      },
      "name": "SimpleScalingPolicyConfigurationProperty",
      "namespace": "CfnInstanceGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-simplescalingpolicyconfiguration.html#cfn-elasticmapreduce-instancegroupconfig-simplescalingpolicyconfiguration-scalingadjustment"
            },
            "remarks": "A positive value adds to the instance group's EC2 instance count while a negative number removes instances. If `AdjustmentType` is set to `EXACT_CAPACITY` , the number should only be a positive integer. If `AdjustmentType` is set to `PERCENT_CHANGE_IN_CAPACITY` , the value should express the percentage as an integer. For example, -20 indicates a decrease in 20% increments of cluster capacity.",
            "stability": "external",
            "summary": "The amount by which to scale in or scale out, based on the specified `AdjustmentType` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5616
          },
          "name": "scalingAdjustment",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-simplescalingpolicyconfiguration.html#cfn-elasticmapreduce-instancegroupconfig-simplescalingpolicyconfiguration-adjustmenttype"
            },
            "remarks": "`CHANGE_IN_CAPACITY` is the default. `CHANGE_IN_CAPACITY` indicates that the EC2 instance count increments or decrements by `ScalingAdjustment` , which should be expressed as an integer. `PERCENT_CHANGE_IN_CAPACITY` indicates the instance count increments or decrements by the percentage specified by `ScalingAdjustment` , which should be expressed as an integer. For example, 20 indicates an increase in 20% increments of cluster capacity. `EXACT_CAPACITY` indicates the scaling activity results in an instance group with the number of EC2 instances specified by `ScalingAdjustment` , which should be expressed as a positive integer.",
            "stability": "external",
            "summary": "The way in which EC2 instances are added (if `ScalingAdjustment` is a positive number) or terminated (if `ScalingAdjustment` is a negative number) each time the scaling activity is triggered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5604
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-simplescalingpolicyconfiguration.html#cfn-elasticmapreduce-instancegroupconfig-simplescalingpolicyconfiguration-cooldown"
            },
            "remarks": "The default value is 0.",
            "stability": "external",
            "summary": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5610
          },
          "name": "coolDown",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfig.SimpleScalingPolicyConfigurationProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfig.VolumeSpecificationProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`VolumeSecification` determines the volume type, IOPS, and size (GiB) for EBS volumes attached to EC2 instances.",
        "stability": "external",
        "summary": "`VolumeSpecification` is a subproperty of the `EbsBlockDeviceConfig` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst volumeSpecificationProperty: emr.CfnInstanceGroupConfig.VolumeSpecificationProperty = {\n  sizeInGb: 123,\n  volumeType: 'volumeType',\n\n  // the properties below are optional\n  iops: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.VolumeSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 5684
      },
      "name": "VolumeSpecificationProperty",
      "namespace": "CfnInstanceGroupConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification.html#cfn-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification-sizeingb"
            },
            "remarks": "This can be a number from 1 - 1024. If the volume type is EBS-optimized, the minimum value is 10.",
            "stability": "external",
            "summary": "The volume size, in gibibytes (GiB)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5696
          },
          "name": "sizeInGb",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification.html#cfn-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification-volumetype"
            },
            "remarks": "Volume types supported are gp2, io1, and standard.",
            "stability": "external",
            "summary": "The volume type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5702
          },
          "name": "volumeType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification.html#cfn-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification-iops"
            },
            "stability": "external",
            "summary": "The number of I/O operations per second (IOPS) that the volume supports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5690
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfig.VolumeSpecificationProperty"
    },
    "@aws-cdk/aws-emr.CfnInstanceGroupConfigProps": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnInstanceGroupConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const configurationProperty_: emr.CfnInstanceGroupConfig.ConfigurationProperty;\nconst cfnInstanceGroupConfigProps: emr.CfnInstanceGroupConfigProps = {\n  instanceCount: 123,\n  instanceRole: 'instanceRole',\n  instanceType: 'instanceType',\n  jobFlowId: 'jobFlowId',\n\n  // the properties below are optional\n  autoScalingPolicy: {\n    constraints: {\n      maxCapacity: 123,\n      minCapacity: 123,\n    },\n    rules: [{\n      action: {\n        simpleScalingPolicyConfiguration: {\n          scalingAdjustment: 123,\n\n          // the properties below are optional\n          adjustmentType: 'adjustmentType',\n          coolDown: 123,\n        },\n\n        // the properties below are optional\n        market: 'market',\n      },\n      name: 'name',\n      trigger: {\n        cloudWatchAlarmDefinition: {\n          comparisonOperator: 'comparisonOperator',\n          metricName: 'metricName',\n          period: 123,\n          threshold: 123,\n\n          // the properties below are optional\n          dimensions: [{\n            key: 'key',\n            value: 'value',\n          }],\n          evaluationPeriods: 123,\n          namespace: 'namespace',\n          statistic: 'statistic',\n          unit: 'unit',\n        },\n      },\n\n      // the properties below are optional\n      description: 'description',\n    }],\n  },\n  bidPrice: 'bidPrice',\n  configurations: [{\n    classification: 'classification',\n    configurationProperties: {\n      configurationPropertiesKey: 'configurationProperties',\n    },\n    configurations: [configurationProperty_],\n  }],\n  customAmiId: 'customAmiId',\n  ebsConfiguration: {\n    ebsBlockDeviceConfigs: [{\n      volumeSpecification: {\n        sizeInGb: 123,\n        volumeType: 'volumeType',\n\n        // the properties below are optional\n        iops: 123,\n      },\n\n      // the properties below are optional\n      volumesPerInstance: 123,\n    }],\n    ebsOptimized: false,\n  },\n  market: 'market',\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 4388
      },
      "name": "CfnInstanceGroupConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfiginstancecount-"
            },
            "stability": "external",
            "summary": "Target number of instances for the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4395
          },
          "name": "instanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-instancerole"
            },
            "remarks": "*Allowed Values* : TASK",
            "stability": "external",
            "summary": "The role of the instance group in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4404
          },
          "name": "instanceRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-instancetype"
            },
            "stability": "external",
            "summary": "The EC2 instance type for all instances in the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4411
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-jobflowid"
            },
            "stability": "external",
            "summary": "The ID of an Amazon EMR cluster that you want to associate this instance group with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4418
          },
          "name": "jobFlowId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-elasticmapreduce-instancegroupconfig-autoscalingpolicy"
            },
            "remarks": "`AutoScalingPolicy` defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. For more information, see [Using Automatic Scaling in Amazon EMR](https://docs.aws.amazon.com//emr/latest/ManagementGuide/emr-automatic-scaling.html) in the *Amazon EMR Management Guide* .",
            "stability": "external",
            "summary": "`AutoScalingPolicy` is a subproperty of `InstanceGroupConfig` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4425
          },
          "name": "autoScalingPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.AutoScalingPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-bidprice"
            },
            "remarks": "This is the maximum price you are willing to pay for Spot Instances. Specify `OnDemandPrice` to set the amount equal to the On-Demand price, or specify an amount in USD.",
            "stability": "external",
            "summary": "If specified, indicates that the instance group uses Spot Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4432
          },
          "name": "bidPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-configurations"
            },
            "remarks": "The list of configurations supplied for an EMR cluster instance group. You can specify a separate configuration for each instance group (master, core, and task).",
            "stability": "external",
            "summary": "> Amazon EMR releases 4.x or later."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4441
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.ConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-customamiid"
            },
            "stability": "external",
            "summary": "The custom AMI ID to use for the provisioned instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4448
          },
          "name": "customAmiId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-ebsconfiguration"
            },
            "stability": "external",
            "summary": "`EbsConfiguration` determines the EBS volumes to attach to EMR cluster instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4455
          },
          "name": "ebsConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnInstanceGroupConfig.EbsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-market"
            },
            "stability": "external",
            "summary": "Market type of the EC2 instances used to create a cluster node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4462
          },
          "name": "market",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-name"
            },
            "stability": "external",
            "summary": "Friendly name given to the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 4469
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnInstanceGroupConfigProps"
    },
    "@aws-cdk/aws-emr.CfnSecurityConfiguration": {
      "assembly": "@aws-cdk/aws-emr",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EMR::SecurityConfiguration",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Use a `SecurityConfiguration` resource to configure data encryption, Kerberos authentication (available in Amazon EMR release version 5.10.0 and later), and Amazon S3 authorization for EMRFS (available in EMR 5.10.0 and later). You can re-use a security configuration for any number of clusters in your account. For more information and example security configuration JSON objects, see [Create a Security Configuration](https://docs.aws.amazon.com//emr/latest/ManagementGuide/emr-create-security-configuration.html) in the *Amazon EMR Management Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EMR::SecurityConfiguration`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const securityConfiguration: any;\nconst cfnSecurityConfiguration = new emr.CfnSecurityConfiguration(this, 'MyCfnSecurityConfiguration', {\n  securityConfiguration: securityConfiguration,\n\n  // the properties below are optional\n  name: 'name',\n});"
      },
      "fqn": "@aws-cdk/aws-emr.CfnSecurityConfiguration",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EMR::SecurityConfiguration`."
        },
        "locationInModule": {
          "filename": "lib/emr.generated.ts",
          "line": 5892
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-emr.CfnSecurityConfigurationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 5846
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5906
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5918
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecurityConfiguration",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5850
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5911
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html#cfn-emr-securityconfiguration-securityconfiguration"
            },
            "stability": "external",
            "summary": "The security configuration details in JSON format."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5876
          },
          "name": "securityConfiguration",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html#cfn-emr-securityconfiguration-name"
            },
            "stability": "external",
            "summary": "The name of the security configuration."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5883
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnSecurityConfiguration"
    },
    "@aws-cdk/aws-emr.CfnSecurityConfigurationProps": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnSecurityConfiguration`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\n\ndeclare const securityConfiguration: any;\nconst cfnSecurityConfigurationProps: emr.CfnSecurityConfigurationProps = {\n  securityConfiguration: securityConfiguration,\n\n  // the properties below are optional\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnSecurityConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 5770
      },
      "name": "CfnSecurityConfigurationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html#cfn-emr-securityconfiguration-securityconfiguration"
            },
            "stability": "external",
            "summary": "The security configuration details in JSON format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5777
          },
          "name": "securityConfiguration",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html#cfn-emr-securityconfiguration-name"
            },
            "stability": "external",
            "summary": "The name of the security configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5784
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnSecurityConfigurationProps"
    },
    "@aws-cdk/aws-emr.CfnStep": {
      "assembly": "@aws-cdk/aws-emr",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EMR::Step",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Use `Step` to specify a cluster (job flow) step, which runs only on the master node. Steps are used to submit data processing jobs to a cluster.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EMR::Step`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst cfnStep = new emr.CfnStep(this, 'MyCfnStep', {\n  actionOnFailure: 'actionOnFailure',\n  hadoopJarStep: {\n    jar: 'jar',\n\n    // the properties below are optional\n    args: ['args'],\n    mainClass: 'mainClass',\n    stepProperties: [{\n      key: 'key',\n      value: 'value',\n    }],\n  },\n  jobFlowId: 'jobFlowId',\n  name: 'name',\n});"
      },
      "fqn": "@aws-cdk/aws-emr.CfnStep",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EMR::Step`."
        },
        "locationInModule": {
          "filename": "lib/emr.generated.ts",
          "line": 6090
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-emr.CfnStepProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 6030
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6109
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6123
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnStep",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6034
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6114
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html#cfn-elasticmapreduce-step-actiononfailure"
            },
            "remarks": "Possible values are `CANCEL_AND_WAIT` and `CONTINUE` .",
            "stability": "external",
            "summary": "This specifies what action to take when the cluster step fails."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6060
          },
          "name": "actionOnFailure",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html#cfn-elasticmapreduce-step-hadoopjarstep"
            },
            "remarks": "The main function submits a job for the cluster to execute as a step on the master node, and then waits for the job to finish or fail before executing subsequent steps.",
            "stability": "external",
            "summary": "The `HadoopJarStepConfig` property type specifies a job flow step consisting of a JAR file whose main function will be executed."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6067
          },
          "name": "hadoopJarStep",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnStep.HadoopJarStepConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html#cfn-elasticmapreduce-step-jobflowid"
            },
            "stability": "external",
            "summary": "A string that uniquely identifies the cluster (job flow)."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6074
          },
          "name": "jobFlowId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html#cfn-elasticmapreduce-step-name"
            },
            "stability": "external",
            "summary": "The name of the cluster step."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6081
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnStep"
    },
    "@aws-cdk/aws-emr.CfnStep.HadoopJarStepConfigProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-step-hadoopjarstepconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The main function submits a job for Hadoop to execute and waits for the job to finish or fail.",
        "stability": "external",
        "summary": "A job flow step consisting of a JAR file whose main function will be executed.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst hadoopJarStepConfigProperty: emr.CfnStep.HadoopJarStepConfigProperty = {\n  jar: 'jar',\n\n  // the properties below are optional\n  args: ['args'],\n  mainClass: 'mainClass',\n  stepProperties: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnStep.HadoopJarStepConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 6137
      },
      "name": "HadoopJarStepConfigProperty",
      "namespace": "CfnStep",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-step-hadoopjarstepconfig.html#cfn-elasticmapreduce-step-hadoopjarstepconfig-jar"
            },
            "stability": "external",
            "summary": "A path to a JAR file run during the step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6149
          },
          "name": "jar",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-step-hadoopjarstepconfig.html#cfn-elasticmapreduce-step-hadoopjarstepconfig-args"
            },
            "stability": "external",
            "summary": "A list of command line arguments passed to the JAR file's main function when executed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6143
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-step-hadoopjarstepconfig.html#cfn-elasticmapreduce-step-hadoopjarstepconfig-mainclass"
            },
            "remarks": "If not specified, the JAR file should specify a Main-Class in its manifest file.",
            "stability": "external",
            "summary": "The name of the main class in the specified Java file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6155
          },
          "name": "mainClass",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-step-hadoopjarstepconfig.html#cfn-elasticmapreduce-step-hadoopjarstepconfig-stepproperties"
            },
            "remarks": "You can use these properties to pass key value pairs to your main function.",
            "stability": "external",
            "summary": "A list of Java properties that are set when the step runs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6161
          },
          "name": "stepProperties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-emr.CfnStep.KeyValueProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnStep.HadoopJarStepConfigProperty"
    },
    "@aws-cdk/aws-emr.CfnStep.KeyValueProperty": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-step-keyvalue.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`KeyValue` is used to pass parameters to a step.",
        "stability": "external",
        "summary": "`KeyValue` is a subproperty of the `HadoopJarStepConfig` property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst keyValueProperty: emr.CfnStep.KeyValueProperty = {\n  key: 'key',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnStep.KeyValueProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 6232
      },
      "name": "KeyValueProperty",
      "namespace": "CfnStep",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-step-keyvalue.html#cfn-elasticmapreduce-step-keyvalue-key"
            },
            "stability": "external",
            "summary": "The unique identifier of a key-value pair."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6238
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-step-keyvalue.html#cfn-elasticmapreduce-step-keyvalue-value"
            },
            "stability": "external",
            "summary": "The value part of the identified key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6244
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnStep.KeyValueProperty"
    },
    "@aws-cdk/aws-emr.CfnStepProps": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnStep`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst cfnStepProps: emr.CfnStepProps = {\n  actionOnFailure: 'actionOnFailure',\n  hadoopJarStep: {\n    jar: 'jar',\n\n    // the properties below are optional\n    args: ['args'],\n    mainClass: 'mainClass',\n    stepProperties: [{\n      key: 'key',\n      value: 'value',\n    }],\n  },\n  jobFlowId: 'jobFlowId',\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnStepProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 5931
      },
      "name": "CfnStepProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html#cfn-elasticmapreduce-step-actiononfailure"
            },
            "remarks": "Possible values are `CANCEL_AND_WAIT` and `CONTINUE` .",
            "stability": "external",
            "summary": "This specifies what action to take when the cluster step fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5938
          },
          "name": "actionOnFailure",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html#cfn-elasticmapreduce-step-hadoopjarstep"
            },
            "remarks": "The main function submits a job for the cluster to execute as a step on the master node, and then waits for the job to finish or fail before executing subsequent steps.",
            "stability": "external",
            "summary": "The `HadoopJarStepConfig` property type specifies a job flow step consisting of a JAR file whose main function will be executed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5945
          },
          "name": "hadoopJarStep",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-emr.CfnStep.HadoopJarStepConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html#cfn-elasticmapreduce-step-jobflowid"
            },
            "stability": "external",
            "summary": "A string that uniquely identifies the cluster (job flow)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5952
          },
          "name": "jobFlowId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html#cfn-elasticmapreduce-step-name"
            },
            "stability": "external",
            "summary": "The name of the cluster step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 5959
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnStepProps"
    },
    "@aws-cdk/aws-emr.CfnStudio": {
      "assembly": "@aws-cdk/aws-emr",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EMR::Studio",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::EMR::Studio` resource specifies an Amazon EMR Studio. An EMR Studio is a web-based, integrated development environment for fully managed Jupyter notebooks that run on Amazon EMR clusters. For more information, see the [*Amazon EMR Management Guide*](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-studio.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EMR::Studio`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst cfnStudio = new emr.CfnStudio(this, 'MyCfnStudio', {\n  authMode: 'authMode',\n  defaultS3Location: 'defaultS3Location',\n  engineSecurityGroupId: 'engineSecurityGroupId',\n  name: 'name',\n  serviceRole: 'serviceRole',\n  subnetIds: ['subnetIds'],\n  vpcId: 'vpcId',\n  workspaceSecurityGroupId: 'workspaceSecurityGroupId',\n\n  // the properties below are optional\n  description: 'description',\n  idpAuthUrl: 'idpAuthUrl',\n  idpRelayStateParameterName: 'idpRelayStateParameterName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  userRole: 'userRole',\n});"
      },
      "fqn": "@aws-cdk/aws-emr.CfnStudio",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EMR::Studio`."
        },
        "locationInModule": {
          "filename": "lib/emr.generated.ts",
          "line": 6645
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-emr.CfnStudioProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 6502
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6680
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6703
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnStudio",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6506
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "remarks": "For example: `arn:aws:elasticmapreduce:us-east-1:653XXXXXXXXX:studio/es-EXAMPLE12345678XXXXXXXXXXX` .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Amazon EMR Studio."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6531
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StudioId"
            },
            "remarks": "For example: `es-EXAMPLE12345678XXXXXXXXXXX` .",
            "stability": "external",
            "summary": "The ID of the Amazon EMR Studio."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6537
          },
          "name": "attrStudioId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Url"
            },
            "remarks": "For example: `https://es-EXAMPLE12345678XXXXXXXXXXX.emrstudio-prod.us-east-1.amazonaws.com` .",
            "stability": "external",
            "summary": "The unique access URL of the Amazon EMR Studio."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6543
          },
          "name": "attrUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6685
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-tags"
            },
            "remarks": "For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .",
            "stability": "external",
            "summary": "An array of key-value pairs to apply to this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6629
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-authmode"
            },
            "stability": "external",
            "summary": "Specifies whether the Studio authenticates users using AWS SSO or IAM."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6550
          },
          "name": "authMode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-defaults3location"
            },
            "stability": "external",
            "summary": "The Amazon S3 location to back up EMR Studio Workspaces and notebook files."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6557
          },
          "name": "defaultS3Location",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-enginesecuritygroupid"
            },
            "remarks": "The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by `VpcId` .",
            "stability": "external",
            "summary": "The ID of the Amazon EMR Studio Engine security group."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6564
          },
          "name": "engineSecurityGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-name"
            },
            "stability": "external",
            "summary": "A descriptive name for the Amazon EMR Studio."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6571
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-servicerole"
            },
            "remarks": "The service role provides a way for Amazon EMR Studio to interoperate with other AWS services.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the IAM role that will be assumed by the Amazon EMR Studio."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6578
          },
          "name": "serviceRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-subnetids"
            },
            "remarks": "A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by `VpcId` . Studio users can create a Workspace in any of the specified subnets.",
            "stability": "external",
            "summary": "A list of subnet IDs to associate with the Amazon EMR Studio."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6585
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6592
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-workspacesecuritygroupid"
            },
            "remarks": "The Workspace security group allows outbound network traffic to resources in the Engine security group and to the internet.",
            "stability": "external",
            "summary": "The ID of the Workspace security group associated with the Amazon EMR Studio."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6599
          },
          "name": "workspaceSecurityGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-description"
            },
            "stability": "external",
            "summary": "A detailed description of the Amazon EMR Studio."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6606
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-idpauthurl"
            },
            "remarks": "Amazon EMR Studio redirects federated users to this endpoint for authentication when logging in to a Studio with the Studio URL.",
            "stability": "external",
            "summary": "Your identity provider's authentication endpoint."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6613
          },
          "name": "idpAuthUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-idprelaystateparametername"
            },
            "stability": "external",
            "summary": "The name of your identity provider's `RelayState` parameter."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6620
          },
          "name": "idpRelayStateParameterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-userrole"
            },
            "remarks": "The permissions attached to this IAM role can be scoped down for each user or group using session policies. You only need to specify `UserRole` when you set `AuthMode` to `SSO` .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the IAM user role that will be assumed by users and groups logged in to a Studio."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6636
          },
          "name": "userRole",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnStudio"
    },
    "@aws-cdk/aws-emr.CfnStudioProps": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnStudio`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst cfnStudioProps: emr.CfnStudioProps = {\n  authMode: 'authMode',\n  defaultS3Location: 'defaultS3Location',\n  engineSecurityGroupId: 'engineSecurityGroupId',\n  name: 'name',\n  serviceRole: 'serviceRole',\n  subnetIds: ['subnetIds'],\n  vpcId: 'vpcId',\n  workspaceSecurityGroupId: 'workspaceSecurityGroupId',\n\n  // the properties below are optional\n  description: 'description',\n  idpAuthUrl: 'idpAuthUrl',\n  idpRelayStateParameterName: 'idpRelayStateParameterName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  userRole: 'userRole',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnStudioProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 6307
      },
      "name": "CfnStudioProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-authmode"
            },
            "stability": "external",
            "summary": "Specifies whether the Studio authenticates users using AWS SSO or IAM."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6314
          },
          "name": "authMode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-defaults3location"
            },
            "stability": "external",
            "summary": "The Amazon S3 location to back up EMR Studio Workspaces and notebook files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6321
          },
          "name": "defaultS3Location",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-enginesecuritygroupid"
            },
            "remarks": "The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by `VpcId` .",
            "stability": "external",
            "summary": "The ID of the Amazon EMR Studio Engine security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6328
          },
          "name": "engineSecurityGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-name"
            },
            "stability": "external",
            "summary": "A descriptive name for the Amazon EMR Studio."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6335
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-servicerole"
            },
            "remarks": "The service role provides a way for Amazon EMR Studio to interoperate with other AWS services.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the IAM role that will be assumed by the Amazon EMR Studio."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6342
          },
          "name": "serviceRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-subnetids"
            },
            "remarks": "A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by `VpcId` . Studio users can create a Workspace in any of the specified subnets.",
            "stability": "external",
            "summary": "A list of subnet IDs to associate with the Amazon EMR Studio."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6349
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6356
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-workspacesecuritygroupid"
            },
            "remarks": "The Workspace security group allows outbound network traffic to resources in the Engine security group and to the internet.",
            "stability": "external",
            "summary": "The ID of the Workspace security group associated with the Amazon EMR Studio."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6363
          },
          "name": "workspaceSecurityGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-description"
            },
            "stability": "external",
            "summary": "A detailed description of the Amazon EMR Studio."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6370
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-idpauthurl"
            },
            "remarks": "Amazon EMR Studio redirects federated users to this endpoint for authentication when logging in to a Studio with the Studio URL.",
            "stability": "external",
            "summary": "Your identity provider's authentication endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6377
          },
          "name": "idpAuthUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-idprelaystateparametername"
            },
            "stability": "external",
            "summary": "The name of your identity provider's `RelayState` parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6384
          },
          "name": "idpRelayStateParameterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-tags"
            },
            "remarks": "For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .",
            "stability": "external",
            "summary": "An array of key-value pairs to apply to this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6393
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-userrole"
            },
            "remarks": "The permissions attached to this IAM role can be scoped down for each user or group using session policies. You only need to specify `UserRole` when you set `AuthMode` to `SSO` .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the IAM user role that will be assumed by users and groups logged in to a Studio."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6400
          },
          "name": "userRole",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnStudioProps"
    },
    "@aws-cdk/aws-emr.CfnStudioSessionMapping": {
      "assembly": "@aws-cdk/aws-emr",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EMR::StudioSessionMapping",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::EMR::StudioSessionMapping` resource is an Amazon EMR resource type that maps a user or group to the Amazon EMR Studio specified by `StudioId` , and applies a session policy that defines Studio permissions for that user or group.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EMR::StudioSessionMapping`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst cfnStudioSessionMapping = new emr.CfnStudioSessionMapping(this, 'MyCfnStudioSessionMapping', {\n  identityName: 'identityName',\n  identityType: 'identityType',\n  sessionPolicyArn: 'sessionPolicyArn',\n  studioId: 'studioId',\n});"
      },
      "fqn": "@aws-cdk/aws-emr.CfnStudioSessionMapping",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EMR::StudioSessionMapping`."
        },
        "locationInModule": {
          "filename": "lib/emr.generated.ts",
          "line": 6875
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-emr.CfnStudioSessionMappingProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 6815
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6894
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6908
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnStudioSessionMapping",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6819
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6899
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html#cfn-emr-studiosessionmapping-identityname"
            },
            "remarks": "For more information, see [UserName](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html#singlesignon-Type-User-UserName) and [DisplayName](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html#singlesignon-Type-Group-DisplayName) in the *AWS SSO Identity Store API Reference* .",
            "stability": "external",
            "summary": "The name of the user or group."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6845
          },
          "name": "identityName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html#cfn-emr-studiosessionmapping-identitytype"
            },
            "stability": "external",
            "summary": "Specifies whether the identity to map to the Amazon EMR Studio is a user or a group."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6852
          },
          "name": "identityType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html#cfn-emr-studiosessionmapping-sessionpolicyarn"
            },
            "remarks": "Session policies refine Studio user permissions without the need to use multiple IAM user roles. For more information, see [Create an EMR Studio user role with session policies](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-studio-user-role.html) in the *Amazon EMR Management Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6859
          },
          "name": "sessionPolicyArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html#cfn-emr-studiosessionmapping-studioid"
            },
            "stability": "external",
            "summary": "The ID of the Amazon EMR Studio to which the user or group will be mapped."
          },
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6866
          },
          "name": "studioId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnStudioSessionMapping"
    },
    "@aws-cdk/aws-emr.CfnStudioSessionMappingProps": {
      "assembly": "@aws-cdk/aws-emr",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnStudioSessionMapping`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as emr from '@aws-cdk/aws-emr';\nconst cfnStudioSessionMappingProps: emr.CfnStudioSessionMappingProps = {\n  identityName: 'identityName',\n  identityType: 'identityType',\n  sessionPolicyArn: 'sessionPolicyArn',\n  studioId: 'studioId',\n};"
      },
      "fqn": "@aws-cdk/aws-emr.CfnStudioSessionMappingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr.generated.ts",
        "line": 6716
      },
      "name": "CfnStudioSessionMappingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html#cfn-emr-studiosessionmapping-identityname"
            },
            "remarks": "For more information, see [UserName](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html#singlesignon-Type-User-UserName) and [DisplayName](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html#singlesignon-Type-Group-DisplayName) in the *AWS SSO Identity Store API Reference* .",
            "stability": "external",
            "summary": "The name of the user or group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6723
          },
          "name": "identityName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html#cfn-emr-studiosessionmapping-identitytype"
            },
            "stability": "external",
            "summary": "Specifies whether the identity to map to the Amazon EMR Studio is a user or a group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6730
          },
          "name": "identityType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html#cfn-emr-studiosessionmapping-sessionpolicyarn"
            },
            "remarks": "Session policies refine Studio user permissions without the need to use multiple IAM user roles. For more information, see [Create an EMR Studio user role with session policies](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-studio-user-role.html) in the *Amazon EMR Management Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6737
          },
          "name": "sessionPolicyArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html#cfn-emr-studiosessionmapping-studioid"
            },
            "stability": "external",
            "summary": "The ID of the Amazon EMR Studio to which the user or group will be mapped."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr.generated.ts",
            "line": 6744
          },
          "name": "studioId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr.generated:CfnStudioSessionMappingProps"
    }
  },
  "version": "1.169.0",
  "fingerprint": "**********"
}