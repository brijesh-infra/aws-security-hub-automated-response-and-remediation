function _aws_cdk_aws_neptune_EngineVersion(p) {
}
function _aws_cdk_aws_neptune_DatabaseClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceType))
            _aws_cdk_aws_neptune_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.associatedRoles))
            require("@aws-cdk/aws-iam/.warnings.jsii.js")._aws_cdk_aws_iam_IRole(p.associatedRoles);
        if (!visitedObjects.has(p.clusterParameterGroup))
            _aws_cdk_aws_neptune_IClusterParameterGroup(p.clusterParameterGroup);
        if (!visitedObjects.has(p.engineVersion))
            _aws_cdk_aws_neptune_EngineVersion(p.engineVersion);
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_neptune_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
        if (!visitedObjects.has(p.subnetGroup))
            _aws_cdk_aws_neptune_ISubnetGroup(p.subnetGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_neptune_IDatabaseCluster(p) {
}
function _aws_cdk_aws_neptune_DatabaseClusterAttributes(p) {
}
function _aws_cdk_aws_neptune_DatabaseClusterBase(p) {
}
function _aws_cdk_aws_neptune_DatabaseCluster(p) {
}
function _aws_cdk_aws_neptune_InstanceType(p) {
}
function _aws_cdk_aws_neptune_IDatabaseInstance(p) {
}
function _aws_cdk_aws_neptune_DatabaseInstanceAttributes(p) {
}
function _aws_cdk_aws_neptune_DatabaseInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            _aws_cdk_aws_neptune_IDatabaseCluster(p.cluster);
        if (!visitedObjects.has(p.instanceType))
            _aws_cdk_aws_neptune_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_neptune_IParameterGroup(p.parameterGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_neptune_DatabaseInstance(p) {
}
function _aws_cdk_aws_neptune_Endpoint(p) {
}
function _aws_cdk_aws_neptune_ClusterParameterGroupProps(p) {
}
function _aws_cdk_aws_neptune_ParameterGroupProps(p) {
}
function _aws_cdk_aws_neptune_IClusterParameterGroup(p) {
}
function _aws_cdk_aws_neptune_ClusterParameterGroup(p) {
}
function _aws_cdk_aws_neptune_IParameterGroup(p) {
}
function _aws_cdk_aws_neptune_ParameterGroup(p) {
}
function _aws_cdk_aws_neptune_ISubnetGroup(p) {
}
function _aws_cdk_aws_neptune_SubnetGroupProps(p) {
}
function _aws_cdk_aws_neptune_SubnetGroup(p) {
}
function _aws_cdk_aws_neptune_CfnDBClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_neptune_CfnDBCluster(p) {
}
function _aws_cdk_aws_neptune_CfnDBCluster_DBClusterRoleProperty(p) {
}
function _aws_cdk_aws_neptune_CfnDBClusterParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_neptune_CfnDBClusterParameterGroup(p) {
}
function _aws_cdk_aws_neptune_CfnDBInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_neptune_CfnDBInstance(p) {
}
function _aws_cdk_aws_neptune_CfnDBParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_neptune_CfnDBParameterGroup(p) {
}
function _aws_cdk_aws_neptune_CfnDBSubnetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_neptune_CfnDBSubnetGroup(p) {
}
function print(name, deprecationMessage) {
    const deprecated = process.env.JSII_DEPRECATED;
    const deprecationMode = ["warn", "fail", "quiet"].includes(deprecated) ? deprecated : "warn";
    const message = `${name} is deprecated.\n  ${deprecationMessage.trim()}\n  This API will be removed in the next major release.`;
    switch (deprecationMode) {
        case "fail":
            throw new DeprecationError(message);
        case "warn":
            console.warn("[WARNING]", message);
            break;
    }
}
function getPropertyDescriptor(obj, prop) {
    const descriptor = Object.getOwnPropertyDescriptor(obj, prop);
    if (descriptor) {
        return descriptor;
    }
    const proto = Object.getPrototypeOf(obj);
    const prototypeDescriptor = proto && getPropertyDescriptor(proto, prop);
    if (prototypeDescriptor) {
        return prototypeDescriptor;
    }
    return {};
}
const visitedObjects = new Set();
class DeprecationError extends Error {
    constructor(...args) {
        super(...args);
        Object.defineProperty(this, "name", {
            configurable: false,
            enumerable: true,
            value: "DeprecationError",
            writable: false,
        });
    }
}
module.exports = { print, getPropertyDescriptor, DeprecationError, _aws_cdk_aws_neptune_EngineVersion, _aws_cdk_aws_neptune_DatabaseClusterProps, _aws_cdk_aws_neptune_IDatabaseCluster, _aws_cdk_aws_neptune_DatabaseClusterAttributes, _aws_cdk_aws_neptune_DatabaseClusterBase, _aws_cdk_aws_neptune_DatabaseCluster, _aws_cdk_aws_neptune_InstanceType, _aws_cdk_aws_neptune_IDatabaseInstance, _aws_cdk_aws_neptune_DatabaseInstanceAttributes, _aws_cdk_aws_neptune_DatabaseInstanceProps, _aws_cdk_aws_neptune_DatabaseInstance, _aws_cdk_aws_neptune_Endpoint, _aws_cdk_aws_neptune_ClusterParameterGroupProps, _aws_cdk_aws_neptune_ParameterGroupProps, _aws_cdk_aws_neptune_IClusterParameterGroup, _aws_cdk_aws_neptune_ClusterParameterGroup, _aws_cdk_aws_neptune_IParameterGroup, _aws_cdk_aws_neptune_ParameterGroup, _aws_cdk_aws_neptune_ISubnetGroup, _aws_cdk_aws_neptune_SubnetGroupProps, _aws_cdk_aws_neptune_SubnetGroup, _aws_cdk_aws_neptune_CfnDBClusterProps, _aws_cdk_aws_neptune_CfnDBCluster, _aws_cdk_aws_neptune_CfnDBCluster_DBClusterRoleProperty, _aws_cdk_aws_neptune_CfnDBClusterParameterGroupProps, _aws_cdk_aws_neptune_CfnDBClusterParameterGroup, _aws_cdk_aws_neptune_CfnDBInstanceProps, _aws_cdk_aws_neptune_CfnDBInstance, _aws_cdk_aws_neptune_CfnDBParameterGroupProps, _aws_cdk_aws_neptune_CfnDBParameterGroup, _aws_cdk_aws_neptune_CfnDBSubnetGroupProps, _aws_cdk_aws_neptune_CfnDBSubnetGroup };
