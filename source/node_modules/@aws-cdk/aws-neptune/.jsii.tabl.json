{
  "version": "2",
  "toolVersion": "1.63.2",
  "snippets": {
    "1ad1a0a50078f2fb2bef949c97863262142469d5cc447ddc7030a3962e6512ce": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_neptune as neptune",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Neptune;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.neptune.*;",
          "version": "1"
        },
        "go": {
          "source": "import neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"",
          "version": "1"
        },
        "$": {
          "source": "import * as neptune from '@aws-cdk/aws-neptune';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-neptune"
        },
        "field": {
          "field": "markdown",
          "line": 28
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as neptune from '@aws-cdk/aws-neptune';",
      "syntaxKindCounter": {
        "10": 1,
        "75": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "1b1ae94ef9ae580f2adffde2b763d2d888179c4a86cfa7473ca736cf4b3984c6": {
      "translations": {
        "python": {
          "source": "cluster = neptune.DatabaseCluster(self, \"Database\",\n    vpc=vpc,\n    instance_type=neptune.InstanceType.R5_LARGE\n)",
          "version": "2"
        },
        "csharp": {
          "source": "DatabaseCluster cluster = new DatabaseCluster(this, \"Database\", new DatabaseClusterProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.R5_LARGE\n});",
          "version": "1"
        },
        "java": {
          "source": "DatabaseCluster cluster = DatabaseCluster.Builder.create(this, \"Database\")\n        .vpc(vpc)\n        .instanceType(InstanceType.R5_LARGE)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "cluster := neptune.NewDatabaseCluster(this, jsii.String(\"Database\"), &databaseClusterProps{\n\tvpc: vpc,\n\tinstanceType: neptune.instanceType_R5_LARGE(),\n})",
          "version": "1"
        },
        "$": {
          "source": "const cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-neptune"
        },
        "field": {
          "field": "markdown",
          "line": 36
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.DatabaseCluster",
        "@aws-cdk/aws-neptune.DatabaseClusterProps",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1,
        "282": 1
      },
      "fqnsFingerprint": "0882043f67bd93781f25049e772f9648e896c74d7474250802c83f3c59f8ccef"
    },
    "b51bde7db89373575578829064114b729f88265941423b3f2d51ca2faf8e1e73": {
      "translations": {
        "python": {
          "source": "cluster.connections.allow_default_port_from_any_ipv4(\"Open to the world\")",
          "version": "2"
        },
        "csharp": {
          "source": "cluster.Connections.AllowDefaultPortFromAnyIpv4(\"Open to the world\");",
          "version": "1"
        },
        "java": {
          "source": "cluster.connections.allowDefaultPortFromAnyIpv4(\"Open to the world\");",
          "version": "1"
        },
        "go": {
          "source": "cluster.connections.allowDefaultPortFromAnyIpv4(jsii.String(\"Open to the world\"))",
          "version": "1"
        },
        "$": {
          "source": "cluster.connections.allowDefaultPortFromAnyIpv4('Open to the world');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-neptune"
        },
        "field": {
          "field": "markdown",
          "line": 50
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.Connections#allowDefaultPortFromAnyIpv4",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.DatabaseCluster#connections",
        "@aws-cdk/aws-neptune.InstanceType"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    const cluster = new neptune.DatabaseCluster(this, 'Database', {\n      vpc,\n      instanceType: neptune.InstanceType.R5_LARGE,\n    });\n\n    // Code snippet begins after !show marker below\n/// !show\ncluster.connections.allowDefaultPortFromAnyIpv4('Open to the world');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 3,
        "194": 2,
        "196": 1,
        "226": 1
      },
      "fqnsFingerprint": "eae6f64fe35e14d89658635b7730dcdedb95204bcc8735934f23e99099fc98df"
    },
    "49c225f3877306b66220878e2e1f423e2dbf22d394306aad58818220ee6e669f": {
      "translations": {
        "python": {
          "source": "write_address = cluster.cluster_endpoint.socket_address",
          "version": "2"
        },
        "csharp": {
          "source": "string writeAddress = cluster.ClusterEndpoint.SocketAddress;",
          "version": "1"
        },
        "java": {
          "source": "String writeAddress = cluster.getClusterEndpoint().getSocketAddress();",
          "version": "1"
        },
        "go": {
          "source": "writeAddress := cluster.clusterEndpoint.socketAddress",
          "version": "1"
        },
        "$": {
          "source": "const writeAddress = cluster.clusterEndpoint.socketAddress;   // \"HOSTNAME:PORT\"",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-neptune"
        },
        "field": {
          "field": "markdown",
          "line": 57
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.DatabaseCluster#clusterEndpoint",
        "@aws-cdk/aws-neptune.Endpoint#socketAddress",
        "@aws-cdk/aws-neptune.InstanceType"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    const cluster = new neptune.DatabaseCluster(this, 'Database', {\n      vpc,\n      instanceType: neptune.InstanceType.R5_LARGE,\n    });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst writeAddress = cluster.clusterEndpoint.socketAddress;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "75": 4,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "8f1ef7be8578b1768e41cd9665cdcb52ec34522a94dfa3ef03a2b9f87721f275"
    },
    "d252885d107f6c1e53cc547ef11729d3645332359a69e8f5ba82102eb8e7b598": {
      "translations": {
        "python": {
          "source": "cluster = neptune.DatabaseCluster(self, \"Cluster\",\n    vpc=vpc,\n    instance_type=neptune.InstanceType.R5_LARGE,\n    iam_authentication=True\n)\nrole = iam.Role(self, \"DBRole\", assumed_by=iam.AccountPrincipal(self.account))\ncluster.grant_connect(role)",
          "version": "2"
        },
        "csharp": {
          "source": "DatabaseCluster cluster = new DatabaseCluster(this, \"Cluster\", new DatabaseClusterProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.R5_LARGE,\n    IamAuthentication = true\n});\nRole role = new Role(this, \"DBRole\", new RoleProps { AssumedBy = new AccountPrincipal(Account) });\ncluster.GrantConnect(role);",
          "version": "1"
        },
        "java": {
          "source": "DatabaseCluster cluster = DatabaseCluster.Builder.create(this, \"Cluster\")\n        .vpc(vpc)\n        .instanceType(InstanceType.R5_LARGE)\n        .iamAuthentication(true)\n        .build();\nRole role = Role.Builder.create(this, \"DBRole\").assumedBy(new AccountPrincipal(this.account)).build();\ncluster.grantConnect(role);",
          "version": "1"
        },
        "go": {
          "source": "cluster := neptune.NewDatabaseCluster(this, jsii.String(\"Cluster\"), &databaseClusterProps{\n\tvpc: vpc,\n\tinstanceType: neptune.instanceType_R5_LARGE(),\n\tiamAuthentication: jsii.Boolean(true),\n})\nrole := iam.NewRole(this, jsii.String(\"DBRole\"), &roleProps{\n\tassumedBy: iam.NewAccountPrincipal(this.account),\n})\ncluster.grantConnect(role)",
          "version": "1"
        },
        "$": {
          "source": "const cluster = new neptune.DatabaseCluster(this, 'Cluster', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  iamAuthentication: true, // Optional - will be automatically set if you call grantConnect().\n});\nconst role = new iam.Role(this, 'DBRole', { assumedBy: new iam.AccountPrincipal(this.account) });\ncluster.grantConnect(role); // Grant the role connection access to the DB.",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-neptune"
        },
        "field": {
          "field": "markdown",
          "line": 69
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-iam.AccountPrincipal",
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-iam.IPrincipal",
        "@aws-cdk/aws-iam.Role",
        "@aws-cdk/aws-iam.RoleProps",
        "@aws-cdk/aws-neptune.DatabaseCluster",
        "@aws-cdk/aws-neptune.DatabaseClusterBase#grantConnect",
        "@aws-cdk/aws-neptune.DatabaseClusterProps",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "@aws-cdk/core.Stack#account",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst cluster = new neptune.DatabaseCluster(this, 'Cluster', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  iamAuthentication: true, // Optional - will be automatically set if you call grantConnect().\n});\nconst role = new iam.Role(this, 'DBRole', { assumedBy: new iam.AccountPrincipal(this.account) });\ncluster.grantConnect(role);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 19,
        "104": 3,
        "106": 1,
        "193": 2,
        "194": 7,
        "196": 1,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 3,
        "282": 1
      },
      "fqnsFingerprint": "6518c89b757952ef3f5226025e6c615a84fb0b2d51e9f67cabf849c490a8f4d7"
    },
    "76d0a407fad1c37b89cd91e3f055fa071745fe92774e43833d5a934db58775de": {
      "translations": {
        "python": {
          "source": "cluster_params = neptune.ClusterParameterGroup(self, \"ClusterParams\",\n    description=\"Cluster parameter group\",\n    parameters={\n        \"neptune_enable_audit_log\": \"1\"\n    }\n)\n\ndb_params = neptune.ParameterGroup(self, \"DbParams\",\n    description=\"Db parameter group\",\n    parameters={\n        \"neptune_query_timeout\": \"120000\"\n    }\n)\n\ncluster = neptune.DatabaseCluster(self, \"Database\",\n    vpc=vpc,\n    instance_type=neptune.InstanceType.R5_LARGE,\n    cluster_parameter_group=cluster_params,\n    parameter_group=db_params\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ClusterParameterGroup clusterParams = new ClusterParameterGroup(this, \"ClusterParams\", new ClusterParameterGroupProps {\n    Description = \"Cluster parameter group\",\n    Parameters = new Dictionary<string, string> {\n        { \"neptune_enable_audit_log\", \"1\" }\n    }\n});\n\nParameterGroup dbParams = new ParameterGroup(this, \"DbParams\", new ParameterGroupProps {\n    Description = \"Db parameter group\",\n    Parameters = new Dictionary<string, string> {\n        { \"neptune_query_timeout\", \"120000\" }\n    }\n});\n\nDatabaseCluster cluster = new DatabaseCluster(this, \"Database\", new DatabaseClusterProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.R5_LARGE,\n    ClusterParameterGroup = clusterParams,\n    ParameterGroup = dbParams\n});",
          "version": "1"
        },
        "java": {
          "source": "ClusterParameterGroup clusterParams = ClusterParameterGroup.Builder.create(this, \"ClusterParams\")\n        .description(\"Cluster parameter group\")\n        .parameters(Map.of(\n                \"neptune_enable_audit_log\", \"1\"))\n        .build();\n\nParameterGroup dbParams = ParameterGroup.Builder.create(this, \"DbParams\")\n        .description(\"Db parameter group\")\n        .parameters(Map.of(\n                \"neptune_query_timeout\", \"120000\"))\n        .build();\n\nDatabaseCluster cluster = DatabaseCluster.Builder.create(this, \"Database\")\n        .vpc(vpc)\n        .instanceType(InstanceType.R5_LARGE)\n        .clusterParameterGroup(clusterParams)\n        .parameterGroup(dbParams)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "clusterParams := neptune.NewClusterParameterGroup(this, jsii.String(\"ClusterParams\"), &clusterParameterGroupProps{\n\tdescription: jsii.String(\"Cluster parameter group\"),\n\tparameters: map[string]*string{\n\t\t\"neptune_enable_audit_log\": jsii.String(\"1\"),\n\t},\n})\n\ndbParams := neptune.NewParameterGroup(this, jsii.String(\"DbParams\"), &parameterGroupProps{\n\tdescription: jsii.String(\"Db parameter group\"),\n\tparameters: map[string]*string{\n\t\t\"neptune_query_timeout\": jsii.String(\"120000\"),\n\t},\n})\n\ncluster := neptune.NewDatabaseCluster(this, jsii.String(\"Database\"), &databaseClusterProps{\n\tvpc: vpc,\n\tinstanceType: neptune.instanceType_R5_LARGE(),\n\tclusterParameterGroup: clusterParams,\n\tparameterGroup: dbParams,\n})",
          "version": "1"
        },
        "$": {
          "source": "const clusterParams = new neptune.ClusterParameterGroup(this, 'ClusterParams', {\n  description: 'Cluster parameter group',\n  parameters: {\n    neptune_enable_audit_log: '1'\n  },\n});\n\nconst dbParams = new neptune.ParameterGroup(this, 'DbParams', {\n  description: 'Db parameter group',\n  parameters: {\n    neptune_query_timeout: '120000',\n  },\n});\n\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  clusterParameterGroup: clusterParams,\n  parameterGroup: dbParams,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-neptune"
        },
        "field": {
          "field": "markdown",
          "line": 84
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.ClusterParameterGroup",
        "@aws-cdk/aws-neptune.ClusterParameterGroupProps",
        "@aws-cdk/aws-neptune.DatabaseCluster",
        "@aws-cdk/aws-neptune.DatabaseClusterProps",
        "@aws-cdk/aws-neptune.IClusterParameterGroup",
        "@aws-cdk/aws-neptune.IParameterGroup",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "@aws-cdk/aws-neptune.ParameterGroup",
        "@aws-cdk/aws-neptune.ParameterGroupProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst clusterParams = new neptune.ClusterParameterGroup(this, 'ClusterParams', {\n  description: 'Cluster parameter group',\n  parameters: {\n    neptune_enable_audit_log: '1'\n  },\n});\n\nconst dbParams = new neptune.ParameterGroup(this, 'DbParams', {\n  description: 'Db parameter group',\n  parameters: {\n    neptune_query_timeout: '120000',\n  },\n});\n\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  clusterParameterGroup: clusterParams,\n  parameterGroup: dbParams,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 7,
        "75": 24,
        "104": 3,
        "193": 5,
        "194": 5,
        "197": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "281": 9,
        "282": 1
      },
      "fqnsFingerprint": "1dc48378f252efa8c5aaf4a8addabedcfcfddfff43fcb1629bc893136c2666b0"
    },
    "c790c0948fbf44dede16aa9ffc028a5a60de94fc008145b8edb89dc3fb912ede": {
      "translations": {
        "python": {
          "source": "cluster = neptune.DatabaseCluster(self, \"Database\",\n    vpc=vpc,\n    instance_type=neptune.InstanceType.R5_LARGE,\n    instances=2\n)",
          "version": "2"
        },
        "csharp": {
          "source": "DatabaseCluster cluster = new DatabaseCluster(this, \"Database\", new DatabaseClusterProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.R5_LARGE,\n    Instances = 2\n});",
          "version": "1"
        },
        "java": {
          "source": "DatabaseCluster cluster = DatabaseCluster.Builder.create(this, \"Database\")\n        .vpc(vpc)\n        .instanceType(InstanceType.R5_LARGE)\n        .instances(2)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "cluster := neptune.NewDatabaseCluster(this, jsii.String(\"Database\"), &databaseClusterProps{\n\tvpc: vpc,\n\tinstanceType: neptune.instanceType_R5_LARGE(),\n\tinstances: jsii.Number(2),\n})",
          "version": "1"
        },
        "$": {
          "source": "const cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  instances: 2,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-neptune"
        },
        "field": {
          "field": "markdown",
          "line": 112
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.DatabaseCluster",
        "@aws-cdk/aws-neptune.DatabaseClusterProps",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  instances: 2,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 9,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2,
        "282": 1
      },
      "fqnsFingerprint": "0882043f67bd93781f25049e772f9648e896c74d7474250802c83f3c59f8ccef"
    },
    "dccb4164da65e81075a7e64ba55a7c9782ffc74c9770c241bd7c336e955d1d0e": {
      "translations": {
        "python": {
          "source": "replica1 = neptune.DatabaseInstance(self, \"Instance\",\n    cluster=cluster,\n    instance_type=neptune.InstanceType.R5_LARGE\n)",
          "version": "2"
        },
        "csharp": {
          "source": "DatabaseInstance replica1 = new DatabaseInstance(this, \"Instance\", new DatabaseInstanceProps {\n    Cluster = cluster,\n    InstanceType = InstanceType.R5_LARGE\n});",
          "version": "1"
        },
        "java": {
          "source": "DatabaseInstance replica1 = DatabaseInstance.Builder.create(this, \"Instance\")\n        .cluster(cluster)\n        .instanceType(InstanceType.R5_LARGE)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "replica1 := neptune.NewDatabaseInstance(this, jsii.String(\"Instance\"), &databaseInstanceProps{\n\tcluster: cluster,\n\tinstanceType: neptune.*instanceType_R5_LARGE(),\n})",
          "version": "1"
        },
        "$": {
          "source": "const replica1 = new neptune.DatabaseInstance(this, 'Instance', {\n  cluster,\n  instanceType: neptune.InstanceType.R5_LARGE,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-neptune"
        },
        "field": {
          "field": "markdown",
          "line": 122
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.DatabaseInstance",
        "@aws-cdk/aws-neptune.DatabaseInstanceProps",
        "@aws-cdk/aws-neptune.IDatabaseCluster",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    const cluster = new neptune.DatabaseCluster(this, 'Database', {\n      vpc,\n      instanceType: neptune.InstanceType.R5_LARGE,\n    });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst replica1 = new neptune.DatabaseInstance(this, 'Instance', {\n  cluster,\n  instanceType: neptune.InstanceType.R5_LARGE,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1,
        "282": 1
      },
      "fqnsFingerprint": "f288c5c1de6e02a5e2ad0b413c3fe3b1c88b83ff22705c03fa14088a47b9a58a"
    },
    "cdd3394a667811cb88f7bd963d2393046355844e2f88477ee14bf73599e5e817": {
      "translations": {
        "python": {
          "source": "neptune.DatabaseCluster(self, \"Cluster\",\n    vpc=vpc,\n    instance_type=neptune.InstanceType.R5_LARGE,\n    auto_minor_version_upgrade=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new DatabaseCluster(this, \"Cluster\", new DatabaseClusterProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.R5_LARGE,\n    AutoMinorVersionUpgrade = true\n});",
          "version": "1"
        },
        "java": {
          "source": "DatabaseCluster.Builder.create(this, \"Cluster\")\n        .vpc(vpc)\n        .instanceType(InstanceType.R5_LARGE)\n        .autoMinorVersionUpgrade(true)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "neptune.NewDatabaseCluster(this, jsii.String(\"Cluster\"), &databaseClusterProps{\n\tvpc: vpc,\n\tinstanceType: neptune.instanceType_R5_LARGE(),\n\tautoMinorVersionUpgrade: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "new neptune.DatabaseCluster(this, 'Cluster', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  autoMinorVersionUpgrade: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-neptune"
        },
        "field": {
          "field": "markdown",
          "line": 135
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.DatabaseCluster",
        "@aws-cdk/aws-neptune.DatabaseClusterProps",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    // Code snippet begins after !show marker below\n/// !show\nnew neptune.DatabaseCluster(this, 'Cluster', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  autoMinorVersionUpgrade: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 2,
        "282": 1
      },
      "fqnsFingerprint": "0882043f67bd93781f25049e772f9648e896c74d7474250802c83f3c59f8ccef"
    },
    "8c76ed6384c1a2f4318097c1273a08c1c949808c7da78d7fa73312a9f74347cd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\ncfn_dBCluster = neptune.CfnDBCluster(self, \"MyCfnDBCluster\",\n    associated_roles=[neptune.CfnDBCluster.DBClusterRoleProperty(\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        feature_name=\"featureName\"\n    )],\n    availability_zones=[\"availabilityZones\"],\n    backup_retention_period=123,\n    db_cluster_identifier=\"dbClusterIdentifier\",\n    db_cluster_parameter_group_name=\"dbClusterParameterGroupName\",\n    db_subnet_group_name=\"dbSubnetGroupName\",\n    deletion_protection=False,\n    enable_cloudwatch_logs_exports=[\"enableCloudwatchLogsExports\"],\n    engine_version=\"engineVersion\",\n    iam_auth_enabled=False,\n    kms_key_id=\"kmsKeyId\",\n    port=123,\n    preferred_backup_window=\"preferredBackupWindow\",\n    preferred_maintenance_window=\"preferredMaintenanceWindow\",\n    restore_to_time=\"restoreToTime\",\n    restore_type=\"restoreType\",\n    snapshot_identifier=\"snapshotIdentifier\",\n    source_db_cluster_identifier=\"sourceDbClusterIdentifier\",\n    storage_encrypted=False,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    use_latest_restorable_time=False,\n    vpc_security_group_ids=[\"vpcSecurityGroupIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nCfnDBCluster cfnDBCluster = new CfnDBCluster(this, \"MyCfnDBCluster\", new CfnDBClusterProps {\n    AssociatedRoles = new [] { new DBClusterRoleProperty {\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        FeatureName = \"featureName\"\n    } },\n    AvailabilityZones = new [] { \"availabilityZones\" },\n    BackupRetentionPeriod = 123,\n    DbClusterIdentifier = \"dbClusterIdentifier\",\n    DbClusterParameterGroupName = \"dbClusterParameterGroupName\",\n    DbSubnetGroupName = \"dbSubnetGroupName\",\n    DeletionProtection = false,\n    EnableCloudwatchLogsExports = new [] { \"enableCloudwatchLogsExports\" },\n    EngineVersion = \"engineVersion\",\n    IamAuthEnabled = false,\n    KmsKeyId = \"kmsKeyId\",\n    Port = 123,\n    PreferredBackupWindow = \"preferredBackupWindow\",\n    PreferredMaintenanceWindow = \"preferredMaintenanceWindow\",\n    RestoreToTime = \"restoreToTime\",\n    RestoreType = \"restoreType\",\n    SnapshotIdentifier = \"snapshotIdentifier\",\n    SourceDbClusterIdentifier = \"sourceDbClusterIdentifier\",\n    StorageEncrypted = false,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    UseLatestRestorableTime = false,\n    VpcSecurityGroupIds = new [] { \"vpcSecurityGroupIds\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nCfnDBCluster cfnDBCluster = CfnDBCluster.Builder.create(this, \"MyCfnDBCluster\")\n        .associatedRoles(List.of(DBClusterRoleProperty.builder()\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .featureName(\"featureName\")\n                .build()))\n        .availabilityZones(List.of(\"availabilityZones\"))\n        .backupRetentionPeriod(123)\n        .dbClusterIdentifier(\"dbClusterIdentifier\")\n        .dbClusterParameterGroupName(\"dbClusterParameterGroupName\")\n        .dbSubnetGroupName(\"dbSubnetGroupName\")\n        .deletionProtection(false)\n        .enableCloudwatchLogsExports(List.of(\"enableCloudwatchLogsExports\"))\n        .engineVersion(\"engineVersion\")\n        .iamAuthEnabled(false)\n        .kmsKeyId(\"kmsKeyId\")\n        .port(123)\n        .preferredBackupWindow(\"preferredBackupWindow\")\n        .preferredMaintenanceWindow(\"preferredMaintenanceWindow\")\n        .restoreToTime(\"restoreToTime\")\n        .restoreType(\"restoreType\")\n        .snapshotIdentifier(\"snapshotIdentifier\")\n        .sourceDbClusterIdentifier(\"sourceDbClusterIdentifier\")\n        .storageEncrypted(false)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .useLatestRestorableTime(false)\n        .vpcSecurityGroupIds(List.of(\"vpcSecurityGroupIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\ncfnDBCluster := neptune.NewCfnDBCluster(this, jsii.String(\"MyCfnDBCluster\"), &cfnDBClusterProps{\n\tassociatedRoles: []interface{}{\n\t\t&dBClusterRoleProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tfeatureName: jsii.String(\"featureName\"),\n\t\t},\n\t},\n\tavailabilityZones: []*string{\n\t\tjsii.String(\"availabilityZones\"),\n\t},\n\tbackupRetentionPeriod: jsii.Number(123),\n\tdbClusterIdentifier: jsii.String(\"dbClusterIdentifier\"),\n\tdbClusterParameterGroupName: jsii.String(\"dbClusterParameterGroupName\"),\n\tdbSubnetGroupName: jsii.String(\"dbSubnetGroupName\"),\n\tdeletionProtection: jsii.Boolean(false),\n\tenableCloudwatchLogsExports: []*string{\n\t\tjsii.String(\"enableCloudwatchLogsExports\"),\n\t},\n\tengineVersion: jsii.String(\"engineVersion\"),\n\tiamAuthEnabled: jsii.Boolean(false),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\tport: jsii.Number(123),\n\tpreferredBackupWindow: jsii.String(\"preferredBackupWindow\"),\n\tpreferredMaintenanceWindow: jsii.String(\"preferredMaintenanceWindow\"),\n\trestoreToTime: jsii.String(\"restoreToTime\"),\n\trestoreType: jsii.String(\"restoreType\"),\n\tsnapshotIdentifier: jsii.String(\"snapshotIdentifier\"),\n\tsourceDbClusterIdentifier: jsii.String(\"sourceDbClusterIdentifier\"),\n\tstorageEncrypted: jsii.Boolean(false),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tuseLatestRestorableTime: jsii.Boolean(false),\n\tvpcSecurityGroupIds: []*string{\n\t\tjsii.String(\"vpcSecurityGroupIds\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\nconst cfnDBCluster = new neptune.CfnDBCluster(this, 'MyCfnDBCluster', /* all optional props */ {\n  associatedRoles: [{\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    featureName: 'featureName',\n  }],\n  availabilityZones: ['availabilityZones'],\n  backupRetentionPeriod: 123,\n  dbClusterIdentifier: 'dbClusterIdentifier',\n  dbClusterParameterGroupName: 'dbClusterParameterGroupName',\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  deletionProtection: false,\n  enableCloudwatchLogsExports: ['enableCloudwatchLogsExports'],\n  engineVersion: 'engineVersion',\n  iamAuthEnabled: false,\n  kmsKeyId: 'kmsKeyId',\n  port: 123,\n  preferredBackupWindow: 'preferredBackupWindow',\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  restoreToTime: 'restoreToTime',\n  restoreType: 'restoreType',\n  snapshotIdentifier: 'snapshotIdentifier',\n  sourceDbClusterIdentifier: 'sourceDbClusterIdentifier',\n  storageEncrypted: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  useLatestRestorableTime: false,\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.CfnDBCluster"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.CfnDBCluster",
        "@aws-cdk/aws-neptune.CfnDBClusterProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDBCluster = new neptune.CfnDBCluster(this, 'MyCfnDBCluster', /* all optional props */ {\n  associatedRoles: [{\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    featureName: 'featureName',\n  }],\n  availabilityZones: ['availabilityZones'],\n  backupRetentionPeriod: 123,\n  dbClusterIdentifier: 'dbClusterIdentifier',\n  dbClusterParameterGroupName: 'dbClusterParameterGroupName',\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  deletionProtection: false,\n  enableCloudwatchLogsExports: ['enableCloudwatchLogsExports'],\n  engineVersion: 'engineVersion',\n  iamAuthEnabled: false,\n  kmsKeyId: 'kmsKeyId',\n  port: 123,\n  preferredBackupWindow: 'preferredBackupWindow',\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  restoreToTime: 'restoreToTime',\n  restoreType: 'restoreType',\n  snapshotIdentifier: 'snapshotIdentifier',\n  sourceDbClusterIdentifier: 'sourceDbClusterIdentifier',\n  storageEncrypted: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  useLatestRestorableTime: false,\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 20,
        "75": 30,
        "91": 4,
        "104": 1,
        "192": 5,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 26,
        "290": 1
      },
      "fqnsFingerprint": "f912055e7635a054dca3a140857a6982a6387a2db3097ad5b1e54bc0752a83be"
    },
    "9b45e9ed84a8d3c7603102b0ac12eac7e7936ac58b96f31db0016a7cb6c9fec7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\nd_bCluster_role_property = neptune.CfnDBCluster.DBClusterRoleProperty(\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    feature_name=\"featureName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nDBClusterRoleProperty dBClusterRoleProperty = new DBClusterRoleProperty {\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    FeatureName = \"featureName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nDBClusterRoleProperty dBClusterRoleProperty = DBClusterRoleProperty.builder()\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .featureName(\"featureName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\ndBClusterRoleProperty := &dBClusterRoleProperty{\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tfeatureName: jsii.String(\"featureName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\nconst dBClusterRoleProperty: neptune.CfnDBCluster.DBClusterRoleProperty = {\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  featureName: 'featureName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.CfnDBCluster.DBClusterRoleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.CfnDBCluster.DBClusterRoleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dBClusterRoleProperty: neptune.CfnDBCluster.DBClusterRoleProperty = {\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  featureName: 'featureName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "b7edf6c224831a2c450376096424d05032a2cca22565ce1c0ee629c286050d3f"
    },
    "f8a843cc9c70c3592aeeae56e058ba285cf7f3b7bad0838f05346e180c0a26a6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\n# parameters: Any\n\ncfn_dBCluster_parameter_group = neptune.CfnDBClusterParameterGroup(self, \"MyCfnDBClusterParameterGroup\",\n    description=\"description\",\n    family=\"family\",\n    parameters=parameters,\n\n    # the properties below are optional\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nvar parameters;\n\nCfnDBClusterParameterGroup cfnDBClusterParameterGroup = new CfnDBClusterParameterGroup(this, \"MyCfnDBClusterParameterGroup\", new CfnDBClusterParameterGroupProps {\n    Description = \"description\",\n    Family = \"family\",\n    Parameters = parameters,\n\n    // the properties below are optional\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nObject parameters;\n\nCfnDBClusterParameterGroup cfnDBClusterParameterGroup = CfnDBClusterParameterGroup.Builder.create(this, \"MyCfnDBClusterParameterGroup\")\n        .description(\"description\")\n        .family(\"family\")\n        .parameters(parameters)\n\n        // the properties below are optional\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\nvar parameters interface{}\n\ncfnDBClusterParameterGroup := neptune.NewCfnDBClusterParameterGroup(this, jsii.String(\"MyCfnDBClusterParameterGroup\"), &cfnDBClusterParameterGroupProps{\n\tdescription: jsii.String(\"description\"),\n\tfamily: jsii.String(\"family\"),\n\tparameters: parameters,\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n\ndeclare const parameters: any;\nconst cfnDBClusterParameterGroup = new neptune.CfnDBClusterParameterGroup(this, 'MyCfnDBClusterParameterGroup', {\n  description: 'description',\n  family: 'family',\n  parameters: parameters,\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.CfnDBClusterParameterGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.CfnDBClusterParameterGroup",
        "@aws-cdk/aws-neptune.CfnDBClusterParameterGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDBClusterParameterGroup = new neptune.CfnDBClusterParameterGroup(this, 'MyCfnDBClusterParameterGroup', {\n  description: 'description',\n  family: 'family',\n  parameters: parameters,\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 13,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "9b4cc068adecfea74290fbe37441facdf5c3c000b49b2c61c13fa580e389574a"
    },
    "0c3315472bf9f0d93559db08706e058a92cf53f4cb7c4097675f1351d866e61d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\n# parameters: Any\n\ncfn_dBCluster_parameter_group_props = neptune.CfnDBClusterParameterGroupProps(\n    description=\"description\",\n    family=\"family\",\n    parameters=parameters,\n\n    # the properties below are optional\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nvar parameters;\n\nCfnDBClusterParameterGroupProps cfnDBClusterParameterGroupProps = new CfnDBClusterParameterGroupProps {\n    Description = \"description\",\n    Family = \"family\",\n    Parameters = parameters,\n\n    // the properties below are optional\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nObject parameters;\n\nCfnDBClusterParameterGroupProps cfnDBClusterParameterGroupProps = CfnDBClusterParameterGroupProps.builder()\n        .description(\"description\")\n        .family(\"family\")\n        .parameters(parameters)\n\n        // the properties below are optional\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\nvar parameters interface{}\n\ncfnDBClusterParameterGroupProps := &cfnDBClusterParameterGroupProps{\n\tdescription: jsii.String(\"description\"),\n\tfamily: jsii.String(\"family\"),\n\tparameters: parameters,\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n\ndeclare const parameters: any;\nconst cfnDBClusterParameterGroupProps: neptune.CfnDBClusterParameterGroupProps = {\n  description: 'description',\n  family: 'family',\n  parameters: parameters,\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.CfnDBClusterParameterGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.CfnDBClusterParameterGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDBClusterParameterGroupProps: neptune.CfnDBClusterParameterGroupProps = {\n  description: 'description',\n  family: 'family',\n  parameters: parameters,\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 13,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "ded9cb1685605e68dcd6e5dc69b99dc0039ffdd12d3145976839831a25bf9dc4"
    },
    "5a4a8065e6eeb1d448765e6b4399fd70d0736e788a13332aaa05ab3767a0d49e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\ncfn_dBCluster_props = neptune.CfnDBClusterProps(\n    associated_roles=[neptune.CfnDBCluster.DBClusterRoleProperty(\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        feature_name=\"featureName\"\n    )],\n    availability_zones=[\"availabilityZones\"],\n    backup_retention_period=123,\n    db_cluster_identifier=\"dbClusterIdentifier\",\n    db_cluster_parameter_group_name=\"dbClusterParameterGroupName\",\n    db_subnet_group_name=\"dbSubnetGroupName\",\n    deletion_protection=False,\n    enable_cloudwatch_logs_exports=[\"enableCloudwatchLogsExports\"],\n    engine_version=\"engineVersion\",\n    iam_auth_enabled=False,\n    kms_key_id=\"kmsKeyId\",\n    port=123,\n    preferred_backup_window=\"preferredBackupWindow\",\n    preferred_maintenance_window=\"preferredMaintenanceWindow\",\n    restore_to_time=\"restoreToTime\",\n    restore_type=\"restoreType\",\n    snapshot_identifier=\"snapshotIdentifier\",\n    source_db_cluster_identifier=\"sourceDbClusterIdentifier\",\n    storage_encrypted=False,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    use_latest_restorable_time=False,\n    vpc_security_group_ids=[\"vpcSecurityGroupIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nCfnDBClusterProps cfnDBClusterProps = new CfnDBClusterProps {\n    AssociatedRoles = new [] { new DBClusterRoleProperty {\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        FeatureName = \"featureName\"\n    } },\n    AvailabilityZones = new [] { \"availabilityZones\" },\n    BackupRetentionPeriod = 123,\n    DbClusterIdentifier = \"dbClusterIdentifier\",\n    DbClusterParameterGroupName = \"dbClusterParameterGroupName\",\n    DbSubnetGroupName = \"dbSubnetGroupName\",\n    DeletionProtection = false,\n    EnableCloudwatchLogsExports = new [] { \"enableCloudwatchLogsExports\" },\n    EngineVersion = \"engineVersion\",\n    IamAuthEnabled = false,\n    KmsKeyId = \"kmsKeyId\",\n    Port = 123,\n    PreferredBackupWindow = \"preferredBackupWindow\",\n    PreferredMaintenanceWindow = \"preferredMaintenanceWindow\",\n    RestoreToTime = \"restoreToTime\",\n    RestoreType = \"restoreType\",\n    SnapshotIdentifier = \"snapshotIdentifier\",\n    SourceDbClusterIdentifier = \"sourceDbClusterIdentifier\",\n    StorageEncrypted = false,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    UseLatestRestorableTime = false,\n    VpcSecurityGroupIds = new [] { \"vpcSecurityGroupIds\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nCfnDBClusterProps cfnDBClusterProps = CfnDBClusterProps.builder()\n        .associatedRoles(List.of(DBClusterRoleProperty.builder()\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .featureName(\"featureName\")\n                .build()))\n        .availabilityZones(List.of(\"availabilityZones\"))\n        .backupRetentionPeriod(123)\n        .dbClusterIdentifier(\"dbClusterIdentifier\")\n        .dbClusterParameterGroupName(\"dbClusterParameterGroupName\")\n        .dbSubnetGroupName(\"dbSubnetGroupName\")\n        .deletionProtection(false)\n        .enableCloudwatchLogsExports(List.of(\"enableCloudwatchLogsExports\"))\n        .engineVersion(\"engineVersion\")\n        .iamAuthEnabled(false)\n        .kmsKeyId(\"kmsKeyId\")\n        .port(123)\n        .preferredBackupWindow(\"preferredBackupWindow\")\n        .preferredMaintenanceWindow(\"preferredMaintenanceWindow\")\n        .restoreToTime(\"restoreToTime\")\n        .restoreType(\"restoreType\")\n        .snapshotIdentifier(\"snapshotIdentifier\")\n        .sourceDbClusterIdentifier(\"sourceDbClusterIdentifier\")\n        .storageEncrypted(false)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .useLatestRestorableTime(false)\n        .vpcSecurityGroupIds(List.of(\"vpcSecurityGroupIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\ncfnDBClusterProps := &cfnDBClusterProps{\n\tassociatedRoles: []interface{}{\n\t\t&dBClusterRoleProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tfeatureName: jsii.String(\"featureName\"),\n\t\t},\n\t},\n\tavailabilityZones: []*string{\n\t\tjsii.String(\"availabilityZones\"),\n\t},\n\tbackupRetentionPeriod: jsii.Number(123),\n\tdbClusterIdentifier: jsii.String(\"dbClusterIdentifier\"),\n\tdbClusterParameterGroupName: jsii.String(\"dbClusterParameterGroupName\"),\n\tdbSubnetGroupName: jsii.String(\"dbSubnetGroupName\"),\n\tdeletionProtection: jsii.Boolean(false),\n\tenableCloudwatchLogsExports: []*string{\n\t\tjsii.String(\"enableCloudwatchLogsExports\"),\n\t},\n\tengineVersion: jsii.String(\"engineVersion\"),\n\tiamAuthEnabled: jsii.Boolean(false),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\tport: jsii.Number(123),\n\tpreferredBackupWindow: jsii.String(\"preferredBackupWindow\"),\n\tpreferredMaintenanceWindow: jsii.String(\"preferredMaintenanceWindow\"),\n\trestoreToTime: jsii.String(\"restoreToTime\"),\n\trestoreType: jsii.String(\"restoreType\"),\n\tsnapshotIdentifier: jsii.String(\"snapshotIdentifier\"),\n\tsourceDbClusterIdentifier: jsii.String(\"sourceDbClusterIdentifier\"),\n\tstorageEncrypted: jsii.Boolean(false),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tuseLatestRestorableTime: jsii.Boolean(false),\n\tvpcSecurityGroupIds: []*string{\n\t\tjsii.String(\"vpcSecurityGroupIds\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\nconst cfnDBClusterProps: neptune.CfnDBClusterProps = {\n  associatedRoles: [{\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    featureName: 'featureName',\n  }],\n  availabilityZones: ['availabilityZones'],\n  backupRetentionPeriod: 123,\n  dbClusterIdentifier: 'dbClusterIdentifier',\n  dbClusterParameterGroupName: 'dbClusterParameterGroupName',\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  deletionProtection: false,\n  enableCloudwatchLogsExports: ['enableCloudwatchLogsExports'],\n  engineVersion: 'engineVersion',\n  iamAuthEnabled: false,\n  kmsKeyId: 'kmsKeyId',\n  port: 123,\n  preferredBackupWindow: 'preferredBackupWindow',\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  restoreToTime: 'restoreToTime',\n  restoreType: 'restoreType',\n  snapshotIdentifier: 'snapshotIdentifier',\n  sourceDbClusterIdentifier: 'sourceDbClusterIdentifier',\n  storageEncrypted: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  useLatestRestorableTime: false,\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.CfnDBClusterProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.CfnDBClusterProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDBClusterProps: neptune.CfnDBClusterProps = {\n  associatedRoles: [{\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    featureName: 'featureName',\n  }],\n  availabilityZones: ['availabilityZones'],\n  backupRetentionPeriod: 123,\n  dbClusterIdentifier: 'dbClusterIdentifier',\n  dbClusterParameterGroupName: 'dbClusterParameterGroupName',\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  deletionProtection: false,\n  enableCloudwatchLogsExports: ['enableCloudwatchLogsExports'],\n  engineVersion: 'engineVersion',\n  iamAuthEnabled: false,\n  kmsKeyId: 'kmsKeyId',\n  port: 123,\n  preferredBackupWindow: 'preferredBackupWindow',\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  restoreToTime: 'restoreToTime',\n  restoreType: 'restoreType',\n  snapshotIdentifier: 'snapshotIdentifier',\n  sourceDbClusterIdentifier: 'sourceDbClusterIdentifier',\n  storageEncrypted: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  useLatestRestorableTime: false,\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 19,
        "75": 30,
        "91": 4,
        "153": 1,
        "169": 1,
        "192": 5,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 26,
        "290": 1
      },
      "fqnsFingerprint": "a77941fb8358e94f0c1af31adc583fa85d9df4201575244599e6ad964fd213b6"
    },
    "3de1ffd47a41ecf878d73e3a39057d363e64e201487b9978a0898f7909b12c85": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\ncfn_dBInstance = neptune.CfnDBInstance(self, \"MyCfnDBInstance\",\n    db_instance_class=\"dbInstanceClass\",\n\n    # the properties below are optional\n    allow_major_version_upgrade=False,\n    auto_minor_version_upgrade=False,\n    availability_zone=\"availabilityZone\",\n    db_cluster_identifier=\"dbClusterIdentifier\",\n    db_instance_identifier=\"dbInstanceIdentifier\",\n    db_parameter_group_name=\"dbParameterGroupName\",\n    db_snapshot_identifier=\"dbSnapshotIdentifier\",\n    db_subnet_group_name=\"dbSubnetGroupName\",\n    preferred_maintenance_window=\"preferredMaintenanceWindow\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nCfnDBInstance cfnDBInstance = new CfnDBInstance(this, \"MyCfnDBInstance\", new CfnDBInstanceProps {\n    DbInstanceClass = \"dbInstanceClass\",\n\n    // the properties below are optional\n    AllowMajorVersionUpgrade = false,\n    AutoMinorVersionUpgrade = false,\n    AvailabilityZone = \"availabilityZone\",\n    DbClusterIdentifier = \"dbClusterIdentifier\",\n    DbInstanceIdentifier = \"dbInstanceIdentifier\",\n    DbParameterGroupName = \"dbParameterGroupName\",\n    DbSnapshotIdentifier = \"dbSnapshotIdentifier\",\n    DbSubnetGroupName = \"dbSubnetGroupName\",\n    PreferredMaintenanceWindow = \"preferredMaintenanceWindow\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nCfnDBInstance cfnDBInstance = CfnDBInstance.Builder.create(this, \"MyCfnDBInstance\")\n        .dbInstanceClass(\"dbInstanceClass\")\n\n        // the properties below are optional\n        .allowMajorVersionUpgrade(false)\n        .autoMinorVersionUpgrade(false)\n        .availabilityZone(\"availabilityZone\")\n        .dbClusterIdentifier(\"dbClusterIdentifier\")\n        .dbInstanceIdentifier(\"dbInstanceIdentifier\")\n        .dbParameterGroupName(\"dbParameterGroupName\")\n        .dbSnapshotIdentifier(\"dbSnapshotIdentifier\")\n        .dbSubnetGroupName(\"dbSubnetGroupName\")\n        .preferredMaintenanceWindow(\"preferredMaintenanceWindow\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\ncfnDBInstance := neptune.NewCfnDBInstance(this, jsii.String(\"MyCfnDBInstance\"), &cfnDBInstanceProps{\n\tdbInstanceClass: jsii.String(\"dbInstanceClass\"),\n\n\t// the properties below are optional\n\tallowMajorVersionUpgrade: jsii.Boolean(false),\n\tautoMinorVersionUpgrade: jsii.Boolean(false),\n\tavailabilityZone: jsii.String(\"availabilityZone\"),\n\tdbClusterIdentifier: jsii.String(\"dbClusterIdentifier\"),\n\tdbInstanceIdentifier: jsii.String(\"dbInstanceIdentifier\"),\n\tdbParameterGroupName: jsii.String(\"dbParameterGroupName\"),\n\tdbSnapshotIdentifier: jsii.String(\"dbSnapshotIdentifier\"),\n\tdbSubnetGroupName: jsii.String(\"dbSubnetGroupName\"),\n\tpreferredMaintenanceWindow: jsii.String(\"preferredMaintenanceWindow\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\nconst cfnDBInstance = new neptune.CfnDBInstance(this, 'MyCfnDBInstance', {\n  dbInstanceClass: 'dbInstanceClass',\n\n  // the properties below are optional\n  allowMajorVersionUpgrade: false,\n  autoMinorVersionUpgrade: false,\n  availabilityZone: 'availabilityZone',\n  dbClusterIdentifier: 'dbClusterIdentifier',\n  dbInstanceIdentifier: 'dbInstanceIdentifier',\n  dbParameterGroupName: 'dbParameterGroupName',\n  dbSnapshotIdentifier: 'dbSnapshotIdentifier',\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.CfnDBInstance"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.CfnDBInstance",
        "@aws-cdk/aws-neptune.CfnDBInstanceProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDBInstance = new neptune.CfnDBInstance(this, 'MyCfnDBInstance', {\n  dbInstanceClass: 'dbInstanceClass',\n\n  // the properties below are optional\n  allowMajorVersionUpgrade: false,\n  autoMinorVersionUpgrade: false,\n  availabilityZone: 'availabilityZone',\n  dbClusterIdentifier: 'dbClusterIdentifier',\n  dbInstanceIdentifier: 'dbInstanceIdentifier',\n  dbParameterGroupName: 'dbParameterGroupName',\n  dbSnapshotIdentifier: 'dbSnapshotIdentifier',\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 12,
        "75": 17,
        "91": 2,
        "104": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "1ce9893d012f3c03560d13fad33b1646aec5d59e1306ea30218827a2b712dc58"
    },
    "77334feb5bad5916e94394bc6121a8ee2cfee0582a90e75f8a72c3ab54aa3885": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\ncfn_dBInstance_props = neptune.CfnDBInstanceProps(\n    db_instance_class=\"dbInstanceClass\",\n\n    # the properties below are optional\n    allow_major_version_upgrade=False,\n    auto_minor_version_upgrade=False,\n    availability_zone=\"availabilityZone\",\n    db_cluster_identifier=\"dbClusterIdentifier\",\n    db_instance_identifier=\"dbInstanceIdentifier\",\n    db_parameter_group_name=\"dbParameterGroupName\",\n    db_snapshot_identifier=\"dbSnapshotIdentifier\",\n    db_subnet_group_name=\"dbSubnetGroupName\",\n    preferred_maintenance_window=\"preferredMaintenanceWindow\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nCfnDBInstanceProps cfnDBInstanceProps = new CfnDBInstanceProps {\n    DbInstanceClass = \"dbInstanceClass\",\n\n    // the properties below are optional\n    AllowMajorVersionUpgrade = false,\n    AutoMinorVersionUpgrade = false,\n    AvailabilityZone = \"availabilityZone\",\n    DbClusterIdentifier = \"dbClusterIdentifier\",\n    DbInstanceIdentifier = \"dbInstanceIdentifier\",\n    DbParameterGroupName = \"dbParameterGroupName\",\n    DbSnapshotIdentifier = \"dbSnapshotIdentifier\",\n    DbSubnetGroupName = \"dbSubnetGroupName\",\n    PreferredMaintenanceWindow = \"preferredMaintenanceWindow\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nCfnDBInstanceProps cfnDBInstanceProps = CfnDBInstanceProps.builder()\n        .dbInstanceClass(\"dbInstanceClass\")\n\n        // the properties below are optional\n        .allowMajorVersionUpgrade(false)\n        .autoMinorVersionUpgrade(false)\n        .availabilityZone(\"availabilityZone\")\n        .dbClusterIdentifier(\"dbClusterIdentifier\")\n        .dbInstanceIdentifier(\"dbInstanceIdentifier\")\n        .dbParameterGroupName(\"dbParameterGroupName\")\n        .dbSnapshotIdentifier(\"dbSnapshotIdentifier\")\n        .dbSubnetGroupName(\"dbSubnetGroupName\")\n        .preferredMaintenanceWindow(\"preferredMaintenanceWindow\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\ncfnDBInstanceProps := &cfnDBInstanceProps{\n\tdbInstanceClass: jsii.String(\"dbInstanceClass\"),\n\n\t// the properties below are optional\n\tallowMajorVersionUpgrade: jsii.Boolean(false),\n\tautoMinorVersionUpgrade: jsii.Boolean(false),\n\tavailabilityZone: jsii.String(\"availabilityZone\"),\n\tdbClusterIdentifier: jsii.String(\"dbClusterIdentifier\"),\n\tdbInstanceIdentifier: jsii.String(\"dbInstanceIdentifier\"),\n\tdbParameterGroupName: jsii.String(\"dbParameterGroupName\"),\n\tdbSnapshotIdentifier: jsii.String(\"dbSnapshotIdentifier\"),\n\tdbSubnetGroupName: jsii.String(\"dbSubnetGroupName\"),\n\tpreferredMaintenanceWindow: jsii.String(\"preferredMaintenanceWindow\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\nconst cfnDBInstanceProps: neptune.CfnDBInstanceProps = {\n  dbInstanceClass: 'dbInstanceClass',\n\n  // the properties below are optional\n  allowMajorVersionUpgrade: false,\n  autoMinorVersionUpgrade: false,\n  availabilityZone: 'availabilityZone',\n  dbClusterIdentifier: 'dbClusterIdentifier',\n  dbInstanceIdentifier: 'dbInstanceIdentifier',\n  dbParameterGroupName: 'dbParameterGroupName',\n  dbSnapshotIdentifier: 'dbSnapshotIdentifier',\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.CfnDBInstanceProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.CfnDBInstanceProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDBInstanceProps: neptune.CfnDBInstanceProps = {\n  dbInstanceClass: 'dbInstanceClass',\n\n  // the properties below are optional\n  allowMajorVersionUpgrade: false,\n  autoMinorVersionUpgrade: false,\n  availabilityZone: 'availabilityZone',\n  dbClusterIdentifier: 'dbClusterIdentifier',\n  dbInstanceIdentifier: 'dbInstanceIdentifier',\n  dbParameterGroupName: 'dbParameterGroupName',\n  dbSnapshotIdentifier: 'dbSnapshotIdentifier',\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 11,
        "75": 17,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "50861bed2dacaaf985a3e02ae233c24aa59e9b4a796249f23baaaffcc50de746"
    },
    "e9b02e863bf6eb788811da606444af69a777a19daee9120bd8b9849e630c3def": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\n# parameters: Any\n\ncfn_dBParameter_group = neptune.CfnDBParameterGroup(self, \"MyCfnDBParameterGroup\",\n    description=\"description\",\n    family=\"family\",\n    parameters=parameters,\n\n    # the properties below are optional\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nvar parameters;\n\nCfnDBParameterGroup cfnDBParameterGroup = new CfnDBParameterGroup(this, \"MyCfnDBParameterGroup\", new CfnDBParameterGroupProps {\n    Description = \"description\",\n    Family = \"family\",\n    Parameters = parameters,\n\n    // the properties below are optional\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nObject parameters;\n\nCfnDBParameterGroup cfnDBParameterGroup = CfnDBParameterGroup.Builder.create(this, \"MyCfnDBParameterGroup\")\n        .description(\"description\")\n        .family(\"family\")\n        .parameters(parameters)\n\n        // the properties below are optional\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\nvar parameters interface{}\n\ncfnDBParameterGroup := neptune.NewCfnDBParameterGroup(this, jsii.String(\"MyCfnDBParameterGroup\"), &cfnDBParameterGroupProps{\n\tdescription: jsii.String(\"description\"),\n\tfamily: jsii.String(\"family\"),\n\tparameters: parameters,\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n\ndeclare const parameters: any;\nconst cfnDBParameterGroup = new neptune.CfnDBParameterGroup(this, 'MyCfnDBParameterGroup', {\n  description: 'description',\n  family: 'family',\n  parameters: parameters,\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.CfnDBParameterGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.CfnDBParameterGroup",
        "@aws-cdk/aws-neptune.CfnDBParameterGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDBParameterGroup = new neptune.CfnDBParameterGroup(this, 'MyCfnDBParameterGroup', {\n  description: 'description',\n  family: 'family',\n  parameters: parameters,\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 13,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "76b18ec1929d959ebb62c66591c6af9e076ac415fbb7fa97b8521071cf06dd21"
    },
    "e5bf5bb6d8724201061c45ab6eb0117f590eef4e614c1e4ed93e7d96295513c7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\n# parameters: Any\n\ncfn_dBParameter_group_props = neptune.CfnDBParameterGroupProps(\n    description=\"description\",\n    family=\"family\",\n    parameters=parameters,\n\n    # the properties below are optional\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nvar parameters;\n\nCfnDBParameterGroupProps cfnDBParameterGroupProps = new CfnDBParameterGroupProps {\n    Description = \"description\",\n    Family = \"family\",\n    Parameters = parameters,\n\n    // the properties below are optional\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nObject parameters;\n\nCfnDBParameterGroupProps cfnDBParameterGroupProps = CfnDBParameterGroupProps.builder()\n        .description(\"description\")\n        .family(\"family\")\n        .parameters(parameters)\n\n        // the properties below are optional\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\nvar parameters interface{}\n\ncfnDBParameterGroupProps := &cfnDBParameterGroupProps{\n\tdescription: jsii.String(\"description\"),\n\tfamily: jsii.String(\"family\"),\n\tparameters: parameters,\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n\ndeclare const parameters: any;\nconst cfnDBParameterGroupProps: neptune.CfnDBParameterGroupProps = {\n  description: 'description',\n  family: 'family',\n  parameters: parameters,\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.CfnDBParameterGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.CfnDBParameterGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDBParameterGroupProps: neptune.CfnDBParameterGroupProps = {\n  description: 'description',\n  family: 'family',\n  parameters: parameters,\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 13,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "89e616fe4178fb151cd7302e4b41a37db8f108ed29ca81c9bf28e7946754c67d"
    },
    "55288aa26470072300a9b286a3890eff9d0bf4a665509b6837ecaa490f0056db": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\ncfn_dBSubnet_group = neptune.CfnDBSubnetGroup(self, \"MyCfnDBSubnetGroup\",\n    db_subnet_group_description=\"dbSubnetGroupDescription\",\n    subnet_ids=[\"subnetIds\"],\n\n    # the properties below are optional\n    db_subnet_group_name=\"dbSubnetGroupName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nCfnDBSubnetGroup cfnDBSubnetGroup = new CfnDBSubnetGroup(this, \"MyCfnDBSubnetGroup\", new CfnDBSubnetGroupProps {\n    DbSubnetGroupDescription = \"dbSubnetGroupDescription\",\n    SubnetIds = new [] { \"subnetIds\" },\n\n    // the properties below are optional\n    DbSubnetGroupName = \"dbSubnetGroupName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nCfnDBSubnetGroup cfnDBSubnetGroup = CfnDBSubnetGroup.Builder.create(this, \"MyCfnDBSubnetGroup\")\n        .dbSubnetGroupDescription(\"dbSubnetGroupDescription\")\n        .subnetIds(List.of(\"subnetIds\"))\n\n        // the properties below are optional\n        .dbSubnetGroupName(\"dbSubnetGroupName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\ncfnDBSubnetGroup := neptune.NewCfnDBSubnetGroup(this, jsii.String(\"MyCfnDBSubnetGroup\"), &cfnDBSubnetGroupProps{\n\tdbSubnetGroupDescription: jsii.String(\"dbSubnetGroupDescription\"),\n\tsubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n\n\t// the properties below are optional\n\tdbSubnetGroupName: jsii.String(\"dbSubnetGroupName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\nconst cfnDBSubnetGroup = new neptune.CfnDBSubnetGroup(this, 'MyCfnDBSubnetGroup', {\n  dbSubnetGroupDescription: 'dbSubnetGroupDescription',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.CfnDBSubnetGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.CfnDBSubnetGroup",
        "@aws-cdk/aws-neptune.CfnDBSubnetGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDBSubnetGroup = new neptune.CfnDBSubnetGroup(this, 'MyCfnDBSubnetGroup', {\n  dbSubnetGroupDescription: 'dbSubnetGroupDescription',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 10,
        "104": 1,
        "192": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "3b337b7679c6e771d792f6ab06dde7ca5d7c3153faba51a0eaa089cc6e218b63"
    },
    "34aee08ac6e5e21c9d52735f420839513914390cf9757d99f3b8c21a7a06b93b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\ncfn_dBSubnet_group_props = neptune.CfnDBSubnetGroupProps(\n    db_subnet_group_description=\"dbSubnetGroupDescription\",\n    subnet_ids=[\"subnetIds\"],\n\n    # the properties below are optional\n    db_subnet_group_name=\"dbSubnetGroupName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nCfnDBSubnetGroupProps cfnDBSubnetGroupProps = new CfnDBSubnetGroupProps {\n    DbSubnetGroupDescription = \"dbSubnetGroupDescription\",\n    SubnetIds = new [] { \"subnetIds\" },\n\n    // the properties below are optional\n    DbSubnetGroupName = \"dbSubnetGroupName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nCfnDBSubnetGroupProps cfnDBSubnetGroupProps = CfnDBSubnetGroupProps.builder()\n        .dbSubnetGroupDescription(\"dbSubnetGroupDescription\")\n        .subnetIds(List.of(\"subnetIds\"))\n\n        // the properties below are optional\n        .dbSubnetGroupName(\"dbSubnetGroupName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\ncfnDBSubnetGroupProps := &cfnDBSubnetGroupProps{\n\tdbSubnetGroupDescription: jsii.String(\"dbSubnetGroupDescription\"),\n\tsubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n\n\t// the properties below are optional\n\tdbSubnetGroupName: jsii.String(\"dbSubnetGroupName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\nconst cfnDBSubnetGroupProps: neptune.CfnDBSubnetGroupProps = {\n  dbSubnetGroupDescription: 'dbSubnetGroupDescription',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.CfnDBSubnetGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.CfnDBSubnetGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDBSubnetGroupProps: neptune.CfnDBSubnetGroupProps = {\n  dbSubnetGroupDescription: 'dbSubnetGroupDescription',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "ca341ba75d98a5935dda5227f4f5bc17ba5614170894a1ca3e85992d07839b97"
    },
    "406896958e8f3df682ded8a29cea2611b280d5a9237dbe98fcc33149f889cd91": {
      "translations": {
        "python": {
          "source": "cluster_params = neptune.ClusterParameterGroup(self, \"ClusterParams\",\n    description=\"Cluster parameter group\",\n    parameters={\n        \"neptune_enable_audit_log\": \"1\"\n    }\n)\n\ndb_params = neptune.ParameterGroup(self, \"DbParams\",\n    description=\"Db parameter group\",\n    parameters={\n        \"neptune_query_timeout\": \"120000\"\n    }\n)\n\ncluster = neptune.DatabaseCluster(self, \"Database\",\n    vpc=vpc,\n    instance_type=neptune.InstanceType.R5_LARGE,\n    cluster_parameter_group=cluster_params,\n    parameter_group=db_params\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ClusterParameterGroup clusterParams = new ClusterParameterGroup(this, \"ClusterParams\", new ClusterParameterGroupProps {\n    Description = \"Cluster parameter group\",\n    Parameters = new Dictionary<string, string> {\n        { \"neptune_enable_audit_log\", \"1\" }\n    }\n});\n\nParameterGroup dbParams = new ParameterGroup(this, \"DbParams\", new ParameterGroupProps {\n    Description = \"Db parameter group\",\n    Parameters = new Dictionary<string, string> {\n        { \"neptune_query_timeout\", \"120000\" }\n    }\n});\n\nDatabaseCluster cluster = new DatabaseCluster(this, \"Database\", new DatabaseClusterProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.R5_LARGE,\n    ClusterParameterGroup = clusterParams,\n    ParameterGroup = dbParams\n});",
          "version": "1"
        },
        "java": {
          "source": "ClusterParameterGroup clusterParams = ClusterParameterGroup.Builder.create(this, \"ClusterParams\")\n        .description(\"Cluster parameter group\")\n        .parameters(Map.of(\n                \"neptune_enable_audit_log\", \"1\"))\n        .build();\n\nParameterGroup dbParams = ParameterGroup.Builder.create(this, \"DbParams\")\n        .description(\"Db parameter group\")\n        .parameters(Map.of(\n                \"neptune_query_timeout\", \"120000\"))\n        .build();\n\nDatabaseCluster cluster = DatabaseCluster.Builder.create(this, \"Database\")\n        .vpc(vpc)\n        .instanceType(InstanceType.R5_LARGE)\n        .clusterParameterGroup(clusterParams)\n        .parameterGroup(dbParams)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "clusterParams := neptune.NewClusterParameterGroup(this, jsii.String(\"ClusterParams\"), &clusterParameterGroupProps{\n\tdescription: jsii.String(\"Cluster parameter group\"),\n\tparameters: map[string]*string{\n\t\t\"neptune_enable_audit_log\": jsii.String(\"1\"),\n\t},\n})\n\ndbParams := neptune.NewParameterGroup(this, jsii.String(\"DbParams\"), &parameterGroupProps{\n\tdescription: jsii.String(\"Db parameter group\"),\n\tparameters: map[string]*string{\n\t\t\"neptune_query_timeout\": jsii.String(\"120000\"),\n\t},\n})\n\ncluster := neptune.NewDatabaseCluster(this, jsii.String(\"Database\"), &databaseClusterProps{\n\tvpc: vpc,\n\tinstanceType: neptune.instanceType_R5_LARGE(),\n\tclusterParameterGroup: clusterParams,\n\tparameterGroup: dbParams,\n})",
          "version": "1"
        },
        "$": {
          "source": "const clusterParams = new neptune.ClusterParameterGroup(this, 'ClusterParams', {\n  description: 'Cluster parameter group',\n  parameters: {\n    neptune_enable_audit_log: '1'\n  },\n});\n\nconst dbParams = new neptune.ParameterGroup(this, 'DbParams', {\n  description: 'Db parameter group',\n  parameters: {\n    neptune_query_timeout: '120000',\n  },\n});\n\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  clusterParameterGroup: clusterParams,\n  parameterGroup: dbParams,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.ClusterParameterGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.ClusterParameterGroup",
        "@aws-cdk/aws-neptune.ClusterParameterGroupProps",
        "@aws-cdk/aws-neptune.DatabaseCluster",
        "@aws-cdk/aws-neptune.DatabaseClusterProps",
        "@aws-cdk/aws-neptune.IClusterParameterGroup",
        "@aws-cdk/aws-neptune.IParameterGroup",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "@aws-cdk/aws-neptune.ParameterGroup",
        "@aws-cdk/aws-neptune.ParameterGroupProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst clusterParams = new neptune.ClusterParameterGroup(this, 'ClusterParams', {\n  description: 'Cluster parameter group',\n  parameters: {\n    neptune_enable_audit_log: '1'\n  },\n});\n\nconst dbParams = new neptune.ParameterGroup(this, 'DbParams', {\n  description: 'Db parameter group',\n  parameters: {\n    neptune_query_timeout: '120000',\n  },\n});\n\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  clusterParameterGroup: clusterParams,\n  parameterGroup: dbParams,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 7,
        "75": 24,
        "104": 3,
        "193": 5,
        "194": 5,
        "197": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "281": 9,
        "282": 1
      },
      "fqnsFingerprint": "1dc48378f252efa8c5aaf4a8addabedcfcfddfff43fcb1629bc893136c2666b0"
    },
    "f29431690745c51291ee76cd88b62f8d668d5c69be210fcfcb7aafbe9a48aea8": {
      "translations": {
        "python": {
          "source": "cluster_params = neptune.ClusterParameterGroup(self, \"ClusterParams\",\n    description=\"Cluster parameter group\",\n    parameters={\n        \"neptune_enable_audit_log\": \"1\"\n    }\n)\n\ndb_params = neptune.ParameterGroup(self, \"DbParams\",\n    description=\"Db parameter group\",\n    parameters={\n        \"neptune_query_timeout\": \"120000\"\n    }\n)\n\ncluster = neptune.DatabaseCluster(self, \"Database\",\n    vpc=vpc,\n    instance_type=neptune.InstanceType.R5_LARGE,\n    cluster_parameter_group=cluster_params,\n    parameter_group=db_params\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ClusterParameterGroup clusterParams = new ClusterParameterGroup(this, \"ClusterParams\", new ClusterParameterGroupProps {\n    Description = \"Cluster parameter group\",\n    Parameters = new Dictionary<string, string> {\n        { \"neptune_enable_audit_log\", \"1\" }\n    }\n});\n\nParameterGroup dbParams = new ParameterGroup(this, \"DbParams\", new ParameterGroupProps {\n    Description = \"Db parameter group\",\n    Parameters = new Dictionary<string, string> {\n        { \"neptune_query_timeout\", \"120000\" }\n    }\n});\n\nDatabaseCluster cluster = new DatabaseCluster(this, \"Database\", new DatabaseClusterProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.R5_LARGE,\n    ClusterParameterGroup = clusterParams,\n    ParameterGroup = dbParams\n});",
          "version": "1"
        },
        "java": {
          "source": "ClusterParameterGroup clusterParams = ClusterParameterGroup.Builder.create(this, \"ClusterParams\")\n        .description(\"Cluster parameter group\")\n        .parameters(Map.of(\n                \"neptune_enable_audit_log\", \"1\"))\n        .build();\n\nParameterGroup dbParams = ParameterGroup.Builder.create(this, \"DbParams\")\n        .description(\"Db parameter group\")\n        .parameters(Map.of(\n                \"neptune_query_timeout\", \"120000\"))\n        .build();\n\nDatabaseCluster cluster = DatabaseCluster.Builder.create(this, \"Database\")\n        .vpc(vpc)\n        .instanceType(InstanceType.R5_LARGE)\n        .clusterParameterGroup(clusterParams)\n        .parameterGroup(dbParams)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "clusterParams := neptune.NewClusterParameterGroup(this, jsii.String(\"ClusterParams\"), &clusterParameterGroupProps{\n\tdescription: jsii.String(\"Cluster parameter group\"),\n\tparameters: map[string]*string{\n\t\t\"neptune_enable_audit_log\": jsii.String(\"1\"),\n\t},\n})\n\ndbParams := neptune.NewParameterGroup(this, jsii.String(\"DbParams\"), &parameterGroupProps{\n\tdescription: jsii.String(\"Db parameter group\"),\n\tparameters: map[string]*string{\n\t\t\"neptune_query_timeout\": jsii.String(\"120000\"),\n\t},\n})\n\ncluster := neptune.NewDatabaseCluster(this, jsii.String(\"Database\"), &databaseClusterProps{\n\tvpc: vpc,\n\tinstanceType: neptune.instanceType_R5_LARGE(),\n\tclusterParameterGroup: clusterParams,\n\tparameterGroup: dbParams,\n})",
          "version": "1"
        },
        "$": {
          "source": "const clusterParams = new neptune.ClusterParameterGroup(this, 'ClusterParams', {\n  description: 'Cluster parameter group',\n  parameters: {\n    neptune_enable_audit_log: '1'\n  },\n});\n\nconst dbParams = new neptune.ParameterGroup(this, 'DbParams', {\n  description: 'Db parameter group',\n  parameters: {\n    neptune_query_timeout: '120000',\n  },\n});\n\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  clusterParameterGroup: clusterParams,\n  parameterGroup: dbParams,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.ClusterParameterGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.ClusterParameterGroup",
        "@aws-cdk/aws-neptune.ClusterParameterGroupProps",
        "@aws-cdk/aws-neptune.DatabaseCluster",
        "@aws-cdk/aws-neptune.DatabaseClusterProps",
        "@aws-cdk/aws-neptune.IClusterParameterGroup",
        "@aws-cdk/aws-neptune.IParameterGroup",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "@aws-cdk/aws-neptune.ParameterGroup",
        "@aws-cdk/aws-neptune.ParameterGroupProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst clusterParams = new neptune.ClusterParameterGroup(this, 'ClusterParams', {\n  description: 'Cluster parameter group',\n  parameters: {\n    neptune_enable_audit_log: '1'\n  },\n});\n\nconst dbParams = new neptune.ParameterGroup(this, 'DbParams', {\n  description: 'Db parameter group',\n  parameters: {\n    neptune_query_timeout: '120000',\n  },\n});\n\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  clusterParameterGroup: clusterParams,\n  parameterGroup: dbParams,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 7,
        "75": 24,
        "104": 3,
        "193": 5,
        "194": 5,
        "197": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "281": 9,
        "282": 1
      },
      "fqnsFingerprint": "1dc48378f252efa8c5aaf4a8addabedcfcfddfff43fcb1629bc893136c2666b0"
    },
    "2cd169e81e7740223bd4efb20c7e5e481600fe87ad83f2783e225cb95a56237b": {
      "translations": {
        "python": {
          "source": "cluster = neptune.DatabaseCluster(self, \"Database\",\n    vpc=vpc,\n    instance_type=neptune.InstanceType.R5_LARGE,\n    instances=2\n)",
          "version": "2"
        },
        "csharp": {
          "source": "DatabaseCluster cluster = new DatabaseCluster(this, \"Database\", new DatabaseClusterProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.R5_LARGE,\n    Instances = 2\n});",
          "version": "1"
        },
        "java": {
          "source": "DatabaseCluster cluster = DatabaseCluster.Builder.create(this, \"Database\")\n        .vpc(vpc)\n        .instanceType(InstanceType.R5_LARGE)\n        .instances(2)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "cluster := neptune.NewDatabaseCluster(this, jsii.String(\"Database\"), &databaseClusterProps{\n\tvpc: vpc,\n\tinstanceType: neptune.instanceType_R5_LARGE(),\n\tinstances: jsii.Number(2),\n})",
          "version": "1"
        },
        "$": {
          "source": "const cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  instances: 2,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.DatabaseCluster"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.DatabaseCluster",
        "@aws-cdk/aws-neptune.DatabaseClusterProps",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  instances: 2,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 9,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2,
        "282": 1
      },
      "fqnsFingerprint": "0882043f67bd93781f25049e772f9648e896c74d7474250802c83f3c59f8ccef"
    },
    "68256eee99a7e0cfc2d728011efee713a9780a6bf95dfcb1fdff7b3b5fd83387": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_neptune as neptune\n\n# security_group: ec2.SecurityGroup\n\ndatabase_cluster_attributes = neptune.DatabaseClusterAttributes(\n    cluster_endpoint_address=\"clusterEndpointAddress\",\n    cluster_identifier=\"clusterIdentifier\",\n    cluster_resource_identifier=\"clusterResourceIdentifier\",\n    port=123,\n    reader_endpoint_address=\"readerEndpointAddress\",\n    security_group=security_group\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.Neptune;\n\nSecurityGroup securityGroup;\n\nDatabaseClusterAttributes databaseClusterAttributes = new DatabaseClusterAttributes {\n    ClusterEndpointAddress = \"clusterEndpointAddress\",\n    ClusterIdentifier = \"clusterIdentifier\",\n    ClusterResourceIdentifier = \"clusterResourceIdentifier\",\n    Port = 123,\n    ReaderEndpointAddress = \"readerEndpointAddress\",\n    SecurityGroup = securityGroup\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.neptune.*;\n\nSecurityGroup securityGroup;\n\nDatabaseClusterAttributes databaseClusterAttributes = DatabaseClusterAttributes.builder()\n        .clusterEndpointAddress(\"clusterEndpointAddress\")\n        .clusterIdentifier(\"clusterIdentifier\")\n        .clusterResourceIdentifier(\"clusterResourceIdentifier\")\n        .port(123)\n        .readerEndpointAddress(\"readerEndpointAddress\")\n        .securityGroup(securityGroup)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\nvar securityGroup securityGroup\n\ndatabaseClusterAttributes := &databaseClusterAttributes{\n\tclusterEndpointAddress: jsii.String(\"clusterEndpointAddress\"),\n\tclusterIdentifier: jsii.String(\"clusterIdentifier\"),\n\tclusterResourceIdentifier: jsii.String(\"clusterResourceIdentifier\"),\n\tport: jsii.Number(123),\n\treaderEndpointAddress: jsii.String(\"readerEndpointAddress\"),\n\tsecurityGroup: securityGroup,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\ndeclare const securityGroup: ec2.SecurityGroup;\nconst databaseClusterAttributes: neptune.DatabaseClusterAttributes = {\n  clusterEndpointAddress: 'clusterEndpointAddress',\n  clusterIdentifier: 'clusterIdentifier',\n  clusterResourceIdentifier: 'clusterResourceIdentifier',\n  port: 123,\n  readerEndpointAddress: 'readerEndpointAddress',\n  securityGroup: securityGroup,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.DatabaseClusterAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.ISecurityGroup",
        "@aws-cdk/aws-neptune.DatabaseClusterAttributes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\ndeclare const securityGroup: ec2.SecurityGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst databaseClusterAttributes: neptune.DatabaseClusterAttributes = {\n  clusterEndpointAddress: 'clusterEndpointAddress',\n  clusterIdentifier: 'clusterIdentifier',\n  clusterResourceIdentifier: 'clusterResourceIdentifier',\n  port: 123,\n  readerEndpointAddress: 'readerEndpointAddress',\n  securityGroup: securityGroup,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 6,
        "75": 15,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "4c9e719127592eb3e899092c2f3212d76b2eda08f42e8cf37e014658b7ff247b"
    },
    "60f2c986f0a3872a06e948346df8a02a1f8c8ca4a680aec14638dab9655a835a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_neptune as neptune\n\n# security_group: ec2.SecurityGroup\n\ndatabase_cluster_base = neptune.DatabaseClusterBase.from_database_cluster_attributes(self, \"MyDatabaseClusterBase\",\n    cluster_endpoint_address=\"clusterEndpointAddress\",\n    cluster_identifier=\"clusterIdentifier\",\n    cluster_resource_identifier=\"clusterResourceIdentifier\",\n    port=123,\n    reader_endpoint_address=\"readerEndpointAddress\",\n    security_group=security_group\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.Neptune;\n\nSecurityGroup securityGroup;\n\nIDatabaseCluster databaseClusterBase = DatabaseClusterBase.FromDatabaseClusterAttributes(this, \"MyDatabaseClusterBase\", new DatabaseClusterAttributes {\n    ClusterEndpointAddress = \"clusterEndpointAddress\",\n    ClusterIdentifier = \"clusterIdentifier\",\n    ClusterResourceIdentifier = \"clusterResourceIdentifier\",\n    Port = 123,\n    ReaderEndpointAddress = \"readerEndpointAddress\",\n    SecurityGroup = securityGroup\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.neptune.*;\n\nSecurityGroup securityGroup;\n\nIDatabaseCluster databaseClusterBase = DatabaseClusterBase.fromDatabaseClusterAttributes(this, \"MyDatabaseClusterBase\", DatabaseClusterAttributes.builder()\n        .clusterEndpointAddress(\"clusterEndpointAddress\")\n        .clusterIdentifier(\"clusterIdentifier\")\n        .clusterResourceIdentifier(\"clusterResourceIdentifier\")\n        .port(123)\n        .readerEndpointAddress(\"readerEndpointAddress\")\n        .securityGroup(securityGroup)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\nvar securityGroup securityGroup\n\ndatabaseClusterBase := neptune.databaseClusterBase.fromDatabaseClusterAttributes(this, jsii.String(\"MyDatabaseClusterBase\"), &databaseClusterAttributes{\n\tclusterEndpointAddress: jsii.String(\"clusterEndpointAddress\"),\n\tclusterIdentifier: jsii.String(\"clusterIdentifier\"),\n\tclusterResourceIdentifier: jsii.String(\"clusterResourceIdentifier\"),\n\tport: jsii.Number(123),\n\treaderEndpointAddress: jsii.String(\"readerEndpointAddress\"),\n\tsecurityGroup: securityGroup,\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\ndeclare const securityGroup: ec2.SecurityGroup;\nconst databaseClusterBase = neptune.DatabaseClusterBase.fromDatabaseClusterAttributes(this, 'MyDatabaseClusterBase', {\n  clusterEndpointAddress: 'clusterEndpointAddress',\n  clusterIdentifier: 'clusterIdentifier',\n  clusterResourceIdentifier: 'clusterResourceIdentifier',\n  port: 123,\n  readerEndpointAddress: 'readerEndpointAddress',\n  securityGroup: securityGroup,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.DatabaseClusterBase"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.ISecurityGroup",
        "@aws-cdk/aws-neptune.DatabaseClusterAttributes",
        "@aws-cdk/aws-neptune.DatabaseClusterBase",
        "@aws-cdk/aws-neptune.DatabaseClusterBase#fromDatabaseClusterAttributes",
        "@aws-cdk/aws-neptune.IDatabaseCluster",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\ndeclare const securityGroup: ec2.SecurityGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst databaseClusterBase = neptune.DatabaseClusterBase.fromDatabaseClusterAttributes(this, 'MyDatabaseClusterBase', {\n  clusterEndpointAddress: 'clusterEndpointAddress',\n  clusterIdentifier: 'clusterIdentifier',\n  clusterResourceIdentifier: 'clusterResourceIdentifier',\n  port: 123,\n  readerEndpointAddress: 'readerEndpointAddress',\n  securityGroup: securityGroup,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 7,
        "75": 16,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "f927a4508bb57fc26b75104d3428ab7063a51f306813fbb11a8cb7960846bf81"
    },
    "c95a5c7a98184a554b1d5deada629d6b989d0a3cc1effa184ef0248695cf85e5": {
      "translations": {
        "python": {
          "source": "cluster = neptune.DatabaseCluster(self, \"Database\",\n    vpc=vpc,\n    instance_type=neptune.InstanceType.R5_LARGE,\n    instances=2\n)",
          "version": "2"
        },
        "csharp": {
          "source": "DatabaseCluster cluster = new DatabaseCluster(this, \"Database\", new DatabaseClusterProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.R5_LARGE,\n    Instances = 2\n});",
          "version": "1"
        },
        "java": {
          "source": "DatabaseCluster cluster = DatabaseCluster.Builder.create(this, \"Database\")\n        .vpc(vpc)\n        .instanceType(InstanceType.R5_LARGE)\n        .instances(2)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "cluster := neptune.NewDatabaseCluster(this, jsii.String(\"Database\"), &databaseClusterProps{\n\tvpc: vpc,\n\tinstanceType: neptune.instanceType_R5_LARGE(),\n\tinstances: jsii.Number(2),\n})",
          "version": "1"
        },
        "$": {
          "source": "const cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  instances: 2,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.DatabaseClusterProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.DatabaseCluster",
        "@aws-cdk/aws-neptune.DatabaseClusterProps",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  instances: 2,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 9,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2,
        "282": 1
      },
      "fqnsFingerprint": "0882043f67bd93781f25049e772f9648e896c74d7474250802c83f3c59f8ccef"
    },
    "2e883c5be59e81cf8b41f8611a7a1b6150c0028293112c457f066a24b825d6b1": {
      "translations": {
        "python": {
          "source": "replica1 = neptune.DatabaseInstance(self, \"Instance\",\n    cluster=cluster,\n    instance_type=neptune.InstanceType.R5_LARGE\n)",
          "version": "2"
        },
        "csharp": {
          "source": "DatabaseInstance replica1 = new DatabaseInstance(this, \"Instance\", new DatabaseInstanceProps {\n    Cluster = cluster,\n    InstanceType = InstanceType.R5_LARGE\n});",
          "version": "1"
        },
        "java": {
          "source": "DatabaseInstance replica1 = DatabaseInstance.Builder.create(this, \"Instance\")\n        .cluster(cluster)\n        .instanceType(InstanceType.R5_LARGE)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "replica1 := neptune.NewDatabaseInstance(this, jsii.String(\"Instance\"), &databaseInstanceProps{\n\tcluster: cluster,\n\tinstanceType: neptune.*instanceType_R5_LARGE(),\n})",
          "version": "1"
        },
        "$": {
          "source": "const replica1 = new neptune.DatabaseInstance(this, 'Instance', {\n  cluster,\n  instanceType: neptune.InstanceType.R5_LARGE,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.DatabaseInstance"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.DatabaseInstance",
        "@aws-cdk/aws-neptune.DatabaseInstanceProps",
        "@aws-cdk/aws-neptune.IDatabaseCluster",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    const cluster = new neptune.DatabaseCluster(this, 'Database', {\n      vpc,\n      instanceType: neptune.InstanceType.R5_LARGE,\n    });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst replica1 = new neptune.DatabaseInstance(this, 'Instance', {\n  cluster,\n  instanceType: neptune.InstanceType.R5_LARGE,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1,
        "282": 1
      },
      "fqnsFingerprint": "f288c5c1de6e02a5e2ad0b413c3fe3b1c88b83ff22705c03fa14088a47b9a58a"
    },
    "aa32af7bb45c94c5de4ef4524719183b852a672fe7b54d90849539efe707b7f6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\ndatabase_instance_attributes = neptune.DatabaseInstanceAttributes(\n    instance_endpoint_address=\"instanceEndpointAddress\",\n    instance_identifier=\"instanceIdentifier\",\n    port=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nDatabaseInstanceAttributes databaseInstanceAttributes = new DatabaseInstanceAttributes {\n    InstanceEndpointAddress = \"instanceEndpointAddress\",\n    InstanceIdentifier = \"instanceIdentifier\",\n    Port = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nDatabaseInstanceAttributes databaseInstanceAttributes = DatabaseInstanceAttributes.builder()\n        .instanceEndpointAddress(\"instanceEndpointAddress\")\n        .instanceIdentifier(\"instanceIdentifier\")\n        .port(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\ndatabaseInstanceAttributes := &databaseInstanceAttributes{\n\tinstanceEndpointAddress: jsii.String(\"instanceEndpointAddress\"),\n\tinstanceIdentifier: jsii.String(\"instanceIdentifier\"),\n\tport: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\nconst databaseInstanceAttributes: neptune.DatabaseInstanceAttributes = {\n  instanceEndpointAddress: 'instanceEndpointAddress',\n  instanceIdentifier: 'instanceIdentifier',\n  port: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.DatabaseInstanceAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.DatabaseInstanceAttributes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst databaseInstanceAttributes: neptune.DatabaseInstanceAttributes = {\n  instanceEndpointAddress: 'instanceEndpointAddress',\n  instanceIdentifier: 'instanceIdentifier',\n  port: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "05fd0723e6c80c1effcd660f23260f5247260745ee5e65e7a47ba26f7079d6da"
    },
    "54e7e25d6d3086ad0b16ed5c968c706214d93a8f3571bd8de0c5a5758f074430": {
      "translations": {
        "python": {
          "source": "replica1 = neptune.DatabaseInstance(self, \"Instance\",\n    cluster=cluster,\n    instance_type=neptune.InstanceType.R5_LARGE\n)",
          "version": "2"
        },
        "csharp": {
          "source": "DatabaseInstance replica1 = new DatabaseInstance(this, \"Instance\", new DatabaseInstanceProps {\n    Cluster = cluster,\n    InstanceType = InstanceType.R5_LARGE\n});",
          "version": "1"
        },
        "java": {
          "source": "DatabaseInstance replica1 = DatabaseInstance.Builder.create(this, \"Instance\")\n        .cluster(cluster)\n        .instanceType(InstanceType.R5_LARGE)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "replica1 := neptune.NewDatabaseInstance(this, jsii.String(\"Instance\"), &databaseInstanceProps{\n\tcluster: cluster,\n\tinstanceType: neptune.*instanceType_R5_LARGE(),\n})",
          "version": "1"
        },
        "$": {
          "source": "const replica1 = new neptune.DatabaseInstance(this, 'Instance', {\n  cluster,\n  instanceType: neptune.InstanceType.R5_LARGE,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.DatabaseInstanceProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.DatabaseInstance",
        "@aws-cdk/aws-neptune.DatabaseInstanceProps",
        "@aws-cdk/aws-neptune.IDatabaseCluster",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    const cluster = new neptune.DatabaseCluster(this, 'Database', {\n      vpc,\n      instanceType: neptune.InstanceType.R5_LARGE,\n    });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst replica1 = new neptune.DatabaseInstance(this, 'Instance', {\n  cluster,\n  instanceType: neptune.InstanceType.R5_LARGE,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1,
        "282": 1
      },
      "fqnsFingerprint": "f288c5c1de6e02a5e2ad0b413c3fe3b1c88b83ff22705c03fa14088a47b9a58a"
    },
    "29227d9917484facea89034d7f87f8a6ada3ae22309a776d308fe0b70cecef7c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\nendpoint = neptune.Endpoint(\"address\", 123)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nEndpoint endpoint = new Endpoint(\"address\", 123);",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nEndpoint endpoint = new Endpoint(\"address\", 123);",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\nendpoint := neptune.NewEndpoint(jsii.String(\"address\"), jsii.Number(123))",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\nconst endpoint = new neptune.Endpoint('address', 123);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.Endpoint"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.Endpoint"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst endpoint = new neptune.Endpoint('address', 123);\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 4,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "437062c8926837052f370c12add629854f1000db424fc79daf2f8c3a8b41f3a1"
    },
    "dcc708b761e2cae800e0518a837ce322dd2348fbb07440c9692da0b1a3b6f4d2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_neptune as neptune\n\nengine_version = neptune.EngineVersion.V1_0_1_0",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Neptune;\n\nEngineVersion engineVersion = EngineVersion.V1_0_1_0;",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.neptune.*;\n\nEngineVersion engineVersion = EngineVersion.V1_0_1_0;",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\n\nengineVersion := neptune.engineVersion_V1_0_1_0()",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\nconst engineVersion = neptune.EngineVersion.V1_0_1_0;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.EngineVersion"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-neptune.EngineVersion",
        "@aws-cdk/aws-neptune.EngineVersion#V1_0_1_0"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as neptune from '@aws-cdk/aws-neptune';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst engineVersion = neptune.EngineVersion.V1_0_1_0;\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "a8a6fcf15c5cc4095db5332e7c0ba30fa87945a52fb29ba0290db16979174954"
    },
    "355292b60b33ca7b9819f15d9406e1e953406a209c10ae6a59c6034b923ecc05": {
      "translations": {
        "python": {
          "source": "cluster = neptune.DatabaseCluster(self, \"Database\",\n    vpc=vpc,\n    instance_type=neptune.InstanceType.R5_LARGE,\n    instances=2\n)",
          "version": "2"
        },
        "csharp": {
          "source": "DatabaseCluster cluster = new DatabaseCluster(this, \"Database\", new DatabaseClusterProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.R5_LARGE,\n    Instances = 2\n});",
          "version": "1"
        },
        "java": {
          "source": "DatabaseCluster cluster = DatabaseCluster.Builder.create(this, \"Database\")\n        .vpc(vpc)\n        .instanceType(InstanceType.R5_LARGE)\n        .instances(2)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "cluster := neptune.NewDatabaseCluster(this, jsii.String(\"Database\"), &databaseClusterProps{\n\tvpc: vpc,\n\tinstanceType: neptune.instanceType_R5_LARGE(),\n\tinstances: jsii.Number(2),\n})",
          "version": "1"
        },
        "$": {
          "source": "const cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  instances: 2,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.InstanceType"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.DatabaseCluster",
        "@aws-cdk/aws-neptune.DatabaseClusterProps",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  instances: 2,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 9,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2,
        "282": 1
      },
      "fqnsFingerprint": "0882043f67bd93781f25049e772f9648e896c74d7474250802c83f3c59f8ccef"
    },
    "ad85f8e87c4ec96e3f097b5e2716c570f2c1d119150115595563a6fce91132ef": {
      "translations": {
        "python": {
          "source": "cluster_params = neptune.ClusterParameterGroup(self, \"ClusterParams\",\n    description=\"Cluster parameter group\",\n    parameters={\n        \"neptune_enable_audit_log\": \"1\"\n    }\n)\n\ndb_params = neptune.ParameterGroup(self, \"DbParams\",\n    description=\"Db parameter group\",\n    parameters={\n        \"neptune_query_timeout\": \"120000\"\n    }\n)\n\ncluster = neptune.DatabaseCluster(self, \"Database\",\n    vpc=vpc,\n    instance_type=neptune.InstanceType.R5_LARGE,\n    cluster_parameter_group=cluster_params,\n    parameter_group=db_params\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ClusterParameterGroup clusterParams = new ClusterParameterGroup(this, \"ClusterParams\", new ClusterParameterGroupProps {\n    Description = \"Cluster parameter group\",\n    Parameters = new Dictionary<string, string> {\n        { \"neptune_enable_audit_log\", \"1\" }\n    }\n});\n\nParameterGroup dbParams = new ParameterGroup(this, \"DbParams\", new ParameterGroupProps {\n    Description = \"Db parameter group\",\n    Parameters = new Dictionary<string, string> {\n        { \"neptune_query_timeout\", \"120000\" }\n    }\n});\n\nDatabaseCluster cluster = new DatabaseCluster(this, \"Database\", new DatabaseClusterProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.R5_LARGE,\n    ClusterParameterGroup = clusterParams,\n    ParameterGroup = dbParams\n});",
          "version": "1"
        },
        "java": {
          "source": "ClusterParameterGroup clusterParams = ClusterParameterGroup.Builder.create(this, \"ClusterParams\")\n        .description(\"Cluster parameter group\")\n        .parameters(Map.of(\n                \"neptune_enable_audit_log\", \"1\"))\n        .build();\n\nParameterGroup dbParams = ParameterGroup.Builder.create(this, \"DbParams\")\n        .description(\"Db parameter group\")\n        .parameters(Map.of(\n                \"neptune_query_timeout\", \"120000\"))\n        .build();\n\nDatabaseCluster cluster = DatabaseCluster.Builder.create(this, \"Database\")\n        .vpc(vpc)\n        .instanceType(InstanceType.R5_LARGE)\n        .clusterParameterGroup(clusterParams)\n        .parameterGroup(dbParams)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "clusterParams := neptune.NewClusterParameterGroup(this, jsii.String(\"ClusterParams\"), &clusterParameterGroupProps{\n\tdescription: jsii.String(\"Cluster parameter group\"),\n\tparameters: map[string]*string{\n\t\t\"neptune_enable_audit_log\": jsii.String(\"1\"),\n\t},\n})\n\ndbParams := neptune.NewParameterGroup(this, jsii.String(\"DbParams\"), &parameterGroupProps{\n\tdescription: jsii.String(\"Db parameter group\"),\n\tparameters: map[string]*string{\n\t\t\"neptune_query_timeout\": jsii.String(\"120000\"),\n\t},\n})\n\ncluster := neptune.NewDatabaseCluster(this, jsii.String(\"Database\"), &databaseClusterProps{\n\tvpc: vpc,\n\tinstanceType: neptune.instanceType_R5_LARGE(),\n\tclusterParameterGroup: clusterParams,\n\tparameterGroup: dbParams,\n})",
          "version": "1"
        },
        "$": {
          "source": "const clusterParams = new neptune.ClusterParameterGroup(this, 'ClusterParams', {\n  description: 'Cluster parameter group',\n  parameters: {\n    neptune_enable_audit_log: '1'\n  },\n});\n\nconst dbParams = new neptune.ParameterGroup(this, 'DbParams', {\n  description: 'Db parameter group',\n  parameters: {\n    neptune_query_timeout: '120000',\n  },\n});\n\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  clusterParameterGroup: clusterParams,\n  parameterGroup: dbParams,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.ParameterGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.ClusterParameterGroup",
        "@aws-cdk/aws-neptune.ClusterParameterGroupProps",
        "@aws-cdk/aws-neptune.DatabaseCluster",
        "@aws-cdk/aws-neptune.DatabaseClusterProps",
        "@aws-cdk/aws-neptune.IClusterParameterGroup",
        "@aws-cdk/aws-neptune.IParameterGroup",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "@aws-cdk/aws-neptune.ParameterGroup",
        "@aws-cdk/aws-neptune.ParameterGroupProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst clusterParams = new neptune.ClusterParameterGroup(this, 'ClusterParams', {\n  description: 'Cluster parameter group',\n  parameters: {\n    neptune_enable_audit_log: '1'\n  },\n});\n\nconst dbParams = new neptune.ParameterGroup(this, 'DbParams', {\n  description: 'Db parameter group',\n  parameters: {\n    neptune_query_timeout: '120000',\n  },\n});\n\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  clusterParameterGroup: clusterParams,\n  parameterGroup: dbParams,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 7,
        "75": 24,
        "104": 3,
        "193": 5,
        "194": 5,
        "197": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "281": 9,
        "282": 1
      },
      "fqnsFingerprint": "1dc48378f252efa8c5aaf4a8addabedcfcfddfff43fcb1629bc893136c2666b0"
    },
    "be46196d39ee17a5b6c0c64407e6239fee0c6372c5c698bf46413e732e4c7465": {
      "translations": {
        "python": {
          "source": "cluster_params = neptune.ClusterParameterGroup(self, \"ClusterParams\",\n    description=\"Cluster parameter group\",\n    parameters={\n        \"neptune_enable_audit_log\": \"1\"\n    }\n)\n\ndb_params = neptune.ParameterGroup(self, \"DbParams\",\n    description=\"Db parameter group\",\n    parameters={\n        \"neptune_query_timeout\": \"120000\"\n    }\n)\n\ncluster = neptune.DatabaseCluster(self, \"Database\",\n    vpc=vpc,\n    instance_type=neptune.InstanceType.R5_LARGE,\n    cluster_parameter_group=cluster_params,\n    parameter_group=db_params\n)",
          "version": "2"
        },
        "csharp": {
          "source": "ClusterParameterGroup clusterParams = new ClusterParameterGroup(this, \"ClusterParams\", new ClusterParameterGroupProps {\n    Description = \"Cluster parameter group\",\n    Parameters = new Dictionary<string, string> {\n        { \"neptune_enable_audit_log\", \"1\" }\n    }\n});\n\nParameterGroup dbParams = new ParameterGroup(this, \"DbParams\", new ParameterGroupProps {\n    Description = \"Db parameter group\",\n    Parameters = new Dictionary<string, string> {\n        { \"neptune_query_timeout\", \"120000\" }\n    }\n});\n\nDatabaseCluster cluster = new DatabaseCluster(this, \"Database\", new DatabaseClusterProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.R5_LARGE,\n    ClusterParameterGroup = clusterParams,\n    ParameterGroup = dbParams\n});",
          "version": "1"
        },
        "java": {
          "source": "ClusterParameterGroup clusterParams = ClusterParameterGroup.Builder.create(this, \"ClusterParams\")\n        .description(\"Cluster parameter group\")\n        .parameters(Map.of(\n                \"neptune_enable_audit_log\", \"1\"))\n        .build();\n\nParameterGroup dbParams = ParameterGroup.Builder.create(this, \"DbParams\")\n        .description(\"Db parameter group\")\n        .parameters(Map.of(\n                \"neptune_query_timeout\", \"120000\"))\n        .build();\n\nDatabaseCluster cluster = DatabaseCluster.Builder.create(this, \"Database\")\n        .vpc(vpc)\n        .instanceType(InstanceType.R5_LARGE)\n        .clusterParameterGroup(clusterParams)\n        .parameterGroup(dbParams)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "clusterParams := neptune.NewClusterParameterGroup(this, jsii.String(\"ClusterParams\"), &clusterParameterGroupProps{\n\tdescription: jsii.String(\"Cluster parameter group\"),\n\tparameters: map[string]*string{\n\t\t\"neptune_enable_audit_log\": jsii.String(\"1\"),\n\t},\n})\n\ndbParams := neptune.NewParameterGroup(this, jsii.String(\"DbParams\"), &parameterGroupProps{\n\tdescription: jsii.String(\"Db parameter group\"),\n\tparameters: map[string]*string{\n\t\t\"neptune_query_timeout\": jsii.String(\"120000\"),\n\t},\n})\n\ncluster := neptune.NewDatabaseCluster(this, jsii.String(\"Database\"), &databaseClusterProps{\n\tvpc: vpc,\n\tinstanceType: neptune.instanceType_R5_LARGE(),\n\tclusterParameterGroup: clusterParams,\n\tparameterGroup: dbParams,\n})",
          "version": "1"
        },
        "$": {
          "source": "const clusterParams = new neptune.ClusterParameterGroup(this, 'ClusterParams', {\n  description: 'Cluster parameter group',\n  parameters: {\n    neptune_enable_audit_log: '1'\n  },\n});\n\nconst dbParams = new neptune.ParameterGroup(this, 'DbParams', {\n  description: 'Db parameter group',\n  parameters: {\n    neptune_query_timeout: '120000',\n  },\n});\n\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  clusterParameterGroup: clusterParams,\n  parameterGroup: dbParams,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.ParameterGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-neptune.ClusterParameterGroup",
        "@aws-cdk/aws-neptune.ClusterParameterGroupProps",
        "@aws-cdk/aws-neptune.DatabaseCluster",
        "@aws-cdk/aws-neptune.DatabaseClusterProps",
        "@aws-cdk/aws-neptune.IClusterParameterGroup",
        "@aws-cdk/aws-neptune.IParameterGroup",
        "@aws-cdk/aws-neptune.InstanceType",
        "@aws-cdk/aws-neptune.InstanceType#R5_LARGE",
        "@aws-cdk/aws-neptune.ParameterGroup",
        "@aws-cdk/aws-neptune.ParameterGroupProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst clusterParams = new neptune.ClusterParameterGroup(this, 'ClusterParams', {\n  description: 'Cluster parameter group',\n  parameters: {\n    neptune_enable_audit_log: '1'\n  },\n});\n\nconst dbParams = new neptune.ParameterGroup(this, 'DbParams', {\n  description: 'Db parameter group',\n  parameters: {\n    neptune_query_timeout: '120000',\n  },\n});\n\nconst cluster = new neptune.DatabaseCluster(this, 'Database', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  clusterParameterGroup: clusterParams,\n  parameterGroup: dbParams,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 7,
        "75": 24,
        "104": 3,
        "193": 5,
        "194": 5,
        "197": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "281": 9,
        "282": 1
      },
      "fqnsFingerprint": "1dc48378f252efa8c5aaf4a8addabedcfcfddfff43fcb1629bc893136c2666b0"
    },
    "cc1bacb6784479227d34bd76e2a299f16dc5498e36e5a8055155774768fa4c66": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_neptune as neptune\nimport aws_cdk.core as cdk\n\n# subnet: ec2.Subnet\n# subnet_filter: ec2.SubnetFilter\n# vpc: ec2.Vpc\n\nsubnet_group = neptune.SubnetGroup(self, \"MySubnetGroup\",\n    vpc=vpc,\n\n    # the properties below are optional\n    description=\"description\",\n    removal_policy=cdk.RemovalPolicy.DESTROY,\n    subnet_group_name=\"subnetGroupName\",\n    vpc_subnets=ec2.SubnetSelection(\n        availability_zones=[\"availabilityZones\"],\n        one_per_az=False,\n        subnet_filters=[subnet_filter],\n        subnet_group_name=\"subnetGroupName\",\n        subnet_name=\"subnetName\",\n        subnets=[subnet],\n        subnet_type=ec2.SubnetType.ISOLATED\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.Neptune;\nusing Amazon.CDK;\n\nSubnet subnet;\nSubnetFilter subnetFilter;\nVpc vpc;\nSubnetGroup subnetGroup = new SubnetGroup(this, \"MySubnetGroup\", new SubnetGroupProps {\n    Vpc = vpc,\n\n    // the properties below are optional\n    Description = \"description\",\n    RemovalPolicy = RemovalPolicy.DESTROY,\n    SubnetGroupName = \"subnetGroupName\",\n    VpcSubnets = new SubnetSelection {\n        AvailabilityZones = new [] { \"availabilityZones\" },\n        OnePerAz = false,\n        SubnetFilters = new [] { subnetFilter },\n        SubnetGroupName = \"subnetGroupName\",\n        SubnetName = \"subnetName\",\n        Subnets = new [] { subnet },\n        SubnetType = SubnetType.ISOLATED\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.neptune.*;\nimport software.amazon.awscdk.core.*;\n\nSubnet subnet;\nSubnetFilter subnetFilter;\nVpc vpc;\n\nSubnetGroup subnetGroup = SubnetGroup.Builder.create(this, \"MySubnetGroup\")\n        .vpc(vpc)\n\n        // the properties below are optional\n        .description(\"description\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .subnetGroupName(\"subnetGroupName\")\n        .vpcSubnets(SubnetSelection.builder()\n                .availabilityZones(List.of(\"availabilityZones\"))\n                .onePerAz(false)\n                .subnetFilters(List.of(subnetFilter))\n                .subnetGroupName(\"subnetGroupName\")\n                .subnetName(\"subnetName\")\n                .subnets(List.of(subnet))\n                .subnetType(SubnetType.ISOLATED)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar subnet subnet\nvar subnetFilter subnetFilter\nvar vpc vpc\n\nsubnetGroup := neptune.NewSubnetGroup(this, jsii.String(\"MySubnetGroup\"), &subnetGroupProps{\n\tvpc: vpc,\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tremovalPolicy: cdk.removalPolicy_DESTROY,\n\tsubnetGroupName: jsii.String(\"subnetGroupName\"),\n\tvpcSubnets: &subnetSelection{\n\t\tavailabilityZones: []*string{\n\t\t\tjsii.String(\"availabilityZones\"),\n\t\t},\n\t\tonePerAz: jsii.Boolean(false),\n\t\tsubnetFilters: []*subnetFilter{\n\t\t\tsubnetFilter,\n\t\t},\n\t\tsubnetGroupName: jsii.String(\"subnetGroupName\"),\n\t\tsubnetName: jsii.String(\"subnetName\"),\n\t\tsubnets: []iSubnet{\n\t\t\tsubnet,\n\t\t},\n\t\tsubnetType: ec2.subnetType_ISOLATED,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\nconst subnetGroup = new neptune.SubnetGroup(this, 'MySubnetGroup', {\n  vpc: vpc,\n\n  // the properties below are optional\n  description: 'description',\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  subnetGroupName: 'subnetGroupName',\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.SubnetGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.SubnetSelection",
        "@aws-cdk/aws-ec2.SubnetType",
        "@aws-cdk/aws-ec2.SubnetType#ISOLATED",
        "@aws-cdk/aws-neptune.SubnetGroup",
        "@aws-cdk/aws-neptune.SubnetGroupProps",
        "@aws-cdk/core.RemovalPolicy",
        "@aws-cdk/core.RemovalPolicy#DESTROY",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst subnetGroup = new neptune.SubnetGroup(this, 'MySubnetGroup', {\n  vpc: vpc,\n\n  // the properties below are optional\n  description: 'description',\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  subnetGroupName: 'subnetGroupName',\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 36,
        "91": 1,
        "104": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 3,
        "193": 2,
        "194": 5,
        "197": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "19355aa33b80eb2059baa0142996e775f0b439dd1d809ad0e8f5d5f12d207330"
    },
    "88d33ea1e0f947c86cce1b04f894ffbab0f494fd0778d394c20c1046f0ef6da5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_neptune as neptune\nimport aws_cdk.core as cdk\n\n# subnet: ec2.Subnet\n# subnet_filter: ec2.SubnetFilter\n# vpc: ec2.Vpc\n\nsubnet_group_props = neptune.SubnetGroupProps(\n    vpc=vpc,\n\n    # the properties below are optional\n    description=\"description\",\n    removal_policy=cdk.RemovalPolicy.DESTROY,\n    subnet_group_name=\"subnetGroupName\",\n    vpc_subnets=ec2.SubnetSelection(\n        availability_zones=[\"availabilityZones\"],\n        one_per_az=False,\n        subnet_filters=[subnet_filter],\n        subnet_group_name=\"subnetGroupName\",\n        subnet_name=\"subnetName\",\n        subnets=[subnet],\n        subnet_type=ec2.SubnetType.ISOLATED\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.Neptune;\nusing Amazon.CDK;\n\nSubnet subnet;\nSubnetFilter subnetFilter;\nVpc vpc;\nSubnetGroupProps subnetGroupProps = new SubnetGroupProps {\n    Vpc = vpc,\n\n    // the properties below are optional\n    Description = \"description\",\n    RemovalPolicy = RemovalPolicy.DESTROY,\n    SubnetGroupName = \"subnetGroupName\",\n    VpcSubnets = new SubnetSelection {\n        AvailabilityZones = new [] { \"availabilityZones\" },\n        OnePerAz = false,\n        SubnetFilters = new [] { subnetFilter },\n        SubnetGroupName = \"subnetGroupName\",\n        SubnetName = \"subnetName\",\n        Subnets = new [] { subnet },\n        SubnetType = SubnetType.ISOLATED\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.neptune.*;\nimport software.amazon.awscdk.core.*;\n\nSubnet subnet;\nSubnetFilter subnetFilter;\nVpc vpc;\n\nSubnetGroupProps subnetGroupProps = SubnetGroupProps.builder()\n        .vpc(vpc)\n\n        // the properties below are optional\n        .description(\"description\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .subnetGroupName(\"subnetGroupName\")\n        .vpcSubnets(SubnetSelection.builder()\n                .availabilityZones(List.of(\"availabilityZones\"))\n                .onePerAz(false)\n                .subnetFilters(List.of(subnetFilter))\n                .subnetGroupName(\"subnetGroupName\")\n                .subnetName(\"subnetName\")\n                .subnets(List.of(subnet))\n                .subnetType(SubnetType.ISOLATED)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport neptune \"github.com/aws-samples/dummy/awscdkawsneptune\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar subnet subnet\nvar subnetFilter subnetFilter\nvar vpc vpc\n\nsubnetGroupProps := &subnetGroupProps{\n\tvpc: vpc,\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tremovalPolicy: cdk.removalPolicy_DESTROY,\n\tsubnetGroupName: jsii.String(\"subnetGroupName\"),\n\tvpcSubnets: &subnetSelection{\n\t\tavailabilityZones: []*string{\n\t\t\tjsii.String(\"availabilityZones\"),\n\t\t},\n\t\tonePerAz: jsii.Boolean(false),\n\t\tsubnetFilters: []*subnetFilter{\n\t\t\tsubnetFilter,\n\t\t},\n\t\tsubnetGroupName: jsii.String(\"subnetGroupName\"),\n\t\tsubnetName: jsii.String(\"subnetName\"),\n\t\tsubnets: []iSubnet{\n\t\t\tsubnet,\n\t\t},\n\t\tsubnetType: ec2.subnetType_ISOLATED,\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\nconst subnetGroupProps: neptune.SubnetGroupProps = {\n  vpc: vpc,\n\n  // the properties below are optional\n  description: 'description',\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  subnetGroupName: 'subnetGroupName',\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-neptune.SubnetGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.SubnetSelection",
        "@aws-cdk/aws-ec2.SubnetType",
        "@aws-cdk/aws-ec2.SubnetType#ISOLATED",
        "@aws-cdk/aws-neptune.SubnetGroupProps",
        "@aws-cdk/core.RemovalPolicy",
        "@aws-cdk/core.RemovalPolicy#DESTROY"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst subnetGroupProps: neptune.SubnetGroupProps = {\n  vpc: vpc,\n\n  // the properties below are optional\n  description: 'description',\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  subnetGroupName: 'subnetGroupName',\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 36,
        "91": 1,
        "130": 3,
        "153": 4,
        "169": 4,
        "192": 3,
        "193": 2,
        "194": 4,
        "225": 4,
        "242": 4,
        "243": 4,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "780113decae10257136f1ed67467db221a2e2f1d1fa3bf5243e73046faac9bf3"
    }
  }
}