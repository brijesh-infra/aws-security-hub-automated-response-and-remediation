{
  "version": "2",
  "toolVersion": "1.63.2",
  "snippets": {
    "de64d7c8326ba266b6e197ca4b8ad9974a0241fd6585558cad65f362fe7b1fcf": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_dms as dms",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.DMS;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.dms.*;",
          "version": "1"
        },
        "go": {
          "source": "import dms \"github.com/aws-samples/dummy/awscdkawsdms\"",
          "version": "1"
        },
        "$": {
          "source": "import * as dms from '@aws-cdk/aws-dms';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-dms"
        },
        "field": {
          "field": "markdown",
          "line": 18
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as dms from '@aws-cdk/aws-dms';",
      "syntaxKindCounter": {
        "10": 1,
        "75": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "65d5ace6b54f7405a71712ba9c32e97d7881b47a0961bb6f41fb2fcc55904a21": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ncfn_certificate = dms.CfnCertificate(self, \"MyCfnCertificate\",\n    certificate_identifier=\"certificateIdentifier\",\n    certificate_pem=\"certificatePem\",\n    certificate_wallet=\"certificateWallet\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nCfnCertificate cfnCertificate = new CfnCertificate(this, \"MyCfnCertificate\", new CfnCertificateProps {\n    CertificateIdentifier = \"certificateIdentifier\",\n    CertificatePem = \"certificatePem\",\n    CertificateWallet = \"certificateWallet\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nCfnCertificate cfnCertificate = CfnCertificate.Builder.create(this, \"MyCfnCertificate\")\n        .certificateIdentifier(\"certificateIdentifier\")\n        .certificatePem(\"certificatePem\")\n        .certificateWallet(\"certificateWallet\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ncfnCertificate := dms.NewCfnCertificate(this, jsii.String(\"MyCfnCertificate\"), &cfnCertificateProps{\n\tcertificateIdentifier: jsii.String(\"certificateIdentifier\"),\n\tcertificatePem: jsii.String(\"certificatePem\"),\n\tcertificateWallet: jsii.String(\"certificateWallet\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst cfnCertificate = new dms.CfnCertificate(this, 'MyCfnCertificate', /* all optional props */ {\n  certificateIdentifier: 'certificateIdentifier',\n  certificatePem: 'certificatePem',\n  certificateWallet: 'certificateWallet',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnCertificate"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnCertificate",
        "@aws-cdk/aws-dms.CfnCertificateProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCertificate = new dms.CfnCertificate(this, 'MyCfnCertificate', /* all optional props */ {\n  certificateIdentifier: 'certificateIdentifier',\n  certificatePem: 'certificatePem',\n  certificateWallet: 'certificateWallet',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "30fd881987b7142ca13f2e0c14a9226977fc9afc9238bf0b62763a3f833ea730"
    },
    "03df4cb3c52713cbc433442260c4fe887ab4eb190a46cccac100c6253750df61": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ncfn_certificate_props = dms.CfnCertificateProps(\n    certificate_identifier=\"certificateIdentifier\",\n    certificate_pem=\"certificatePem\",\n    certificate_wallet=\"certificateWallet\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nCfnCertificateProps cfnCertificateProps = new CfnCertificateProps {\n    CertificateIdentifier = \"certificateIdentifier\",\n    CertificatePem = \"certificatePem\",\n    CertificateWallet = \"certificateWallet\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nCfnCertificateProps cfnCertificateProps = CfnCertificateProps.builder()\n        .certificateIdentifier(\"certificateIdentifier\")\n        .certificatePem(\"certificatePem\")\n        .certificateWallet(\"certificateWallet\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ncfnCertificateProps := &cfnCertificateProps{\n\tcertificateIdentifier: jsii.String(\"certificateIdentifier\"),\n\tcertificatePem: jsii.String(\"certificatePem\"),\n\tcertificateWallet: jsii.String(\"certificateWallet\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst cfnCertificateProps: dms.CfnCertificateProps = {\n  certificateIdentifier: 'certificateIdentifier',\n  certificatePem: 'certificatePem',\n  certificateWallet: 'certificateWallet',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnCertificateProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnCertificateProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCertificateProps: dms.CfnCertificateProps = {\n  certificateIdentifier: 'certificateIdentifier',\n  certificatePem: 'certificatePem',\n  certificateWallet: 'certificateWallet',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "f9ff464caea47eed7a407cb7d01f5e679e2da08af88aeb75f4f71e1427c1bf77"
    },
    "f46a62ce33c69075cdb7a3d70b4bd4cbd057cf2fe07aba33b1c17f6a59f916fa": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ncfn_endpoint = dms.CfnEndpoint(self, \"MyCfnEndpoint\",\n    endpoint_type=\"endpointType\",\n    engine_name=\"engineName\",\n\n    # the properties below are optional\n    certificate_arn=\"certificateArn\",\n    database_name=\"databaseName\",\n    doc_db_settings=dms.CfnEndpoint.DocDbSettingsProperty(\n        docs_to_investigate=123,\n        extract_doc_id=False,\n        nesting_level=\"nestingLevel\",\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\"\n    ),\n    dynamo_db_settings=dms.CfnEndpoint.DynamoDbSettingsProperty(\n        service_access_role_arn=\"serviceAccessRoleArn\"\n    ),\n    elasticsearch_settings=dms.CfnEndpoint.ElasticsearchSettingsProperty(\n        endpoint_uri=\"endpointUri\",\n        error_retry_duration=123,\n        full_load_error_percentage=123,\n        service_access_role_arn=\"serviceAccessRoleArn\"\n    ),\n    endpoint_identifier=\"endpointIdentifier\",\n    extra_connection_attributes=\"extraConnectionAttributes\",\n    gcp_my_sql_settings=dms.CfnEndpoint.GcpMySQLSettingsProperty(\n        after_connect_script=\"afterConnectScript\",\n        clean_source_metadata_on_mismatch=False,\n        database_name=\"databaseName\",\n        events_poll_interval=123,\n        max_file_size=123,\n        parallel_load_threads=123,\n        password=\"password\",\n        port=123,\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        server_name=\"serverName\",\n        server_timezone=\"serverTimezone\",\n        username=\"username\"\n    ),\n    ibm_db2_settings=dms.CfnEndpoint.IbmDb2SettingsProperty(\n        current_lsn=\"currentLsn\",\n        max_kBytes_per_read=123,\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        set_data_capture_changes=False\n    ),\n    kafka_settings=dms.CfnEndpoint.KafkaSettingsProperty(\n        broker=\"broker\",\n        include_control_details=False,\n        include_null_and_empty=False,\n        include_partition_value=False,\n        include_table_alter_operations=False,\n        include_transaction_details=False,\n        message_format=\"messageFormat\",\n        message_max_bytes=123,\n        no_hex_prefix=False,\n        partition_include_schema_table=False,\n        sasl_password=\"saslPassword\",\n        sasl_user_name=\"saslUserName\",\n        security_protocol=\"securityProtocol\",\n        ssl_ca_certificate_arn=\"sslCaCertificateArn\",\n        ssl_client_certificate_arn=\"sslClientCertificateArn\",\n        ssl_client_key_arn=\"sslClientKeyArn\",\n        ssl_client_key_password=\"sslClientKeyPassword\",\n        topic=\"topic\"\n    ),\n    kinesis_settings=dms.CfnEndpoint.KinesisSettingsProperty(\n        include_control_details=False,\n        include_null_and_empty=False,\n        include_partition_value=False,\n        include_table_alter_operations=False,\n        include_transaction_details=False,\n        message_format=\"messageFormat\",\n        no_hex_prefix=False,\n        partition_include_schema_table=False,\n        service_access_role_arn=\"serviceAccessRoleArn\",\n        stream_arn=\"streamArn\"\n    ),\n    kms_key_id=\"kmsKeyId\",\n    microsoft_sql_server_settings=dms.CfnEndpoint.MicrosoftSqlServerSettingsProperty(\n        bcp_packet_size=123,\n        control_tables_file_group=\"controlTablesFileGroup\",\n        query_single_always_on_node=False,\n        read_backup_only=False,\n        safeguard_policy=\"safeguardPolicy\",\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        use_bcp_full_load=False,\n        use_third_party_backup_device=False\n    ),\n    mongo_db_settings=dms.CfnEndpoint.MongoDbSettingsProperty(\n        auth_mechanism=\"authMechanism\",\n        auth_source=\"authSource\",\n        auth_type=\"authType\",\n        database_name=\"databaseName\",\n        docs_to_investigate=\"docsToInvestigate\",\n        extract_doc_id=\"extractDocId\",\n        nesting_level=\"nestingLevel\",\n        password=\"password\",\n        port=123,\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        server_name=\"serverName\",\n        username=\"username\"\n    ),\n    my_sql_settings=dms.CfnEndpoint.MySqlSettingsProperty(\n        after_connect_script=\"afterConnectScript\",\n        clean_source_metadata_on_mismatch=False,\n        events_poll_interval=123,\n        max_file_size=123,\n        parallel_load_threads=123,\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        server_timezone=\"serverTimezone\",\n        target_db_type=\"targetDbType\"\n    ),\n    neptune_settings=dms.CfnEndpoint.NeptuneSettingsProperty(\n        error_retry_duration=123,\n        iam_auth_enabled=False,\n        max_file_size=123,\n        max_retry_count=123,\n        s3_bucket_folder=\"s3BucketFolder\",\n        s3_bucket_name=\"s3BucketName\",\n        service_access_role_arn=\"serviceAccessRoleArn\"\n    ),\n    oracle_settings=dms.CfnEndpoint.OracleSettingsProperty(\n        access_alternate_directly=False,\n        additional_archived_log_dest_id=123,\n        add_supplemental_logging=False,\n        allow_select_nested_tables=False,\n        archived_log_dest_id=123,\n        archived_logs_only=False,\n        asm_password=\"asmPassword\",\n        asm_server=\"asmServer\",\n        asm_user=\"asmUser\",\n        char_length_semantics=\"charLengthSemantics\",\n        direct_path_no_log=False,\n        direct_path_parallel_load=False,\n        enable_homogenous_tablespace=False,\n        extra_archived_log_dest_ids=[123],\n        fail_tasks_on_lob_truncation=False,\n        number_datatype_scale=123,\n        oracle_path_prefix=\"oraclePathPrefix\",\n        parallel_asm_read_threads=123,\n        read_ahead_blocks=123,\n        read_table_space_name=False,\n        replace_path_prefix=False,\n        retry_interval=123,\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_oracle_asm_access_role_arn=\"secretsManagerOracleAsmAccessRoleArn\",\n        secrets_manager_oracle_asm_secret_id=\"secretsManagerOracleAsmSecretId\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        security_db_encryption=\"securityDbEncryption\",\n        security_db_encryption_name=\"securityDbEncryptionName\",\n        spatial_data_option_to_geo_json_function_name=\"spatialDataOptionToGeoJsonFunctionName\",\n        standby_delay_time=123,\n        use_alternate_folder_for_online=False,\n        use_bFile=False,\n        use_direct_path_full_load=False,\n        use_logminer_reader=False,\n        use_path_prefix=\"usePathPrefix\"\n    ),\n    password=\"password\",\n    port=123,\n    postgre_sql_settings=dms.CfnEndpoint.PostgreSqlSettingsProperty(\n        after_connect_script=\"afterConnectScript\",\n        capture_ddls=False,\n        ddl_artifacts_schema=\"ddlArtifactsSchema\",\n        execute_timeout=123,\n        fail_tasks_on_lob_truncation=False,\n        heartbeat_enable=False,\n        heartbeat_frequency=123,\n        heartbeat_schema=\"heartbeatSchema\",\n        max_file_size=123,\n        plugin_name=\"pluginName\",\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        slot_name=\"slotName\"\n    ),\n    redis_settings=dms.CfnEndpoint.RedisSettingsProperty(\n        auth_password=\"authPassword\",\n        auth_type=\"authType\",\n        auth_user_name=\"authUserName\",\n        port=123,\n        server_name=\"serverName\",\n        ssl_ca_certificate_arn=\"sslCaCertificateArn\",\n        ssl_security_protocol=\"sslSecurityProtocol\"\n    ),\n    redshift_settings=dms.CfnEndpoint.RedshiftSettingsProperty(\n        accept_any_date=False,\n        after_connect_script=\"afterConnectScript\",\n        bucket_folder=\"bucketFolder\",\n        bucket_name=\"bucketName\",\n        case_sensitive_names=False,\n        comp_update=False,\n        connection_timeout=123,\n        date_format=\"dateFormat\",\n        empty_as_null=False,\n        encryption_mode=\"encryptionMode\",\n        explicit_ids=False,\n        file_transfer_upload_streams=123,\n        load_timeout=123,\n        max_file_size=123,\n        remove_quotes=False,\n        replace_chars=\"replaceChars\",\n        replace_invalid_chars=\"replaceInvalidChars\",\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        server_side_encryption_kms_key_id=\"serverSideEncryptionKmsKeyId\",\n        service_access_role_arn=\"serviceAccessRoleArn\",\n        time_format=\"timeFormat\",\n        trim_blanks=False,\n        truncate_columns=False,\n        write_buffer_size=123\n    ),\n    resource_identifier=\"resourceIdentifier\",\n    s3_settings=dms.CfnEndpoint.S3SettingsProperty(\n        add_column_name=False,\n        bucket_folder=\"bucketFolder\",\n        bucket_name=\"bucketName\",\n        canned_acl_for_objects=\"cannedAclForObjects\",\n        cdc_inserts_and_updates=False,\n        cdc_inserts_only=False,\n        cdc_max_batch_interval=123,\n        cdc_min_file_size=123,\n        cdc_path=\"cdcPath\",\n        compression_type=\"compressionType\",\n        csv_delimiter=\"csvDelimiter\",\n        csv_no_sup_value=\"csvNoSupValue\",\n        csv_null_value=\"csvNullValue\",\n        csv_row_delimiter=\"csvRowDelimiter\",\n        data_format=\"dataFormat\",\n        data_page_size=123,\n        date_partition_delimiter=\"datePartitionDelimiter\",\n        date_partition_enabled=False,\n        date_partition_sequence=\"datePartitionSequence\",\n        date_partition_timezone=\"datePartitionTimezone\",\n        dict_page_size_limit=123,\n        enable_statistics=False,\n        encoding_type=\"encodingType\",\n        encryption_mode=\"encryptionMode\",\n        external_table_definition=\"externalTableDefinition\",\n        ignore_header_rows=123,\n        include_op_for_full_load=False,\n        max_file_size=123,\n        parquet_timestamp_in_millisecond=False,\n        parquet_version=\"parquetVersion\",\n        preserve_transactions=False,\n        rfc4180=False,\n        row_group_length=123,\n        server_side_encryption_kms_key_id=\"serverSideEncryptionKmsKeyId\",\n        service_access_role_arn=\"serviceAccessRoleArn\",\n        timestamp_column_name=\"timestampColumnName\",\n        use_csv_no_sup_value=False,\n        use_task_start_time_for_full_load_timestamp=False\n    ),\n    server_name=\"serverName\",\n    ssl_mode=\"sslMode\",\n    sybase_settings=dms.CfnEndpoint.SybaseSettingsProperty(\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    username=\"username\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nCfnEndpoint cfnEndpoint = new CfnEndpoint(this, \"MyCfnEndpoint\", new CfnEndpointProps {\n    EndpointType = \"endpointType\",\n    EngineName = \"engineName\",\n\n    // the properties below are optional\n    CertificateArn = \"certificateArn\",\n    DatabaseName = \"databaseName\",\n    DocDbSettings = new DocDbSettingsProperty {\n        DocsToInvestigate = 123,\n        ExtractDocId = false,\n        NestingLevel = \"nestingLevel\",\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\"\n    },\n    DynamoDbSettings = new DynamoDbSettingsProperty {\n        ServiceAccessRoleArn = \"serviceAccessRoleArn\"\n    },\n    ElasticsearchSettings = new ElasticsearchSettingsProperty {\n        EndpointUri = \"endpointUri\",\n        ErrorRetryDuration = 123,\n        FullLoadErrorPercentage = 123,\n        ServiceAccessRoleArn = \"serviceAccessRoleArn\"\n    },\n    EndpointIdentifier = \"endpointIdentifier\",\n    ExtraConnectionAttributes = \"extraConnectionAttributes\",\n    GcpMySqlSettings = new GcpMySQLSettingsProperty {\n        AfterConnectScript = \"afterConnectScript\",\n        CleanSourceMetadataOnMismatch = false,\n        DatabaseName = \"databaseName\",\n        EventsPollInterval = 123,\n        MaxFileSize = 123,\n        ParallelLoadThreads = 123,\n        Password = \"password\",\n        Port = 123,\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        ServerName = \"serverName\",\n        ServerTimezone = \"serverTimezone\",\n        Username = \"username\"\n    },\n    IbmDb2Settings = new IbmDb2SettingsProperty {\n        CurrentLsn = \"currentLsn\",\n        MaxKBytesPerRead = 123,\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        SetDataCaptureChanges = false\n    },\n    KafkaSettings = new KafkaSettingsProperty {\n        Broker = \"broker\",\n        IncludeControlDetails = false,\n        IncludeNullAndEmpty = false,\n        IncludePartitionValue = false,\n        IncludeTableAlterOperations = false,\n        IncludeTransactionDetails = false,\n        MessageFormat = \"messageFormat\",\n        MessageMaxBytes = 123,\n        NoHexPrefix = false,\n        PartitionIncludeSchemaTable = false,\n        SaslPassword = \"saslPassword\",\n        SaslUserName = \"saslUserName\",\n        SecurityProtocol = \"securityProtocol\",\n        SslCaCertificateArn = \"sslCaCertificateArn\",\n        SslClientCertificateArn = \"sslClientCertificateArn\",\n        SslClientKeyArn = \"sslClientKeyArn\",\n        SslClientKeyPassword = \"sslClientKeyPassword\",\n        Topic = \"topic\"\n    },\n    KinesisSettings = new KinesisSettingsProperty {\n        IncludeControlDetails = false,\n        IncludeNullAndEmpty = false,\n        IncludePartitionValue = false,\n        IncludeTableAlterOperations = false,\n        IncludeTransactionDetails = false,\n        MessageFormat = \"messageFormat\",\n        NoHexPrefix = false,\n        PartitionIncludeSchemaTable = false,\n        ServiceAccessRoleArn = \"serviceAccessRoleArn\",\n        StreamArn = \"streamArn\"\n    },\n    KmsKeyId = \"kmsKeyId\",\n    MicrosoftSqlServerSettings = new MicrosoftSqlServerSettingsProperty {\n        BcpPacketSize = 123,\n        ControlTablesFileGroup = \"controlTablesFileGroup\",\n        QuerySingleAlwaysOnNode = false,\n        ReadBackupOnly = false,\n        SafeguardPolicy = \"safeguardPolicy\",\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        UseBcpFullLoad = false,\n        UseThirdPartyBackupDevice = false\n    },\n    MongoDbSettings = new MongoDbSettingsProperty {\n        AuthMechanism = \"authMechanism\",\n        AuthSource = \"authSource\",\n        AuthType = \"authType\",\n        DatabaseName = \"databaseName\",\n        DocsToInvestigate = \"docsToInvestigate\",\n        ExtractDocId = \"extractDocId\",\n        NestingLevel = \"nestingLevel\",\n        Password = \"password\",\n        Port = 123,\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        ServerName = \"serverName\",\n        Username = \"username\"\n    },\n    MySqlSettings = new MySqlSettingsProperty {\n        AfterConnectScript = \"afterConnectScript\",\n        CleanSourceMetadataOnMismatch = false,\n        EventsPollInterval = 123,\n        MaxFileSize = 123,\n        ParallelLoadThreads = 123,\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        ServerTimezone = \"serverTimezone\",\n        TargetDbType = \"targetDbType\"\n    },\n    NeptuneSettings = new NeptuneSettingsProperty {\n        ErrorRetryDuration = 123,\n        IamAuthEnabled = false,\n        MaxFileSize = 123,\n        MaxRetryCount = 123,\n        S3BucketFolder = \"s3BucketFolder\",\n        S3BucketName = \"s3BucketName\",\n        ServiceAccessRoleArn = \"serviceAccessRoleArn\"\n    },\n    OracleSettings = new OracleSettingsProperty {\n        AccessAlternateDirectly = false,\n        AdditionalArchivedLogDestId = 123,\n        AddSupplementalLogging = false,\n        AllowSelectNestedTables = false,\n        ArchivedLogDestId = 123,\n        ArchivedLogsOnly = false,\n        AsmPassword = \"asmPassword\",\n        AsmServer = \"asmServer\",\n        AsmUser = \"asmUser\",\n        CharLengthSemantics = \"charLengthSemantics\",\n        DirectPathNoLog = false,\n        DirectPathParallelLoad = false,\n        EnableHomogenousTablespace = false,\n        ExtraArchivedLogDestIds = new [] { 123 },\n        FailTasksOnLobTruncation = false,\n        NumberDatatypeScale = 123,\n        OraclePathPrefix = \"oraclePathPrefix\",\n        ParallelAsmReadThreads = 123,\n        ReadAheadBlocks = 123,\n        ReadTableSpaceName = false,\n        ReplacePathPrefix = false,\n        RetryInterval = 123,\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerOracleAsmAccessRoleArn = \"secretsManagerOracleAsmAccessRoleArn\",\n        SecretsManagerOracleAsmSecretId = \"secretsManagerOracleAsmSecretId\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        SecurityDbEncryption = \"securityDbEncryption\",\n        SecurityDbEncryptionName = \"securityDbEncryptionName\",\n        SpatialDataOptionToGeoJsonFunctionName = \"spatialDataOptionToGeoJsonFunctionName\",\n        StandbyDelayTime = 123,\n        UseAlternateFolderForOnline = false,\n        UseBFile = false,\n        UseDirectPathFullLoad = false,\n        UseLogminerReader = false,\n        UsePathPrefix = \"usePathPrefix\"\n    },\n    Password = \"password\",\n    Port = 123,\n    PostgreSqlSettings = new PostgreSqlSettingsProperty {\n        AfterConnectScript = \"afterConnectScript\",\n        CaptureDdls = false,\n        DdlArtifactsSchema = \"ddlArtifactsSchema\",\n        ExecuteTimeout = 123,\n        FailTasksOnLobTruncation = false,\n        HeartbeatEnable = false,\n        HeartbeatFrequency = 123,\n        HeartbeatSchema = \"heartbeatSchema\",\n        MaxFileSize = 123,\n        PluginName = \"pluginName\",\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        SlotName = \"slotName\"\n    },\n    RedisSettings = new RedisSettingsProperty {\n        AuthPassword = \"authPassword\",\n        AuthType = \"authType\",\n        AuthUserName = \"authUserName\",\n        Port = 123,\n        ServerName = \"serverName\",\n        SslCaCertificateArn = \"sslCaCertificateArn\",\n        SslSecurityProtocol = \"sslSecurityProtocol\"\n    },\n    RedshiftSettings = new RedshiftSettingsProperty {\n        AcceptAnyDate = false,\n        AfterConnectScript = \"afterConnectScript\",\n        BucketFolder = \"bucketFolder\",\n        BucketName = \"bucketName\",\n        CaseSensitiveNames = false,\n        CompUpdate = false,\n        ConnectionTimeout = 123,\n        DateFormat = \"dateFormat\",\n        EmptyAsNull = false,\n        EncryptionMode = \"encryptionMode\",\n        ExplicitIds = false,\n        FileTransferUploadStreams = 123,\n        LoadTimeout = 123,\n        MaxFileSize = 123,\n        RemoveQuotes = false,\n        ReplaceChars = \"replaceChars\",\n        ReplaceInvalidChars = \"replaceInvalidChars\",\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        ServerSideEncryptionKmsKeyId = \"serverSideEncryptionKmsKeyId\",\n        ServiceAccessRoleArn = \"serviceAccessRoleArn\",\n        TimeFormat = \"timeFormat\",\n        TrimBlanks = false,\n        TruncateColumns = false,\n        WriteBufferSize = 123\n    },\n    ResourceIdentifier = \"resourceIdentifier\",\n    S3Settings = new S3SettingsProperty {\n        AddColumnName = false,\n        BucketFolder = \"bucketFolder\",\n        BucketName = \"bucketName\",\n        CannedAclForObjects = \"cannedAclForObjects\",\n        CdcInsertsAndUpdates = false,\n        CdcInsertsOnly = false,\n        CdcMaxBatchInterval = 123,\n        CdcMinFileSize = 123,\n        CdcPath = \"cdcPath\",\n        CompressionType = \"compressionType\",\n        CsvDelimiter = \"csvDelimiter\",\n        CsvNoSupValue = \"csvNoSupValue\",\n        CsvNullValue = \"csvNullValue\",\n        CsvRowDelimiter = \"csvRowDelimiter\",\n        DataFormat = \"dataFormat\",\n        DataPageSize = 123,\n        DatePartitionDelimiter = \"datePartitionDelimiter\",\n        DatePartitionEnabled = false,\n        DatePartitionSequence = \"datePartitionSequence\",\n        DatePartitionTimezone = \"datePartitionTimezone\",\n        DictPageSizeLimit = 123,\n        EnableStatistics = false,\n        EncodingType = \"encodingType\",\n        EncryptionMode = \"encryptionMode\",\n        ExternalTableDefinition = \"externalTableDefinition\",\n        IgnoreHeaderRows = 123,\n        IncludeOpForFullLoad = false,\n        MaxFileSize = 123,\n        ParquetTimestampInMillisecond = false,\n        ParquetVersion = \"parquetVersion\",\n        PreserveTransactions = false,\n        Rfc4180 = false,\n        RowGroupLength = 123,\n        ServerSideEncryptionKmsKeyId = \"serverSideEncryptionKmsKeyId\",\n        ServiceAccessRoleArn = \"serviceAccessRoleArn\",\n        TimestampColumnName = \"timestampColumnName\",\n        UseCsvNoSupValue = false,\n        UseTaskStartTimeForFullLoadTimestamp = false\n    },\n    ServerName = \"serverName\",\n    SslMode = \"sslMode\",\n    SybaseSettings = new SybaseSettingsProperty {\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Username = \"username\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nCfnEndpoint cfnEndpoint = CfnEndpoint.Builder.create(this, \"MyCfnEndpoint\")\n        .endpointType(\"endpointType\")\n        .engineName(\"engineName\")\n\n        // the properties below are optional\n        .certificateArn(\"certificateArn\")\n        .databaseName(\"databaseName\")\n        .docDbSettings(DocDbSettingsProperty.builder()\n                .docsToInvestigate(123)\n                .extractDocId(false)\n                .nestingLevel(\"nestingLevel\")\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .build())\n        .dynamoDbSettings(DynamoDbSettingsProperty.builder()\n                .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n                .build())\n        .elasticsearchSettings(ElasticsearchSettingsProperty.builder()\n                .endpointUri(\"endpointUri\")\n                .errorRetryDuration(123)\n                .fullLoadErrorPercentage(123)\n                .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n                .build())\n        .endpointIdentifier(\"endpointIdentifier\")\n        .extraConnectionAttributes(\"extraConnectionAttributes\")\n        .gcpMySqlSettings(GcpMySQLSettingsProperty.builder()\n                .afterConnectScript(\"afterConnectScript\")\n                .cleanSourceMetadataOnMismatch(false)\n                .databaseName(\"databaseName\")\n                .eventsPollInterval(123)\n                .maxFileSize(123)\n                .parallelLoadThreads(123)\n                .password(\"password\")\n                .port(123)\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .serverName(\"serverName\")\n                .serverTimezone(\"serverTimezone\")\n                .username(\"username\")\n                .build())\n        .ibmDb2Settings(IbmDb2SettingsProperty.builder()\n                .currentLsn(\"currentLsn\")\n                .maxKBytesPerRead(123)\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .setDataCaptureChanges(false)\n                .build())\n        .kafkaSettings(KafkaSettingsProperty.builder()\n                .broker(\"broker\")\n                .includeControlDetails(false)\n                .includeNullAndEmpty(false)\n                .includePartitionValue(false)\n                .includeTableAlterOperations(false)\n                .includeTransactionDetails(false)\n                .messageFormat(\"messageFormat\")\n                .messageMaxBytes(123)\n                .noHexPrefix(false)\n                .partitionIncludeSchemaTable(false)\n                .saslPassword(\"saslPassword\")\n                .saslUserName(\"saslUserName\")\n                .securityProtocol(\"securityProtocol\")\n                .sslCaCertificateArn(\"sslCaCertificateArn\")\n                .sslClientCertificateArn(\"sslClientCertificateArn\")\n                .sslClientKeyArn(\"sslClientKeyArn\")\n                .sslClientKeyPassword(\"sslClientKeyPassword\")\n                .topic(\"topic\")\n                .build())\n        .kinesisSettings(KinesisSettingsProperty.builder()\n                .includeControlDetails(false)\n                .includeNullAndEmpty(false)\n                .includePartitionValue(false)\n                .includeTableAlterOperations(false)\n                .includeTransactionDetails(false)\n                .messageFormat(\"messageFormat\")\n                .noHexPrefix(false)\n                .partitionIncludeSchemaTable(false)\n                .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n                .streamArn(\"streamArn\")\n                .build())\n        .kmsKeyId(\"kmsKeyId\")\n        .microsoftSqlServerSettings(MicrosoftSqlServerSettingsProperty.builder()\n                .bcpPacketSize(123)\n                .controlTablesFileGroup(\"controlTablesFileGroup\")\n                .querySingleAlwaysOnNode(false)\n                .readBackupOnly(false)\n                .safeguardPolicy(\"safeguardPolicy\")\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .useBcpFullLoad(false)\n                .useThirdPartyBackupDevice(false)\n                .build())\n        .mongoDbSettings(MongoDbSettingsProperty.builder()\n                .authMechanism(\"authMechanism\")\n                .authSource(\"authSource\")\n                .authType(\"authType\")\n                .databaseName(\"databaseName\")\n                .docsToInvestigate(\"docsToInvestigate\")\n                .extractDocId(\"extractDocId\")\n                .nestingLevel(\"nestingLevel\")\n                .password(\"password\")\n                .port(123)\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .serverName(\"serverName\")\n                .username(\"username\")\n                .build())\n        .mySqlSettings(MySqlSettingsProperty.builder()\n                .afterConnectScript(\"afterConnectScript\")\n                .cleanSourceMetadataOnMismatch(false)\n                .eventsPollInterval(123)\n                .maxFileSize(123)\n                .parallelLoadThreads(123)\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .serverTimezone(\"serverTimezone\")\n                .targetDbType(\"targetDbType\")\n                .build())\n        .neptuneSettings(NeptuneSettingsProperty.builder()\n                .errorRetryDuration(123)\n                .iamAuthEnabled(false)\n                .maxFileSize(123)\n                .maxRetryCount(123)\n                .s3BucketFolder(\"s3BucketFolder\")\n                .s3BucketName(\"s3BucketName\")\n                .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n                .build())\n        .oracleSettings(OracleSettingsProperty.builder()\n                .accessAlternateDirectly(false)\n                .additionalArchivedLogDestId(123)\n                .addSupplementalLogging(false)\n                .allowSelectNestedTables(false)\n                .archivedLogDestId(123)\n                .archivedLogsOnly(false)\n                .asmPassword(\"asmPassword\")\n                .asmServer(\"asmServer\")\n                .asmUser(\"asmUser\")\n                .charLengthSemantics(\"charLengthSemantics\")\n                .directPathNoLog(false)\n                .directPathParallelLoad(false)\n                .enableHomogenousTablespace(false)\n                .extraArchivedLogDestIds(List.of(123))\n                .failTasksOnLobTruncation(false)\n                .numberDatatypeScale(123)\n                .oraclePathPrefix(\"oraclePathPrefix\")\n                .parallelAsmReadThreads(123)\n                .readAheadBlocks(123)\n                .readTableSpaceName(false)\n                .replacePathPrefix(false)\n                .retryInterval(123)\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerOracleAsmAccessRoleArn(\"secretsManagerOracleAsmAccessRoleArn\")\n                .secretsManagerOracleAsmSecretId(\"secretsManagerOracleAsmSecretId\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .securityDbEncryption(\"securityDbEncryption\")\n                .securityDbEncryptionName(\"securityDbEncryptionName\")\n                .spatialDataOptionToGeoJsonFunctionName(\"spatialDataOptionToGeoJsonFunctionName\")\n                .standbyDelayTime(123)\n                .useAlternateFolderForOnline(false)\n                .useBFile(false)\n                .useDirectPathFullLoad(false)\n                .useLogminerReader(false)\n                .usePathPrefix(\"usePathPrefix\")\n                .build())\n        .password(\"password\")\n        .port(123)\n        .postgreSqlSettings(PostgreSqlSettingsProperty.builder()\n                .afterConnectScript(\"afterConnectScript\")\n                .captureDdls(false)\n                .ddlArtifactsSchema(\"ddlArtifactsSchema\")\n                .executeTimeout(123)\n                .failTasksOnLobTruncation(false)\n                .heartbeatEnable(false)\n                .heartbeatFrequency(123)\n                .heartbeatSchema(\"heartbeatSchema\")\n                .maxFileSize(123)\n                .pluginName(\"pluginName\")\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .slotName(\"slotName\")\n                .build())\n        .redisSettings(RedisSettingsProperty.builder()\n                .authPassword(\"authPassword\")\n                .authType(\"authType\")\n                .authUserName(\"authUserName\")\n                .port(123)\n                .serverName(\"serverName\")\n                .sslCaCertificateArn(\"sslCaCertificateArn\")\n                .sslSecurityProtocol(\"sslSecurityProtocol\")\n                .build())\n        .redshiftSettings(RedshiftSettingsProperty.builder()\n                .acceptAnyDate(false)\n                .afterConnectScript(\"afterConnectScript\")\n                .bucketFolder(\"bucketFolder\")\n                .bucketName(\"bucketName\")\n                .caseSensitiveNames(false)\n                .compUpdate(false)\n                .connectionTimeout(123)\n                .dateFormat(\"dateFormat\")\n                .emptyAsNull(false)\n                .encryptionMode(\"encryptionMode\")\n                .explicitIds(false)\n                .fileTransferUploadStreams(123)\n                .loadTimeout(123)\n                .maxFileSize(123)\n                .removeQuotes(false)\n                .replaceChars(\"replaceChars\")\n                .replaceInvalidChars(\"replaceInvalidChars\")\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .serverSideEncryptionKmsKeyId(\"serverSideEncryptionKmsKeyId\")\n                .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n                .timeFormat(\"timeFormat\")\n                .trimBlanks(false)\n                .truncateColumns(false)\n                .writeBufferSize(123)\n                .build())\n        .resourceIdentifier(\"resourceIdentifier\")\n        .s3Settings(S3SettingsProperty.builder()\n                .addColumnName(false)\n                .bucketFolder(\"bucketFolder\")\n                .bucketName(\"bucketName\")\n                .cannedAclForObjects(\"cannedAclForObjects\")\n                .cdcInsertsAndUpdates(false)\n                .cdcInsertsOnly(false)\n                .cdcMaxBatchInterval(123)\n                .cdcMinFileSize(123)\n                .cdcPath(\"cdcPath\")\n                .compressionType(\"compressionType\")\n                .csvDelimiter(\"csvDelimiter\")\n                .csvNoSupValue(\"csvNoSupValue\")\n                .csvNullValue(\"csvNullValue\")\n                .csvRowDelimiter(\"csvRowDelimiter\")\n                .dataFormat(\"dataFormat\")\n                .dataPageSize(123)\n                .datePartitionDelimiter(\"datePartitionDelimiter\")\n                .datePartitionEnabled(false)\n                .datePartitionSequence(\"datePartitionSequence\")\n                .datePartitionTimezone(\"datePartitionTimezone\")\n                .dictPageSizeLimit(123)\n                .enableStatistics(false)\n                .encodingType(\"encodingType\")\n                .encryptionMode(\"encryptionMode\")\n                .externalTableDefinition(\"externalTableDefinition\")\n                .ignoreHeaderRows(123)\n                .includeOpForFullLoad(false)\n                .maxFileSize(123)\n                .parquetTimestampInMillisecond(false)\n                .parquetVersion(\"parquetVersion\")\n                .preserveTransactions(false)\n                .rfc4180(false)\n                .rowGroupLength(123)\n                .serverSideEncryptionKmsKeyId(\"serverSideEncryptionKmsKeyId\")\n                .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n                .timestampColumnName(\"timestampColumnName\")\n                .useCsvNoSupValue(false)\n                .useTaskStartTimeForFullLoadTimestamp(false)\n                .build())\n        .serverName(\"serverName\")\n        .sslMode(\"sslMode\")\n        .sybaseSettings(SybaseSettingsProperty.builder()\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .username(\"username\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ncfnEndpoint := dms.NewCfnEndpoint(this, jsii.String(\"MyCfnEndpoint\"), &cfnEndpointProps{\n\tendpointType: jsii.String(\"endpointType\"),\n\tengineName: jsii.String(\"engineName\"),\n\n\t// the properties below are optional\n\tcertificateArn: jsii.String(\"certificateArn\"),\n\tdatabaseName: jsii.String(\"databaseName\"),\n\tdocDbSettings: &docDbSettingsProperty{\n\t\tdocsToInvestigate: jsii.Number(123),\n\t\textractDocId: jsii.Boolean(false),\n\t\tnestingLevel: jsii.String(\"nestingLevel\"),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t},\n\tdynamoDbSettings: &dynamoDbSettingsProperty{\n\t\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\t},\n\telasticsearchSettings: &elasticsearchSettingsProperty{\n\t\tendpointUri: jsii.String(\"endpointUri\"),\n\t\terrorRetryDuration: jsii.Number(123),\n\t\tfullLoadErrorPercentage: jsii.Number(123),\n\t\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\t},\n\tendpointIdentifier: jsii.String(\"endpointIdentifier\"),\n\textraConnectionAttributes: jsii.String(\"extraConnectionAttributes\"),\n\tgcpMySqlSettings: &gcpMySQLSettingsProperty{\n\t\tafterConnectScript: jsii.String(\"afterConnectScript\"),\n\t\tcleanSourceMetadataOnMismatch: jsii.Boolean(false),\n\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\teventsPollInterval: jsii.Number(123),\n\t\tmaxFileSize: jsii.Number(123),\n\t\tparallelLoadThreads: jsii.Number(123),\n\t\tpassword: jsii.String(\"password\"),\n\t\tport: jsii.Number(123),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tserverName: jsii.String(\"serverName\"),\n\t\tserverTimezone: jsii.String(\"serverTimezone\"),\n\t\tusername: jsii.String(\"username\"),\n\t},\n\tibmDb2Settings: &ibmDb2SettingsProperty{\n\t\tcurrentLsn: jsii.String(\"currentLsn\"),\n\t\tmaxKBytesPerRead: jsii.Number(123),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tsetDataCaptureChanges: jsii.Boolean(false),\n\t},\n\tkafkaSettings: &kafkaSettingsProperty{\n\t\tbroker: jsii.String(\"broker\"),\n\t\tincludeControlDetails: jsii.Boolean(false),\n\t\tincludeNullAndEmpty: jsii.Boolean(false),\n\t\tincludePartitionValue: jsii.Boolean(false),\n\t\tincludeTableAlterOperations: jsii.Boolean(false),\n\t\tincludeTransactionDetails: jsii.Boolean(false),\n\t\tmessageFormat: jsii.String(\"messageFormat\"),\n\t\tmessageMaxBytes: jsii.Number(123),\n\t\tnoHexPrefix: jsii.Boolean(false),\n\t\tpartitionIncludeSchemaTable: jsii.Boolean(false),\n\t\tsaslPassword: jsii.String(\"saslPassword\"),\n\t\tsaslUserName: jsii.String(\"saslUserName\"),\n\t\tsecurityProtocol: jsii.String(\"securityProtocol\"),\n\t\tsslCaCertificateArn: jsii.String(\"sslCaCertificateArn\"),\n\t\tsslClientCertificateArn: jsii.String(\"sslClientCertificateArn\"),\n\t\tsslClientKeyArn: jsii.String(\"sslClientKeyArn\"),\n\t\tsslClientKeyPassword: jsii.String(\"sslClientKeyPassword\"),\n\t\ttopic: jsii.String(\"topic\"),\n\t},\n\tkinesisSettings: &kinesisSettingsProperty{\n\t\tincludeControlDetails: jsii.Boolean(false),\n\t\tincludeNullAndEmpty: jsii.Boolean(false),\n\t\tincludePartitionValue: jsii.Boolean(false),\n\t\tincludeTableAlterOperations: jsii.Boolean(false),\n\t\tincludeTransactionDetails: jsii.Boolean(false),\n\t\tmessageFormat: jsii.String(\"messageFormat\"),\n\t\tnoHexPrefix: jsii.Boolean(false),\n\t\tpartitionIncludeSchemaTable: jsii.Boolean(false),\n\t\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\t\tstreamArn: jsii.String(\"streamArn\"),\n\t},\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\tmicrosoftSqlServerSettings: &microsoftSqlServerSettingsProperty{\n\t\tbcpPacketSize: jsii.Number(123),\n\t\tcontrolTablesFileGroup: jsii.String(\"controlTablesFileGroup\"),\n\t\tquerySingleAlwaysOnNode: jsii.Boolean(false),\n\t\treadBackupOnly: jsii.Boolean(false),\n\t\tsafeguardPolicy: jsii.String(\"safeguardPolicy\"),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tuseBcpFullLoad: jsii.Boolean(false),\n\t\tuseThirdPartyBackupDevice: jsii.Boolean(false),\n\t},\n\tmongoDbSettings: &mongoDbSettingsProperty{\n\t\tauthMechanism: jsii.String(\"authMechanism\"),\n\t\tauthSource: jsii.String(\"authSource\"),\n\t\tauthType: jsii.String(\"authType\"),\n\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\tdocsToInvestigate: jsii.String(\"docsToInvestigate\"),\n\t\textractDocId: jsii.String(\"extractDocId\"),\n\t\tnestingLevel: jsii.String(\"nestingLevel\"),\n\t\tpassword: jsii.String(\"password\"),\n\t\tport: jsii.Number(123),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tserverName: jsii.String(\"serverName\"),\n\t\tusername: jsii.String(\"username\"),\n\t},\n\tmySqlSettings: &mySqlSettingsProperty{\n\t\tafterConnectScript: jsii.String(\"afterConnectScript\"),\n\t\tcleanSourceMetadataOnMismatch: jsii.Boolean(false),\n\t\teventsPollInterval: jsii.Number(123),\n\t\tmaxFileSize: jsii.Number(123),\n\t\tparallelLoadThreads: jsii.Number(123),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tserverTimezone: jsii.String(\"serverTimezone\"),\n\t\ttargetDbType: jsii.String(\"targetDbType\"),\n\t},\n\tneptuneSettings: &neptuneSettingsProperty{\n\t\terrorRetryDuration: jsii.Number(123),\n\t\tiamAuthEnabled: jsii.Boolean(false),\n\t\tmaxFileSize: jsii.Number(123),\n\t\tmaxRetryCount: jsii.Number(123),\n\t\ts3BucketFolder: jsii.String(\"s3BucketFolder\"),\n\t\ts3BucketName: jsii.String(\"s3BucketName\"),\n\t\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\t},\n\toracleSettings: &oracleSettingsProperty{\n\t\taccessAlternateDirectly: jsii.Boolean(false),\n\t\tadditionalArchivedLogDestId: jsii.Number(123),\n\t\taddSupplementalLogging: jsii.Boolean(false),\n\t\tallowSelectNestedTables: jsii.Boolean(false),\n\t\tarchivedLogDestId: jsii.Number(123),\n\t\tarchivedLogsOnly: jsii.Boolean(false),\n\t\tasmPassword: jsii.String(\"asmPassword\"),\n\t\tasmServer: jsii.String(\"asmServer\"),\n\t\tasmUser: jsii.String(\"asmUser\"),\n\t\tcharLengthSemantics: jsii.String(\"charLengthSemantics\"),\n\t\tdirectPathNoLog: jsii.Boolean(false),\n\t\tdirectPathParallelLoad: jsii.Boolean(false),\n\t\tenableHomogenousTablespace: jsii.Boolean(false),\n\t\textraArchivedLogDestIds: []interface{}{\n\t\t\tjsii.Number(123),\n\t\t},\n\t\tfailTasksOnLobTruncation: jsii.Boolean(false),\n\t\tnumberDatatypeScale: jsii.Number(123),\n\t\toraclePathPrefix: jsii.String(\"oraclePathPrefix\"),\n\t\tparallelAsmReadThreads: jsii.Number(123),\n\t\treadAheadBlocks: jsii.Number(123),\n\t\treadTableSpaceName: jsii.Boolean(false),\n\t\treplacePathPrefix: jsii.Boolean(false),\n\t\tretryInterval: jsii.Number(123),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerOracleAsmAccessRoleArn: jsii.String(\"secretsManagerOracleAsmAccessRoleArn\"),\n\t\tsecretsManagerOracleAsmSecretId: jsii.String(\"secretsManagerOracleAsmSecretId\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tsecurityDbEncryption: jsii.String(\"securityDbEncryption\"),\n\t\tsecurityDbEncryptionName: jsii.String(\"securityDbEncryptionName\"),\n\t\tspatialDataOptionToGeoJsonFunctionName: jsii.String(\"spatialDataOptionToGeoJsonFunctionName\"),\n\t\tstandbyDelayTime: jsii.Number(123),\n\t\tuseAlternateFolderForOnline: jsii.Boolean(false),\n\t\tuseBFile: jsii.Boolean(false),\n\t\tuseDirectPathFullLoad: jsii.Boolean(false),\n\t\tuseLogminerReader: jsii.Boolean(false),\n\t\tusePathPrefix: jsii.String(\"usePathPrefix\"),\n\t},\n\tpassword: jsii.String(\"password\"),\n\tport: jsii.Number(123),\n\tpostgreSqlSettings: &postgreSqlSettingsProperty{\n\t\tafterConnectScript: jsii.String(\"afterConnectScript\"),\n\t\tcaptureDdls: jsii.Boolean(false),\n\t\tddlArtifactsSchema: jsii.String(\"ddlArtifactsSchema\"),\n\t\texecuteTimeout: jsii.Number(123),\n\t\tfailTasksOnLobTruncation: jsii.Boolean(false),\n\t\theartbeatEnable: jsii.Boolean(false),\n\t\theartbeatFrequency: jsii.Number(123),\n\t\theartbeatSchema: jsii.String(\"heartbeatSchema\"),\n\t\tmaxFileSize: jsii.Number(123),\n\t\tpluginName: jsii.String(\"pluginName\"),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tslotName: jsii.String(\"slotName\"),\n\t},\n\tredisSettings: &redisSettingsProperty{\n\t\tauthPassword: jsii.String(\"authPassword\"),\n\t\tauthType: jsii.String(\"authType\"),\n\t\tauthUserName: jsii.String(\"authUserName\"),\n\t\tport: jsii.Number(123),\n\t\tserverName: jsii.String(\"serverName\"),\n\t\tsslCaCertificateArn: jsii.String(\"sslCaCertificateArn\"),\n\t\tsslSecurityProtocol: jsii.String(\"sslSecurityProtocol\"),\n\t},\n\tredshiftSettings: &redshiftSettingsProperty{\n\t\tacceptAnyDate: jsii.Boolean(false),\n\t\tafterConnectScript: jsii.String(\"afterConnectScript\"),\n\t\tbucketFolder: jsii.String(\"bucketFolder\"),\n\t\tbucketName: jsii.String(\"bucketName\"),\n\t\tcaseSensitiveNames: jsii.Boolean(false),\n\t\tcompUpdate: jsii.Boolean(false),\n\t\tconnectionTimeout: jsii.Number(123),\n\t\tdateFormat: jsii.String(\"dateFormat\"),\n\t\temptyAsNull: jsii.Boolean(false),\n\t\tencryptionMode: jsii.String(\"encryptionMode\"),\n\t\texplicitIds: jsii.Boolean(false),\n\t\tfileTransferUploadStreams: jsii.Number(123),\n\t\tloadTimeout: jsii.Number(123),\n\t\tmaxFileSize: jsii.Number(123),\n\t\tremoveQuotes: jsii.Boolean(false),\n\t\treplaceChars: jsii.String(\"replaceChars\"),\n\t\treplaceInvalidChars: jsii.String(\"replaceInvalidChars\"),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tserverSideEncryptionKmsKeyId: jsii.String(\"serverSideEncryptionKmsKeyId\"),\n\t\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\t\ttimeFormat: jsii.String(\"timeFormat\"),\n\t\ttrimBlanks: jsii.Boolean(false),\n\t\ttruncateColumns: jsii.Boolean(false),\n\t\twriteBufferSize: jsii.Number(123),\n\t},\n\tresourceIdentifier: jsii.String(\"resourceIdentifier\"),\n\ts3Settings: &s3SettingsProperty{\n\t\taddColumnName: jsii.Boolean(false),\n\t\tbucketFolder: jsii.String(\"bucketFolder\"),\n\t\tbucketName: jsii.String(\"bucketName\"),\n\t\tcannedAclForObjects: jsii.String(\"cannedAclForObjects\"),\n\t\tcdcInsertsAndUpdates: jsii.Boolean(false),\n\t\tcdcInsertsOnly: jsii.Boolean(false),\n\t\tcdcMaxBatchInterval: jsii.Number(123),\n\t\tcdcMinFileSize: jsii.Number(123),\n\t\tcdcPath: jsii.String(\"cdcPath\"),\n\t\tcompressionType: jsii.String(\"compressionType\"),\n\t\tcsvDelimiter: jsii.String(\"csvDelimiter\"),\n\t\tcsvNoSupValue: jsii.String(\"csvNoSupValue\"),\n\t\tcsvNullValue: jsii.String(\"csvNullValue\"),\n\t\tcsvRowDelimiter: jsii.String(\"csvRowDelimiter\"),\n\t\tdataFormat: jsii.String(\"dataFormat\"),\n\t\tdataPageSize: jsii.Number(123),\n\t\tdatePartitionDelimiter: jsii.String(\"datePartitionDelimiter\"),\n\t\tdatePartitionEnabled: jsii.Boolean(false),\n\t\tdatePartitionSequence: jsii.String(\"datePartitionSequence\"),\n\t\tdatePartitionTimezone: jsii.String(\"datePartitionTimezone\"),\n\t\tdictPageSizeLimit: jsii.Number(123),\n\t\tenableStatistics: jsii.Boolean(false),\n\t\tencodingType: jsii.String(\"encodingType\"),\n\t\tencryptionMode: jsii.String(\"encryptionMode\"),\n\t\texternalTableDefinition: jsii.String(\"externalTableDefinition\"),\n\t\tignoreHeaderRows: jsii.Number(123),\n\t\tincludeOpForFullLoad: jsii.Boolean(false),\n\t\tmaxFileSize: jsii.Number(123),\n\t\tparquetTimestampInMillisecond: jsii.Boolean(false),\n\t\tparquetVersion: jsii.String(\"parquetVersion\"),\n\t\tpreserveTransactions: jsii.Boolean(false),\n\t\trfc4180: jsii.Boolean(false),\n\t\trowGroupLength: jsii.Number(123),\n\t\tserverSideEncryptionKmsKeyId: jsii.String(\"serverSideEncryptionKmsKeyId\"),\n\t\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\t\ttimestampColumnName: jsii.String(\"timestampColumnName\"),\n\t\tuseCsvNoSupValue: jsii.Boolean(false),\n\t\tuseTaskStartTimeForFullLoadTimestamp: jsii.Boolean(false),\n\t},\n\tserverName: jsii.String(\"serverName\"),\n\tsslMode: jsii.String(\"sslMode\"),\n\tsybaseSettings: &sybaseSettingsProperty{\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tusername: jsii.String(\"username\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst cfnEndpoint = new dms.CfnEndpoint(this, 'MyCfnEndpoint', {\n  endpointType: 'endpointType',\n  engineName: 'engineName',\n\n  // the properties below are optional\n  certificateArn: 'certificateArn',\n  databaseName: 'databaseName',\n  docDbSettings: {\n    docsToInvestigate: 123,\n    extractDocId: false,\n    nestingLevel: 'nestingLevel',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n  },\n  dynamoDbSettings: {\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n  },\n  elasticsearchSettings: {\n    endpointUri: 'endpointUri',\n    errorRetryDuration: 123,\n    fullLoadErrorPercentage: 123,\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n  },\n  endpointIdentifier: 'endpointIdentifier',\n  extraConnectionAttributes: 'extraConnectionAttributes',\n  gcpMySqlSettings: {\n    afterConnectScript: 'afterConnectScript',\n    cleanSourceMetadataOnMismatch: false,\n    databaseName: 'databaseName',\n    eventsPollInterval: 123,\n    maxFileSize: 123,\n    parallelLoadThreads: 123,\n    password: 'password',\n    port: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverName: 'serverName',\n    serverTimezone: 'serverTimezone',\n    username: 'username',\n  },\n  ibmDb2Settings: {\n    currentLsn: 'currentLsn',\n    maxKBytesPerRead: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    setDataCaptureChanges: false,\n  },\n  kafkaSettings: {\n    broker: 'broker',\n    includeControlDetails: false,\n    includeNullAndEmpty: false,\n    includePartitionValue: false,\n    includeTableAlterOperations: false,\n    includeTransactionDetails: false,\n    messageFormat: 'messageFormat',\n    messageMaxBytes: 123,\n    noHexPrefix: false,\n    partitionIncludeSchemaTable: false,\n    saslPassword: 'saslPassword',\n    saslUserName: 'saslUserName',\n    securityProtocol: 'securityProtocol',\n    sslCaCertificateArn: 'sslCaCertificateArn',\n    sslClientCertificateArn: 'sslClientCertificateArn',\n    sslClientKeyArn: 'sslClientKeyArn',\n    sslClientKeyPassword: 'sslClientKeyPassword',\n    topic: 'topic',\n  },\n  kinesisSettings: {\n    includeControlDetails: false,\n    includeNullAndEmpty: false,\n    includePartitionValue: false,\n    includeTableAlterOperations: false,\n    includeTransactionDetails: false,\n    messageFormat: 'messageFormat',\n    noHexPrefix: false,\n    partitionIncludeSchemaTable: false,\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n    streamArn: 'streamArn',\n  },\n  kmsKeyId: 'kmsKeyId',\n  microsoftSqlServerSettings: {\n    bcpPacketSize: 123,\n    controlTablesFileGroup: 'controlTablesFileGroup',\n    querySingleAlwaysOnNode: false,\n    readBackupOnly: false,\n    safeguardPolicy: 'safeguardPolicy',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    useBcpFullLoad: false,\n    useThirdPartyBackupDevice: false,\n  },\n  mongoDbSettings: {\n    authMechanism: 'authMechanism',\n    authSource: 'authSource',\n    authType: 'authType',\n    databaseName: 'databaseName',\n    docsToInvestigate: 'docsToInvestigate',\n    extractDocId: 'extractDocId',\n    nestingLevel: 'nestingLevel',\n    password: 'password',\n    port: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverName: 'serverName',\n    username: 'username',\n  },\n  mySqlSettings: {\n    afterConnectScript: 'afterConnectScript',\n    cleanSourceMetadataOnMismatch: false,\n    eventsPollInterval: 123,\n    maxFileSize: 123,\n    parallelLoadThreads: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverTimezone: 'serverTimezone',\n    targetDbType: 'targetDbType',\n  },\n  neptuneSettings: {\n    errorRetryDuration: 123,\n    iamAuthEnabled: false,\n    maxFileSize: 123,\n    maxRetryCount: 123,\n    s3BucketFolder: 's3BucketFolder',\n    s3BucketName: 's3BucketName',\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n  },\n  oracleSettings: {\n    accessAlternateDirectly: false,\n    additionalArchivedLogDestId: 123,\n    addSupplementalLogging: false,\n    allowSelectNestedTables: false,\n    archivedLogDestId: 123,\n    archivedLogsOnly: false,\n    asmPassword: 'asmPassword',\n    asmServer: 'asmServer',\n    asmUser: 'asmUser',\n    charLengthSemantics: 'charLengthSemantics',\n    directPathNoLog: false,\n    directPathParallelLoad: false,\n    enableHomogenousTablespace: false,\n    extraArchivedLogDestIds: [123],\n    failTasksOnLobTruncation: false,\n    numberDatatypeScale: 123,\n    oraclePathPrefix: 'oraclePathPrefix',\n    parallelAsmReadThreads: 123,\n    readAheadBlocks: 123,\n    readTableSpaceName: false,\n    replacePathPrefix: false,\n    retryInterval: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerOracleAsmAccessRoleArn: 'secretsManagerOracleAsmAccessRoleArn',\n    secretsManagerOracleAsmSecretId: 'secretsManagerOracleAsmSecretId',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    securityDbEncryption: 'securityDbEncryption',\n    securityDbEncryptionName: 'securityDbEncryptionName',\n    spatialDataOptionToGeoJsonFunctionName: 'spatialDataOptionToGeoJsonFunctionName',\n    standbyDelayTime: 123,\n    useAlternateFolderForOnline: false,\n    useBFile: false,\n    useDirectPathFullLoad: false,\n    useLogminerReader: false,\n    usePathPrefix: 'usePathPrefix',\n  },\n  password: 'password',\n  port: 123,\n  postgreSqlSettings: {\n    afterConnectScript: 'afterConnectScript',\n    captureDdls: false,\n    ddlArtifactsSchema: 'ddlArtifactsSchema',\n    executeTimeout: 123,\n    failTasksOnLobTruncation: false,\n    heartbeatEnable: false,\n    heartbeatFrequency: 123,\n    heartbeatSchema: 'heartbeatSchema',\n    maxFileSize: 123,\n    pluginName: 'pluginName',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    slotName: 'slotName',\n  },\n  redisSettings: {\n    authPassword: 'authPassword',\n    authType: 'authType',\n    authUserName: 'authUserName',\n    port: 123,\n    serverName: 'serverName',\n    sslCaCertificateArn: 'sslCaCertificateArn',\n    sslSecurityProtocol: 'sslSecurityProtocol',\n  },\n  redshiftSettings: {\n    acceptAnyDate: false,\n    afterConnectScript: 'afterConnectScript',\n    bucketFolder: 'bucketFolder',\n    bucketName: 'bucketName',\n    caseSensitiveNames: false,\n    compUpdate: false,\n    connectionTimeout: 123,\n    dateFormat: 'dateFormat',\n    emptyAsNull: false,\n    encryptionMode: 'encryptionMode',\n    explicitIds: false,\n    fileTransferUploadStreams: 123,\n    loadTimeout: 123,\n    maxFileSize: 123,\n    removeQuotes: false,\n    replaceChars: 'replaceChars',\n    replaceInvalidChars: 'replaceInvalidChars',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverSideEncryptionKmsKeyId: 'serverSideEncryptionKmsKeyId',\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n    timeFormat: 'timeFormat',\n    trimBlanks: false,\n    truncateColumns: false,\n    writeBufferSize: 123,\n  },\n  resourceIdentifier: 'resourceIdentifier',\n  s3Settings: {\n    addColumnName: false,\n    bucketFolder: 'bucketFolder',\n    bucketName: 'bucketName',\n    cannedAclForObjects: 'cannedAclForObjects',\n    cdcInsertsAndUpdates: false,\n    cdcInsertsOnly: false,\n    cdcMaxBatchInterval: 123,\n    cdcMinFileSize: 123,\n    cdcPath: 'cdcPath',\n    compressionType: 'compressionType',\n    csvDelimiter: 'csvDelimiter',\n    csvNoSupValue: 'csvNoSupValue',\n    csvNullValue: 'csvNullValue',\n    csvRowDelimiter: 'csvRowDelimiter',\n    dataFormat: 'dataFormat',\n    dataPageSize: 123,\n    datePartitionDelimiter: 'datePartitionDelimiter',\n    datePartitionEnabled: false,\n    datePartitionSequence: 'datePartitionSequence',\n    datePartitionTimezone: 'datePartitionTimezone',\n    dictPageSizeLimit: 123,\n    enableStatistics: false,\n    encodingType: 'encodingType',\n    encryptionMode: 'encryptionMode',\n    externalTableDefinition: 'externalTableDefinition',\n    ignoreHeaderRows: 123,\n    includeOpForFullLoad: false,\n    maxFileSize: 123,\n    parquetTimestampInMillisecond: false,\n    parquetVersion: 'parquetVersion',\n    preserveTransactions: false,\n    rfc4180: false,\n    rowGroupLength: 123,\n    serverSideEncryptionKmsKeyId: 'serverSideEncryptionKmsKeyId',\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n    timestampColumnName: 'timestampColumnName',\n    useCsvNoSupValue: false,\n    useTaskStartTimeForFullLoadTimestamp: false,\n  },\n  serverName: 'serverName',\n  sslMode: 'sslMode',\n  sybaseSettings: {\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  username: 'username',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint",
        "@aws-cdk/aws-dms.CfnEndpointProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnEndpoint = new dms.CfnEndpoint(this, 'MyCfnEndpoint', {\n  endpointType: 'endpointType',\n  engineName: 'engineName',\n\n  // the properties below are optional\n  certificateArn: 'certificateArn',\n  databaseName: 'databaseName',\n  docDbSettings: {\n    docsToInvestigate: 123,\n    extractDocId: false,\n    nestingLevel: 'nestingLevel',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n  },\n  dynamoDbSettings: {\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n  },\n  elasticsearchSettings: {\n    endpointUri: 'endpointUri',\n    errorRetryDuration: 123,\n    fullLoadErrorPercentage: 123,\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n  },\n  endpointIdentifier: 'endpointIdentifier',\n  extraConnectionAttributes: 'extraConnectionAttributes',\n  gcpMySqlSettings: {\n    afterConnectScript: 'afterConnectScript',\n    cleanSourceMetadataOnMismatch: false,\n    databaseName: 'databaseName',\n    eventsPollInterval: 123,\n    maxFileSize: 123,\n    parallelLoadThreads: 123,\n    password: 'password',\n    port: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverName: 'serverName',\n    serverTimezone: 'serverTimezone',\n    username: 'username',\n  },\n  ibmDb2Settings: {\n    currentLsn: 'currentLsn',\n    maxKBytesPerRead: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    setDataCaptureChanges: false,\n  },\n  kafkaSettings: {\n    broker: 'broker',\n    includeControlDetails: false,\n    includeNullAndEmpty: false,\n    includePartitionValue: false,\n    includeTableAlterOperations: false,\n    includeTransactionDetails: false,\n    messageFormat: 'messageFormat',\n    messageMaxBytes: 123,\n    noHexPrefix: false,\n    partitionIncludeSchemaTable: false,\n    saslPassword: 'saslPassword',\n    saslUserName: 'saslUserName',\n    securityProtocol: 'securityProtocol',\n    sslCaCertificateArn: 'sslCaCertificateArn',\n    sslClientCertificateArn: 'sslClientCertificateArn',\n    sslClientKeyArn: 'sslClientKeyArn',\n    sslClientKeyPassword: 'sslClientKeyPassword',\n    topic: 'topic',\n  },\n  kinesisSettings: {\n    includeControlDetails: false,\n    includeNullAndEmpty: false,\n    includePartitionValue: false,\n    includeTableAlterOperations: false,\n    includeTransactionDetails: false,\n    messageFormat: 'messageFormat',\n    noHexPrefix: false,\n    partitionIncludeSchemaTable: false,\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n    streamArn: 'streamArn',\n  },\n  kmsKeyId: 'kmsKeyId',\n  microsoftSqlServerSettings: {\n    bcpPacketSize: 123,\n    controlTablesFileGroup: 'controlTablesFileGroup',\n    querySingleAlwaysOnNode: false,\n    readBackupOnly: false,\n    safeguardPolicy: 'safeguardPolicy',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    useBcpFullLoad: false,\n    useThirdPartyBackupDevice: false,\n  },\n  mongoDbSettings: {\n    authMechanism: 'authMechanism',\n    authSource: 'authSource',\n    authType: 'authType',\n    databaseName: 'databaseName',\n    docsToInvestigate: 'docsToInvestigate',\n    extractDocId: 'extractDocId',\n    nestingLevel: 'nestingLevel',\n    password: 'password',\n    port: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverName: 'serverName',\n    username: 'username',\n  },\n  mySqlSettings: {\n    afterConnectScript: 'afterConnectScript',\n    cleanSourceMetadataOnMismatch: false,\n    eventsPollInterval: 123,\n    maxFileSize: 123,\n    parallelLoadThreads: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverTimezone: 'serverTimezone',\n    targetDbType: 'targetDbType',\n  },\n  neptuneSettings: {\n    errorRetryDuration: 123,\n    iamAuthEnabled: false,\n    maxFileSize: 123,\n    maxRetryCount: 123,\n    s3BucketFolder: 's3BucketFolder',\n    s3BucketName: 's3BucketName',\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n  },\n  oracleSettings: {\n    accessAlternateDirectly: false,\n    additionalArchivedLogDestId: 123,\n    addSupplementalLogging: false,\n    allowSelectNestedTables: false,\n    archivedLogDestId: 123,\n    archivedLogsOnly: false,\n    asmPassword: 'asmPassword',\n    asmServer: 'asmServer',\n    asmUser: 'asmUser',\n    charLengthSemantics: 'charLengthSemantics',\n    directPathNoLog: false,\n    directPathParallelLoad: false,\n    enableHomogenousTablespace: false,\n    extraArchivedLogDestIds: [123],\n    failTasksOnLobTruncation: false,\n    numberDatatypeScale: 123,\n    oraclePathPrefix: 'oraclePathPrefix',\n    parallelAsmReadThreads: 123,\n    readAheadBlocks: 123,\n    readTableSpaceName: false,\n    replacePathPrefix: false,\n    retryInterval: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerOracleAsmAccessRoleArn: 'secretsManagerOracleAsmAccessRoleArn',\n    secretsManagerOracleAsmSecretId: 'secretsManagerOracleAsmSecretId',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    securityDbEncryption: 'securityDbEncryption',\n    securityDbEncryptionName: 'securityDbEncryptionName',\n    spatialDataOptionToGeoJsonFunctionName: 'spatialDataOptionToGeoJsonFunctionName',\n    standbyDelayTime: 123,\n    useAlternateFolderForOnline: false,\n    useBFile: false,\n    useDirectPathFullLoad: false,\n    useLogminerReader: false,\n    usePathPrefix: 'usePathPrefix',\n  },\n  password: 'password',\n  port: 123,\n  postgreSqlSettings: {\n    afterConnectScript: 'afterConnectScript',\n    captureDdls: false,\n    ddlArtifactsSchema: 'ddlArtifactsSchema',\n    executeTimeout: 123,\n    failTasksOnLobTruncation: false,\n    heartbeatEnable: false,\n    heartbeatFrequency: 123,\n    heartbeatSchema: 'heartbeatSchema',\n    maxFileSize: 123,\n    pluginName: 'pluginName',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    slotName: 'slotName',\n  },\n  redisSettings: {\n    authPassword: 'authPassword',\n    authType: 'authType',\n    authUserName: 'authUserName',\n    port: 123,\n    serverName: 'serverName',\n    sslCaCertificateArn: 'sslCaCertificateArn',\n    sslSecurityProtocol: 'sslSecurityProtocol',\n  },\n  redshiftSettings: {\n    acceptAnyDate: false,\n    afterConnectScript: 'afterConnectScript',\n    bucketFolder: 'bucketFolder',\n    bucketName: 'bucketName',\n    caseSensitiveNames: false,\n    compUpdate: false,\n    connectionTimeout: 123,\n    dateFormat: 'dateFormat',\n    emptyAsNull: false,\n    encryptionMode: 'encryptionMode',\n    explicitIds: false,\n    fileTransferUploadStreams: 123,\n    loadTimeout: 123,\n    maxFileSize: 123,\n    removeQuotes: false,\n    replaceChars: 'replaceChars',\n    replaceInvalidChars: 'replaceInvalidChars',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverSideEncryptionKmsKeyId: 'serverSideEncryptionKmsKeyId',\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n    timeFormat: 'timeFormat',\n    trimBlanks: false,\n    truncateColumns: false,\n    writeBufferSize: 123,\n  },\n  resourceIdentifier: 'resourceIdentifier',\n  s3Settings: {\n    addColumnName: false,\n    bucketFolder: 'bucketFolder',\n    bucketName: 'bucketName',\n    cannedAclForObjects: 'cannedAclForObjects',\n    cdcInsertsAndUpdates: false,\n    cdcInsertsOnly: false,\n    cdcMaxBatchInterval: 123,\n    cdcMinFileSize: 123,\n    cdcPath: 'cdcPath',\n    compressionType: 'compressionType',\n    csvDelimiter: 'csvDelimiter',\n    csvNoSupValue: 'csvNoSupValue',\n    csvNullValue: 'csvNullValue',\n    csvRowDelimiter: 'csvRowDelimiter',\n    dataFormat: 'dataFormat',\n    dataPageSize: 123,\n    datePartitionDelimiter: 'datePartitionDelimiter',\n    datePartitionEnabled: false,\n    datePartitionSequence: 'datePartitionSequence',\n    datePartitionTimezone: 'datePartitionTimezone',\n    dictPageSizeLimit: 123,\n    enableStatistics: false,\n    encodingType: 'encodingType',\n    encryptionMode: 'encryptionMode',\n    externalTableDefinition: 'externalTableDefinition',\n    ignoreHeaderRows: 123,\n    includeOpForFullLoad: false,\n    maxFileSize: 123,\n    parquetTimestampInMillisecond: false,\n    parquetVersion: 'parquetVersion',\n    preserveTransactions: false,\n    rfc4180: false,\n    rowGroupLength: 123,\n    serverSideEncryptionKmsKeyId: 'serverSideEncryptionKmsKeyId',\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n    timestampColumnName: 'timestampColumnName',\n    useCsvNoSupValue: false,\n    useTaskStartTimeForFullLoadTimestamp: false,\n  },\n  serverName: 'serverName',\n  sslMode: 'sslMode',\n  sybaseSettings: {\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  username: 'username',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 42,
        "10": 130,
        "75": 251,
        "91": 59,
        "104": 1,
        "192": 2,
        "193": 19,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 247,
        "290": 1
      },
      "fqnsFingerprint": "46bb5302185702e3c103def9ec0619e14f08b53bd8dc20498d45cdfc89a42500"
    },
    "aaf5e8311fe9fb026b407eb9484ebf4510b6a030c14f21f845de674add8cd96e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ndoc_db_settings_property = dms.CfnEndpoint.DocDbSettingsProperty(\n    docs_to_investigate=123,\n    extract_doc_id=False,\n    nesting_level=\"nestingLevel\",\n    secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n    secrets_manager_secret_id=\"secretsManagerSecretId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nDocDbSettingsProperty docDbSettingsProperty = new DocDbSettingsProperty {\n    DocsToInvestigate = 123,\n    ExtractDocId = false,\n    NestingLevel = \"nestingLevel\",\n    SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n    SecretsManagerSecretId = \"secretsManagerSecretId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nDocDbSettingsProperty docDbSettingsProperty = DocDbSettingsProperty.builder()\n        .docsToInvestigate(123)\n        .extractDocId(false)\n        .nestingLevel(\"nestingLevel\")\n        .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n        .secretsManagerSecretId(\"secretsManagerSecretId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ndocDbSettingsProperty := &docDbSettingsProperty{\n\tdocsToInvestigate: jsii.Number(123),\n\textractDocId: jsii.Boolean(false),\n\tnestingLevel: jsii.String(\"nestingLevel\"),\n\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst docDbSettingsProperty: dms.CfnEndpoint.DocDbSettingsProperty = {\n  docsToInvestigate: 123,\n  extractDocId: false,\n  nestingLevel: 'nestingLevel',\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.DocDbSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.DocDbSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst docDbSettingsProperty: dms.CfnEndpoint.DocDbSettingsProperty = {\n  docsToInvestigate: 123,\n  extractDocId: false,\n  nestingLevel: 'nestingLevel',\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 10,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "fd260b69bce20f63c1a1c2bb877614855cb6f1cd2ff606ea126add8fae3d570a"
    },
    "42256be767490f6a99ffb3526e826ff0870c97046d5a6283da70c1fc9c945665": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ndynamo_db_settings_property = dms.CfnEndpoint.DynamoDbSettingsProperty(\n    service_access_role_arn=\"serviceAccessRoleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nDynamoDbSettingsProperty dynamoDbSettingsProperty = new DynamoDbSettingsProperty {\n    ServiceAccessRoleArn = \"serviceAccessRoleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nDynamoDbSettingsProperty dynamoDbSettingsProperty = DynamoDbSettingsProperty.builder()\n        .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ndynamoDbSettingsProperty := &dynamoDbSettingsProperty{\n\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst dynamoDbSettingsProperty: dms.CfnEndpoint.DynamoDbSettingsProperty = {\n  serviceAccessRoleArn: 'serviceAccessRoleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.DynamoDbSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.DynamoDbSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dynamoDbSettingsProperty: dms.CfnEndpoint.DynamoDbSettingsProperty = {\n  serviceAccessRoleArn: 'serviceAccessRoleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "25d2def460b218d86f4436ed5b54cf06cc54ec07b5757f26525f7369e0f1f51b"
    },
    "1aeef087eaf284b5f536dd3412c006fab2b93bda5e4f251f10c6e282f0ea60ac": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\nelasticsearch_settings_property = dms.CfnEndpoint.ElasticsearchSettingsProperty(\n    endpoint_uri=\"endpointUri\",\n    error_retry_duration=123,\n    full_load_error_percentage=123,\n    service_access_role_arn=\"serviceAccessRoleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nElasticsearchSettingsProperty elasticsearchSettingsProperty = new ElasticsearchSettingsProperty {\n    EndpointUri = \"endpointUri\",\n    ErrorRetryDuration = 123,\n    FullLoadErrorPercentage = 123,\n    ServiceAccessRoleArn = \"serviceAccessRoleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nElasticsearchSettingsProperty elasticsearchSettingsProperty = ElasticsearchSettingsProperty.builder()\n        .endpointUri(\"endpointUri\")\n        .errorRetryDuration(123)\n        .fullLoadErrorPercentage(123)\n        .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\nelasticsearchSettingsProperty := &elasticsearchSettingsProperty{\n\tendpointUri: jsii.String(\"endpointUri\"),\n\terrorRetryDuration: jsii.Number(123),\n\tfullLoadErrorPercentage: jsii.Number(123),\n\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst elasticsearchSettingsProperty: dms.CfnEndpoint.ElasticsearchSettingsProperty = {\n  endpointUri: 'endpointUri',\n  errorRetryDuration: 123,\n  fullLoadErrorPercentage: 123,\n  serviceAccessRoleArn: 'serviceAccessRoleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.ElasticsearchSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.ElasticsearchSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst elasticsearchSettingsProperty: dms.CfnEndpoint.ElasticsearchSettingsProperty = {\n  endpointUri: 'endpointUri',\n  errorRetryDuration: 123,\n  fullLoadErrorPercentage: 123,\n  serviceAccessRoleArn: 'serviceAccessRoleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "63aaa4e19c4d559171e4b0d44a581770a91172a5473128c59de6c837367afe4d"
    },
    "d677d03fa6c3d8f8f37efe8ee142ebe069bbb545aa759cc0d8208a824d6698ee": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ngcp_my_sQLSettings_property = dms.CfnEndpoint.GcpMySQLSettingsProperty(\n    after_connect_script=\"afterConnectScript\",\n    clean_source_metadata_on_mismatch=False,\n    database_name=\"databaseName\",\n    events_poll_interval=123,\n    max_file_size=123,\n    parallel_load_threads=123,\n    password=\"password\",\n    port=123,\n    secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n    secrets_manager_secret_id=\"secretsManagerSecretId\",\n    server_name=\"serverName\",\n    server_timezone=\"serverTimezone\",\n    username=\"username\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nGcpMySQLSettingsProperty gcpMySQLSettingsProperty = new GcpMySQLSettingsProperty {\n    AfterConnectScript = \"afterConnectScript\",\n    CleanSourceMetadataOnMismatch = false,\n    DatabaseName = \"databaseName\",\n    EventsPollInterval = 123,\n    MaxFileSize = 123,\n    ParallelLoadThreads = 123,\n    Password = \"password\",\n    Port = 123,\n    SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n    SecretsManagerSecretId = \"secretsManagerSecretId\",\n    ServerName = \"serverName\",\n    ServerTimezone = \"serverTimezone\",\n    Username = \"username\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nGcpMySQLSettingsProperty gcpMySQLSettingsProperty = GcpMySQLSettingsProperty.builder()\n        .afterConnectScript(\"afterConnectScript\")\n        .cleanSourceMetadataOnMismatch(false)\n        .databaseName(\"databaseName\")\n        .eventsPollInterval(123)\n        .maxFileSize(123)\n        .parallelLoadThreads(123)\n        .password(\"password\")\n        .port(123)\n        .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n        .secretsManagerSecretId(\"secretsManagerSecretId\")\n        .serverName(\"serverName\")\n        .serverTimezone(\"serverTimezone\")\n        .username(\"username\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ngcpMySQLSettingsProperty := &gcpMySQLSettingsProperty{\n\tafterConnectScript: jsii.String(\"afterConnectScript\"),\n\tcleanSourceMetadataOnMismatch: jsii.Boolean(false),\n\tdatabaseName: jsii.String(\"databaseName\"),\n\teventsPollInterval: jsii.Number(123),\n\tmaxFileSize: jsii.Number(123),\n\tparallelLoadThreads: jsii.Number(123),\n\tpassword: jsii.String(\"password\"),\n\tport: jsii.Number(123),\n\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\tserverName: jsii.String(\"serverName\"),\n\tserverTimezone: jsii.String(\"serverTimezone\"),\n\tusername: jsii.String(\"username\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst gcpMySQLSettingsProperty: dms.CfnEndpoint.GcpMySQLSettingsProperty = {\n  afterConnectScript: 'afterConnectScript',\n  cleanSourceMetadataOnMismatch: false,\n  databaseName: 'databaseName',\n  eventsPollInterval: 123,\n  maxFileSize: 123,\n  parallelLoadThreads: 123,\n  password: 'password',\n  port: 123,\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  serverName: 'serverName',\n  serverTimezone: 'serverTimezone',\n  username: 'username',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.GcpMySQLSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.GcpMySQLSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst gcpMySQLSettingsProperty: dms.CfnEndpoint.GcpMySQLSettingsProperty = {\n  afterConnectScript: 'afterConnectScript',\n  cleanSourceMetadataOnMismatch: false,\n  databaseName: 'databaseName',\n  eventsPollInterval: 123,\n  maxFileSize: 123,\n  parallelLoadThreads: 123,\n  password: 'password',\n  port: 123,\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  serverName: 'serverName',\n  serverTimezone: 'serverTimezone',\n  username: 'username',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 9,
        "75": 18,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "3c667f43e42de0b222a9e544b24c1cb1eb05b37865168f793e37c9083db4749f"
    },
    "d9667e47bb55bb75b4fc4fe0c1a2c27a151ff17d456903624f23abdffaaa571e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\nibm_db2_settings_property = dms.CfnEndpoint.IbmDb2SettingsProperty(\n    current_lsn=\"currentLsn\",\n    max_kBytes_per_read=123,\n    secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n    secrets_manager_secret_id=\"secretsManagerSecretId\",\n    set_data_capture_changes=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nIbmDb2SettingsProperty ibmDb2SettingsProperty = new IbmDb2SettingsProperty {\n    CurrentLsn = \"currentLsn\",\n    MaxKBytesPerRead = 123,\n    SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n    SecretsManagerSecretId = \"secretsManagerSecretId\",\n    SetDataCaptureChanges = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nIbmDb2SettingsProperty ibmDb2SettingsProperty = IbmDb2SettingsProperty.builder()\n        .currentLsn(\"currentLsn\")\n        .maxKBytesPerRead(123)\n        .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n        .secretsManagerSecretId(\"secretsManagerSecretId\")\n        .setDataCaptureChanges(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\nibmDb2SettingsProperty := &ibmDb2SettingsProperty{\n\tcurrentLsn: jsii.String(\"currentLsn\"),\n\tmaxKBytesPerRead: jsii.Number(123),\n\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\tsetDataCaptureChanges: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst ibmDb2SettingsProperty: dms.CfnEndpoint.IbmDb2SettingsProperty = {\n  currentLsn: 'currentLsn',\n  maxKBytesPerRead: 123,\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  setDataCaptureChanges: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.IbmDb2SettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.IbmDb2SettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ibmDb2SettingsProperty: dms.CfnEndpoint.IbmDb2SettingsProperty = {\n  currentLsn: 'currentLsn',\n  maxKBytesPerRead: 123,\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  setDataCaptureChanges: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 10,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "857318cf64e73946a7442d4615761ba553daaea0f96ff4dab2fbc57174c0003e"
    },
    "3ea66faafc7857bf6dd5ceb06221f9401bd78797b546cd090fd4e0f4fead3cd6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\nkafka_settings_property = dms.CfnEndpoint.KafkaSettingsProperty(\n    broker=\"broker\",\n    include_control_details=False,\n    include_null_and_empty=False,\n    include_partition_value=False,\n    include_table_alter_operations=False,\n    include_transaction_details=False,\n    message_format=\"messageFormat\",\n    message_max_bytes=123,\n    no_hex_prefix=False,\n    partition_include_schema_table=False,\n    sasl_password=\"saslPassword\",\n    sasl_user_name=\"saslUserName\",\n    security_protocol=\"securityProtocol\",\n    ssl_ca_certificate_arn=\"sslCaCertificateArn\",\n    ssl_client_certificate_arn=\"sslClientCertificateArn\",\n    ssl_client_key_arn=\"sslClientKeyArn\",\n    ssl_client_key_password=\"sslClientKeyPassword\",\n    topic=\"topic\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nKafkaSettingsProperty kafkaSettingsProperty = new KafkaSettingsProperty {\n    Broker = \"broker\",\n    IncludeControlDetails = false,\n    IncludeNullAndEmpty = false,\n    IncludePartitionValue = false,\n    IncludeTableAlterOperations = false,\n    IncludeTransactionDetails = false,\n    MessageFormat = \"messageFormat\",\n    MessageMaxBytes = 123,\n    NoHexPrefix = false,\n    PartitionIncludeSchemaTable = false,\n    SaslPassword = \"saslPassword\",\n    SaslUserName = \"saslUserName\",\n    SecurityProtocol = \"securityProtocol\",\n    SslCaCertificateArn = \"sslCaCertificateArn\",\n    SslClientCertificateArn = \"sslClientCertificateArn\",\n    SslClientKeyArn = \"sslClientKeyArn\",\n    SslClientKeyPassword = \"sslClientKeyPassword\",\n    Topic = \"topic\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nKafkaSettingsProperty kafkaSettingsProperty = KafkaSettingsProperty.builder()\n        .broker(\"broker\")\n        .includeControlDetails(false)\n        .includeNullAndEmpty(false)\n        .includePartitionValue(false)\n        .includeTableAlterOperations(false)\n        .includeTransactionDetails(false)\n        .messageFormat(\"messageFormat\")\n        .messageMaxBytes(123)\n        .noHexPrefix(false)\n        .partitionIncludeSchemaTable(false)\n        .saslPassword(\"saslPassword\")\n        .saslUserName(\"saslUserName\")\n        .securityProtocol(\"securityProtocol\")\n        .sslCaCertificateArn(\"sslCaCertificateArn\")\n        .sslClientCertificateArn(\"sslClientCertificateArn\")\n        .sslClientKeyArn(\"sslClientKeyArn\")\n        .sslClientKeyPassword(\"sslClientKeyPassword\")\n        .topic(\"topic\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\nkafkaSettingsProperty := &kafkaSettingsProperty{\n\tbroker: jsii.String(\"broker\"),\n\tincludeControlDetails: jsii.Boolean(false),\n\tincludeNullAndEmpty: jsii.Boolean(false),\n\tincludePartitionValue: jsii.Boolean(false),\n\tincludeTableAlterOperations: jsii.Boolean(false),\n\tincludeTransactionDetails: jsii.Boolean(false),\n\tmessageFormat: jsii.String(\"messageFormat\"),\n\tmessageMaxBytes: jsii.Number(123),\n\tnoHexPrefix: jsii.Boolean(false),\n\tpartitionIncludeSchemaTable: jsii.Boolean(false),\n\tsaslPassword: jsii.String(\"saslPassword\"),\n\tsaslUserName: jsii.String(\"saslUserName\"),\n\tsecurityProtocol: jsii.String(\"securityProtocol\"),\n\tsslCaCertificateArn: jsii.String(\"sslCaCertificateArn\"),\n\tsslClientCertificateArn: jsii.String(\"sslClientCertificateArn\"),\n\tsslClientKeyArn: jsii.String(\"sslClientKeyArn\"),\n\tsslClientKeyPassword: jsii.String(\"sslClientKeyPassword\"),\n\ttopic: jsii.String(\"topic\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst kafkaSettingsProperty: dms.CfnEndpoint.KafkaSettingsProperty = {\n  broker: 'broker',\n  includeControlDetails: false,\n  includeNullAndEmpty: false,\n  includePartitionValue: false,\n  includeTableAlterOperations: false,\n  includeTransactionDetails: false,\n  messageFormat: 'messageFormat',\n  messageMaxBytes: 123,\n  noHexPrefix: false,\n  partitionIncludeSchemaTable: false,\n  saslPassword: 'saslPassword',\n  saslUserName: 'saslUserName',\n  securityProtocol: 'securityProtocol',\n  sslCaCertificateArn: 'sslCaCertificateArn',\n  sslClientCertificateArn: 'sslClientCertificateArn',\n  sslClientKeyArn: 'sslClientKeyArn',\n  sslClientKeyPassword: 'sslClientKeyPassword',\n  topic: 'topic',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.KafkaSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.KafkaSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kafkaSettingsProperty: dms.CfnEndpoint.KafkaSettingsProperty = {\n  broker: 'broker',\n  includeControlDetails: false,\n  includeNullAndEmpty: false,\n  includePartitionValue: false,\n  includeTableAlterOperations: false,\n  includeTransactionDetails: false,\n  messageFormat: 'messageFormat',\n  messageMaxBytes: 123,\n  noHexPrefix: false,\n  partitionIncludeSchemaTable: false,\n  saslPassword: 'saslPassword',\n  saslUserName: 'saslUserName',\n  securityProtocol: 'securityProtocol',\n  sslCaCertificateArn: 'sslCaCertificateArn',\n  sslClientCertificateArn: 'sslClientCertificateArn',\n  sslClientKeyArn: 'sslClientKeyArn',\n  sslClientKeyPassword: 'sslClientKeyPassword',\n  topic: 'topic',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 11,
        "75": 23,
        "91": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 18,
        "290": 1
      },
      "fqnsFingerprint": "81d3c2191c61034fe1adba40933159aac4d38fa44d011f91bddc2a055ef96c9e"
    },
    "4261c3c8d555ebd24564a034bbd2d31386b7b249466c4c3cfd042280dfa43da7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\nkinesis_settings_property = dms.CfnEndpoint.KinesisSettingsProperty(\n    include_control_details=False,\n    include_null_and_empty=False,\n    include_partition_value=False,\n    include_table_alter_operations=False,\n    include_transaction_details=False,\n    message_format=\"messageFormat\",\n    no_hex_prefix=False,\n    partition_include_schema_table=False,\n    service_access_role_arn=\"serviceAccessRoleArn\",\n    stream_arn=\"streamArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nKinesisSettingsProperty kinesisSettingsProperty = new KinesisSettingsProperty {\n    IncludeControlDetails = false,\n    IncludeNullAndEmpty = false,\n    IncludePartitionValue = false,\n    IncludeTableAlterOperations = false,\n    IncludeTransactionDetails = false,\n    MessageFormat = \"messageFormat\",\n    NoHexPrefix = false,\n    PartitionIncludeSchemaTable = false,\n    ServiceAccessRoleArn = \"serviceAccessRoleArn\",\n    StreamArn = \"streamArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nKinesisSettingsProperty kinesisSettingsProperty = KinesisSettingsProperty.builder()\n        .includeControlDetails(false)\n        .includeNullAndEmpty(false)\n        .includePartitionValue(false)\n        .includeTableAlterOperations(false)\n        .includeTransactionDetails(false)\n        .messageFormat(\"messageFormat\")\n        .noHexPrefix(false)\n        .partitionIncludeSchemaTable(false)\n        .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n        .streamArn(\"streamArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\nkinesisSettingsProperty := &kinesisSettingsProperty{\n\tincludeControlDetails: jsii.Boolean(false),\n\tincludeNullAndEmpty: jsii.Boolean(false),\n\tincludePartitionValue: jsii.Boolean(false),\n\tincludeTableAlterOperations: jsii.Boolean(false),\n\tincludeTransactionDetails: jsii.Boolean(false),\n\tmessageFormat: jsii.String(\"messageFormat\"),\n\tnoHexPrefix: jsii.Boolean(false),\n\tpartitionIncludeSchemaTable: jsii.Boolean(false),\n\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\tstreamArn: jsii.String(\"streamArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst kinesisSettingsProperty: dms.CfnEndpoint.KinesisSettingsProperty = {\n  includeControlDetails: false,\n  includeNullAndEmpty: false,\n  includePartitionValue: false,\n  includeTableAlterOperations: false,\n  includeTransactionDetails: false,\n  messageFormat: 'messageFormat',\n  noHexPrefix: false,\n  partitionIncludeSchemaTable: false,\n  serviceAccessRoleArn: 'serviceAccessRoleArn',\n  streamArn: 'streamArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.KinesisSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.KinesisSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisSettingsProperty: dms.CfnEndpoint.KinesisSettingsProperty = {\n  includeControlDetails: false,\n  includeNullAndEmpty: false,\n  includePartitionValue: false,\n  includeTableAlterOperations: false,\n  includeTransactionDetails: false,\n  messageFormat: 'messageFormat',\n  noHexPrefix: false,\n  partitionIncludeSchemaTable: false,\n  serviceAccessRoleArn: 'serviceAccessRoleArn',\n  streamArn: 'streamArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 15,
        "91": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 10,
        "290": 1
      },
      "fqnsFingerprint": "575dd99156412f1339aaffe7027d108da95fc3dec9506abb3948e016e5ce458e"
    },
    "a078e8ab24e525cc2c117983945a4cdbcc651d1cdb2466722ff9234e7779c678": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\nmicrosoft_sql_server_settings_property = dms.CfnEndpoint.MicrosoftSqlServerSettingsProperty(\n    bcp_packet_size=123,\n    control_tables_file_group=\"controlTablesFileGroup\",\n    query_single_always_on_node=False,\n    read_backup_only=False,\n    safeguard_policy=\"safeguardPolicy\",\n    secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n    secrets_manager_secret_id=\"secretsManagerSecretId\",\n    use_bcp_full_load=False,\n    use_third_party_backup_device=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nMicrosoftSqlServerSettingsProperty microsoftSqlServerSettingsProperty = new MicrosoftSqlServerSettingsProperty {\n    BcpPacketSize = 123,\n    ControlTablesFileGroup = \"controlTablesFileGroup\",\n    QuerySingleAlwaysOnNode = false,\n    ReadBackupOnly = false,\n    SafeguardPolicy = \"safeguardPolicy\",\n    SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n    SecretsManagerSecretId = \"secretsManagerSecretId\",\n    UseBcpFullLoad = false,\n    UseThirdPartyBackupDevice = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nMicrosoftSqlServerSettingsProperty microsoftSqlServerSettingsProperty = MicrosoftSqlServerSettingsProperty.builder()\n        .bcpPacketSize(123)\n        .controlTablesFileGroup(\"controlTablesFileGroup\")\n        .querySingleAlwaysOnNode(false)\n        .readBackupOnly(false)\n        .safeguardPolicy(\"safeguardPolicy\")\n        .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n        .secretsManagerSecretId(\"secretsManagerSecretId\")\n        .useBcpFullLoad(false)\n        .useThirdPartyBackupDevice(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\nmicrosoftSqlServerSettingsProperty := &microsoftSqlServerSettingsProperty{\n\tbcpPacketSize: jsii.Number(123),\n\tcontrolTablesFileGroup: jsii.String(\"controlTablesFileGroup\"),\n\tquerySingleAlwaysOnNode: jsii.Boolean(false),\n\treadBackupOnly: jsii.Boolean(false),\n\tsafeguardPolicy: jsii.String(\"safeguardPolicy\"),\n\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\tuseBcpFullLoad: jsii.Boolean(false),\n\tuseThirdPartyBackupDevice: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst microsoftSqlServerSettingsProperty: dms.CfnEndpoint.MicrosoftSqlServerSettingsProperty = {\n  bcpPacketSize: 123,\n  controlTablesFileGroup: 'controlTablesFileGroup',\n  querySingleAlwaysOnNode: false,\n  readBackupOnly: false,\n  safeguardPolicy: 'safeguardPolicy',\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  useBcpFullLoad: false,\n  useThirdPartyBackupDevice: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.MicrosoftSqlServerSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.MicrosoftSqlServerSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst microsoftSqlServerSettingsProperty: dms.CfnEndpoint.MicrosoftSqlServerSettingsProperty = {\n  bcpPacketSize: 123,\n  controlTablesFileGroup: 'controlTablesFileGroup',\n  querySingleAlwaysOnNode: false,\n  readBackupOnly: false,\n  safeguardPolicy: 'safeguardPolicy',\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  useBcpFullLoad: false,\n  useThirdPartyBackupDevice: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 14,
        "91": 4,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "06c72942d07414892f2597e7ba5e4d7b4b38092b61f5cfee96eae37cbac78fa0"
    },
    "84e599f47e18ba964104f1111ceeb197a9894803072f4c914745e9b154b6129d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\nmongo_db_settings_property = dms.CfnEndpoint.MongoDbSettingsProperty(\n    auth_mechanism=\"authMechanism\",\n    auth_source=\"authSource\",\n    auth_type=\"authType\",\n    database_name=\"databaseName\",\n    docs_to_investigate=\"docsToInvestigate\",\n    extract_doc_id=\"extractDocId\",\n    nesting_level=\"nestingLevel\",\n    password=\"password\",\n    port=123,\n    secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n    secrets_manager_secret_id=\"secretsManagerSecretId\",\n    server_name=\"serverName\",\n    username=\"username\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nMongoDbSettingsProperty mongoDbSettingsProperty = new MongoDbSettingsProperty {\n    AuthMechanism = \"authMechanism\",\n    AuthSource = \"authSource\",\n    AuthType = \"authType\",\n    DatabaseName = \"databaseName\",\n    DocsToInvestigate = \"docsToInvestigate\",\n    ExtractDocId = \"extractDocId\",\n    NestingLevel = \"nestingLevel\",\n    Password = \"password\",\n    Port = 123,\n    SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n    SecretsManagerSecretId = \"secretsManagerSecretId\",\n    ServerName = \"serverName\",\n    Username = \"username\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nMongoDbSettingsProperty mongoDbSettingsProperty = MongoDbSettingsProperty.builder()\n        .authMechanism(\"authMechanism\")\n        .authSource(\"authSource\")\n        .authType(\"authType\")\n        .databaseName(\"databaseName\")\n        .docsToInvestigate(\"docsToInvestigate\")\n        .extractDocId(\"extractDocId\")\n        .nestingLevel(\"nestingLevel\")\n        .password(\"password\")\n        .port(123)\n        .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n        .secretsManagerSecretId(\"secretsManagerSecretId\")\n        .serverName(\"serverName\")\n        .username(\"username\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\nmongoDbSettingsProperty := &mongoDbSettingsProperty{\n\tauthMechanism: jsii.String(\"authMechanism\"),\n\tauthSource: jsii.String(\"authSource\"),\n\tauthType: jsii.String(\"authType\"),\n\tdatabaseName: jsii.String(\"databaseName\"),\n\tdocsToInvestigate: jsii.String(\"docsToInvestigate\"),\n\textractDocId: jsii.String(\"extractDocId\"),\n\tnestingLevel: jsii.String(\"nestingLevel\"),\n\tpassword: jsii.String(\"password\"),\n\tport: jsii.Number(123),\n\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\tserverName: jsii.String(\"serverName\"),\n\tusername: jsii.String(\"username\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst mongoDbSettingsProperty: dms.CfnEndpoint.MongoDbSettingsProperty = {\n  authMechanism: 'authMechanism',\n  authSource: 'authSource',\n  authType: 'authType',\n  databaseName: 'databaseName',\n  docsToInvestigate: 'docsToInvestigate',\n  extractDocId: 'extractDocId',\n  nestingLevel: 'nestingLevel',\n  password: 'password',\n  port: 123,\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  serverName: 'serverName',\n  username: 'username',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.MongoDbSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.MongoDbSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst mongoDbSettingsProperty: dms.CfnEndpoint.MongoDbSettingsProperty = {\n  authMechanism: 'authMechanism',\n  authSource: 'authSource',\n  authType: 'authType',\n  databaseName: 'databaseName',\n  docsToInvestigate: 'docsToInvestigate',\n  extractDocId: 'extractDocId',\n  nestingLevel: 'nestingLevel',\n  password: 'password',\n  port: 123,\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  serverName: 'serverName',\n  username: 'username',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 13,
        "75": 18,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "17f6155df43abbd65262642b2d096462372e2cc76d3ba3af282dda18ec268191"
    },
    "67e62306a9da8e5f9243ba93de824aa9d0e8a217ae4fe74356ae146f80fb2fc2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\nmy_sql_settings_property = dms.CfnEndpoint.MySqlSettingsProperty(\n    after_connect_script=\"afterConnectScript\",\n    clean_source_metadata_on_mismatch=False,\n    events_poll_interval=123,\n    max_file_size=123,\n    parallel_load_threads=123,\n    secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n    secrets_manager_secret_id=\"secretsManagerSecretId\",\n    server_timezone=\"serverTimezone\",\n    target_db_type=\"targetDbType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nMySqlSettingsProperty mySqlSettingsProperty = new MySqlSettingsProperty {\n    AfterConnectScript = \"afterConnectScript\",\n    CleanSourceMetadataOnMismatch = false,\n    EventsPollInterval = 123,\n    MaxFileSize = 123,\n    ParallelLoadThreads = 123,\n    SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n    SecretsManagerSecretId = \"secretsManagerSecretId\",\n    ServerTimezone = \"serverTimezone\",\n    TargetDbType = \"targetDbType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nMySqlSettingsProperty mySqlSettingsProperty = MySqlSettingsProperty.builder()\n        .afterConnectScript(\"afterConnectScript\")\n        .cleanSourceMetadataOnMismatch(false)\n        .eventsPollInterval(123)\n        .maxFileSize(123)\n        .parallelLoadThreads(123)\n        .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n        .secretsManagerSecretId(\"secretsManagerSecretId\")\n        .serverTimezone(\"serverTimezone\")\n        .targetDbType(\"targetDbType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\nmySqlSettingsProperty := &mySqlSettingsProperty{\n\tafterConnectScript: jsii.String(\"afterConnectScript\"),\n\tcleanSourceMetadataOnMismatch: jsii.Boolean(false),\n\teventsPollInterval: jsii.Number(123),\n\tmaxFileSize: jsii.Number(123),\n\tparallelLoadThreads: jsii.Number(123),\n\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\tserverTimezone: jsii.String(\"serverTimezone\"),\n\ttargetDbType: jsii.String(\"targetDbType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst mySqlSettingsProperty: dms.CfnEndpoint.MySqlSettingsProperty = {\n  afterConnectScript: 'afterConnectScript',\n  cleanSourceMetadataOnMismatch: false,\n  eventsPollInterval: 123,\n  maxFileSize: 123,\n  parallelLoadThreads: 123,\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  serverTimezone: 'serverTimezone',\n  targetDbType: 'targetDbType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.MySqlSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.MySqlSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst mySqlSettingsProperty: dms.CfnEndpoint.MySqlSettingsProperty = {\n  afterConnectScript: 'afterConnectScript',\n  cleanSourceMetadataOnMismatch: false,\n  eventsPollInterval: 123,\n  maxFileSize: 123,\n  parallelLoadThreads: 123,\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  serverTimezone: 'serverTimezone',\n  targetDbType: 'targetDbType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 6,
        "75": 14,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "fdec00246de165610553d802760304f1146ed47fda84c8f4a4f59e143298aa72"
    },
    "96ffb94569dcebe89ce7e990923c19cad3eaea95a7753fc6489ee4f330bbfa37": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\nneptune_settings_property = dms.CfnEndpoint.NeptuneSettingsProperty(\n    error_retry_duration=123,\n    iam_auth_enabled=False,\n    max_file_size=123,\n    max_retry_count=123,\n    s3_bucket_folder=\"s3BucketFolder\",\n    s3_bucket_name=\"s3BucketName\",\n    service_access_role_arn=\"serviceAccessRoleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nNeptuneSettingsProperty neptuneSettingsProperty = new NeptuneSettingsProperty {\n    ErrorRetryDuration = 123,\n    IamAuthEnabled = false,\n    MaxFileSize = 123,\n    MaxRetryCount = 123,\n    S3BucketFolder = \"s3BucketFolder\",\n    S3BucketName = \"s3BucketName\",\n    ServiceAccessRoleArn = \"serviceAccessRoleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nNeptuneSettingsProperty neptuneSettingsProperty = NeptuneSettingsProperty.builder()\n        .errorRetryDuration(123)\n        .iamAuthEnabled(false)\n        .maxFileSize(123)\n        .maxRetryCount(123)\n        .s3BucketFolder(\"s3BucketFolder\")\n        .s3BucketName(\"s3BucketName\")\n        .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\nneptuneSettingsProperty := &neptuneSettingsProperty{\n\terrorRetryDuration: jsii.Number(123),\n\tiamAuthEnabled: jsii.Boolean(false),\n\tmaxFileSize: jsii.Number(123),\n\tmaxRetryCount: jsii.Number(123),\n\ts3BucketFolder: jsii.String(\"s3BucketFolder\"),\n\ts3BucketName: jsii.String(\"s3BucketName\"),\n\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst neptuneSettingsProperty: dms.CfnEndpoint.NeptuneSettingsProperty = {\n  errorRetryDuration: 123,\n  iamAuthEnabled: false,\n  maxFileSize: 123,\n  maxRetryCount: 123,\n  s3BucketFolder: 's3BucketFolder',\n  s3BucketName: 's3BucketName',\n  serviceAccessRoleArn: 'serviceAccessRoleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.NeptuneSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.NeptuneSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst neptuneSettingsProperty: dms.CfnEndpoint.NeptuneSettingsProperty = {\n  errorRetryDuration: 123,\n  iamAuthEnabled: false,\n  maxFileSize: 123,\n  maxRetryCount: 123,\n  s3BucketFolder: 's3BucketFolder',\n  s3BucketName: 's3BucketName',\n  serviceAccessRoleArn: 'serviceAccessRoleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 4,
        "75": 12,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "23c76c4eff543b5a00472eed1b0e7373fca25fb531d597f3d6b9e82a1ce147c5"
    },
    "1ac31d22ed0fd8edf2d1d70df6ee0960c47f769e83ba12710725c9177840de0d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\noracle_settings_property = dms.CfnEndpoint.OracleSettingsProperty(\n    access_alternate_directly=False,\n    additional_archived_log_dest_id=123,\n    add_supplemental_logging=False,\n    allow_select_nested_tables=False,\n    archived_log_dest_id=123,\n    archived_logs_only=False,\n    asm_password=\"asmPassword\",\n    asm_server=\"asmServer\",\n    asm_user=\"asmUser\",\n    char_length_semantics=\"charLengthSemantics\",\n    direct_path_no_log=False,\n    direct_path_parallel_load=False,\n    enable_homogenous_tablespace=False,\n    extra_archived_log_dest_ids=[123],\n    fail_tasks_on_lob_truncation=False,\n    number_datatype_scale=123,\n    oracle_path_prefix=\"oraclePathPrefix\",\n    parallel_asm_read_threads=123,\n    read_ahead_blocks=123,\n    read_table_space_name=False,\n    replace_path_prefix=False,\n    retry_interval=123,\n    secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n    secrets_manager_oracle_asm_access_role_arn=\"secretsManagerOracleAsmAccessRoleArn\",\n    secrets_manager_oracle_asm_secret_id=\"secretsManagerOracleAsmSecretId\",\n    secrets_manager_secret_id=\"secretsManagerSecretId\",\n    security_db_encryption=\"securityDbEncryption\",\n    security_db_encryption_name=\"securityDbEncryptionName\",\n    spatial_data_option_to_geo_json_function_name=\"spatialDataOptionToGeoJsonFunctionName\",\n    standby_delay_time=123,\n    use_alternate_folder_for_online=False,\n    use_bFile=False,\n    use_direct_path_full_load=False,\n    use_logminer_reader=False,\n    use_path_prefix=\"usePathPrefix\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nOracleSettingsProperty oracleSettingsProperty = new OracleSettingsProperty {\n    AccessAlternateDirectly = false,\n    AdditionalArchivedLogDestId = 123,\n    AddSupplementalLogging = false,\n    AllowSelectNestedTables = false,\n    ArchivedLogDestId = 123,\n    ArchivedLogsOnly = false,\n    AsmPassword = \"asmPassword\",\n    AsmServer = \"asmServer\",\n    AsmUser = \"asmUser\",\n    CharLengthSemantics = \"charLengthSemantics\",\n    DirectPathNoLog = false,\n    DirectPathParallelLoad = false,\n    EnableHomogenousTablespace = false,\n    ExtraArchivedLogDestIds = new [] { 123 },\n    FailTasksOnLobTruncation = false,\n    NumberDatatypeScale = 123,\n    OraclePathPrefix = \"oraclePathPrefix\",\n    ParallelAsmReadThreads = 123,\n    ReadAheadBlocks = 123,\n    ReadTableSpaceName = false,\n    ReplacePathPrefix = false,\n    RetryInterval = 123,\n    SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n    SecretsManagerOracleAsmAccessRoleArn = \"secretsManagerOracleAsmAccessRoleArn\",\n    SecretsManagerOracleAsmSecretId = \"secretsManagerOracleAsmSecretId\",\n    SecretsManagerSecretId = \"secretsManagerSecretId\",\n    SecurityDbEncryption = \"securityDbEncryption\",\n    SecurityDbEncryptionName = \"securityDbEncryptionName\",\n    SpatialDataOptionToGeoJsonFunctionName = \"spatialDataOptionToGeoJsonFunctionName\",\n    StandbyDelayTime = 123,\n    UseAlternateFolderForOnline = false,\n    UseBFile = false,\n    UseDirectPathFullLoad = false,\n    UseLogminerReader = false,\n    UsePathPrefix = \"usePathPrefix\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nOracleSettingsProperty oracleSettingsProperty = OracleSettingsProperty.builder()\n        .accessAlternateDirectly(false)\n        .additionalArchivedLogDestId(123)\n        .addSupplementalLogging(false)\n        .allowSelectNestedTables(false)\n        .archivedLogDestId(123)\n        .archivedLogsOnly(false)\n        .asmPassword(\"asmPassword\")\n        .asmServer(\"asmServer\")\n        .asmUser(\"asmUser\")\n        .charLengthSemantics(\"charLengthSemantics\")\n        .directPathNoLog(false)\n        .directPathParallelLoad(false)\n        .enableHomogenousTablespace(false)\n        .extraArchivedLogDestIds(List.of(123))\n        .failTasksOnLobTruncation(false)\n        .numberDatatypeScale(123)\n        .oraclePathPrefix(\"oraclePathPrefix\")\n        .parallelAsmReadThreads(123)\n        .readAheadBlocks(123)\n        .readTableSpaceName(false)\n        .replacePathPrefix(false)\n        .retryInterval(123)\n        .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n        .secretsManagerOracleAsmAccessRoleArn(\"secretsManagerOracleAsmAccessRoleArn\")\n        .secretsManagerOracleAsmSecretId(\"secretsManagerOracleAsmSecretId\")\n        .secretsManagerSecretId(\"secretsManagerSecretId\")\n        .securityDbEncryption(\"securityDbEncryption\")\n        .securityDbEncryptionName(\"securityDbEncryptionName\")\n        .spatialDataOptionToGeoJsonFunctionName(\"spatialDataOptionToGeoJsonFunctionName\")\n        .standbyDelayTime(123)\n        .useAlternateFolderForOnline(false)\n        .useBFile(false)\n        .useDirectPathFullLoad(false)\n        .useLogminerReader(false)\n        .usePathPrefix(\"usePathPrefix\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\noracleSettingsProperty := &oracleSettingsProperty{\n\taccessAlternateDirectly: jsii.Boolean(false),\n\tadditionalArchivedLogDestId: jsii.Number(123),\n\taddSupplementalLogging: jsii.Boolean(false),\n\tallowSelectNestedTables: jsii.Boolean(false),\n\tarchivedLogDestId: jsii.Number(123),\n\tarchivedLogsOnly: jsii.Boolean(false),\n\tasmPassword: jsii.String(\"asmPassword\"),\n\tasmServer: jsii.String(\"asmServer\"),\n\tasmUser: jsii.String(\"asmUser\"),\n\tcharLengthSemantics: jsii.String(\"charLengthSemantics\"),\n\tdirectPathNoLog: jsii.Boolean(false),\n\tdirectPathParallelLoad: jsii.Boolean(false),\n\tenableHomogenousTablespace: jsii.Boolean(false),\n\textraArchivedLogDestIds: []interface{}{\n\t\tjsii.Number(123),\n\t},\n\tfailTasksOnLobTruncation: jsii.Boolean(false),\n\tnumberDatatypeScale: jsii.Number(123),\n\toraclePathPrefix: jsii.String(\"oraclePathPrefix\"),\n\tparallelAsmReadThreads: jsii.Number(123),\n\treadAheadBlocks: jsii.Number(123),\n\treadTableSpaceName: jsii.Boolean(false),\n\treplacePathPrefix: jsii.Boolean(false),\n\tretryInterval: jsii.Number(123),\n\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\tsecretsManagerOracleAsmAccessRoleArn: jsii.String(\"secretsManagerOracleAsmAccessRoleArn\"),\n\tsecretsManagerOracleAsmSecretId: jsii.String(\"secretsManagerOracleAsmSecretId\"),\n\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\tsecurityDbEncryption: jsii.String(\"securityDbEncryption\"),\n\tsecurityDbEncryptionName: jsii.String(\"securityDbEncryptionName\"),\n\tspatialDataOptionToGeoJsonFunctionName: jsii.String(\"spatialDataOptionToGeoJsonFunctionName\"),\n\tstandbyDelayTime: jsii.Number(123),\n\tuseAlternateFolderForOnline: jsii.Boolean(false),\n\tuseBFile: jsii.Boolean(false),\n\tuseDirectPathFullLoad: jsii.Boolean(false),\n\tuseLogminerReader: jsii.Boolean(false),\n\tusePathPrefix: jsii.String(\"usePathPrefix\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst oracleSettingsProperty: dms.CfnEndpoint.OracleSettingsProperty = {\n  accessAlternateDirectly: false,\n  additionalArchivedLogDestId: 123,\n  addSupplementalLogging: false,\n  allowSelectNestedTables: false,\n  archivedLogDestId: 123,\n  archivedLogsOnly: false,\n  asmPassword: 'asmPassword',\n  asmServer: 'asmServer',\n  asmUser: 'asmUser',\n  charLengthSemantics: 'charLengthSemantics',\n  directPathNoLog: false,\n  directPathParallelLoad: false,\n  enableHomogenousTablespace: false,\n  extraArchivedLogDestIds: [123],\n  failTasksOnLobTruncation: false,\n  numberDatatypeScale: 123,\n  oraclePathPrefix: 'oraclePathPrefix',\n  parallelAsmReadThreads: 123,\n  readAheadBlocks: 123,\n  readTableSpaceName: false,\n  replacePathPrefix: false,\n  retryInterval: 123,\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerOracleAsmAccessRoleArn: 'secretsManagerOracleAsmAccessRoleArn',\n  secretsManagerOracleAsmSecretId: 'secretsManagerOracleAsmSecretId',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  securityDbEncryption: 'securityDbEncryption',\n  securityDbEncryptionName: 'securityDbEncryptionName',\n  spatialDataOptionToGeoJsonFunctionName: 'spatialDataOptionToGeoJsonFunctionName',\n  standbyDelayTime: 123,\n  useAlternateFolderForOnline: false,\n  useBFile: false,\n  useDirectPathFullLoad: false,\n  useLogminerReader: false,\n  usePathPrefix: 'usePathPrefix',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.OracleSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.OracleSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst oracleSettingsProperty: dms.CfnEndpoint.OracleSettingsProperty = {\n  accessAlternateDirectly: false,\n  additionalArchivedLogDestId: 123,\n  addSupplementalLogging: false,\n  allowSelectNestedTables: false,\n  archivedLogDestId: 123,\n  archivedLogsOnly: false,\n  asmPassword: 'asmPassword',\n  asmServer: 'asmServer',\n  asmUser: 'asmUser',\n  charLengthSemantics: 'charLengthSemantics',\n  directPathNoLog: false,\n  directPathParallelLoad: false,\n  enableHomogenousTablespace: false,\n  extraArchivedLogDestIds: [123],\n  failTasksOnLobTruncation: false,\n  numberDatatypeScale: 123,\n  oraclePathPrefix: 'oraclePathPrefix',\n  parallelAsmReadThreads: 123,\n  readAheadBlocks: 123,\n  readTableSpaceName: false,\n  replacePathPrefix: false,\n  retryInterval: 123,\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerOracleAsmAccessRoleArn: 'secretsManagerOracleAsmAccessRoleArn',\n  secretsManagerOracleAsmSecretId: 'secretsManagerOracleAsmSecretId',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  securityDbEncryption: 'securityDbEncryption',\n  securityDbEncryptionName: 'securityDbEncryptionName',\n  spatialDataOptionToGeoJsonFunctionName: 'spatialDataOptionToGeoJsonFunctionName',\n  standbyDelayTime: 123,\n  useAlternateFolderForOnline: false,\n  useBFile: false,\n  useDirectPathFullLoad: false,\n  useLogminerReader: false,\n  usePathPrefix: 'usePathPrefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 8,
        "10": 14,
        "75": 40,
        "91": 14,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 35,
        "290": 1
      },
      "fqnsFingerprint": "db75113ce0a6e8823d0e208cf2f5404d5773f563b6f35662c73327e6c4086b9a"
    },
    "77c46a70bc9df5c9ddc8a201852e206fd6a8175fabbe87fd858178de69b8a78f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\npostgre_sql_settings_property = dms.CfnEndpoint.PostgreSqlSettingsProperty(\n    after_connect_script=\"afterConnectScript\",\n    capture_ddls=False,\n    ddl_artifacts_schema=\"ddlArtifactsSchema\",\n    execute_timeout=123,\n    fail_tasks_on_lob_truncation=False,\n    heartbeat_enable=False,\n    heartbeat_frequency=123,\n    heartbeat_schema=\"heartbeatSchema\",\n    max_file_size=123,\n    plugin_name=\"pluginName\",\n    secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n    secrets_manager_secret_id=\"secretsManagerSecretId\",\n    slot_name=\"slotName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nPostgreSqlSettingsProperty postgreSqlSettingsProperty = new PostgreSqlSettingsProperty {\n    AfterConnectScript = \"afterConnectScript\",\n    CaptureDdls = false,\n    DdlArtifactsSchema = \"ddlArtifactsSchema\",\n    ExecuteTimeout = 123,\n    FailTasksOnLobTruncation = false,\n    HeartbeatEnable = false,\n    HeartbeatFrequency = 123,\n    HeartbeatSchema = \"heartbeatSchema\",\n    MaxFileSize = 123,\n    PluginName = \"pluginName\",\n    SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n    SecretsManagerSecretId = \"secretsManagerSecretId\",\n    SlotName = \"slotName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nPostgreSqlSettingsProperty postgreSqlSettingsProperty = PostgreSqlSettingsProperty.builder()\n        .afterConnectScript(\"afterConnectScript\")\n        .captureDdls(false)\n        .ddlArtifactsSchema(\"ddlArtifactsSchema\")\n        .executeTimeout(123)\n        .failTasksOnLobTruncation(false)\n        .heartbeatEnable(false)\n        .heartbeatFrequency(123)\n        .heartbeatSchema(\"heartbeatSchema\")\n        .maxFileSize(123)\n        .pluginName(\"pluginName\")\n        .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n        .secretsManagerSecretId(\"secretsManagerSecretId\")\n        .slotName(\"slotName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\npostgreSqlSettingsProperty := &postgreSqlSettingsProperty{\n\tafterConnectScript: jsii.String(\"afterConnectScript\"),\n\tcaptureDdls: jsii.Boolean(false),\n\tddlArtifactsSchema: jsii.String(\"ddlArtifactsSchema\"),\n\texecuteTimeout: jsii.Number(123),\n\tfailTasksOnLobTruncation: jsii.Boolean(false),\n\theartbeatEnable: jsii.Boolean(false),\n\theartbeatFrequency: jsii.Number(123),\n\theartbeatSchema: jsii.String(\"heartbeatSchema\"),\n\tmaxFileSize: jsii.Number(123),\n\tpluginName: jsii.String(\"pluginName\"),\n\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\tslotName: jsii.String(\"slotName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst postgreSqlSettingsProperty: dms.CfnEndpoint.PostgreSqlSettingsProperty = {\n  afterConnectScript: 'afterConnectScript',\n  captureDdls: false,\n  ddlArtifactsSchema: 'ddlArtifactsSchema',\n  executeTimeout: 123,\n  failTasksOnLobTruncation: false,\n  heartbeatEnable: false,\n  heartbeatFrequency: 123,\n  heartbeatSchema: 'heartbeatSchema',\n  maxFileSize: 123,\n  pluginName: 'pluginName',\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  slotName: 'slotName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.PostgreSqlSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.PostgreSqlSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst postgreSqlSettingsProperty: dms.CfnEndpoint.PostgreSqlSettingsProperty = {\n  afterConnectScript: 'afterConnectScript',\n  captureDdls: false,\n  ddlArtifactsSchema: 'ddlArtifactsSchema',\n  executeTimeout: 123,\n  failTasksOnLobTruncation: false,\n  heartbeatEnable: false,\n  heartbeatFrequency: 123,\n  heartbeatSchema: 'heartbeatSchema',\n  maxFileSize: 123,\n  pluginName: 'pluginName',\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  slotName: 'slotName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 8,
        "75": 18,
        "91": 3,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "571a59002a761300631721e5f08742ff0568f11cac1e17c1863a54e78bf15554"
    },
    "bd88f71ae4caf8cb0050cc3a9d336e0bfd823ed42ca12ea7c3a617ec3b0830a9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\nredis_settings_property = dms.CfnEndpoint.RedisSettingsProperty(\n    auth_password=\"authPassword\",\n    auth_type=\"authType\",\n    auth_user_name=\"authUserName\",\n    port=123,\n    server_name=\"serverName\",\n    ssl_ca_certificate_arn=\"sslCaCertificateArn\",\n    ssl_security_protocol=\"sslSecurityProtocol\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nRedisSettingsProperty redisSettingsProperty = new RedisSettingsProperty {\n    AuthPassword = \"authPassword\",\n    AuthType = \"authType\",\n    AuthUserName = \"authUserName\",\n    Port = 123,\n    ServerName = \"serverName\",\n    SslCaCertificateArn = \"sslCaCertificateArn\",\n    SslSecurityProtocol = \"sslSecurityProtocol\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nRedisSettingsProperty redisSettingsProperty = RedisSettingsProperty.builder()\n        .authPassword(\"authPassword\")\n        .authType(\"authType\")\n        .authUserName(\"authUserName\")\n        .port(123)\n        .serverName(\"serverName\")\n        .sslCaCertificateArn(\"sslCaCertificateArn\")\n        .sslSecurityProtocol(\"sslSecurityProtocol\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\nredisSettingsProperty := &redisSettingsProperty{\n\tauthPassword: jsii.String(\"authPassword\"),\n\tauthType: jsii.String(\"authType\"),\n\tauthUserName: jsii.String(\"authUserName\"),\n\tport: jsii.Number(123),\n\tserverName: jsii.String(\"serverName\"),\n\tsslCaCertificateArn: jsii.String(\"sslCaCertificateArn\"),\n\tsslSecurityProtocol: jsii.String(\"sslSecurityProtocol\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst redisSettingsProperty: dms.CfnEndpoint.RedisSettingsProperty = {\n  authPassword: 'authPassword',\n  authType: 'authType',\n  authUserName: 'authUserName',\n  port: 123,\n  serverName: 'serverName',\n  sslCaCertificateArn: 'sslCaCertificateArn',\n  sslSecurityProtocol: 'sslSecurityProtocol',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.RedisSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.RedisSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst redisSettingsProperty: dms.CfnEndpoint.RedisSettingsProperty = {\n  authPassword: 'authPassword',\n  authType: 'authType',\n  authUserName: 'authUserName',\n  port: 123,\n  serverName: 'serverName',\n  sslCaCertificateArn: 'sslCaCertificateArn',\n  sslSecurityProtocol: 'sslSecurityProtocol',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 7,
        "75": 12,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "60d60a305800546db400dcf1f3d27c679f55845fb208d460e181afbdf0669b14"
    },
    "3bfd894931393636d0ab2548dcdc8966f43d532a7a16a5684b7903d6cf5e7a2e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\nredshift_settings_property = dms.CfnEndpoint.RedshiftSettingsProperty(\n    accept_any_date=False,\n    after_connect_script=\"afterConnectScript\",\n    bucket_folder=\"bucketFolder\",\n    bucket_name=\"bucketName\",\n    case_sensitive_names=False,\n    comp_update=False,\n    connection_timeout=123,\n    date_format=\"dateFormat\",\n    empty_as_null=False,\n    encryption_mode=\"encryptionMode\",\n    explicit_ids=False,\n    file_transfer_upload_streams=123,\n    load_timeout=123,\n    max_file_size=123,\n    remove_quotes=False,\n    replace_chars=\"replaceChars\",\n    replace_invalid_chars=\"replaceInvalidChars\",\n    secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n    secrets_manager_secret_id=\"secretsManagerSecretId\",\n    server_side_encryption_kms_key_id=\"serverSideEncryptionKmsKeyId\",\n    service_access_role_arn=\"serviceAccessRoleArn\",\n    time_format=\"timeFormat\",\n    trim_blanks=False,\n    truncate_columns=False,\n    write_buffer_size=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nRedshiftSettingsProperty redshiftSettingsProperty = new RedshiftSettingsProperty {\n    AcceptAnyDate = false,\n    AfterConnectScript = \"afterConnectScript\",\n    BucketFolder = \"bucketFolder\",\n    BucketName = \"bucketName\",\n    CaseSensitiveNames = false,\n    CompUpdate = false,\n    ConnectionTimeout = 123,\n    DateFormat = \"dateFormat\",\n    EmptyAsNull = false,\n    EncryptionMode = \"encryptionMode\",\n    ExplicitIds = false,\n    FileTransferUploadStreams = 123,\n    LoadTimeout = 123,\n    MaxFileSize = 123,\n    RemoveQuotes = false,\n    ReplaceChars = \"replaceChars\",\n    ReplaceInvalidChars = \"replaceInvalidChars\",\n    SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n    SecretsManagerSecretId = \"secretsManagerSecretId\",\n    ServerSideEncryptionKmsKeyId = \"serverSideEncryptionKmsKeyId\",\n    ServiceAccessRoleArn = \"serviceAccessRoleArn\",\n    TimeFormat = \"timeFormat\",\n    TrimBlanks = false,\n    TruncateColumns = false,\n    WriteBufferSize = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nRedshiftSettingsProperty redshiftSettingsProperty = RedshiftSettingsProperty.builder()\n        .acceptAnyDate(false)\n        .afterConnectScript(\"afterConnectScript\")\n        .bucketFolder(\"bucketFolder\")\n        .bucketName(\"bucketName\")\n        .caseSensitiveNames(false)\n        .compUpdate(false)\n        .connectionTimeout(123)\n        .dateFormat(\"dateFormat\")\n        .emptyAsNull(false)\n        .encryptionMode(\"encryptionMode\")\n        .explicitIds(false)\n        .fileTransferUploadStreams(123)\n        .loadTimeout(123)\n        .maxFileSize(123)\n        .removeQuotes(false)\n        .replaceChars(\"replaceChars\")\n        .replaceInvalidChars(\"replaceInvalidChars\")\n        .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n        .secretsManagerSecretId(\"secretsManagerSecretId\")\n        .serverSideEncryptionKmsKeyId(\"serverSideEncryptionKmsKeyId\")\n        .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n        .timeFormat(\"timeFormat\")\n        .trimBlanks(false)\n        .truncateColumns(false)\n        .writeBufferSize(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\nredshiftSettingsProperty := &redshiftSettingsProperty{\n\tacceptAnyDate: jsii.Boolean(false),\n\tafterConnectScript: jsii.String(\"afterConnectScript\"),\n\tbucketFolder: jsii.String(\"bucketFolder\"),\n\tbucketName: jsii.String(\"bucketName\"),\n\tcaseSensitiveNames: jsii.Boolean(false),\n\tcompUpdate: jsii.Boolean(false),\n\tconnectionTimeout: jsii.Number(123),\n\tdateFormat: jsii.String(\"dateFormat\"),\n\temptyAsNull: jsii.Boolean(false),\n\tencryptionMode: jsii.String(\"encryptionMode\"),\n\texplicitIds: jsii.Boolean(false),\n\tfileTransferUploadStreams: jsii.Number(123),\n\tloadTimeout: jsii.Number(123),\n\tmaxFileSize: jsii.Number(123),\n\tremoveQuotes: jsii.Boolean(false),\n\treplaceChars: jsii.String(\"replaceChars\"),\n\treplaceInvalidChars: jsii.String(\"replaceInvalidChars\"),\n\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\tserverSideEncryptionKmsKeyId: jsii.String(\"serverSideEncryptionKmsKeyId\"),\n\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\ttimeFormat: jsii.String(\"timeFormat\"),\n\ttrimBlanks: jsii.Boolean(false),\n\ttruncateColumns: jsii.Boolean(false),\n\twriteBufferSize: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst redshiftSettingsProperty: dms.CfnEndpoint.RedshiftSettingsProperty = {\n  acceptAnyDate: false,\n  afterConnectScript: 'afterConnectScript',\n  bucketFolder: 'bucketFolder',\n  bucketName: 'bucketName',\n  caseSensitiveNames: false,\n  compUpdate: false,\n  connectionTimeout: 123,\n  dateFormat: 'dateFormat',\n  emptyAsNull: false,\n  encryptionMode: 'encryptionMode',\n  explicitIds: false,\n  fileTransferUploadStreams: 123,\n  loadTimeout: 123,\n  maxFileSize: 123,\n  removeQuotes: false,\n  replaceChars: 'replaceChars',\n  replaceInvalidChars: 'replaceInvalidChars',\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  serverSideEncryptionKmsKeyId: 'serverSideEncryptionKmsKeyId',\n  serviceAccessRoleArn: 'serviceAccessRoleArn',\n  timeFormat: 'timeFormat',\n  trimBlanks: false,\n  truncateColumns: false,\n  writeBufferSize: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.RedshiftSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.RedshiftSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst redshiftSettingsProperty: dms.CfnEndpoint.RedshiftSettingsProperty = {\n  acceptAnyDate: false,\n  afterConnectScript: 'afterConnectScript',\n  bucketFolder: 'bucketFolder',\n  bucketName: 'bucketName',\n  caseSensitiveNames: false,\n  compUpdate: false,\n  connectionTimeout: 123,\n  dateFormat: 'dateFormat',\n  emptyAsNull: false,\n  encryptionMode: 'encryptionMode',\n  explicitIds: false,\n  fileTransferUploadStreams: 123,\n  loadTimeout: 123,\n  maxFileSize: 123,\n  removeQuotes: false,\n  replaceChars: 'replaceChars',\n  replaceInvalidChars: 'replaceInvalidChars',\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n  serverSideEncryptionKmsKeyId: 'serverSideEncryptionKmsKeyId',\n  serviceAccessRoleArn: 'serviceAccessRoleArn',\n  timeFormat: 'timeFormat',\n  trimBlanks: false,\n  truncateColumns: false,\n  writeBufferSize: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 13,
        "75": 30,
        "91": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 25,
        "290": 1
      },
      "fqnsFingerprint": "6c88e8fcfd7dc738307f29f207943e745eb519816d2b0a59c99e2546f4c796cf"
    },
    "d2003872851032dd7ab4f817d490b1d267a9c8ff7882d75bf375ac8799b5d3a6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ns3_settings_property = dms.CfnEndpoint.S3SettingsProperty(\n    add_column_name=False,\n    bucket_folder=\"bucketFolder\",\n    bucket_name=\"bucketName\",\n    canned_acl_for_objects=\"cannedAclForObjects\",\n    cdc_inserts_and_updates=False,\n    cdc_inserts_only=False,\n    cdc_max_batch_interval=123,\n    cdc_min_file_size=123,\n    cdc_path=\"cdcPath\",\n    compression_type=\"compressionType\",\n    csv_delimiter=\"csvDelimiter\",\n    csv_no_sup_value=\"csvNoSupValue\",\n    csv_null_value=\"csvNullValue\",\n    csv_row_delimiter=\"csvRowDelimiter\",\n    data_format=\"dataFormat\",\n    data_page_size=123,\n    date_partition_delimiter=\"datePartitionDelimiter\",\n    date_partition_enabled=False,\n    date_partition_sequence=\"datePartitionSequence\",\n    date_partition_timezone=\"datePartitionTimezone\",\n    dict_page_size_limit=123,\n    enable_statistics=False,\n    encoding_type=\"encodingType\",\n    encryption_mode=\"encryptionMode\",\n    external_table_definition=\"externalTableDefinition\",\n    ignore_header_rows=123,\n    include_op_for_full_load=False,\n    max_file_size=123,\n    parquet_timestamp_in_millisecond=False,\n    parquet_version=\"parquetVersion\",\n    preserve_transactions=False,\n    rfc4180=False,\n    row_group_length=123,\n    server_side_encryption_kms_key_id=\"serverSideEncryptionKmsKeyId\",\n    service_access_role_arn=\"serviceAccessRoleArn\",\n    timestamp_column_name=\"timestampColumnName\",\n    use_csv_no_sup_value=False,\n    use_task_start_time_for_full_load_timestamp=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nS3SettingsProperty s3SettingsProperty = new S3SettingsProperty {\n    AddColumnName = false,\n    BucketFolder = \"bucketFolder\",\n    BucketName = \"bucketName\",\n    CannedAclForObjects = \"cannedAclForObjects\",\n    CdcInsertsAndUpdates = false,\n    CdcInsertsOnly = false,\n    CdcMaxBatchInterval = 123,\n    CdcMinFileSize = 123,\n    CdcPath = \"cdcPath\",\n    CompressionType = \"compressionType\",\n    CsvDelimiter = \"csvDelimiter\",\n    CsvNoSupValue = \"csvNoSupValue\",\n    CsvNullValue = \"csvNullValue\",\n    CsvRowDelimiter = \"csvRowDelimiter\",\n    DataFormat = \"dataFormat\",\n    DataPageSize = 123,\n    DatePartitionDelimiter = \"datePartitionDelimiter\",\n    DatePartitionEnabled = false,\n    DatePartitionSequence = \"datePartitionSequence\",\n    DatePartitionTimezone = \"datePartitionTimezone\",\n    DictPageSizeLimit = 123,\n    EnableStatistics = false,\n    EncodingType = \"encodingType\",\n    EncryptionMode = \"encryptionMode\",\n    ExternalTableDefinition = \"externalTableDefinition\",\n    IgnoreHeaderRows = 123,\n    IncludeOpForFullLoad = false,\n    MaxFileSize = 123,\n    ParquetTimestampInMillisecond = false,\n    ParquetVersion = \"parquetVersion\",\n    PreserveTransactions = false,\n    Rfc4180 = false,\n    RowGroupLength = 123,\n    ServerSideEncryptionKmsKeyId = \"serverSideEncryptionKmsKeyId\",\n    ServiceAccessRoleArn = \"serviceAccessRoleArn\",\n    TimestampColumnName = \"timestampColumnName\",\n    UseCsvNoSupValue = false,\n    UseTaskStartTimeForFullLoadTimestamp = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nS3SettingsProperty s3SettingsProperty = S3SettingsProperty.builder()\n        .addColumnName(false)\n        .bucketFolder(\"bucketFolder\")\n        .bucketName(\"bucketName\")\n        .cannedAclForObjects(\"cannedAclForObjects\")\n        .cdcInsertsAndUpdates(false)\n        .cdcInsertsOnly(false)\n        .cdcMaxBatchInterval(123)\n        .cdcMinFileSize(123)\n        .cdcPath(\"cdcPath\")\n        .compressionType(\"compressionType\")\n        .csvDelimiter(\"csvDelimiter\")\n        .csvNoSupValue(\"csvNoSupValue\")\n        .csvNullValue(\"csvNullValue\")\n        .csvRowDelimiter(\"csvRowDelimiter\")\n        .dataFormat(\"dataFormat\")\n        .dataPageSize(123)\n        .datePartitionDelimiter(\"datePartitionDelimiter\")\n        .datePartitionEnabled(false)\n        .datePartitionSequence(\"datePartitionSequence\")\n        .datePartitionTimezone(\"datePartitionTimezone\")\n        .dictPageSizeLimit(123)\n        .enableStatistics(false)\n        .encodingType(\"encodingType\")\n        .encryptionMode(\"encryptionMode\")\n        .externalTableDefinition(\"externalTableDefinition\")\n        .ignoreHeaderRows(123)\n        .includeOpForFullLoad(false)\n        .maxFileSize(123)\n        .parquetTimestampInMillisecond(false)\n        .parquetVersion(\"parquetVersion\")\n        .preserveTransactions(false)\n        .rfc4180(false)\n        .rowGroupLength(123)\n        .serverSideEncryptionKmsKeyId(\"serverSideEncryptionKmsKeyId\")\n        .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n        .timestampColumnName(\"timestampColumnName\")\n        .useCsvNoSupValue(false)\n        .useTaskStartTimeForFullLoadTimestamp(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ns3SettingsProperty := &s3SettingsProperty{\n\taddColumnName: jsii.Boolean(false),\n\tbucketFolder: jsii.String(\"bucketFolder\"),\n\tbucketName: jsii.String(\"bucketName\"),\n\tcannedAclForObjects: jsii.String(\"cannedAclForObjects\"),\n\tcdcInsertsAndUpdates: jsii.Boolean(false),\n\tcdcInsertsOnly: jsii.Boolean(false),\n\tcdcMaxBatchInterval: jsii.Number(123),\n\tcdcMinFileSize: jsii.Number(123),\n\tcdcPath: jsii.String(\"cdcPath\"),\n\tcompressionType: jsii.String(\"compressionType\"),\n\tcsvDelimiter: jsii.String(\"csvDelimiter\"),\n\tcsvNoSupValue: jsii.String(\"csvNoSupValue\"),\n\tcsvNullValue: jsii.String(\"csvNullValue\"),\n\tcsvRowDelimiter: jsii.String(\"csvRowDelimiter\"),\n\tdataFormat: jsii.String(\"dataFormat\"),\n\tdataPageSize: jsii.Number(123),\n\tdatePartitionDelimiter: jsii.String(\"datePartitionDelimiter\"),\n\tdatePartitionEnabled: jsii.Boolean(false),\n\tdatePartitionSequence: jsii.String(\"datePartitionSequence\"),\n\tdatePartitionTimezone: jsii.String(\"datePartitionTimezone\"),\n\tdictPageSizeLimit: jsii.Number(123),\n\tenableStatistics: jsii.Boolean(false),\n\tencodingType: jsii.String(\"encodingType\"),\n\tencryptionMode: jsii.String(\"encryptionMode\"),\n\texternalTableDefinition: jsii.String(\"externalTableDefinition\"),\n\tignoreHeaderRows: jsii.Number(123),\n\tincludeOpForFullLoad: jsii.Boolean(false),\n\tmaxFileSize: jsii.Number(123),\n\tparquetTimestampInMillisecond: jsii.Boolean(false),\n\tparquetVersion: jsii.String(\"parquetVersion\"),\n\tpreserveTransactions: jsii.Boolean(false),\n\trfc4180: jsii.Boolean(false),\n\trowGroupLength: jsii.Number(123),\n\tserverSideEncryptionKmsKeyId: jsii.String(\"serverSideEncryptionKmsKeyId\"),\n\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\ttimestampColumnName: jsii.String(\"timestampColumnName\"),\n\tuseCsvNoSupValue: jsii.Boolean(false),\n\tuseTaskStartTimeForFullLoadTimestamp: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst s3SettingsProperty: dms.CfnEndpoint.S3SettingsProperty = {\n  addColumnName: false,\n  bucketFolder: 'bucketFolder',\n  bucketName: 'bucketName',\n  cannedAclForObjects: 'cannedAclForObjects',\n  cdcInsertsAndUpdates: false,\n  cdcInsertsOnly: false,\n  cdcMaxBatchInterval: 123,\n  cdcMinFileSize: 123,\n  cdcPath: 'cdcPath',\n  compressionType: 'compressionType',\n  csvDelimiter: 'csvDelimiter',\n  csvNoSupValue: 'csvNoSupValue',\n  csvNullValue: 'csvNullValue',\n  csvRowDelimiter: 'csvRowDelimiter',\n  dataFormat: 'dataFormat',\n  dataPageSize: 123,\n  datePartitionDelimiter: 'datePartitionDelimiter',\n  datePartitionEnabled: false,\n  datePartitionSequence: 'datePartitionSequence',\n  datePartitionTimezone: 'datePartitionTimezone',\n  dictPageSizeLimit: 123,\n  enableStatistics: false,\n  encodingType: 'encodingType',\n  encryptionMode: 'encryptionMode',\n  externalTableDefinition: 'externalTableDefinition',\n  ignoreHeaderRows: 123,\n  includeOpForFullLoad: false,\n  maxFileSize: 123,\n  parquetTimestampInMillisecond: false,\n  parquetVersion: 'parquetVersion',\n  preserveTransactions: false,\n  rfc4180: false,\n  rowGroupLength: 123,\n  serverSideEncryptionKmsKeyId: 'serverSideEncryptionKmsKeyId',\n  serviceAccessRoleArn: 'serviceAccessRoleArn',\n  timestampColumnName: 'timestampColumnName',\n  useCsvNoSupValue: false,\n  useTaskStartTimeForFullLoadTimestamp: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.S3SettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.S3SettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3SettingsProperty: dms.CfnEndpoint.S3SettingsProperty = {\n  addColumnName: false,\n  bucketFolder: 'bucketFolder',\n  bucketName: 'bucketName',\n  cannedAclForObjects: 'cannedAclForObjects',\n  cdcInsertsAndUpdates: false,\n  cdcInsertsOnly: false,\n  cdcMaxBatchInterval: 123,\n  cdcMinFileSize: 123,\n  cdcPath: 'cdcPath',\n  compressionType: 'compressionType',\n  csvDelimiter: 'csvDelimiter',\n  csvNoSupValue: 'csvNoSupValue',\n  csvNullValue: 'csvNullValue',\n  csvRowDelimiter: 'csvRowDelimiter',\n  dataFormat: 'dataFormat',\n  dataPageSize: 123,\n  datePartitionDelimiter: 'datePartitionDelimiter',\n  datePartitionEnabled: false,\n  datePartitionSequence: 'datePartitionSequence',\n  datePartitionTimezone: 'datePartitionTimezone',\n  dictPageSizeLimit: 123,\n  enableStatistics: false,\n  encodingType: 'encodingType',\n  encryptionMode: 'encryptionMode',\n  externalTableDefinition: 'externalTableDefinition',\n  ignoreHeaderRows: 123,\n  includeOpForFullLoad: false,\n  maxFileSize: 123,\n  parquetTimestampInMillisecond: false,\n  parquetVersion: 'parquetVersion',\n  preserveTransactions: false,\n  rfc4180: false,\n  rowGroupLength: 123,\n  serverSideEncryptionKmsKeyId: 'serverSideEncryptionKmsKeyId',\n  serviceAccessRoleArn: 'serviceAccessRoleArn',\n  timestampColumnName: 'timestampColumnName',\n  useCsvNoSupValue: false,\n  useTaskStartTimeForFullLoadTimestamp: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 7,
        "10": 21,
        "75": 43,
        "91": 11,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 38,
        "290": 1
      },
      "fqnsFingerprint": "9c540fb8d0f790c903e3e9f011b8e9f006f3dbad3536b82bf633ae33845c7041"
    },
    "78e6432cfdad4269854eff5e016a28c2f615db181acc6444be5f09615d5ac133": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\nsybase_settings_property = dms.CfnEndpoint.SybaseSettingsProperty(\n    secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n    secrets_manager_secret_id=\"secretsManagerSecretId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nSybaseSettingsProperty sybaseSettingsProperty = new SybaseSettingsProperty {\n    SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n    SecretsManagerSecretId = \"secretsManagerSecretId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nSybaseSettingsProperty sybaseSettingsProperty = SybaseSettingsProperty.builder()\n        .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n        .secretsManagerSecretId(\"secretsManagerSecretId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\nsybaseSettingsProperty := &sybaseSettingsProperty{\n\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst sybaseSettingsProperty: dms.CfnEndpoint.SybaseSettingsProperty = {\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpoint.SybaseSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpoint.SybaseSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sybaseSettingsProperty: dms.CfnEndpoint.SybaseSettingsProperty = {\n  secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n  secretsManagerSecretId: 'secretsManagerSecretId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "b6201b487cb9884f61ba2686db1df1a778a06dc728dcc40d6d6998f12eea55c7"
    },
    "fa86ab38ccd931ebc8cd4bd48684cf31d1ecbdddec7019026c9bea34c691d527": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ncfn_endpoint_props = dms.CfnEndpointProps(\n    endpoint_type=\"endpointType\",\n    engine_name=\"engineName\",\n\n    # the properties below are optional\n    certificate_arn=\"certificateArn\",\n    database_name=\"databaseName\",\n    doc_db_settings=dms.CfnEndpoint.DocDbSettingsProperty(\n        docs_to_investigate=123,\n        extract_doc_id=False,\n        nesting_level=\"nestingLevel\",\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\"\n    ),\n    dynamo_db_settings=dms.CfnEndpoint.DynamoDbSettingsProperty(\n        service_access_role_arn=\"serviceAccessRoleArn\"\n    ),\n    elasticsearch_settings=dms.CfnEndpoint.ElasticsearchSettingsProperty(\n        endpoint_uri=\"endpointUri\",\n        error_retry_duration=123,\n        full_load_error_percentage=123,\n        service_access_role_arn=\"serviceAccessRoleArn\"\n    ),\n    endpoint_identifier=\"endpointIdentifier\",\n    extra_connection_attributes=\"extraConnectionAttributes\",\n    gcp_my_sql_settings=dms.CfnEndpoint.GcpMySQLSettingsProperty(\n        after_connect_script=\"afterConnectScript\",\n        clean_source_metadata_on_mismatch=False,\n        database_name=\"databaseName\",\n        events_poll_interval=123,\n        max_file_size=123,\n        parallel_load_threads=123,\n        password=\"password\",\n        port=123,\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        server_name=\"serverName\",\n        server_timezone=\"serverTimezone\",\n        username=\"username\"\n    ),\n    ibm_db2_settings=dms.CfnEndpoint.IbmDb2SettingsProperty(\n        current_lsn=\"currentLsn\",\n        max_kBytes_per_read=123,\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        set_data_capture_changes=False\n    ),\n    kafka_settings=dms.CfnEndpoint.KafkaSettingsProperty(\n        broker=\"broker\",\n        include_control_details=False,\n        include_null_and_empty=False,\n        include_partition_value=False,\n        include_table_alter_operations=False,\n        include_transaction_details=False,\n        message_format=\"messageFormat\",\n        message_max_bytes=123,\n        no_hex_prefix=False,\n        partition_include_schema_table=False,\n        sasl_password=\"saslPassword\",\n        sasl_user_name=\"saslUserName\",\n        security_protocol=\"securityProtocol\",\n        ssl_ca_certificate_arn=\"sslCaCertificateArn\",\n        ssl_client_certificate_arn=\"sslClientCertificateArn\",\n        ssl_client_key_arn=\"sslClientKeyArn\",\n        ssl_client_key_password=\"sslClientKeyPassword\",\n        topic=\"topic\"\n    ),\n    kinesis_settings=dms.CfnEndpoint.KinesisSettingsProperty(\n        include_control_details=False,\n        include_null_and_empty=False,\n        include_partition_value=False,\n        include_table_alter_operations=False,\n        include_transaction_details=False,\n        message_format=\"messageFormat\",\n        no_hex_prefix=False,\n        partition_include_schema_table=False,\n        service_access_role_arn=\"serviceAccessRoleArn\",\n        stream_arn=\"streamArn\"\n    ),\n    kms_key_id=\"kmsKeyId\",\n    microsoft_sql_server_settings=dms.CfnEndpoint.MicrosoftSqlServerSettingsProperty(\n        bcp_packet_size=123,\n        control_tables_file_group=\"controlTablesFileGroup\",\n        query_single_always_on_node=False,\n        read_backup_only=False,\n        safeguard_policy=\"safeguardPolicy\",\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        use_bcp_full_load=False,\n        use_third_party_backup_device=False\n    ),\n    mongo_db_settings=dms.CfnEndpoint.MongoDbSettingsProperty(\n        auth_mechanism=\"authMechanism\",\n        auth_source=\"authSource\",\n        auth_type=\"authType\",\n        database_name=\"databaseName\",\n        docs_to_investigate=\"docsToInvestigate\",\n        extract_doc_id=\"extractDocId\",\n        nesting_level=\"nestingLevel\",\n        password=\"password\",\n        port=123,\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        server_name=\"serverName\",\n        username=\"username\"\n    ),\n    my_sql_settings=dms.CfnEndpoint.MySqlSettingsProperty(\n        after_connect_script=\"afterConnectScript\",\n        clean_source_metadata_on_mismatch=False,\n        events_poll_interval=123,\n        max_file_size=123,\n        parallel_load_threads=123,\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        server_timezone=\"serverTimezone\",\n        target_db_type=\"targetDbType\"\n    ),\n    neptune_settings=dms.CfnEndpoint.NeptuneSettingsProperty(\n        error_retry_duration=123,\n        iam_auth_enabled=False,\n        max_file_size=123,\n        max_retry_count=123,\n        s3_bucket_folder=\"s3BucketFolder\",\n        s3_bucket_name=\"s3BucketName\",\n        service_access_role_arn=\"serviceAccessRoleArn\"\n    ),\n    oracle_settings=dms.CfnEndpoint.OracleSettingsProperty(\n        access_alternate_directly=False,\n        additional_archived_log_dest_id=123,\n        add_supplemental_logging=False,\n        allow_select_nested_tables=False,\n        archived_log_dest_id=123,\n        archived_logs_only=False,\n        asm_password=\"asmPassword\",\n        asm_server=\"asmServer\",\n        asm_user=\"asmUser\",\n        char_length_semantics=\"charLengthSemantics\",\n        direct_path_no_log=False,\n        direct_path_parallel_load=False,\n        enable_homogenous_tablespace=False,\n        extra_archived_log_dest_ids=[123],\n        fail_tasks_on_lob_truncation=False,\n        number_datatype_scale=123,\n        oracle_path_prefix=\"oraclePathPrefix\",\n        parallel_asm_read_threads=123,\n        read_ahead_blocks=123,\n        read_table_space_name=False,\n        replace_path_prefix=False,\n        retry_interval=123,\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_oracle_asm_access_role_arn=\"secretsManagerOracleAsmAccessRoleArn\",\n        secrets_manager_oracle_asm_secret_id=\"secretsManagerOracleAsmSecretId\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        security_db_encryption=\"securityDbEncryption\",\n        security_db_encryption_name=\"securityDbEncryptionName\",\n        spatial_data_option_to_geo_json_function_name=\"spatialDataOptionToGeoJsonFunctionName\",\n        standby_delay_time=123,\n        use_alternate_folder_for_online=False,\n        use_bFile=False,\n        use_direct_path_full_load=False,\n        use_logminer_reader=False,\n        use_path_prefix=\"usePathPrefix\"\n    ),\n    password=\"password\",\n    port=123,\n    postgre_sql_settings=dms.CfnEndpoint.PostgreSqlSettingsProperty(\n        after_connect_script=\"afterConnectScript\",\n        capture_ddls=False,\n        ddl_artifacts_schema=\"ddlArtifactsSchema\",\n        execute_timeout=123,\n        fail_tasks_on_lob_truncation=False,\n        heartbeat_enable=False,\n        heartbeat_frequency=123,\n        heartbeat_schema=\"heartbeatSchema\",\n        max_file_size=123,\n        plugin_name=\"pluginName\",\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        slot_name=\"slotName\"\n    ),\n    redis_settings=dms.CfnEndpoint.RedisSettingsProperty(\n        auth_password=\"authPassword\",\n        auth_type=\"authType\",\n        auth_user_name=\"authUserName\",\n        port=123,\n        server_name=\"serverName\",\n        ssl_ca_certificate_arn=\"sslCaCertificateArn\",\n        ssl_security_protocol=\"sslSecurityProtocol\"\n    ),\n    redshift_settings=dms.CfnEndpoint.RedshiftSettingsProperty(\n        accept_any_date=False,\n        after_connect_script=\"afterConnectScript\",\n        bucket_folder=\"bucketFolder\",\n        bucket_name=\"bucketName\",\n        case_sensitive_names=False,\n        comp_update=False,\n        connection_timeout=123,\n        date_format=\"dateFormat\",\n        empty_as_null=False,\n        encryption_mode=\"encryptionMode\",\n        explicit_ids=False,\n        file_transfer_upload_streams=123,\n        load_timeout=123,\n        max_file_size=123,\n        remove_quotes=False,\n        replace_chars=\"replaceChars\",\n        replace_invalid_chars=\"replaceInvalidChars\",\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\",\n        server_side_encryption_kms_key_id=\"serverSideEncryptionKmsKeyId\",\n        service_access_role_arn=\"serviceAccessRoleArn\",\n        time_format=\"timeFormat\",\n        trim_blanks=False,\n        truncate_columns=False,\n        write_buffer_size=123\n    ),\n    resource_identifier=\"resourceIdentifier\",\n    s3_settings=dms.CfnEndpoint.S3SettingsProperty(\n        add_column_name=False,\n        bucket_folder=\"bucketFolder\",\n        bucket_name=\"bucketName\",\n        canned_acl_for_objects=\"cannedAclForObjects\",\n        cdc_inserts_and_updates=False,\n        cdc_inserts_only=False,\n        cdc_max_batch_interval=123,\n        cdc_min_file_size=123,\n        cdc_path=\"cdcPath\",\n        compression_type=\"compressionType\",\n        csv_delimiter=\"csvDelimiter\",\n        csv_no_sup_value=\"csvNoSupValue\",\n        csv_null_value=\"csvNullValue\",\n        csv_row_delimiter=\"csvRowDelimiter\",\n        data_format=\"dataFormat\",\n        data_page_size=123,\n        date_partition_delimiter=\"datePartitionDelimiter\",\n        date_partition_enabled=False,\n        date_partition_sequence=\"datePartitionSequence\",\n        date_partition_timezone=\"datePartitionTimezone\",\n        dict_page_size_limit=123,\n        enable_statistics=False,\n        encoding_type=\"encodingType\",\n        encryption_mode=\"encryptionMode\",\n        external_table_definition=\"externalTableDefinition\",\n        ignore_header_rows=123,\n        include_op_for_full_load=False,\n        max_file_size=123,\n        parquet_timestamp_in_millisecond=False,\n        parquet_version=\"parquetVersion\",\n        preserve_transactions=False,\n        rfc4180=False,\n        row_group_length=123,\n        server_side_encryption_kms_key_id=\"serverSideEncryptionKmsKeyId\",\n        service_access_role_arn=\"serviceAccessRoleArn\",\n        timestamp_column_name=\"timestampColumnName\",\n        use_csv_no_sup_value=False,\n        use_task_start_time_for_full_load_timestamp=False\n    ),\n    server_name=\"serverName\",\n    ssl_mode=\"sslMode\",\n    sybase_settings=dms.CfnEndpoint.SybaseSettingsProperty(\n        secrets_manager_access_role_arn=\"secretsManagerAccessRoleArn\",\n        secrets_manager_secret_id=\"secretsManagerSecretId\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    username=\"username\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nCfnEndpointProps cfnEndpointProps = new CfnEndpointProps {\n    EndpointType = \"endpointType\",\n    EngineName = \"engineName\",\n\n    // the properties below are optional\n    CertificateArn = \"certificateArn\",\n    DatabaseName = \"databaseName\",\n    DocDbSettings = new DocDbSettingsProperty {\n        DocsToInvestigate = 123,\n        ExtractDocId = false,\n        NestingLevel = \"nestingLevel\",\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\"\n    },\n    DynamoDbSettings = new DynamoDbSettingsProperty {\n        ServiceAccessRoleArn = \"serviceAccessRoleArn\"\n    },\n    ElasticsearchSettings = new ElasticsearchSettingsProperty {\n        EndpointUri = \"endpointUri\",\n        ErrorRetryDuration = 123,\n        FullLoadErrorPercentage = 123,\n        ServiceAccessRoleArn = \"serviceAccessRoleArn\"\n    },\n    EndpointIdentifier = \"endpointIdentifier\",\n    ExtraConnectionAttributes = \"extraConnectionAttributes\",\n    GcpMySqlSettings = new GcpMySQLSettingsProperty {\n        AfterConnectScript = \"afterConnectScript\",\n        CleanSourceMetadataOnMismatch = false,\n        DatabaseName = \"databaseName\",\n        EventsPollInterval = 123,\n        MaxFileSize = 123,\n        ParallelLoadThreads = 123,\n        Password = \"password\",\n        Port = 123,\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        ServerName = \"serverName\",\n        ServerTimezone = \"serverTimezone\",\n        Username = \"username\"\n    },\n    IbmDb2Settings = new IbmDb2SettingsProperty {\n        CurrentLsn = \"currentLsn\",\n        MaxKBytesPerRead = 123,\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        SetDataCaptureChanges = false\n    },\n    KafkaSettings = new KafkaSettingsProperty {\n        Broker = \"broker\",\n        IncludeControlDetails = false,\n        IncludeNullAndEmpty = false,\n        IncludePartitionValue = false,\n        IncludeTableAlterOperations = false,\n        IncludeTransactionDetails = false,\n        MessageFormat = \"messageFormat\",\n        MessageMaxBytes = 123,\n        NoHexPrefix = false,\n        PartitionIncludeSchemaTable = false,\n        SaslPassword = \"saslPassword\",\n        SaslUserName = \"saslUserName\",\n        SecurityProtocol = \"securityProtocol\",\n        SslCaCertificateArn = \"sslCaCertificateArn\",\n        SslClientCertificateArn = \"sslClientCertificateArn\",\n        SslClientKeyArn = \"sslClientKeyArn\",\n        SslClientKeyPassword = \"sslClientKeyPassword\",\n        Topic = \"topic\"\n    },\n    KinesisSettings = new KinesisSettingsProperty {\n        IncludeControlDetails = false,\n        IncludeNullAndEmpty = false,\n        IncludePartitionValue = false,\n        IncludeTableAlterOperations = false,\n        IncludeTransactionDetails = false,\n        MessageFormat = \"messageFormat\",\n        NoHexPrefix = false,\n        PartitionIncludeSchemaTable = false,\n        ServiceAccessRoleArn = \"serviceAccessRoleArn\",\n        StreamArn = \"streamArn\"\n    },\n    KmsKeyId = \"kmsKeyId\",\n    MicrosoftSqlServerSettings = new MicrosoftSqlServerSettingsProperty {\n        BcpPacketSize = 123,\n        ControlTablesFileGroup = \"controlTablesFileGroup\",\n        QuerySingleAlwaysOnNode = false,\n        ReadBackupOnly = false,\n        SafeguardPolicy = \"safeguardPolicy\",\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        UseBcpFullLoad = false,\n        UseThirdPartyBackupDevice = false\n    },\n    MongoDbSettings = new MongoDbSettingsProperty {\n        AuthMechanism = \"authMechanism\",\n        AuthSource = \"authSource\",\n        AuthType = \"authType\",\n        DatabaseName = \"databaseName\",\n        DocsToInvestigate = \"docsToInvestigate\",\n        ExtractDocId = \"extractDocId\",\n        NestingLevel = \"nestingLevel\",\n        Password = \"password\",\n        Port = 123,\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        ServerName = \"serverName\",\n        Username = \"username\"\n    },\n    MySqlSettings = new MySqlSettingsProperty {\n        AfterConnectScript = \"afterConnectScript\",\n        CleanSourceMetadataOnMismatch = false,\n        EventsPollInterval = 123,\n        MaxFileSize = 123,\n        ParallelLoadThreads = 123,\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        ServerTimezone = \"serverTimezone\",\n        TargetDbType = \"targetDbType\"\n    },\n    NeptuneSettings = new NeptuneSettingsProperty {\n        ErrorRetryDuration = 123,\n        IamAuthEnabled = false,\n        MaxFileSize = 123,\n        MaxRetryCount = 123,\n        S3BucketFolder = \"s3BucketFolder\",\n        S3BucketName = \"s3BucketName\",\n        ServiceAccessRoleArn = \"serviceAccessRoleArn\"\n    },\n    OracleSettings = new OracleSettingsProperty {\n        AccessAlternateDirectly = false,\n        AdditionalArchivedLogDestId = 123,\n        AddSupplementalLogging = false,\n        AllowSelectNestedTables = false,\n        ArchivedLogDestId = 123,\n        ArchivedLogsOnly = false,\n        AsmPassword = \"asmPassword\",\n        AsmServer = \"asmServer\",\n        AsmUser = \"asmUser\",\n        CharLengthSemantics = \"charLengthSemantics\",\n        DirectPathNoLog = false,\n        DirectPathParallelLoad = false,\n        EnableHomogenousTablespace = false,\n        ExtraArchivedLogDestIds = new [] { 123 },\n        FailTasksOnLobTruncation = false,\n        NumberDatatypeScale = 123,\n        OraclePathPrefix = \"oraclePathPrefix\",\n        ParallelAsmReadThreads = 123,\n        ReadAheadBlocks = 123,\n        ReadTableSpaceName = false,\n        ReplacePathPrefix = false,\n        RetryInterval = 123,\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerOracleAsmAccessRoleArn = \"secretsManagerOracleAsmAccessRoleArn\",\n        SecretsManagerOracleAsmSecretId = \"secretsManagerOracleAsmSecretId\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        SecurityDbEncryption = \"securityDbEncryption\",\n        SecurityDbEncryptionName = \"securityDbEncryptionName\",\n        SpatialDataOptionToGeoJsonFunctionName = \"spatialDataOptionToGeoJsonFunctionName\",\n        StandbyDelayTime = 123,\n        UseAlternateFolderForOnline = false,\n        UseBFile = false,\n        UseDirectPathFullLoad = false,\n        UseLogminerReader = false,\n        UsePathPrefix = \"usePathPrefix\"\n    },\n    Password = \"password\",\n    Port = 123,\n    PostgreSqlSettings = new PostgreSqlSettingsProperty {\n        AfterConnectScript = \"afterConnectScript\",\n        CaptureDdls = false,\n        DdlArtifactsSchema = \"ddlArtifactsSchema\",\n        ExecuteTimeout = 123,\n        FailTasksOnLobTruncation = false,\n        HeartbeatEnable = false,\n        HeartbeatFrequency = 123,\n        HeartbeatSchema = \"heartbeatSchema\",\n        MaxFileSize = 123,\n        PluginName = \"pluginName\",\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        SlotName = \"slotName\"\n    },\n    RedisSettings = new RedisSettingsProperty {\n        AuthPassword = \"authPassword\",\n        AuthType = \"authType\",\n        AuthUserName = \"authUserName\",\n        Port = 123,\n        ServerName = \"serverName\",\n        SslCaCertificateArn = \"sslCaCertificateArn\",\n        SslSecurityProtocol = \"sslSecurityProtocol\"\n    },\n    RedshiftSettings = new RedshiftSettingsProperty {\n        AcceptAnyDate = false,\n        AfterConnectScript = \"afterConnectScript\",\n        BucketFolder = \"bucketFolder\",\n        BucketName = \"bucketName\",\n        CaseSensitiveNames = false,\n        CompUpdate = false,\n        ConnectionTimeout = 123,\n        DateFormat = \"dateFormat\",\n        EmptyAsNull = false,\n        EncryptionMode = \"encryptionMode\",\n        ExplicitIds = false,\n        FileTransferUploadStreams = 123,\n        LoadTimeout = 123,\n        MaxFileSize = 123,\n        RemoveQuotes = false,\n        ReplaceChars = \"replaceChars\",\n        ReplaceInvalidChars = \"replaceInvalidChars\",\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\",\n        ServerSideEncryptionKmsKeyId = \"serverSideEncryptionKmsKeyId\",\n        ServiceAccessRoleArn = \"serviceAccessRoleArn\",\n        TimeFormat = \"timeFormat\",\n        TrimBlanks = false,\n        TruncateColumns = false,\n        WriteBufferSize = 123\n    },\n    ResourceIdentifier = \"resourceIdentifier\",\n    S3Settings = new S3SettingsProperty {\n        AddColumnName = false,\n        BucketFolder = \"bucketFolder\",\n        BucketName = \"bucketName\",\n        CannedAclForObjects = \"cannedAclForObjects\",\n        CdcInsertsAndUpdates = false,\n        CdcInsertsOnly = false,\n        CdcMaxBatchInterval = 123,\n        CdcMinFileSize = 123,\n        CdcPath = \"cdcPath\",\n        CompressionType = \"compressionType\",\n        CsvDelimiter = \"csvDelimiter\",\n        CsvNoSupValue = \"csvNoSupValue\",\n        CsvNullValue = \"csvNullValue\",\n        CsvRowDelimiter = \"csvRowDelimiter\",\n        DataFormat = \"dataFormat\",\n        DataPageSize = 123,\n        DatePartitionDelimiter = \"datePartitionDelimiter\",\n        DatePartitionEnabled = false,\n        DatePartitionSequence = \"datePartitionSequence\",\n        DatePartitionTimezone = \"datePartitionTimezone\",\n        DictPageSizeLimit = 123,\n        EnableStatistics = false,\n        EncodingType = \"encodingType\",\n        EncryptionMode = \"encryptionMode\",\n        ExternalTableDefinition = \"externalTableDefinition\",\n        IgnoreHeaderRows = 123,\n        IncludeOpForFullLoad = false,\n        MaxFileSize = 123,\n        ParquetTimestampInMillisecond = false,\n        ParquetVersion = \"parquetVersion\",\n        PreserveTransactions = false,\n        Rfc4180 = false,\n        RowGroupLength = 123,\n        ServerSideEncryptionKmsKeyId = \"serverSideEncryptionKmsKeyId\",\n        ServiceAccessRoleArn = \"serviceAccessRoleArn\",\n        TimestampColumnName = \"timestampColumnName\",\n        UseCsvNoSupValue = false,\n        UseTaskStartTimeForFullLoadTimestamp = false\n    },\n    ServerName = \"serverName\",\n    SslMode = \"sslMode\",\n    SybaseSettings = new SybaseSettingsProperty {\n        SecretsManagerAccessRoleArn = \"secretsManagerAccessRoleArn\",\n        SecretsManagerSecretId = \"secretsManagerSecretId\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Username = \"username\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nCfnEndpointProps cfnEndpointProps = CfnEndpointProps.builder()\n        .endpointType(\"endpointType\")\n        .engineName(\"engineName\")\n\n        // the properties below are optional\n        .certificateArn(\"certificateArn\")\n        .databaseName(\"databaseName\")\n        .docDbSettings(DocDbSettingsProperty.builder()\n                .docsToInvestigate(123)\n                .extractDocId(false)\n                .nestingLevel(\"nestingLevel\")\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .build())\n        .dynamoDbSettings(DynamoDbSettingsProperty.builder()\n                .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n                .build())\n        .elasticsearchSettings(ElasticsearchSettingsProperty.builder()\n                .endpointUri(\"endpointUri\")\n                .errorRetryDuration(123)\n                .fullLoadErrorPercentage(123)\n                .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n                .build())\n        .endpointIdentifier(\"endpointIdentifier\")\n        .extraConnectionAttributes(\"extraConnectionAttributes\")\n        .gcpMySqlSettings(GcpMySQLSettingsProperty.builder()\n                .afterConnectScript(\"afterConnectScript\")\n                .cleanSourceMetadataOnMismatch(false)\n                .databaseName(\"databaseName\")\n                .eventsPollInterval(123)\n                .maxFileSize(123)\n                .parallelLoadThreads(123)\n                .password(\"password\")\n                .port(123)\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .serverName(\"serverName\")\n                .serverTimezone(\"serverTimezone\")\n                .username(\"username\")\n                .build())\n        .ibmDb2Settings(IbmDb2SettingsProperty.builder()\n                .currentLsn(\"currentLsn\")\n                .maxKBytesPerRead(123)\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .setDataCaptureChanges(false)\n                .build())\n        .kafkaSettings(KafkaSettingsProperty.builder()\n                .broker(\"broker\")\n                .includeControlDetails(false)\n                .includeNullAndEmpty(false)\n                .includePartitionValue(false)\n                .includeTableAlterOperations(false)\n                .includeTransactionDetails(false)\n                .messageFormat(\"messageFormat\")\n                .messageMaxBytes(123)\n                .noHexPrefix(false)\n                .partitionIncludeSchemaTable(false)\n                .saslPassword(\"saslPassword\")\n                .saslUserName(\"saslUserName\")\n                .securityProtocol(\"securityProtocol\")\n                .sslCaCertificateArn(\"sslCaCertificateArn\")\n                .sslClientCertificateArn(\"sslClientCertificateArn\")\n                .sslClientKeyArn(\"sslClientKeyArn\")\n                .sslClientKeyPassword(\"sslClientKeyPassword\")\n                .topic(\"topic\")\n                .build())\n        .kinesisSettings(KinesisSettingsProperty.builder()\n                .includeControlDetails(false)\n                .includeNullAndEmpty(false)\n                .includePartitionValue(false)\n                .includeTableAlterOperations(false)\n                .includeTransactionDetails(false)\n                .messageFormat(\"messageFormat\")\n                .noHexPrefix(false)\n                .partitionIncludeSchemaTable(false)\n                .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n                .streamArn(\"streamArn\")\n                .build())\n        .kmsKeyId(\"kmsKeyId\")\n        .microsoftSqlServerSettings(MicrosoftSqlServerSettingsProperty.builder()\n                .bcpPacketSize(123)\n                .controlTablesFileGroup(\"controlTablesFileGroup\")\n                .querySingleAlwaysOnNode(false)\n                .readBackupOnly(false)\n                .safeguardPolicy(\"safeguardPolicy\")\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .useBcpFullLoad(false)\n                .useThirdPartyBackupDevice(false)\n                .build())\n        .mongoDbSettings(MongoDbSettingsProperty.builder()\n                .authMechanism(\"authMechanism\")\n                .authSource(\"authSource\")\n                .authType(\"authType\")\n                .databaseName(\"databaseName\")\n                .docsToInvestigate(\"docsToInvestigate\")\n                .extractDocId(\"extractDocId\")\n                .nestingLevel(\"nestingLevel\")\n                .password(\"password\")\n                .port(123)\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .serverName(\"serverName\")\n                .username(\"username\")\n                .build())\n        .mySqlSettings(MySqlSettingsProperty.builder()\n                .afterConnectScript(\"afterConnectScript\")\n                .cleanSourceMetadataOnMismatch(false)\n                .eventsPollInterval(123)\n                .maxFileSize(123)\n                .parallelLoadThreads(123)\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .serverTimezone(\"serverTimezone\")\n                .targetDbType(\"targetDbType\")\n                .build())\n        .neptuneSettings(NeptuneSettingsProperty.builder()\n                .errorRetryDuration(123)\n                .iamAuthEnabled(false)\n                .maxFileSize(123)\n                .maxRetryCount(123)\n                .s3BucketFolder(\"s3BucketFolder\")\n                .s3BucketName(\"s3BucketName\")\n                .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n                .build())\n        .oracleSettings(OracleSettingsProperty.builder()\n                .accessAlternateDirectly(false)\n                .additionalArchivedLogDestId(123)\n                .addSupplementalLogging(false)\n                .allowSelectNestedTables(false)\n                .archivedLogDestId(123)\n                .archivedLogsOnly(false)\n                .asmPassword(\"asmPassword\")\n                .asmServer(\"asmServer\")\n                .asmUser(\"asmUser\")\n                .charLengthSemantics(\"charLengthSemantics\")\n                .directPathNoLog(false)\n                .directPathParallelLoad(false)\n                .enableHomogenousTablespace(false)\n                .extraArchivedLogDestIds(List.of(123))\n                .failTasksOnLobTruncation(false)\n                .numberDatatypeScale(123)\n                .oraclePathPrefix(\"oraclePathPrefix\")\n                .parallelAsmReadThreads(123)\n                .readAheadBlocks(123)\n                .readTableSpaceName(false)\n                .replacePathPrefix(false)\n                .retryInterval(123)\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerOracleAsmAccessRoleArn(\"secretsManagerOracleAsmAccessRoleArn\")\n                .secretsManagerOracleAsmSecretId(\"secretsManagerOracleAsmSecretId\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .securityDbEncryption(\"securityDbEncryption\")\n                .securityDbEncryptionName(\"securityDbEncryptionName\")\n                .spatialDataOptionToGeoJsonFunctionName(\"spatialDataOptionToGeoJsonFunctionName\")\n                .standbyDelayTime(123)\n                .useAlternateFolderForOnline(false)\n                .useBFile(false)\n                .useDirectPathFullLoad(false)\n                .useLogminerReader(false)\n                .usePathPrefix(\"usePathPrefix\")\n                .build())\n        .password(\"password\")\n        .port(123)\n        .postgreSqlSettings(PostgreSqlSettingsProperty.builder()\n                .afterConnectScript(\"afterConnectScript\")\n                .captureDdls(false)\n                .ddlArtifactsSchema(\"ddlArtifactsSchema\")\n                .executeTimeout(123)\n                .failTasksOnLobTruncation(false)\n                .heartbeatEnable(false)\n                .heartbeatFrequency(123)\n                .heartbeatSchema(\"heartbeatSchema\")\n                .maxFileSize(123)\n                .pluginName(\"pluginName\")\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .slotName(\"slotName\")\n                .build())\n        .redisSettings(RedisSettingsProperty.builder()\n                .authPassword(\"authPassword\")\n                .authType(\"authType\")\n                .authUserName(\"authUserName\")\n                .port(123)\n                .serverName(\"serverName\")\n                .sslCaCertificateArn(\"sslCaCertificateArn\")\n                .sslSecurityProtocol(\"sslSecurityProtocol\")\n                .build())\n        .redshiftSettings(RedshiftSettingsProperty.builder()\n                .acceptAnyDate(false)\n                .afterConnectScript(\"afterConnectScript\")\n                .bucketFolder(\"bucketFolder\")\n                .bucketName(\"bucketName\")\n                .caseSensitiveNames(false)\n                .compUpdate(false)\n                .connectionTimeout(123)\n                .dateFormat(\"dateFormat\")\n                .emptyAsNull(false)\n                .encryptionMode(\"encryptionMode\")\n                .explicitIds(false)\n                .fileTransferUploadStreams(123)\n                .loadTimeout(123)\n                .maxFileSize(123)\n                .removeQuotes(false)\n                .replaceChars(\"replaceChars\")\n                .replaceInvalidChars(\"replaceInvalidChars\")\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .serverSideEncryptionKmsKeyId(\"serverSideEncryptionKmsKeyId\")\n                .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n                .timeFormat(\"timeFormat\")\n                .trimBlanks(false)\n                .truncateColumns(false)\n                .writeBufferSize(123)\n                .build())\n        .resourceIdentifier(\"resourceIdentifier\")\n        .s3Settings(S3SettingsProperty.builder()\n                .addColumnName(false)\n                .bucketFolder(\"bucketFolder\")\n                .bucketName(\"bucketName\")\n                .cannedAclForObjects(\"cannedAclForObjects\")\n                .cdcInsertsAndUpdates(false)\n                .cdcInsertsOnly(false)\n                .cdcMaxBatchInterval(123)\n                .cdcMinFileSize(123)\n                .cdcPath(\"cdcPath\")\n                .compressionType(\"compressionType\")\n                .csvDelimiter(\"csvDelimiter\")\n                .csvNoSupValue(\"csvNoSupValue\")\n                .csvNullValue(\"csvNullValue\")\n                .csvRowDelimiter(\"csvRowDelimiter\")\n                .dataFormat(\"dataFormat\")\n                .dataPageSize(123)\n                .datePartitionDelimiter(\"datePartitionDelimiter\")\n                .datePartitionEnabled(false)\n                .datePartitionSequence(\"datePartitionSequence\")\n                .datePartitionTimezone(\"datePartitionTimezone\")\n                .dictPageSizeLimit(123)\n                .enableStatistics(false)\n                .encodingType(\"encodingType\")\n                .encryptionMode(\"encryptionMode\")\n                .externalTableDefinition(\"externalTableDefinition\")\n                .ignoreHeaderRows(123)\n                .includeOpForFullLoad(false)\n                .maxFileSize(123)\n                .parquetTimestampInMillisecond(false)\n                .parquetVersion(\"parquetVersion\")\n                .preserveTransactions(false)\n                .rfc4180(false)\n                .rowGroupLength(123)\n                .serverSideEncryptionKmsKeyId(\"serverSideEncryptionKmsKeyId\")\n                .serviceAccessRoleArn(\"serviceAccessRoleArn\")\n                .timestampColumnName(\"timestampColumnName\")\n                .useCsvNoSupValue(false)\n                .useTaskStartTimeForFullLoadTimestamp(false)\n                .build())\n        .serverName(\"serverName\")\n        .sslMode(\"sslMode\")\n        .sybaseSettings(SybaseSettingsProperty.builder()\n                .secretsManagerAccessRoleArn(\"secretsManagerAccessRoleArn\")\n                .secretsManagerSecretId(\"secretsManagerSecretId\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .username(\"username\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ncfnEndpointProps := &cfnEndpointProps{\n\tendpointType: jsii.String(\"endpointType\"),\n\tengineName: jsii.String(\"engineName\"),\n\n\t// the properties below are optional\n\tcertificateArn: jsii.String(\"certificateArn\"),\n\tdatabaseName: jsii.String(\"databaseName\"),\n\tdocDbSettings: &docDbSettingsProperty{\n\t\tdocsToInvestigate: jsii.Number(123),\n\t\textractDocId: jsii.Boolean(false),\n\t\tnestingLevel: jsii.String(\"nestingLevel\"),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t},\n\tdynamoDbSettings: &dynamoDbSettingsProperty{\n\t\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\t},\n\telasticsearchSettings: &elasticsearchSettingsProperty{\n\t\tendpointUri: jsii.String(\"endpointUri\"),\n\t\terrorRetryDuration: jsii.Number(123),\n\t\tfullLoadErrorPercentage: jsii.Number(123),\n\t\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\t},\n\tendpointIdentifier: jsii.String(\"endpointIdentifier\"),\n\textraConnectionAttributes: jsii.String(\"extraConnectionAttributes\"),\n\tgcpMySqlSettings: &gcpMySQLSettingsProperty{\n\t\tafterConnectScript: jsii.String(\"afterConnectScript\"),\n\t\tcleanSourceMetadataOnMismatch: jsii.Boolean(false),\n\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\teventsPollInterval: jsii.Number(123),\n\t\tmaxFileSize: jsii.Number(123),\n\t\tparallelLoadThreads: jsii.Number(123),\n\t\tpassword: jsii.String(\"password\"),\n\t\tport: jsii.Number(123),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tserverName: jsii.String(\"serverName\"),\n\t\tserverTimezone: jsii.String(\"serverTimezone\"),\n\t\tusername: jsii.String(\"username\"),\n\t},\n\tibmDb2Settings: &ibmDb2SettingsProperty{\n\t\tcurrentLsn: jsii.String(\"currentLsn\"),\n\t\tmaxKBytesPerRead: jsii.Number(123),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tsetDataCaptureChanges: jsii.Boolean(false),\n\t},\n\tkafkaSettings: &kafkaSettingsProperty{\n\t\tbroker: jsii.String(\"broker\"),\n\t\tincludeControlDetails: jsii.Boolean(false),\n\t\tincludeNullAndEmpty: jsii.Boolean(false),\n\t\tincludePartitionValue: jsii.Boolean(false),\n\t\tincludeTableAlterOperations: jsii.Boolean(false),\n\t\tincludeTransactionDetails: jsii.Boolean(false),\n\t\tmessageFormat: jsii.String(\"messageFormat\"),\n\t\tmessageMaxBytes: jsii.Number(123),\n\t\tnoHexPrefix: jsii.Boolean(false),\n\t\tpartitionIncludeSchemaTable: jsii.Boolean(false),\n\t\tsaslPassword: jsii.String(\"saslPassword\"),\n\t\tsaslUserName: jsii.String(\"saslUserName\"),\n\t\tsecurityProtocol: jsii.String(\"securityProtocol\"),\n\t\tsslCaCertificateArn: jsii.String(\"sslCaCertificateArn\"),\n\t\tsslClientCertificateArn: jsii.String(\"sslClientCertificateArn\"),\n\t\tsslClientKeyArn: jsii.String(\"sslClientKeyArn\"),\n\t\tsslClientKeyPassword: jsii.String(\"sslClientKeyPassword\"),\n\t\ttopic: jsii.String(\"topic\"),\n\t},\n\tkinesisSettings: &kinesisSettingsProperty{\n\t\tincludeControlDetails: jsii.Boolean(false),\n\t\tincludeNullAndEmpty: jsii.Boolean(false),\n\t\tincludePartitionValue: jsii.Boolean(false),\n\t\tincludeTableAlterOperations: jsii.Boolean(false),\n\t\tincludeTransactionDetails: jsii.Boolean(false),\n\t\tmessageFormat: jsii.String(\"messageFormat\"),\n\t\tnoHexPrefix: jsii.Boolean(false),\n\t\tpartitionIncludeSchemaTable: jsii.Boolean(false),\n\t\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\t\tstreamArn: jsii.String(\"streamArn\"),\n\t},\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\tmicrosoftSqlServerSettings: &microsoftSqlServerSettingsProperty{\n\t\tbcpPacketSize: jsii.Number(123),\n\t\tcontrolTablesFileGroup: jsii.String(\"controlTablesFileGroup\"),\n\t\tquerySingleAlwaysOnNode: jsii.Boolean(false),\n\t\treadBackupOnly: jsii.Boolean(false),\n\t\tsafeguardPolicy: jsii.String(\"safeguardPolicy\"),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tuseBcpFullLoad: jsii.Boolean(false),\n\t\tuseThirdPartyBackupDevice: jsii.Boolean(false),\n\t},\n\tmongoDbSettings: &mongoDbSettingsProperty{\n\t\tauthMechanism: jsii.String(\"authMechanism\"),\n\t\tauthSource: jsii.String(\"authSource\"),\n\t\tauthType: jsii.String(\"authType\"),\n\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\tdocsToInvestigate: jsii.String(\"docsToInvestigate\"),\n\t\textractDocId: jsii.String(\"extractDocId\"),\n\t\tnestingLevel: jsii.String(\"nestingLevel\"),\n\t\tpassword: jsii.String(\"password\"),\n\t\tport: jsii.Number(123),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tserverName: jsii.String(\"serverName\"),\n\t\tusername: jsii.String(\"username\"),\n\t},\n\tmySqlSettings: &mySqlSettingsProperty{\n\t\tafterConnectScript: jsii.String(\"afterConnectScript\"),\n\t\tcleanSourceMetadataOnMismatch: jsii.Boolean(false),\n\t\teventsPollInterval: jsii.Number(123),\n\t\tmaxFileSize: jsii.Number(123),\n\t\tparallelLoadThreads: jsii.Number(123),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tserverTimezone: jsii.String(\"serverTimezone\"),\n\t\ttargetDbType: jsii.String(\"targetDbType\"),\n\t},\n\tneptuneSettings: &neptuneSettingsProperty{\n\t\terrorRetryDuration: jsii.Number(123),\n\t\tiamAuthEnabled: jsii.Boolean(false),\n\t\tmaxFileSize: jsii.Number(123),\n\t\tmaxRetryCount: jsii.Number(123),\n\t\ts3BucketFolder: jsii.String(\"s3BucketFolder\"),\n\t\ts3BucketName: jsii.String(\"s3BucketName\"),\n\t\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\t},\n\toracleSettings: &oracleSettingsProperty{\n\t\taccessAlternateDirectly: jsii.Boolean(false),\n\t\tadditionalArchivedLogDestId: jsii.Number(123),\n\t\taddSupplementalLogging: jsii.Boolean(false),\n\t\tallowSelectNestedTables: jsii.Boolean(false),\n\t\tarchivedLogDestId: jsii.Number(123),\n\t\tarchivedLogsOnly: jsii.Boolean(false),\n\t\tasmPassword: jsii.String(\"asmPassword\"),\n\t\tasmServer: jsii.String(\"asmServer\"),\n\t\tasmUser: jsii.String(\"asmUser\"),\n\t\tcharLengthSemantics: jsii.String(\"charLengthSemantics\"),\n\t\tdirectPathNoLog: jsii.Boolean(false),\n\t\tdirectPathParallelLoad: jsii.Boolean(false),\n\t\tenableHomogenousTablespace: jsii.Boolean(false),\n\t\textraArchivedLogDestIds: []interface{}{\n\t\t\tjsii.Number(123),\n\t\t},\n\t\tfailTasksOnLobTruncation: jsii.Boolean(false),\n\t\tnumberDatatypeScale: jsii.Number(123),\n\t\toraclePathPrefix: jsii.String(\"oraclePathPrefix\"),\n\t\tparallelAsmReadThreads: jsii.Number(123),\n\t\treadAheadBlocks: jsii.Number(123),\n\t\treadTableSpaceName: jsii.Boolean(false),\n\t\treplacePathPrefix: jsii.Boolean(false),\n\t\tretryInterval: jsii.Number(123),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerOracleAsmAccessRoleArn: jsii.String(\"secretsManagerOracleAsmAccessRoleArn\"),\n\t\tsecretsManagerOracleAsmSecretId: jsii.String(\"secretsManagerOracleAsmSecretId\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tsecurityDbEncryption: jsii.String(\"securityDbEncryption\"),\n\t\tsecurityDbEncryptionName: jsii.String(\"securityDbEncryptionName\"),\n\t\tspatialDataOptionToGeoJsonFunctionName: jsii.String(\"spatialDataOptionToGeoJsonFunctionName\"),\n\t\tstandbyDelayTime: jsii.Number(123),\n\t\tuseAlternateFolderForOnline: jsii.Boolean(false),\n\t\tuseBFile: jsii.Boolean(false),\n\t\tuseDirectPathFullLoad: jsii.Boolean(false),\n\t\tuseLogminerReader: jsii.Boolean(false),\n\t\tusePathPrefix: jsii.String(\"usePathPrefix\"),\n\t},\n\tpassword: jsii.String(\"password\"),\n\tport: jsii.Number(123),\n\tpostgreSqlSettings: &postgreSqlSettingsProperty{\n\t\tafterConnectScript: jsii.String(\"afterConnectScript\"),\n\t\tcaptureDdls: jsii.Boolean(false),\n\t\tddlArtifactsSchema: jsii.String(\"ddlArtifactsSchema\"),\n\t\texecuteTimeout: jsii.Number(123),\n\t\tfailTasksOnLobTruncation: jsii.Boolean(false),\n\t\theartbeatEnable: jsii.Boolean(false),\n\t\theartbeatFrequency: jsii.Number(123),\n\t\theartbeatSchema: jsii.String(\"heartbeatSchema\"),\n\t\tmaxFileSize: jsii.Number(123),\n\t\tpluginName: jsii.String(\"pluginName\"),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tslotName: jsii.String(\"slotName\"),\n\t},\n\tredisSettings: &redisSettingsProperty{\n\t\tauthPassword: jsii.String(\"authPassword\"),\n\t\tauthType: jsii.String(\"authType\"),\n\t\tauthUserName: jsii.String(\"authUserName\"),\n\t\tport: jsii.Number(123),\n\t\tserverName: jsii.String(\"serverName\"),\n\t\tsslCaCertificateArn: jsii.String(\"sslCaCertificateArn\"),\n\t\tsslSecurityProtocol: jsii.String(\"sslSecurityProtocol\"),\n\t},\n\tredshiftSettings: &redshiftSettingsProperty{\n\t\tacceptAnyDate: jsii.Boolean(false),\n\t\tafterConnectScript: jsii.String(\"afterConnectScript\"),\n\t\tbucketFolder: jsii.String(\"bucketFolder\"),\n\t\tbucketName: jsii.String(\"bucketName\"),\n\t\tcaseSensitiveNames: jsii.Boolean(false),\n\t\tcompUpdate: jsii.Boolean(false),\n\t\tconnectionTimeout: jsii.Number(123),\n\t\tdateFormat: jsii.String(\"dateFormat\"),\n\t\temptyAsNull: jsii.Boolean(false),\n\t\tencryptionMode: jsii.String(\"encryptionMode\"),\n\t\texplicitIds: jsii.Boolean(false),\n\t\tfileTransferUploadStreams: jsii.Number(123),\n\t\tloadTimeout: jsii.Number(123),\n\t\tmaxFileSize: jsii.Number(123),\n\t\tremoveQuotes: jsii.Boolean(false),\n\t\treplaceChars: jsii.String(\"replaceChars\"),\n\t\treplaceInvalidChars: jsii.String(\"replaceInvalidChars\"),\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t\tserverSideEncryptionKmsKeyId: jsii.String(\"serverSideEncryptionKmsKeyId\"),\n\t\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\t\ttimeFormat: jsii.String(\"timeFormat\"),\n\t\ttrimBlanks: jsii.Boolean(false),\n\t\ttruncateColumns: jsii.Boolean(false),\n\t\twriteBufferSize: jsii.Number(123),\n\t},\n\tresourceIdentifier: jsii.String(\"resourceIdentifier\"),\n\ts3Settings: &s3SettingsProperty{\n\t\taddColumnName: jsii.Boolean(false),\n\t\tbucketFolder: jsii.String(\"bucketFolder\"),\n\t\tbucketName: jsii.String(\"bucketName\"),\n\t\tcannedAclForObjects: jsii.String(\"cannedAclForObjects\"),\n\t\tcdcInsertsAndUpdates: jsii.Boolean(false),\n\t\tcdcInsertsOnly: jsii.Boolean(false),\n\t\tcdcMaxBatchInterval: jsii.Number(123),\n\t\tcdcMinFileSize: jsii.Number(123),\n\t\tcdcPath: jsii.String(\"cdcPath\"),\n\t\tcompressionType: jsii.String(\"compressionType\"),\n\t\tcsvDelimiter: jsii.String(\"csvDelimiter\"),\n\t\tcsvNoSupValue: jsii.String(\"csvNoSupValue\"),\n\t\tcsvNullValue: jsii.String(\"csvNullValue\"),\n\t\tcsvRowDelimiter: jsii.String(\"csvRowDelimiter\"),\n\t\tdataFormat: jsii.String(\"dataFormat\"),\n\t\tdataPageSize: jsii.Number(123),\n\t\tdatePartitionDelimiter: jsii.String(\"datePartitionDelimiter\"),\n\t\tdatePartitionEnabled: jsii.Boolean(false),\n\t\tdatePartitionSequence: jsii.String(\"datePartitionSequence\"),\n\t\tdatePartitionTimezone: jsii.String(\"datePartitionTimezone\"),\n\t\tdictPageSizeLimit: jsii.Number(123),\n\t\tenableStatistics: jsii.Boolean(false),\n\t\tencodingType: jsii.String(\"encodingType\"),\n\t\tencryptionMode: jsii.String(\"encryptionMode\"),\n\t\texternalTableDefinition: jsii.String(\"externalTableDefinition\"),\n\t\tignoreHeaderRows: jsii.Number(123),\n\t\tincludeOpForFullLoad: jsii.Boolean(false),\n\t\tmaxFileSize: jsii.Number(123),\n\t\tparquetTimestampInMillisecond: jsii.Boolean(false),\n\t\tparquetVersion: jsii.String(\"parquetVersion\"),\n\t\tpreserveTransactions: jsii.Boolean(false),\n\t\trfc4180: jsii.Boolean(false),\n\t\trowGroupLength: jsii.Number(123),\n\t\tserverSideEncryptionKmsKeyId: jsii.String(\"serverSideEncryptionKmsKeyId\"),\n\t\tserviceAccessRoleArn: jsii.String(\"serviceAccessRoleArn\"),\n\t\ttimestampColumnName: jsii.String(\"timestampColumnName\"),\n\t\tuseCsvNoSupValue: jsii.Boolean(false),\n\t\tuseTaskStartTimeForFullLoadTimestamp: jsii.Boolean(false),\n\t},\n\tserverName: jsii.String(\"serverName\"),\n\tsslMode: jsii.String(\"sslMode\"),\n\tsybaseSettings: &sybaseSettingsProperty{\n\t\tsecretsManagerAccessRoleArn: jsii.String(\"secretsManagerAccessRoleArn\"),\n\t\tsecretsManagerSecretId: jsii.String(\"secretsManagerSecretId\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tusername: jsii.String(\"username\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst cfnEndpointProps: dms.CfnEndpointProps = {\n  endpointType: 'endpointType',\n  engineName: 'engineName',\n\n  // the properties below are optional\n  certificateArn: 'certificateArn',\n  databaseName: 'databaseName',\n  docDbSettings: {\n    docsToInvestigate: 123,\n    extractDocId: false,\n    nestingLevel: 'nestingLevel',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n  },\n  dynamoDbSettings: {\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n  },\n  elasticsearchSettings: {\n    endpointUri: 'endpointUri',\n    errorRetryDuration: 123,\n    fullLoadErrorPercentage: 123,\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n  },\n  endpointIdentifier: 'endpointIdentifier',\n  extraConnectionAttributes: 'extraConnectionAttributes',\n  gcpMySqlSettings: {\n    afterConnectScript: 'afterConnectScript',\n    cleanSourceMetadataOnMismatch: false,\n    databaseName: 'databaseName',\n    eventsPollInterval: 123,\n    maxFileSize: 123,\n    parallelLoadThreads: 123,\n    password: 'password',\n    port: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverName: 'serverName',\n    serverTimezone: 'serverTimezone',\n    username: 'username',\n  },\n  ibmDb2Settings: {\n    currentLsn: 'currentLsn',\n    maxKBytesPerRead: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    setDataCaptureChanges: false,\n  },\n  kafkaSettings: {\n    broker: 'broker',\n    includeControlDetails: false,\n    includeNullAndEmpty: false,\n    includePartitionValue: false,\n    includeTableAlterOperations: false,\n    includeTransactionDetails: false,\n    messageFormat: 'messageFormat',\n    messageMaxBytes: 123,\n    noHexPrefix: false,\n    partitionIncludeSchemaTable: false,\n    saslPassword: 'saslPassword',\n    saslUserName: 'saslUserName',\n    securityProtocol: 'securityProtocol',\n    sslCaCertificateArn: 'sslCaCertificateArn',\n    sslClientCertificateArn: 'sslClientCertificateArn',\n    sslClientKeyArn: 'sslClientKeyArn',\n    sslClientKeyPassword: 'sslClientKeyPassword',\n    topic: 'topic',\n  },\n  kinesisSettings: {\n    includeControlDetails: false,\n    includeNullAndEmpty: false,\n    includePartitionValue: false,\n    includeTableAlterOperations: false,\n    includeTransactionDetails: false,\n    messageFormat: 'messageFormat',\n    noHexPrefix: false,\n    partitionIncludeSchemaTable: false,\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n    streamArn: 'streamArn',\n  },\n  kmsKeyId: 'kmsKeyId',\n  microsoftSqlServerSettings: {\n    bcpPacketSize: 123,\n    controlTablesFileGroup: 'controlTablesFileGroup',\n    querySingleAlwaysOnNode: false,\n    readBackupOnly: false,\n    safeguardPolicy: 'safeguardPolicy',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    useBcpFullLoad: false,\n    useThirdPartyBackupDevice: false,\n  },\n  mongoDbSettings: {\n    authMechanism: 'authMechanism',\n    authSource: 'authSource',\n    authType: 'authType',\n    databaseName: 'databaseName',\n    docsToInvestigate: 'docsToInvestigate',\n    extractDocId: 'extractDocId',\n    nestingLevel: 'nestingLevel',\n    password: 'password',\n    port: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverName: 'serverName',\n    username: 'username',\n  },\n  mySqlSettings: {\n    afterConnectScript: 'afterConnectScript',\n    cleanSourceMetadataOnMismatch: false,\n    eventsPollInterval: 123,\n    maxFileSize: 123,\n    parallelLoadThreads: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverTimezone: 'serverTimezone',\n    targetDbType: 'targetDbType',\n  },\n  neptuneSettings: {\n    errorRetryDuration: 123,\n    iamAuthEnabled: false,\n    maxFileSize: 123,\n    maxRetryCount: 123,\n    s3BucketFolder: 's3BucketFolder',\n    s3BucketName: 's3BucketName',\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n  },\n  oracleSettings: {\n    accessAlternateDirectly: false,\n    additionalArchivedLogDestId: 123,\n    addSupplementalLogging: false,\n    allowSelectNestedTables: false,\n    archivedLogDestId: 123,\n    archivedLogsOnly: false,\n    asmPassword: 'asmPassword',\n    asmServer: 'asmServer',\n    asmUser: 'asmUser',\n    charLengthSemantics: 'charLengthSemantics',\n    directPathNoLog: false,\n    directPathParallelLoad: false,\n    enableHomogenousTablespace: false,\n    extraArchivedLogDestIds: [123],\n    failTasksOnLobTruncation: false,\n    numberDatatypeScale: 123,\n    oraclePathPrefix: 'oraclePathPrefix',\n    parallelAsmReadThreads: 123,\n    readAheadBlocks: 123,\n    readTableSpaceName: false,\n    replacePathPrefix: false,\n    retryInterval: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerOracleAsmAccessRoleArn: 'secretsManagerOracleAsmAccessRoleArn',\n    secretsManagerOracleAsmSecretId: 'secretsManagerOracleAsmSecretId',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    securityDbEncryption: 'securityDbEncryption',\n    securityDbEncryptionName: 'securityDbEncryptionName',\n    spatialDataOptionToGeoJsonFunctionName: 'spatialDataOptionToGeoJsonFunctionName',\n    standbyDelayTime: 123,\n    useAlternateFolderForOnline: false,\n    useBFile: false,\n    useDirectPathFullLoad: false,\n    useLogminerReader: false,\n    usePathPrefix: 'usePathPrefix',\n  },\n  password: 'password',\n  port: 123,\n  postgreSqlSettings: {\n    afterConnectScript: 'afterConnectScript',\n    captureDdls: false,\n    ddlArtifactsSchema: 'ddlArtifactsSchema',\n    executeTimeout: 123,\n    failTasksOnLobTruncation: false,\n    heartbeatEnable: false,\n    heartbeatFrequency: 123,\n    heartbeatSchema: 'heartbeatSchema',\n    maxFileSize: 123,\n    pluginName: 'pluginName',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    slotName: 'slotName',\n  },\n  redisSettings: {\n    authPassword: 'authPassword',\n    authType: 'authType',\n    authUserName: 'authUserName',\n    port: 123,\n    serverName: 'serverName',\n    sslCaCertificateArn: 'sslCaCertificateArn',\n    sslSecurityProtocol: 'sslSecurityProtocol',\n  },\n  redshiftSettings: {\n    acceptAnyDate: false,\n    afterConnectScript: 'afterConnectScript',\n    bucketFolder: 'bucketFolder',\n    bucketName: 'bucketName',\n    caseSensitiveNames: false,\n    compUpdate: false,\n    connectionTimeout: 123,\n    dateFormat: 'dateFormat',\n    emptyAsNull: false,\n    encryptionMode: 'encryptionMode',\n    explicitIds: false,\n    fileTransferUploadStreams: 123,\n    loadTimeout: 123,\n    maxFileSize: 123,\n    removeQuotes: false,\n    replaceChars: 'replaceChars',\n    replaceInvalidChars: 'replaceInvalidChars',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverSideEncryptionKmsKeyId: 'serverSideEncryptionKmsKeyId',\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n    timeFormat: 'timeFormat',\n    trimBlanks: false,\n    truncateColumns: false,\n    writeBufferSize: 123,\n  },\n  resourceIdentifier: 'resourceIdentifier',\n  s3Settings: {\n    addColumnName: false,\n    bucketFolder: 'bucketFolder',\n    bucketName: 'bucketName',\n    cannedAclForObjects: 'cannedAclForObjects',\n    cdcInsertsAndUpdates: false,\n    cdcInsertsOnly: false,\n    cdcMaxBatchInterval: 123,\n    cdcMinFileSize: 123,\n    cdcPath: 'cdcPath',\n    compressionType: 'compressionType',\n    csvDelimiter: 'csvDelimiter',\n    csvNoSupValue: 'csvNoSupValue',\n    csvNullValue: 'csvNullValue',\n    csvRowDelimiter: 'csvRowDelimiter',\n    dataFormat: 'dataFormat',\n    dataPageSize: 123,\n    datePartitionDelimiter: 'datePartitionDelimiter',\n    datePartitionEnabled: false,\n    datePartitionSequence: 'datePartitionSequence',\n    datePartitionTimezone: 'datePartitionTimezone',\n    dictPageSizeLimit: 123,\n    enableStatistics: false,\n    encodingType: 'encodingType',\n    encryptionMode: 'encryptionMode',\n    externalTableDefinition: 'externalTableDefinition',\n    ignoreHeaderRows: 123,\n    includeOpForFullLoad: false,\n    maxFileSize: 123,\n    parquetTimestampInMillisecond: false,\n    parquetVersion: 'parquetVersion',\n    preserveTransactions: false,\n    rfc4180: false,\n    rowGroupLength: 123,\n    serverSideEncryptionKmsKeyId: 'serverSideEncryptionKmsKeyId',\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n    timestampColumnName: 'timestampColumnName',\n    useCsvNoSupValue: false,\n    useTaskStartTimeForFullLoadTimestamp: false,\n  },\n  serverName: 'serverName',\n  sslMode: 'sslMode',\n  sybaseSettings: {\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  username: 'username',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEndpointProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEndpointProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnEndpointProps: dms.CfnEndpointProps = {\n  endpointType: 'endpointType',\n  engineName: 'engineName',\n\n  // the properties below are optional\n  certificateArn: 'certificateArn',\n  databaseName: 'databaseName',\n  docDbSettings: {\n    docsToInvestigate: 123,\n    extractDocId: false,\n    nestingLevel: 'nestingLevel',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n  },\n  dynamoDbSettings: {\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n  },\n  elasticsearchSettings: {\n    endpointUri: 'endpointUri',\n    errorRetryDuration: 123,\n    fullLoadErrorPercentage: 123,\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n  },\n  endpointIdentifier: 'endpointIdentifier',\n  extraConnectionAttributes: 'extraConnectionAttributes',\n  gcpMySqlSettings: {\n    afterConnectScript: 'afterConnectScript',\n    cleanSourceMetadataOnMismatch: false,\n    databaseName: 'databaseName',\n    eventsPollInterval: 123,\n    maxFileSize: 123,\n    parallelLoadThreads: 123,\n    password: 'password',\n    port: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverName: 'serverName',\n    serverTimezone: 'serverTimezone',\n    username: 'username',\n  },\n  ibmDb2Settings: {\n    currentLsn: 'currentLsn',\n    maxKBytesPerRead: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    setDataCaptureChanges: false,\n  },\n  kafkaSettings: {\n    broker: 'broker',\n    includeControlDetails: false,\n    includeNullAndEmpty: false,\n    includePartitionValue: false,\n    includeTableAlterOperations: false,\n    includeTransactionDetails: false,\n    messageFormat: 'messageFormat',\n    messageMaxBytes: 123,\n    noHexPrefix: false,\n    partitionIncludeSchemaTable: false,\n    saslPassword: 'saslPassword',\n    saslUserName: 'saslUserName',\n    securityProtocol: 'securityProtocol',\n    sslCaCertificateArn: 'sslCaCertificateArn',\n    sslClientCertificateArn: 'sslClientCertificateArn',\n    sslClientKeyArn: 'sslClientKeyArn',\n    sslClientKeyPassword: 'sslClientKeyPassword',\n    topic: 'topic',\n  },\n  kinesisSettings: {\n    includeControlDetails: false,\n    includeNullAndEmpty: false,\n    includePartitionValue: false,\n    includeTableAlterOperations: false,\n    includeTransactionDetails: false,\n    messageFormat: 'messageFormat',\n    noHexPrefix: false,\n    partitionIncludeSchemaTable: false,\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n    streamArn: 'streamArn',\n  },\n  kmsKeyId: 'kmsKeyId',\n  microsoftSqlServerSettings: {\n    bcpPacketSize: 123,\n    controlTablesFileGroup: 'controlTablesFileGroup',\n    querySingleAlwaysOnNode: false,\n    readBackupOnly: false,\n    safeguardPolicy: 'safeguardPolicy',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    useBcpFullLoad: false,\n    useThirdPartyBackupDevice: false,\n  },\n  mongoDbSettings: {\n    authMechanism: 'authMechanism',\n    authSource: 'authSource',\n    authType: 'authType',\n    databaseName: 'databaseName',\n    docsToInvestigate: 'docsToInvestigate',\n    extractDocId: 'extractDocId',\n    nestingLevel: 'nestingLevel',\n    password: 'password',\n    port: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverName: 'serverName',\n    username: 'username',\n  },\n  mySqlSettings: {\n    afterConnectScript: 'afterConnectScript',\n    cleanSourceMetadataOnMismatch: false,\n    eventsPollInterval: 123,\n    maxFileSize: 123,\n    parallelLoadThreads: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverTimezone: 'serverTimezone',\n    targetDbType: 'targetDbType',\n  },\n  neptuneSettings: {\n    errorRetryDuration: 123,\n    iamAuthEnabled: false,\n    maxFileSize: 123,\n    maxRetryCount: 123,\n    s3BucketFolder: 's3BucketFolder',\n    s3BucketName: 's3BucketName',\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n  },\n  oracleSettings: {\n    accessAlternateDirectly: false,\n    additionalArchivedLogDestId: 123,\n    addSupplementalLogging: false,\n    allowSelectNestedTables: false,\n    archivedLogDestId: 123,\n    archivedLogsOnly: false,\n    asmPassword: 'asmPassword',\n    asmServer: 'asmServer',\n    asmUser: 'asmUser',\n    charLengthSemantics: 'charLengthSemantics',\n    directPathNoLog: false,\n    directPathParallelLoad: false,\n    enableHomogenousTablespace: false,\n    extraArchivedLogDestIds: [123],\n    failTasksOnLobTruncation: false,\n    numberDatatypeScale: 123,\n    oraclePathPrefix: 'oraclePathPrefix',\n    parallelAsmReadThreads: 123,\n    readAheadBlocks: 123,\n    readTableSpaceName: false,\n    replacePathPrefix: false,\n    retryInterval: 123,\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerOracleAsmAccessRoleArn: 'secretsManagerOracleAsmAccessRoleArn',\n    secretsManagerOracleAsmSecretId: 'secretsManagerOracleAsmSecretId',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    securityDbEncryption: 'securityDbEncryption',\n    securityDbEncryptionName: 'securityDbEncryptionName',\n    spatialDataOptionToGeoJsonFunctionName: 'spatialDataOptionToGeoJsonFunctionName',\n    standbyDelayTime: 123,\n    useAlternateFolderForOnline: false,\n    useBFile: false,\n    useDirectPathFullLoad: false,\n    useLogminerReader: false,\n    usePathPrefix: 'usePathPrefix',\n  },\n  password: 'password',\n  port: 123,\n  postgreSqlSettings: {\n    afterConnectScript: 'afterConnectScript',\n    captureDdls: false,\n    ddlArtifactsSchema: 'ddlArtifactsSchema',\n    executeTimeout: 123,\n    failTasksOnLobTruncation: false,\n    heartbeatEnable: false,\n    heartbeatFrequency: 123,\n    heartbeatSchema: 'heartbeatSchema',\n    maxFileSize: 123,\n    pluginName: 'pluginName',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    slotName: 'slotName',\n  },\n  redisSettings: {\n    authPassword: 'authPassword',\n    authType: 'authType',\n    authUserName: 'authUserName',\n    port: 123,\n    serverName: 'serverName',\n    sslCaCertificateArn: 'sslCaCertificateArn',\n    sslSecurityProtocol: 'sslSecurityProtocol',\n  },\n  redshiftSettings: {\n    acceptAnyDate: false,\n    afterConnectScript: 'afterConnectScript',\n    bucketFolder: 'bucketFolder',\n    bucketName: 'bucketName',\n    caseSensitiveNames: false,\n    compUpdate: false,\n    connectionTimeout: 123,\n    dateFormat: 'dateFormat',\n    emptyAsNull: false,\n    encryptionMode: 'encryptionMode',\n    explicitIds: false,\n    fileTransferUploadStreams: 123,\n    loadTimeout: 123,\n    maxFileSize: 123,\n    removeQuotes: false,\n    replaceChars: 'replaceChars',\n    replaceInvalidChars: 'replaceInvalidChars',\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n    serverSideEncryptionKmsKeyId: 'serverSideEncryptionKmsKeyId',\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n    timeFormat: 'timeFormat',\n    trimBlanks: false,\n    truncateColumns: false,\n    writeBufferSize: 123,\n  },\n  resourceIdentifier: 'resourceIdentifier',\n  s3Settings: {\n    addColumnName: false,\n    bucketFolder: 'bucketFolder',\n    bucketName: 'bucketName',\n    cannedAclForObjects: 'cannedAclForObjects',\n    cdcInsertsAndUpdates: false,\n    cdcInsertsOnly: false,\n    cdcMaxBatchInterval: 123,\n    cdcMinFileSize: 123,\n    cdcPath: 'cdcPath',\n    compressionType: 'compressionType',\n    csvDelimiter: 'csvDelimiter',\n    csvNoSupValue: 'csvNoSupValue',\n    csvNullValue: 'csvNullValue',\n    csvRowDelimiter: 'csvRowDelimiter',\n    dataFormat: 'dataFormat',\n    dataPageSize: 123,\n    datePartitionDelimiter: 'datePartitionDelimiter',\n    datePartitionEnabled: false,\n    datePartitionSequence: 'datePartitionSequence',\n    datePartitionTimezone: 'datePartitionTimezone',\n    dictPageSizeLimit: 123,\n    enableStatistics: false,\n    encodingType: 'encodingType',\n    encryptionMode: 'encryptionMode',\n    externalTableDefinition: 'externalTableDefinition',\n    ignoreHeaderRows: 123,\n    includeOpForFullLoad: false,\n    maxFileSize: 123,\n    parquetTimestampInMillisecond: false,\n    parquetVersion: 'parquetVersion',\n    preserveTransactions: false,\n    rfc4180: false,\n    rowGroupLength: 123,\n    serverSideEncryptionKmsKeyId: 'serverSideEncryptionKmsKeyId',\n    serviceAccessRoleArn: 'serviceAccessRoleArn',\n    timestampColumnName: 'timestampColumnName',\n    useCsvNoSupValue: false,\n    useTaskStartTimeForFullLoadTimestamp: false,\n  },\n  serverName: 'serverName',\n  sslMode: 'sslMode',\n  sybaseSettings: {\n    secretsManagerAccessRoleArn: 'secretsManagerAccessRoleArn',\n    secretsManagerSecretId: 'secretsManagerSecretId',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  username: 'username',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 42,
        "10": 129,
        "75": 251,
        "91": 59,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 19,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 247,
        "290": 1
      },
      "fqnsFingerprint": "4551cfebc83470d2424044e290311284f7ecfa77d1e1308aca6c69ff716d0435"
    },
    "2b9612e93e1f87f962d37aa0ac6b9d69446a3030299f7023fa4e1840810cb6cd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ncfn_event_subscription = dms.CfnEventSubscription(self, \"MyCfnEventSubscription\",\n    sns_topic_arn=\"snsTopicArn\",\n\n    # the properties below are optional\n    enabled=False,\n    event_categories=[\"eventCategories\"],\n    source_ids=[\"sourceIds\"],\n    source_type=\"sourceType\",\n    subscription_name=\"subscriptionName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nCfnEventSubscription cfnEventSubscription = new CfnEventSubscription(this, \"MyCfnEventSubscription\", new CfnEventSubscriptionProps {\n    SnsTopicArn = \"snsTopicArn\",\n\n    // the properties below are optional\n    Enabled = false,\n    EventCategories = new [] { \"eventCategories\" },\n    SourceIds = new [] { \"sourceIds\" },\n    SourceType = \"sourceType\",\n    SubscriptionName = \"subscriptionName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nCfnEventSubscription cfnEventSubscription = CfnEventSubscription.Builder.create(this, \"MyCfnEventSubscription\")\n        .snsTopicArn(\"snsTopicArn\")\n\n        // the properties below are optional\n        .enabled(false)\n        .eventCategories(List.of(\"eventCategories\"))\n        .sourceIds(List.of(\"sourceIds\"))\n        .sourceType(\"sourceType\")\n        .subscriptionName(\"subscriptionName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ncfnEventSubscription := dms.NewCfnEventSubscription(this, jsii.String(\"MyCfnEventSubscription\"), &cfnEventSubscriptionProps{\n\tsnsTopicArn: jsii.String(\"snsTopicArn\"),\n\n\t// the properties below are optional\n\tenabled: jsii.Boolean(false),\n\teventCategories: []*string{\n\t\tjsii.String(\"eventCategories\"),\n\t},\n\tsourceIds: []*string{\n\t\tjsii.String(\"sourceIds\"),\n\t},\n\tsourceType: jsii.String(\"sourceType\"),\n\tsubscriptionName: jsii.String(\"subscriptionName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst cfnEventSubscription = new dms.CfnEventSubscription(this, 'MyCfnEventSubscription', {\n  snsTopicArn: 'snsTopicArn',\n\n  // the properties below are optional\n  enabled: false,\n  eventCategories: ['eventCategories'],\n  sourceIds: ['sourceIds'],\n  sourceType: 'sourceType',\n  subscriptionName: 'subscriptionName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEventSubscription"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEventSubscription",
        "@aws-cdk/aws-dms.CfnEventSubscriptionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnEventSubscription = new dms.CfnEventSubscription(this, 'MyCfnEventSubscription', {\n  snsTopicArn: 'snsTopicArn',\n\n  // the properties below are optional\n  enabled: false,\n  eventCategories: ['eventCategories'],\n  sourceIds: ['sourceIds'],\n  sourceType: 'sourceType',\n  subscriptionName: 'subscriptionName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 13,
        "91": 1,
        "104": 1,
        "192": 3,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "3cf26e07f5c437578b1c241ba001e09d2d53fb64395ae59b094ea240f7df499f"
    },
    "987147bcb8c62cbbb7ab56a0fbe57b17f78f661ff5cd11b800c8876e05ac51b2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ncfn_event_subscription_props = dms.CfnEventSubscriptionProps(\n    sns_topic_arn=\"snsTopicArn\",\n\n    # the properties below are optional\n    enabled=False,\n    event_categories=[\"eventCategories\"],\n    source_ids=[\"sourceIds\"],\n    source_type=\"sourceType\",\n    subscription_name=\"subscriptionName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nCfnEventSubscriptionProps cfnEventSubscriptionProps = new CfnEventSubscriptionProps {\n    SnsTopicArn = \"snsTopicArn\",\n\n    // the properties below are optional\n    Enabled = false,\n    EventCategories = new [] { \"eventCategories\" },\n    SourceIds = new [] { \"sourceIds\" },\n    SourceType = \"sourceType\",\n    SubscriptionName = \"subscriptionName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nCfnEventSubscriptionProps cfnEventSubscriptionProps = CfnEventSubscriptionProps.builder()\n        .snsTopicArn(\"snsTopicArn\")\n\n        // the properties below are optional\n        .enabled(false)\n        .eventCategories(List.of(\"eventCategories\"))\n        .sourceIds(List.of(\"sourceIds\"))\n        .sourceType(\"sourceType\")\n        .subscriptionName(\"subscriptionName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ncfnEventSubscriptionProps := &cfnEventSubscriptionProps{\n\tsnsTopicArn: jsii.String(\"snsTopicArn\"),\n\n\t// the properties below are optional\n\tenabled: jsii.Boolean(false),\n\teventCategories: []*string{\n\t\tjsii.String(\"eventCategories\"),\n\t},\n\tsourceIds: []*string{\n\t\tjsii.String(\"sourceIds\"),\n\t},\n\tsourceType: jsii.String(\"sourceType\"),\n\tsubscriptionName: jsii.String(\"subscriptionName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst cfnEventSubscriptionProps: dms.CfnEventSubscriptionProps = {\n  snsTopicArn: 'snsTopicArn',\n\n  // the properties below are optional\n  enabled: false,\n  eventCategories: ['eventCategories'],\n  sourceIds: ['sourceIds'],\n  sourceType: 'sourceType',\n  subscriptionName: 'subscriptionName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnEventSubscriptionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnEventSubscriptionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnEventSubscriptionProps: dms.CfnEventSubscriptionProps = {\n  snsTopicArn: 'snsTopicArn',\n\n  // the properties below are optional\n  enabled: false,\n  eventCategories: ['eventCategories'],\n  sourceIds: ['sourceIds'],\n  sourceType: 'sourceType',\n  subscriptionName: 'subscriptionName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 13,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "4544dba45471cb66f32b92ed54156a2f77ead38cf0400fb7f25450463e613128"
    },
    "b4e68aa2e5be8e24245829580ae58c441bd92e1353853ca7028dd822969e9edd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ncfn_replication_instance = dms.CfnReplicationInstance(self, \"MyCfnReplicationInstance\",\n    replication_instance_class=\"replicationInstanceClass\",\n\n    # the properties below are optional\n    allocated_storage=123,\n    allow_major_version_upgrade=False,\n    auto_minor_version_upgrade=False,\n    availability_zone=\"availabilityZone\",\n    engine_version=\"engineVersion\",\n    kms_key_id=\"kmsKeyId\",\n    multi_az=False,\n    preferred_maintenance_window=\"preferredMaintenanceWindow\",\n    publicly_accessible=False,\n    replication_instance_identifier=\"replicationInstanceIdentifier\",\n    replication_subnet_group_identifier=\"replicationSubnetGroupIdentifier\",\n    resource_identifier=\"resourceIdentifier\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    vpc_security_group_ids=[\"vpcSecurityGroupIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nCfnReplicationInstance cfnReplicationInstance = new CfnReplicationInstance(this, \"MyCfnReplicationInstance\", new CfnReplicationInstanceProps {\n    ReplicationInstanceClass = \"replicationInstanceClass\",\n\n    // the properties below are optional\n    AllocatedStorage = 123,\n    AllowMajorVersionUpgrade = false,\n    AutoMinorVersionUpgrade = false,\n    AvailabilityZone = \"availabilityZone\",\n    EngineVersion = \"engineVersion\",\n    KmsKeyId = \"kmsKeyId\",\n    MultiAz = false,\n    PreferredMaintenanceWindow = \"preferredMaintenanceWindow\",\n    PubliclyAccessible = false,\n    ReplicationInstanceIdentifier = \"replicationInstanceIdentifier\",\n    ReplicationSubnetGroupIdentifier = \"replicationSubnetGroupIdentifier\",\n    ResourceIdentifier = \"resourceIdentifier\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VpcSecurityGroupIds = new [] { \"vpcSecurityGroupIds\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nCfnReplicationInstance cfnReplicationInstance = CfnReplicationInstance.Builder.create(this, \"MyCfnReplicationInstance\")\n        .replicationInstanceClass(\"replicationInstanceClass\")\n\n        // the properties below are optional\n        .allocatedStorage(123)\n        .allowMajorVersionUpgrade(false)\n        .autoMinorVersionUpgrade(false)\n        .availabilityZone(\"availabilityZone\")\n        .engineVersion(\"engineVersion\")\n        .kmsKeyId(\"kmsKeyId\")\n        .multiAz(false)\n        .preferredMaintenanceWindow(\"preferredMaintenanceWindow\")\n        .publiclyAccessible(false)\n        .replicationInstanceIdentifier(\"replicationInstanceIdentifier\")\n        .replicationSubnetGroupIdentifier(\"replicationSubnetGroupIdentifier\")\n        .resourceIdentifier(\"resourceIdentifier\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .vpcSecurityGroupIds(List.of(\"vpcSecurityGroupIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ncfnReplicationInstance := dms.NewCfnReplicationInstance(this, jsii.String(\"MyCfnReplicationInstance\"), &cfnReplicationInstanceProps{\n\treplicationInstanceClass: jsii.String(\"replicationInstanceClass\"),\n\n\t// the properties below are optional\n\tallocatedStorage: jsii.Number(123),\n\tallowMajorVersionUpgrade: jsii.Boolean(false),\n\tautoMinorVersionUpgrade: jsii.Boolean(false),\n\tavailabilityZone: jsii.String(\"availabilityZone\"),\n\tengineVersion: jsii.String(\"engineVersion\"),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\tmultiAz: jsii.Boolean(false),\n\tpreferredMaintenanceWindow: jsii.String(\"preferredMaintenanceWindow\"),\n\tpubliclyAccessible: jsii.Boolean(false),\n\treplicationInstanceIdentifier: jsii.String(\"replicationInstanceIdentifier\"),\n\treplicationSubnetGroupIdentifier: jsii.String(\"replicationSubnetGroupIdentifier\"),\n\tresourceIdentifier: jsii.String(\"resourceIdentifier\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tvpcSecurityGroupIds: []*string{\n\t\tjsii.String(\"vpcSecurityGroupIds\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst cfnReplicationInstance = new dms.CfnReplicationInstance(this, 'MyCfnReplicationInstance', {\n  replicationInstanceClass: 'replicationInstanceClass',\n\n  // the properties below are optional\n  allocatedStorage: 123,\n  allowMajorVersionUpgrade: false,\n  autoMinorVersionUpgrade: false,\n  availabilityZone: 'availabilityZone',\n  engineVersion: 'engineVersion',\n  kmsKeyId: 'kmsKeyId',\n  multiAz: false,\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  publiclyAccessible: false,\n  replicationInstanceIdentifier: 'replicationInstanceIdentifier',\n  replicationSubnetGroupIdentifier: 'replicationSubnetGroupIdentifier',\n  resourceIdentifier: 'resourceIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnReplicationInstance"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnReplicationInstance",
        "@aws-cdk/aws-dms.CfnReplicationInstanceProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnReplicationInstance = new dms.CfnReplicationInstance(this, 'MyCfnReplicationInstance', {\n  replicationInstanceClass: 'replicationInstanceClass',\n\n  // the properties below are optional\n  allocatedStorage: 123,\n  allowMajorVersionUpgrade: false,\n  autoMinorVersionUpgrade: false,\n  availabilityZone: 'availabilityZone',\n  engineVersion: 'engineVersion',\n  kmsKeyId: 'kmsKeyId',\n  multiAz: false,\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  publiclyAccessible: false,\n  replicationInstanceIdentifier: 'replicationInstanceIdentifier',\n  replicationSubnetGroupIdentifier: 'replicationSubnetGroupIdentifier',\n  resourceIdentifier: 'resourceIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 13,
        "75": 21,
        "91": 4,
        "104": 1,
        "192": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 17,
        "290": 1
      },
      "fqnsFingerprint": "944677bbf06b8968ccbf47add8d17c06abe0270b4fd690e9f83d0c179181a4ed"
    },
    "4f602c6597ef0a5d7616a3abc276cc983f1ecff710cb0f9de2f039494f21996c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ncfn_replication_instance_props = dms.CfnReplicationInstanceProps(\n    replication_instance_class=\"replicationInstanceClass\",\n\n    # the properties below are optional\n    allocated_storage=123,\n    allow_major_version_upgrade=False,\n    auto_minor_version_upgrade=False,\n    availability_zone=\"availabilityZone\",\n    engine_version=\"engineVersion\",\n    kms_key_id=\"kmsKeyId\",\n    multi_az=False,\n    preferred_maintenance_window=\"preferredMaintenanceWindow\",\n    publicly_accessible=False,\n    replication_instance_identifier=\"replicationInstanceIdentifier\",\n    replication_subnet_group_identifier=\"replicationSubnetGroupIdentifier\",\n    resource_identifier=\"resourceIdentifier\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    vpc_security_group_ids=[\"vpcSecurityGroupIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nCfnReplicationInstanceProps cfnReplicationInstanceProps = new CfnReplicationInstanceProps {\n    ReplicationInstanceClass = \"replicationInstanceClass\",\n\n    // the properties below are optional\n    AllocatedStorage = 123,\n    AllowMajorVersionUpgrade = false,\n    AutoMinorVersionUpgrade = false,\n    AvailabilityZone = \"availabilityZone\",\n    EngineVersion = \"engineVersion\",\n    KmsKeyId = \"kmsKeyId\",\n    MultiAz = false,\n    PreferredMaintenanceWindow = \"preferredMaintenanceWindow\",\n    PubliclyAccessible = false,\n    ReplicationInstanceIdentifier = \"replicationInstanceIdentifier\",\n    ReplicationSubnetGroupIdentifier = \"replicationSubnetGroupIdentifier\",\n    ResourceIdentifier = \"resourceIdentifier\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VpcSecurityGroupIds = new [] { \"vpcSecurityGroupIds\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nCfnReplicationInstanceProps cfnReplicationInstanceProps = CfnReplicationInstanceProps.builder()\n        .replicationInstanceClass(\"replicationInstanceClass\")\n\n        // the properties below are optional\n        .allocatedStorage(123)\n        .allowMajorVersionUpgrade(false)\n        .autoMinorVersionUpgrade(false)\n        .availabilityZone(\"availabilityZone\")\n        .engineVersion(\"engineVersion\")\n        .kmsKeyId(\"kmsKeyId\")\n        .multiAz(false)\n        .preferredMaintenanceWindow(\"preferredMaintenanceWindow\")\n        .publiclyAccessible(false)\n        .replicationInstanceIdentifier(\"replicationInstanceIdentifier\")\n        .replicationSubnetGroupIdentifier(\"replicationSubnetGroupIdentifier\")\n        .resourceIdentifier(\"resourceIdentifier\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .vpcSecurityGroupIds(List.of(\"vpcSecurityGroupIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ncfnReplicationInstanceProps := &cfnReplicationInstanceProps{\n\treplicationInstanceClass: jsii.String(\"replicationInstanceClass\"),\n\n\t// the properties below are optional\n\tallocatedStorage: jsii.Number(123),\n\tallowMajorVersionUpgrade: jsii.Boolean(false),\n\tautoMinorVersionUpgrade: jsii.Boolean(false),\n\tavailabilityZone: jsii.String(\"availabilityZone\"),\n\tengineVersion: jsii.String(\"engineVersion\"),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\tmultiAz: jsii.Boolean(false),\n\tpreferredMaintenanceWindow: jsii.String(\"preferredMaintenanceWindow\"),\n\tpubliclyAccessible: jsii.Boolean(false),\n\treplicationInstanceIdentifier: jsii.String(\"replicationInstanceIdentifier\"),\n\treplicationSubnetGroupIdentifier: jsii.String(\"replicationSubnetGroupIdentifier\"),\n\tresourceIdentifier: jsii.String(\"resourceIdentifier\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tvpcSecurityGroupIds: []*string{\n\t\tjsii.String(\"vpcSecurityGroupIds\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst cfnReplicationInstanceProps: dms.CfnReplicationInstanceProps = {\n  replicationInstanceClass: 'replicationInstanceClass',\n\n  // the properties below are optional\n  allocatedStorage: 123,\n  allowMajorVersionUpgrade: false,\n  autoMinorVersionUpgrade: false,\n  availabilityZone: 'availabilityZone',\n  engineVersion: 'engineVersion',\n  kmsKeyId: 'kmsKeyId',\n  multiAz: false,\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  publiclyAccessible: false,\n  replicationInstanceIdentifier: 'replicationInstanceIdentifier',\n  replicationSubnetGroupIdentifier: 'replicationSubnetGroupIdentifier',\n  resourceIdentifier: 'resourceIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnReplicationInstanceProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnReplicationInstanceProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnReplicationInstanceProps: dms.CfnReplicationInstanceProps = {\n  replicationInstanceClass: 'replicationInstanceClass',\n\n  // the properties below are optional\n  allocatedStorage: 123,\n  allowMajorVersionUpgrade: false,\n  autoMinorVersionUpgrade: false,\n  availabilityZone: 'availabilityZone',\n  engineVersion: 'engineVersion',\n  kmsKeyId: 'kmsKeyId',\n  multiAz: false,\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  publiclyAccessible: false,\n  replicationInstanceIdentifier: 'replicationInstanceIdentifier',\n  replicationSubnetGroupIdentifier: 'replicationSubnetGroupIdentifier',\n  resourceIdentifier: 'resourceIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 12,
        "75": 21,
        "91": 4,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 17,
        "290": 1
      },
      "fqnsFingerprint": "f2b4d9d540474663692fb15bac92309f362d74ee90324a76206ec7fe7d489c48"
    },
    "d32402f051b532615b21c1115804d9872f3439205958efef9b63867c4929ed8e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ncfn_replication_subnet_group = dms.CfnReplicationSubnetGroup(self, \"MyCfnReplicationSubnetGroup\",\n    replication_subnet_group_description=\"replicationSubnetGroupDescription\",\n    subnet_ids=[\"subnetIds\"],\n\n    # the properties below are optional\n    replication_subnet_group_identifier=\"replicationSubnetGroupIdentifier\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nCfnReplicationSubnetGroup cfnReplicationSubnetGroup = new CfnReplicationSubnetGroup(this, \"MyCfnReplicationSubnetGroup\", new CfnReplicationSubnetGroupProps {\n    ReplicationSubnetGroupDescription = \"replicationSubnetGroupDescription\",\n    SubnetIds = new [] { \"subnetIds\" },\n\n    // the properties below are optional\n    ReplicationSubnetGroupIdentifier = \"replicationSubnetGroupIdentifier\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nCfnReplicationSubnetGroup cfnReplicationSubnetGroup = CfnReplicationSubnetGroup.Builder.create(this, \"MyCfnReplicationSubnetGroup\")\n        .replicationSubnetGroupDescription(\"replicationSubnetGroupDescription\")\n        .subnetIds(List.of(\"subnetIds\"))\n\n        // the properties below are optional\n        .replicationSubnetGroupIdentifier(\"replicationSubnetGroupIdentifier\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ncfnReplicationSubnetGroup := dms.NewCfnReplicationSubnetGroup(this, jsii.String(\"MyCfnReplicationSubnetGroup\"), &cfnReplicationSubnetGroupProps{\n\treplicationSubnetGroupDescription: jsii.String(\"replicationSubnetGroupDescription\"),\n\tsubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n\n\t// the properties below are optional\n\treplicationSubnetGroupIdentifier: jsii.String(\"replicationSubnetGroupIdentifier\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst cfnReplicationSubnetGroup = new dms.CfnReplicationSubnetGroup(this, 'MyCfnReplicationSubnetGroup', {\n  replicationSubnetGroupDescription: 'replicationSubnetGroupDescription',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  replicationSubnetGroupIdentifier: 'replicationSubnetGroupIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnReplicationSubnetGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnReplicationSubnetGroup",
        "@aws-cdk/aws-dms.CfnReplicationSubnetGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnReplicationSubnetGroup = new dms.CfnReplicationSubnetGroup(this, 'MyCfnReplicationSubnetGroup', {\n  replicationSubnetGroupDescription: 'replicationSubnetGroupDescription',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  replicationSubnetGroupIdentifier: 'replicationSubnetGroupIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 10,
        "104": 1,
        "192": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "a8b15f7b9cd8a66d26c8c8a0a71a72d7eb1b9acdba500dde8d772a0124a6d8ef"
    },
    "6309c842f40420d397051400d5f4bd5a487ab57fd68861fc0607bee1ab1e889b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ncfn_replication_subnet_group_props = dms.CfnReplicationSubnetGroupProps(\n    replication_subnet_group_description=\"replicationSubnetGroupDescription\",\n    subnet_ids=[\"subnetIds\"],\n\n    # the properties below are optional\n    replication_subnet_group_identifier=\"replicationSubnetGroupIdentifier\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nCfnReplicationSubnetGroupProps cfnReplicationSubnetGroupProps = new CfnReplicationSubnetGroupProps {\n    ReplicationSubnetGroupDescription = \"replicationSubnetGroupDescription\",\n    SubnetIds = new [] { \"subnetIds\" },\n\n    // the properties below are optional\n    ReplicationSubnetGroupIdentifier = \"replicationSubnetGroupIdentifier\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nCfnReplicationSubnetGroupProps cfnReplicationSubnetGroupProps = CfnReplicationSubnetGroupProps.builder()\n        .replicationSubnetGroupDescription(\"replicationSubnetGroupDescription\")\n        .subnetIds(List.of(\"subnetIds\"))\n\n        // the properties below are optional\n        .replicationSubnetGroupIdentifier(\"replicationSubnetGroupIdentifier\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ncfnReplicationSubnetGroupProps := &cfnReplicationSubnetGroupProps{\n\treplicationSubnetGroupDescription: jsii.String(\"replicationSubnetGroupDescription\"),\n\tsubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n\n\t// the properties below are optional\n\treplicationSubnetGroupIdentifier: jsii.String(\"replicationSubnetGroupIdentifier\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst cfnReplicationSubnetGroupProps: dms.CfnReplicationSubnetGroupProps = {\n  replicationSubnetGroupDescription: 'replicationSubnetGroupDescription',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  replicationSubnetGroupIdentifier: 'replicationSubnetGroupIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnReplicationSubnetGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnReplicationSubnetGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnReplicationSubnetGroupProps: dms.CfnReplicationSubnetGroupProps = {\n  replicationSubnetGroupDescription: 'replicationSubnetGroupDescription',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  replicationSubnetGroupIdentifier: 'replicationSubnetGroupIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "36db3afa43f50dc50df55e3283306cd0ac5da3c9ac5d8db20196ca07b9bd60af"
    },
    "a3664e2890fcf5071639e3fc1309cdc7553ec98001ca7b0e953a5c47f0f2c975": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ncfn_replication_task = dms.CfnReplicationTask(self, \"MyCfnReplicationTask\",\n    migration_type=\"migrationType\",\n    replication_instance_arn=\"replicationInstanceArn\",\n    source_endpoint_arn=\"sourceEndpointArn\",\n    table_mappings=\"tableMappings\",\n    target_endpoint_arn=\"targetEndpointArn\",\n\n    # the properties below are optional\n    cdc_start_position=\"cdcStartPosition\",\n    cdc_start_time=123,\n    cdc_stop_position=\"cdcStopPosition\",\n    replication_task_identifier=\"replicationTaskIdentifier\",\n    replication_task_settings=\"replicationTaskSettings\",\n    resource_identifier=\"resourceIdentifier\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    task_data=\"taskData\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nCfnReplicationTask cfnReplicationTask = new CfnReplicationTask(this, \"MyCfnReplicationTask\", new CfnReplicationTaskProps {\n    MigrationType = \"migrationType\",\n    ReplicationInstanceArn = \"replicationInstanceArn\",\n    SourceEndpointArn = \"sourceEndpointArn\",\n    TableMappings = \"tableMappings\",\n    TargetEndpointArn = \"targetEndpointArn\",\n\n    // the properties below are optional\n    CdcStartPosition = \"cdcStartPosition\",\n    CdcStartTime = 123,\n    CdcStopPosition = \"cdcStopPosition\",\n    ReplicationTaskIdentifier = \"replicationTaskIdentifier\",\n    ReplicationTaskSettings = \"replicationTaskSettings\",\n    ResourceIdentifier = \"resourceIdentifier\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TaskData = \"taskData\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nCfnReplicationTask cfnReplicationTask = CfnReplicationTask.Builder.create(this, \"MyCfnReplicationTask\")\n        .migrationType(\"migrationType\")\n        .replicationInstanceArn(\"replicationInstanceArn\")\n        .sourceEndpointArn(\"sourceEndpointArn\")\n        .tableMappings(\"tableMappings\")\n        .targetEndpointArn(\"targetEndpointArn\")\n\n        // the properties below are optional\n        .cdcStartPosition(\"cdcStartPosition\")\n        .cdcStartTime(123)\n        .cdcStopPosition(\"cdcStopPosition\")\n        .replicationTaskIdentifier(\"replicationTaskIdentifier\")\n        .replicationTaskSettings(\"replicationTaskSettings\")\n        .resourceIdentifier(\"resourceIdentifier\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .taskData(\"taskData\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ncfnReplicationTask := dms.NewCfnReplicationTask(this, jsii.String(\"MyCfnReplicationTask\"), &cfnReplicationTaskProps{\n\tmigrationType: jsii.String(\"migrationType\"),\n\treplicationInstanceArn: jsii.String(\"replicationInstanceArn\"),\n\tsourceEndpointArn: jsii.String(\"sourceEndpointArn\"),\n\ttableMappings: jsii.String(\"tableMappings\"),\n\ttargetEndpointArn: jsii.String(\"targetEndpointArn\"),\n\n\t// the properties below are optional\n\tcdcStartPosition: jsii.String(\"cdcStartPosition\"),\n\tcdcStartTime: jsii.Number(123),\n\tcdcStopPosition: jsii.String(\"cdcStopPosition\"),\n\treplicationTaskIdentifier: jsii.String(\"replicationTaskIdentifier\"),\n\treplicationTaskSettings: jsii.String(\"replicationTaskSettings\"),\n\tresourceIdentifier: jsii.String(\"resourceIdentifier\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttaskData: jsii.String(\"taskData\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst cfnReplicationTask = new dms.CfnReplicationTask(this, 'MyCfnReplicationTask', {\n  migrationType: 'migrationType',\n  replicationInstanceArn: 'replicationInstanceArn',\n  sourceEndpointArn: 'sourceEndpointArn',\n  tableMappings: 'tableMappings',\n  targetEndpointArn: 'targetEndpointArn',\n\n  // the properties below are optional\n  cdcStartPosition: 'cdcStartPosition',\n  cdcStartTime: 123,\n  cdcStopPosition: 'cdcStopPosition',\n  replicationTaskIdentifier: 'replicationTaskIdentifier',\n  replicationTaskSettings: 'replicationTaskSettings',\n  resourceIdentifier: 'resourceIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  taskData: 'taskData',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnReplicationTask"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnReplicationTask",
        "@aws-cdk/aws-dms.CfnReplicationTaskProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnReplicationTask = new dms.CfnReplicationTask(this, 'MyCfnReplicationTask', {\n  migrationType: 'migrationType',\n  replicationInstanceArn: 'replicationInstanceArn',\n  sourceEndpointArn: 'sourceEndpointArn',\n  tableMappings: 'tableMappings',\n  targetEndpointArn: 'targetEndpointArn',\n\n  // the properties below are optional\n  cdcStartPosition: 'cdcStartPosition',\n  cdcStartTime: 123,\n  cdcStopPosition: 'cdcStopPosition',\n  replicationTaskIdentifier: 'replicationTaskIdentifier',\n  replicationTaskSettings: 'replicationTaskSettings',\n  resourceIdentifier: 'resourceIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  taskData: 'taskData',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 15,
        "75": 19,
        "104": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "803af1f9f5c83f263cab2036edf47a3d3d9d6f756c43a9279db6adb71d16419d"
    },
    "2a73abb42aed93904b678ef4ebcfef06c469d60a80f9d12f0280362abfe3ddbb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dms as dms\n\ncfn_replication_task_props = dms.CfnReplicationTaskProps(\n    migration_type=\"migrationType\",\n    replication_instance_arn=\"replicationInstanceArn\",\n    source_endpoint_arn=\"sourceEndpointArn\",\n    table_mappings=\"tableMappings\",\n    target_endpoint_arn=\"targetEndpointArn\",\n\n    # the properties below are optional\n    cdc_start_position=\"cdcStartPosition\",\n    cdc_start_time=123,\n    cdc_stop_position=\"cdcStopPosition\",\n    replication_task_identifier=\"replicationTaskIdentifier\",\n    replication_task_settings=\"replicationTaskSettings\",\n    resource_identifier=\"resourceIdentifier\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    task_data=\"taskData\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DMS;\n\nCfnReplicationTaskProps cfnReplicationTaskProps = new CfnReplicationTaskProps {\n    MigrationType = \"migrationType\",\n    ReplicationInstanceArn = \"replicationInstanceArn\",\n    SourceEndpointArn = \"sourceEndpointArn\",\n    TableMappings = \"tableMappings\",\n    TargetEndpointArn = \"targetEndpointArn\",\n\n    // the properties below are optional\n    CdcStartPosition = \"cdcStartPosition\",\n    CdcStartTime = 123,\n    CdcStopPosition = \"cdcStopPosition\",\n    ReplicationTaskIdentifier = \"replicationTaskIdentifier\",\n    ReplicationTaskSettings = \"replicationTaskSettings\",\n    ResourceIdentifier = \"resourceIdentifier\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TaskData = \"taskData\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dms.*;\n\nCfnReplicationTaskProps cfnReplicationTaskProps = CfnReplicationTaskProps.builder()\n        .migrationType(\"migrationType\")\n        .replicationInstanceArn(\"replicationInstanceArn\")\n        .sourceEndpointArn(\"sourceEndpointArn\")\n        .tableMappings(\"tableMappings\")\n        .targetEndpointArn(\"targetEndpointArn\")\n\n        // the properties below are optional\n        .cdcStartPosition(\"cdcStartPosition\")\n        .cdcStartTime(123)\n        .cdcStopPosition(\"cdcStopPosition\")\n        .replicationTaskIdentifier(\"replicationTaskIdentifier\")\n        .replicationTaskSettings(\"replicationTaskSettings\")\n        .resourceIdentifier(\"resourceIdentifier\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .taskData(\"taskData\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dms \"github.com/aws-samples/dummy/awscdkawsdms\"\n\ncfnReplicationTaskProps := &cfnReplicationTaskProps{\n\tmigrationType: jsii.String(\"migrationType\"),\n\treplicationInstanceArn: jsii.String(\"replicationInstanceArn\"),\n\tsourceEndpointArn: jsii.String(\"sourceEndpointArn\"),\n\ttableMappings: jsii.String(\"tableMappings\"),\n\ttargetEndpointArn: jsii.String(\"targetEndpointArn\"),\n\n\t// the properties below are optional\n\tcdcStartPosition: jsii.String(\"cdcStartPosition\"),\n\tcdcStartTime: jsii.Number(123),\n\tcdcStopPosition: jsii.String(\"cdcStopPosition\"),\n\treplicationTaskIdentifier: jsii.String(\"replicationTaskIdentifier\"),\n\treplicationTaskSettings: jsii.String(\"replicationTaskSettings\"),\n\tresourceIdentifier: jsii.String(\"resourceIdentifier\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttaskData: jsii.String(\"taskData\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\nconst cfnReplicationTaskProps: dms.CfnReplicationTaskProps = {\n  migrationType: 'migrationType',\n  replicationInstanceArn: 'replicationInstanceArn',\n  sourceEndpointArn: 'sourceEndpointArn',\n  tableMappings: 'tableMappings',\n  targetEndpointArn: 'targetEndpointArn',\n\n  // the properties below are optional\n  cdcStartPosition: 'cdcStartPosition',\n  cdcStartTime: 123,\n  cdcStopPosition: 'cdcStopPosition',\n  replicationTaskIdentifier: 'replicationTaskIdentifier',\n  replicationTaskSettings: 'replicationTaskSettings',\n  resourceIdentifier: 'resourceIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  taskData: 'taskData',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-dms.CfnReplicationTaskProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-dms.CfnReplicationTaskProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dms from '@aws-cdk/aws-dms';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnReplicationTaskProps: dms.CfnReplicationTaskProps = {\n  migrationType: 'migrationType',\n  replicationInstanceArn: 'replicationInstanceArn',\n  sourceEndpointArn: 'sourceEndpointArn',\n  tableMappings: 'tableMappings',\n  targetEndpointArn: 'targetEndpointArn',\n\n  // the properties below are optional\n  cdcStartPosition: 'cdcStartPosition',\n  cdcStartTime: 123,\n  cdcStopPosition: 'cdcStopPosition',\n  replicationTaskIdentifier: 'replicationTaskIdentifier',\n  replicationTaskSettings: 'replicationTaskSettings',\n  resourceIdentifier: 'resourceIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  taskData: 'taskData',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 14,
        "75": 19,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "a687a20c382170582872b429e9034279c6d8146fdff236f56651385b9ec9e1bd"
    }
  }
}