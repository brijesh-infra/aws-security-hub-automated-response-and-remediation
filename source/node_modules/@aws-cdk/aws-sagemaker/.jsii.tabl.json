{
  "version": "2",
  "toolVersion": "1.63.2",
  "snippets": {
    "2a439303175361d9a675e58d79d8539ca915b7240531c8a1acde6322f5c57a83": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_sagemaker as sagemaker",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Sagemaker;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.sagemaker.*;",
          "version": "1"
        },
        "go": {
          "source": "import sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"",
          "version": "1"
        },
        "$": {
          "source": "import * as sagemaker from '@aws-cdk/aws-sagemaker';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-sagemaker"
        },
        "field": {
          "field": "markdown",
          "line": 18
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as sagemaker from '@aws-cdk/aws-sagemaker';",
      "syntaxKindCounter": {
        "10": 1,
        "75": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "95f575062fba3a83b0f9c2c5b0aecfa72b16a602243695fd02a2e72c2e4e758c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_app = sagemaker.CfnApp(self, \"MyCfnApp\",\n    app_name=\"appName\",\n    app_type=\"appType\",\n    domain_id=\"domainId\",\n    user_profile_name=\"userProfileName\",\n\n    # the properties below are optional\n    resource_spec=sagemaker.CfnApp.ResourceSpecProperty(\n        instance_type=\"instanceType\",\n        sage_maker_image_arn=\"sageMakerImageArn\",\n        sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnApp cfnApp = new CfnApp(this, \"MyCfnApp\", new CfnAppProps {\n    AppName = \"appName\",\n    AppType = \"appType\",\n    DomainId = \"domainId\",\n    UserProfileName = \"userProfileName\",\n\n    // the properties below are optional\n    ResourceSpec = new ResourceSpecProperty {\n        InstanceType = \"instanceType\",\n        SageMakerImageArn = \"sageMakerImageArn\",\n        SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnApp cfnApp = CfnApp.Builder.create(this, \"MyCfnApp\")\n        .appName(\"appName\")\n        .appType(\"appType\")\n        .domainId(\"domainId\")\n        .userProfileName(\"userProfileName\")\n\n        // the properties below are optional\n        .resourceSpec(ResourceSpecProperty.builder()\n                .instanceType(\"instanceType\")\n                .sageMakerImageArn(\"sageMakerImageArn\")\n                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnApp := sagemaker.NewCfnApp(this, jsii.String(\"MyCfnApp\"), &cfnAppProps{\n\tappName: jsii.String(\"appName\"),\n\tappType: jsii.String(\"appType\"),\n\tdomainId: jsii.String(\"domainId\"),\n\tuserProfileName: jsii.String(\"userProfileName\"),\n\n\t// the properties below are optional\n\tresourceSpec: &resourceSpecProperty{\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnApp = new sagemaker.CfnApp(this, 'MyCfnApp', {\n  appName: 'appName',\n  appType: 'appType',\n  domainId: 'domainId',\n  userProfileName: 'userProfileName',\n\n  // the properties below are optional\n  resourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnApp"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnApp",
        "@aws-cdk/aws-sagemaker.CfnAppProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApp = new sagemaker.CfnApp(this, 'MyCfnApp', {\n  appName: 'appName',\n  appType: 'appType',\n  domainId: 'domainId',\n  userProfileName: 'userProfileName',\n\n  // the properties below are optional\n  resourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 11,
        "75": 15,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "1852d68ba06ef382a25afea3153cabf1389342e3dde1a77a29f6f23ff571f191"
    },
    "ca1034bff31210330d17ae888ed7994b579b80aace4926a21865aaaff3143013": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nresource_spec_property = sagemaker.CfnApp.ResourceSpecProperty(\n    instance_type=\"instanceType\",\n    sage_maker_image_arn=\"sageMakerImageArn\",\n    sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nResourceSpecProperty resourceSpecProperty = new ResourceSpecProperty {\n    InstanceType = \"instanceType\",\n    SageMakerImageArn = \"sageMakerImageArn\",\n    SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nResourceSpecProperty resourceSpecProperty = ResourceSpecProperty.builder()\n        .instanceType(\"instanceType\")\n        .sageMakerImageArn(\"sageMakerImageArn\")\n        .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nresourceSpecProperty := &resourceSpecProperty{\n\tinstanceType: jsii.String(\"instanceType\"),\n\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst resourceSpecProperty: sagemaker.CfnApp.ResourceSpecProperty = {\n  instanceType: 'instanceType',\n  sageMakerImageArn: 'sageMakerImageArn',\n  sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnApp.ResourceSpecProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnApp.ResourceSpecProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst resourceSpecProperty: sagemaker.CfnApp.ResourceSpecProperty = {\n  instanceType: 'instanceType',\n  sageMakerImageArn: 'sageMakerImageArn',\n  sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "fb06d7318d25b03fec44c1a349ea7b061dd61b1c3b9ec9f4c24fa6daa74f1afa"
    },
    "e8f8ababe4187a23ef836b5841ccd584e0386c6bfb278cd3f4ba4732e7ca9eb9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_app_image_config = sagemaker.CfnAppImageConfig(self, \"MyCfnAppImageConfig\",\n    app_image_config_name=\"appImageConfigName\",\n\n    # the properties below are optional\n    kernel_gateway_image_config=sagemaker.CfnAppImageConfig.KernelGatewayImageConfigProperty(\n        kernel_specs=[sagemaker.CfnAppImageConfig.KernelSpecProperty(\n            name=\"name\",\n\n            # the properties below are optional\n            display_name=\"displayName\"\n        )],\n\n        # the properties below are optional\n        file_system_config=sagemaker.CfnAppImageConfig.FileSystemConfigProperty(\n            default_gid=123,\n            default_uid=123,\n            mount_path=\"mountPath\"\n        )\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnAppImageConfig cfnAppImageConfig = new CfnAppImageConfig(this, \"MyCfnAppImageConfig\", new CfnAppImageConfigProps {\n    AppImageConfigName = \"appImageConfigName\",\n\n    // the properties below are optional\n    KernelGatewayImageConfig = new KernelGatewayImageConfigProperty {\n        KernelSpecs = new [] { new KernelSpecProperty {\n            Name = \"name\",\n\n            // the properties below are optional\n            DisplayName = \"displayName\"\n        } },\n\n        // the properties below are optional\n        FileSystemConfig = new FileSystemConfigProperty {\n            DefaultGid = 123,\n            DefaultUid = 123,\n            MountPath = \"mountPath\"\n        }\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnAppImageConfig cfnAppImageConfig = CfnAppImageConfig.Builder.create(this, \"MyCfnAppImageConfig\")\n        .appImageConfigName(\"appImageConfigName\")\n\n        // the properties below are optional\n        .kernelGatewayImageConfig(KernelGatewayImageConfigProperty.builder()\n                .kernelSpecs(List.of(KernelSpecProperty.builder()\n                        .name(\"name\")\n\n                        // the properties below are optional\n                        .displayName(\"displayName\")\n                        .build()))\n\n                // the properties below are optional\n                .fileSystemConfig(FileSystemConfigProperty.builder()\n                        .defaultGid(123)\n                        .defaultUid(123)\n                        .mountPath(\"mountPath\")\n                        .build())\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnAppImageConfig := sagemaker.NewCfnAppImageConfig(this, jsii.String(\"MyCfnAppImageConfig\"), &cfnAppImageConfigProps{\n\tappImageConfigName: jsii.String(\"appImageConfigName\"),\n\n\t// the properties below are optional\n\tkernelGatewayImageConfig: &kernelGatewayImageConfigProperty{\n\t\tkernelSpecs: []interface{}{\n\t\t\t&kernelSpecProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tdisplayName: jsii.String(\"displayName\"),\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tfileSystemConfig: &fileSystemConfigProperty{\n\t\t\tdefaultGid: jsii.Number(123),\n\t\t\tdefaultUid: jsii.Number(123),\n\t\t\tmountPath: jsii.String(\"mountPath\"),\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnAppImageConfig = new sagemaker.CfnAppImageConfig(this, 'MyCfnAppImageConfig', {\n  appImageConfigName: 'appImageConfigName',\n\n  // the properties below are optional\n  kernelGatewayImageConfig: {\n    kernelSpecs: [{\n      name: 'name',\n\n      // the properties below are optional\n      displayName: 'displayName',\n    }],\n\n    // the properties below are optional\n    fileSystemConfig: {\n      defaultGid: 123,\n      defaultUid: 123,\n      mountPath: 'mountPath',\n    },\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnAppImageConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnAppImageConfig",
        "@aws-cdk/aws-sagemaker.CfnAppImageConfigProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAppImageConfig = new sagemaker.CfnAppImageConfig(this, 'MyCfnAppImageConfig', {\n  appImageConfigName: 'appImageConfigName',\n\n  // the properties below are optional\n  kernelGatewayImageConfig: {\n    kernelSpecs: [{\n      name: 'name',\n\n      // the properties below are optional\n      displayName: 'displayName',\n    }],\n\n    // the properties below are optional\n    fileSystemConfig: {\n      defaultGid: 123,\n      defaultUid: 123,\n      mountPath: 'mountPath',\n    },\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 8,
        "75": 16,
        "104": 1,
        "192": 2,
        "193": 5,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "5cdef09a3453ed5c2cadcfdf9f7cc18118d39ec85cccf07db8d7a6675c9c6729"
    },
    "7ec9513e769fd12cc438f5081672db6a1eb101a321bfa9147212726a3211d4e3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nfile_system_config_property = sagemaker.CfnAppImageConfig.FileSystemConfigProperty(\n    default_gid=123,\n    default_uid=123,\n    mount_path=\"mountPath\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nFileSystemConfigProperty fileSystemConfigProperty = new FileSystemConfigProperty {\n    DefaultGid = 123,\n    DefaultUid = 123,\n    MountPath = \"mountPath\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nFileSystemConfigProperty fileSystemConfigProperty = FileSystemConfigProperty.builder()\n        .defaultGid(123)\n        .defaultUid(123)\n        .mountPath(\"mountPath\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nfileSystemConfigProperty := &fileSystemConfigProperty{\n\tdefaultGid: jsii.Number(123),\n\tdefaultUid: jsii.Number(123),\n\tmountPath: jsii.String(\"mountPath\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst fileSystemConfigProperty: sagemaker.CfnAppImageConfig.FileSystemConfigProperty = {\n  defaultGid: 123,\n  defaultUid: 123,\n  mountPath: 'mountPath',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnAppImageConfig.FileSystemConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnAppImageConfig.FileSystemConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst fileSystemConfigProperty: sagemaker.CfnAppImageConfig.FileSystemConfigProperty = {\n  defaultGid: 123,\n  defaultUid: 123,\n  mountPath: 'mountPath',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "14cbef84b5d65f172c036683d550a12e05ef65903d267df4b08f3b2081d2cc2b"
    },
    "5abc92f63844c16aa326e525bd52614fcc7d857d59315dba382428c5b3de25a6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nkernel_gateway_image_config_property = sagemaker.CfnAppImageConfig.KernelGatewayImageConfigProperty(\n    kernel_specs=[sagemaker.CfnAppImageConfig.KernelSpecProperty(\n        name=\"name\",\n\n        # the properties below are optional\n        display_name=\"displayName\"\n    )],\n\n    # the properties below are optional\n    file_system_config=sagemaker.CfnAppImageConfig.FileSystemConfigProperty(\n        default_gid=123,\n        default_uid=123,\n        mount_path=\"mountPath\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nKernelGatewayImageConfigProperty kernelGatewayImageConfigProperty = new KernelGatewayImageConfigProperty {\n    KernelSpecs = new [] { new KernelSpecProperty {\n        Name = \"name\",\n\n        // the properties below are optional\n        DisplayName = \"displayName\"\n    } },\n\n    // the properties below are optional\n    FileSystemConfig = new FileSystemConfigProperty {\n        DefaultGid = 123,\n        DefaultUid = 123,\n        MountPath = \"mountPath\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nKernelGatewayImageConfigProperty kernelGatewayImageConfigProperty = KernelGatewayImageConfigProperty.builder()\n        .kernelSpecs(List.of(KernelSpecProperty.builder()\n                .name(\"name\")\n\n                // the properties below are optional\n                .displayName(\"displayName\")\n                .build()))\n\n        // the properties below are optional\n        .fileSystemConfig(FileSystemConfigProperty.builder()\n                .defaultGid(123)\n                .defaultUid(123)\n                .mountPath(\"mountPath\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nkernelGatewayImageConfigProperty := &kernelGatewayImageConfigProperty{\n\tkernelSpecs: []interface{}{\n\t\t&kernelSpecProperty{\n\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t// the properties below are optional\n\t\t\tdisplayName: jsii.String(\"displayName\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tfileSystemConfig: &fileSystemConfigProperty{\n\t\tdefaultGid: jsii.Number(123),\n\t\tdefaultUid: jsii.Number(123),\n\t\tmountPath: jsii.String(\"mountPath\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst kernelGatewayImageConfigProperty: sagemaker.CfnAppImageConfig.KernelGatewayImageConfigProperty = {\n  kernelSpecs: [{\n    name: 'name',\n\n    // the properties below are optional\n    displayName: 'displayName',\n  }],\n\n  // the properties below are optional\n  fileSystemConfig: {\n    defaultGid: 123,\n    defaultUid: 123,\n    mountPath: 'mountPath',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnAppImageConfig.KernelGatewayImageConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnAppImageConfig.KernelGatewayImageConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kernelGatewayImageConfigProperty: sagemaker.CfnAppImageConfig.KernelGatewayImageConfigProperty = {\n  kernelSpecs: [{\n    name: 'name',\n\n    // the properties below are optional\n    displayName: 'displayName',\n  }],\n\n  // the properties below are optional\n  fileSystemConfig: {\n    defaultGid: 123,\n    defaultUid: 123,\n    mountPath: 'mountPath',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 4,
        "75": 12,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "b8963c59c7e979e42acf8a49922330778640cf828495f3f1e55f19658d35f983"
    },
    "b19322e77eb0974cd98bc76a888fcd5a90b691e2e5433a4ad781315a0087bee4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nkernel_spec_property = sagemaker.CfnAppImageConfig.KernelSpecProperty(\n    name=\"name\",\n\n    # the properties below are optional\n    display_name=\"displayName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nKernelSpecProperty kernelSpecProperty = new KernelSpecProperty {\n    Name = \"name\",\n\n    // the properties below are optional\n    DisplayName = \"displayName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nKernelSpecProperty kernelSpecProperty = KernelSpecProperty.builder()\n        .name(\"name\")\n\n        // the properties below are optional\n        .displayName(\"displayName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nkernelSpecProperty := &kernelSpecProperty{\n\tname: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tdisplayName: jsii.String(\"displayName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst kernelSpecProperty: sagemaker.CfnAppImageConfig.KernelSpecProperty = {\n  name: 'name',\n\n  // the properties below are optional\n  displayName: 'displayName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnAppImageConfig.KernelSpecProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnAppImageConfig.KernelSpecProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kernelSpecProperty: sagemaker.CfnAppImageConfig.KernelSpecProperty = {\n  name: 'name',\n\n  // the properties below are optional\n  displayName: 'displayName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d31f06abcb855039c0d6c75675a11879e8946980ac3dcb629cca11cee2f349bc"
    },
    "21ef02b0938c1e99a9637b3d656aaa743de10cd7cf9e7c4592428dad6e7dda8c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_app_image_config_props = sagemaker.CfnAppImageConfigProps(\n    app_image_config_name=\"appImageConfigName\",\n\n    # the properties below are optional\n    kernel_gateway_image_config=sagemaker.CfnAppImageConfig.KernelGatewayImageConfigProperty(\n        kernel_specs=[sagemaker.CfnAppImageConfig.KernelSpecProperty(\n            name=\"name\",\n\n            # the properties below are optional\n            display_name=\"displayName\"\n        )],\n\n        # the properties below are optional\n        file_system_config=sagemaker.CfnAppImageConfig.FileSystemConfigProperty(\n            default_gid=123,\n            default_uid=123,\n            mount_path=\"mountPath\"\n        )\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnAppImageConfigProps cfnAppImageConfigProps = new CfnAppImageConfigProps {\n    AppImageConfigName = \"appImageConfigName\",\n\n    // the properties below are optional\n    KernelGatewayImageConfig = new KernelGatewayImageConfigProperty {\n        KernelSpecs = new [] { new KernelSpecProperty {\n            Name = \"name\",\n\n            // the properties below are optional\n            DisplayName = \"displayName\"\n        } },\n\n        // the properties below are optional\n        FileSystemConfig = new FileSystemConfigProperty {\n            DefaultGid = 123,\n            DefaultUid = 123,\n            MountPath = \"mountPath\"\n        }\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnAppImageConfigProps cfnAppImageConfigProps = CfnAppImageConfigProps.builder()\n        .appImageConfigName(\"appImageConfigName\")\n\n        // the properties below are optional\n        .kernelGatewayImageConfig(KernelGatewayImageConfigProperty.builder()\n                .kernelSpecs(List.of(KernelSpecProperty.builder()\n                        .name(\"name\")\n\n                        // the properties below are optional\n                        .displayName(\"displayName\")\n                        .build()))\n\n                // the properties below are optional\n                .fileSystemConfig(FileSystemConfigProperty.builder()\n                        .defaultGid(123)\n                        .defaultUid(123)\n                        .mountPath(\"mountPath\")\n                        .build())\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnAppImageConfigProps := &cfnAppImageConfigProps{\n\tappImageConfigName: jsii.String(\"appImageConfigName\"),\n\n\t// the properties below are optional\n\tkernelGatewayImageConfig: &kernelGatewayImageConfigProperty{\n\t\tkernelSpecs: []interface{}{\n\t\t\t&kernelSpecProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tdisplayName: jsii.String(\"displayName\"),\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tfileSystemConfig: &fileSystemConfigProperty{\n\t\t\tdefaultGid: jsii.Number(123),\n\t\t\tdefaultUid: jsii.Number(123),\n\t\t\tmountPath: jsii.String(\"mountPath\"),\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnAppImageConfigProps: sagemaker.CfnAppImageConfigProps = {\n  appImageConfigName: 'appImageConfigName',\n\n  // the properties below are optional\n  kernelGatewayImageConfig: {\n    kernelSpecs: [{\n      name: 'name',\n\n      // the properties below are optional\n      displayName: 'displayName',\n    }],\n\n    // the properties below are optional\n    fileSystemConfig: {\n      defaultGid: 123,\n      defaultUid: 123,\n      mountPath: 'mountPath',\n    },\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnAppImageConfigProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnAppImageConfigProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAppImageConfigProps: sagemaker.CfnAppImageConfigProps = {\n  appImageConfigName: 'appImageConfigName',\n\n  // the properties below are optional\n  kernelGatewayImageConfig: {\n    kernelSpecs: [{\n      name: 'name',\n\n      // the properties below are optional\n      displayName: 'displayName',\n    }],\n\n    // the properties below are optional\n    fileSystemConfig: {\n      defaultGid: 123,\n      defaultUid: 123,\n      mountPath: 'mountPath',\n    },\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 7,
        "75": 16,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "0ea2d3eaaba4b070c260f99ac90bde58fef75e4d7b8f267c424ba2be4673ea28"
    },
    "242e85f1eda9559c591dcc3782c2fe6384fc9ced483068f8b934068c1f3eb0d8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_app_props = sagemaker.CfnAppProps(\n    app_name=\"appName\",\n    app_type=\"appType\",\n    domain_id=\"domainId\",\n    user_profile_name=\"userProfileName\",\n\n    # the properties below are optional\n    resource_spec=sagemaker.CfnApp.ResourceSpecProperty(\n        instance_type=\"instanceType\",\n        sage_maker_image_arn=\"sageMakerImageArn\",\n        sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnAppProps cfnAppProps = new CfnAppProps {\n    AppName = \"appName\",\n    AppType = \"appType\",\n    DomainId = \"domainId\",\n    UserProfileName = \"userProfileName\",\n\n    // the properties below are optional\n    ResourceSpec = new ResourceSpecProperty {\n        InstanceType = \"instanceType\",\n        SageMakerImageArn = \"sageMakerImageArn\",\n        SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnAppProps cfnAppProps = CfnAppProps.builder()\n        .appName(\"appName\")\n        .appType(\"appType\")\n        .domainId(\"domainId\")\n        .userProfileName(\"userProfileName\")\n\n        // the properties below are optional\n        .resourceSpec(ResourceSpecProperty.builder()\n                .instanceType(\"instanceType\")\n                .sageMakerImageArn(\"sageMakerImageArn\")\n                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnAppProps := &cfnAppProps{\n\tappName: jsii.String(\"appName\"),\n\tappType: jsii.String(\"appType\"),\n\tdomainId: jsii.String(\"domainId\"),\n\tuserProfileName: jsii.String(\"userProfileName\"),\n\n\t// the properties below are optional\n\tresourceSpec: &resourceSpecProperty{\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnAppProps: sagemaker.CfnAppProps = {\n  appName: 'appName',\n  appType: 'appType',\n  domainId: 'domainId',\n  userProfileName: 'userProfileName',\n\n  // the properties below are optional\n  resourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnAppProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnAppProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAppProps: sagemaker.CfnAppProps = {\n  appName: 'appName',\n  appType: 'appType',\n  domainId: 'domainId',\n  userProfileName: 'userProfileName',\n\n  // the properties below are optional\n  resourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 15,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "f248f71dd673cb2426a99757d5dd99751cb24a9ced8892de64777cb8333c4fd4"
    },
    "a3cd9c0b09b7109d7aa8be2fdf48a6fdebbed2edcb71310e338a46b75f18065b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_code_repository = sagemaker.CfnCodeRepository(self, \"MyCfnCodeRepository\",\n    git_config=sagemaker.CfnCodeRepository.GitConfigProperty(\n        repository_url=\"repositoryUrl\",\n\n        # the properties below are optional\n        branch=\"branch\",\n        secret_arn=\"secretArn\"\n    ),\n\n    # the properties below are optional\n    code_repository_name=\"codeRepositoryName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnCodeRepository cfnCodeRepository = new CfnCodeRepository(this, \"MyCfnCodeRepository\", new CfnCodeRepositoryProps {\n    GitConfig = new GitConfigProperty {\n        RepositoryUrl = \"repositoryUrl\",\n\n        // the properties below are optional\n        Branch = \"branch\",\n        SecretArn = \"secretArn\"\n    },\n\n    // the properties below are optional\n    CodeRepositoryName = \"codeRepositoryName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnCodeRepository cfnCodeRepository = CfnCodeRepository.Builder.create(this, \"MyCfnCodeRepository\")\n        .gitConfig(GitConfigProperty.builder()\n                .repositoryUrl(\"repositoryUrl\")\n\n                // the properties below are optional\n                .branch(\"branch\")\n                .secretArn(\"secretArn\")\n                .build())\n\n        // the properties below are optional\n        .codeRepositoryName(\"codeRepositoryName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnCodeRepository := sagemaker.NewCfnCodeRepository(this, jsii.String(\"MyCfnCodeRepository\"), &cfnCodeRepositoryProps{\n\tgitConfig: &gitConfigProperty{\n\t\trepositoryUrl: jsii.String(\"repositoryUrl\"),\n\n\t\t// the properties below are optional\n\t\tbranch: jsii.String(\"branch\"),\n\t\tsecretArn: jsii.String(\"secretArn\"),\n\t},\n\n\t// the properties below are optional\n\tcodeRepositoryName: jsii.String(\"codeRepositoryName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnCodeRepository = new sagemaker.CfnCodeRepository(this, 'MyCfnCodeRepository', {\n  gitConfig: {\n    repositoryUrl: 'repositoryUrl',\n\n    // the properties below are optional\n    branch: 'branch',\n    secretArn: 'secretArn',\n  },\n\n  // the properties below are optional\n  codeRepositoryName: 'codeRepositoryName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnCodeRepository"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnCodeRepository",
        "@aws-cdk/aws-sagemaker.CfnCodeRepositoryProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCodeRepository = new sagemaker.CfnCodeRepository(this, 'MyCfnCodeRepository', {\n  gitConfig: {\n    repositoryUrl: 'repositoryUrl',\n\n    // the properties below are optional\n    branch: 'branch',\n    secretArn: 'secretArn',\n  },\n\n  // the properties below are optional\n  codeRepositoryName: 'codeRepositoryName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 12,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "d9374b6983e1ea012e9d577957ac2f34cabb0a5907eeb44ac70c5b7d560bd690"
    },
    "61b4a22ac3adac239065f46b4376b991cfeba7bffd64d9a7eb65c4ab2d1a6f62": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ngit_config_property = sagemaker.CfnCodeRepository.GitConfigProperty(\n    repository_url=\"repositoryUrl\",\n\n    # the properties below are optional\n    branch=\"branch\",\n    secret_arn=\"secretArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nGitConfigProperty gitConfigProperty = new GitConfigProperty {\n    RepositoryUrl = \"repositoryUrl\",\n\n    // the properties below are optional\n    Branch = \"branch\",\n    SecretArn = \"secretArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nGitConfigProperty gitConfigProperty = GitConfigProperty.builder()\n        .repositoryUrl(\"repositoryUrl\")\n\n        // the properties below are optional\n        .branch(\"branch\")\n        .secretArn(\"secretArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ngitConfigProperty := &gitConfigProperty{\n\trepositoryUrl: jsii.String(\"repositoryUrl\"),\n\n\t// the properties below are optional\n\tbranch: jsii.String(\"branch\"),\n\tsecretArn: jsii.String(\"secretArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst gitConfigProperty: sagemaker.CfnCodeRepository.GitConfigProperty = {\n  repositoryUrl: 'repositoryUrl',\n\n  // the properties below are optional\n  branch: 'branch',\n  secretArn: 'secretArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnCodeRepository.GitConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnCodeRepository.GitConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst gitConfigProperty: sagemaker.CfnCodeRepository.GitConfigProperty = {\n  repositoryUrl: 'repositoryUrl',\n\n  // the properties below are optional\n  branch: 'branch',\n  secretArn: 'secretArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "47793fd79f2bb056d4d096aa33944142dbbb051996047838ccf7e835c4ebe28f"
    },
    "db9d95c35ab3f2a1bb5856de42457152f3ed255223524035dcf83b5f60ba7ec2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_code_repository_props = sagemaker.CfnCodeRepositoryProps(\n    git_config=sagemaker.CfnCodeRepository.GitConfigProperty(\n        repository_url=\"repositoryUrl\",\n\n        # the properties below are optional\n        branch=\"branch\",\n        secret_arn=\"secretArn\"\n    ),\n\n    # the properties below are optional\n    code_repository_name=\"codeRepositoryName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnCodeRepositoryProps cfnCodeRepositoryProps = new CfnCodeRepositoryProps {\n    GitConfig = new GitConfigProperty {\n        RepositoryUrl = \"repositoryUrl\",\n\n        // the properties below are optional\n        Branch = \"branch\",\n        SecretArn = \"secretArn\"\n    },\n\n    // the properties below are optional\n    CodeRepositoryName = \"codeRepositoryName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnCodeRepositoryProps cfnCodeRepositoryProps = CfnCodeRepositoryProps.builder()\n        .gitConfig(GitConfigProperty.builder()\n                .repositoryUrl(\"repositoryUrl\")\n\n                // the properties below are optional\n                .branch(\"branch\")\n                .secretArn(\"secretArn\")\n                .build())\n\n        // the properties below are optional\n        .codeRepositoryName(\"codeRepositoryName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnCodeRepositoryProps := &cfnCodeRepositoryProps{\n\tgitConfig: &gitConfigProperty{\n\t\trepositoryUrl: jsii.String(\"repositoryUrl\"),\n\n\t\t// the properties below are optional\n\t\tbranch: jsii.String(\"branch\"),\n\t\tsecretArn: jsii.String(\"secretArn\"),\n\t},\n\n\t// the properties below are optional\n\tcodeRepositoryName: jsii.String(\"codeRepositoryName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnCodeRepositoryProps: sagemaker.CfnCodeRepositoryProps = {\n  gitConfig: {\n    repositoryUrl: 'repositoryUrl',\n\n    // the properties below are optional\n    branch: 'branch',\n    secretArn: 'secretArn',\n  },\n\n  // the properties below are optional\n  codeRepositoryName: 'codeRepositoryName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnCodeRepositoryProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnCodeRepositoryProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCodeRepositoryProps: sagemaker.CfnCodeRepositoryProps = {\n  gitConfig: {\n    repositoryUrl: 'repositoryUrl',\n\n    // the properties below are optional\n    branch: 'branch',\n    secretArn: 'secretArn',\n  },\n\n  // the properties below are optional\n  codeRepositoryName: 'codeRepositoryName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 12,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "c74fb638b6fcc69db9e929f7a7d824548d2887e6293583cf03d491292957a804"
    },
    "b4c13fa45c25faccde1f9df5d04766e6768d7f28a7dac1bf375d4e24d7616791": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_data_quality_job_definition = sagemaker.CfnDataQualityJobDefinition(self, \"MyCfnDataQualityJobDefinition\",\n    data_quality_app_specification=sagemaker.CfnDataQualityJobDefinition.DataQualityAppSpecificationProperty(\n        image_uri=\"imageUri\",\n\n        # the properties below are optional\n        container_arguments=[\"containerArguments\"],\n        container_entrypoint=[\"containerEntrypoint\"],\n        environment={\n            \"environment_key\": \"environment\"\n        },\n        post_analytics_processor_source_uri=\"postAnalyticsProcessorSourceUri\",\n        record_preprocessor_source_uri=\"recordPreprocessorSourceUri\"\n    ),\n    data_quality_job_input=sagemaker.CfnDataQualityJobDefinition.DataQualityJobInputProperty(\n        endpoint_input=sagemaker.CfnDataQualityJobDefinition.EndpointInputProperty(\n            endpoint_name=\"endpointName\",\n            local_path=\"localPath\",\n\n            # the properties below are optional\n            s3_data_distribution_type=\"s3DataDistributionType\",\n            s3_input_mode=\"s3InputMode\"\n        )\n    ),\n    data_quality_job_output_config=sagemaker.CfnDataQualityJobDefinition.MonitoringOutputConfigProperty(\n        monitoring_outputs=[sagemaker.CfnDataQualityJobDefinition.MonitoringOutputProperty(\n            s3_output=sagemaker.CfnDataQualityJobDefinition.S3OutputProperty(\n                local_path=\"localPath\",\n                s3_uri=\"s3Uri\",\n\n                # the properties below are optional\n                s3_upload_mode=\"s3UploadMode\"\n            )\n        )],\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    ),\n    job_resources=sagemaker.CfnDataQualityJobDefinition.MonitoringResourcesProperty(\n        cluster_config=sagemaker.CfnDataQualityJobDefinition.ClusterConfigProperty(\n            instance_count=123,\n            instance_type=\"instanceType\",\n            volume_size_in_gb=123,\n\n            # the properties below are optional\n            volume_kms_key_id=\"volumeKmsKeyId\"\n        )\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    data_quality_baseline_config=sagemaker.CfnDataQualityJobDefinition.DataQualityBaselineConfigProperty(\n        baselining_job_name=\"baseliningJobName\",\n        constraints_resource=sagemaker.CfnDataQualityJobDefinition.ConstraintsResourceProperty(\n            s3_uri=\"s3Uri\"\n        ),\n        statistics_resource=sagemaker.CfnDataQualityJobDefinition.StatisticsResourceProperty(\n            s3_uri=\"s3Uri\"\n        )\n    ),\n    job_definition_name=\"jobDefinitionName\",\n    network_config=sagemaker.CfnDataQualityJobDefinition.NetworkConfigProperty(\n        enable_inter_container_traffic_encryption=False,\n        enable_network_isolation=False,\n        vpc_config=sagemaker.CfnDataQualityJobDefinition.VpcConfigProperty(\n            security_group_ids=[\"securityGroupIds\"],\n            subnets=[\"subnets\"]\n        )\n    ),\n    stopping_condition=sagemaker.CfnDataQualityJobDefinition.StoppingConditionProperty(\n        max_runtime_in_seconds=123\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnDataQualityJobDefinition cfnDataQualityJobDefinition = new CfnDataQualityJobDefinition(this, \"MyCfnDataQualityJobDefinition\", new CfnDataQualityJobDefinitionProps {\n    DataQualityAppSpecification = new DataQualityAppSpecificationProperty {\n        ImageUri = \"imageUri\",\n\n        // the properties below are optional\n        ContainerArguments = new [] { \"containerArguments\" },\n        ContainerEntrypoint = new [] { \"containerEntrypoint\" },\n        Environment = new Dictionary<string, string> {\n            { \"environmentKey\", \"environment\" }\n        },\n        PostAnalyticsProcessorSourceUri = \"postAnalyticsProcessorSourceUri\",\n        RecordPreprocessorSourceUri = \"recordPreprocessorSourceUri\"\n    },\n    DataQualityJobInput = new DataQualityJobInputProperty {\n        EndpointInput = new EndpointInputProperty {\n            EndpointName = \"endpointName\",\n            LocalPath = \"localPath\",\n\n            // the properties below are optional\n            S3DataDistributionType = \"s3DataDistributionType\",\n            S3InputMode = \"s3InputMode\"\n        }\n    },\n    DataQualityJobOutputConfig = new MonitoringOutputConfigProperty {\n        MonitoringOutputs = new [] { new MonitoringOutputProperty {\n            S3Output = new S3OutputProperty {\n                LocalPath = \"localPath\",\n                S3Uri = \"s3Uri\",\n\n                // the properties below are optional\n                S3UploadMode = \"s3UploadMode\"\n            }\n        } },\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    },\n    JobResources = new MonitoringResourcesProperty {\n        ClusterConfig = new ClusterConfigProperty {\n            InstanceCount = 123,\n            InstanceType = \"instanceType\",\n            VolumeSizeInGb = 123,\n\n            // the properties below are optional\n            VolumeKmsKeyId = \"volumeKmsKeyId\"\n        }\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    DataQualityBaselineConfig = new DataQualityBaselineConfigProperty {\n        BaseliningJobName = \"baseliningJobName\",\n        ConstraintsResource = new ConstraintsResourceProperty {\n            S3Uri = \"s3Uri\"\n        },\n        StatisticsResource = new StatisticsResourceProperty {\n            S3Uri = \"s3Uri\"\n        }\n    },\n    JobDefinitionName = \"jobDefinitionName\",\n    NetworkConfig = new NetworkConfigProperty {\n        EnableInterContainerTrafficEncryption = false,\n        EnableNetworkIsolation = false,\n        VpcConfig = new VpcConfigProperty {\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            Subnets = new [] { \"subnets\" }\n        }\n    },\n    StoppingCondition = new StoppingConditionProperty {\n        MaxRuntimeInSeconds = 123\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnDataQualityJobDefinition cfnDataQualityJobDefinition = CfnDataQualityJobDefinition.Builder.create(this, \"MyCfnDataQualityJobDefinition\")\n        .dataQualityAppSpecification(DataQualityAppSpecificationProperty.builder()\n                .imageUri(\"imageUri\")\n\n                // the properties below are optional\n                .containerArguments(List.of(\"containerArguments\"))\n                .containerEntrypoint(List.of(\"containerEntrypoint\"))\n                .environment(Map.of(\n                        \"environmentKey\", \"environment\"))\n                .postAnalyticsProcessorSourceUri(\"postAnalyticsProcessorSourceUri\")\n                .recordPreprocessorSourceUri(\"recordPreprocessorSourceUri\")\n                .build())\n        .dataQualityJobInput(DataQualityJobInputProperty.builder()\n                .endpointInput(EndpointInputProperty.builder()\n                        .endpointName(\"endpointName\")\n                        .localPath(\"localPath\")\n\n                        // the properties below are optional\n                        .s3DataDistributionType(\"s3DataDistributionType\")\n                        .s3InputMode(\"s3InputMode\")\n                        .build())\n                .build())\n        .dataQualityJobOutputConfig(MonitoringOutputConfigProperty.builder()\n                .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                        .s3Output(S3OutputProperty.builder()\n                                .localPath(\"localPath\")\n                                .s3Uri(\"s3Uri\")\n\n                                // the properties below are optional\n                                .s3UploadMode(\"s3UploadMode\")\n                                .build())\n                        .build()))\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .jobResources(MonitoringResourcesProperty.builder()\n                .clusterConfig(ClusterConfigProperty.builder()\n                        .instanceCount(123)\n                        .instanceType(\"instanceType\")\n                        .volumeSizeInGb(123)\n\n                        // the properties below are optional\n                        .volumeKmsKeyId(\"volumeKmsKeyId\")\n                        .build())\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .dataQualityBaselineConfig(DataQualityBaselineConfigProperty.builder()\n                .baseliningJobName(\"baseliningJobName\")\n                .constraintsResource(ConstraintsResourceProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .statisticsResource(StatisticsResourceProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .build())\n        .jobDefinitionName(\"jobDefinitionName\")\n        .networkConfig(NetworkConfigProperty.builder()\n                .enableInterContainerTrafficEncryption(false)\n                .enableNetworkIsolation(false)\n                .vpcConfig(VpcConfigProperty.builder()\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnets(List.of(\"subnets\"))\n                        .build())\n                .build())\n        .stoppingCondition(StoppingConditionProperty.builder()\n                .maxRuntimeInSeconds(123)\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnDataQualityJobDefinition := sagemaker.NewCfnDataQualityJobDefinition(this, jsii.String(\"MyCfnDataQualityJobDefinition\"), &cfnDataQualityJobDefinitionProps{\n\tdataQualityAppSpecification: &dataQualityAppSpecificationProperty{\n\t\timageUri: jsii.String(\"imageUri\"),\n\n\t\t// the properties below are optional\n\t\tcontainerArguments: []*string{\n\t\t\tjsii.String(\"containerArguments\"),\n\t\t},\n\t\tcontainerEntrypoint: []*string{\n\t\t\tjsii.String(\"containerEntrypoint\"),\n\t\t},\n\t\tenvironment: map[string]*string{\n\t\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t\t},\n\t\tpostAnalyticsProcessorSourceUri: jsii.String(\"postAnalyticsProcessorSourceUri\"),\n\t\trecordPreprocessorSourceUri: jsii.String(\"recordPreprocessorSourceUri\"),\n\t},\n\tdataQualityJobInput: &dataQualityJobInputProperty{\n\t\tendpointInput: &endpointInputProperty{\n\t\t\tendpointName: jsii.String(\"endpointName\"),\n\t\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t\t// the properties below are optional\n\t\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\t},\n\t},\n\tdataQualityJobOutputConfig: &monitoringOutputConfigProperty{\n\t\tmonitoringOutputs: []interface{}{\n\t\t\t&monitoringOutputProperty{\n\t\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\tjobResources: &monitoringResourcesProperty{\n\t\tclusterConfig: &clusterConfigProperty{\n\t\t\tinstanceCount: jsii.Number(123),\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t\t},\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tdataQualityBaselineConfig: &dataQualityBaselineConfigProperty{\n\t\tbaseliningJobName: jsii.String(\"baseliningJobName\"),\n\t\tconstraintsResource: &constraintsResourceProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t\tstatisticsResource: &statisticsResourceProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t},\n\tjobDefinitionName: jsii.String(\"jobDefinitionName\"),\n\tnetworkConfig: &networkConfigProperty{\n\t\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\t\tenableNetworkIsolation: jsii.Boolean(false),\n\t\tvpcConfig: &vpcConfigProperty{\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnets: []*string{\n\t\t\t\tjsii.String(\"subnets\"),\n\t\t\t},\n\t\t},\n\t},\n\tstoppingCondition: &stoppingConditionProperty{\n\t\tmaxRuntimeInSeconds: jsii.Number(123),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnDataQualityJobDefinition = new sagemaker.CfnDataQualityJobDefinition(this, 'MyCfnDataQualityJobDefinition', {\n  dataQualityAppSpecification: {\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    containerArguments: ['containerArguments'],\n    containerEntrypoint: ['containerEntrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n    recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n  },\n  dataQualityJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n    },\n  },\n  dataQualityJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  dataQualityBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n    statisticsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  jobDefinitionName: 'jobDefinitionName',\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition",
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinitionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDataQualityJobDefinition = new sagemaker.CfnDataQualityJobDefinition(this, 'MyCfnDataQualityJobDefinition', {\n  dataQualityAppSpecification: {\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    containerArguments: ['containerArguments'],\n    containerEntrypoint: ['containerEntrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n    recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n  },\n  dataQualityJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n    },\n  },\n  dataQualityJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  dataQualityBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n    statisticsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  jobDefinitionName: 'jobDefinitionName',\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 27,
        "75": 50,
        "91": 2,
        "104": 1,
        "192": 6,
        "193": 17,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 46,
        "290": 1
      },
      "fqnsFingerprint": "04ef0b8fbfa0c8c95e0cdef1a4858ba9b2c70801734eb1ac7ea4bb0e785e81e5"
    },
    "508998c7501f1881921bd769d2c8ee894930b38a6e11cc4c64fac575b608317b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncluster_config_property = sagemaker.CfnDataQualityJobDefinition.ClusterConfigProperty(\n    instance_count=123,\n    instance_type=\"instanceType\",\n    volume_size_in_gb=123,\n\n    # the properties below are optional\n    volume_kms_key_id=\"volumeKmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nClusterConfigProperty clusterConfigProperty = new ClusterConfigProperty {\n    InstanceCount = 123,\n    InstanceType = \"instanceType\",\n    VolumeSizeInGb = 123,\n\n    // the properties below are optional\n    VolumeKmsKeyId = \"volumeKmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nClusterConfigProperty clusterConfigProperty = ClusterConfigProperty.builder()\n        .instanceCount(123)\n        .instanceType(\"instanceType\")\n        .volumeSizeInGb(123)\n\n        // the properties below are optional\n        .volumeKmsKeyId(\"volumeKmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nclusterConfigProperty := &clusterConfigProperty{\n\tinstanceCount: jsii.Number(123),\n\tinstanceType: jsii.String(\"instanceType\"),\n\tvolumeSizeInGb: jsii.Number(123),\n\n\t// the properties below are optional\n\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst clusterConfigProperty: sagemaker.CfnDataQualityJobDefinition.ClusterConfigProperty = {\n  instanceCount: 123,\n  instanceType: 'instanceType',\n  volumeSizeInGb: 123,\n\n  // the properties below are optional\n  volumeKmsKeyId: 'volumeKmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.ClusterConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.ClusterConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst clusterConfigProperty: sagemaker.CfnDataQualityJobDefinition.ClusterConfigProperty = {\n  instanceCount: 123,\n  instanceType: 'instanceType',\n  volumeSizeInGb: 123,\n\n  // the properties below are optional\n  volumeKmsKeyId: 'volumeKmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "8e66a174ab3492aba3fbc5b178c66d49b2bc8d7d49517ea3d582d3c70f99d627"
    },
    "9c6d39b34c6130ad8a1d0a3097292b60766c75a95087aba063ba6086cec6afae": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nconstraints_resource_property = sagemaker.CfnDataQualityJobDefinition.ConstraintsResourceProperty(\n    s3_uri=\"s3Uri\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nConstraintsResourceProperty constraintsResourceProperty = new ConstraintsResourceProperty {\n    S3Uri = \"s3Uri\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nConstraintsResourceProperty constraintsResourceProperty = ConstraintsResourceProperty.builder()\n        .s3Uri(\"s3Uri\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nconstraintsResourceProperty := &constraintsResourceProperty{\n\ts3Uri: jsii.String(\"s3Uri\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst constraintsResourceProperty: sagemaker.CfnDataQualityJobDefinition.ConstraintsResourceProperty = {\n  s3Uri: 's3Uri',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.ConstraintsResourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.ConstraintsResourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst constraintsResourceProperty: sagemaker.CfnDataQualityJobDefinition.ConstraintsResourceProperty = {\n  s3Uri: 's3Uri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "3937d94cc5f4cae96e822b789f0fd74a203d5a0e8d818e8b4574f95b50d00a35"
    },
    "d116978a56eefaac921e3a788948767ba6b9bfd2698e720e76676cd0aaec9e36": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ndata_quality_app_specification_property = sagemaker.CfnDataQualityJobDefinition.DataQualityAppSpecificationProperty(\n    image_uri=\"imageUri\",\n\n    # the properties below are optional\n    container_arguments=[\"containerArguments\"],\n    container_entrypoint=[\"containerEntrypoint\"],\n    environment={\n        \"environment_key\": \"environment\"\n    },\n    post_analytics_processor_source_uri=\"postAnalyticsProcessorSourceUri\",\n    record_preprocessor_source_uri=\"recordPreprocessorSourceUri\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nDataQualityAppSpecificationProperty dataQualityAppSpecificationProperty = new DataQualityAppSpecificationProperty {\n    ImageUri = \"imageUri\",\n\n    // the properties below are optional\n    ContainerArguments = new [] { \"containerArguments\" },\n    ContainerEntrypoint = new [] { \"containerEntrypoint\" },\n    Environment = new Dictionary<string, string> {\n        { \"environmentKey\", \"environment\" }\n    },\n    PostAnalyticsProcessorSourceUri = \"postAnalyticsProcessorSourceUri\",\n    RecordPreprocessorSourceUri = \"recordPreprocessorSourceUri\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nDataQualityAppSpecificationProperty dataQualityAppSpecificationProperty = DataQualityAppSpecificationProperty.builder()\n        .imageUri(\"imageUri\")\n\n        // the properties below are optional\n        .containerArguments(List.of(\"containerArguments\"))\n        .containerEntrypoint(List.of(\"containerEntrypoint\"))\n        .environment(Map.of(\n                \"environmentKey\", \"environment\"))\n        .postAnalyticsProcessorSourceUri(\"postAnalyticsProcessorSourceUri\")\n        .recordPreprocessorSourceUri(\"recordPreprocessorSourceUri\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ndataQualityAppSpecificationProperty := &dataQualityAppSpecificationProperty{\n\timageUri: jsii.String(\"imageUri\"),\n\n\t// the properties below are optional\n\tcontainerArguments: []*string{\n\t\tjsii.String(\"containerArguments\"),\n\t},\n\tcontainerEntrypoint: []*string{\n\t\tjsii.String(\"containerEntrypoint\"),\n\t},\n\tenvironment: map[string]*string{\n\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t},\n\tpostAnalyticsProcessorSourceUri: jsii.String(\"postAnalyticsProcessorSourceUri\"),\n\trecordPreprocessorSourceUri: jsii.String(\"recordPreprocessorSourceUri\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst dataQualityAppSpecificationProperty: sagemaker.CfnDataQualityJobDefinition.DataQualityAppSpecificationProperty = {\n  imageUri: 'imageUri',\n\n  // the properties below are optional\n  containerArguments: ['containerArguments'],\n  containerEntrypoint: ['containerEntrypoint'],\n  environment: {\n    environmentKey: 'environment',\n  },\n  postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n  recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.DataQualityAppSpecificationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.DataQualityAppSpecificationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataQualityAppSpecificationProperty: sagemaker.CfnDataQualityJobDefinition.DataQualityAppSpecificationProperty = {\n  imageUri: 'imageUri',\n\n  // the properties below are optional\n  containerArguments: ['containerArguments'],\n  containerEntrypoint: ['containerEntrypoint'],\n  environment: {\n    environmentKey: 'environment',\n  },\n  postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n  recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 12,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "fed6948cc0a9440815c39e00bb76888f578457722a1b93bd8fa63bd2f17ac55f"
    },
    "28c643c46faf3d0e805ba1ade9c3334332976c5f09b72f283b5e3cccb3e64973": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ndata_quality_baseline_config_property = sagemaker.CfnDataQualityJobDefinition.DataQualityBaselineConfigProperty(\n    baselining_job_name=\"baseliningJobName\",\n    constraints_resource=sagemaker.CfnDataQualityJobDefinition.ConstraintsResourceProperty(\n        s3_uri=\"s3Uri\"\n    ),\n    statistics_resource=sagemaker.CfnDataQualityJobDefinition.StatisticsResourceProperty(\n        s3_uri=\"s3Uri\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nDataQualityBaselineConfigProperty dataQualityBaselineConfigProperty = new DataQualityBaselineConfigProperty {\n    BaseliningJobName = \"baseliningJobName\",\n    ConstraintsResource = new ConstraintsResourceProperty {\n        S3Uri = \"s3Uri\"\n    },\n    StatisticsResource = new StatisticsResourceProperty {\n        S3Uri = \"s3Uri\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nDataQualityBaselineConfigProperty dataQualityBaselineConfigProperty = DataQualityBaselineConfigProperty.builder()\n        .baseliningJobName(\"baseliningJobName\")\n        .constraintsResource(ConstraintsResourceProperty.builder()\n                .s3Uri(\"s3Uri\")\n                .build())\n        .statisticsResource(StatisticsResourceProperty.builder()\n                .s3Uri(\"s3Uri\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ndataQualityBaselineConfigProperty := &dataQualityBaselineConfigProperty{\n\tbaseliningJobName: jsii.String(\"baseliningJobName\"),\n\tconstraintsResource: &constraintsResourceProperty{\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t},\n\tstatisticsResource: &statisticsResourceProperty{\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst dataQualityBaselineConfigProperty: sagemaker.CfnDataQualityJobDefinition.DataQualityBaselineConfigProperty = {\n  baseliningJobName: 'baseliningJobName',\n  constraintsResource: {\n    s3Uri: 's3Uri',\n  },\n  statisticsResource: {\n    s3Uri: 's3Uri',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.DataQualityBaselineConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.DataQualityBaselineConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataQualityBaselineConfigProperty: sagemaker.CfnDataQualityJobDefinition.DataQualityBaselineConfigProperty = {\n  baseliningJobName: 'baseliningJobName',\n  constraintsResource: {\n    s3Uri: 's3Uri',\n  },\n  statisticsResource: {\n    s3Uri: 's3Uri',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "1561d635cededdd05477c780c89547dbad5aca606d3bd05b8b9daf74d222fbfb"
    },
    "2d1cd5494ca5cb37dac2f51f52d1a14f5f81fb07e874a528e57ce3acaec20495": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ndata_quality_job_input_property = sagemaker.CfnDataQualityJobDefinition.DataQualityJobInputProperty(\n    endpoint_input=sagemaker.CfnDataQualityJobDefinition.EndpointInputProperty(\n        endpoint_name=\"endpointName\",\n        local_path=\"localPath\",\n\n        # the properties below are optional\n        s3_data_distribution_type=\"s3DataDistributionType\",\n        s3_input_mode=\"s3InputMode\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nDataQualityJobInputProperty dataQualityJobInputProperty = new DataQualityJobInputProperty {\n    EndpointInput = new EndpointInputProperty {\n        EndpointName = \"endpointName\",\n        LocalPath = \"localPath\",\n\n        // the properties below are optional\n        S3DataDistributionType = \"s3DataDistributionType\",\n        S3InputMode = \"s3InputMode\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nDataQualityJobInputProperty dataQualityJobInputProperty = DataQualityJobInputProperty.builder()\n        .endpointInput(EndpointInputProperty.builder()\n                .endpointName(\"endpointName\")\n                .localPath(\"localPath\")\n\n                // the properties below are optional\n                .s3DataDistributionType(\"s3DataDistributionType\")\n                .s3InputMode(\"s3InputMode\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ndataQualityJobInputProperty := &dataQualityJobInputProperty{\n\tendpointInput: &endpointInputProperty{\n\t\tendpointName: jsii.String(\"endpointName\"),\n\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t// the properties below are optional\n\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst dataQualityJobInputProperty: sagemaker.CfnDataQualityJobDefinition.DataQualityJobInputProperty = {\n  endpointInput: {\n    endpointName: 'endpointName',\n    localPath: 'localPath',\n\n    // the properties below are optional\n    s3DataDistributionType: 's3DataDistributionType',\n    s3InputMode: 's3InputMode',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.DataQualityJobInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.DataQualityJobInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataQualityJobInputProperty: sagemaker.CfnDataQualityJobDefinition.DataQualityJobInputProperty = {\n  endpointInput: {\n    endpointName: 'endpointName',\n    localPath: 'localPath',\n\n    // the properties below are optional\n    s3DataDistributionType: 's3DataDistributionType',\n    s3InputMode: 's3InputMode',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "8d9fcd20d2f501a814fd57f975f7cfc9cc43893eaacdc0dde0e7db1fbf22f344"
    },
    "359cd9da05803fbf8660c7523afa13b55e4de0556478ce500ea6500297d07c8c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nendpoint_input_property = sagemaker.CfnDataQualityJobDefinition.EndpointInputProperty(\n    endpoint_name=\"endpointName\",\n    local_path=\"localPath\",\n\n    # the properties below are optional\n    s3_data_distribution_type=\"s3DataDistributionType\",\n    s3_input_mode=\"s3InputMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nEndpointInputProperty endpointInputProperty = new EndpointInputProperty {\n    EndpointName = \"endpointName\",\n    LocalPath = \"localPath\",\n\n    // the properties below are optional\n    S3DataDistributionType = \"s3DataDistributionType\",\n    S3InputMode = \"s3InputMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nEndpointInputProperty endpointInputProperty = EndpointInputProperty.builder()\n        .endpointName(\"endpointName\")\n        .localPath(\"localPath\")\n\n        // the properties below are optional\n        .s3DataDistributionType(\"s3DataDistributionType\")\n        .s3InputMode(\"s3InputMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nendpointInputProperty := &endpointInputProperty{\n\tendpointName: jsii.String(\"endpointName\"),\n\tlocalPath: jsii.String(\"localPath\"),\n\n\t// the properties below are optional\n\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\ts3InputMode: jsii.String(\"s3InputMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst endpointInputProperty: sagemaker.CfnDataQualityJobDefinition.EndpointInputProperty = {\n  endpointName: 'endpointName',\n  localPath: 'localPath',\n\n  // the properties below are optional\n  s3DataDistributionType: 's3DataDistributionType',\n  s3InputMode: 's3InputMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.EndpointInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.EndpointInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst endpointInputProperty: sagemaker.CfnDataQualityJobDefinition.EndpointInputProperty = {\n  endpointName: 'endpointName',\n  localPath: 'localPath',\n\n  // the properties below are optional\n  s3DataDistributionType: 's3DataDistributionType',\n  s3InputMode: 's3InputMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "e6857a298363badeea2fe461a7196f248930ffe891d73a11089c2d69269455a1"
    },
    "f7349fa08b98e7a7ade764a51e87783bbdfb416c1a4f0d5bbe6c71af4ffeece5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_output_config_property = sagemaker.CfnDataQualityJobDefinition.MonitoringOutputConfigProperty(\n    monitoring_outputs=[sagemaker.CfnDataQualityJobDefinition.MonitoringOutputProperty(\n        s3_output=sagemaker.CfnDataQualityJobDefinition.S3OutputProperty(\n            local_path=\"localPath\",\n            s3_uri=\"s3Uri\",\n\n            # the properties below are optional\n            s3_upload_mode=\"s3UploadMode\"\n        )\n    )],\n\n    # the properties below are optional\n    kms_key_id=\"kmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringOutputConfigProperty monitoringOutputConfigProperty = new MonitoringOutputConfigProperty {\n    MonitoringOutputs = new [] { new MonitoringOutputProperty {\n        S3Output = new S3OutputProperty {\n            LocalPath = \"localPath\",\n            S3Uri = \"s3Uri\",\n\n            // the properties below are optional\n            S3UploadMode = \"s3UploadMode\"\n        }\n    } },\n\n    // the properties below are optional\n    KmsKeyId = \"kmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringOutputConfigProperty monitoringOutputConfigProperty = MonitoringOutputConfigProperty.builder()\n        .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                .s3Output(S3OutputProperty.builder()\n                        .localPath(\"localPath\")\n                        .s3Uri(\"s3Uri\")\n\n                        // the properties below are optional\n                        .s3UploadMode(\"s3UploadMode\")\n                        .build())\n                .build()))\n\n        // the properties below are optional\n        .kmsKeyId(\"kmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringOutputConfigProperty := &monitoringOutputConfigProperty{\n\tmonitoringOutputs: []interface{}{\n\t\t&monitoringOutputProperty{\n\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringOutputConfigProperty: sagemaker.CfnDataQualityJobDefinition.MonitoringOutputConfigProperty = {\n  monitoringOutputs: [{\n    s3Output: {\n      localPath: 'localPath',\n      s3Uri: 's3Uri',\n\n      // the properties below are optional\n      s3UploadMode: 's3UploadMode',\n    },\n  }],\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.MonitoringOutputConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.MonitoringOutputConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringOutputConfigProperty: sagemaker.CfnDataQualityJobDefinition.MonitoringOutputConfigProperty = {\n  monitoringOutputs: [{\n    s3Output: {\n      localPath: 'localPath',\n      s3Uri: 's3Uri',\n\n      // the properties below are optional\n      s3UploadMode: 's3UploadMode',\n    },\n  }],\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 11,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "f2749e689df30b77f7263a211fb9c8fff04579477e2a1306d9a5b18f763f73eb"
    },
    "86e29b646f32d076e901c72ab0f884086a6c3bd3906412b682b608cdd51913d4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_output_property = sagemaker.CfnDataQualityJobDefinition.MonitoringOutputProperty(\n    s3_output=sagemaker.CfnDataQualityJobDefinition.S3OutputProperty(\n        local_path=\"localPath\",\n        s3_uri=\"s3Uri\",\n\n        # the properties below are optional\n        s3_upload_mode=\"s3UploadMode\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringOutputProperty monitoringOutputProperty = new MonitoringOutputProperty {\n    S3Output = new S3OutputProperty {\n        LocalPath = \"localPath\",\n        S3Uri = \"s3Uri\",\n\n        // the properties below are optional\n        S3UploadMode = \"s3UploadMode\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringOutputProperty monitoringOutputProperty = MonitoringOutputProperty.builder()\n        .s3Output(S3OutputProperty.builder()\n                .localPath(\"localPath\")\n                .s3Uri(\"s3Uri\")\n\n                // the properties below are optional\n                .s3UploadMode(\"s3UploadMode\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringOutputProperty := &monitoringOutputProperty{\n\ts3Output: &s3OutputProperty{\n\t\tlocalPath: jsii.String(\"localPath\"),\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t// the properties below are optional\n\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringOutputProperty: sagemaker.CfnDataQualityJobDefinition.MonitoringOutputProperty = {\n  s3Output: {\n    localPath: 'localPath',\n    s3Uri: 's3Uri',\n\n    // the properties below are optional\n    s3UploadMode: 's3UploadMode',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.MonitoringOutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.MonitoringOutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringOutputProperty: sagemaker.CfnDataQualityJobDefinition.MonitoringOutputProperty = {\n  s3Output: {\n    localPath: 'localPath',\n    s3Uri: 's3Uri',\n\n    // the properties below are optional\n    s3UploadMode: 's3UploadMode',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "2728fc77d2c0454a6113344a260bdef866fff98be5b1581778f428241399c47f"
    },
    "fa4eeb49911a428346fce539c3507a5f3817aa76f72afe507218d85c4186d295": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_resources_property = sagemaker.CfnDataQualityJobDefinition.MonitoringResourcesProperty(\n    cluster_config=sagemaker.CfnDataQualityJobDefinition.ClusterConfigProperty(\n        instance_count=123,\n        instance_type=\"instanceType\",\n        volume_size_in_gb=123,\n\n        # the properties below are optional\n        volume_kms_key_id=\"volumeKmsKeyId\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringResourcesProperty monitoringResourcesProperty = new MonitoringResourcesProperty {\n    ClusterConfig = new ClusterConfigProperty {\n        InstanceCount = 123,\n        InstanceType = \"instanceType\",\n        VolumeSizeInGb = 123,\n\n        // the properties below are optional\n        VolumeKmsKeyId = \"volumeKmsKeyId\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringResourcesProperty monitoringResourcesProperty = MonitoringResourcesProperty.builder()\n        .clusterConfig(ClusterConfigProperty.builder()\n                .instanceCount(123)\n                .instanceType(\"instanceType\")\n                .volumeSizeInGb(123)\n\n                // the properties below are optional\n                .volumeKmsKeyId(\"volumeKmsKeyId\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringResourcesProperty := &monitoringResourcesProperty{\n\tclusterConfig: &clusterConfigProperty{\n\t\tinstanceCount: jsii.Number(123),\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringResourcesProperty: sagemaker.CfnDataQualityJobDefinition.MonitoringResourcesProperty = {\n  clusterConfig: {\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    volumeSizeInGb: 123,\n\n    // the properties below are optional\n    volumeKmsKeyId: 'volumeKmsKeyId',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.MonitoringResourcesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.MonitoringResourcesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringResourcesProperty: sagemaker.CfnDataQualityJobDefinition.MonitoringResourcesProperty = {\n  clusterConfig: {\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    volumeSizeInGb: 123,\n\n    // the properties below are optional\n    volumeKmsKeyId: 'volumeKmsKeyId',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "fed4c3a8377d2c71d15329597c7761600547d1f5ade32328414b427cbeec7a5a"
    },
    "2ba48065c5bd17c6a75903153154ca1520ce06d6c02228bfa1d72f89383f593a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nnetwork_config_property = sagemaker.CfnDataQualityJobDefinition.NetworkConfigProperty(\n    enable_inter_container_traffic_encryption=False,\n    enable_network_isolation=False,\n    vpc_config=sagemaker.CfnDataQualityJobDefinition.VpcConfigProperty(\n        security_group_ids=[\"securityGroupIds\"],\n        subnets=[\"subnets\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nNetworkConfigProperty networkConfigProperty = new NetworkConfigProperty {\n    EnableInterContainerTrafficEncryption = false,\n    EnableNetworkIsolation = false,\n    VpcConfig = new VpcConfigProperty {\n        SecurityGroupIds = new [] { \"securityGroupIds\" },\n        Subnets = new [] { \"subnets\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nNetworkConfigProperty networkConfigProperty = NetworkConfigProperty.builder()\n        .enableInterContainerTrafficEncryption(false)\n        .enableNetworkIsolation(false)\n        .vpcConfig(VpcConfigProperty.builder()\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .subnets(List.of(\"subnets\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nnetworkConfigProperty := &networkConfigProperty{\n\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\tenableNetworkIsolation: jsii.Boolean(false),\n\tvpcConfig: &vpcConfigProperty{\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t\tsubnets: []*string{\n\t\t\tjsii.String(\"subnets\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst networkConfigProperty: sagemaker.CfnDataQualityJobDefinition.NetworkConfigProperty = {\n  enableInterContainerTrafficEncryption: false,\n  enableNetworkIsolation: false,\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.NetworkConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.NetworkConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst networkConfigProperty: sagemaker.CfnDataQualityJobDefinition.NetworkConfigProperty = {\n  enableInterContainerTrafficEncryption: false,\n  enableNetworkIsolation: false,\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "2766eb4d8ab05be276551b25566e4f36c004566b95262e13104025e4b3045b06"
    },
    "ad8360b9c3f09c8fc12f7ae5c44d78d3c10393792e3dcb96391be635fab1504a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ns3_output_property = sagemaker.CfnDataQualityJobDefinition.S3OutputProperty(\n    local_path=\"localPath\",\n    s3_uri=\"s3Uri\",\n\n    # the properties below are optional\n    s3_upload_mode=\"s3UploadMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nS3OutputProperty s3OutputProperty = new S3OutputProperty {\n    LocalPath = \"localPath\",\n    S3Uri = \"s3Uri\",\n\n    // the properties below are optional\n    S3UploadMode = \"s3UploadMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nS3OutputProperty s3OutputProperty = S3OutputProperty.builder()\n        .localPath(\"localPath\")\n        .s3Uri(\"s3Uri\")\n\n        // the properties below are optional\n        .s3UploadMode(\"s3UploadMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ns3OutputProperty := &s3OutputProperty{\n\tlocalPath: jsii.String(\"localPath\"),\n\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t// the properties below are optional\n\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst s3OutputProperty: sagemaker.CfnDataQualityJobDefinition.S3OutputProperty = {\n  localPath: 'localPath',\n  s3Uri: 's3Uri',\n\n  // the properties below are optional\n  s3UploadMode: 's3UploadMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.S3OutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.S3OutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3OutputProperty: sagemaker.CfnDataQualityJobDefinition.S3OutputProperty = {\n  localPath: 'localPath',\n  s3Uri: 's3Uri',\n\n  // the properties below are optional\n  s3UploadMode: 's3UploadMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "facfc5c5b9a845f1ced664a0f550c9849a53737382444baf2c4551e02cb5e382"
    },
    "404cb64bf769b12d0987611a61e250462029d7cfaa3a52346c4de90c41ccabd1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nstatistics_resource_property = sagemaker.CfnDataQualityJobDefinition.StatisticsResourceProperty(\n    s3_uri=\"s3Uri\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nStatisticsResourceProperty statisticsResourceProperty = new StatisticsResourceProperty {\n    S3Uri = \"s3Uri\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nStatisticsResourceProperty statisticsResourceProperty = StatisticsResourceProperty.builder()\n        .s3Uri(\"s3Uri\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nstatisticsResourceProperty := &statisticsResourceProperty{\n\ts3Uri: jsii.String(\"s3Uri\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst statisticsResourceProperty: sagemaker.CfnDataQualityJobDefinition.StatisticsResourceProperty = {\n  s3Uri: 's3Uri',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.StatisticsResourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.StatisticsResourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst statisticsResourceProperty: sagemaker.CfnDataQualityJobDefinition.StatisticsResourceProperty = {\n  s3Uri: 's3Uri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "96efbc15f9ddcc7d8749f8ab66f22d266ae971492d2872c08b92f7216b2740db"
    },
    "73c0f3be800571c014e146c748426641fc2029639c2366b53bc2ff4d075d522a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nstopping_condition_property = sagemaker.CfnDataQualityJobDefinition.StoppingConditionProperty(\n    max_runtime_in_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nStoppingConditionProperty stoppingConditionProperty = new StoppingConditionProperty {\n    MaxRuntimeInSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nStoppingConditionProperty stoppingConditionProperty = StoppingConditionProperty.builder()\n        .maxRuntimeInSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nstoppingConditionProperty := &stoppingConditionProperty{\n\tmaxRuntimeInSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst stoppingConditionProperty: sagemaker.CfnDataQualityJobDefinition.StoppingConditionProperty = {\n  maxRuntimeInSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.StoppingConditionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.StoppingConditionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stoppingConditionProperty: sagemaker.CfnDataQualityJobDefinition.StoppingConditionProperty = {\n  maxRuntimeInSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "fef63fa585665ddba5b2166d1d17411b3cea244813e8b1008108f2e403ade904"
    },
    "091c1d5acc314aa01a0553029430cdb4df0744f2fe864aa6f2fdbe72d8d712b9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nvpc_config_property = sagemaker.CfnDataQualityJobDefinition.VpcConfigProperty(\n    security_group_ids=[\"securityGroupIds\"],\n    subnets=[\"subnets\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nVpcConfigProperty vpcConfigProperty = new VpcConfigProperty {\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    Subnets = new [] { \"subnets\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nVpcConfigProperty vpcConfigProperty = VpcConfigProperty.builder()\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .subnets(List.of(\"subnets\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvpcConfigProperty := &vpcConfigProperty{\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsubnets: []*string{\n\t\tjsii.String(\"subnets\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst vpcConfigProperty: sagemaker.CfnDataQualityJobDefinition.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnets: ['subnets'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.VpcConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinition.VpcConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vpcConfigProperty: sagemaker.CfnDataQualityJobDefinition.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnets: ['subnets'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "4872bf1bb2283677d6e67e0ccbdecb82ec8150e31544140830e4e1f08dc8dc2d"
    },
    "e52c32fa40614825aa370fd946d5ab48b0797d82cbf12ead7477dbc4a9ba2b70": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_data_quality_job_definition_props = sagemaker.CfnDataQualityJobDefinitionProps(\n    data_quality_app_specification=sagemaker.CfnDataQualityJobDefinition.DataQualityAppSpecificationProperty(\n        image_uri=\"imageUri\",\n\n        # the properties below are optional\n        container_arguments=[\"containerArguments\"],\n        container_entrypoint=[\"containerEntrypoint\"],\n        environment={\n            \"environment_key\": \"environment\"\n        },\n        post_analytics_processor_source_uri=\"postAnalyticsProcessorSourceUri\",\n        record_preprocessor_source_uri=\"recordPreprocessorSourceUri\"\n    ),\n    data_quality_job_input=sagemaker.CfnDataQualityJobDefinition.DataQualityJobInputProperty(\n        endpoint_input=sagemaker.CfnDataQualityJobDefinition.EndpointInputProperty(\n            endpoint_name=\"endpointName\",\n            local_path=\"localPath\",\n\n            # the properties below are optional\n            s3_data_distribution_type=\"s3DataDistributionType\",\n            s3_input_mode=\"s3InputMode\"\n        )\n    ),\n    data_quality_job_output_config=sagemaker.CfnDataQualityJobDefinition.MonitoringOutputConfigProperty(\n        monitoring_outputs=[sagemaker.CfnDataQualityJobDefinition.MonitoringOutputProperty(\n            s3_output=sagemaker.CfnDataQualityJobDefinition.S3OutputProperty(\n                local_path=\"localPath\",\n                s3_uri=\"s3Uri\",\n\n                # the properties below are optional\n                s3_upload_mode=\"s3UploadMode\"\n            )\n        )],\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    ),\n    job_resources=sagemaker.CfnDataQualityJobDefinition.MonitoringResourcesProperty(\n        cluster_config=sagemaker.CfnDataQualityJobDefinition.ClusterConfigProperty(\n            instance_count=123,\n            instance_type=\"instanceType\",\n            volume_size_in_gb=123,\n\n            # the properties below are optional\n            volume_kms_key_id=\"volumeKmsKeyId\"\n        )\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    data_quality_baseline_config=sagemaker.CfnDataQualityJobDefinition.DataQualityBaselineConfigProperty(\n        baselining_job_name=\"baseliningJobName\",\n        constraints_resource=sagemaker.CfnDataQualityJobDefinition.ConstraintsResourceProperty(\n            s3_uri=\"s3Uri\"\n        ),\n        statistics_resource=sagemaker.CfnDataQualityJobDefinition.StatisticsResourceProperty(\n            s3_uri=\"s3Uri\"\n        )\n    ),\n    job_definition_name=\"jobDefinitionName\",\n    network_config=sagemaker.CfnDataQualityJobDefinition.NetworkConfigProperty(\n        enable_inter_container_traffic_encryption=False,\n        enable_network_isolation=False,\n        vpc_config=sagemaker.CfnDataQualityJobDefinition.VpcConfigProperty(\n            security_group_ids=[\"securityGroupIds\"],\n            subnets=[\"subnets\"]\n        )\n    ),\n    stopping_condition=sagemaker.CfnDataQualityJobDefinition.StoppingConditionProperty(\n        max_runtime_in_seconds=123\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnDataQualityJobDefinitionProps cfnDataQualityJobDefinitionProps = new CfnDataQualityJobDefinitionProps {\n    DataQualityAppSpecification = new DataQualityAppSpecificationProperty {\n        ImageUri = \"imageUri\",\n\n        // the properties below are optional\n        ContainerArguments = new [] { \"containerArguments\" },\n        ContainerEntrypoint = new [] { \"containerEntrypoint\" },\n        Environment = new Dictionary<string, string> {\n            { \"environmentKey\", \"environment\" }\n        },\n        PostAnalyticsProcessorSourceUri = \"postAnalyticsProcessorSourceUri\",\n        RecordPreprocessorSourceUri = \"recordPreprocessorSourceUri\"\n    },\n    DataQualityJobInput = new DataQualityJobInputProperty {\n        EndpointInput = new EndpointInputProperty {\n            EndpointName = \"endpointName\",\n            LocalPath = \"localPath\",\n\n            // the properties below are optional\n            S3DataDistributionType = \"s3DataDistributionType\",\n            S3InputMode = \"s3InputMode\"\n        }\n    },\n    DataQualityJobOutputConfig = new MonitoringOutputConfigProperty {\n        MonitoringOutputs = new [] { new MonitoringOutputProperty {\n            S3Output = new S3OutputProperty {\n                LocalPath = \"localPath\",\n                S3Uri = \"s3Uri\",\n\n                // the properties below are optional\n                S3UploadMode = \"s3UploadMode\"\n            }\n        } },\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    },\n    JobResources = new MonitoringResourcesProperty {\n        ClusterConfig = new ClusterConfigProperty {\n            InstanceCount = 123,\n            InstanceType = \"instanceType\",\n            VolumeSizeInGb = 123,\n\n            // the properties below are optional\n            VolumeKmsKeyId = \"volumeKmsKeyId\"\n        }\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    DataQualityBaselineConfig = new DataQualityBaselineConfigProperty {\n        BaseliningJobName = \"baseliningJobName\",\n        ConstraintsResource = new ConstraintsResourceProperty {\n            S3Uri = \"s3Uri\"\n        },\n        StatisticsResource = new StatisticsResourceProperty {\n            S3Uri = \"s3Uri\"\n        }\n    },\n    JobDefinitionName = \"jobDefinitionName\",\n    NetworkConfig = new NetworkConfigProperty {\n        EnableInterContainerTrafficEncryption = false,\n        EnableNetworkIsolation = false,\n        VpcConfig = new VpcConfigProperty {\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            Subnets = new [] { \"subnets\" }\n        }\n    },\n    StoppingCondition = new StoppingConditionProperty {\n        MaxRuntimeInSeconds = 123\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnDataQualityJobDefinitionProps cfnDataQualityJobDefinitionProps = CfnDataQualityJobDefinitionProps.builder()\n        .dataQualityAppSpecification(DataQualityAppSpecificationProperty.builder()\n                .imageUri(\"imageUri\")\n\n                // the properties below are optional\n                .containerArguments(List.of(\"containerArguments\"))\n                .containerEntrypoint(List.of(\"containerEntrypoint\"))\n                .environment(Map.of(\n                        \"environmentKey\", \"environment\"))\n                .postAnalyticsProcessorSourceUri(\"postAnalyticsProcessorSourceUri\")\n                .recordPreprocessorSourceUri(\"recordPreprocessorSourceUri\")\n                .build())\n        .dataQualityJobInput(DataQualityJobInputProperty.builder()\n                .endpointInput(EndpointInputProperty.builder()\n                        .endpointName(\"endpointName\")\n                        .localPath(\"localPath\")\n\n                        // the properties below are optional\n                        .s3DataDistributionType(\"s3DataDistributionType\")\n                        .s3InputMode(\"s3InputMode\")\n                        .build())\n                .build())\n        .dataQualityJobOutputConfig(MonitoringOutputConfigProperty.builder()\n                .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                        .s3Output(S3OutputProperty.builder()\n                                .localPath(\"localPath\")\n                                .s3Uri(\"s3Uri\")\n\n                                // the properties below are optional\n                                .s3UploadMode(\"s3UploadMode\")\n                                .build())\n                        .build()))\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .jobResources(MonitoringResourcesProperty.builder()\n                .clusterConfig(ClusterConfigProperty.builder()\n                        .instanceCount(123)\n                        .instanceType(\"instanceType\")\n                        .volumeSizeInGb(123)\n\n                        // the properties below are optional\n                        .volumeKmsKeyId(\"volumeKmsKeyId\")\n                        .build())\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .dataQualityBaselineConfig(DataQualityBaselineConfigProperty.builder()\n                .baseliningJobName(\"baseliningJobName\")\n                .constraintsResource(ConstraintsResourceProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .statisticsResource(StatisticsResourceProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .build())\n        .jobDefinitionName(\"jobDefinitionName\")\n        .networkConfig(NetworkConfigProperty.builder()\n                .enableInterContainerTrafficEncryption(false)\n                .enableNetworkIsolation(false)\n                .vpcConfig(VpcConfigProperty.builder()\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnets(List.of(\"subnets\"))\n                        .build())\n                .build())\n        .stoppingCondition(StoppingConditionProperty.builder()\n                .maxRuntimeInSeconds(123)\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnDataQualityJobDefinitionProps := &cfnDataQualityJobDefinitionProps{\n\tdataQualityAppSpecification: &dataQualityAppSpecificationProperty{\n\t\timageUri: jsii.String(\"imageUri\"),\n\n\t\t// the properties below are optional\n\t\tcontainerArguments: []*string{\n\t\t\tjsii.String(\"containerArguments\"),\n\t\t},\n\t\tcontainerEntrypoint: []*string{\n\t\t\tjsii.String(\"containerEntrypoint\"),\n\t\t},\n\t\tenvironment: map[string]*string{\n\t\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t\t},\n\t\tpostAnalyticsProcessorSourceUri: jsii.String(\"postAnalyticsProcessorSourceUri\"),\n\t\trecordPreprocessorSourceUri: jsii.String(\"recordPreprocessorSourceUri\"),\n\t},\n\tdataQualityJobInput: &dataQualityJobInputProperty{\n\t\tendpointInput: &endpointInputProperty{\n\t\t\tendpointName: jsii.String(\"endpointName\"),\n\t\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t\t// the properties below are optional\n\t\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\t},\n\t},\n\tdataQualityJobOutputConfig: &monitoringOutputConfigProperty{\n\t\tmonitoringOutputs: []interface{}{\n\t\t\t&monitoringOutputProperty{\n\t\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\tjobResources: &monitoringResourcesProperty{\n\t\tclusterConfig: &clusterConfigProperty{\n\t\t\tinstanceCount: jsii.Number(123),\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t\t},\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tdataQualityBaselineConfig: &dataQualityBaselineConfigProperty{\n\t\tbaseliningJobName: jsii.String(\"baseliningJobName\"),\n\t\tconstraintsResource: &constraintsResourceProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t\tstatisticsResource: &statisticsResourceProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t},\n\tjobDefinitionName: jsii.String(\"jobDefinitionName\"),\n\tnetworkConfig: &networkConfigProperty{\n\t\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\t\tenableNetworkIsolation: jsii.Boolean(false),\n\t\tvpcConfig: &vpcConfigProperty{\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnets: []*string{\n\t\t\t\tjsii.String(\"subnets\"),\n\t\t\t},\n\t\t},\n\t},\n\tstoppingCondition: &stoppingConditionProperty{\n\t\tmaxRuntimeInSeconds: jsii.Number(123),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnDataQualityJobDefinitionProps: sagemaker.CfnDataQualityJobDefinitionProps = {\n  dataQualityAppSpecification: {\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    containerArguments: ['containerArguments'],\n    containerEntrypoint: ['containerEntrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n    recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n  },\n  dataQualityJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n    },\n  },\n  dataQualityJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  dataQualityBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n    statisticsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  jobDefinitionName: 'jobDefinitionName',\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinitionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDataQualityJobDefinitionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDataQualityJobDefinitionProps: sagemaker.CfnDataQualityJobDefinitionProps = {\n  dataQualityAppSpecification: {\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    containerArguments: ['containerArguments'],\n    containerEntrypoint: ['containerEntrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n    recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n  },\n  dataQualityJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n    },\n  },\n  dataQualityJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  dataQualityBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n    statisticsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  jobDefinitionName: 'jobDefinitionName',\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 26,
        "75": 50,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 6,
        "193": 17,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 46,
        "290": 1
      },
      "fqnsFingerprint": "91e6429307d8d4dd066b358ea29760e9267993cedfeb68b16574fa9c31a57caf"
    },
    "8a592a57014ac3a37b1e6691b6d2faf07319e16ef51a02437a218002bcaaf4e4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_device = sagemaker.CfnDevice(self, \"MyCfnDevice\",\n    device_fleet_name=\"deviceFleetName\",\n\n    # the properties below are optional\n    device=sagemaker.CfnDevice.DeviceProperty(\n        device_name=\"deviceName\",\n\n        # the properties below are optional\n        description=\"description\",\n        iot_thing_name=\"iotThingName\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnDevice cfnDevice = new CfnDevice(this, \"MyCfnDevice\", new CfnDeviceProps {\n    DeviceFleetName = \"deviceFleetName\",\n\n    // the properties below are optional\n    Device = new DeviceProperty {\n        DeviceName = \"deviceName\",\n\n        // the properties below are optional\n        Description = \"description\",\n        IotThingName = \"iotThingName\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnDevice cfnDevice = CfnDevice.Builder.create(this, \"MyCfnDevice\")\n        .deviceFleetName(\"deviceFleetName\")\n\n        // the properties below are optional\n        .device(DeviceProperty.builder()\n                .deviceName(\"deviceName\")\n\n                // the properties below are optional\n                .description(\"description\")\n                .iotThingName(\"iotThingName\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnDevice := sagemaker.NewCfnDevice(this, jsii.String(\"MyCfnDevice\"), &cfnDeviceProps{\n\tdeviceFleetName: jsii.String(\"deviceFleetName\"),\n\n\t// the properties below are optional\n\tdevice: &deviceProperty{\n\t\tdeviceName: jsii.String(\"deviceName\"),\n\n\t\t// the properties below are optional\n\t\tdescription: jsii.String(\"description\"),\n\t\tiotThingName: jsii.String(\"iotThingName\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnDevice = new sagemaker.CfnDevice(this, 'MyCfnDevice', {\n  deviceFleetName: 'deviceFleetName',\n\n  // the properties below are optional\n  device: {\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    description: 'description',\n    iotThingName: 'iotThingName',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDevice"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDevice",
        "@aws-cdk/aws-sagemaker.CfnDeviceProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDevice = new sagemaker.CfnDevice(this, 'MyCfnDevice', {\n  deviceFleetName: 'deviceFleetName',\n\n  // the properties below are optional\n  device: {\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    description: 'description',\n    iotThingName: 'iotThingName',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 12,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "b46a03d336ce7726aa9ef77891bc7306c9a416ff436d54ff7a21c2bc6b2167f2"
    },
    "f8e687b7b779df9e5b6e0ea4d3f1557647adc209931f875e6c6d1611a65d4904": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ndevice_property = sagemaker.CfnDevice.DeviceProperty(\n    device_name=\"deviceName\",\n\n    # the properties below are optional\n    description=\"description\",\n    iot_thing_name=\"iotThingName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nDeviceProperty deviceProperty = new DeviceProperty {\n    DeviceName = \"deviceName\",\n\n    // the properties below are optional\n    Description = \"description\",\n    IotThingName = \"iotThingName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nDeviceProperty deviceProperty = DeviceProperty.builder()\n        .deviceName(\"deviceName\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .iotThingName(\"iotThingName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ndeviceProperty := &deviceProperty{\n\tdeviceName: jsii.String(\"deviceName\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tiotThingName: jsii.String(\"iotThingName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst deviceProperty: sagemaker.CfnDevice.DeviceProperty = {\n  deviceName: 'deviceName',\n\n  // the properties below are optional\n  description: 'description',\n  iotThingName: 'iotThingName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDevice.DeviceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDevice.DeviceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst deviceProperty: sagemaker.CfnDevice.DeviceProperty = {\n  deviceName: 'deviceName',\n\n  // the properties below are optional\n  description: 'description',\n  iotThingName: 'iotThingName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "f1b1a11d985a990d891772216b80fa4c0711064ed7ef0de347a55d11a7da8c18"
    },
    "cbfd6e251f6633d3aabffcc38e5ab244b615301333447779819c68d0174171c6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_device_fleet = sagemaker.CfnDeviceFleet(self, \"MyCfnDeviceFleet\",\n    device_fleet_name=\"deviceFleetName\",\n    output_config=sagemaker.CfnDeviceFleet.EdgeOutputConfigProperty(\n        s3_output_location=\"s3OutputLocation\",\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    description=\"description\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnDeviceFleet cfnDeviceFleet = new CfnDeviceFleet(this, \"MyCfnDeviceFleet\", new CfnDeviceFleetProps {\n    DeviceFleetName = \"deviceFleetName\",\n    OutputConfig = new EdgeOutputConfigProperty {\n        S3OutputLocation = \"s3OutputLocation\",\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnDeviceFleet cfnDeviceFleet = CfnDeviceFleet.Builder.create(this, \"MyCfnDeviceFleet\")\n        .deviceFleetName(\"deviceFleetName\")\n        .outputConfig(EdgeOutputConfigProperty.builder()\n                .s3OutputLocation(\"s3OutputLocation\")\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnDeviceFleet := sagemaker.NewCfnDeviceFleet(this, jsii.String(\"MyCfnDeviceFleet\"), &cfnDeviceFleetProps{\n\tdeviceFleetName: jsii.String(\"deviceFleetName\"),\n\toutputConfig: &edgeOutputConfigProperty{\n\t\ts3OutputLocation: jsii.String(\"s3OutputLocation\"),\n\n\t\t// the properties below are optional\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnDeviceFleet = new sagemaker.CfnDeviceFleet(this, 'MyCfnDeviceFleet', {\n  deviceFleetName: 'deviceFleetName',\n  outputConfig: {\n    s3OutputLocation: 's3OutputLocation',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  description: 'description',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDeviceFleet"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDeviceFleet",
        "@aws-cdk/aws-sagemaker.CfnDeviceFleetProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDeviceFleet = new sagemaker.CfnDeviceFleet(this, 'MyCfnDeviceFleet', {\n  deviceFleetName: 'deviceFleetName',\n  outputConfig: {\n    s3OutputLocation: 's3OutputLocation',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  description: 'description',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 13,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "d245a084ada02ec860c0d820a6694b147d38515c3e8b0dbd849ff90ab567deec"
    },
    "df83802b3fc2db9513f0b5956c387e4a13ced49824b2e163b95de5138991bd02": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nedge_output_config_property = sagemaker.CfnDeviceFleet.EdgeOutputConfigProperty(\n    s3_output_location=\"s3OutputLocation\",\n\n    # the properties below are optional\n    kms_key_id=\"kmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nEdgeOutputConfigProperty edgeOutputConfigProperty = new EdgeOutputConfigProperty {\n    S3OutputLocation = \"s3OutputLocation\",\n\n    // the properties below are optional\n    KmsKeyId = \"kmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nEdgeOutputConfigProperty edgeOutputConfigProperty = EdgeOutputConfigProperty.builder()\n        .s3OutputLocation(\"s3OutputLocation\")\n\n        // the properties below are optional\n        .kmsKeyId(\"kmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nedgeOutputConfigProperty := &edgeOutputConfigProperty{\n\ts3OutputLocation: jsii.String(\"s3OutputLocation\"),\n\n\t// the properties below are optional\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst edgeOutputConfigProperty: sagemaker.CfnDeviceFleet.EdgeOutputConfigProperty = {\n  s3OutputLocation: 's3OutputLocation',\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDeviceFleet.EdgeOutputConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDeviceFleet.EdgeOutputConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst edgeOutputConfigProperty: sagemaker.CfnDeviceFleet.EdgeOutputConfigProperty = {\n  s3OutputLocation: 's3OutputLocation',\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "a13b322b2a8abf9b7e3395f55d3c1d15458f1591a3182c6e5529119f36189566"
    },
    "cfe7cc5b6016d2016450d5941c3cf3b4de527974fa4170b5d7fe24f7dcfd4094": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_device_fleet_props = sagemaker.CfnDeviceFleetProps(\n    device_fleet_name=\"deviceFleetName\",\n    output_config=sagemaker.CfnDeviceFleet.EdgeOutputConfigProperty(\n        s3_output_location=\"s3OutputLocation\",\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    description=\"description\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnDeviceFleetProps cfnDeviceFleetProps = new CfnDeviceFleetProps {\n    DeviceFleetName = \"deviceFleetName\",\n    OutputConfig = new EdgeOutputConfigProperty {\n        S3OutputLocation = \"s3OutputLocation\",\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnDeviceFleetProps cfnDeviceFleetProps = CfnDeviceFleetProps.builder()\n        .deviceFleetName(\"deviceFleetName\")\n        .outputConfig(EdgeOutputConfigProperty.builder()\n                .s3OutputLocation(\"s3OutputLocation\")\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnDeviceFleetProps := &cfnDeviceFleetProps{\n\tdeviceFleetName: jsii.String(\"deviceFleetName\"),\n\toutputConfig: &edgeOutputConfigProperty{\n\t\ts3OutputLocation: jsii.String(\"s3OutputLocation\"),\n\n\t\t// the properties below are optional\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnDeviceFleetProps: sagemaker.CfnDeviceFleetProps = {\n  deviceFleetName: 'deviceFleetName',\n  outputConfig: {\n    s3OutputLocation: 's3OutputLocation',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  description: 'description',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDeviceFleetProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDeviceFleetProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDeviceFleetProps: sagemaker.CfnDeviceFleetProps = {\n  deviceFleetName: 'deviceFleetName',\n  outputConfig: {\n    s3OutputLocation: 's3OutputLocation',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  description: 'description',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 13,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "d85ac7b3e40a5b37cef7c719bad5178e3c7f795bbca89170b6d99382d94ad623"
    },
    "a06d253d2c149d3f2a400d813cd3fcf884155d0c6f484b23b0188cc0df97a738": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_device_props = sagemaker.CfnDeviceProps(\n    device_fleet_name=\"deviceFleetName\",\n\n    # the properties below are optional\n    device=sagemaker.CfnDevice.DeviceProperty(\n        device_name=\"deviceName\",\n\n        # the properties below are optional\n        description=\"description\",\n        iot_thing_name=\"iotThingName\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnDeviceProps cfnDeviceProps = new CfnDeviceProps {\n    DeviceFleetName = \"deviceFleetName\",\n\n    // the properties below are optional\n    Device = new DeviceProperty {\n        DeviceName = \"deviceName\",\n\n        // the properties below are optional\n        Description = \"description\",\n        IotThingName = \"iotThingName\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnDeviceProps cfnDeviceProps = CfnDeviceProps.builder()\n        .deviceFleetName(\"deviceFleetName\")\n\n        // the properties below are optional\n        .device(DeviceProperty.builder()\n                .deviceName(\"deviceName\")\n\n                // the properties below are optional\n                .description(\"description\")\n                .iotThingName(\"iotThingName\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnDeviceProps := &cfnDeviceProps{\n\tdeviceFleetName: jsii.String(\"deviceFleetName\"),\n\n\t// the properties below are optional\n\tdevice: &deviceProperty{\n\t\tdeviceName: jsii.String(\"deviceName\"),\n\n\t\t// the properties below are optional\n\t\tdescription: jsii.String(\"description\"),\n\t\tiotThingName: jsii.String(\"iotThingName\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnDeviceProps: sagemaker.CfnDeviceProps = {\n  deviceFleetName: 'deviceFleetName',\n\n  // the properties below are optional\n  device: {\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    description: 'description',\n    iotThingName: 'iotThingName',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDeviceProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDeviceProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDeviceProps: sagemaker.CfnDeviceProps = {\n  deviceFleetName: 'deviceFleetName',\n\n  // the properties below are optional\n  device: {\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    description: 'description',\n    iotThingName: 'iotThingName',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 12,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "5b3b367154cd58d4f9055d41f2f1ece9dd750a45016388f93249356d4965e024"
    },
    "1ce7a98e134678be53ab07c52e775bd575be195730e3d099a19ebbf077ffd59a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_domain = sagemaker.CfnDomain(self, \"MyCfnDomain\",\n    auth_mode=\"authMode\",\n    default_user_settings=sagemaker.CfnDomain.UserSettingsProperty(\n        execution_role=\"executionRole\",\n        jupyter_server_app_settings=sagemaker.CfnDomain.JupyterServerAppSettingsProperty(\n            default_resource_spec=sagemaker.CfnDomain.ResourceSpecProperty(\n                instance_type=\"instanceType\",\n                sage_maker_image_arn=\"sageMakerImageArn\",\n                sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n            )\n        ),\n        kernel_gateway_app_settings=sagemaker.CfnDomain.KernelGatewayAppSettingsProperty(\n            custom_images=[sagemaker.CfnDomain.CustomImageProperty(\n                app_image_config_name=\"appImageConfigName\",\n                image_name=\"imageName\",\n\n                # the properties below are optional\n                image_version_number=123\n            )],\n            default_resource_spec=sagemaker.CfnDomain.ResourceSpecProperty(\n                instance_type=\"instanceType\",\n                sage_maker_image_arn=\"sageMakerImageArn\",\n                sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n            )\n        ),\n        r_studio_server_pro_app_settings=sagemaker.CfnDomain.RStudioServerProAppSettingsProperty(\n            access_status=\"accessStatus\",\n            user_group=\"userGroup\"\n        ),\n        security_groups=[\"securityGroups\"],\n        sharing_settings=sagemaker.CfnDomain.SharingSettingsProperty(\n            notebook_output_option=\"notebookOutputOption\",\n            s3_kms_key_id=\"s3KmsKeyId\",\n            s3_output_path=\"s3OutputPath\"\n        )\n    ),\n    domain_name=\"domainName\",\n    subnet_ids=[\"subnetIds\"],\n    vpc_id=\"vpcId\",\n\n    # the properties below are optional\n    app_network_access_type=\"appNetworkAccessType\",\n    app_security_group_management=\"appSecurityGroupManagement\",\n    domain_settings=sagemaker.CfnDomain.DomainSettingsProperty(\n        r_studio_server_pro_domain_settings=sagemaker.CfnDomain.RStudioServerProDomainSettingsProperty(\n            domain_execution_role_arn=\"domainExecutionRoleArn\",\n\n            # the properties below are optional\n            default_resource_spec=sagemaker.CfnDomain.ResourceSpecProperty(\n                instance_type=\"instanceType\",\n                sage_maker_image_arn=\"sageMakerImageArn\",\n                sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n            ),\n            r_studio_connect_url=\"rStudioConnectUrl\",\n            r_studio_package_manager_url=\"rStudioPackageManagerUrl\"\n        ),\n        security_group_ids=[\"securityGroupIds\"]\n    ),\n    kms_key_id=\"kmsKeyId\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnDomain cfnDomain = new CfnDomain(this, \"MyCfnDomain\", new CfnDomainProps {\n    AuthMode = \"authMode\",\n    DefaultUserSettings = new UserSettingsProperty {\n        ExecutionRole = \"executionRole\",\n        JupyterServerAppSettings = new JupyterServerAppSettingsProperty {\n            DefaultResourceSpec = new ResourceSpecProperty {\n                InstanceType = \"instanceType\",\n                SageMakerImageArn = \"sageMakerImageArn\",\n                SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n            }\n        },\n        KernelGatewayAppSettings = new KernelGatewayAppSettingsProperty {\n            CustomImages = new [] { new CustomImageProperty {\n                AppImageConfigName = \"appImageConfigName\",\n                ImageName = \"imageName\",\n\n                // the properties below are optional\n                ImageVersionNumber = 123\n            } },\n            DefaultResourceSpec = new ResourceSpecProperty {\n                InstanceType = \"instanceType\",\n                SageMakerImageArn = \"sageMakerImageArn\",\n                SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n            }\n        },\n        RStudioServerProAppSettings = new RStudioServerProAppSettingsProperty {\n            AccessStatus = \"accessStatus\",\n            UserGroup = \"userGroup\"\n        },\n        SecurityGroups = new [] { \"securityGroups\" },\n        SharingSettings = new SharingSettingsProperty {\n            NotebookOutputOption = \"notebookOutputOption\",\n            S3KmsKeyId = \"s3KmsKeyId\",\n            S3OutputPath = \"s3OutputPath\"\n        }\n    },\n    DomainName = \"domainName\",\n    SubnetIds = new [] { \"subnetIds\" },\n    VpcId = \"vpcId\",\n\n    // the properties below are optional\n    AppNetworkAccessType = \"appNetworkAccessType\",\n    AppSecurityGroupManagement = \"appSecurityGroupManagement\",\n    DomainSettings = new DomainSettingsProperty {\n        RStudioServerProDomainSettings = new RStudioServerProDomainSettingsProperty {\n            DomainExecutionRoleArn = \"domainExecutionRoleArn\",\n\n            // the properties below are optional\n            DefaultResourceSpec = new ResourceSpecProperty {\n                InstanceType = \"instanceType\",\n                SageMakerImageArn = \"sageMakerImageArn\",\n                SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n            },\n            RStudioConnectUrl = \"rStudioConnectUrl\",\n            RStudioPackageManagerUrl = \"rStudioPackageManagerUrl\"\n        },\n        SecurityGroupIds = new [] { \"securityGroupIds\" }\n    },\n    KmsKeyId = \"kmsKeyId\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnDomain cfnDomain = CfnDomain.Builder.create(this, \"MyCfnDomain\")\n        .authMode(\"authMode\")\n        .defaultUserSettings(UserSettingsProperty.builder()\n                .executionRole(\"executionRole\")\n                .jupyterServerAppSettings(JupyterServerAppSettingsProperty.builder()\n                        .defaultResourceSpec(ResourceSpecProperty.builder()\n                                .instanceType(\"instanceType\")\n                                .sageMakerImageArn(\"sageMakerImageArn\")\n                                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                                .build())\n                        .build())\n                .kernelGatewayAppSettings(KernelGatewayAppSettingsProperty.builder()\n                        .customImages(List.of(CustomImageProperty.builder()\n                                .appImageConfigName(\"appImageConfigName\")\n                                .imageName(\"imageName\")\n\n                                // the properties below are optional\n                                .imageVersionNumber(123)\n                                .build()))\n                        .defaultResourceSpec(ResourceSpecProperty.builder()\n                                .instanceType(\"instanceType\")\n                                .sageMakerImageArn(\"sageMakerImageArn\")\n                                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                                .build())\n                        .build())\n                .rStudioServerProAppSettings(RStudioServerProAppSettingsProperty.builder()\n                        .accessStatus(\"accessStatus\")\n                        .userGroup(\"userGroup\")\n                        .build())\n                .securityGroups(List.of(\"securityGroups\"))\n                .sharingSettings(SharingSettingsProperty.builder()\n                        .notebookOutputOption(\"notebookOutputOption\")\n                        .s3KmsKeyId(\"s3KmsKeyId\")\n                        .s3OutputPath(\"s3OutputPath\")\n                        .build())\n                .build())\n        .domainName(\"domainName\")\n        .subnetIds(List.of(\"subnetIds\"))\n        .vpcId(\"vpcId\")\n\n        // the properties below are optional\n        .appNetworkAccessType(\"appNetworkAccessType\")\n        .appSecurityGroupManagement(\"appSecurityGroupManagement\")\n        .domainSettings(DomainSettingsProperty.builder()\n                .rStudioServerProDomainSettings(RStudioServerProDomainSettingsProperty.builder()\n                        .domainExecutionRoleArn(\"domainExecutionRoleArn\")\n\n                        // the properties below are optional\n                        .defaultResourceSpec(ResourceSpecProperty.builder()\n                                .instanceType(\"instanceType\")\n                                .sageMakerImageArn(\"sageMakerImageArn\")\n                                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                                .build())\n                        .rStudioConnectUrl(\"rStudioConnectUrl\")\n                        .rStudioPackageManagerUrl(\"rStudioPackageManagerUrl\")\n                        .build())\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .build())\n        .kmsKeyId(\"kmsKeyId\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnDomain := sagemaker.NewCfnDomain(this, jsii.String(\"MyCfnDomain\"), &cfnDomainProps{\n\tauthMode: jsii.String(\"authMode\"),\n\tdefaultUserSettings: &userSettingsProperty{\n\t\texecutionRole: jsii.String(\"executionRole\"),\n\t\tjupyterServerAppSettings: &jupyterServerAppSettingsProperty{\n\t\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t\t},\n\t\t},\n\t\tkernelGatewayAppSettings: &kernelGatewayAppSettingsProperty{\n\t\t\tcustomImages: []interface{}{\n\t\t\t\t&customImageProperty{\n\t\t\t\t\tappImageConfigName: jsii.String(\"appImageConfigName\"),\n\t\t\t\t\timageName: jsii.String(\"imageName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\timageVersionNumber: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t\t},\n\t\t},\n\t\trStudioServerProAppSettings: &rStudioServerProAppSettingsProperty{\n\t\t\taccessStatus: jsii.String(\"accessStatus\"),\n\t\t\tuserGroup: jsii.String(\"userGroup\"),\n\t\t},\n\t\tsecurityGroups: []*string{\n\t\t\tjsii.String(\"securityGroups\"),\n\t\t},\n\t\tsharingSettings: &sharingSettingsProperty{\n\t\t\tnotebookOutputOption: jsii.String(\"notebookOutputOption\"),\n\t\t\ts3KmsKeyId: jsii.String(\"s3KmsKeyId\"),\n\t\t\ts3OutputPath: jsii.String(\"s3OutputPath\"),\n\t\t},\n\t},\n\tdomainName: jsii.String(\"domainName\"),\n\tsubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n\tvpcId: jsii.String(\"vpcId\"),\n\n\t// the properties below are optional\n\tappNetworkAccessType: jsii.String(\"appNetworkAccessType\"),\n\tappSecurityGroupManagement: jsii.String(\"appSecurityGroupManagement\"),\n\tdomainSettings: &domainSettingsProperty{\n\t\trStudioServerProDomainSettings: &rStudioServerProDomainSettingsProperty{\n\t\t\tdomainExecutionRoleArn: jsii.String(\"domainExecutionRoleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t\t},\n\t\t\trStudioConnectUrl: jsii.String(\"rStudioConnectUrl\"),\n\t\t\trStudioPackageManagerUrl: jsii.String(\"rStudioPackageManagerUrl\"),\n\t\t},\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t},\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnDomain = new sagemaker.CfnDomain(this, 'MyCfnDomain', {\n  authMode: 'authMode',\n  defaultUserSettings: {\n    executionRole: 'executionRole',\n    jupyterServerAppSettings: {\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    kernelGatewayAppSettings: {\n      customImages: [{\n        appImageConfigName: 'appImageConfigName',\n        imageName: 'imageName',\n\n        // the properties below are optional\n        imageVersionNumber: 123,\n      }],\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    rStudioServerProAppSettings: {\n      accessStatus: 'accessStatus',\n      userGroup: 'userGroup',\n    },\n    securityGroups: ['securityGroups'],\n    sharingSettings: {\n      notebookOutputOption: 'notebookOutputOption',\n      s3KmsKeyId: 's3KmsKeyId',\n      s3OutputPath: 's3OutputPath',\n    },\n  },\n  domainName: 'domainName',\n  subnetIds: ['subnetIds'],\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  appNetworkAccessType: 'appNetworkAccessType',\n  appSecurityGroupManagement: 'appSecurityGroupManagement',\n  domainSettings: {\n    rStudioServerProDomainSettings: {\n      domainExecutionRoleArn: 'domainExecutionRoleArn',\n\n      // the properties below are optional\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n      rStudioConnectUrl: 'rStudioConnectUrl',\n      rStudioPackageManagerUrl: 'rStudioPackageManagerUrl',\n    },\n    securityGroupIds: ['securityGroupIds'],\n  },\n  kmsKeyId: 'kmsKeyId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDomain"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDomain",
        "@aws-cdk/aws-sagemaker.CfnDomainProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDomain = new sagemaker.CfnDomain(this, 'MyCfnDomain', {\n  authMode: 'authMode',\n  defaultUserSettings: {\n    executionRole: 'executionRole',\n    jupyterServerAppSettings: {\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    kernelGatewayAppSettings: {\n      customImages: [{\n        appImageConfigName: 'appImageConfigName',\n        imageName: 'imageName',\n\n        // the properties below are optional\n        imageVersionNumber: 123,\n      }],\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    rStudioServerProAppSettings: {\n      accessStatus: 'accessStatus',\n      userGroup: 'userGroup',\n    },\n    securityGroups: ['securityGroups'],\n    sharingSettings: {\n      notebookOutputOption: 'notebookOutputOption',\n      s3KmsKeyId: 's3KmsKeyId',\n      s3OutputPath: 's3OutputPath',\n    },\n  },\n  domainName: 'domainName',\n  subnetIds: ['subnetIds'],\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  appNetworkAccessType: 'appNetworkAccessType',\n  appSecurityGroupManagement: 'appSecurityGroupManagement',\n  domainSettings: {\n    rStudioServerProDomainSettings: {\n      domainExecutionRoleArn: 'domainExecutionRoleArn',\n\n      // the properties below are optional\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n      rStudioConnectUrl: 'rStudioConnectUrl',\n      rStudioPackageManagerUrl: 'rStudioPackageManagerUrl',\n    },\n    securityGroupIds: ['securityGroupIds'],\n  },\n  kmsKeyId: 'kmsKeyId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 33,
        "75": 48,
        "104": 1,
        "192": 5,
        "193": 13,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 44,
        "290": 1
      },
      "fqnsFingerprint": "41d17035e4f19f68eff0f69a046b1e98e1953d4136b1d4a1decd72a5d38a3150"
    },
    "11726380112833d32f26ef634d216ca8991b003eea5e6ee7781b9c5868585e80": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncustom_image_property = sagemaker.CfnDomain.CustomImageProperty(\n    app_image_config_name=\"appImageConfigName\",\n    image_name=\"imageName\",\n\n    # the properties below are optional\n    image_version_number=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCustomImageProperty customImageProperty = new CustomImageProperty {\n    AppImageConfigName = \"appImageConfigName\",\n    ImageName = \"imageName\",\n\n    // the properties below are optional\n    ImageVersionNumber = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCustomImageProperty customImageProperty = CustomImageProperty.builder()\n        .appImageConfigName(\"appImageConfigName\")\n        .imageName(\"imageName\")\n\n        // the properties below are optional\n        .imageVersionNumber(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncustomImageProperty := &customImageProperty{\n\tappImageConfigName: jsii.String(\"appImageConfigName\"),\n\timageName: jsii.String(\"imageName\"),\n\n\t// the properties below are optional\n\timageVersionNumber: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst customImageProperty: sagemaker.CfnDomain.CustomImageProperty = {\n  appImageConfigName: 'appImageConfigName',\n  imageName: 'imageName',\n\n  // the properties below are optional\n  imageVersionNumber: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDomain.CustomImageProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDomain.CustomImageProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customImageProperty: sagemaker.CfnDomain.CustomImageProperty = {\n  appImageConfigName: 'appImageConfigName',\n  imageName: 'imageName',\n\n  // the properties below are optional\n  imageVersionNumber: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "e033a8d1068b2c80c3834f229641156840db476bbdca7207392c5390fcb52c08"
    },
    "45947052caed16efd18820e58cc446638c9a1c460bbe591831e66366558aa322": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ndomain_settings_property = sagemaker.CfnDomain.DomainSettingsProperty(\n    r_studio_server_pro_domain_settings=sagemaker.CfnDomain.RStudioServerProDomainSettingsProperty(\n        domain_execution_role_arn=\"domainExecutionRoleArn\",\n\n        # the properties below are optional\n        default_resource_spec=sagemaker.CfnDomain.ResourceSpecProperty(\n            instance_type=\"instanceType\",\n            sage_maker_image_arn=\"sageMakerImageArn\",\n            sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n        ),\n        r_studio_connect_url=\"rStudioConnectUrl\",\n        r_studio_package_manager_url=\"rStudioPackageManagerUrl\"\n    ),\n    security_group_ids=[\"securityGroupIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nDomainSettingsProperty domainSettingsProperty = new DomainSettingsProperty {\n    RStudioServerProDomainSettings = new RStudioServerProDomainSettingsProperty {\n        DomainExecutionRoleArn = \"domainExecutionRoleArn\",\n\n        // the properties below are optional\n        DefaultResourceSpec = new ResourceSpecProperty {\n            InstanceType = \"instanceType\",\n            SageMakerImageArn = \"sageMakerImageArn\",\n            SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n        },\n        RStudioConnectUrl = \"rStudioConnectUrl\",\n        RStudioPackageManagerUrl = \"rStudioPackageManagerUrl\"\n    },\n    SecurityGroupIds = new [] { \"securityGroupIds\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nDomainSettingsProperty domainSettingsProperty = DomainSettingsProperty.builder()\n        .rStudioServerProDomainSettings(RStudioServerProDomainSettingsProperty.builder()\n                .domainExecutionRoleArn(\"domainExecutionRoleArn\")\n\n                // the properties below are optional\n                .defaultResourceSpec(ResourceSpecProperty.builder()\n                        .instanceType(\"instanceType\")\n                        .sageMakerImageArn(\"sageMakerImageArn\")\n                        .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                        .build())\n                .rStudioConnectUrl(\"rStudioConnectUrl\")\n                .rStudioPackageManagerUrl(\"rStudioPackageManagerUrl\")\n                .build())\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ndomainSettingsProperty := &domainSettingsProperty{\n\trStudioServerProDomainSettings: &rStudioServerProDomainSettingsProperty{\n\t\tdomainExecutionRoleArn: jsii.String(\"domainExecutionRoleArn\"),\n\n\t\t// the properties below are optional\n\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t},\n\t\trStudioConnectUrl: jsii.String(\"rStudioConnectUrl\"),\n\t\trStudioPackageManagerUrl: jsii.String(\"rStudioPackageManagerUrl\"),\n\t},\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst domainSettingsProperty: sagemaker.CfnDomain.DomainSettingsProperty = {\n  rStudioServerProDomainSettings: {\n    domainExecutionRoleArn: 'domainExecutionRoleArn',\n\n    // the properties below are optional\n    defaultResourceSpec: {\n      instanceType: 'instanceType',\n      sageMakerImageArn: 'sageMakerImageArn',\n      sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n    },\n    rStudioConnectUrl: 'rStudioConnectUrl',\n    rStudioPackageManagerUrl: 'rStudioPackageManagerUrl',\n  },\n  securityGroupIds: ['securityGroupIds'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDomain.DomainSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDomain.DomainSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst domainSettingsProperty: sagemaker.CfnDomain.DomainSettingsProperty = {\n  rStudioServerProDomainSettings: {\n    domainExecutionRoleArn: 'domainExecutionRoleArn',\n\n    // the properties below are optional\n    defaultResourceSpec: {\n      instanceType: 'instanceType',\n      sageMakerImageArn: 'sageMakerImageArn',\n      sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n    },\n    rStudioConnectUrl: 'rStudioConnectUrl',\n    rStudioPackageManagerUrl: 'rStudioPackageManagerUrl',\n  },\n  securityGroupIds: ['securityGroupIds'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 14,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "68385295ab235a3dc774900c239d38d5f5b5545075ab52a495725010fd043c0f"
    },
    "3d25e8c8c009d066c15d8409f7a334e4855eb2b7a583114367b4ad57b691aca6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\njupyter_server_app_settings_property = sagemaker.CfnDomain.JupyterServerAppSettingsProperty(\n    default_resource_spec=sagemaker.CfnDomain.ResourceSpecProperty(\n        instance_type=\"instanceType\",\n        sage_maker_image_arn=\"sageMakerImageArn\",\n        sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nJupyterServerAppSettingsProperty jupyterServerAppSettingsProperty = new JupyterServerAppSettingsProperty {\n    DefaultResourceSpec = new ResourceSpecProperty {\n        InstanceType = \"instanceType\",\n        SageMakerImageArn = \"sageMakerImageArn\",\n        SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nJupyterServerAppSettingsProperty jupyterServerAppSettingsProperty = JupyterServerAppSettingsProperty.builder()\n        .defaultResourceSpec(ResourceSpecProperty.builder()\n                .instanceType(\"instanceType\")\n                .sageMakerImageArn(\"sageMakerImageArn\")\n                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\njupyterServerAppSettingsProperty := &jupyterServerAppSettingsProperty{\n\tdefaultResourceSpec: &resourceSpecProperty{\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst jupyterServerAppSettingsProperty: sagemaker.CfnDomain.JupyterServerAppSettingsProperty = {\n  defaultResourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDomain.JupyterServerAppSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDomain.JupyterServerAppSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jupyterServerAppSettingsProperty: sagemaker.CfnDomain.JupyterServerAppSettingsProperty = {\n  defaultResourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "f99ee441a4f671dd649680d0a9be48957e24aba31e0ddc71ae00c6d1fd92c7a9"
    },
    "7b78d056c20b3e3a05ca6e336e02bed7ed3e3362a5c548da05f4f45640c8d416": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nkernel_gateway_app_settings_property = sagemaker.CfnDomain.KernelGatewayAppSettingsProperty(\n    custom_images=[sagemaker.CfnDomain.CustomImageProperty(\n        app_image_config_name=\"appImageConfigName\",\n        image_name=\"imageName\",\n\n        # the properties below are optional\n        image_version_number=123\n    )],\n    default_resource_spec=sagemaker.CfnDomain.ResourceSpecProperty(\n        instance_type=\"instanceType\",\n        sage_maker_image_arn=\"sageMakerImageArn\",\n        sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nKernelGatewayAppSettingsProperty kernelGatewayAppSettingsProperty = new KernelGatewayAppSettingsProperty {\n    CustomImages = new [] { new CustomImageProperty {\n        AppImageConfigName = \"appImageConfigName\",\n        ImageName = \"imageName\",\n\n        // the properties below are optional\n        ImageVersionNumber = 123\n    } },\n    DefaultResourceSpec = new ResourceSpecProperty {\n        InstanceType = \"instanceType\",\n        SageMakerImageArn = \"sageMakerImageArn\",\n        SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nKernelGatewayAppSettingsProperty kernelGatewayAppSettingsProperty = KernelGatewayAppSettingsProperty.builder()\n        .customImages(List.of(CustomImageProperty.builder()\n                .appImageConfigName(\"appImageConfigName\")\n                .imageName(\"imageName\")\n\n                // the properties below are optional\n                .imageVersionNumber(123)\n                .build()))\n        .defaultResourceSpec(ResourceSpecProperty.builder()\n                .instanceType(\"instanceType\")\n                .sageMakerImageArn(\"sageMakerImageArn\")\n                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nkernelGatewayAppSettingsProperty := &kernelGatewayAppSettingsProperty{\n\tcustomImages: []interface{}{\n\t\t&customImageProperty{\n\t\t\tappImageConfigName: jsii.String(\"appImageConfigName\"),\n\t\t\timageName: jsii.String(\"imageName\"),\n\n\t\t\t// the properties below are optional\n\t\t\timageVersionNumber: jsii.Number(123),\n\t\t},\n\t},\n\tdefaultResourceSpec: &resourceSpecProperty{\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst kernelGatewayAppSettingsProperty: sagemaker.CfnDomain.KernelGatewayAppSettingsProperty = {\n  customImages: [{\n    appImageConfigName: 'appImageConfigName',\n    imageName: 'imageName',\n\n    // the properties below are optional\n    imageVersionNumber: 123,\n  }],\n  defaultResourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDomain.KernelGatewayAppSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDomain.KernelGatewayAppSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kernelGatewayAppSettingsProperty: sagemaker.CfnDomain.KernelGatewayAppSettingsProperty = {\n  customImages: [{\n    appImageConfigName: 'appImageConfigName',\n    imageName: 'imageName',\n\n    // the properties below are optional\n    imageVersionNumber: 123,\n  }],\n  defaultResourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 6,
        "75": 13,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "ee1e60aa5e29bf33f979caa0458ad421c2f468a50cb590be944cd8243b7e5ab7"
    },
    "0bd979c98f7d47886d86d36e9931e313d01682f3e6327663749c27772511d138": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nr_studio_server_pro_app_settings_property = sagemaker.CfnDomain.RStudioServerProAppSettingsProperty(\n    access_status=\"accessStatus\",\n    user_group=\"userGroup\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nRStudioServerProAppSettingsProperty rStudioServerProAppSettingsProperty = new RStudioServerProAppSettingsProperty {\n    AccessStatus = \"accessStatus\",\n    UserGroup = \"userGroup\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nRStudioServerProAppSettingsProperty rStudioServerProAppSettingsProperty = RStudioServerProAppSettingsProperty.builder()\n        .accessStatus(\"accessStatus\")\n        .userGroup(\"userGroup\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nrStudioServerProAppSettingsProperty := &rStudioServerProAppSettingsProperty{\n\taccessStatus: jsii.String(\"accessStatus\"),\n\tuserGroup: jsii.String(\"userGroup\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst rStudioServerProAppSettingsProperty: sagemaker.CfnDomain.RStudioServerProAppSettingsProperty = {\n  accessStatus: 'accessStatus',\n  userGroup: 'userGroup',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDomain.RStudioServerProAppSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDomain.RStudioServerProAppSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst rStudioServerProAppSettingsProperty: sagemaker.CfnDomain.RStudioServerProAppSettingsProperty = {\n  accessStatus: 'accessStatus',\n  userGroup: 'userGroup',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "97adc673455a3d0349ffe494c7160caaf461bcf6aec85381e2febdc31e0a34d1"
    },
    "6d33e351c37ca1632e3e5e4e9bcd2d3b393a2d5ba6a2cc11184006c57d70e2d8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nr_studio_server_pro_domain_settings_property = sagemaker.CfnDomain.RStudioServerProDomainSettingsProperty(\n    domain_execution_role_arn=\"domainExecutionRoleArn\",\n\n    # the properties below are optional\n    default_resource_spec=sagemaker.CfnDomain.ResourceSpecProperty(\n        instance_type=\"instanceType\",\n        sage_maker_image_arn=\"sageMakerImageArn\",\n        sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n    ),\n    r_studio_connect_url=\"rStudioConnectUrl\",\n    r_studio_package_manager_url=\"rStudioPackageManagerUrl\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nRStudioServerProDomainSettingsProperty rStudioServerProDomainSettingsProperty = new RStudioServerProDomainSettingsProperty {\n    DomainExecutionRoleArn = \"domainExecutionRoleArn\",\n\n    // the properties below are optional\n    DefaultResourceSpec = new ResourceSpecProperty {\n        InstanceType = \"instanceType\",\n        SageMakerImageArn = \"sageMakerImageArn\",\n        SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n    },\n    RStudioConnectUrl = \"rStudioConnectUrl\",\n    RStudioPackageManagerUrl = \"rStudioPackageManagerUrl\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nRStudioServerProDomainSettingsProperty rStudioServerProDomainSettingsProperty = RStudioServerProDomainSettingsProperty.builder()\n        .domainExecutionRoleArn(\"domainExecutionRoleArn\")\n\n        // the properties below are optional\n        .defaultResourceSpec(ResourceSpecProperty.builder()\n                .instanceType(\"instanceType\")\n                .sageMakerImageArn(\"sageMakerImageArn\")\n                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                .build())\n        .rStudioConnectUrl(\"rStudioConnectUrl\")\n        .rStudioPackageManagerUrl(\"rStudioPackageManagerUrl\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nrStudioServerProDomainSettingsProperty := &rStudioServerProDomainSettingsProperty{\n\tdomainExecutionRoleArn: jsii.String(\"domainExecutionRoleArn\"),\n\n\t// the properties below are optional\n\tdefaultResourceSpec: &resourceSpecProperty{\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t},\n\trStudioConnectUrl: jsii.String(\"rStudioConnectUrl\"),\n\trStudioPackageManagerUrl: jsii.String(\"rStudioPackageManagerUrl\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst rStudioServerProDomainSettingsProperty: sagemaker.CfnDomain.RStudioServerProDomainSettingsProperty = {\n  domainExecutionRoleArn: 'domainExecutionRoleArn',\n\n  // the properties below are optional\n  defaultResourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n  rStudioConnectUrl: 'rStudioConnectUrl',\n  rStudioPackageManagerUrl: 'rStudioPackageManagerUrl',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDomain.RStudioServerProDomainSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDomain.RStudioServerProDomainSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst rStudioServerProDomainSettingsProperty: sagemaker.CfnDomain.RStudioServerProDomainSettingsProperty = {\n  domainExecutionRoleArn: 'domainExecutionRoleArn',\n\n  // the properties below are optional\n  defaultResourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n  rStudioConnectUrl: 'rStudioConnectUrl',\n  rStudioPackageManagerUrl: 'rStudioPackageManagerUrl',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 12,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "1b1ff4000c9a5f2fdff8978386fd496dbd94b8bc8645943307cbdfd7614b9732"
    },
    "ea8b77dd10338733cda92165e18fe94e1d26b0a3c5d331f05dd27cb957a93578": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nresource_spec_property = sagemaker.CfnDomain.ResourceSpecProperty(\n    instance_type=\"instanceType\",\n    sage_maker_image_arn=\"sageMakerImageArn\",\n    sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nResourceSpecProperty resourceSpecProperty = new ResourceSpecProperty {\n    InstanceType = \"instanceType\",\n    SageMakerImageArn = \"sageMakerImageArn\",\n    SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nResourceSpecProperty resourceSpecProperty = ResourceSpecProperty.builder()\n        .instanceType(\"instanceType\")\n        .sageMakerImageArn(\"sageMakerImageArn\")\n        .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nresourceSpecProperty := &resourceSpecProperty{\n\tinstanceType: jsii.String(\"instanceType\"),\n\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst resourceSpecProperty: sagemaker.CfnDomain.ResourceSpecProperty = {\n  instanceType: 'instanceType',\n  sageMakerImageArn: 'sageMakerImageArn',\n  sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDomain.ResourceSpecProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDomain.ResourceSpecProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst resourceSpecProperty: sagemaker.CfnDomain.ResourceSpecProperty = {\n  instanceType: 'instanceType',\n  sageMakerImageArn: 'sageMakerImageArn',\n  sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "60a2a75cad1e99ae16208c462a553b202c0ae63e4465904bfde02e028a156e03"
    },
    "b228fb1ddbff76d0b0e80cb956682ed8978d26516e6b694747dbcb2a1731d3bd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nsharing_settings_property = sagemaker.CfnDomain.SharingSettingsProperty(\n    notebook_output_option=\"notebookOutputOption\",\n    s3_kms_key_id=\"s3KmsKeyId\",\n    s3_output_path=\"s3OutputPath\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nSharingSettingsProperty sharingSettingsProperty = new SharingSettingsProperty {\n    NotebookOutputOption = \"notebookOutputOption\",\n    S3KmsKeyId = \"s3KmsKeyId\",\n    S3OutputPath = \"s3OutputPath\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nSharingSettingsProperty sharingSettingsProperty = SharingSettingsProperty.builder()\n        .notebookOutputOption(\"notebookOutputOption\")\n        .s3KmsKeyId(\"s3KmsKeyId\")\n        .s3OutputPath(\"s3OutputPath\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nsharingSettingsProperty := &sharingSettingsProperty{\n\tnotebookOutputOption: jsii.String(\"notebookOutputOption\"),\n\ts3KmsKeyId: jsii.String(\"s3KmsKeyId\"),\n\ts3OutputPath: jsii.String(\"s3OutputPath\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst sharingSettingsProperty: sagemaker.CfnDomain.SharingSettingsProperty = {\n  notebookOutputOption: 'notebookOutputOption',\n  s3KmsKeyId: 's3KmsKeyId',\n  s3OutputPath: 's3OutputPath',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDomain.SharingSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDomain.SharingSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sharingSettingsProperty: sagemaker.CfnDomain.SharingSettingsProperty = {\n  notebookOutputOption: 'notebookOutputOption',\n  s3KmsKeyId: 's3KmsKeyId',\n  s3OutputPath: 's3OutputPath',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "89ab2c0904009d6e05c65070374c331ed5b80f32b2e9a9e49b4744836f11303e"
    },
    "80e35fd31d86917144e01a9450febffe898af512dc4be09fc40316e04a1c7207": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nuser_settings_property = sagemaker.CfnDomain.UserSettingsProperty(\n    execution_role=\"executionRole\",\n    jupyter_server_app_settings=sagemaker.CfnDomain.JupyterServerAppSettingsProperty(\n        default_resource_spec=sagemaker.CfnDomain.ResourceSpecProperty(\n            instance_type=\"instanceType\",\n            sage_maker_image_arn=\"sageMakerImageArn\",\n            sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n        )\n    ),\n    kernel_gateway_app_settings=sagemaker.CfnDomain.KernelGatewayAppSettingsProperty(\n        custom_images=[sagemaker.CfnDomain.CustomImageProperty(\n            app_image_config_name=\"appImageConfigName\",\n            image_name=\"imageName\",\n\n            # the properties below are optional\n            image_version_number=123\n        )],\n        default_resource_spec=sagemaker.CfnDomain.ResourceSpecProperty(\n            instance_type=\"instanceType\",\n            sage_maker_image_arn=\"sageMakerImageArn\",\n            sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n        )\n    ),\n    r_studio_server_pro_app_settings=sagemaker.CfnDomain.RStudioServerProAppSettingsProperty(\n        access_status=\"accessStatus\",\n        user_group=\"userGroup\"\n    ),\n    security_groups=[\"securityGroups\"],\n    sharing_settings=sagemaker.CfnDomain.SharingSettingsProperty(\n        notebook_output_option=\"notebookOutputOption\",\n        s3_kms_key_id=\"s3KmsKeyId\",\n        s3_output_path=\"s3OutputPath\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nUserSettingsProperty userSettingsProperty = new UserSettingsProperty {\n    ExecutionRole = \"executionRole\",\n    JupyterServerAppSettings = new JupyterServerAppSettingsProperty {\n        DefaultResourceSpec = new ResourceSpecProperty {\n            InstanceType = \"instanceType\",\n            SageMakerImageArn = \"sageMakerImageArn\",\n            SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n        }\n    },\n    KernelGatewayAppSettings = new KernelGatewayAppSettingsProperty {\n        CustomImages = new [] { new CustomImageProperty {\n            AppImageConfigName = \"appImageConfigName\",\n            ImageName = \"imageName\",\n\n            // the properties below are optional\n            ImageVersionNumber = 123\n        } },\n        DefaultResourceSpec = new ResourceSpecProperty {\n            InstanceType = \"instanceType\",\n            SageMakerImageArn = \"sageMakerImageArn\",\n            SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n        }\n    },\n    RStudioServerProAppSettings = new RStudioServerProAppSettingsProperty {\n        AccessStatus = \"accessStatus\",\n        UserGroup = \"userGroup\"\n    },\n    SecurityGroups = new [] { \"securityGroups\" },\n    SharingSettings = new SharingSettingsProperty {\n        NotebookOutputOption = \"notebookOutputOption\",\n        S3KmsKeyId = \"s3KmsKeyId\",\n        S3OutputPath = \"s3OutputPath\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nUserSettingsProperty userSettingsProperty = UserSettingsProperty.builder()\n        .executionRole(\"executionRole\")\n        .jupyterServerAppSettings(JupyterServerAppSettingsProperty.builder()\n                .defaultResourceSpec(ResourceSpecProperty.builder()\n                        .instanceType(\"instanceType\")\n                        .sageMakerImageArn(\"sageMakerImageArn\")\n                        .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                        .build())\n                .build())\n        .kernelGatewayAppSettings(KernelGatewayAppSettingsProperty.builder()\n                .customImages(List.of(CustomImageProperty.builder()\n                        .appImageConfigName(\"appImageConfigName\")\n                        .imageName(\"imageName\")\n\n                        // the properties below are optional\n                        .imageVersionNumber(123)\n                        .build()))\n                .defaultResourceSpec(ResourceSpecProperty.builder()\n                        .instanceType(\"instanceType\")\n                        .sageMakerImageArn(\"sageMakerImageArn\")\n                        .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                        .build())\n                .build())\n        .rStudioServerProAppSettings(RStudioServerProAppSettingsProperty.builder()\n                .accessStatus(\"accessStatus\")\n                .userGroup(\"userGroup\")\n                .build())\n        .securityGroups(List.of(\"securityGroups\"))\n        .sharingSettings(SharingSettingsProperty.builder()\n                .notebookOutputOption(\"notebookOutputOption\")\n                .s3KmsKeyId(\"s3KmsKeyId\")\n                .s3OutputPath(\"s3OutputPath\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nuserSettingsProperty := &userSettingsProperty{\n\texecutionRole: jsii.String(\"executionRole\"),\n\tjupyterServerAppSettings: &jupyterServerAppSettingsProperty{\n\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t},\n\t},\n\tkernelGatewayAppSettings: &kernelGatewayAppSettingsProperty{\n\t\tcustomImages: []interface{}{\n\t\t\t&customImageProperty{\n\t\t\t\tappImageConfigName: jsii.String(\"appImageConfigName\"),\n\t\t\t\timageName: jsii.String(\"imageName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\timageVersionNumber: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t},\n\t},\n\trStudioServerProAppSettings: &rStudioServerProAppSettingsProperty{\n\t\taccessStatus: jsii.String(\"accessStatus\"),\n\t\tuserGroup: jsii.String(\"userGroup\"),\n\t},\n\tsecurityGroups: []*string{\n\t\tjsii.String(\"securityGroups\"),\n\t},\n\tsharingSettings: &sharingSettingsProperty{\n\t\tnotebookOutputOption: jsii.String(\"notebookOutputOption\"),\n\t\ts3KmsKeyId: jsii.String(\"s3KmsKeyId\"),\n\t\ts3OutputPath: jsii.String(\"s3OutputPath\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst userSettingsProperty: sagemaker.CfnDomain.UserSettingsProperty = {\n  executionRole: 'executionRole',\n  jupyterServerAppSettings: {\n    defaultResourceSpec: {\n      instanceType: 'instanceType',\n      sageMakerImageArn: 'sageMakerImageArn',\n      sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n    },\n  },\n  kernelGatewayAppSettings: {\n    customImages: [{\n      appImageConfigName: 'appImageConfigName',\n      imageName: 'imageName',\n\n      // the properties below are optional\n      imageVersionNumber: 123,\n    }],\n    defaultResourceSpec: {\n      instanceType: 'instanceType',\n      sageMakerImageArn: 'sageMakerImageArn',\n      sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n    },\n  },\n  rStudioServerProAppSettings: {\n    accessStatus: 'accessStatus',\n    userGroup: 'userGroup',\n  },\n  securityGroups: ['securityGroups'],\n  sharingSettings: {\n    notebookOutputOption: 'notebookOutputOption',\n    s3KmsKeyId: 's3KmsKeyId',\n    s3OutputPath: 's3OutputPath',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDomain.UserSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDomain.UserSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userSettingsProperty: sagemaker.CfnDomain.UserSettingsProperty = {\n  executionRole: 'executionRole',\n  jupyterServerAppSettings: {\n    defaultResourceSpec: {\n      instanceType: 'instanceType',\n      sageMakerImageArn: 'sageMakerImageArn',\n      sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n    },\n  },\n  kernelGatewayAppSettings: {\n    customImages: [{\n      appImageConfigName: 'appImageConfigName',\n      imageName: 'imageName',\n\n      // the properties below are optional\n      imageVersionNumber: 123,\n    }],\n    defaultResourceSpec: {\n      instanceType: 'instanceType',\n      sageMakerImageArn: 'sageMakerImageArn',\n      sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n    },\n  },\n  rStudioServerProAppSettings: {\n    accessStatus: 'accessStatus',\n    userGroup: 'userGroup',\n  },\n  securityGroups: ['securityGroups'],\n  sharingSettings: {\n    notebookOutputOption: 'notebookOutputOption',\n    s3KmsKeyId: 's3KmsKeyId',\n    s3OutputPath: 's3OutputPath',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 16,
        "75": 28,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 8,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 23,
        "290": 1
      },
      "fqnsFingerprint": "8c426893ba647fb23f13289748c827b1bdbb754ecfb7843d8c792d13f82bc74c"
    },
    "b4f1ff38455ea1e592cf66ce499f0b7bf7186fee5c9b80db73f986fd2a6560a0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_domain_props = sagemaker.CfnDomainProps(\n    auth_mode=\"authMode\",\n    default_user_settings=sagemaker.CfnDomain.UserSettingsProperty(\n        execution_role=\"executionRole\",\n        jupyter_server_app_settings=sagemaker.CfnDomain.JupyterServerAppSettingsProperty(\n            default_resource_spec=sagemaker.CfnDomain.ResourceSpecProperty(\n                instance_type=\"instanceType\",\n                sage_maker_image_arn=\"sageMakerImageArn\",\n                sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n            )\n        ),\n        kernel_gateway_app_settings=sagemaker.CfnDomain.KernelGatewayAppSettingsProperty(\n            custom_images=[sagemaker.CfnDomain.CustomImageProperty(\n                app_image_config_name=\"appImageConfigName\",\n                image_name=\"imageName\",\n\n                # the properties below are optional\n                image_version_number=123\n            )],\n            default_resource_spec=sagemaker.CfnDomain.ResourceSpecProperty(\n                instance_type=\"instanceType\",\n                sage_maker_image_arn=\"sageMakerImageArn\",\n                sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n            )\n        ),\n        r_studio_server_pro_app_settings=sagemaker.CfnDomain.RStudioServerProAppSettingsProperty(\n            access_status=\"accessStatus\",\n            user_group=\"userGroup\"\n        ),\n        security_groups=[\"securityGroups\"],\n        sharing_settings=sagemaker.CfnDomain.SharingSettingsProperty(\n            notebook_output_option=\"notebookOutputOption\",\n            s3_kms_key_id=\"s3KmsKeyId\",\n            s3_output_path=\"s3OutputPath\"\n        )\n    ),\n    domain_name=\"domainName\",\n    subnet_ids=[\"subnetIds\"],\n    vpc_id=\"vpcId\",\n\n    # the properties below are optional\n    app_network_access_type=\"appNetworkAccessType\",\n    app_security_group_management=\"appSecurityGroupManagement\",\n    domain_settings=sagemaker.CfnDomain.DomainSettingsProperty(\n        r_studio_server_pro_domain_settings=sagemaker.CfnDomain.RStudioServerProDomainSettingsProperty(\n            domain_execution_role_arn=\"domainExecutionRoleArn\",\n\n            # the properties below are optional\n            default_resource_spec=sagemaker.CfnDomain.ResourceSpecProperty(\n                instance_type=\"instanceType\",\n                sage_maker_image_arn=\"sageMakerImageArn\",\n                sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n            ),\n            r_studio_connect_url=\"rStudioConnectUrl\",\n            r_studio_package_manager_url=\"rStudioPackageManagerUrl\"\n        ),\n        security_group_ids=[\"securityGroupIds\"]\n    ),\n    kms_key_id=\"kmsKeyId\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnDomainProps cfnDomainProps = new CfnDomainProps {\n    AuthMode = \"authMode\",\n    DefaultUserSettings = new UserSettingsProperty {\n        ExecutionRole = \"executionRole\",\n        JupyterServerAppSettings = new JupyterServerAppSettingsProperty {\n            DefaultResourceSpec = new ResourceSpecProperty {\n                InstanceType = \"instanceType\",\n                SageMakerImageArn = \"sageMakerImageArn\",\n                SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n            }\n        },\n        KernelGatewayAppSettings = new KernelGatewayAppSettingsProperty {\n            CustomImages = new [] { new CustomImageProperty {\n                AppImageConfigName = \"appImageConfigName\",\n                ImageName = \"imageName\",\n\n                // the properties below are optional\n                ImageVersionNumber = 123\n            } },\n            DefaultResourceSpec = new ResourceSpecProperty {\n                InstanceType = \"instanceType\",\n                SageMakerImageArn = \"sageMakerImageArn\",\n                SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n            }\n        },\n        RStudioServerProAppSettings = new RStudioServerProAppSettingsProperty {\n            AccessStatus = \"accessStatus\",\n            UserGroup = \"userGroup\"\n        },\n        SecurityGroups = new [] { \"securityGroups\" },\n        SharingSettings = new SharingSettingsProperty {\n            NotebookOutputOption = \"notebookOutputOption\",\n            S3KmsKeyId = \"s3KmsKeyId\",\n            S3OutputPath = \"s3OutputPath\"\n        }\n    },\n    DomainName = \"domainName\",\n    SubnetIds = new [] { \"subnetIds\" },\n    VpcId = \"vpcId\",\n\n    // the properties below are optional\n    AppNetworkAccessType = \"appNetworkAccessType\",\n    AppSecurityGroupManagement = \"appSecurityGroupManagement\",\n    DomainSettings = new DomainSettingsProperty {\n        RStudioServerProDomainSettings = new RStudioServerProDomainSettingsProperty {\n            DomainExecutionRoleArn = \"domainExecutionRoleArn\",\n\n            // the properties below are optional\n            DefaultResourceSpec = new ResourceSpecProperty {\n                InstanceType = \"instanceType\",\n                SageMakerImageArn = \"sageMakerImageArn\",\n                SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n            },\n            RStudioConnectUrl = \"rStudioConnectUrl\",\n            RStudioPackageManagerUrl = \"rStudioPackageManagerUrl\"\n        },\n        SecurityGroupIds = new [] { \"securityGroupIds\" }\n    },\n    KmsKeyId = \"kmsKeyId\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnDomainProps cfnDomainProps = CfnDomainProps.builder()\n        .authMode(\"authMode\")\n        .defaultUserSettings(UserSettingsProperty.builder()\n                .executionRole(\"executionRole\")\n                .jupyterServerAppSettings(JupyterServerAppSettingsProperty.builder()\n                        .defaultResourceSpec(ResourceSpecProperty.builder()\n                                .instanceType(\"instanceType\")\n                                .sageMakerImageArn(\"sageMakerImageArn\")\n                                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                                .build())\n                        .build())\n                .kernelGatewayAppSettings(KernelGatewayAppSettingsProperty.builder()\n                        .customImages(List.of(CustomImageProperty.builder()\n                                .appImageConfigName(\"appImageConfigName\")\n                                .imageName(\"imageName\")\n\n                                // the properties below are optional\n                                .imageVersionNumber(123)\n                                .build()))\n                        .defaultResourceSpec(ResourceSpecProperty.builder()\n                                .instanceType(\"instanceType\")\n                                .sageMakerImageArn(\"sageMakerImageArn\")\n                                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                                .build())\n                        .build())\n                .rStudioServerProAppSettings(RStudioServerProAppSettingsProperty.builder()\n                        .accessStatus(\"accessStatus\")\n                        .userGroup(\"userGroup\")\n                        .build())\n                .securityGroups(List.of(\"securityGroups\"))\n                .sharingSettings(SharingSettingsProperty.builder()\n                        .notebookOutputOption(\"notebookOutputOption\")\n                        .s3KmsKeyId(\"s3KmsKeyId\")\n                        .s3OutputPath(\"s3OutputPath\")\n                        .build())\n                .build())\n        .domainName(\"domainName\")\n        .subnetIds(List.of(\"subnetIds\"))\n        .vpcId(\"vpcId\")\n\n        // the properties below are optional\n        .appNetworkAccessType(\"appNetworkAccessType\")\n        .appSecurityGroupManagement(\"appSecurityGroupManagement\")\n        .domainSettings(DomainSettingsProperty.builder()\n                .rStudioServerProDomainSettings(RStudioServerProDomainSettingsProperty.builder()\n                        .domainExecutionRoleArn(\"domainExecutionRoleArn\")\n\n                        // the properties below are optional\n                        .defaultResourceSpec(ResourceSpecProperty.builder()\n                                .instanceType(\"instanceType\")\n                                .sageMakerImageArn(\"sageMakerImageArn\")\n                                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                                .build())\n                        .rStudioConnectUrl(\"rStudioConnectUrl\")\n                        .rStudioPackageManagerUrl(\"rStudioPackageManagerUrl\")\n                        .build())\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .build())\n        .kmsKeyId(\"kmsKeyId\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnDomainProps := &cfnDomainProps{\n\tauthMode: jsii.String(\"authMode\"),\n\tdefaultUserSettings: &userSettingsProperty{\n\t\texecutionRole: jsii.String(\"executionRole\"),\n\t\tjupyterServerAppSettings: &jupyterServerAppSettingsProperty{\n\t\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t\t},\n\t\t},\n\t\tkernelGatewayAppSettings: &kernelGatewayAppSettingsProperty{\n\t\t\tcustomImages: []interface{}{\n\t\t\t\t&customImageProperty{\n\t\t\t\t\tappImageConfigName: jsii.String(\"appImageConfigName\"),\n\t\t\t\t\timageName: jsii.String(\"imageName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\timageVersionNumber: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t\t},\n\t\t},\n\t\trStudioServerProAppSettings: &rStudioServerProAppSettingsProperty{\n\t\t\taccessStatus: jsii.String(\"accessStatus\"),\n\t\t\tuserGroup: jsii.String(\"userGroup\"),\n\t\t},\n\t\tsecurityGroups: []*string{\n\t\t\tjsii.String(\"securityGroups\"),\n\t\t},\n\t\tsharingSettings: &sharingSettingsProperty{\n\t\t\tnotebookOutputOption: jsii.String(\"notebookOutputOption\"),\n\t\t\ts3KmsKeyId: jsii.String(\"s3KmsKeyId\"),\n\t\t\ts3OutputPath: jsii.String(\"s3OutputPath\"),\n\t\t},\n\t},\n\tdomainName: jsii.String(\"domainName\"),\n\tsubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n\tvpcId: jsii.String(\"vpcId\"),\n\n\t// the properties below are optional\n\tappNetworkAccessType: jsii.String(\"appNetworkAccessType\"),\n\tappSecurityGroupManagement: jsii.String(\"appSecurityGroupManagement\"),\n\tdomainSettings: &domainSettingsProperty{\n\t\trStudioServerProDomainSettings: &rStudioServerProDomainSettingsProperty{\n\t\t\tdomainExecutionRoleArn: jsii.String(\"domainExecutionRoleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t\t},\n\t\t\trStudioConnectUrl: jsii.String(\"rStudioConnectUrl\"),\n\t\t\trStudioPackageManagerUrl: jsii.String(\"rStudioPackageManagerUrl\"),\n\t\t},\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t},\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnDomainProps: sagemaker.CfnDomainProps = {\n  authMode: 'authMode',\n  defaultUserSettings: {\n    executionRole: 'executionRole',\n    jupyterServerAppSettings: {\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    kernelGatewayAppSettings: {\n      customImages: [{\n        appImageConfigName: 'appImageConfigName',\n        imageName: 'imageName',\n\n        // the properties below are optional\n        imageVersionNumber: 123,\n      }],\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    rStudioServerProAppSettings: {\n      accessStatus: 'accessStatus',\n      userGroup: 'userGroup',\n    },\n    securityGroups: ['securityGroups'],\n    sharingSettings: {\n      notebookOutputOption: 'notebookOutputOption',\n      s3KmsKeyId: 's3KmsKeyId',\n      s3OutputPath: 's3OutputPath',\n    },\n  },\n  domainName: 'domainName',\n  subnetIds: ['subnetIds'],\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  appNetworkAccessType: 'appNetworkAccessType',\n  appSecurityGroupManagement: 'appSecurityGroupManagement',\n  domainSettings: {\n    rStudioServerProDomainSettings: {\n      domainExecutionRoleArn: 'domainExecutionRoleArn',\n\n      // the properties below are optional\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n      rStudioConnectUrl: 'rStudioConnectUrl',\n      rStudioPackageManagerUrl: 'rStudioPackageManagerUrl',\n    },\n    securityGroupIds: ['securityGroupIds'],\n  },\n  kmsKeyId: 'kmsKeyId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnDomainProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnDomainProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDomainProps: sagemaker.CfnDomainProps = {\n  authMode: 'authMode',\n  defaultUserSettings: {\n    executionRole: 'executionRole',\n    jupyterServerAppSettings: {\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    kernelGatewayAppSettings: {\n      customImages: [{\n        appImageConfigName: 'appImageConfigName',\n        imageName: 'imageName',\n\n        // the properties below are optional\n        imageVersionNumber: 123,\n      }],\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    rStudioServerProAppSettings: {\n      accessStatus: 'accessStatus',\n      userGroup: 'userGroup',\n    },\n    securityGroups: ['securityGroups'],\n    sharingSettings: {\n      notebookOutputOption: 'notebookOutputOption',\n      s3KmsKeyId: 's3KmsKeyId',\n      s3OutputPath: 's3OutputPath',\n    },\n  },\n  domainName: 'domainName',\n  subnetIds: ['subnetIds'],\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  appNetworkAccessType: 'appNetworkAccessType',\n  appSecurityGroupManagement: 'appSecurityGroupManagement',\n  domainSettings: {\n    rStudioServerProDomainSettings: {\n      domainExecutionRoleArn: 'domainExecutionRoleArn',\n\n      // the properties below are optional\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n      rStudioConnectUrl: 'rStudioConnectUrl',\n      rStudioPackageManagerUrl: 'rStudioPackageManagerUrl',\n    },\n    securityGroupIds: ['securityGroupIds'],\n  },\n  kmsKeyId: 'kmsKeyId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 32,
        "75": 48,
        "153": 1,
        "169": 1,
        "192": 5,
        "193": 13,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 44,
        "290": 1
      },
      "fqnsFingerprint": "09f7549a6734644dc7ac7fefdf8ea6ddec24c15f430c149b88416ca11d08c1b2"
    },
    "1d409f1c24cddc9ba06062a16df7402bd39bcb3ffe6131481315a9496687cebb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_endpoint = sagemaker.CfnEndpoint(self, \"MyCfnEndpoint\",\n    endpoint_config_name=\"endpointConfigName\",\n\n    # the properties below are optional\n    deployment_config=sagemaker.CfnEndpoint.DeploymentConfigProperty(\n        blue_green_update_policy=sagemaker.CfnEndpoint.BlueGreenUpdatePolicyProperty(\n            traffic_routing_configuration=sagemaker.CfnEndpoint.TrafficRoutingConfigProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                canary_size=sagemaker.CfnEndpoint.CapacitySizeProperty(\n                    type=\"type\",\n                    value=123\n                ),\n                linear_step_size=sagemaker.CfnEndpoint.CapacitySizeProperty(\n                    type=\"type\",\n                    value=123\n                ),\n                wait_interval_in_seconds=123\n            ),\n\n            # the properties below are optional\n            maximum_execution_timeout_in_seconds=123,\n            termination_wait_in_seconds=123\n        ),\n\n        # the properties below are optional\n        auto_rollback_configuration=sagemaker.CfnEndpoint.AutoRollbackConfigProperty(\n            alarms=[sagemaker.CfnEndpoint.AlarmProperty(\n                alarm_name=\"alarmName\"\n            )]\n        )\n    ),\n    endpoint_name=\"endpointName\",\n    exclude_retained_variant_properties=[sagemaker.CfnEndpoint.VariantPropertyProperty(\n        variant_property_type=\"variantPropertyType\"\n    )],\n    retain_all_variant_properties=False,\n    retain_deployment_config=False,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnEndpoint cfnEndpoint = new CfnEndpoint(this, \"MyCfnEndpoint\", new CfnEndpointProps {\n    EndpointConfigName = \"endpointConfigName\",\n\n    // the properties below are optional\n    DeploymentConfig = new DeploymentConfigProperty {\n        BlueGreenUpdatePolicy = new BlueGreenUpdatePolicyProperty {\n            TrafficRoutingConfiguration = new TrafficRoutingConfigProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                CanarySize = new CapacitySizeProperty {\n                    Type = \"type\",\n                    Value = 123\n                },\n                LinearStepSize = new CapacitySizeProperty {\n                    Type = \"type\",\n                    Value = 123\n                },\n                WaitIntervalInSeconds = 123\n            },\n\n            // the properties below are optional\n            MaximumExecutionTimeoutInSeconds = 123,\n            TerminationWaitInSeconds = 123\n        },\n\n        // the properties below are optional\n        AutoRollbackConfiguration = new AutoRollbackConfigProperty {\n            Alarms = new [] { new AlarmProperty {\n                AlarmName = \"alarmName\"\n            } }\n        }\n    },\n    EndpointName = \"endpointName\",\n    ExcludeRetainedVariantProperties = new [] { new VariantPropertyProperty {\n        VariantPropertyType = \"variantPropertyType\"\n    } },\n    RetainAllVariantProperties = false,\n    RetainDeploymentConfig = false,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnEndpoint cfnEndpoint = CfnEndpoint.Builder.create(this, \"MyCfnEndpoint\")\n        .endpointConfigName(\"endpointConfigName\")\n\n        // the properties below are optional\n        .deploymentConfig(DeploymentConfigProperty.builder()\n                .blueGreenUpdatePolicy(BlueGreenUpdatePolicyProperty.builder()\n                        .trafficRoutingConfiguration(TrafficRoutingConfigProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .canarySize(CapacitySizeProperty.builder()\n                                        .type(\"type\")\n                                        .value(123)\n                                        .build())\n                                .linearStepSize(CapacitySizeProperty.builder()\n                                        .type(\"type\")\n                                        .value(123)\n                                        .build())\n                                .waitIntervalInSeconds(123)\n                                .build())\n\n                        // the properties below are optional\n                        .maximumExecutionTimeoutInSeconds(123)\n                        .terminationWaitInSeconds(123)\n                        .build())\n\n                // the properties below are optional\n                .autoRollbackConfiguration(AutoRollbackConfigProperty.builder()\n                        .alarms(List.of(AlarmProperty.builder()\n                                .alarmName(\"alarmName\")\n                                .build()))\n                        .build())\n                .build())\n        .endpointName(\"endpointName\")\n        .excludeRetainedVariantProperties(List.of(VariantPropertyProperty.builder()\n                .variantPropertyType(\"variantPropertyType\")\n                .build()))\n        .retainAllVariantProperties(false)\n        .retainDeploymentConfig(false)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnEndpoint := sagemaker.NewCfnEndpoint(this, jsii.String(\"MyCfnEndpoint\"), &cfnEndpointProps{\n\tendpointConfigName: jsii.String(\"endpointConfigName\"),\n\n\t// the properties below are optional\n\tdeploymentConfig: &deploymentConfigProperty{\n\t\tblueGreenUpdatePolicy: &blueGreenUpdatePolicyProperty{\n\t\t\ttrafficRoutingConfiguration: &trafficRoutingConfigProperty{\n\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcanarySize: &capacitySizeProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\tvalue: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tlinearStepSize: &capacitySizeProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\tvalue: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\twaitIntervalInSeconds: jsii.Number(123),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tmaximumExecutionTimeoutInSeconds: jsii.Number(123),\n\t\t\tterminationWaitInSeconds: jsii.Number(123),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tautoRollbackConfiguration: &autoRollbackConfigProperty{\n\t\t\talarms: []interface{}{\n\t\t\t\t&alarmProperty{\n\t\t\t\t\talarmName: jsii.String(\"alarmName\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tendpointName: jsii.String(\"endpointName\"),\n\texcludeRetainedVariantProperties: []interface{}{\n\t\t&variantPropertyProperty{\n\t\t\tvariantPropertyType: jsii.String(\"variantPropertyType\"),\n\t\t},\n\t},\n\tretainAllVariantProperties: jsii.Boolean(false),\n\tretainDeploymentConfig: jsii.Boolean(false),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnEndpoint = new sagemaker.CfnEndpoint(this, 'MyCfnEndpoint', {\n  endpointConfigName: 'endpointConfigName',\n\n  // the properties below are optional\n  deploymentConfig: {\n    blueGreenUpdatePolicy: {\n      trafficRoutingConfiguration: {\n        type: 'type',\n\n        // the properties below are optional\n        canarySize: {\n          type: 'type',\n          value: 123,\n        },\n        linearStepSize: {\n          type: 'type',\n          value: 123,\n        },\n        waitIntervalInSeconds: 123,\n      },\n\n      // the properties below are optional\n      maximumExecutionTimeoutInSeconds: 123,\n      terminationWaitInSeconds: 123,\n    },\n\n    // the properties below are optional\n    autoRollbackConfiguration: {\n      alarms: [{\n        alarmName: 'alarmName',\n      }],\n    },\n  },\n  endpointName: 'endpointName',\n  excludeRetainedVariantProperties: [{\n    variantPropertyType: 'variantPropertyType',\n  }],\n  retainAllVariantProperties: false,\n  retainDeploymentConfig: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpoint"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpoint",
        "@aws-cdk/aws-sagemaker.CfnEndpointProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnEndpoint = new sagemaker.CfnEndpoint(this, 'MyCfnEndpoint', {\n  endpointConfigName: 'endpointConfigName',\n\n  // the properties below are optional\n  deploymentConfig: {\n    blueGreenUpdatePolicy: {\n      trafficRoutingConfiguration: {\n        type: 'type',\n\n        // the properties below are optional\n        canarySize: {\n          type: 'type',\n          value: 123,\n        },\n        linearStepSize: {\n          type: 'type',\n          value: 123,\n        },\n        waitIntervalInSeconds: 123,\n      },\n\n      // the properties below are optional\n      maximumExecutionTimeoutInSeconds: 123,\n      terminationWaitInSeconds: 123,\n    },\n\n    // the properties below are optional\n    autoRollbackConfiguration: {\n      alarms: [{\n        alarmName: 'alarmName',\n      }],\n    },\n  },\n  endpointName: 'endpointName',\n  excludeRetainedVariantProperties: [{\n    variantPropertyType: 'variantPropertyType',\n  }],\n  retainAllVariantProperties: false,\n  retainDeploymentConfig: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 11,
        "75": 29,
        "91": 2,
        "104": 1,
        "192": 3,
        "193": 10,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 25,
        "290": 1
      },
      "fqnsFingerprint": "ad23e0a175e6bec27cfe1b6615d0351d48cc5f2bfca6a31f07197c2d0f465360"
    },
    "ada663c6d82ef7f62ec1858004428719534bea3573b59242ff1f6f5eb26793c0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nalarm_property = sagemaker.CfnEndpoint.AlarmProperty(\n    alarm_name=\"alarmName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nAlarmProperty alarmProperty = new AlarmProperty {\n    AlarmName = \"alarmName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nAlarmProperty alarmProperty = AlarmProperty.builder()\n        .alarmName(\"alarmName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nalarmProperty := &alarmProperty{\n\talarmName: jsii.String(\"alarmName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst alarmProperty: sagemaker.CfnEndpoint.AlarmProperty = {\n  alarmName: 'alarmName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpoint.AlarmProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpoint.AlarmProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst alarmProperty: sagemaker.CfnEndpoint.AlarmProperty = {\n  alarmName: 'alarmName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "7c77da2f8af34e9d6c3e2a82f2b0ab4d18cea818d664427757a68893d832776b"
    },
    "5d756686038605aef57c06a4ae216dea98a14869e956d5e9dc6676071b61e266": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nauto_rollback_config_property = sagemaker.CfnEndpoint.AutoRollbackConfigProperty(\n    alarms=[sagemaker.CfnEndpoint.AlarmProperty(\n        alarm_name=\"alarmName\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nAutoRollbackConfigProperty autoRollbackConfigProperty = new AutoRollbackConfigProperty {\n    Alarms = new [] { new AlarmProperty {\n        AlarmName = \"alarmName\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nAutoRollbackConfigProperty autoRollbackConfigProperty = AutoRollbackConfigProperty.builder()\n        .alarms(List.of(AlarmProperty.builder()\n                .alarmName(\"alarmName\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nautoRollbackConfigProperty := &autoRollbackConfigProperty{\n\talarms: []interface{}{\n\t\t&alarmProperty{\n\t\t\talarmName: jsii.String(\"alarmName\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst autoRollbackConfigProperty: sagemaker.CfnEndpoint.AutoRollbackConfigProperty = {\n  alarms: [{\n    alarmName: 'alarmName',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpoint.AutoRollbackConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpoint.AutoRollbackConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst autoRollbackConfigProperty: sagemaker.CfnEndpoint.AutoRollbackConfigProperty = {\n  alarms: [{\n    alarmName: 'alarmName',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d68352a2382b8b1bb7d4c5bc47c69fc5eb32150e7026b75c4eac6152d66a01f2"
    },
    "bc7d6eec60e2f825195cc6955aef01d17f45e8e4ea9bf1b3a744465f633d2e82": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nblue_green_update_policy_property = sagemaker.CfnEndpoint.BlueGreenUpdatePolicyProperty(\n    traffic_routing_configuration=sagemaker.CfnEndpoint.TrafficRoutingConfigProperty(\n        type=\"type\",\n\n        # the properties below are optional\n        canary_size=sagemaker.CfnEndpoint.CapacitySizeProperty(\n            type=\"type\",\n            value=123\n        ),\n        linear_step_size=sagemaker.CfnEndpoint.CapacitySizeProperty(\n            type=\"type\",\n            value=123\n        ),\n        wait_interval_in_seconds=123\n    ),\n\n    # the properties below are optional\n    maximum_execution_timeout_in_seconds=123,\n    termination_wait_in_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nBlueGreenUpdatePolicyProperty blueGreenUpdatePolicyProperty = new BlueGreenUpdatePolicyProperty {\n    TrafficRoutingConfiguration = new TrafficRoutingConfigProperty {\n        Type = \"type\",\n\n        // the properties below are optional\n        CanarySize = new CapacitySizeProperty {\n            Type = \"type\",\n            Value = 123\n        },\n        LinearStepSize = new CapacitySizeProperty {\n            Type = \"type\",\n            Value = 123\n        },\n        WaitIntervalInSeconds = 123\n    },\n\n    // the properties below are optional\n    MaximumExecutionTimeoutInSeconds = 123,\n    TerminationWaitInSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nBlueGreenUpdatePolicyProperty blueGreenUpdatePolicyProperty = BlueGreenUpdatePolicyProperty.builder()\n        .trafficRoutingConfiguration(TrafficRoutingConfigProperty.builder()\n                .type(\"type\")\n\n                // the properties below are optional\n                .canarySize(CapacitySizeProperty.builder()\n                        .type(\"type\")\n                        .value(123)\n                        .build())\n                .linearStepSize(CapacitySizeProperty.builder()\n                        .type(\"type\")\n                        .value(123)\n                        .build())\n                .waitIntervalInSeconds(123)\n                .build())\n\n        // the properties below are optional\n        .maximumExecutionTimeoutInSeconds(123)\n        .terminationWaitInSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nblueGreenUpdatePolicyProperty := &blueGreenUpdatePolicyProperty{\n\ttrafficRoutingConfiguration: &trafficRoutingConfigProperty{\n\t\ttype: jsii.String(\"type\"),\n\n\t\t// the properties below are optional\n\t\tcanarySize: &capacitySizeProperty{\n\t\t\ttype: jsii.String(\"type\"),\n\t\t\tvalue: jsii.Number(123),\n\t\t},\n\t\tlinearStepSize: &capacitySizeProperty{\n\t\t\ttype: jsii.String(\"type\"),\n\t\t\tvalue: jsii.Number(123),\n\t\t},\n\t\twaitIntervalInSeconds: jsii.Number(123),\n\t},\n\n\t// the properties below are optional\n\tmaximumExecutionTimeoutInSeconds: jsii.Number(123),\n\tterminationWaitInSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst blueGreenUpdatePolicyProperty: sagemaker.CfnEndpoint.BlueGreenUpdatePolicyProperty = {\n  trafficRoutingConfiguration: {\n    type: 'type',\n\n    // the properties below are optional\n    canarySize: {\n      type: 'type',\n      value: 123,\n    },\n    linearStepSize: {\n      type: 'type',\n      value: 123,\n    },\n    waitIntervalInSeconds: 123,\n  },\n\n  // the properties below are optional\n  maximumExecutionTimeoutInSeconds: 123,\n  terminationWaitInSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpoint.BlueGreenUpdatePolicyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpoint.BlueGreenUpdatePolicyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst blueGreenUpdatePolicyProperty: sagemaker.CfnEndpoint.BlueGreenUpdatePolicyProperty = {\n  trafficRoutingConfiguration: {\n    type: 'type',\n\n    // the properties below are optional\n    canarySize: {\n      type: 'type',\n      value: 123,\n    },\n    linearStepSize: {\n      type: 'type',\n      value: 123,\n    },\n    waitIntervalInSeconds: 123,\n  },\n\n  // the properties below are optional\n  maximumExecutionTimeoutInSeconds: 123,\n  terminationWaitInSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 4,
        "75": 16,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "dbfd706ac434ec42e9692c2ba84b76d656e71d6e8e8f2b4018a1fc5bbc140f08"
    },
    "2037c7854f03566da64313765d2d0c8987e8e241ef2ab65380d08be1fba90b04": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncapacity_size_property = sagemaker.CfnEndpoint.CapacitySizeProperty(\n    type=\"type\",\n    value=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCapacitySizeProperty capacitySizeProperty = new CapacitySizeProperty {\n    Type = \"type\",\n    Value = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCapacitySizeProperty capacitySizeProperty = CapacitySizeProperty.builder()\n        .type(\"type\")\n        .value(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncapacitySizeProperty := &capacitySizeProperty{\n\ttype: jsii.String(\"type\"),\n\tvalue: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst capacitySizeProperty: sagemaker.CfnEndpoint.CapacitySizeProperty = {\n  type: 'type',\n  value: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpoint.CapacitySizeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpoint.CapacitySizeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst capacitySizeProperty: sagemaker.CfnEndpoint.CapacitySizeProperty = {\n  type: 'type',\n  value: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d61e2ca0bc2fa2ebd97baa318384c7cf58ac14650c0cdf592ea64bbcbd702b93"
    },
    "e9ca560450cda1f343809972d6e0a7d642ae5dbc1533bc451eb6be06a73d1d4e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ndeployment_config_property = sagemaker.CfnEndpoint.DeploymentConfigProperty(\n    blue_green_update_policy=sagemaker.CfnEndpoint.BlueGreenUpdatePolicyProperty(\n        traffic_routing_configuration=sagemaker.CfnEndpoint.TrafficRoutingConfigProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            canary_size=sagemaker.CfnEndpoint.CapacitySizeProperty(\n                type=\"type\",\n                value=123\n            ),\n            linear_step_size=sagemaker.CfnEndpoint.CapacitySizeProperty(\n                type=\"type\",\n                value=123\n            ),\n            wait_interval_in_seconds=123\n        ),\n\n        # the properties below are optional\n        maximum_execution_timeout_in_seconds=123,\n        termination_wait_in_seconds=123\n    ),\n\n    # the properties below are optional\n    auto_rollback_configuration=sagemaker.CfnEndpoint.AutoRollbackConfigProperty(\n        alarms=[sagemaker.CfnEndpoint.AlarmProperty(\n            alarm_name=\"alarmName\"\n        )]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nDeploymentConfigProperty deploymentConfigProperty = new DeploymentConfigProperty {\n    BlueGreenUpdatePolicy = new BlueGreenUpdatePolicyProperty {\n        TrafficRoutingConfiguration = new TrafficRoutingConfigProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            CanarySize = new CapacitySizeProperty {\n                Type = \"type\",\n                Value = 123\n            },\n            LinearStepSize = new CapacitySizeProperty {\n                Type = \"type\",\n                Value = 123\n            },\n            WaitIntervalInSeconds = 123\n        },\n\n        // the properties below are optional\n        MaximumExecutionTimeoutInSeconds = 123,\n        TerminationWaitInSeconds = 123\n    },\n\n    // the properties below are optional\n    AutoRollbackConfiguration = new AutoRollbackConfigProperty {\n        Alarms = new [] { new AlarmProperty {\n            AlarmName = \"alarmName\"\n        } }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nDeploymentConfigProperty deploymentConfigProperty = DeploymentConfigProperty.builder()\n        .blueGreenUpdatePolicy(BlueGreenUpdatePolicyProperty.builder()\n                .trafficRoutingConfiguration(TrafficRoutingConfigProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .canarySize(CapacitySizeProperty.builder()\n                                .type(\"type\")\n                                .value(123)\n                                .build())\n                        .linearStepSize(CapacitySizeProperty.builder()\n                                .type(\"type\")\n                                .value(123)\n                                .build())\n                        .waitIntervalInSeconds(123)\n                        .build())\n\n                // the properties below are optional\n                .maximumExecutionTimeoutInSeconds(123)\n                .terminationWaitInSeconds(123)\n                .build())\n\n        // the properties below are optional\n        .autoRollbackConfiguration(AutoRollbackConfigProperty.builder()\n                .alarms(List.of(AlarmProperty.builder()\n                        .alarmName(\"alarmName\")\n                        .build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ndeploymentConfigProperty := &deploymentConfigProperty{\n\tblueGreenUpdatePolicy: &blueGreenUpdatePolicyProperty{\n\t\ttrafficRoutingConfiguration: &trafficRoutingConfigProperty{\n\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcanarySize: &capacitySizeProperty{\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\tvalue: jsii.Number(123),\n\t\t\t},\n\t\t\tlinearStepSize: &capacitySizeProperty{\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\tvalue: jsii.Number(123),\n\t\t\t},\n\t\t\twaitIntervalInSeconds: jsii.Number(123),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tmaximumExecutionTimeoutInSeconds: jsii.Number(123),\n\t\tterminationWaitInSeconds: jsii.Number(123),\n\t},\n\n\t// the properties below are optional\n\tautoRollbackConfiguration: &autoRollbackConfigProperty{\n\t\talarms: []interface{}{\n\t\t\t&alarmProperty{\n\t\t\t\talarmName: jsii.String(\"alarmName\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst deploymentConfigProperty: sagemaker.CfnEndpoint.DeploymentConfigProperty = {\n  blueGreenUpdatePolicy: {\n    trafficRoutingConfiguration: {\n      type: 'type',\n\n      // the properties below are optional\n      canarySize: {\n        type: 'type',\n        value: 123,\n      },\n      linearStepSize: {\n        type: 'type',\n        value: 123,\n      },\n      waitIntervalInSeconds: 123,\n    },\n\n    // the properties below are optional\n    maximumExecutionTimeoutInSeconds: 123,\n    terminationWaitInSeconds: 123,\n  },\n\n  // the properties below are optional\n  autoRollbackConfiguration: {\n    alarms: [{\n      alarmName: 'alarmName',\n    }],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpoint.DeploymentConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpoint.DeploymentConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst deploymentConfigProperty: sagemaker.CfnEndpoint.DeploymentConfigProperty = {\n  blueGreenUpdatePolicy: {\n    trafficRoutingConfiguration: {\n      type: 'type',\n\n      // the properties below are optional\n      canarySize: {\n        type: 'type',\n        value: 123,\n      },\n      linearStepSize: {\n        type: 'type',\n        value: 123,\n      },\n      waitIntervalInSeconds: 123,\n    },\n\n    // the properties below are optional\n    maximumExecutionTimeoutInSeconds: 123,\n    terminationWaitInSeconds: 123,\n  },\n\n  // the properties below are optional\n  autoRollbackConfiguration: {\n    alarms: [{\n      alarmName: 'alarmName',\n    }],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 5,
        "75": 20,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 7,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "faeb30ecd2ddde7a880d046f22d1bf0609ff747f67d77b520a65d3211167592b"
    },
    "3622ac3103dc33c5a3a788dc41ae75bdb7f4fa211b7eddc619f2447934013a34": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ntraffic_routing_config_property = sagemaker.CfnEndpoint.TrafficRoutingConfigProperty(\n    type=\"type\",\n\n    # the properties below are optional\n    canary_size=sagemaker.CfnEndpoint.CapacitySizeProperty(\n        type=\"type\",\n        value=123\n    ),\n    linear_step_size=sagemaker.CfnEndpoint.CapacitySizeProperty(\n        type=\"type\",\n        value=123\n    ),\n    wait_interval_in_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nTrafficRoutingConfigProperty trafficRoutingConfigProperty = new TrafficRoutingConfigProperty {\n    Type = \"type\",\n\n    // the properties below are optional\n    CanarySize = new CapacitySizeProperty {\n        Type = \"type\",\n        Value = 123\n    },\n    LinearStepSize = new CapacitySizeProperty {\n        Type = \"type\",\n        Value = 123\n    },\n    WaitIntervalInSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nTrafficRoutingConfigProperty trafficRoutingConfigProperty = TrafficRoutingConfigProperty.builder()\n        .type(\"type\")\n\n        // the properties below are optional\n        .canarySize(CapacitySizeProperty.builder()\n                .type(\"type\")\n                .value(123)\n                .build())\n        .linearStepSize(CapacitySizeProperty.builder()\n                .type(\"type\")\n                .value(123)\n                .build())\n        .waitIntervalInSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ntrafficRoutingConfigProperty := &trafficRoutingConfigProperty{\n\ttype: jsii.String(\"type\"),\n\n\t// the properties below are optional\n\tcanarySize: &capacitySizeProperty{\n\t\ttype: jsii.String(\"type\"),\n\t\tvalue: jsii.Number(123),\n\t},\n\tlinearStepSize: &capacitySizeProperty{\n\t\ttype: jsii.String(\"type\"),\n\t\tvalue: jsii.Number(123),\n\t},\n\twaitIntervalInSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst trafficRoutingConfigProperty: sagemaker.CfnEndpoint.TrafficRoutingConfigProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  canarySize: {\n    type: 'type',\n    value: 123,\n  },\n  linearStepSize: {\n    type: 'type',\n    value: 123,\n  },\n  waitIntervalInSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpoint.TrafficRoutingConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpoint.TrafficRoutingConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst trafficRoutingConfigProperty: sagemaker.CfnEndpoint.TrafficRoutingConfigProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  canarySize: {\n    type: 'type',\n    value: 123,\n  },\n  linearStepSize: {\n    type: 'type',\n    value: 123,\n  },\n  waitIntervalInSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 4,
        "75": 13,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "4eaac8684c57023d1a8b8e5c670e04b6e81c35eb8db772493254c337ec60c9a5"
    },
    "bc85356d442f46f1f1f5b4fe8cfdc079070f3283dd32686d4127d031f7913d4a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nvariant_property_property = sagemaker.CfnEndpoint.VariantPropertyProperty(\n    variant_property_type=\"variantPropertyType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nVariantPropertyProperty variantPropertyProperty = new VariantPropertyProperty {\n    VariantPropertyType = \"variantPropertyType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nVariantPropertyProperty variantPropertyProperty = VariantPropertyProperty.builder()\n        .variantPropertyType(\"variantPropertyType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvariantPropertyProperty := &variantPropertyProperty{\n\tvariantPropertyType: jsii.String(\"variantPropertyType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst variantPropertyProperty: sagemaker.CfnEndpoint.VariantPropertyProperty = {\n  variantPropertyType: 'variantPropertyType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpoint.VariantPropertyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpoint.VariantPropertyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst variantPropertyProperty: sagemaker.CfnEndpoint.VariantPropertyProperty = {\n  variantPropertyType: 'variantPropertyType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "8617b7a0bf5d7c2abac322034af378d29be9cd910154f7a9e7ab872d7a1fd35d"
    },
    "742889cbe95779b5b45f059c6882ccb94b24ef814c587f8d191be8e96312332f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_endpoint_config = sagemaker.CfnEndpointConfig(self, \"MyCfnEndpointConfig\",\n    production_variants=[sagemaker.CfnEndpointConfig.ProductionVariantProperty(\n        initial_variant_weight=123,\n        model_name=\"modelName\",\n        variant_name=\"variantName\",\n\n        # the properties below are optional\n        accelerator_type=\"acceleratorType\",\n        initial_instance_count=123,\n        instance_type=\"instanceType\",\n        serverless_config=sagemaker.CfnEndpointConfig.ServerlessConfigProperty(\n            max_concurrency=123,\n            memory_size_in_mb=123\n        )\n    )],\n\n    # the properties below are optional\n    async_inference_config=sagemaker.CfnEndpointConfig.AsyncInferenceConfigProperty(\n        output_config=sagemaker.CfnEndpointConfig.AsyncInferenceOutputConfigProperty(\n            s3_output_path=\"s3OutputPath\",\n\n            # the properties below are optional\n            kms_key_id=\"kmsKeyId\",\n            notification_config=sagemaker.CfnEndpointConfig.AsyncInferenceNotificationConfigProperty(\n                error_topic=\"errorTopic\",\n                success_topic=\"successTopic\"\n            )\n        ),\n\n        # the properties below are optional\n        client_config=sagemaker.CfnEndpointConfig.AsyncInferenceClientConfigProperty(\n            max_concurrent_invocations_per_instance=123\n        )\n    ),\n    data_capture_config=sagemaker.CfnEndpointConfig.DataCaptureConfigProperty(\n        capture_options=[sagemaker.CfnEndpointConfig.CaptureOptionProperty(\n            capture_mode=\"captureMode\"\n        )],\n        destination_s3_uri=\"destinationS3Uri\",\n        initial_sampling_percentage=123,\n\n        # the properties below are optional\n        capture_content_type_header=sagemaker.CfnEndpointConfig.CaptureContentTypeHeaderProperty(\n            csv_content_types=[\"csvContentTypes\"],\n            json_content_types=[\"jsonContentTypes\"]\n        ),\n        enable_capture=False,\n        kms_key_id=\"kmsKeyId\"\n    ),\n    endpoint_config_name=\"endpointConfigName\",\n    kms_key_id=\"kmsKeyId\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnEndpointConfig cfnEndpointConfig = new CfnEndpointConfig(this, \"MyCfnEndpointConfig\", new CfnEndpointConfigProps {\n    ProductionVariants = new [] { new ProductionVariantProperty {\n        InitialVariantWeight = 123,\n        ModelName = \"modelName\",\n        VariantName = \"variantName\",\n\n        // the properties below are optional\n        AcceleratorType = \"acceleratorType\",\n        InitialInstanceCount = 123,\n        InstanceType = \"instanceType\",\n        ServerlessConfig = new ServerlessConfigProperty {\n            MaxConcurrency = 123,\n            MemorySizeInMb = 123\n        }\n    } },\n\n    // the properties below are optional\n    AsyncInferenceConfig = new AsyncInferenceConfigProperty {\n        OutputConfig = new AsyncInferenceOutputConfigProperty {\n            S3OutputPath = \"s3OutputPath\",\n\n            // the properties below are optional\n            KmsKeyId = \"kmsKeyId\",\n            NotificationConfig = new AsyncInferenceNotificationConfigProperty {\n                ErrorTopic = \"errorTopic\",\n                SuccessTopic = \"successTopic\"\n            }\n        },\n\n        // the properties below are optional\n        ClientConfig = new AsyncInferenceClientConfigProperty {\n            MaxConcurrentInvocationsPerInstance = 123\n        }\n    },\n    DataCaptureConfig = new DataCaptureConfigProperty {\n        CaptureOptions = new [] { new CaptureOptionProperty {\n            CaptureMode = \"captureMode\"\n        } },\n        DestinationS3Uri = \"destinationS3Uri\",\n        InitialSamplingPercentage = 123,\n\n        // the properties below are optional\n        CaptureContentTypeHeader = new CaptureContentTypeHeaderProperty {\n            CsvContentTypes = new [] { \"csvContentTypes\" },\n            JsonContentTypes = new [] { \"jsonContentTypes\" }\n        },\n        EnableCapture = false,\n        KmsKeyId = \"kmsKeyId\"\n    },\n    EndpointConfigName = \"endpointConfigName\",\n    KmsKeyId = \"kmsKeyId\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnEndpointConfig cfnEndpointConfig = CfnEndpointConfig.Builder.create(this, \"MyCfnEndpointConfig\")\n        .productionVariants(List.of(ProductionVariantProperty.builder()\n                .initialVariantWeight(123)\n                .modelName(\"modelName\")\n                .variantName(\"variantName\")\n\n                // the properties below are optional\n                .acceleratorType(\"acceleratorType\")\n                .initialInstanceCount(123)\n                .instanceType(\"instanceType\")\n                .serverlessConfig(ServerlessConfigProperty.builder()\n                        .maxConcurrency(123)\n                        .memorySizeInMb(123)\n                        .build())\n                .build()))\n\n        // the properties below are optional\n        .asyncInferenceConfig(AsyncInferenceConfigProperty.builder()\n                .outputConfig(AsyncInferenceOutputConfigProperty.builder()\n                        .s3OutputPath(\"s3OutputPath\")\n\n                        // the properties below are optional\n                        .kmsKeyId(\"kmsKeyId\")\n                        .notificationConfig(AsyncInferenceNotificationConfigProperty.builder()\n                                .errorTopic(\"errorTopic\")\n                                .successTopic(\"successTopic\")\n                                .build())\n                        .build())\n\n                // the properties below are optional\n                .clientConfig(AsyncInferenceClientConfigProperty.builder()\n                        .maxConcurrentInvocationsPerInstance(123)\n                        .build())\n                .build())\n        .dataCaptureConfig(DataCaptureConfigProperty.builder()\n                .captureOptions(List.of(CaptureOptionProperty.builder()\n                        .captureMode(\"captureMode\")\n                        .build()))\n                .destinationS3Uri(\"destinationS3Uri\")\n                .initialSamplingPercentage(123)\n\n                // the properties below are optional\n                .captureContentTypeHeader(CaptureContentTypeHeaderProperty.builder()\n                        .csvContentTypes(List.of(\"csvContentTypes\"))\n                        .jsonContentTypes(List.of(\"jsonContentTypes\"))\n                        .build())\n                .enableCapture(false)\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .endpointConfigName(\"endpointConfigName\")\n        .kmsKeyId(\"kmsKeyId\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnEndpointConfig := sagemaker.NewCfnEndpointConfig(this, jsii.String(\"MyCfnEndpointConfig\"), &cfnEndpointConfigProps{\n\tproductionVariants: []interface{}{\n\t\t&productionVariantProperty{\n\t\t\tinitialVariantWeight: jsii.Number(123),\n\t\t\tmodelName: jsii.String(\"modelName\"),\n\t\t\tvariantName: jsii.String(\"variantName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tacceleratorType: jsii.String(\"acceleratorType\"),\n\t\t\tinitialInstanceCount: jsii.Number(123),\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tserverlessConfig: &serverlessConfigProperty{\n\t\t\t\tmaxConcurrency: jsii.Number(123),\n\t\t\t\tmemorySizeInMb: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tasyncInferenceConfig: &asyncInferenceConfigProperty{\n\t\toutputConfig: &asyncInferenceOutputConfigProperty{\n\t\t\ts3OutputPath: jsii.String(\"s3OutputPath\"),\n\n\t\t\t// the properties below are optional\n\t\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\t\tnotificationConfig: &asyncInferenceNotificationConfigProperty{\n\t\t\t\terrorTopic: jsii.String(\"errorTopic\"),\n\t\t\t\tsuccessTopic: jsii.String(\"successTopic\"),\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tclientConfig: &asyncInferenceClientConfigProperty{\n\t\t\tmaxConcurrentInvocationsPerInstance: jsii.Number(123),\n\t\t},\n\t},\n\tdataCaptureConfig: &dataCaptureConfigProperty{\n\t\tcaptureOptions: []interface{}{\n\t\t\t&captureOptionProperty{\n\t\t\t\tcaptureMode: jsii.String(\"captureMode\"),\n\t\t\t},\n\t\t},\n\t\tdestinationS3Uri: jsii.String(\"destinationS3Uri\"),\n\t\tinitialSamplingPercentage: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tcaptureContentTypeHeader: &captureContentTypeHeaderProperty{\n\t\t\tcsvContentTypes: []*string{\n\t\t\t\tjsii.String(\"csvContentTypes\"),\n\t\t\t},\n\t\t\tjsonContentTypes: []*string{\n\t\t\t\tjsii.String(\"jsonContentTypes\"),\n\t\t\t},\n\t\t},\n\t\tenableCapture: jsii.Boolean(false),\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\tendpointConfigName: jsii.String(\"endpointConfigName\"),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnEndpointConfig = new sagemaker.CfnEndpointConfig(this, 'MyCfnEndpointConfig', {\n  productionVariants: [{\n    initialVariantWeight: 123,\n    modelName: 'modelName',\n    variantName: 'variantName',\n\n    // the properties below are optional\n    acceleratorType: 'acceleratorType',\n    initialInstanceCount: 123,\n    instanceType: 'instanceType',\n    serverlessConfig: {\n      maxConcurrency: 123,\n      memorySizeInMb: 123,\n    },\n  }],\n\n  // the properties below are optional\n  asyncInferenceConfig: {\n    outputConfig: {\n      s3OutputPath: 's3OutputPath',\n\n      // the properties below are optional\n      kmsKeyId: 'kmsKeyId',\n      notificationConfig: {\n        errorTopic: 'errorTopic',\n        successTopic: 'successTopic',\n      },\n    },\n\n    // the properties below are optional\n    clientConfig: {\n      maxConcurrentInvocationsPerInstance: 123,\n    },\n  },\n  dataCaptureConfig: {\n    captureOptions: [{\n      captureMode: 'captureMode',\n    }],\n    destinationS3Uri: 'destinationS3Uri',\n    initialSamplingPercentage: 123,\n\n    // the properties below are optional\n    captureContentTypeHeader: {\n      csvContentTypes: ['csvContentTypes'],\n      jsonContentTypes: ['jsonContentTypes'],\n    },\n    enableCapture: false,\n    kmsKeyId: 'kmsKeyId',\n  },\n  endpointConfigName: 'endpointConfigName',\n  kmsKeyId: 'kmsKeyId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpointConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpointConfig",
        "@aws-cdk/aws-sagemaker.CfnEndpointConfigProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnEndpointConfig = new sagemaker.CfnEndpointConfig(this, 'MyCfnEndpointConfig', {\n  productionVariants: [{\n    initialVariantWeight: 123,\n    modelName: 'modelName',\n    variantName: 'variantName',\n\n    // the properties below are optional\n    acceleratorType: 'acceleratorType',\n    initialInstanceCount: 123,\n    instanceType: 'instanceType',\n    serverlessConfig: {\n      maxConcurrency: 123,\n      memorySizeInMb: 123,\n    },\n  }],\n\n  // the properties below are optional\n  asyncInferenceConfig: {\n    outputConfig: {\n      s3OutputPath: 's3OutputPath',\n\n      // the properties below are optional\n      kmsKeyId: 'kmsKeyId',\n      notificationConfig: {\n        errorTopic: 'errorTopic',\n        successTopic: 'successTopic',\n      },\n    },\n\n    // the properties below are optional\n    clientConfig: {\n      maxConcurrentInvocationsPerInstance: 123,\n    },\n  },\n  dataCaptureConfig: {\n    captureOptions: [{\n      captureMode: 'captureMode',\n    }],\n    destinationS3Uri: 'destinationS3Uri',\n    initialSamplingPercentage: 123,\n\n    // the properties below are optional\n    captureContentTypeHeader: {\n      csvContentTypes: ['csvContentTypes'],\n      jsonContentTypes: ['jsonContentTypes'],\n    },\n    enableCapture: false,\n    kmsKeyId: 'kmsKeyId',\n  },\n  endpointConfigName: 'endpointConfigName',\n  kmsKeyId: 'kmsKeyId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 19,
        "75": 38,
        "91": 1,
        "104": 1,
        "192": 5,
        "193": 11,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 34,
        "290": 1
      },
      "fqnsFingerprint": "5d5e307fe4953be1f1a66efe3200eea0112b45ef0af9e8df24f9b837ef5bbaee"
    },
    "6429ce9595cd28ba01e1bafbd4ed2cd94206d32ac36b17c80128886dfda18060": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nasync_inference_client_config_property = sagemaker.CfnEndpointConfig.AsyncInferenceClientConfigProperty(\n    max_concurrent_invocations_per_instance=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nAsyncInferenceClientConfigProperty asyncInferenceClientConfigProperty = new AsyncInferenceClientConfigProperty {\n    MaxConcurrentInvocationsPerInstance = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nAsyncInferenceClientConfigProperty asyncInferenceClientConfigProperty = AsyncInferenceClientConfigProperty.builder()\n        .maxConcurrentInvocationsPerInstance(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nasyncInferenceClientConfigProperty := &asyncInferenceClientConfigProperty{\n\tmaxConcurrentInvocationsPerInstance: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst asyncInferenceClientConfigProperty: sagemaker.CfnEndpointConfig.AsyncInferenceClientConfigProperty = {\n  maxConcurrentInvocationsPerInstance: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpointConfig.AsyncInferenceClientConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpointConfig.AsyncInferenceClientConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst asyncInferenceClientConfigProperty: sagemaker.CfnEndpointConfig.AsyncInferenceClientConfigProperty = {\n  maxConcurrentInvocationsPerInstance: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "18e1d42269ba8de8763ce2480aecb42dbf916684e63d27f5d25ef0458a31a2a6"
    },
    "2d3aa4aa48de8b5f48c358963f0ea851e1abf7036d9144d4bb32327a1081a6a7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nasync_inference_config_property = sagemaker.CfnEndpointConfig.AsyncInferenceConfigProperty(\n    output_config=sagemaker.CfnEndpointConfig.AsyncInferenceOutputConfigProperty(\n        s3_output_path=\"s3OutputPath\",\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\",\n        notification_config=sagemaker.CfnEndpointConfig.AsyncInferenceNotificationConfigProperty(\n            error_topic=\"errorTopic\",\n            success_topic=\"successTopic\"\n        )\n    ),\n\n    # the properties below are optional\n    client_config=sagemaker.CfnEndpointConfig.AsyncInferenceClientConfigProperty(\n        max_concurrent_invocations_per_instance=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nAsyncInferenceConfigProperty asyncInferenceConfigProperty = new AsyncInferenceConfigProperty {\n    OutputConfig = new AsyncInferenceOutputConfigProperty {\n        S3OutputPath = \"s3OutputPath\",\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\",\n        NotificationConfig = new AsyncInferenceNotificationConfigProperty {\n            ErrorTopic = \"errorTopic\",\n            SuccessTopic = \"successTopic\"\n        }\n    },\n\n    // the properties below are optional\n    ClientConfig = new AsyncInferenceClientConfigProperty {\n        MaxConcurrentInvocationsPerInstance = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nAsyncInferenceConfigProperty asyncInferenceConfigProperty = AsyncInferenceConfigProperty.builder()\n        .outputConfig(AsyncInferenceOutputConfigProperty.builder()\n                .s3OutputPath(\"s3OutputPath\")\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .notificationConfig(AsyncInferenceNotificationConfigProperty.builder()\n                        .errorTopic(\"errorTopic\")\n                        .successTopic(\"successTopic\")\n                        .build())\n                .build())\n\n        // the properties below are optional\n        .clientConfig(AsyncInferenceClientConfigProperty.builder()\n                .maxConcurrentInvocationsPerInstance(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nasyncInferenceConfigProperty := &asyncInferenceConfigProperty{\n\toutputConfig: &asyncInferenceOutputConfigProperty{\n\t\ts3OutputPath: jsii.String(\"s3OutputPath\"),\n\n\t\t// the properties below are optional\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\tnotificationConfig: &asyncInferenceNotificationConfigProperty{\n\t\t\terrorTopic: jsii.String(\"errorTopic\"),\n\t\t\tsuccessTopic: jsii.String(\"successTopic\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tclientConfig: &asyncInferenceClientConfigProperty{\n\t\tmaxConcurrentInvocationsPerInstance: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst asyncInferenceConfigProperty: sagemaker.CfnEndpointConfig.AsyncInferenceConfigProperty = {\n  outputConfig: {\n    s3OutputPath: 's3OutputPath',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n    notificationConfig: {\n      errorTopic: 'errorTopic',\n      successTopic: 'successTopic',\n    },\n  },\n\n  // the properties below are optional\n  clientConfig: {\n    maxConcurrentInvocationsPerInstance: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpointConfig.AsyncInferenceConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpointConfig.AsyncInferenceConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst asyncInferenceConfigProperty: sagemaker.CfnEndpointConfig.AsyncInferenceConfigProperty = {\n  outputConfig: {\n    s3OutputPath: 's3OutputPath',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n    notificationConfig: {\n      errorTopic: 'errorTopic',\n      successTopic: 'successTopic',\n    },\n  },\n\n  // the properties below are optional\n  clientConfig: {\n    maxConcurrentInvocationsPerInstance: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 13,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "2b1be295e169c8de5cdb66c1a62c067aeda23e51fa39e1f861de040f93c1d2d2"
    },
    "09479a2e0fc32c3bec98f77d91a44a9f22659c5783bb2237b4f40d4109619e33": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nasync_inference_notification_config_property = sagemaker.CfnEndpointConfig.AsyncInferenceNotificationConfigProperty(\n    error_topic=\"errorTopic\",\n    success_topic=\"successTopic\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nAsyncInferenceNotificationConfigProperty asyncInferenceNotificationConfigProperty = new AsyncInferenceNotificationConfigProperty {\n    ErrorTopic = \"errorTopic\",\n    SuccessTopic = \"successTopic\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nAsyncInferenceNotificationConfigProperty asyncInferenceNotificationConfigProperty = AsyncInferenceNotificationConfigProperty.builder()\n        .errorTopic(\"errorTopic\")\n        .successTopic(\"successTopic\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nasyncInferenceNotificationConfigProperty := &asyncInferenceNotificationConfigProperty{\n\terrorTopic: jsii.String(\"errorTopic\"),\n\tsuccessTopic: jsii.String(\"successTopic\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst asyncInferenceNotificationConfigProperty: sagemaker.CfnEndpointConfig.AsyncInferenceNotificationConfigProperty = {\n  errorTopic: 'errorTopic',\n  successTopic: 'successTopic',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpointConfig.AsyncInferenceNotificationConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpointConfig.AsyncInferenceNotificationConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst asyncInferenceNotificationConfigProperty: sagemaker.CfnEndpointConfig.AsyncInferenceNotificationConfigProperty = {\n  errorTopic: 'errorTopic',\n  successTopic: 'successTopic',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "48981309611dc43c384362d855d9a2be481aa4903d4b3d1b385dbc1e783db402"
    },
    "eb55571e3087628f903db2422445dd57998876863497221971c1981388bd276c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nasync_inference_output_config_property = sagemaker.CfnEndpointConfig.AsyncInferenceOutputConfigProperty(\n    s3_output_path=\"s3OutputPath\",\n\n    # the properties below are optional\n    kms_key_id=\"kmsKeyId\",\n    notification_config=sagemaker.CfnEndpointConfig.AsyncInferenceNotificationConfigProperty(\n        error_topic=\"errorTopic\",\n        success_topic=\"successTopic\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nAsyncInferenceOutputConfigProperty asyncInferenceOutputConfigProperty = new AsyncInferenceOutputConfigProperty {\n    S3OutputPath = \"s3OutputPath\",\n\n    // the properties below are optional\n    KmsKeyId = \"kmsKeyId\",\n    NotificationConfig = new AsyncInferenceNotificationConfigProperty {\n        ErrorTopic = \"errorTopic\",\n        SuccessTopic = \"successTopic\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nAsyncInferenceOutputConfigProperty asyncInferenceOutputConfigProperty = AsyncInferenceOutputConfigProperty.builder()\n        .s3OutputPath(\"s3OutputPath\")\n\n        // the properties below are optional\n        .kmsKeyId(\"kmsKeyId\")\n        .notificationConfig(AsyncInferenceNotificationConfigProperty.builder()\n                .errorTopic(\"errorTopic\")\n                .successTopic(\"successTopic\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nasyncInferenceOutputConfigProperty := &asyncInferenceOutputConfigProperty{\n\ts3OutputPath: jsii.String(\"s3OutputPath\"),\n\n\t// the properties below are optional\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\tnotificationConfig: &asyncInferenceNotificationConfigProperty{\n\t\terrorTopic: jsii.String(\"errorTopic\"),\n\t\tsuccessTopic: jsii.String(\"successTopic\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst asyncInferenceOutputConfigProperty: sagemaker.CfnEndpointConfig.AsyncInferenceOutputConfigProperty = {\n  s3OutputPath: 's3OutputPath',\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n  notificationConfig: {\n    errorTopic: 'errorTopic',\n    successTopic: 'successTopic',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpointConfig.AsyncInferenceOutputConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpointConfig.AsyncInferenceOutputConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst asyncInferenceOutputConfigProperty: sagemaker.CfnEndpointConfig.AsyncInferenceOutputConfigProperty = {\n  s3OutputPath: 's3OutputPath',\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n  notificationConfig: {\n    errorTopic: 'errorTopic',\n    successTopic: 'successTopic',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "39330a281ac934a2d102cd2f8195ca9b58a94fb521af0184a512c4045d1bf5c8"
    },
    "ce99a38b6c87c4b6ead1cb2b89cd7282df3c1e059b8662da4524bf20f6ae07be": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncapture_content_type_header_property = sagemaker.CfnEndpointConfig.CaptureContentTypeHeaderProperty(\n    csv_content_types=[\"csvContentTypes\"],\n    json_content_types=[\"jsonContentTypes\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCaptureContentTypeHeaderProperty captureContentTypeHeaderProperty = new CaptureContentTypeHeaderProperty {\n    CsvContentTypes = new [] { \"csvContentTypes\" },\n    JsonContentTypes = new [] { \"jsonContentTypes\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCaptureContentTypeHeaderProperty captureContentTypeHeaderProperty = CaptureContentTypeHeaderProperty.builder()\n        .csvContentTypes(List.of(\"csvContentTypes\"))\n        .jsonContentTypes(List.of(\"jsonContentTypes\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncaptureContentTypeHeaderProperty := &captureContentTypeHeaderProperty{\n\tcsvContentTypes: []*string{\n\t\tjsii.String(\"csvContentTypes\"),\n\t},\n\tjsonContentTypes: []*string{\n\t\tjsii.String(\"jsonContentTypes\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst captureContentTypeHeaderProperty: sagemaker.CfnEndpointConfig.CaptureContentTypeHeaderProperty = {\n  csvContentTypes: ['csvContentTypes'],\n  jsonContentTypes: ['jsonContentTypes'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpointConfig.CaptureContentTypeHeaderProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpointConfig.CaptureContentTypeHeaderProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst captureContentTypeHeaderProperty: sagemaker.CfnEndpointConfig.CaptureContentTypeHeaderProperty = {\n  csvContentTypes: ['csvContentTypes'],\n  jsonContentTypes: ['jsonContentTypes'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "716c1efbd4f63f7c54f9ff22f79bb183316b5668af7c0a22b5eae679c64a3097"
    },
    "e032a8806201dd2f37a36f4a861ecf99471ee77b31f83dd613f8288b8fb94940": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncapture_option_property = sagemaker.CfnEndpointConfig.CaptureOptionProperty(\n    capture_mode=\"captureMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCaptureOptionProperty captureOptionProperty = new CaptureOptionProperty {\n    CaptureMode = \"captureMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCaptureOptionProperty captureOptionProperty = CaptureOptionProperty.builder()\n        .captureMode(\"captureMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncaptureOptionProperty := &captureOptionProperty{\n\tcaptureMode: jsii.String(\"captureMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst captureOptionProperty: sagemaker.CfnEndpointConfig.CaptureOptionProperty = {\n  captureMode: 'captureMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpointConfig.CaptureOptionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpointConfig.CaptureOptionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst captureOptionProperty: sagemaker.CfnEndpointConfig.CaptureOptionProperty = {\n  captureMode: 'captureMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "54896e3fb965d27211b0b5c7f58b15608b56875306f8de22c52389943829e446"
    },
    "f3149ffcb2dee79d93d414c06a0d627875ba74083bce8639285d7494922f6df1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ndata_capture_config_property = sagemaker.CfnEndpointConfig.DataCaptureConfigProperty(\n    capture_options=[sagemaker.CfnEndpointConfig.CaptureOptionProperty(\n        capture_mode=\"captureMode\"\n    )],\n    destination_s3_uri=\"destinationS3Uri\",\n    initial_sampling_percentage=123,\n\n    # the properties below are optional\n    capture_content_type_header=sagemaker.CfnEndpointConfig.CaptureContentTypeHeaderProperty(\n        csv_content_types=[\"csvContentTypes\"],\n        json_content_types=[\"jsonContentTypes\"]\n    ),\n    enable_capture=False,\n    kms_key_id=\"kmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nDataCaptureConfigProperty dataCaptureConfigProperty = new DataCaptureConfigProperty {\n    CaptureOptions = new [] { new CaptureOptionProperty {\n        CaptureMode = \"captureMode\"\n    } },\n    DestinationS3Uri = \"destinationS3Uri\",\n    InitialSamplingPercentage = 123,\n\n    // the properties below are optional\n    CaptureContentTypeHeader = new CaptureContentTypeHeaderProperty {\n        CsvContentTypes = new [] { \"csvContentTypes\" },\n        JsonContentTypes = new [] { \"jsonContentTypes\" }\n    },\n    EnableCapture = false,\n    KmsKeyId = \"kmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nDataCaptureConfigProperty dataCaptureConfigProperty = DataCaptureConfigProperty.builder()\n        .captureOptions(List.of(CaptureOptionProperty.builder()\n                .captureMode(\"captureMode\")\n                .build()))\n        .destinationS3Uri(\"destinationS3Uri\")\n        .initialSamplingPercentage(123)\n\n        // the properties below are optional\n        .captureContentTypeHeader(CaptureContentTypeHeaderProperty.builder()\n                .csvContentTypes(List.of(\"csvContentTypes\"))\n                .jsonContentTypes(List.of(\"jsonContentTypes\"))\n                .build())\n        .enableCapture(false)\n        .kmsKeyId(\"kmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ndataCaptureConfigProperty := &dataCaptureConfigProperty{\n\tcaptureOptions: []interface{}{\n\t\t&captureOptionProperty{\n\t\t\tcaptureMode: jsii.String(\"captureMode\"),\n\t\t},\n\t},\n\tdestinationS3Uri: jsii.String(\"destinationS3Uri\"),\n\tinitialSamplingPercentage: jsii.Number(123),\n\n\t// the properties below are optional\n\tcaptureContentTypeHeader: &captureContentTypeHeaderProperty{\n\t\tcsvContentTypes: []*string{\n\t\t\tjsii.String(\"csvContentTypes\"),\n\t\t},\n\t\tjsonContentTypes: []*string{\n\t\t\tjsii.String(\"jsonContentTypes\"),\n\t\t},\n\t},\n\tenableCapture: jsii.Boolean(false),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst dataCaptureConfigProperty: sagemaker.CfnEndpointConfig.DataCaptureConfigProperty = {\n  captureOptions: [{\n    captureMode: 'captureMode',\n  }],\n  destinationS3Uri: 'destinationS3Uri',\n  initialSamplingPercentage: 123,\n\n  // the properties below are optional\n  captureContentTypeHeader: {\n    csvContentTypes: ['csvContentTypes'],\n    jsonContentTypes: ['jsonContentTypes'],\n  },\n  enableCapture: false,\n  kmsKeyId: 'kmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpointConfig.DataCaptureConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpointConfig.DataCaptureConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataCaptureConfigProperty: sagemaker.CfnEndpointConfig.DataCaptureConfigProperty = {\n  captureOptions: [{\n    captureMode: 'captureMode',\n  }],\n  destinationS3Uri: 'destinationS3Uri',\n  initialSamplingPercentage: 123,\n\n  // the properties below are optional\n  captureContentTypeHeader: {\n    csvContentTypes: ['csvContentTypes'],\n    jsonContentTypes: ['jsonContentTypes'],\n  },\n  enableCapture: false,\n  kmsKeyId: 'kmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 6,
        "75": 14,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 3,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "1a2e8e677126468a5442e423cab0af2231ef93a0e9e9663bd5bdd4864e154a3e"
    },
    "8b98941965a1b2d2cae1c360da632d6dc6e77ac813a7f1e410aebc61eec676be": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nproduction_variant_property = sagemaker.CfnEndpointConfig.ProductionVariantProperty(\n    initial_variant_weight=123,\n    model_name=\"modelName\",\n    variant_name=\"variantName\",\n\n    # the properties below are optional\n    accelerator_type=\"acceleratorType\",\n    initial_instance_count=123,\n    instance_type=\"instanceType\",\n    serverless_config=sagemaker.CfnEndpointConfig.ServerlessConfigProperty(\n        max_concurrency=123,\n        memory_size_in_mb=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nProductionVariantProperty productionVariantProperty = new ProductionVariantProperty {\n    InitialVariantWeight = 123,\n    ModelName = \"modelName\",\n    VariantName = \"variantName\",\n\n    // the properties below are optional\n    AcceleratorType = \"acceleratorType\",\n    InitialInstanceCount = 123,\n    InstanceType = \"instanceType\",\n    ServerlessConfig = new ServerlessConfigProperty {\n        MaxConcurrency = 123,\n        MemorySizeInMb = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nProductionVariantProperty productionVariantProperty = ProductionVariantProperty.builder()\n        .initialVariantWeight(123)\n        .modelName(\"modelName\")\n        .variantName(\"variantName\")\n\n        // the properties below are optional\n        .acceleratorType(\"acceleratorType\")\n        .initialInstanceCount(123)\n        .instanceType(\"instanceType\")\n        .serverlessConfig(ServerlessConfigProperty.builder()\n                .maxConcurrency(123)\n                .memorySizeInMb(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nproductionVariantProperty := &productionVariantProperty{\n\tinitialVariantWeight: jsii.Number(123),\n\tmodelName: jsii.String(\"modelName\"),\n\tvariantName: jsii.String(\"variantName\"),\n\n\t// the properties below are optional\n\tacceleratorType: jsii.String(\"acceleratorType\"),\n\tinitialInstanceCount: jsii.Number(123),\n\tinstanceType: jsii.String(\"instanceType\"),\n\tserverlessConfig: &serverlessConfigProperty{\n\t\tmaxConcurrency: jsii.Number(123),\n\t\tmemorySizeInMb: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst productionVariantProperty: sagemaker.CfnEndpointConfig.ProductionVariantProperty = {\n  initialVariantWeight: 123,\n  modelName: 'modelName',\n  variantName: 'variantName',\n\n  // the properties below are optional\n  acceleratorType: 'acceleratorType',\n  initialInstanceCount: 123,\n  instanceType: 'instanceType',\n  serverlessConfig: {\n    maxConcurrency: 123,\n    memorySizeInMb: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpointConfig.ProductionVariantProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpointConfig.ProductionVariantProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst productionVariantProperty: sagemaker.CfnEndpointConfig.ProductionVariantProperty = {\n  initialVariantWeight: 123,\n  modelName: 'modelName',\n  variantName: 'variantName',\n\n  // the properties below are optional\n  acceleratorType: 'acceleratorType',\n  initialInstanceCount: 123,\n  instanceType: 'instanceType',\n  serverlessConfig: {\n    maxConcurrency: 123,\n    memorySizeInMb: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 5,
        "75": 14,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "8702134d8841fb238b04093f524e80ded4d54fe15203f3ed91bce057c3ae1fbb"
    },
    "c1805e18e9590a85a54a42f52afeb40ba451545bd15b648cb1294a1fe1924e15": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nserverless_config_property = sagemaker.CfnEndpointConfig.ServerlessConfigProperty(\n    max_concurrency=123,\n    memory_size_in_mb=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nServerlessConfigProperty serverlessConfigProperty = new ServerlessConfigProperty {\n    MaxConcurrency = 123,\n    MemorySizeInMb = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nServerlessConfigProperty serverlessConfigProperty = ServerlessConfigProperty.builder()\n        .maxConcurrency(123)\n        .memorySizeInMb(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nserverlessConfigProperty := &serverlessConfigProperty{\n\tmaxConcurrency: jsii.Number(123),\n\tmemorySizeInMb: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst serverlessConfigProperty: sagemaker.CfnEndpointConfig.ServerlessConfigProperty = {\n  maxConcurrency: 123,\n  memorySizeInMb: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpointConfig.ServerlessConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpointConfig.ServerlessConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst serverlessConfigProperty: sagemaker.CfnEndpointConfig.ServerlessConfigProperty = {\n  maxConcurrency: 123,\n  memorySizeInMb: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "b991eaaa4b7775eb35f8538c20e5f0cb51bdc5a10570293994b52b62cfa125f7"
    },
    "82df8566dd1d0a716eaadfe0b23f2ad34e740e42a5f94ca1519c519efef06e50": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_endpoint_config_props = sagemaker.CfnEndpointConfigProps(\n    production_variants=[sagemaker.CfnEndpointConfig.ProductionVariantProperty(\n        initial_variant_weight=123,\n        model_name=\"modelName\",\n        variant_name=\"variantName\",\n\n        # the properties below are optional\n        accelerator_type=\"acceleratorType\",\n        initial_instance_count=123,\n        instance_type=\"instanceType\",\n        serverless_config=sagemaker.CfnEndpointConfig.ServerlessConfigProperty(\n            max_concurrency=123,\n            memory_size_in_mb=123\n        )\n    )],\n\n    # the properties below are optional\n    async_inference_config=sagemaker.CfnEndpointConfig.AsyncInferenceConfigProperty(\n        output_config=sagemaker.CfnEndpointConfig.AsyncInferenceOutputConfigProperty(\n            s3_output_path=\"s3OutputPath\",\n\n            # the properties below are optional\n            kms_key_id=\"kmsKeyId\",\n            notification_config=sagemaker.CfnEndpointConfig.AsyncInferenceNotificationConfigProperty(\n                error_topic=\"errorTopic\",\n                success_topic=\"successTopic\"\n            )\n        ),\n\n        # the properties below are optional\n        client_config=sagemaker.CfnEndpointConfig.AsyncInferenceClientConfigProperty(\n            max_concurrent_invocations_per_instance=123\n        )\n    ),\n    data_capture_config=sagemaker.CfnEndpointConfig.DataCaptureConfigProperty(\n        capture_options=[sagemaker.CfnEndpointConfig.CaptureOptionProperty(\n            capture_mode=\"captureMode\"\n        )],\n        destination_s3_uri=\"destinationS3Uri\",\n        initial_sampling_percentage=123,\n\n        # the properties below are optional\n        capture_content_type_header=sagemaker.CfnEndpointConfig.CaptureContentTypeHeaderProperty(\n            csv_content_types=[\"csvContentTypes\"],\n            json_content_types=[\"jsonContentTypes\"]\n        ),\n        enable_capture=False,\n        kms_key_id=\"kmsKeyId\"\n    ),\n    endpoint_config_name=\"endpointConfigName\",\n    kms_key_id=\"kmsKeyId\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnEndpointConfigProps cfnEndpointConfigProps = new CfnEndpointConfigProps {\n    ProductionVariants = new [] { new ProductionVariantProperty {\n        InitialVariantWeight = 123,\n        ModelName = \"modelName\",\n        VariantName = \"variantName\",\n\n        // the properties below are optional\n        AcceleratorType = \"acceleratorType\",\n        InitialInstanceCount = 123,\n        InstanceType = \"instanceType\",\n        ServerlessConfig = new ServerlessConfigProperty {\n            MaxConcurrency = 123,\n            MemorySizeInMb = 123\n        }\n    } },\n\n    // the properties below are optional\n    AsyncInferenceConfig = new AsyncInferenceConfigProperty {\n        OutputConfig = new AsyncInferenceOutputConfigProperty {\n            S3OutputPath = \"s3OutputPath\",\n\n            // the properties below are optional\n            KmsKeyId = \"kmsKeyId\",\n            NotificationConfig = new AsyncInferenceNotificationConfigProperty {\n                ErrorTopic = \"errorTopic\",\n                SuccessTopic = \"successTopic\"\n            }\n        },\n\n        // the properties below are optional\n        ClientConfig = new AsyncInferenceClientConfigProperty {\n            MaxConcurrentInvocationsPerInstance = 123\n        }\n    },\n    DataCaptureConfig = new DataCaptureConfigProperty {\n        CaptureOptions = new [] { new CaptureOptionProperty {\n            CaptureMode = \"captureMode\"\n        } },\n        DestinationS3Uri = \"destinationS3Uri\",\n        InitialSamplingPercentage = 123,\n\n        // the properties below are optional\n        CaptureContentTypeHeader = new CaptureContentTypeHeaderProperty {\n            CsvContentTypes = new [] { \"csvContentTypes\" },\n            JsonContentTypes = new [] { \"jsonContentTypes\" }\n        },\n        EnableCapture = false,\n        KmsKeyId = \"kmsKeyId\"\n    },\n    EndpointConfigName = \"endpointConfigName\",\n    KmsKeyId = \"kmsKeyId\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnEndpointConfigProps cfnEndpointConfigProps = CfnEndpointConfigProps.builder()\n        .productionVariants(List.of(ProductionVariantProperty.builder()\n                .initialVariantWeight(123)\n                .modelName(\"modelName\")\n                .variantName(\"variantName\")\n\n                // the properties below are optional\n                .acceleratorType(\"acceleratorType\")\n                .initialInstanceCount(123)\n                .instanceType(\"instanceType\")\n                .serverlessConfig(ServerlessConfigProperty.builder()\n                        .maxConcurrency(123)\n                        .memorySizeInMb(123)\n                        .build())\n                .build()))\n\n        // the properties below are optional\n        .asyncInferenceConfig(AsyncInferenceConfigProperty.builder()\n                .outputConfig(AsyncInferenceOutputConfigProperty.builder()\n                        .s3OutputPath(\"s3OutputPath\")\n\n                        // the properties below are optional\n                        .kmsKeyId(\"kmsKeyId\")\n                        .notificationConfig(AsyncInferenceNotificationConfigProperty.builder()\n                                .errorTopic(\"errorTopic\")\n                                .successTopic(\"successTopic\")\n                                .build())\n                        .build())\n\n                // the properties below are optional\n                .clientConfig(AsyncInferenceClientConfigProperty.builder()\n                        .maxConcurrentInvocationsPerInstance(123)\n                        .build())\n                .build())\n        .dataCaptureConfig(DataCaptureConfigProperty.builder()\n                .captureOptions(List.of(CaptureOptionProperty.builder()\n                        .captureMode(\"captureMode\")\n                        .build()))\n                .destinationS3Uri(\"destinationS3Uri\")\n                .initialSamplingPercentage(123)\n\n                // the properties below are optional\n                .captureContentTypeHeader(CaptureContentTypeHeaderProperty.builder()\n                        .csvContentTypes(List.of(\"csvContentTypes\"))\n                        .jsonContentTypes(List.of(\"jsonContentTypes\"))\n                        .build())\n                .enableCapture(false)\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .endpointConfigName(\"endpointConfigName\")\n        .kmsKeyId(\"kmsKeyId\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnEndpointConfigProps := &cfnEndpointConfigProps{\n\tproductionVariants: []interface{}{\n\t\t&productionVariantProperty{\n\t\t\tinitialVariantWeight: jsii.Number(123),\n\t\t\tmodelName: jsii.String(\"modelName\"),\n\t\t\tvariantName: jsii.String(\"variantName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tacceleratorType: jsii.String(\"acceleratorType\"),\n\t\t\tinitialInstanceCount: jsii.Number(123),\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tserverlessConfig: &serverlessConfigProperty{\n\t\t\t\tmaxConcurrency: jsii.Number(123),\n\t\t\t\tmemorySizeInMb: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tasyncInferenceConfig: &asyncInferenceConfigProperty{\n\t\toutputConfig: &asyncInferenceOutputConfigProperty{\n\t\t\ts3OutputPath: jsii.String(\"s3OutputPath\"),\n\n\t\t\t// the properties below are optional\n\t\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\t\tnotificationConfig: &asyncInferenceNotificationConfigProperty{\n\t\t\t\terrorTopic: jsii.String(\"errorTopic\"),\n\t\t\t\tsuccessTopic: jsii.String(\"successTopic\"),\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tclientConfig: &asyncInferenceClientConfigProperty{\n\t\t\tmaxConcurrentInvocationsPerInstance: jsii.Number(123),\n\t\t},\n\t},\n\tdataCaptureConfig: &dataCaptureConfigProperty{\n\t\tcaptureOptions: []interface{}{\n\t\t\t&captureOptionProperty{\n\t\t\t\tcaptureMode: jsii.String(\"captureMode\"),\n\t\t\t},\n\t\t},\n\t\tdestinationS3Uri: jsii.String(\"destinationS3Uri\"),\n\t\tinitialSamplingPercentage: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tcaptureContentTypeHeader: &captureContentTypeHeaderProperty{\n\t\t\tcsvContentTypes: []*string{\n\t\t\t\tjsii.String(\"csvContentTypes\"),\n\t\t\t},\n\t\t\tjsonContentTypes: []*string{\n\t\t\t\tjsii.String(\"jsonContentTypes\"),\n\t\t\t},\n\t\t},\n\t\tenableCapture: jsii.Boolean(false),\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\tendpointConfigName: jsii.String(\"endpointConfigName\"),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnEndpointConfigProps: sagemaker.CfnEndpointConfigProps = {\n  productionVariants: [{\n    initialVariantWeight: 123,\n    modelName: 'modelName',\n    variantName: 'variantName',\n\n    // the properties below are optional\n    acceleratorType: 'acceleratorType',\n    initialInstanceCount: 123,\n    instanceType: 'instanceType',\n    serverlessConfig: {\n      maxConcurrency: 123,\n      memorySizeInMb: 123,\n    },\n  }],\n\n  // the properties below are optional\n  asyncInferenceConfig: {\n    outputConfig: {\n      s3OutputPath: 's3OutputPath',\n\n      // the properties below are optional\n      kmsKeyId: 'kmsKeyId',\n      notificationConfig: {\n        errorTopic: 'errorTopic',\n        successTopic: 'successTopic',\n      },\n    },\n\n    // the properties below are optional\n    clientConfig: {\n      maxConcurrentInvocationsPerInstance: 123,\n    },\n  },\n  dataCaptureConfig: {\n    captureOptions: [{\n      captureMode: 'captureMode',\n    }],\n    destinationS3Uri: 'destinationS3Uri',\n    initialSamplingPercentage: 123,\n\n    // the properties below are optional\n    captureContentTypeHeader: {\n      csvContentTypes: ['csvContentTypes'],\n      jsonContentTypes: ['jsonContentTypes'],\n    },\n    enableCapture: false,\n    kmsKeyId: 'kmsKeyId',\n  },\n  endpointConfigName: 'endpointConfigName',\n  kmsKeyId: 'kmsKeyId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpointConfigProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpointConfigProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnEndpointConfigProps: sagemaker.CfnEndpointConfigProps = {\n  productionVariants: [{\n    initialVariantWeight: 123,\n    modelName: 'modelName',\n    variantName: 'variantName',\n\n    // the properties below are optional\n    acceleratorType: 'acceleratorType',\n    initialInstanceCount: 123,\n    instanceType: 'instanceType',\n    serverlessConfig: {\n      maxConcurrency: 123,\n      memorySizeInMb: 123,\n    },\n  }],\n\n  // the properties below are optional\n  asyncInferenceConfig: {\n    outputConfig: {\n      s3OutputPath: 's3OutputPath',\n\n      // the properties below are optional\n      kmsKeyId: 'kmsKeyId',\n      notificationConfig: {\n        errorTopic: 'errorTopic',\n        successTopic: 'successTopic',\n      },\n    },\n\n    // the properties below are optional\n    clientConfig: {\n      maxConcurrentInvocationsPerInstance: 123,\n    },\n  },\n  dataCaptureConfig: {\n    captureOptions: [{\n      captureMode: 'captureMode',\n    }],\n    destinationS3Uri: 'destinationS3Uri',\n    initialSamplingPercentage: 123,\n\n    // the properties below are optional\n    captureContentTypeHeader: {\n      csvContentTypes: ['csvContentTypes'],\n      jsonContentTypes: ['jsonContentTypes'],\n    },\n    enableCapture: false,\n    kmsKeyId: 'kmsKeyId',\n  },\n  endpointConfigName: 'endpointConfigName',\n  kmsKeyId: 'kmsKeyId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 18,
        "75": 38,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 5,
        "193": 11,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 34,
        "290": 1
      },
      "fqnsFingerprint": "da33fef122ea18fe6dad0a5aada644f1722bb6b1c859c09b1e63b56c2a76bd0e"
    },
    "fe3f87ce61073e8c54be97756b5f3f9cd5f1d790e36f8a2e87b545a7c03e5c8f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_endpoint_props = sagemaker.CfnEndpointProps(\n    endpoint_config_name=\"endpointConfigName\",\n\n    # the properties below are optional\n    deployment_config=sagemaker.CfnEndpoint.DeploymentConfigProperty(\n        blue_green_update_policy=sagemaker.CfnEndpoint.BlueGreenUpdatePolicyProperty(\n            traffic_routing_configuration=sagemaker.CfnEndpoint.TrafficRoutingConfigProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                canary_size=sagemaker.CfnEndpoint.CapacitySizeProperty(\n                    type=\"type\",\n                    value=123\n                ),\n                linear_step_size=sagemaker.CfnEndpoint.CapacitySizeProperty(\n                    type=\"type\",\n                    value=123\n                ),\n                wait_interval_in_seconds=123\n            ),\n\n            # the properties below are optional\n            maximum_execution_timeout_in_seconds=123,\n            termination_wait_in_seconds=123\n        ),\n\n        # the properties below are optional\n        auto_rollback_configuration=sagemaker.CfnEndpoint.AutoRollbackConfigProperty(\n            alarms=[sagemaker.CfnEndpoint.AlarmProperty(\n                alarm_name=\"alarmName\"\n            )]\n        )\n    ),\n    endpoint_name=\"endpointName\",\n    exclude_retained_variant_properties=[sagemaker.CfnEndpoint.VariantPropertyProperty(\n        variant_property_type=\"variantPropertyType\"\n    )],\n    retain_all_variant_properties=False,\n    retain_deployment_config=False,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnEndpointProps cfnEndpointProps = new CfnEndpointProps {\n    EndpointConfigName = \"endpointConfigName\",\n\n    // the properties below are optional\n    DeploymentConfig = new DeploymentConfigProperty {\n        BlueGreenUpdatePolicy = new BlueGreenUpdatePolicyProperty {\n            TrafficRoutingConfiguration = new TrafficRoutingConfigProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                CanarySize = new CapacitySizeProperty {\n                    Type = \"type\",\n                    Value = 123\n                },\n                LinearStepSize = new CapacitySizeProperty {\n                    Type = \"type\",\n                    Value = 123\n                },\n                WaitIntervalInSeconds = 123\n            },\n\n            // the properties below are optional\n            MaximumExecutionTimeoutInSeconds = 123,\n            TerminationWaitInSeconds = 123\n        },\n\n        // the properties below are optional\n        AutoRollbackConfiguration = new AutoRollbackConfigProperty {\n            Alarms = new [] { new AlarmProperty {\n                AlarmName = \"alarmName\"\n            } }\n        }\n    },\n    EndpointName = \"endpointName\",\n    ExcludeRetainedVariantProperties = new [] { new VariantPropertyProperty {\n        VariantPropertyType = \"variantPropertyType\"\n    } },\n    RetainAllVariantProperties = false,\n    RetainDeploymentConfig = false,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnEndpointProps cfnEndpointProps = CfnEndpointProps.builder()\n        .endpointConfigName(\"endpointConfigName\")\n\n        // the properties below are optional\n        .deploymentConfig(DeploymentConfigProperty.builder()\n                .blueGreenUpdatePolicy(BlueGreenUpdatePolicyProperty.builder()\n                        .trafficRoutingConfiguration(TrafficRoutingConfigProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .canarySize(CapacitySizeProperty.builder()\n                                        .type(\"type\")\n                                        .value(123)\n                                        .build())\n                                .linearStepSize(CapacitySizeProperty.builder()\n                                        .type(\"type\")\n                                        .value(123)\n                                        .build())\n                                .waitIntervalInSeconds(123)\n                                .build())\n\n                        // the properties below are optional\n                        .maximumExecutionTimeoutInSeconds(123)\n                        .terminationWaitInSeconds(123)\n                        .build())\n\n                // the properties below are optional\n                .autoRollbackConfiguration(AutoRollbackConfigProperty.builder()\n                        .alarms(List.of(AlarmProperty.builder()\n                                .alarmName(\"alarmName\")\n                                .build()))\n                        .build())\n                .build())\n        .endpointName(\"endpointName\")\n        .excludeRetainedVariantProperties(List.of(VariantPropertyProperty.builder()\n                .variantPropertyType(\"variantPropertyType\")\n                .build()))\n        .retainAllVariantProperties(false)\n        .retainDeploymentConfig(false)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnEndpointProps := &cfnEndpointProps{\n\tendpointConfigName: jsii.String(\"endpointConfigName\"),\n\n\t// the properties below are optional\n\tdeploymentConfig: &deploymentConfigProperty{\n\t\tblueGreenUpdatePolicy: &blueGreenUpdatePolicyProperty{\n\t\t\ttrafficRoutingConfiguration: &trafficRoutingConfigProperty{\n\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcanarySize: &capacitySizeProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\tvalue: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tlinearStepSize: &capacitySizeProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\tvalue: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\twaitIntervalInSeconds: jsii.Number(123),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tmaximumExecutionTimeoutInSeconds: jsii.Number(123),\n\t\t\tterminationWaitInSeconds: jsii.Number(123),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tautoRollbackConfiguration: &autoRollbackConfigProperty{\n\t\t\talarms: []interface{}{\n\t\t\t\t&alarmProperty{\n\t\t\t\t\talarmName: jsii.String(\"alarmName\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tendpointName: jsii.String(\"endpointName\"),\n\texcludeRetainedVariantProperties: []interface{}{\n\t\t&variantPropertyProperty{\n\t\t\tvariantPropertyType: jsii.String(\"variantPropertyType\"),\n\t\t},\n\t},\n\tretainAllVariantProperties: jsii.Boolean(false),\n\tretainDeploymentConfig: jsii.Boolean(false),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnEndpointProps: sagemaker.CfnEndpointProps = {\n  endpointConfigName: 'endpointConfigName',\n\n  // the properties below are optional\n  deploymentConfig: {\n    blueGreenUpdatePolicy: {\n      trafficRoutingConfiguration: {\n        type: 'type',\n\n        // the properties below are optional\n        canarySize: {\n          type: 'type',\n          value: 123,\n        },\n        linearStepSize: {\n          type: 'type',\n          value: 123,\n        },\n        waitIntervalInSeconds: 123,\n      },\n\n      // the properties below are optional\n      maximumExecutionTimeoutInSeconds: 123,\n      terminationWaitInSeconds: 123,\n    },\n\n    // the properties below are optional\n    autoRollbackConfiguration: {\n      alarms: [{\n        alarmName: 'alarmName',\n      }],\n    },\n  },\n  endpointName: 'endpointName',\n  excludeRetainedVariantProperties: [{\n    variantPropertyType: 'variantPropertyType',\n  }],\n  retainAllVariantProperties: false,\n  retainDeploymentConfig: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnEndpointProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnEndpointProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnEndpointProps: sagemaker.CfnEndpointProps = {\n  endpointConfigName: 'endpointConfigName',\n\n  // the properties below are optional\n  deploymentConfig: {\n    blueGreenUpdatePolicy: {\n      trafficRoutingConfiguration: {\n        type: 'type',\n\n        // the properties below are optional\n        canarySize: {\n          type: 'type',\n          value: 123,\n        },\n        linearStepSize: {\n          type: 'type',\n          value: 123,\n        },\n        waitIntervalInSeconds: 123,\n      },\n\n      // the properties below are optional\n      maximumExecutionTimeoutInSeconds: 123,\n      terminationWaitInSeconds: 123,\n    },\n\n    // the properties below are optional\n    autoRollbackConfiguration: {\n      alarms: [{\n        alarmName: 'alarmName',\n      }],\n    },\n  },\n  endpointName: 'endpointName',\n  excludeRetainedVariantProperties: [{\n    variantPropertyType: 'variantPropertyType',\n  }],\n  retainAllVariantProperties: false,\n  retainDeploymentConfig: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 10,
        "75": 29,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 10,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 25,
        "290": 1
      },
      "fqnsFingerprint": "b96b6bbdda49b7db101bf4eaed4dba7c93a4b60ef376afc22a0e5131098b4b19"
    },
    "ae4c202a85fc187cdf41647d78586d1bd35ad44df63055f912d1c4cd8aceb077": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\n# offline_store_config: Any\n# online_store_config: Any\n\ncfn_feature_group = sagemaker.CfnFeatureGroup(self, \"MyCfnFeatureGroup\",\n    event_time_feature_name=\"eventTimeFeatureName\",\n    feature_definitions=[sagemaker.CfnFeatureGroup.FeatureDefinitionProperty(\n        feature_name=\"featureName\",\n        feature_type=\"featureType\"\n    )],\n    feature_group_name=\"featureGroupName\",\n    record_identifier_feature_name=\"recordIdentifierFeatureName\",\n\n    # the properties below are optional\n    description=\"description\",\n    offline_store_config=offline_store_config,\n    online_store_config=online_store_config,\n    role_arn=\"roleArn\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nvar offlineStoreConfig;\nvar onlineStoreConfig;\n\nCfnFeatureGroup cfnFeatureGroup = new CfnFeatureGroup(this, \"MyCfnFeatureGroup\", new CfnFeatureGroupProps {\n    EventTimeFeatureName = \"eventTimeFeatureName\",\n    FeatureDefinitions = new [] { new FeatureDefinitionProperty {\n        FeatureName = \"featureName\",\n        FeatureType = \"featureType\"\n    } },\n    FeatureGroupName = \"featureGroupName\",\n    RecordIdentifierFeatureName = \"recordIdentifierFeatureName\",\n\n    // the properties below are optional\n    Description = \"description\",\n    OfflineStoreConfig = offlineStoreConfig,\n    OnlineStoreConfig = onlineStoreConfig,\n    RoleArn = \"roleArn\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nObject offlineStoreConfig;\nObject onlineStoreConfig;\n\nCfnFeatureGroup cfnFeatureGroup = CfnFeatureGroup.Builder.create(this, \"MyCfnFeatureGroup\")\n        .eventTimeFeatureName(\"eventTimeFeatureName\")\n        .featureDefinitions(List.of(FeatureDefinitionProperty.builder()\n                .featureName(\"featureName\")\n                .featureType(\"featureType\")\n                .build()))\n        .featureGroupName(\"featureGroupName\")\n        .recordIdentifierFeatureName(\"recordIdentifierFeatureName\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .offlineStoreConfig(offlineStoreConfig)\n        .onlineStoreConfig(onlineStoreConfig)\n        .roleArn(\"roleArn\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvar offlineStoreConfig interface{}\nvar onlineStoreConfig interface{}\n\ncfnFeatureGroup := sagemaker.NewCfnFeatureGroup(this, jsii.String(\"MyCfnFeatureGroup\"), &cfnFeatureGroupProps{\n\teventTimeFeatureName: jsii.String(\"eventTimeFeatureName\"),\n\tfeatureDefinitions: []interface{}{\n\t\t&featureDefinitionProperty{\n\t\t\tfeatureName: jsii.String(\"featureName\"),\n\t\t\tfeatureType: jsii.String(\"featureType\"),\n\t\t},\n\t},\n\tfeatureGroupName: jsii.String(\"featureGroupName\"),\n\trecordIdentifierFeatureName: jsii.String(\"recordIdentifierFeatureName\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tofflineStoreConfig: offlineStoreConfig,\n\tonlineStoreConfig: onlineStoreConfig,\n\troleArn: jsii.String(\"roleArn\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const offlineStoreConfig: any;\ndeclare const onlineStoreConfig: any;\nconst cfnFeatureGroup = new sagemaker.CfnFeatureGroup(this, 'MyCfnFeatureGroup', {\n  eventTimeFeatureName: 'eventTimeFeatureName',\n  featureDefinitions: [{\n    featureName: 'featureName',\n    featureType: 'featureType',\n  }],\n  featureGroupName: 'featureGroupName',\n  recordIdentifierFeatureName: 'recordIdentifierFeatureName',\n\n  // the properties below are optional\n  description: 'description',\n  offlineStoreConfig: offlineStoreConfig,\n  onlineStoreConfig: onlineStoreConfig,\n  roleArn: 'roleArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnFeatureGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnFeatureGroup",
        "@aws-cdk/aws-sagemaker.CfnFeatureGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const offlineStoreConfig: any;\ndeclare const onlineStoreConfig: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnFeatureGroup = new sagemaker.CfnFeatureGroup(this, 'MyCfnFeatureGroup', {\n  eventTimeFeatureName: 'eventTimeFeatureName',\n  featureDefinitions: [{\n    featureName: 'featureName',\n    featureType: 'featureType',\n  }],\n  featureGroupName: 'featureGroupName',\n  recordIdentifierFeatureName: 'recordIdentifierFeatureName',\n\n  // the properties below are optional\n  description: 'description',\n  offlineStoreConfig: offlineStoreConfig,\n  onlineStoreConfig: onlineStoreConfig,\n  roleArn: 'roleArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 11,
        "75": 21,
        "104": 1,
        "125": 2,
        "130": 2,
        "192": 2,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "0107a36cefb88f3a7d599cc3b6910404e78cf0ad12aac51c3b711d1dbc437bba"
    },
    "bb0ead9c3e3a344e532b90c0023d519dabbb55f608c7162996a8a08a617d19e9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nfeature_definition_property = sagemaker.CfnFeatureGroup.FeatureDefinitionProperty(\n    feature_name=\"featureName\",\n    feature_type=\"featureType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nFeatureDefinitionProperty featureDefinitionProperty = new FeatureDefinitionProperty {\n    FeatureName = \"featureName\",\n    FeatureType = \"featureType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nFeatureDefinitionProperty featureDefinitionProperty = FeatureDefinitionProperty.builder()\n        .featureName(\"featureName\")\n        .featureType(\"featureType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nfeatureDefinitionProperty := &featureDefinitionProperty{\n\tfeatureName: jsii.String(\"featureName\"),\n\tfeatureType: jsii.String(\"featureType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst featureDefinitionProperty: sagemaker.CfnFeatureGroup.FeatureDefinitionProperty = {\n  featureName: 'featureName',\n  featureType: 'featureType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnFeatureGroup.FeatureDefinitionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnFeatureGroup.FeatureDefinitionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst featureDefinitionProperty: sagemaker.CfnFeatureGroup.FeatureDefinitionProperty = {\n  featureName: 'featureName',\n  featureType: 'featureType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "3fa4829c600b4770abf68f021dc83d614d887fbec0a0dfa4daadf43f34882465"
    },
    "dca3fc4da65776f595133b7c5069155d64dd8f0bd865e428dde0254d46614e8f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\n# offline_store_config: Any\n# online_store_config: Any\n\ncfn_feature_group_props = sagemaker.CfnFeatureGroupProps(\n    event_time_feature_name=\"eventTimeFeatureName\",\n    feature_definitions=[sagemaker.CfnFeatureGroup.FeatureDefinitionProperty(\n        feature_name=\"featureName\",\n        feature_type=\"featureType\"\n    )],\n    feature_group_name=\"featureGroupName\",\n    record_identifier_feature_name=\"recordIdentifierFeatureName\",\n\n    # the properties below are optional\n    description=\"description\",\n    offline_store_config=offline_store_config,\n    online_store_config=online_store_config,\n    role_arn=\"roleArn\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nvar offlineStoreConfig;\nvar onlineStoreConfig;\n\nCfnFeatureGroupProps cfnFeatureGroupProps = new CfnFeatureGroupProps {\n    EventTimeFeatureName = \"eventTimeFeatureName\",\n    FeatureDefinitions = new [] { new FeatureDefinitionProperty {\n        FeatureName = \"featureName\",\n        FeatureType = \"featureType\"\n    } },\n    FeatureGroupName = \"featureGroupName\",\n    RecordIdentifierFeatureName = \"recordIdentifierFeatureName\",\n\n    // the properties below are optional\n    Description = \"description\",\n    OfflineStoreConfig = offlineStoreConfig,\n    OnlineStoreConfig = onlineStoreConfig,\n    RoleArn = \"roleArn\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nObject offlineStoreConfig;\nObject onlineStoreConfig;\n\nCfnFeatureGroupProps cfnFeatureGroupProps = CfnFeatureGroupProps.builder()\n        .eventTimeFeatureName(\"eventTimeFeatureName\")\n        .featureDefinitions(List.of(FeatureDefinitionProperty.builder()\n                .featureName(\"featureName\")\n                .featureType(\"featureType\")\n                .build()))\n        .featureGroupName(\"featureGroupName\")\n        .recordIdentifierFeatureName(\"recordIdentifierFeatureName\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .offlineStoreConfig(offlineStoreConfig)\n        .onlineStoreConfig(onlineStoreConfig)\n        .roleArn(\"roleArn\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvar offlineStoreConfig interface{}\nvar onlineStoreConfig interface{}\n\ncfnFeatureGroupProps := &cfnFeatureGroupProps{\n\teventTimeFeatureName: jsii.String(\"eventTimeFeatureName\"),\n\tfeatureDefinitions: []interface{}{\n\t\t&featureDefinitionProperty{\n\t\t\tfeatureName: jsii.String(\"featureName\"),\n\t\t\tfeatureType: jsii.String(\"featureType\"),\n\t\t},\n\t},\n\tfeatureGroupName: jsii.String(\"featureGroupName\"),\n\trecordIdentifierFeatureName: jsii.String(\"recordIdentifierFeatureName\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tofflineStoreConfig: offlineStoreConfig,\n\tonlineStoreConfig: onlineStoreConfig,\n\troleArn: jsii.String(\"roleArn\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const offlineStoreConfig: any;\ndeclare const onlineStoreConfig: any;\nconst cfnFeatureGroupProps: sagemaker.CfnFeatureGroupProps = {\n  eventTimeFeatureName: 'eventTimeFeatureName',\n  featureDefinitions: [{\n    featureName: 'featureName',\n    featureType: 'featureType',\n  }],\n  featureGroupName: 'featureGroupName',\n  recordIdentifierFeatureName: 'recordIdentifierFeatureName',\n\n  // the properties below are optional\n  description: 'description',\n  offlineStoreConfig: offlineStoreConfig,\n  onlineStoreConfig: onlineStoreConfig,\n  roleArn: 'roleArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnFeatureGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnFeatureGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const offlineStoreConfig: any;\ndeclare const onlineStoreConfig: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnFeatureGroupProps: sagemaker.CfnFeatureGroupProps = {\n  eventTimeFeatureName: 'eventTimeFeatureName',\n  featureDefinitions: [{\n    featureName: 'featureName',\n    featureType: 'featureType',\n  }],\n  featureGroupName: 'featureGroupName',\n  recordIdentifierFeatureName: 'recordIdentifierFeatureName',\n\n  // the properties below are optional\n  description: 'description',\n  offlineStoreConfig: offlineStoreConfig,\n  onlineStoreConfig: onlineStoreConfig,\n  roleArn: 'roleArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 21,
        "125": 2,
        "130": 2,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "40fba23fcbcc6bfba84b7bbf674d844f85309e5ddd5688012cc1f322f737d2d9"
    },
    "961060f03016957762e226e2984a454180ae1d3590a148be3bfc150646c9c79c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_image = sagemaker.CfnImage(self, \"MyCfnImage\",\n    image_name=\"imageName\",\n    image_role_arn=\"imageRoleArn\",\n\n    # the properties below are optional\n    image_description=\"imageDescription\",\n    image_display_name=\"imageDisplayName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnImage cfnImage = new CfnImage(this, \"MyCfnImage\", new CfnImageProps {\n    ImageName = \"imageName\",\n    ImageRoleArn = \"imageRoleArn\",\n\n    // the properties below are optional\n    ImageDescription = \"imageDescription\",\n    ImageDisplayName = \"imageDisplayName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnImage cfnImage = CfnImage.Builder.create(this, \"MyCfnImage\")\n        .imageName(\"imageName\")\n        .imageRoleArn(\"imageRoleArn\")\n\n        // the properties below are optional\n        .imageDescription(\"imageDescription\")\n        .imageDisplayName(\"imageDisplayName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnImage := sagemaker.NewCfnImage(this, jsii.String(\"MyCfnImage\"), &cfnImageProps{\n\timageName: jsii.String(\"imageName\"),\n\timageRoleArn: jsii.String(\"imageRoleArn\"),\n\n\t// the properties below are optional\n\timageDescription: jsii.String(\"imageDescription\"),\n\timageDisplayName: jsii.String(\"imageDisplayName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnImage = new sagemaker.CfnImage(this, 'MyCfnImage', {\n  imageName: 'imageName',\n  imageRoleArn: 'imageRoleArn',\n\n  // the properties below are optional\n  imageDescription: 'imageDescription',\n  imageDisplayName: 'imageDisplayName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnImage"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnImage",
        "@aws-cdk/aws-sagemaker.CfnImageProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnImage = new sagemaker.CfnImage(this, 'MyCfnImage', {\n  imageName: 'imageName',\n  imageRoleArn: 'imageRoleArn',\n\n  // the properties below are optional\n  imageDescription: 'imageDescription',\n  imageDisplayName: 'imageDisplayName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 11,
        "104": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "bbae3f74d1a9d59ddec54b299dd466af3119e0ae6a757a7de36c6aa7d75a89fa"
    },
    "8546979e30449c12faffb97359da9fb86100703ef6584bd7ff513f2b1f29919d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_image_props = sagemaker.CfnImageProps(\n    image_name=\"imageName\",\n    image_role_arn=\"imageRoleArn\",\n\n    # the properties below are optional\n    image_description=\"imageDescription\",\n    image_display_name=\"imageDisplayName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnImageProps cfnImageProps = new CfnImageProps {\n    ImageName = \"imageName\",\n    ImageRoleArn = \"imageRoleArn\",\n\n    // the properties below are optional\n    ImageDescription = \"imageDescription\",\n    ImageDisplayName = \"imageDisplayName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnImageProps cfnImageProps = CfnImageProps.builder()\n        .imageName(\"imageName\")\n        .imageRoleArn(\"imageRoleArn\")\n\n        // the properties below are optional\n        .imageDescription(\"imageDescription\")\n        .imageDisplayName(\"imageDisplayName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnImageProps := &cfnImageProps{\n\timageName: jsii.String(\"imageName\"),\n\timageRoleArn: jsii.String(\"imageRoleArn\"),\n\n\t// the properties below are optional\n\timageDescription: jsii.String(\"imageDescription\"),\n\timageDisplayName: jsii.String(\"imageDisplayName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnImageProps: sagemaker.CfnImageProps = {\n  imageName: 'imageName',\n  imageRoleArn: 'imageRoleArn',\n\n  // the properties below are optional\n  imageDescription: 'imageDescription',\n  imageDisplayName: 'imageDisplayName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnImageProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnImageProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnImageProps: sagemaker.CfnImageProps = {\n  imageName: 'imageName',\n  imageRoleArn: 'imageRoleArn',\n\n  // the properties below are optional\n  imageDescription: 'imageDescription',\n  imageDisplayName: 'imageDisplayName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 11,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "28cc085615bdd6f41309c67d483e71b2684fff638542078a393294b9a640f24a"
    },
    "79bef01df02a2e003919c1a4133d3ecd20424259d04b0df2637fa39bd4162008": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_image_version = sagemaker.CfnImageVersion(self, \"MyCfnImageVersion\",\n    base_image=\"baseImage\",\n    image_name=\"imageName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnImageVersion cfnImageVersion = new CfnImageVersion(this, \"MyCfnImageVersion\", new CfnImageVersionProps {\n    BaseImage = \"baseImage\",\n    ImageName = \"imageName\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnImageVersion cfnImageVersion = CfnImageVersion.Builder.create(this, \"MyCfnImageVersion\")\n        .baseImage(\"baseImage\")\n        .imageName(\"imageName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnImageVersion := sagemaker.NewCfnImageVersion(this, jsii.String(\"MyCfnImageVersion\"), &cfnImageVersionProps{\n\tbaseImage: jsii.String(\"baseImage\"),\n\timageName: jsii.String(\"imageName\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnImageVersion = new sagemaker.CfnImageVersion(this, 'MyCfnImageVersion', {\n  baseImage: 'baseImage',\n  imageName: 'imageName',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnImageVersion"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnImageVersion",
        "@aws-cdk/aws-sagemaker.CfnImageVersionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnImageVersion = new sagemaker.CfnImageVersion(this, 'MyCfnImageVersion', {\n  baseImage: 'baseImage',\n  imageName: 'imageName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1ed921d72055610abcba5b644904b2326126c6b00128388c66c5652592ec1f4b"
    },
    "40832fd7deb13e6af10d3ed9fd863cad9983448f38315ecbe51495bbc2dd7c4c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_image_version_props = sagemaker.CfnImageVersionProps(\n    base_image=\"baseImage\",\n    image_name=\"imageName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnImageVersionProps cfnImageVersionProps = new CfnImageVersionProps {\n    BaseImage = \"baseImage\",\n    ImageName = \"imageName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnImageVersionProps cfnImageVersionProps = CfnImageVersionProps.builder()\n        .baseImage(\"baseImage\")\n        .imageName(\"imageName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnImageVersionProps := &cfnImageVersionProps{\n\tbaseImage: jsii.String(\"baseImage\"),\n\timageName: jsii.String(\"imageName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnImageVersionProps: sagemaker.CfnImageVersionProps = {\n  baseImage: 'baseImage',\n  imageName: 'imageName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnImageVersionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnImageVersionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnImageVersionProps: sagemaker.CfnImageVersionProps = {\n  baseImage: 'baseImage',\n  imageName: 'imageName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "f9a7f8fbf5c1ac49517f77d4a878371eee5cade058dcdf7662f9a3eb847f3c95"
    },
    "9bc55b75c045533b2bb93d1eaf3510a61a1341d1a98a675e83ee456f54b21653": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\n# environment: Any\n\ncfn_model = sagemaker.CfnModel(self, \"MyCfnModel\",\n    execution_role_arn=\"executionRoleArn\",\n\n    # the properties below are optional\n    containers=[sagemaker.CfnModel.ContainerDefinitionProperty(\n        container_hostname=\"containerHostname\",\n        environment=environment,\n        image=\"image\",\n        image_config=sagemaker.CfnModel.ImageConfigProperty(\n            repository_access_mode=\"repositoryAccessMode\",\n\n            # the properties below are optional\n            repository_auth_config=sagemaker.CfnModel.RepositoryAuthConfigProperty(\n                repository_credentials_provider_arn=\"repositoryCredentialsProviderArn\"\n            )\n        ),\n        inference_specification_name=\"inferenceSpecificationName\",\n        mode=\"mode\",\n        model_data_url=\"modelDataUrl\",\n        model_package_name=\"modelPackageName\",\n        multi_model_config=sagemaker.CfnModel.MultiModelConfigProperty(\n            model_cache_setting=\"modelCacheSetting\"\n        )\n    )],\n    enable_network_isolation=False,\n    inference_execution_config=sagemaker.CfnModel.InferenceExecutionConfigProperty(\n        mode=\"mode\"\n    ),\n    model_name=\"modelName\",\n    primary_container=sagemaker.CfnModel.ContainerDefinitionProperty(\n        container_hostname=\"containerHostname\",\n        environment=environment,\n        image=\"image\",\n        image_config=sagemaker.CfnModel.ImageConfigProperty(\n            repository_access_mode=\"repositoryAccessMode\",\n\n            # the properties below are optional\n            repository_auth_config=sagemaker.CfnModel.RepositoryAuthConfigProperty(\n                repository_credentials_provider_arn=\"repositoryCredentialsProviderArn\"\n            )\n        ),\n        inference_specification_name=\"inferenceSpecificationName\",\n        mode=\"mode\",\n        model_data_url=\"modelDataUrl\",\n        model_package_name=\"modelPackageName\",\n        multi_model_config=sagemaker.CfnModel.MultiModelConfigProperty(\n            model_cache_setting=\"modelCacheSetting\"\n        )\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    vpc_config=sagemaker.CfnModel.VpcConfigProperty(\n        security_group_ids=[\"securityGroupIds\"],\n        subnets=[\"subnets\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nvar environment;\n\nCfnModel cfnModel = new CfnModel(this, \"MyCfnModel\", new CfnModelProps {\n    ExecutionRoleArn = \"executionRoleArn\",\n\n    // the properties below are optional\n    Containers = new [] { new ContainerDefinitionProperty {\n        ContainerHostname = \"containerHostname\",\n        Environment = environment,\n        Image = \"image\",\n        ImageConfig = new ImageConfigProperty {\n            RepositoryAccessMode = \"repositoryAccessMode\",\n\n            // the properties below are optional\n            RepositoryAuthConfig = new RepositoryAuthConfigProperty {\n                RepositoryCredentialsProviderArn = \"repositoryCredentialsProviderArn\"\n            }\n        },\n        InferenceSpecificationName = \"inferenceSpecificationName\",\n        Mode = \"mode\",\n        ModelDataUrl = \"modelDataUrl\",\n        ModelPackageName = \"modelPackageName\",\n        MultiModelConfig = new MultiModelConfigProperty {\n            ModelCacheSetting = \"modelCacheSetting\"\n        }\n    } },\n    EnableNetworkIsolation = false,\n    InferenceExecutionConfig = new InferenceExecutionConfigProperty {\n        Mode = \"mode\"\n    },\n    ModelName = \"modelName\",\n    PrimaryContainer = new ContainerDefinitionProperty {\n        ContainerHostname = \"containerHostname\",\n        Environment = environment,\n        Image = \"image\",\n        ImageConfig = new ImageConfigProperty {\n            RepositoryAccessMode = \"repositoryAccessMode\",\n\n            // the properties below are optional\n            RepositoryAuthConfig = new RepositoryAuthConfigProperty {\n                RepositoryCredentialsProviderArn = \"repositoryCredentialsProviderArn\"\n            }\n        },\n        InferenceSpecificationName = \"inferenceSpecificationName\",\n        Mode = \"mode\",\n        ModelDataUrl = \"modelDataUrl\",\n        ModelPackageName = \"modelPackageName\",\n        MultiModelConfig = new MultiModelConfigProperty {\n            ModelCacheSetting = \"modelCacheSetting\"\n        }\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VpcConfig = new VpcConfigProperty {\n        SecurityGroupIds = new [] { \"securityGroupIds\" },\n        Subnets = new [] { \"subnets\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nObject environment;\n\nCfnModel cfnModel = CfnModel.Builder.create(this, \"MyCfnModel\")\n        .executionRoleArn(\"executionRoleArn\")\n\n        // the properties below are optional\n        .containers(List.of(ContainerDefinitionProperty.builder()\n                .containerHostname(\"containerHostname\")\n                .environment(environment)\n                .image(\"image\")\n                .imageConfig(ImageConfigProperty.builder()\n                        .repositoryAccessMode(\"repositoryAccessMode\")\n\n                        // the properties below are optional\n                        .repositoryAuthConfig(RepositoryAuthConfigProperty.builder()\n                                .repositoryCredentialsProviderArn(\"repositoryCredentialsProviderArn\")\n                                .build())\n                        .build())\n                .inferenceSpecificationName(\"inferenceSpecificationName\")\n                .mode(\"mode\")\n                .modelDataUrl(\"modelDataUrl\")\n                .modelPackageName(\"modelPackageName\")\n                .multiModelConfig(MultiModelConfigProperty.builder()\n                        .modelCacheSetting(\"modelCacheSetting\")\n                        .build())\n                .build()))\n        .enableNetworkIsolation(false)\n        .inferenceExecutionConfig(InferenceExecutionConfigProperty.builder()\n                .mode(\"mode\")\n                .build())\n        .modelName(\"modelName\")\n        .primaryContainer(ContainerDefinitionProperty.builder()\n                .containerHostname(\"containerHostname\")\n                .environment(environment)\n                .image(\"image\")\n                .imageConfig(ImageConfigProperty.builder()\n                        .repositoryAccessMode(\"repositoryAccessMode\")\n\n                        // the properties below are optional\n                        .repositoryAuthConfig(RepositoryAuthConfigProperty.builder()\n                                .repositoryCredentialsProviderArn(\"repositoryCredentialsProviderArn\")\n                                .build())\n                        .build())\n                .inferenceSpecificationName(\"inferenceSpecificationName\")\n                .mode(\"mode\")\n                .modelDataUrl(\"modelDataUrl\")\n                .modelPackageName(\"modelPackageName\")\n                .multiModelConfig(MultiModelConfigProperty.builder()\n                        .modelCacheSetting(\"modelCacheSetting\")\n                        .build())\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .vpcConfig(VpcConfigProperty.builder()\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .subnets(List.of(\"subnets\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvar environment interface{}\n\ncfnModel := sagemaker.NewCfnModel(this, jsii.String(\"MyCfnModel\"), &cfnModelProps{\n\texecutionRoleArn: jsii.String(\"executionRoleArn\"),\n\n\t// the properties below are optional\n\tcontainers: []interface{}{\n\t\t&containerDefinitionProperty{\n\t\t\tcontainerHostname: jsii.String(\"containerHostname\"),\n\t\t\tenvironment: environment,\n\t\t\timage: jsii.String(\"image\"),\n\t\t\timageConfig: &imageConfigProperty{\n\t\t\t\trepositoryAccessMode: jsii.String(\"repositoryAccessMode\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\trepositoryAuthConfig: &repositoryAuthConfigProperty{\n\t\t\t\t\trepositoryCredentialsProviderArn: jsii.String(\"repositoryCredentialsProviderArn\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tinferenceSpecificationName: jsii.String(\"inferenceSpecificationName\"),\n\t\t\tmode: jsii.String(\"mode\"),\n\t\t\tmodelDataUrl: jsii.String(\"modelDataUrl\"),\n\t\t\tmodelPackageName: jsii.String(\"modelPackageName\"),\n\t\t\tmultiModelConfig: &multiModelConfigProperty{\n\t\t\t\tmodelCacheSetting: jsii.String(\"modelCacheSetting\"),\n\t\t\t},\n\t\t},\n\t},\n\tenableNetworkIsolation: jsii.Boolean(false),\n\tinferenceExecutionConfig: &inferenceExecutionConfigProperty{\n\t\tmode: jsii.String(\"mode\"),\n\t},\n\tmodelName: jsii.String(\"modelName\"),\n\tprimaryContainer: &containerDefinitionProperty{\n\t\tcontainerHostname: jsii.String(\"containerHostname\"),\n\t\tenvironment: environment,\n\t\timage: jsii.String(\"image\"),\n\t\timageConfig: &imageConfigProperty{\n\t\t\trepositoryAccessMode: jsii.String(\"repositoryAccessMode\"),\n\n\t\t\t// the properties below are optional\n\t\t\trepositoryAuthConfig: &repositoryAuthConfigProperty{\n\t\t\t\trepositoryCredentialsProviderArn: jsii.String(\"repositoryCredentialsProviderArn\"),\n\t\t\t},\n\t\t},\n\t\tinferenceSpecificationName: jsii.String(\"inferenceSpecificationName\"),\n\t\tmode: jsii.String(\"mode\"),\n\t\tmodelDataUrl: jsii.String(\"modelDataUrl\"),\n\t\tmodelPackageName: jsii.String(\"modelPackageName\"),\n\t\tmultiModelConfig: &multiModelConfigProperty{\n\t\t\tmodelCacheSetting: jsii.String(\"modelCacheSetting\"),\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tvpcConfig: &vpcConfigProperty{\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t\tsubnets: []*string{\n\t\t\tjsii.String(\"subnets\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const environment: any;\nconst cfnModel = new sagemaker.CfnModel(this, 'MyCfnModel', {\n  executionRoleArn: 'executionRoleArn',\n\n  // the properties below are optional\n  containers: [{\n    containerHostname: 'containerHostname',\n    environment: environment,\n    image: 'image',\n    imageConfig: {\n      repositoryAccessMode: 'repositoryAccessMode',\n\n      // the properties below are optional\n      repositoryAuthConfig: {\n        repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n      },\n    },\n    inferenceSpecificationName: 'inferenceSpecificationName',\n    mode: 'mode',\n    modelDataUrl: 'modelDataUrl',\n    modelPackageName: 'modelPackageName',\n    multiModelConfig: {\n      modelCacheSetting: 'modelCacheSetting',\n    },\n  }],\n  enableNetworkIsolation: false,\n  inferenceExecutionConfig: {\n    mode: 'mode',\n  },\n  modelName: 'modelName',\n  primaryContainer: {\n    containerHostname: 'containerHostname',\n    environment: environment,\n    image: 'image',\n    imageConfig: {\n      repositoryAccessMode: 'repositoryAccessMode',\n\n      // the properties below are optional\n      repositoryAuthConfig: {\n        repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n      },\n    },\n    inferenceSpecificationName: 'inferenceSpecificationName',\n    mode: 'mode',\n    modelDataUrl: 'modelDataUrl',\n    modelPackageName: 'modelPackageName',\n    multiModelConfig: {\n      modelCacheSetting: 'modelCacheSetting',\n    },\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModel"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModel",
        "@aws-cdk/aws-sagemaker.CfnModelProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const environment: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnModel = new sagemaker.CfnModel(this, 'MyCfnModel', {\n  executionRoleArn: 'executionRoleArn',\n\n  // the properties below are optional\n  containers: [{\n    containerHostname: 'containerHostname',\n    environment: environment,\n    image: 'image',\n    imageConfig: {\n      repositoryAccessMode: 'repositoryAccessMode',\n\n      // the properties below are optional\n      repositoryAuthConfig: {\n        repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n      },\n    },\n    inferenceSpecificationName: 'inferenceSpecificationName',\n    mode: 'mode',\n    modelDataUrl: 'modelDataUrl',\n    modelPackageName: 'modelPackageName',\n    multiModelConfig: {\n      modelCacheSetting: 'modelCacheSetting',\n    },\n  }],\n  enableNetworkIsolation: false,\n  inferenceExecutionConfig: {\n    mode: 'mode',\n  },\n  modelName: 'modelName',\n  primaryContainer: {\n    containerHostname: 'containerHostname',\n    environment: environment,\n    image: 'image',\n    imageConfig: {\n      repositoryAccessMode: 'repositoryAccessMode',\n\n      // the properties below are optional\n      repositoryAuthConfig: {\n        repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n      },\n    },\n    inferenceSpecificationName: 'inferenceSpecificationName',\n    mode: 'mode',\n    modelDataUrl: 'modelDataUrl',\n    modelPackageName: 'modelPackageName',\n    multiModelConfig: {\n      modelCacheSetting: 'modelCacheSetting',\n    },\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 27,
        "75": 46,
        "91": 1,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 4,
        "193": 12,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 39,
        "290": 1
      },
      "fqnsFingerprint": "37c2bc5bbf8550dc7d71cc1dc8ac829bdf3eb0140f1a662993db92c19790f4c4"
    },
    "30547e3f1c7ac337c0be8ff805d494cc369b07a3664b2c9328e6e2d8d4c2ef8b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\n# environment: Any\n\ncontainer_definition_property = sagemaker.CfnModel.ContainerDefinitionProperty(\n    container_hostname=\"containerHostname\",\n    environment=environment,\n    image=\"image\",\n    image_config=sagemaker.CfnModel.ImageConfigProperty(\n        repository_access_mode=\"repositoryAccessMode\",\n\n        # the properties below are optional\n        repository_auth_config=sagemaker.CfnModel.RepositoryAuthConfigProperty(\n            repository_credentials_provider_arn=\"repositoryCredentialsProviderArn\"\n        )\n    ),\n    inference_specification_name=\"inferenceSpecificationName\",\n    mode=\"mode\",\n    model_data_url=\"modelDataUrl\",\n    model_package_name=\"modelPackageName\",\n    multi_model_config=sagemaker.CfnModel.MultiModelConfigProperty(\n        model_cache_setting=\"modelCacheSetting\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nvar environment;\n\nContainerDefinitionProperty containerDefinitionProperty = new ContainerDefinitionProperty {\n    ContainerHostname = \"containerHostname\",\n    Environment = environment,\n    Image = \"image\",\n    ImageConfig = new ImageConfigProperty {\n        RepositoryAccessMode = \"repositoryAccessMode\",\n\n        // the properties below are optional\n        RepositoryAuthConfig = new RepositoryAuthConfigProperty {\n            RepositoryCredentialsProviderArn = \"repositoryCredentialsProviderArn\"\n        }\n    },\n    InferenceSpecificationName = \"inferenceSpecificationName\",\n    Mode = \"mode\",\n    ModelDataUrl = \"modelDataUrl\",\n    ModelPackageName = \"modelPackageName\",\n    MultiModelConfig = new MultiModelConfigProperty {\n        ModelCacheSetting = \"modelCacheSetting\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nObject environment;\n\nContainerDefinitionProperty containerDefinitionProperty = ContainerDefinitionProperty.builder()\n        .containerHostname(\"containerHostname\")\n        .environment(environment)\n        .image(\"image\")\n        .imageConfig(ImageConfigProperty.builder()\n                .repositoryAccessMode(\"repositoryAccessMode\")\n\n                // the properties below are optional\n                .repositoryAuthConfig(RepositoryAuthConfigProperty.builder()\n                        .repositoryCredentialsProviderArn(\"repositoryCredentialsProviderArn\")\n                        .build())\n                .build())\n        .inferenceSpecificationName(\"inferenceSpecificationName\")\n        .mode(\"mode\")\n        .modelDataUrl(\"modelDataUrl\")\n        .modelPackageName(\"modelPackageName\")\n        .multiModelConfig(MultiModelConfigProperty.builder()\n                .modelCacheSetting(\"modelCacheSetting\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvar environment interface{}\n\ncontainerDefinitionProperty := &containerDefinitionProperty{\n\tcontainerHostname: jsii.String(\"containerHostname\"),\n\tenvironment: environment,\n\timage: jsii.String(\"image\"),\n\timageConfig: &imageConfigProperty{\n\t\trepositoryAccessMode: jsii.String(\"repositoryAccessMode\"),\n\n\t\t// the properties below are optional\n\t\trepositoryAuthConfig: &repositoryAuthConfigProperty{\n\t\t\trepositoryCredentialsProviderArn: jsii.String(\"repositoryCredentialsProviderArn\"),\n\t\t},\n\t},\n\tinferenceSpecificationName: jsii.String(\"inferenceSpecificationName\"),\n\tmode: jsii.String(\"mode\"),\n\tmodelDataUrl: jsii.String(\"modelDataUrl\"),\n\tmodelPackageName: jsii.String(\"modelPackageName\"),\n\tmultiModelConfig: &multiModelConfigProperty{\n\t\tmodelCacheSetting: jsii.String(\"modelCacheSetting\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const environment: any;\nconst containerDefinitionProperty: sagemaker.CfnModel.ContainerDefinitionProperty = {\n  containerHostname: 'containerHostname',\n  environment: environment,\n  image: 'image',\n  imageConfig: {\n    repositoryAccessMode: 'repositoryAccessMode',\n\n    // the properties below are optional\n    repositoryAuthConfig: {\n      repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n    },\n  },\n  inferenceSpecificationName: 'inferenceSpecificationName',\n  mode: 'mode',\n  modelDataUrl: 'modelDataUrl',\n  modelPackageName: 'modelPackageName',\n  multiModelConfig: {\n    modelCacheSetting: 'modelCacheSetting',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModel.ContainerDefinitionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModel.ContainerDefinitionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const environment: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst containerDefinitionProperty: sagemaker.CfnModel.ContainerDefinitionProperty = {\n  containerHostname: 'containerHostname',\n  environment: environment,\n  image: 'image',\n  imageConfig: {\n    repositoryAccessMode: 'repositoryAccessMode',\n\n    // the properties below are optional\n    repositoryAuthConfig: {\n      repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n    },\n  },\n  inferenceSpecificationName: 'inferenceSpecificationName',\n  mode: 'mode',\n  modelDataUrl: 'modelDataUrl',\n  modelPackageName: 'modelPackageName',\n  multiModelConfig: {\n    modelCacheSetting: 'modelCacheSetting',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 20,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "a14a78d79d36689cde06d678e59a63c598b6f9e3cf7893bd96c93b9d0ba042bf"
    },
    "8b0b02dc2e558f69de378f07cd3b92ba8a846af41f18942efffa36ec392cf638": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nimage_config_property = sagemaker.CfnModel.ImageConfigProperty(\n    repository_access_mode=\"repositoryAccessMode\",\n\n    # the properties below are optional\n    repository_auth_config=sagemaker.CfnModel.RepositoryAuthConfigProperty(\n        repository_credentials_provider_arn=\"repositoryCredentialsProviderArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nImageConfigProperty imageConfigProperty = new ImageConfigProperty {\n    RepositoryAccessMode = \"repositoryAccessMode\",\n\n    // the properties below are optional\n    RepositoryAuthConfig = new RepositoryAuthConfigProperty {\n        RepositoryCredentialsProviderArn = \"repositoryCredentialsProviderArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nImageConfigProperty imageConfigProperty = ImageConfigProperty.builder()\n        .repositoryAccessMode(\"repositoryAccessMode\")\n\n        // the properties below are optional\n        .repositoryAuthConfig(RepositoryAuthConfigProperty.builder()\n                .repositoryCredentialsProviderArn(\"repositoryCredentialsProviderArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nimageConfigProperty := &imageConfigProperty{\n\trepositoryAccessMode: jsii.String(\"repositoryAccessMode\"),\n\n\t// the properties below are optional\n\trepositoryAuthConfig: &repositoryAuthConfigProperty{\n\t\trepositoryCredentialsProviderArn: jsii.String(\"repositoryCredentialsProviderArn\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst imageConfigProperty: sagemaker.CfnModel.ImageConfigProperty = {\n  repositoryAccessMode: 'repositoryAccessMode',\n\n  // the properties below are optional\n  repositoryAuthConfig: {\n    repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModel.ImageConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModel.ImageConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst imageConfigProperty: sagemaker.CfnModel.ImageConfigProperty = {\n  repositoryAccessMode: 'repositoryAccessMode',\n\n  // the properties below are optional\n  repositoryAuthConfig: {\n    repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "7d97395b2fdbb99ba1f1d6139477c018b5f936c73b698e2184438fad1281c7dc"
    },
    "4fee350d05f9970587d5a8fcd7db96d2f67ce18fe37cdcb5a80af3c5bb72b4eb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ninference_execution_config_property = sagemaker.CfnModel.InferenceExecutionConfigProperty(\n    mode=\"mode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nInferenceExecutionConfigProperty inferenceExecutionConfigProperty = new InferenceExecutionConfigProperty {\n    Mode = \"mode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nInferenceExecutionConfigProperty inferenceExecutionConfigProperty = InferenceExecutionConfigProperty.builder()\n        .mode(\"mode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ninferenceExecutionConfigProperty := &inferenceExecutionConfigProperty{\n\tmode: jsii.String(\"mode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst inferenceExecutionConfigProperty: sagemaker.CfnModel.InferenceExecutionConfigProperty = {\n  mode: 'mode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModel.InferenceExecutionConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModel.InferenceExecutionConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inferenceExecutionConfigProperty: sagemaker.CfnModel.InferenceExecutionConfigProperty = {\n  mode: 'mode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "95a05bb4cb21676504a6483794f3fd2ccd99ac300a0c9cd82169f4293bd97c24"
    },
    "135a1d7012fe013cb6b1f9e9c25321a6d54a963e7b7f6ad917d3b56e5235c785": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmulti_model_config_property = sagemaker.CfnModel.MultiModelConfigProperty(\n    model_cache_setting=\"modelCacheSetting\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMultiModelConfigProperty multiModelConfigProperty = new MultiModelConfigProperty {\n    ModelCacheSetting = \"modelCacheSetting\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMultiModelConfigProperty multiModelConfigProperty = MultiModelConfigProperty.builder()\n        .modelCacheSetting(\"modelCacheSetting\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmultiModelConfigProperty := &multiModelConfigProperty{\n\tmodelCacheSetting: jsii.String(\"modelCacheSetting\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst multiModelConfigProperty: sagemaker.CfnModel.MultiModelConfigProperty = {\n  modelCacheSetting: 'modelCacheSetting',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModel.MultiModelConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModel.MultiModelConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst multiModelConfigProperty: sagemaker.CfnModel.MultiModelConfigProperty = {\n  modelCacheSetting: 'modelCacheSetting',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "8e87830f9a4468619ef859f6f901e42e724f643cbcf3a534318a6a096903f4cb"
    },
    "706a89933c5a2ec99da1a1ac4510350a63a1bfa062521505676907d63db21509": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nrepository_auth_config_property = sagemaker.CfnModel.RepositoryAuthConfigProperty(\n    repository_credentials_provider_arn=\"repositoryCredentialsProviderArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nRepositoryAuthConfigProperty repositoryAuthConfigProperty = new RepositoryAuthConfigProperty {\n    RepositoryCredentialsProviderArn = \"repositoryCredentialsProviderArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nRepositoryAuthConfigProperty repositoryAuthConfigProperty = RepositoryAuthConfigProperty.builder()\n        .repositoryCredentialsProviderArn(\"repositoryCredentialsProviderArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nrepositoryAuthConfigProperty := &repositoryAuthConfigProperty{\n\trepositoryCredentialsProviderArn: jsii.String(\"repositoryCredentialsProviderArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst repositoryAuthConfigProperty: sagemaker.CfnModel.RepositoryAuthConfigProperty = {\n  repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModel.RepositoryAuthConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModel.RepositoryAuthConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst repositoryAuthConfigProperty: sagemaker.CfnModel.RepositoryAuthConfigProperty = {\n  repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "f107fa70a9f6b4e17e818276c8037281323968edda0e9deed66c3899e5657dfd"
    },
    "ad0b5df5a960fff41d3f6db5a48bc910de60ed180b7705c362ca2483fbbfcf71": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nvpc_config_property = sagemaker.CfnModel.VpcConfigProperty(\n    security_group_ids=[\"securityGroupIds\"],\n    subnets=[\"subnets\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nVpcConfigProperty vpcConfigProperty = new VpcConfigProperty {\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    Subnets = new [] { \"subnets\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nVpcConfigProperty vpcConfigProperty = VpcConfigProperty.builder()\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .subnets(List.of(\"subnets\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvpcConfigProperty := &vpcConfigProperty{\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsubnets: []*string{\n\t\tjsii.String(\"subnets\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst vpcConfigProperty: sagemaker.CfnModel.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnets: ['subnets'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModel.VpcConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModel.VpcConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vpcConfigProperty: sagemaker.CfnModel.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnets: ['subnets'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "87b369c1da28cd9fe280b368015cc63cde62a56bd4dbec41cc6830a50c51713c"
    },
    "1da6096b7680d7584624cc713bc1e513aa0ef479a9aaecf4ccf7688f4c487658": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_model_bias_job_definition = sagemaker.CfnModelBiasJobDefinition(self, \"MyCfnModelBiasJobDefinition\",\n    job_resources=sagemaker.CfnModelBiasJobDefinition.MonitoringResourcesProperty(\n        cluster_config=sagemaker.CfnModelBiasJobDefinition.ClusterConfigProperty(\n            instance_count=123,\n            instance_type=\"instanceType\",\n            volume_size_in_gb=123,\n\n            # the properties below are optional\n            volume_kms_key_id=\"volumeKmsKeyId\"\n        )\n    ),\n    model_bias_app_specification=sagemaker.CfnModelBiasJobDefinition.ModelBiasAppSpecificationProperty(\n        config_uri=\"configUri\",\n        image_uri=\"imageUri\",\n\n        # the properties below are optional\n        environment={\n            \"environment_key\": \"environment\"\n        }\n    ),\n    model_bias_job_input=sagemaker.CfnModelBiasJobDefinition.ModelBiasJobInputProperty(\n        endpoint_input=sagemaker.CfnModelBiasJobDefinition.EndpointInputProperty(\n            endpoint_name=\"endpointName\",\n            local_path=\"localPath\",\n\n            # the properties below are optional\n            end_time_offset=\"endTimeOffset\",\n            features_attribute=\"featuresAttribute\",\n            inference_attribute=\"inferenceAttribute\",\n            probability_attribute=\"probabilityAttribute\",\n            probability_threshold_attribute=123,\n            s3_data_distribution_type=\"s3DataDistributionType\",\n            s3_input_mode=\"s3InputMode\",\n            start_time_offset=\"startTimeOffset\"\n        ),\n        ground_truth_s3_input=sagemaker.CfnModelBiasJobDefinition.MonitoringGroundTruthS3InputProperty(\n            s3_uri=\"s3Uri\"\n        )\n    ),\n    model_bias_job_output_config=sagemaker.CfnModelBiasJobDefinition.MonitoringOutputConfigProperty(\n        monitoring_outputs=[sagemaker.CfnModelBiasJobDefinition.MonitoringOutputProperty(\n            s3_output=sagemaker.CfnModelBiasJobDefinition.S3OutputProperty(\n                local_path=\"localPath\",\n                s3_uri=\"s3Uri\",\n\n                # the properties below are optional\n                s3_upload_mode=\"s3UploadMode\"\n            )\n        )],\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    job_definition_name=\"jobDefinitionName\",\n    model_bias_baseline_config=sagemaker.CfnModelBiasJobDefinition.ModelBiasBaselineConfigProperty(\n        baselining_job_name=\"baseliningJobName\",\n        constraints_resource=sagemaker.CfnModelBiasJobDefinition.ConstraintsResourceProperty(\n            s3_uri=\"s3Uri\"\n        )\n    ),\n    network_config=sagemaker.CfnModelBiasJobDefinition.NetworkConfigProperty(\n        enable_inter_container_traffic_encryption=False,\n        enable_network_isolation=False,\n        vpc_config=sagemaker.CfnModelBiasJobDefinition.VpcConfigProperty(\n            security_group_ids=[\"securityGroupIds\"],\n            subnets=[\"subnets\"]\n        )\n    ),\n    stopping_condition=sagemaker.CfnModelBiasJobDefinition.StoppingConditionProperty(\n        max_runtime_in_seconds=123\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnModelBiasJobDefinition cfnModelBiasJobDefinition = new CfnModelBiasJobDefinition(this, \"MyCfnModelBiasJobDefinition\", new CfnModelBiasJobDefinitionProps {\n    JobResources = new MonitoringResourcesProperty {\n        ClusterConfig = new ClusterConfigProperty {\n            InstanceCount = 123,\n            InstanceType = \"instanceType\",\n            VolumeSizeInGb = 123,\n\n            // the properties below are optional\n            VolumeKmsKeyId = \"volumeKmsKeyId\"\n        }\n    },\n    ModelBiasAppSpecification = new ModelBiasAppSpecificationProperty {\n        ConfigUri = \"configUri\",\n        ImageUri = \"imageUri\",\n\n        // the properties below are optional\n        Environment = new Dictionary<string, string> {\n            { \"environmentKey\", \"environment\" }\n        }\n    },\n    ModelBiasJobInput = new ModelBiasJobInputProperty {\n        EndpointInput = new EndpointInputProperty {\n            EndpointName = \"endpointName\",\n            LocalPath = \"localPath\",\n\n            // the properties below are optional\n            EndTimeOffset = \"endTimeOffset\",\n            FeaturesAttribute = \"featuresAttribute\",\n            InferenceAttribute = \"inferenceAttribute\",\n            ProbabilityAttribute = \"probabilityAttribute\",\n            ProbabilityThresholdAttribute = 123,\n            S3DataDistributionType = \"s3DataDistributionType\",\n            S3InputMode = \"s3InputMode\",\n            StartTimeOffset = \"startTimeOffset\"\n        },\n        GroundTruthS3Input = new MonitoringGroundTruthS3InputProperty {\n            S3Uri = \"s3Uri\"\n        }\n    },\n    ModelBiasJobOutputConfig = new MonitoringOutputConfigProperty {\n        MonitoringOutputs = new [] { new MonitoringOutputProperty {\n            S3Output = new S3OutputProperty {\n                LocalPath = \"localPath\",\n                S3Uri = \"s3Uri\",\n\n                // the properties below are optional\n                S3UploadMode = \"s3UploadMode\"\n            }\n        } },\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    JobDefinitionName = \"jobDefinitionName\",\n    ModelBiasBaselineConfig = new ModelBiasBaselineConfigProperty {\n        BaseliningJobName = \"baseliningJobName\",\n        ConstraintsResource = new ConstraintsResourceProperty {\n            S3Uri = \"s3Uri\"\n        }\n    },\n    NetworkConfig = new NetworkConfigProperty {\n        EnableInterContainerTrafficEncryption = false,\n        EnableNetworkIsolation = false,\n        VpcConfig = new VpcConfigProperty {\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            Subnets = new [] { \"subnets\" }\n        }\n    },\n    StoppingCondition = new StoppingConditionProperty {\n        MaxRuntimeInSeconds = 123\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnModelBiasJobDefinition cfnModelBiasJobDefinition = CfnModelBiasJobDefinition.Builder.create(this, \"MyCfnModelBiasJobDefinition\")\n        .jobResources(MonitoringResourcesProperty.builder()\n                .clusterConfig(ClusterConfigProperty.builder()\n                        .instanceCount(123)\n                        .instanceType(\"instanceType\")\n                        .volumeSizeInGb(123)\n\n                        // the properties below are optional\n                        .volumeKmsKeyId(\"volumeKmsKeyId\")\n                        .build())\n                .build())\n        .modelBiasAppSpecification(ModelBiasAppSpecificationProperty.builder()\n                .configUri(\"configUri\")\n                .imageUri(\"imageUri\")\n\n                // the properties below are optional\n                .environment(Map.of(\n                        \"environmentKey\", \"environment\"))\n                .build())\n        .modelBiasJobInput(ModelBiasJobInputProperty.builder()\n                .endpointInput(EndpointInputProperty.builder()\n                        .endpointName(\"endpointName\")\n                        .localPath(\"localPath\")\n\n                        // the properties below are optional\n                        .endTimeOffset(\"endTimeOffset\")\n                        .featuresAttribute(\"featuresAttribute\")\n                        .inferenceAttribute(\"inferenceAttribute\")\n                        .probabilityAttribute(\"probabilityAttribute\")\n                        .probabilityThresholdAttribute(123)\n                        .s3DataDistributionType(\"s3DataDistributionType\")\n                        .s3InputMode(\"s3InputMode\")\n                        .startTimeOffset(\"startTimeOffset\")\n                        .build())\n                .groundTruthS3Input(MonitoringGroundTruthS3InputProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .build())\n        .modelBiasJobOutputConfig(MonitoringOutputConfigProperty.builder()\n                .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                        .s3Output(S3OutputProperty.builder()\n                                .localPath(\"localPath\")\n                                .s3Uri(\"s3Uri\")\n\n                                // the properties below are optional\n                                .s3UploadMode(\"s3UploadMode\")\n                                .build())\n                        .build()))\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .jobDefinitionName(\"jobDefinitionName\")\n        .modelBiasBaselineConfig(ModelBiasBaselineConfigProperty.builder()\n                .baseliningJobName(\"baseliningJobName\")\n                .constraintsResource(ConstraintsResourceProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .build())\n        .networkConfig(NetworkConfigProperty.builder()\n                .enableInterContainerTrafficEncryption(false)\n                .enableNetworkIsolation(false)\n                .vpcConfig(VpcConfigProperty.builder()\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnets(List.of(\"subnets\"))\n                        .build())\n                .build())\n        .stoppingCondition(StoppingConditionProperty.builder()\n                .maxRuntimeInSeconds(123)\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnModelBiasJobDefinition := sagemaker.NewCfnModelBiasJobDefinition(this, jsii.String(\"MyCfnModelBiasJobDefinition\"), &cfnModelBiasJobDefinitionProps{\n\tjobResources: &monitoringResourcesProperty{\n\t\tclusterConfig: &clusterConfigProperty{\n\t\t\tinstanceCount: jsii.Number(123),\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t\t},\n\t},\n\tmodelBiasAppSpecification: &modelBiasAppSpecificationProperty{\n\t\tconfigUri: jsii.String(\"configUri\"),\n\t\timageUri: jsii.String(\"imageUri\"),\n\n\t\t// the properties below are optional\n\t\tenvironment: map[string]*string{\n\t\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t\t},\n\t},\n\tmodelBiasJobInput: &modelBiasJobInputProperty{\n\t\tendpointInput: &endpointInputProperty{\n\t\t\tendpointName: jsii.String(\"endpointName\"),\n\t\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t\t// the properties below are optional\n\t\t\tendTimeOffset: jsii.String(\"endTimeOffset\"),\n\t\t\tfeaturesAttribute: jsii.String(\"featuresAttribute\"),\n\t\t\tinferenceAttribute: jsii.String(\"inferenceAttribute\"),\n\t\t\tprobabilityAttribute: jsii.String(\"probabilityAttribute\"),\n\t\t\tprobabilityThresholdAttribute: jsii.Number(123),\n\t\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\t\tstartTimeOffset: jsii.String(\"startTimeOffset\"),\n\t\t},\n\t\tgroundTruthS3Input: &monitoringGroundTruthS3InputProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t},\n\tmodelBiasJobOutputConfig: &monitoringOutputConfigProperty{\n\t\tmonitoringOutputs: []interface{}{\n\t\t\t&monitoringOutputProperty{\n\t\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tjobDefinitionName: jsii.String(\"jobDefinitionName\"),\n\tmodelBiasBaselineConfig: &modelBiasBaselineConfigProperty{\n\t\tbaseliningJobName: jsii.String(\"baseliningJobName\"),\n\t\tconstraintsResource: &constraintsResourceProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t},\n\tnetworkConfig: &networkConfigProperty{\n\t\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\t\tenableNetworkIsolation: jsii.Boolean(false),\n\t\tvpcConfig: &vpcConfigProperty{\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnets: []*string{\n\t\t\t\tjsii.String(\"subnets\"),\n\t\t\t},\n\t\t},\n\t},\n\tstoppingCondition: &stoppingConditionProperty{\n\t\tmaxRuntimeInSeconds: jsii.Number(123),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnModelBiasJobDefinition = new sagemaker.CfnModelBiasJobDefinition(this, 'MyCfnModelBiasJobDefinition', {\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  modelBiasAppSpecification: {\n    configUri: 'configUri',\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    environment: {\n      environmentKey: 'environment',\n    },\n  },\n  modelBiasJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      endTimeOffset: 'endTimeOffset',\n      featuresAttribute: 'featuresAttribute',\n      inferenceAttribute: 'inferenceAttribute',\n      probabilityAttribute: 'probabilityAttribute',\n      probabilityThresholdAttribute: 123,\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n      startTimeOffset: 'startTimeOffset',\n    },\n    groundTruthS3Input: {\n      s3Uri: 's3Uri',\n    },\n  },\n  modelBiasJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  jobDefinitionName: 'jobDefinitionName',\n  modelBiasBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition",
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinitionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnModelBiasJobDefinition = new sagemaker.CfnModelBiasJobDefinition(this, 'MyCfnModelBiasJobDefinition', {\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  modelBiasAppSpecification: {\n    configUri: 'configUri',\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    environment: {\n      environmentKey: 'environment',\n    },\n  },\n  modelBiasJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      endTimeOffset: 'endTimeOffset',\n      featuresAttribute: 'featuresAttribute',\n      inferenceAttribute: 'inferenceAttribute',\n      probabilityAttribute: 'probabilityAttribute',\n      probabilityThresholdAttribute: 123,\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n      startTimeOffset: 'startTimeOffset',\n    },\n    groundTruthS3Input: {\n      s3Uri: 's3Uri',\n    },\n  },\n  modelBiasJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  jobDefinitionName: 'jobDefinitionName',\n  modelBiasBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 29,
        "75": 53,
        "91": 2,
        "104": 1,
        "192": 4,
        "193": 17,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 49,
        "290": 1
      },
      "fqnsFingerprint": "f7b286c065a3ecfc1cbb88981fa7e91a713c2cd53cbe654bc26e78c9a05a5195"
    },
    "0516d44ab3d0751588df56bb30744be9b2f00a2b5b33146697848f4c80d88664": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncluster_config_property = sagemaker.CfnModelBiasJobDefinition.ClusterConfigProperty(\n    instance_count=123,\n    instance_type=\"instanceType\",\n    volume_size_in_gb=123,\n\n    # the properties below are optional\n    volume_kms_key_id=\"volumeKmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nClusterConfigProperty clusterConfigProperty = new ClusterConfigProperty {\n    InstanceCount = 123,\n    InstanceType = \"instanceType\",\n    VolumeSizeInGb = 123,\n\n    // the properties below are optional\n    VolumeKmsKeyId = \"volumeKmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nClusterConfigProperty clusterConfigProperty = ClusterConfigProperty.builder()\n        .instanceCount(123)\n        .instanceType(\"instanceType\")\n        .volumeSizeInGb(123)\n\n        // the properties below are optional\n        .volumeKmsKeyId(\"volumeKmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nclusterConfigProperty := &clusterConfigProperty{\n\tinstanceCount: jsii.Number(123),\n\tinstanceType: jsii.String(\"instanceType\"),\n\tvolumeSizeInGb: jsii.Number(123),\n\n\t// the properties below are optional\n\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst clusterConfigProperty: sagemaker.CfnModelBiasJobDefinition.ClusterConfigProperty = {\n  instanceCount: 123,\n  instanceType: 'instanceType',\n  volumeSizeInGb: 123,\n\n  // the properties below are optional\n  volumeKmsKeyId: 'volumeKmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.ClusterConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.ClusterConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst clusterConfigProperty: sagemaker.CfnModelBiasJobDefinition.ClusterConfigProperty = {\n  instanceCount: 123,\n  instanceType: 'instanceType',\n  volumeSizeInGb: 123,\n\n  // the properties below are optional\n  volumeKmsKeyId: 'volumeKmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "8fd6ae1f9296e741f0d4d79caa88a99c061c7ae9cce2ead7c9dc1aec2437b3fd"
    },
    "b9db44efdf93662cc973b13d1a31900e5b6cb67f5eb96b6340bc163a4750ea7e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nconstraints_resource_property = sagemaker.CfnModelBiasJobDefinition.ConstraintsResourceProperty(\n    s3_uri=\"s3Uri\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nConstraintsResourceProperty constraintsResourceProperty = new ConstraintsResourceProperty {\n    S3Uri = \"s3Uri\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nConstraintsResourceProperty constraintsResourceProperty = ConstraintsResourceProperty.builder()\n        .s3Uri(\"s3Uri\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nconstraintsResourceProperty := &constraintsResourceProperty{\n\ts3Uri: jsii.String(\"s3Uri\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst constraintsResourceProperty: sagemaker.CfnModelBiasJobDefinition.ConstraintsResourceProperty = {\n  s3Uri: 's3Uri',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.ConstraintsResourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.ConstraintsResourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst constraintsResourceProperty: sagemaker.CfnModelBiasJobDefinition.ConstraintsResourceProperty = {\n  s3Uri: 's3Uri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "b574e81ffcdd38f810e6f7c3fa9d880a863af995ab9acda6811e5bb1041212dd"
    },
    "7816c678bd5afb5de766e9deef0981df66dca0df95882010c5c1c973899e5c1f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nendpoint_input_property = sagemaker.CfnModelBiasJobDefinition.EndpointInputProperty(\n    endpoint_name=\"endpointName\",\n    local_path=\"localPath\",\n\n    # the properties below are optional\n    end_time_offset=\"endTimeOffset\",\n    features_attribute=\"featuresAttribute\",\n    inference_attribute=\"inferenceAttribute\",\n    probability_attribute=\"probabilityAttribute\",\n    probability_threshold_attribute=123,\n    s3_data_distribution_type=\"s3DataDistributionType\",\n    s3_input_mode=\"s3InputMode\",\n    start_time_offset=\"startTimeOffset\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nEndpointInputProperty endpointInputProperty = new EndpointInputProperty {\n    EndpointName = \"endpointName\",\n    LocalPath = \"localPath\",\n\n    // the properties below are optional\n    EndTimeOffset = \"endTimeOffset\",\n    FeaturesAttribute = \"featuresAttribute\",\n    InferenceAttribute = \"inferenceAttribute\",\n    ProbabilityAttribute = \"probabilityAttribute\",\n    ProbabilityThresholdAttribute = 123,\n    S3DataDistributionType = \"s3DataDistributionType\",\n    S3InputMode = \"s3InputMode\",\n    StartTimeOffset = \"startTimeOffset\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nEndpointInputProperty endpointInputProperty = EndpointInputProperty.builder()\n        .endpointName(\"endpointName\")\n        .localPath(\"localPath\")\n\n        // the properties below are optional\n        .endTimeOffset(\"endTimeOffset\")\n        .featuresAttribute(\"featuresAttribute\")\n        .inferenceAttribute(\"inferenceAttribute\")\n        .probabilityAttribute(\"probabilityAttribute\")\n        .probabilityThresholdAttribute(123)\n        .s3DataDistributionType(\"s3DataDistributionType\")\n        .s3InputMode(\"s3InputMode\")\n        .startTimeOffset(\"startTimeOffset\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nendpointInputProperty := &endpointInputProperty{\n\tendpointName: jsii.String(\"endpointName\"),\n\tlocalPath: jsii.String(\"localPath\"),\n\n\t// the properties below are optional\n\tendTimeOffset: jsii.String(\"endTimeOffset\"),\n\tfeaturesAttribute: jsii.String(\"featuresAttribute\"),\n\tinferenceAttribute: jsii.String(\"inferenceAttribute\"),\n\tprobabilityAttribute: jsii.String(\"probabilityAttribute\"),\n\tprobabilityThresholdAttribute: jsii.Number(123),\n\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\ts3InputMode: jsii.String(\"s3InputMode\"),\n\tstartTimeOffset: jsii.String(\"startTimeOffset\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst endpointInputProperty: sagemaker.CfnModelBiasJobDefinition.EndpointInputProperty = {\n  endpointName: 'endpointName',\n  localPath: 'localPath',\n\n  // the properties below are optional\n  endTimeOffset: 'endTimeOffset',\n  featuresAttribute: 'featuresAttribute',\n  inferenceAttribute: 'inferenceAttribute',\n  probabilityAttribute: 'probabilityAttribute',\n  probabilityThresholdAttribute: 123,\n  s3DataDistributionType: 's3DataDistributionType',\n  s3InputMode: 's3InputMode',\n  startTimeOffset: 'startTimeOffset',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.EndpointInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.EndpointInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst endpointInputProperty: sagemaker.CfnModelBiasJobDefinition.EndpointInputProperty = {\n  endpointName: 'endpointName',\n  localPath: 'localPath',\n\n  // the properties below are optional\n  endTimeOffset: 'endTimeOffset',\n  featuresAttribute: 'featuresAttribute',\n  inferenceAttribute: 'inferenceAttribute',\n  probabilityAttribute: 'probabilityAttribute',\n  probabilityThresholdAttribute: 123,\n  s3DataDistributionType: 's3DataDistributionType',\n  s3InputMode: 's3InputMode',\n  startTimeOffset: 'startTimeOffset',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 10,
        "75": 15,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 10,
        "290": 1
      },
      "fqnsFingerprint": "c927fcd6b8e0b583ee14b3cad952f5a1b55cb635810719f9454b8b099ccc0b47"
    },
    "bd24f18190966ea096b89b7118f7ca739cca60fed9667f03d47413411fd5ed8f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmodel_bias_app_specification_property = sagemaker.CfnModelBiasJobDefinition.ModelBiasAppSpecificationProperty(\n    config_uri=\"configUri\",\n    image_uri=\"imageUri\",\n\n    # the properties below are optional\n    environment={\n        \"environment_key\": \"environment\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nModelBiasAppSpecificationProperty modelBiasAppSpecificationProperty = new ModelBiasAppSpecificationProperty {\n    ConfigUri = \"configUri\",\n    ImageUri = \"imageUri\",\n\n    // the properties below are optional\n    Environment = new Dictionary<string, string> {\n        { \"environmentKey\", \"environment\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nModelBiasAppSpecificationProperty modelBiasAppSpecificationProperty = ModelBiasAppSpecificationProperty.builder()\n        .configUri(\"configUri\")\n        .imageUri(\"imageUri\")\n\n        // the properties below are optional\n        .environment(Map.of(\n                \"environmentKey\", \"environment\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmodelBiasAppSpecificationProperty := &modelBiasAppSpecificationProperty{\n\tconfigUri: jsii.String(\"configUri\"),\n\timageUri: jsii.String(\"imageUri\"),\n\n\t// the properties below are optional\n\tenvironment: map[string]*string{\n\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst modelBiasAppSpecificationProperty: sagemaker.CfnModelBiasJobDefinition.ModelBiasAppSpecificationProperty = {\n  configUri: 'configUri',\n  imageUri: 'imageUri',\n\n  // the properties below are optional\n  environment: {\n    environmentKey: 'environment',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.ModelBiasAppSpecificationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.ModelBiasAppSpecificationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst modelBiasAppSpecificationProperty: sagemaker.CfnModelBiasJobDefinition.ModelBiasAppSpecificationProperty = {\n  configUri: 'configUri',\n  imageUri: 'imageUri',\n\n  // the properties below are optional\n  environment: {\n    environmentKey: 'environment',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "e7b993a3704e7e3436288df0adb6e1eb5e0aa3535a2f1e3feb93c17c80849ac7"
    },
    "c25299c475e1c0d03c96c41e5c9d1cfa5cf84b25856f140fa9055543ea8b9fc4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmodel_bias_baseline_config_property = sagemaker.CfnModelBiasJobDefinition.ModelBiasBaselineConfigProperty(\n    baselining_job_name=\"baseliningJobName\",\n    constraints_resource=sagemaker.CfnModelBiasJobDefinition.ConstraintsResourceProperty(\n        s3_uri=\"s3Uri\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nModelBiasBaselineConfigProperty modelBiasBaselineConfigProperty = new ModelBiasBaselineConfigProperty {\n    BaseliningJobName = \"baseliningJobName\",\n    ConstraintsResource = new ConstraintsResourceProperty {\n        S3Uri = \"s3Uri\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nModelBiasBaselineConfigProperty modelBiasBaselineConfigProperty = ModelBiasBaselineConfigProperty.builder()\n        .baseliningJobName(\"baseliningJobName\")\n        .constraintsResource(ConstraintsResourceProperty.builder()\n                .s3Uri(\"s3Uri\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmodelBiasBaselineConfigProperty := &modelBiasBaselineConfigProperty{\n\tbaseliningJobName: jsii.String(\"baseliningJobName\"),\n\tconstraintsResource: &constraintsResourceProperty{\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst modelBiasBaselineConfigProperty: sagemaker.CfnModelBiasJobDefinition.ModelBiasBaselineConfigProperty = {\n  baseliningJobName: 'baseliningJobName',\n  constraintsResource: {\n    s3Uri: 's3Uri',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.ModelBiasBaselineConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.ModelBiasBaselineConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst modelBiasBaselineConfigProperty: sagemaker.CfnModelBiasJobDefinition.ModelBiasBaselineConfigProperty = {\n  baseliningJobName: 'baseliningJobName',\n  constraintsResource: {\n    s3Uri: 's3Uri',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "3ee5fe4c935730afd393dd07590a86632f82e58110d3df34316150759be0bed3"
    },
    "d7ddb0d9c662cbf04ac6290e199d3b86fa2229adf117b0d0d1877b37f6606d27": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmodel_bias_job_input_property = sagemaker.CfnModelBiasJobDefinition.ModelBiasJobInputProperty(\n    endpoint_input=sagemaker.CfnModelBiasJobDefinition.EndpointInputProperty(\n        endpoint_name=\"endpointName\",\n        local_path=\"localPath\",\n\n        # the properties below are optional\n        end_time_offset=\"endTimeOffset\",\n        features_attribute=\"featuresAttribute\",\n        inference_attribute=\"inferenceAttribute\",\n        probability_attribute=\"probabilityAttribute\",\n        probability_threshold_attribute=123,\n        s3_data_distribution_type=\"s3DataDistributionType\",\n        s3_input_mode=\"s3InputMode\",\n        start_time_offset=\"startTimeOffset\"\n    ),\n    ground_truth_s3_input=sagemaker.CfnModelBiasJobDefinition.MonitoringGroundTruthS3InputProperty(\n        s3_uri=\"s3Uri\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nModelBiasJobInputProperty modelBiasJobInputProperty = new ModelBiasJobInputProperty {\n    EndpointInput = new EndpointInputProperty {\n        EndpointName = \"endpointName\",\n        LocalPath = \"localPath\",\n\n        // the properties below are optional\n        EndTimeOffset = \"endTimeOffset\",\n        FeaturesAttribute = \"featuresAttribute\",\n        InferenceAttribute = \"inferenceAttribute\",\n        ProbabilityAttribute = \"probabilityAttribute\",\n        ProbabilityThresholdAttribute = 123,\n        S3DataDistributionType = \"s3DataDistributionType\",\n        S3InputMode = \"s3InputMode\",\n        StartTimeOffset = \"startTimeOffset\"\n    },\n    GroundTruthS3Input = new MonitoringGroundTruthS3InputProperty {\n        S3Uri = \"s3Uri\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nModelBiasJobInputProperty modelBiasJobInputProperty = ModelBiasJobInputProperty.builder()\n        .endpointInput(EndpointInputProperty.builder()\n                .endpointName(\"endpointName\")\n                .localPath(\"localPath\")\n\n                // the properties below are optional\n                .endTimeOffset(\"endTimeOffset\")\n                .featuresAttribute(\"featuresAttribute\")\n                .inferenceAttribute(\"inferenceAttribute\")\n                .probabilityAttribute(\"probabilityAttribute\")\n                .probabilityThresholdAttribute(123)\n                .s3DataDistributionType(\"s3DataDistributionType\")\n                .s3InputMode(\"s3InputMode\")\n                .startTimeOffset(\"startTimeOffset\")\n                .build())\n        .groundTruthS3Input(MonitoringGroundTruthS3InputProperty.builder()\n                .s3Uri(\"s3Uri\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmodelBiasJobInputProperty := &modelBiasJobInputProperty{\n\tendpointInput: &endpointInputProperty{\n\t\tendpointName: jsii.String(\"endpointName\"),\n\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t// the properties below are optional\n\t\tendTimeOffset: jsii.String(\"endTimeOffset\"),\n\t\tfeaturesAttribute: jsii.String(\"featuresAttribute\"),\n\t\tinferenceAttribute: jsii.String(\"inferenceAttribute\"),\n\t\tprobabilityAttribute: jsii.String(\"probabilityAttribute\"),\n\t\tprobabilityThresholdAttribute: jsii.Number(123),\n\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\tstartTimeOffset: jsii.String(\"startTimeOffset\"),\n\t},\n\tgroundTruthS3Input: &monitoringGroundTruthS3InputProperty{\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst modelBiasJobInputProperty: sagemaker.CfnModelBiasJobDefinition.ModelBiasJobInputProperty = {\n  endpointInput: {\n    endpointName: 'endpointName',\n    localPath: 'localPath',\n\n    // the properties below are optional\n    endTimeOffset: 'endTimeOffset',\n    featuresAttribute: 'featuresAttribute',\n    inferenceAttribute: 'inferenceAttribute',\n    probabilityAttribute: 'probabilityAttribute',\n    probabilityThresholdAttribute: 123,\n    s3DataDistributionType: 's3DataDistributionType',\n    s3InputMode: 's3InputMode',\n    startTimeOffset: 'startTimeOffset',\n  },\n  groundTruthS3Input: {\n    s3Uri: 's3Uri',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.ModelBiasJobInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.ModelBiasJobInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst modelBiasJobInputProperty: sagemaker.CfnModelBiasJobDefinition.ModelBiasJobInputProperty = {\n  endpointInput: {\n    endpointName: 'endpointName',\n    localPath: 'localPath',\n\n    // the properties below are optional\n    endTimeOffset: 'endTimeOffset',\n    featuresAttribute: 'featuresAttribute',\n    inferenceAttribute: 'inferenceAttribute',\n    probabilityAttribute: 'probabilityAttribute',\n    probabilityThresholdAttribute: 123,\n    s3DataDistributionType: 's3DataDistributionType',\n    s3InputMode: 's3InputMode',\n    startTimeOffset: 'startTimeOffset',\n  },\n  groundTruthS3Input: {\n    s3Uri: 's3Uri',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 11,
        "75": 18,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "51b4b6fd0c4101eba55420534d3b833a7145d4111780f77cc1029e5bb7659509"
    },
    "3077e50e0b7775c303e5cdc734ae3a9c5c80f61a263cefb41dff52a613cafe04": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_ground_truth_s3_input_property = sagemaker.CfnModelBiasJobDefinition.MonitoringGroundTruthS3InputProperty(\n    s3_uri=\"s3Uri\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringGroundTruthS3InputProperty monitoringGroundTruthS3InputProperty = new MonitoringGroundTruthS3InputProperty {\n    S3Uri = \"s3Uri\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringGroundTruthS3InputProperty monitoringGroundTruthS3InputProperty = MonitoringGroundTruthS3InputProperty.builder()\n        .s3Uri(\"s3Uri\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringGroundTruthS3InputProperty := &monitoringGroundTruthS3InputProperty{\n\ts3Uri: jsii.String(\"s3Uri\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringGroundTruthS3InputProperty: sagemaker.CfnModelBiasJobDefinition.MonitoringGroundTruthS3InputProperty = {\n  s3Uri: 's3Uri',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.MonitoringGroundTruthS3InputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.MonitoringGroundTruthS3InputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringGroundTruthS3InputProperty: sagemaker.CfnModelBiasJobDefinition.MonitoringGroundTruthS3InputProperty = {\n  s3Uri: 's3Uri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "e017f1d4d65df4371ec7b3234c3946aac6bc1fe0e7f3cfe79d9a20c4b8776042"
    },
    "4d90b49381070d6d443087dff54b1e6039cbdc81d0eba902cfc529f504f0eec7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_output_config_property = sagemaker.CfnModelBiasJobDefinition.MonitoringOutputConfigProperty(\n    monitoring_outputs=[sagemaker.CfnModelBiasJobDefinition.MonitoringOutputProperty(\n        s3_output=sagemaker.CfnModelBiasJobDefinition.S3OutputProperty(\n            local_path=\"localPath\",\n            s3_uri=\"s3Uri\",\n\n            # the properties below are optional\n            s3_upload_mode=\"s3UploadMode\"\n        )\n    )],\n\n    # the properties below are optional\n    kms_key_id=\"kmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringOutputConfigProperty monitoringOutputConfigProperty = new MonitoringOutputConfigProperty {\n    MonitoringOutputs = new [] { new MonitoringOutputProperty {\n        S3Output = new S3OutputProperty {\n            LocalPath = \"localPath\",\n            S3Uri = \"s3Uri\",\n\n            // the properties below are optional\n            S3UploadMode = \"s3UploadMode\"\n        }\n    } },\n\n    // the properties below are optional\n    KmsKeyId = \"kmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringOutputConfigProperty monitoringOutputConfigProperty = MonitoringOutputConfigProperty.builder()\n        .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                .s3Output(S3OutputProperty.builder()\n                        .localPath(\"localPath\")\n                        .s3Uri(\"s3Uri\")\n\n                        // the properties below are optional\n                        .s3UploadMode(\"s3UploadMode\")\n                        .build())\n                .build()))\n\n        // the properties below are optional\n        .kmsKeyId(\"kmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringOutputConfigProperty := &monitoringOutputConfigProperty{\n\tmonitoringOutputs: []interface{}{\n\t\t&monitoringOutputProperty{\n\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringOutputConfigProperty: sagemaker.CfnModelBiasJobDefinition.MonitoringOutputConfigProperty = {\n  monitoringOutputs: [{\n    s3Output: {\n      localPath: 'localPath',\n      s3Uri: 's3Uri',\n\n      // the properties below are optional\n      s3UploadMode: 's3UploadMode',\n    },\n  }],\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.MonitoringOutputConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.MonitoringOutputConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringOutputConfigProperty: sagemaker.CfnModelBiasJobDefinition.MonitoringOutputConfigProperty = {\n  monitoringOutputs: [{\n    s3Output: {\n      localPath: 'localPath',\n      s3Uri: 's3Uri',\n\n      // the properties below are optional\n      s3UploadMode: 's3UploadMode',\n    },\n  }],\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 11,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "60a00e59f422ad273114abeeacc14f1eed933c2369609e59e57a4f0a12a82f1e"
    },
    "8ade4ff646dd0ae30f9203f3c4c7b6bdc7aa0b67a647a771ca42c429ee6be77d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_output_property = sagemaker.CfnModelBiasJobDefinition.MonitoringOutputProperty(\n    s3_output=sagemaker.CfnModelBiasJobDefinition.S3OutputProperty(\n        local_path=\"localPath\",\n        s3_uri=\"s3Uri\",\n\n        # the properties below are optional\n        s3_upload_mode=\"s3UploadMode\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringOutputProperty monitoringOutputProperty = new MonitoringOutputProperty {\n    S3Output = new S3OutputProperty {\n        LocalPath = \"localPath\",\n        S3Uri = \"s3Uri\",\n\n        // the properties below are optional\n        S3UploadMode = \"s3UploadMode\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringOutputProperty monitoringOutputProperty = MonitoringOutputProperty.builder()\n        .s3Output(S3OutputProperty.builder()\n                .localPath(\"localPath\")\n                .s3Uri(\"s3Uri\")\n\n                // the properties below are optional\n                .s3UploadMode(\"s3UploadMode\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringOutputProperty := &monitoringOutputProperty{\n\ts3Output: &s3OutputProperty{\n\t\tlocalPath: jsii.String(\"localPath\"),\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t// the properties below are optional\n\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringOutputProperty: sagemaker.CfnModelBiasJobDefinition.MonitoringOutputProperty = {\n  s3Output: {\n    localPath: 'localPath',\n    s3Uri: 's3Uri',\n\n    // the properties below are optional\n    s3UploadMode: 's3UploadMode',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.MonitoringOutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.MonitoringOutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringOutputProperty: sagemaker.CfnModelBiasJobDefinition.MonitoringOutputProperty = {\n  s3Output: {\n    localPath: 'localPath',\n    s3Uri: 's3Uri',\n\n    // the properties below are optional\n    s3UploadMode: 's3UploadMode',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "2d508b4f82dd306bafc57162d6edb5cd0e3cbd943c27e73fc955f98e68754253"
    },
    "240099f842d4df57c923faea8212a60ea3363ffe4d7b544c137cf2fd63888914": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_resources_property = sagemaker.CfnModelBiasJobDefinition.MonitoringResourcesProperty(\n    cluster_config=sagemaker.CfnModelBiasJobDefinition.ClusterConfigProperty(\n        instance_count=123,\n        instance_type=\"instanceType\",\n        volume_size_in_gb=123,\n\n        # the properties below are optional\n        volume_kms_key_id=\"volumeKmsKeyId\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringResourcesProperty monitoringResourcesProperty = new MonitoringResourcesProperty {\n    ClusterConfig = new ClusterConfigProperty {\n        InstanceCount = 123,\n        InstanceType = \"instanceType\",\n        VolumeSizeInGb = 123,\n\n        // the properties below are optional\n        VolumeKmsKeyId = \"volumeKmsKeyId\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringResourcesProperty monitoringResourcesProperty = MonitoringResourcesProperty.builder()\n        .clusterConfig(ClusterConfigProperty.builder()\n                .instanceCount(123)\n                .instanceType(\"instanceType\")\n                .volumeSizeInGb(123)\n\n                // the properties below are optional\n                .volumeKmsKeyId(\"volumeKmsKeyId\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringResourcesProperty := &monitoringResourcesProperty{\n\tclusterConfig: &clusterConfigProperty{\n\t\tinstanceCount: jsii.Number(123),\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringResourcesProperty: sagemaker.CfnModelBiasJobDefinition.MonitoringResourcesProperty = {\n  clusterConfig: {\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    volumeSizeInGb: 123,\n\n    // the properties below are optional\n    volumeKmsKeyId: 'volumeKmsKeyId',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.MonitoringResourcesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.MonitoringResourcesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringResourcesProperty: sagemaker.CfnModelBiasJobDefinition.MonitoringResourcesProperty = {\n  clusterConfig: {\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    volumeSizeInGb: 123,\n\n    // the properties below are optional\n    volumeKmsKeyId: 'volumeKmsKeyId',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "03d59a6e9db8650905838a0473f8c2cae17384c0f86b060f4c3174cc824c70ed"
    },
    "55dd3ec6529104dd49d661aab8c239fed4b34e52ba1db629294332a878f928a0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nnetwork_config_property = sagemaker.CfnModelBiasJobDefinition.NetworkConfigProperty(\n    enable_inter_container_traffic_encryption=False,\n    enable_network_isolation=False,\n    vpc_config=sagemaker.CfnModelBiasJobDefinition.VpcConfigProperty(\n        security_group_ids=[\"securityGroupIds\"],\n        subnets=[\"subnets\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nNetworkConfigProperty networkConfigProperty = new NetworkConfigProperty {\n    EnableInterContainerTrafficEncryption = false,\n    EnableNetworkIsolation = false,\n    VpcConfig = new VpcConfigProperty {\n        SecurityGroupIds = new [] { \"securityGroupIds\" },\n        Subnets = new [] { \"subnets\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nNetworkConfigProperty networkConfigProperty = NetworkConfigProperty.builder()\n        .enableInterContainerTrafficEncryption(false)\n        .enableNetworkIsolation(false)\n        .vpcConfig(VpcConfigProperty.builder()\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .subnets(List.of(\"subnets\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nnetworkConfigProperty := &networkConfigProperty{\n\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\tenableNetworkIsolation: jsii.Boolean(false),\n\tvpcConfig: &vpcConfigProperty{\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t\tsubnets: []*string{\n\t\t\tjsii.String(\"subnets\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst networkConfigProperty: sagemaker.CfnModelBiasJobDefinition.NetworkConfigProperty = {\n  enableInterContainerTrafficEncryption: false,\n  enableNetworkIsolation: false,\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.NetworkConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.NetworkConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst networkConfigProperty: sagemaker.CfnModelBiasJobDefinition.NetworkConfigProperty = {\n  enableInterContainerTrafficEncryption: false,\n  enableNetworkIsolation: false,\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "1fd2fb86e4bfeafeb3128c1418613befb2446e220ac45be5c90f9f088c941108"
    },
    "82a725c82df1cbbe6cc472863349afab8e7744c564e7a7f7df2e68425e6a94e2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ns3_output_property = sagemaker.CfnModelBiasJobDefinition.S3OutputProperty(\n    local_path=\"localPath\",\n    s3_uri=\"s3Uri\",\n\n    # the properties below are optional\n    s3_upload_mode=\"s3UploadMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nS3OutputProperty s3OutputProperty = new S3OutputProperty {\n    LocalPath = \"localPath\",\n    S3Uri = \"s3Uri\",\n\n    // the properties below are optional\n    S3UploadMode = \"s3UploadMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nS3OutputProperty s3OutputProperty = S3OutputProperty.builder()\n        .localPath(\"localPath\")\n        .s3Uri(\"s3Uri\")\n\n        // the properties below are optional\n        .s3UploadMode(\"s3UploadMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ns3OutputProperty := &s3OutputProperty{\n\tlocalPath: jsii.String(\"localPath\"),\n\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t// the properties below are optional\n\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst s3OutputProperty: sagemaker.CfnModelBiasJobDefinition.S3OutputProperty = {\n  localPath: 'localPath',\n  s3Uri: 's3Uri',\n\n  // the properties below are optional\n  s3UploadMode: 's3UploadMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.S3OutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.S3OutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3OutputProperty: sagemaker.CfnModelBiasJobDefinition.S3OutputProperty = {\n  localPath: 'localPath',\n  s3Uri: 's3Uri',\n\n  // the properties below are optional\n  s3UploadMode: 's3UploadMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "2ef65ba66268015af94af3ecb4512ad65f366b3f92405b0f5be45707a9fe2dc6"
    },
    "0591f352166b6814dc44cdbb2fd65d62e70691b5c017c1c0196951d3f3ecfef9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nstopping_condition_property = sagemaker.CfnModelBiasJobDefinition.StoppingConditionProperty(\n    max_runtime_in_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nStoppingConditionProperty stoppingConditionProperty = new StoppingConditionProperty {\n    MaxRuntimeInSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nStoppingConditionProperty stoppingConditionProperty = StoppingConditionProperty.builder()\n        .maxRuntimeInSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nstoppingConditionProperty := &stoppingConditionProperty{\n\tmaxRuntimeInSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst stoppingConditionProperty: sagemaker.CfnModelBiasJobDefinition.StoppingConditionProperty = {\n  maxRuntimeInSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.StoppingConditionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.StoppingConditionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stoppingConditionProperty: sagemaker.CfnModelBiasJobDefinition.StoppingConditionProperty = {\n  maxRuntimeInSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "a122dd9f9c95943fc56b5f015edeb4cbec2b2ff926437a8783261f411cb0a5b5"
    },
    "9b0c385502547d93ea69baf3dd59b2a6d731893b0222cb64e105fc8e120192b7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nvpc_config_property = sagemaker.CfnModelBiasJobDefinition.VpcConfigProperty(\n    security_group_ids=[\"securityGroupIds\"],\n    subnets=[\"subnets\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nVpcConfigProperty vpcConfigProperty = new VpcConfigProperty {\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    Subnets = new [] { \"subnets\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nVpcConfigProperty vpcConfigProperty = VpcConfigProperty.builder()\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .subnets(List.of(\"subnets\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvpcConfigProperty := &vpcConfigProperty{\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsubnets: []*string{\n\t\tjsii.String(\"subnets\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst vpcConfigProperty: sagemaker.CfnModelBiasJobDefinition.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnets: ['subnets'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.VpcConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinition.VpcConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vpcConfigProperty: sagemaker.CfnModelBiasJobDefinition.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnets: ['subnets'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1d7b53d3cef7f924951f2bf2c92bc4e386a2b6583a220e0b715a9ecd12dbd1f8"
    },
    "1203b340c4d54e907f1f19a4d46a77f5900c066d36ed4938d0ec63b265012895": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_model_bias_job_definition_props = sagemaker.CfnModelBiasJobDefinitionProps(\n    job_resources=sagemaker.CfnModelBiasJobDefinition.MonitoringResourcesProperty(\n        cluster_config=sagemaker.CfnModelBiasJobDefinition.ClusterConfigProperty(\n            instance_count=123,\n            instance_type=\"instanceType\",\n            volume_size_in_gb=123,\n\n            # the properties below are optional\n            volume_kms_key_id=\"volumeKmsKeyId\"\n        )\n    ),\n    model_bias_app_specification=sagemaker.CfnModelBiasJobDefinition.ModelBiasAppSpecificationProperty(\n        config_uri=\"configUri\",\n        image_uri=\"imageUri\",\n\n        # the properties below are optional\n        environment={\n            \"environment_key\": \"environment\"\n        }\n    ),\n    model_bias_job_input=sagemaker.CfnModelBiasJobDefinition.ModelBiasJobInputProperty(\n        endpoint_input=sagemaker.CfnModelBiasJobDefinition.EndpointInputProperty(\n            endpoint_name=\"endpointName\",\n            local_path=\"localPath\",\n\n            # the properties below are optional\n            end_time_offset=\"endTimeOffset\",\n            features_attribute=\"featuresAttribute\",\n            inference_attribute=\"inferenceAttribute\",\n            probability_attribute=\"probabilityAttribute\",\n            probability_threshold_attribute=123,\n            s3_data_distribution_type=\"s3DataDistributionType\",\n            s3_input_mode=\"s3InputMode\",\n            start_time_offset=\"startTimeOffset\"\n        ),\n        ground_truth_s3_input=sagemaker.CfnModelBiasJobDefinition.MonitoringGroundTruthS3InputProperty(\n            s3_uri=\"s3Uri\"\n        )\n    ),\n    model_bias_job_output_config=sagemaker.CfnModelBiasJobDefinition.MonitoringOutputConfigProperty(\n        monitoring_outputs=[sagemaker.CfnModelBiasJobDefinition.MonitoringOutputProperty(\n            s3_output=sagemaker.CfnModelBiasJobDefinition.S3OutputProperty(\n                local_path=\"localPath\",\n                s3_uri=\"s3Uri\",\n\n                # the properties below are optional\n                s3_upload_mode=\"s3UploadMode\"\n            )\n        )],\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    job_definition_name=\"jobDefinitionName\",\n    model_bias_baseline_config=sagemaker.CfnModelBiasJobDefinition.ModelBiasBaselineConfigProperty(\n        baselining_job_name=\"baseliningJobName\",\n        constraints_resource=sagemaker.CfnModelBiasJobDefinition.ConstraintsResourceProperty(\n            s3_uri=\"s3Uri\"\n        )\n    ),\n    network_config=sagemaker.CfnModelBiasJobDefinition.NetworkConfigProperty(\n        enable_inter_container_traffic_encryption=False,\n        enable_network_isolation=False,\n        vpc_config=sagemaker.CfnModelBiasJobDefinition.VpcConfigProperty(\n            security_group_ids=[\"securityGroupIds\"],\n            subnets=[\"subnets\"]\n        )\n    ),\n    stopping_condition=sagemaker.CfnModelBiasJobDefinition.StoppingConditionProperty(\n        max_runtime_in_seconds=123\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnModelBiasJobDefinitionProps cfnModelBiasJobDefinitionProps = new CfnModelBiasJobDefinitionProps {\n    JobResources = new MonitoringResourcesProperty {\n        ClusterConfig = new ClusterConfigProperty {\n            InstanceCount = 123,\n            InstanceType = \"instanceType\",\n            VolumeSizeInGb = 123,\n\n            // the properties below are optional\n            VolumeKmsKeyId = \"volumeKmsKeyId\"\n        }\n    },\n    ModelBiasAppSpecification = new ModelBiasAppSpecificationProperty {\n        ConfigUri = \"configUri\",\n        ImageUri = \"imageUri\",\n\n        // the properties below are optional\n        Environment = new Dictionary<string, string> {\n            { \"environmentKey\", \"environment\" }\n        }\n    },\n    ModelBiasJobInput = new ModelBiasJobInputProperty {\n        EndpointInput = new EndpointInputProperty {\n            EndpointName = \"endpointName\",\n            LocalPath = \"localPath\",\n\n            // the properties below are optional\n            EndTimeOffset = \"endTimeOffset\",\n            FeaturesAttribute = \"featuresAttribute\",\n            InferenceAttribute = \"inferenceAttribute\",\n            ProbabilityAttribute = \"probabilityAttribute\",\n            ProbabilityThresholdAttribute = 123,\n            S3DataDistributionType = \"s3DataDistributionType\",\n            S3InputMode = \"s3InputMode\",\n            StartTimeOffset = \"startTimeOffset\"\n        },\n        GroundTruthS3Input = new MonitoringGroundTruthS3InputProperty {\n            S3Uri = \"s3Uri\"\n        }\n    },\n    ModelBiasJobOutputConfig = new MonitoringOutputConfigProperty {\n        MonitoringOutputs = new [] { new MonitoringOutputProperty {\n            S3Output = new S3OutputProperty {\n                LocalPath = \"localPath\",\n                S3Uri = \"s3Uri\",\n\n                // the properties below are optional\n                S3UploadMode = \"s3UploadMode\"\n            }\n        } },\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    JobDefinitionName = \"jobDefinitionName\",\n    ModelBiasBaselineConfig = new ModelBiasBaselineConfigProperty {\n        BaseliningJobName = \"baseliningJobName\",\n        ConstraintsResource = new ConstraintsResourceProperty {\n            S3Uri = \"s3Uri\"\n        }\n    },\n    NetworkConfig = new NetworkConfigProperty {\n        EnableInterContainerTrafficEncryption = false,\n        EnableNetworkIsolation = false,\n        VpcConfig = new VpcConfigProperty {\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            Subnets = new [] { \"subnets\" }\n        }\n    },\n    StoppingCondition = new StoppingConditionProperty {\n        MaxRuntimeInSeconds = 123\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnModelBiasJobDefinitionProps cfnModelBiasJobDefinitionProps = CfnModelBiasJobDefinitionProps.builder()\n        .jobResources(MonitoringResourcesProperty.builder()\n                .clusterConfig(ClusterConfigProperty.builder()\n                        .instanceCount(123)\n                        .instanceType(\"instanceType\")\n                        .volumeSizeInGb(123)\n\n                        // the properties below are optional\n                        .volumeKmsKeyId(\"volumeKmsKeyId\")\n                        .build())\n                .build())\n        .modelBiasAppSpecification(ModelBiasAppSpecificationProperty.builder()\n                .configUri(\"configUri\")\n                .imageUri(\"imageUri\")\n\n                // the properties below are optional\n                .environment(Map.of(\n                        \"environmentKey\", \"environment\"))\n                .build())\n        .modelBiasJobInput(ModelBiasJobInputProperty.builder()\n                .endpointInput(EndpointInputProperty.builder()\n                        .endpointName(\"endpointName\")\n                        .localPath(\"localPath\")\n\n                        // the properties below are optional\n                        .endTimeOffset(\"endTimeOffset\")\n                        .featuresAttribute(\"featuresAttribute\")\n                        .inferenceAttribute(\"inferenceAttribute\")\n                        .probabilityAttribute(\"probabilityAttribute\")\n                        .probabilityThresholdAttribute(123)\n                        .s3DataDistributionType(\"s3DataDistributionType\")\n                        .s3InputMode(\"s3InputMode\")\n                        .startTimeOffset(\"startTimeOffset\")\n                        .build())\n                .groundTruthS3Input(MonitoringGroundTruthS3InputProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .build())\n        .modelBiasJobOutputConfig(MonitoringOutputConfigProperty.builder()\n                .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                        .s3Output(S3OutputProperty.builder()\n                                .localPath(\"localPath\")\n                                .s3Uri(\"s3Uri\")\n\n                                // the properties below are optional\n                                .s3UploadMode(\"s3UploadMode\")\n                                .build())\n                        .build()))\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .jobDefinitionName(\"jobDefinitionName\")\n        .modelBiasBaselineConfig(ModelBiasBaselineConfigProperty.builder()\n                .baseliningJobName(\"baseliningJobName\")\n                .constraintsResource(ConstraintsResourceProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .build())\n        .networkConfig(NetworkConfigProperty.builder()\n                .enableInterContainerTrafficEncryption(false)\n                .enableNetworkIsolation(false)\n                .vpcConfig(VpcConfigProperty.builder()\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnets(List.of(\"subnets\"))\n                        .build())\n                .build())\n        .stoppingCondition(StoppingConditionProperty.builder()\n                .maxRuntimeInSeconds(123)\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnModelBiasJobDefinitionProps := &cfnModelBiasJobDefinitionProps{\n\tjobResources: &monitoringResourcesProperty{\n\t\tclusterConfig: &clusterConfigProperty{\n\t\t\tinstanceCount: jsii.Number(123),\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t\t},\n\t},\n\tmodelBiasAppSpecification: &modelBiasAppSpecificationProperty{\n\t\tconfigUri: jsii.String(\"configUri\"),\n\t\timageUri: jsii.String(\"imageUri\"),\n\n\t\t// the properties below are optional\n\t\tenvironment: map[string]*string{\n\t\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t\t},\n\t},\n\tmodelBiasJobInput: &modelBiasJobInputProperty{\n\t\tendpointInput: &endpointInputProperty{\n\t\t\tendpointName: jsii.String(\"endpointName\"),\n\t\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t\t// the properties below are optional\n\t\t\tendTimeOffset: jsii.String(\"endTimeOffset\"),\n\t\t\tfeaturesAttribute: jsii.String(\"featuresAttribute\"),\n\t\t\tinferenceAttribute: jsii.String(\"inferenceAttribute\"),\n\t\t\tprobabilityAttribute: jsii.String(\"probabilityAttribute\"),\n\t\t\tprobabilityThresholdAttribute: jsii.Number(123),\n\t\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\t\tstartTimeOffset: jsii.String(\"startTimeOffset\"),\n\t\t},\n\t\tgroundTruthS3Input: &monitoringGroundTruthS3InputProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t},\n\tmodelBiasJobOutputConfig: &monitoringOutputConfigProperty{\n\t\tmonitoringOutputs: []interface{}{\n\t\t\t&monitoringOutputProperty{\n\t\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tjobDefinitionName: jsii.String(\"jobDefinitionName\"),\n\tmodelBiasBaselineConfig: &modelBiasBaselineConfigProperty{\n\t\tbaseliningJobName: jsii.String(\"baseliningJobName\"),\n\t\tconstraintsResource: &constraintsResourceProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t},\n\tnetworkConfig: &networkConfigProperty{\n\t\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\t\tenableNetworkIsolation: jsii.Boolean(false),\n\t\tvpcConfig: &vpcConfigProperty{\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnets: []*string{\n\t\t\t\tjsii.String(\"subnets\"),\n\t\t\t},\n\t\t},\n\t},\n\tstoppingCondition: &stoppingConditionProperty{\n\t\tmaxRuntimeInSeconds: jsii.Number(123),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnModelBiasJobDefinitionProps: sagemaker.CfnModelBiasJobDefinitionProps = {\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  modelBiasAppSpecification: {\n    configUri: 'configUri',\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    environment: {\n      environmentKey: 'environment',\n    },\n  },\n  modelBiasJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      endTimeOffset: 'endTimeOffset',\n      featuresAttribute: 'featuresAttribute',\n      inferenceAttribute: 'inferenceAttribute',\n      probabilityAttribute: 'probabilityAttribute',\n      probabilityThresholdAttribute: 123,\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n      startTimeOffset: 'startTimeOffset',\n    },\n    groundTruthS3Input: {\n      s3Uri: 's3Uri',\n    },\n  },\n  modelBiasJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  jobDefinitionName: 'jobDefinitionName',\n  modelBiasBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinitionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelBiasJobDefinitionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnModelBiasJobDefinitionProps: sagemaker.CfnModelBiasJobDefinitionProps = {\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  modelBiasAppSpecification: {\n    configUri: 'configUri',\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    environment: {\n      environmentKey: 'environment',\n    },\n  },\n  modelBiasJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      endTimeOffset: 'endTimeOffset',\n      featuresAttribute: 'featuresAttribute',\n      inferenceAttribute: 'inferenceAttribute',\n      probabilityAttribute: 'probabilityAttribute',\n      probabilityThresholdAttribute: 123,\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n      startTimeOffset: 'startTimeOffset',\n    },\n    groundTruthS3Input: {\n      s3Uri: 's3Uri',\n    },\n  },\n  modelBiasJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  jobDefinitionName: 'jobDefinitionName',\n  modelBiasBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 28,
        "75": 53,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 4,
        "193": 17,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 49,
        "290": 1
      },
      "fqnsFingerprint": "d0818955416fbc9dafd1b1a703dc6a188583c72c52483a871e90c328c0e7d3c3"
    },
    "d0dd22654696f54899e20225cb5e715943b96e71c3d33d507f1008baf3fd2725": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_model_explainability_job_definition = sagemaker.CfnModelExplainabilityJobDefinition(self, \"MyCfnModelExplainabilityJobDefinition\",\n    job_resources=sagemaker.CfnModelExplainabilityJobDefinition.MonitoringResourcesProperty(\n        cluster_config=sagemaker.CfnModelExplainabilityJobDefinition.ClusterConfigProperty(\n            instance_count=123,\n            instance_type=\"instanceType\",\n            volume_size_in_gb=123,\n\n            # the properties below are optional\n            volume_kms_key_id=\"volumeKmsKeyId\"\n        )\n    ),\n    model_explainability_app_specification=sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityAppSpecificationProperty(\n        config_uri=\"configUri\",\n        image_uri=\"imageUri\",\n\n        # the properties below are optional\n        environment={\n            \"environment_key\": \"environment\"\n        }\n    ),\n    model_explainability_job_input=sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityJobInputProperty(\n        endpoint_input=sagemaker.CfnModelExplainabilityJobDefinition.EndpointInputProperty(\n            endpoint_name=\"endpointName\",\n            local_path=\"localPath\",\n\n            # the properties below are optional\n            features_attribute=\"featuresAttribute\",\n            inference_attribute=\"inferenceAttribute\",\n            probability_attribute=\"probabilityAttribute\",\n            s3_data_distribution_type=\"s3DataDistributionType\",\n            s3_input_mode=\"s3InputMode\"\n        )\n    ),\n    model_explainability_job_output_config=sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputConfigProperty(\n        monitoring_outputs=[sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputProperty(\n            s3_output=sagemaker.CfnModelExplainabilityJobDefinition.S3OutputProperty(\n                local_path=\"localPath\",\n                s3_uri=\"s3Uri\",\n\n                # the properties below are optional\n                s3_upload_mode=\"s3UploadMode\"\n            )\n        )],\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    job_definition_name=\"jobDefinitionName\",\n    model_explainability_baseline_config=sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityBaselineConfigProperty(\n        baselining_job_name=\"baseliningJobName\",\n        constraints_resource=sagemaker.CfnModelExplainabilityJobDefinition.ConstraintsResourceProperty(\n            s3_uri=\"s3Uri\"\n        )\n    ),\n    network_config=sagemaker.CfnModelExplainabilityJobDefinition.NetworkConfigProperty(\n        enable_inter_container_traffic_encryption=False,\n        enable_network_isolation=False,\n        vpc_config=sagemaker.CfnModelExplainabilityJobDefinition.VpcConfigProperty(\n            security_group_ids=[\"securityGroupIds\"],\n            subnets=[\"subnets\"]\n        )\n    ),\n    stopping_condition=sagemaker.CfnModelExplainabilityJobDefinition.StoppingConditionProperty(\n        max_runtime_in_seconds=123\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnModelExplainabilityJobDefinition cfnModelExplainabilityJobDefinition = new CfnModelExplainabilityJobDefinition(this, \"MyCfnModelExplainabilityJobDefinition\", new CfnModelExplainabilityJobDefinitionProps {\n    JobResources = new MonitoringResourcesProperty {\n        ClusterConfig = new ClusterConfigProperty {\n            InstanceCount = 123,\n            InstanceType = \"instanceType\",\n            VolumeSizeInGb = 123,\n\n            // the properties below are optional\n            VolumeKmsKeyId = \"volumeKmsKeyId\"\n        }\n    },\n    ModelExplainabilityAppSpecification = new ModelExplainabilityAppSpecificationProperty {\n        ConfigUri = \"configUri\",\n        ImageUri = \"imageUri\",\n\n        // the properties below are optional\n        Environment = new Dictionary<string, string> {\n            { \"environmentKey\", \"environment\" }\n        }\n    },\n    ModelExplainabilityJobInput = new ModelExplainabilityJobInputProperty {\n        EndpointInput = new EndpointInputProperty {\n            EndpointName = \"endpointName\",\n            LocalPath = \"localPath\",\n\n            // the properties below are optional\n            FeaturesAttribute = \"featuresAttribute\",\n            InferenceAttribute = \"inferenceAttribute\",\n            ProbabilityAttribute = \"probabilityAttribute\",\n            S3DataDistributionType = \"s3DataDistributionType\",\n            S3InputMode = \"s3InputMode\"\n        }\n    },\n    ModelExplainabilityJobOutputConfig = new MonitoringOutputConfigProperty {\n        MonitoringOutputs = new [] { new MonitoringOutputProperty {\n            S3Output = new S3OutputProperty {\n                LocalPath = \"localPath\",\n                S3Uri = \"s3Uri\",\n\n                // the properties below are optional\n                S3UploadMode = \"s3UploadMode\"\n            }\n        } },\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    JobDefinitionName = \"jobDefinitionName\",\n    ModelExplainabilityBaselineConfig = new ModelExplainabilityBaselineConfigProperty {\n        BaseliningJobName = \"baseliningJobName\",\n        ConstraintsResource = new ConstraintsResourceProperty {\n            S3Uri = \"s3Uri\"\n        }\n    },\n    NetworkConfig = new NetworkConfigProperty {\n        EnableInterContainerTrafficEncryption = false,\n        EnableNetworkIsolation = false,\n        VpcConfig = new VpcConfigProperty {\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            Subnets = new [] { \"subnets\" }\n        }\n    },\n    StoppingCondition = new StoppingConditionProperty {\n        MaxRuntimeInSeconds = 123\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnModelExplainabilityJobDefinition cfnModelExplainabilityJobDefinition = CfnModelExplainabilityJobDefinition.Builder.create(this, \"MyCfnModelExplainabilityJobDefinition\")\n        .jobResources(MonitoringResourcesProperty.builder()\n                .clusterConfig(ClusterConfigProperty.builder()\n                        .instanceCount(123)\n                        .instanceType(\"instanceType\")\n                        .volumeSizeInGb(123)\n\n                        // the properties below are optional\n                        .volumeKmsKeyId(\"volumeKmsKeyId\")\n                        .build())\n                .build())\n        .modelExplainabilityAppSpecification(ModelExplainabilityAppSpecificationProperty.builder()\n                .configUri(\"configUri\")\n                .imageUri(\"imageUri\")\n\n                // the properties below are optional\n                .environment(Map.of(\n                        \"environmentKey\", \"environment\"))\n                .build())\n        .modelExplainabilityJobInput(ModelExplainabilityJobInputProperty.builder()\n                .endpointInput(EndpointInputProperty.builder()\n                        .endpointName(\"endpointName\")\n                        .localPath(\"localPath\")\n\n                        // the properties below are optional\n                        .featuresAttribute(\"featuresAttribute\")\n                        .inferenceAttribute(\"inferenceAttribute\")\n                        .probabilityAttribute(\"probabilityAttribute\")\n                        .s3DataDistributionType(\"s3DataDistributionType\")\n                        .s3InputMode(\"s3InputMode\")\n                        .build())\n                .build())\n        .modelExplainabilityJobOutputConfig(MonitoringOutputConfigProperty.builder()\n                .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                        .s3Output(S3OutputProperty.builder()\n                                .localPath(\"localPath\")\n                                .s3Uri(\"s3Uri\")\n\n                                // the properties below are optional\n                                .s3UploadMode(\"s3UploadMode\")\n                                .build())\n                        .build()))\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .jobDefinitionName(\"jobDefinitionName\")\n        .modelExplainabilityBaselineConfig(ModelExplainabilityBaselineConfigProperty.builder()\n                .baseliningJobName(\"baseliningJobName\")\n                .constraintsResource(ConstraintsResourceProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .build())\n        .networkConfig(NetworkConfigProperty.builder()\n                .enableInterContainerTrafficEncryption(false)\n                .enableNetworkIsolation(false)\n                .vpcConfig(VpcConfigProperty.builder()\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnets(List.of(\"subnets\"))\n                        .build())\n                .build())\n        .stoppingCondition(StoppingConditionProperty.builder()\n                .maxRuntimeInSeconds(123)\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnModelExplainabilityJobDefinition := sagemaker.NewCfnModelExplainabilityJobDefinition(this, jsii.String(\"MyCfnModelExplainabilityJobDefinition\"), &cfnModelExplainabilityJobDefinitionProps{\n\tjobResources: &monitoringResourcesProperty{\n\t\tclusterConfig: &clusterConfigProperty{\n\t\t\tinstanceCount: jsii.Number(123),\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t\t},\n\t},\n\tmodelExplainabilityAppSpecification: &modelExplainabilityAppSpecificationProperty{\n\t\tconfigUri: jsii.String(\"configUri\"),\n\t\timageUri: jsii.String(\"imageUri\"),\n\n\t\t// the properties below are optional\n\t\tenvironment: map[string]*string{\n\t\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t\t},\n\t},\n\tmodelExplainabilityJobInput: &modelExplainabilityJobInputProperty{\n\t\tendpointInput: &endpointInputProperty{\n\t\t\tendpointName: jsii.String(\"endpointName\"),\n\t\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t\t// the properties below are optional\n\t\t\tfeaturesAttribute: jsii.String(\"featuresAttribute\"),\n\t\t\tinferenceAttribute: jsii.String(\"inferenceAttribute\"),\n\t\t\tprobabilityAttribute: jsii.String(\"probabilityAttribute\"),\n\t\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\t},\n\t},\n\tmodelExplainabilityJobOutputConfig: &monitoringOutputConfigProperty{\n\t\tmonitoringOutputs: []interface{}{\n\t\t\t&monitoringOutputProperty{\n\t\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tjobDefinitionName: jsii.String(\"jobDefinitionName\"),\n\tmodelExplainabilityBaselineConfig: &modelExplainabilityBaselineConfigProperty{\n\t\tbaseliningJobName: jsii.String(\"baseliningJobName\"),\n\t\tconstraintsResource: &constraintsResourceProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t},\n\tnetworkConfig: &networkConfigProperty{\n\t\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\t\tenableNetworkIsolation: jsii.Boolean(false),\n\t\tvpcConfig: &vpcConfigProperty{\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnets: []*string{\n\t\t\t\tjsii.String(\"subnets\"),\n\t\t\t},\n\t\t},\n\t},\n\tstoppingCondition: &stoppingConditionProperty{\n\t\tmaxRuntimeInSeconds: jsii.Number(123),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnModelExplainabilityJobDefinition = new sagemaker.CfnModelExplainabilityJobDefinition(this, 'MyCfnModelExplainabilityJobDefinition', {\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  modelExplainabilityAppSpecification: {\n    configUri: 'configUri',\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    environment: {\n      environmentKey: 'environment',\n    },\n  },\n  modelExplainabilityJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      featuresAttribute: 'featuresAttribute',\n      inferenceAttribute: 'inferenceAttribute',\n      probabilityAttribute: 'probabilityAttribute',\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n    },\n  },\n  modelExplainabilityJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  jobDefinitionName: 'jobDefinitionName',\n  modelExplainabilityBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition",
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinitionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnModelExplainabilityJobDefinition = new sagemaker.CfnModelExplainabilityJobDefinition(this, 'MyCfnModelExplainabilityJobDefinition', {\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  modelExplainabilityAppSpecification: {\n    configUri: 'configUri',\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    environment: {\n      environmentKey: 'environment',\n    },\n  },\n  modelExplainabilityJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      featuresAttribute: 'featuresAttribute',\n      inferenceAttribute: 'inferenceAttribute',\n      probabilityAttribute: 'probabilityAttribute',\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n    },\n  },\n  modelExplainabilityJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  jobDefinitionName: 'jobDefinitionName',\n  modelExplainabilityBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 26,
        "75": 48,
        "91": 2,
        "104": 1,
        "192": 4,
        "193": 16,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 44,
        "290": 1
      },
      "fqnsFingerprint": "2a5380767f0462c9f059a01825f00acc5fb60c39a331675dd27b24ef080259b3"
    },
    "83b65c2f740828da1eefa91643f9dd813cd7aead6f025e9fd414c7df37120eea": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncluster_config_property = sagemaker.CfnModelExplainabilityJobDefinition.ClusterConfigProperty(\n    instance_count=123,\n    instance_type=\"instanceType\",\n    volume_size_in_gb=123,\n\n    # the properties below are optional\n    volume_kms_key_id=\"volumeKmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nClusterConfigProperty clusterConfigProperty = new ClusterConfigProperty {\n    InstanceCount = 123,\n    InstanceType = \"instanceType\",\n    VolumeSizeInGb = 123,\n\n    // the properties below are optional\n    VolumeKmsKeyId = \"volumeKmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nClusterConfigProperty clusterConfigProperty = ClusterConfigProperty.builder()\n        .instanceCount(123)\n        .instanceType(\"instanceType\")\n        .volumeSizeInGb(123)\n\n        // the properties below are optional\n        .volumeKmsKeyId(\"volumeKmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nclusterConfigProperty := &clusterConfigProperty{\n\tinstanceCount: jsii.Number(123),\n\tinstanceType: jsii.String(\"instanceType\"),\n\tvolumeSizeInGb: jsii.Number(123),\n\n\t// the properties below are optional\n\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst clusterConfigProperty: sagemaker.CfnModelExplainabilityJobDefinition.ClusterConfigProperty = {\n  instanceCount: 123,\n  instanceType: 'instanceType',\n  volumeSizeInGb: 123,\n\n  // the properties below are optional\n  volumeKmsKeyId: 'volumeKmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.ClusterConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.ClusterConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst clusterConfigProperty: sagemaker.CfnModelExplainabilityJobDefinition.ClusterConfigProperty = {\n  instanceCount: 123,\n  instanceType: 'instanceType',\n  volumeSizeInGb: 123,\n\n  // the properties below are optional\n  volumeKmsKeyId: 'volumeKmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "0a2c72efa78425884483f1fae6e0d0eb0541cfce439daca83accc952e6324566"
    },
    "0336bae62db9bcae8fbb213a0e3d421e3021bc64a802e9a9913f867703522380": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nconstraints_resource_property = sagemaker.CfnModelExplainabilityJobDefinition.ConstraintsResourceProperty(\n    s3_uri=\"s3Uri\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nConstraintsResourceProperty constraintsResourceProperty = new ConstraintsResourceProperty {\n    S3Uri = \"s3Uri\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nConstraintsResourceProperty constraintsResourceProperty = ConstraintsResourceProperty.builder()\n        .s3Uri(\"s3Uri\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nconstraintsResourceProperty := &constraintsResourceProperty{\n\ts3Uri: jsii.String(\"s3Uri\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst constraintsResourceProperty: sagemaker.CfnModelExplainabilityJobDefinition.ConstraintsResourceProperty = {\n  s3Uri: 's3Uri',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.ConstraintsResourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.ConstraintsResourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst constraintsResourceProperty: sagemaker.CfnModelExplainabilityJobDefinition.ConstraintsResourceProperty = {\n  s3Uri: 's3Uri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "a3dff063e719c0ee99ff78a497aed4c4ba219901d830d99213d4d645c6c238da"
    },
    "c385766d8ae643e3128985ae6cdc40d69f94e344c93d0093655d549c75800813": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nendpoint_input_property = sagemaker.CfnModelExplainabilityJobDefinition.EndpointInputProperty(\n    endpoint_name=\"endpointName\",\n    local_path=\"localPath\",\n\n    # the properties below are optional\n    features_attribute=\"featuresAttribute\",\n    inference_attribute=\"inferenceAttribute\",\n    probability_attribute=\"probabilityAttribute\",\n    s3_data_distribution_type=\"s3DataDistributionType\",\n    s3_input_mode=\"s3InputMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nEndpointInputProperty endpointInputProperty = new EndpointInputProperty {\n    EndpointName = \"endpointName\",\n    LocalPath = \"localPath\",\n\n    // the properties below are optional\n    FeaturesAttribute = \"featuresAttribute\",\n    InferenceAttribute = \"inferenceAttribute\",\n    ProbabilityAttribute = \"probabilityAttribute\",\n    S3DataDistributionType = \"s3DataDistributionType\",\n    S3InputMode = \"s3InputMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nEndpointInputProperty endpointInputProperty = EndpointInputProperty.builder()\n        .endpointName(\"endpointName\")\n        .localPath(\"localPath\")\n\n        // the properties below are optional\n        .featuresAttribute(\"featuresAttribute\")\n        .inferenceAttribute(\"inferenceAttribute\")\n        .probabilityAttribute(\"probabilityAttribute\")\n        .s3DataDistributionType(\"s3DataDistributionType\")\n        .s3InputMode(\"s3InputMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nendpointInputProperty := &endpointInputProperty{\n\tendpointName: jsii.String(\"endpointName\"),\n\tlocalPath: jsii.String(\"localPath\"),\n\n\t// the properties below are optional\n\tfeaturesAttribute: jsii.String(\"featuresAttribute\"),\n\tinferenceAttribute: jsii.String(\"inferenceAttribute\"),\n\tprobabilityAttribute: jsii.String(\"probabilityAttribute\"),\n\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\ts3InputMode: jsii.String(\"s3InputMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst endpointInputProperty: sagemaker.CfnModelExplainabilityJobDefinition.EndpointInputProperty = {\n  endpointName: 'endpointName',\n  localPath: 'localPath',\n\n  // the properties below are optional\n  featuresAttribute: 'featuresAttribute',\n  inferenceAttribute: 'inferenceAttribute',\n  probabilityAttribute: 'probabilityAttribute',\n  s3DataDistributionType: 's3DataDistributionType',\n  s3InputMode: 's3InputMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.EndpointInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.EndpointInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst endpointInputProperty: sagemaker.CfnModelExplainabilityJobDefinition.EndpointInputProperty = {\n  endpointName: 'endpointName',\n  localPath: 'localPath',\n\n  // the properties below are optional\n  featuresAttribute: 'featuresAttribute',\n  inferenceAttribute: 'inferenceAttribute',\n  probabilityAttribute: 'probabilityAttribute',\n  s3DataDistributionType: 's3DataDistributionType',\n  s3InputMode: 's3InputMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 12,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "f5f7650450124d5fb44371bc1b115cf7e900a965eead2e713eb3febe64ee4c77"
    },
    "8e2dd8200ee7793306b564731bf4f8390ec5730adb99eb199e65b0d61c8c4bcf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmodel_explainability_app_specification_property = sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityAppSpecificationProperty(\n    config_uri=\"configUri\",\n    image_uri=\"imageUri\",\n\n    # the properties below are optional\n    environment={\n        \"environment_key\": \"environment\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nModelExplainabilityAppSpecificationProperty modelExplainabilityAppSpecificationProperty = new ModelExplainabilityAppSpecificationProperty {\n    ConfigUri = \"configUri\",\n    ImageUri = \"imageUri\",\n\n    // the properties below are optional\n    Environment = new Dictionary<string, string> {\n        { \"environmentKey\", \"environment\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nModelExplainabilityAppSpecificationProperty modelExplainabilityAppSpecificationProperty = ModelExplainabilityAppSpecificationProperty.builder()\n        .configUri(\"configUri\")\n        .imageUri(\"imageUri\")\n\n        // the properties below are optional\n        .environment(Map.of(\n                \"environmentKey\", \"environment\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmodelExplainabilityAppSpecificationProperty := &modelExplainabilityAppSpecificationProperty{\n\tconfigUri: jsii.String(\"configUri\"),\n\timageUri: jsii.String(\"imageUri\"),\n\n\t// the properties below are optional\n\tenvironment: map[string]*string{\n\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst modelExplainabilityAppSpecificationProperty: sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityAppSpecificationProperty = {\n  configUri: 'configUri',\n  imageUri: 'imageUri',\n\n  // the properties below are optional\n  environment: {\n    environmentKey: 'environment',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityAppSpecificationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityAppSpecificationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst modelExplainabilityAppSpecificationProperty: sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityAppSpecificationProperty = {\n  configUri: 'configUri',\n  imageUri: 'imageUri',\n\n  // the properties below are optional\n  environment: {\n    environmentKey: 'environment',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "35928fe659e602198d9b73207e44cb6178e36e63956ad4f52e13cc857514035f"
    },
    "2e9fdc5d4cd387dcce67dabdb61d71fddb223636763b357bb37d45415caf5eb1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmodel_explainability_baseline_config_property = sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityBaselineConfigProperty(\n    baselining_job_name=\"baseliningJobName\",\n    constraints_resource=sagemaker.CfnModelExplainabilityJobDefinition.ConstraintsResourceProperty(\n        s3_uri=\"s3Uri\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nModelExplainabilityBaselineConfigProperty modelExplainabilityBaselineConfigProperty = new ModelExplainabilityBaselineConfigProperty {\n    BaseliningJobName = \"baseliningJobName\",\n    ConstraintsResource = new ConstraintsResourceProperty {\n        S3Uri = \"s3Uri\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nModelExplainabilityBaselineConfigProperty modelExplainabilityBaselineConfigProperty = ModelExplainabilityBaselineConfigProperty.builder()\n        .baseliningJobName(\"baseliningJobName\")\n        .constraintsResource(ConstraintsResourceProperty.builder()\n                .s3Uri(\"s3Uri\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmodelExplainabilityBaselineConfigProperty := &modelExplainabilityBaselineConfigProperty{\n\tbaseliningJobName: jsii.String(\"baseliningJobName\"),\n\tconstraintsResource: &constraintsResourceProperty{\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst modelExplainabilityBaselineConfigProperty: sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityBaselineConfigProperty = {\n  baseliningJobName: 'baseliningJobName',\n  constraintsResource: {\n    s3Uri: 's3Uri',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityBaselineConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityBaselineConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst modelExplainabilityBaselineConfigProperty: sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityBaselineConfigProperty = {\n  baseliningJobName: 'baseliningJobName',\n  constraintsResource: {\n    s3Uri: 's3Uri',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "8dbbea59873dadd470214424025886bf0a5f9de113e5bb14d64e1a269f6e28fd"
    },
    "00548fc85c6f1047224ea276d3c8d02adcb207621e3a9701d76000c6b8279ef4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmodel_explainability_job_input_property = sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityJobInputProperty(\n    endpoint_input=sagemaker.CfnModelExplainabilityJobDefinition.EndpointInputProperty(\n        endpoint_name=\"endpointName\",\n        local_path=\"localPath\",\n\n        # the properties below are optional\n        features_attribute=\"featuresAttribute\",\n        inference_attribute=\"inferenceAttribute\",\n        probability_attribute=\"probabilityAttribute\",\n        s3_data_distribution_type=\"s3DataDistributionType\",\n        s3_input_mode=\"s3InputMode\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nModelExplainabilityJobInputProperty modelExplainabilityJobInputProperty = new ModelExplainabilityJobInputProperty {\n    EndpointInput = new EndpointInputProperty {\n        EndpointName = \"endpointName\",\n        LocalPath = \"localPath\",\n\n        // the properties below are optional\n        FeaturesAttribute = \"featuresAttribute\",\n        InferenceAttribute = \"inferenceAttribute\",\n        ProbabilityAttribute = \"probabilityAttribute\",\n        S3DataDistributionType = \"s3DataDistributionType\",\n        S3InputMode = \"s3InputMode\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nModelExplainabilityJobInputProperty modelExplainabilityJobInputProperty = ModelExplainabilityJobInputProperty.builder()\n        .endpointInput(EndpointInputProperty.builder()\n                .endpointName(\"endpointName\")\n                .localPath(\"localPath\")\n\n                // the properties below are optional\n                .featuresAttribute(\"featuresAttribute\")\n                .inferenceAttribute(\"inferenceAttribute\")\n                .probabilityAttribute(\"probabilityAttribute\")\n                .s3DataDistributionType(\"s3DataDistributionType\")\n                .s3InputMode(\"s3InputMode\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmodelExplainabilityJobInputProperty := &modelExplainabilityJobInputProperty{\n\tendpointInput: &endpointInputProperty{\n\t\tendpointName: jsii.String(\"endpointName\"),\n\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t// the properties below are optional\n\t\tfeaturesAttribute: jsii.String(\"featuresAttribute\"),\n\t\tinferenceAttribute: jsii.String(\"inferenceAttribute\"),\n\t\tprobabilityAttribute: jsii.String(\"probabilityAttribute\"),\n\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst modelExplainabilityJobInputProperty: sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityJobInputProperty = {\n  endpointInput: {\n    endpointName: 'endpointName',\n    localPath: 'localPath',\n\n    // the properties below are optional\n    featuresAttribute: 'featuresAttribute',\n    inferenceAttribute: 'inferenceAttribute',\n    probabilityAttribute: 'probabilityAttribute',\n    s3DataDistributionType: 's3DataDistributionType',\n    s3InputMode: 's3InputMode',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityJobInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityJobInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst modelExplainabilityJobInputProperty: sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityJobInputProperty = {\n  endpointInput: {\n    endpointName: 'endpointName',\n    localPath: 'localPath',\n\n    // the properties below are optional\n    featuresAttribute: 'featuresAttribute',\n    inferenceAttribute: 'inferenceAttribute',\n    probabilityAttribute: 'probabilityAttribute',\n    s3DataDistributionType: 's3DataDistributionType',\n    s3InputMode: 's3InputMode',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 13,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "abd9dcbf58b33151214bcda84caf9f51d5379577709ce39adb13cbd15af4c71d"
    },
    "360f2c0dd990ecea1367c3b9be14bd941e0338b365c883983120879a4abc07d5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_output_config_property = sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputConfigProperty(\n    monitoring_outputs=[sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputProperty(\n        s3_output=sagemaker.CfnModelExplainabilityJobDefinition.S3OutputProperty(\n            local_path=\"localPath\",\n            s3_uri=\"s3Uri\",\n\n            # the properties below are optional\n            s3_upload_mode=\"s3UploadMode\"\n        )\n    )],\n\n    # the properties below are optional\n    kms_key_id=\"kmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringOutputConfigProperty monitoringOutputConfigProperty = new MonitoringOutputConfigProperty {\n    MonitoringOutputs = new [] { new MonitoringOutputProperty {\n        S3Output = new S3OutputProperty {\n            LocalPath = \"localPath\",\n            S3Uri = \"s3Uri\",\n\n            // the properties below are optional\n            S3UploadMode = \"s3UploadMode\"\n        }\n    } },\n\n    // the properties below are optional\n    KmsKeyId = \"kmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringOutputConfigProperty monitoringOutputConfigProperty = MonitoringOutputConfigProperty.builder()\n        .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                .s3Output(S3OutputProperty.builder()\n                        .localPath(\"localPath\")\n                        .s3Uri(\"s3Uri\")\n\n                        // the properties below are optional\n                        .s3UploadMode(\"s3UploadMode\")\n                        .build())\n                .build()))\n\n        // the properties below are optional\n        .kmsKeyId(\"kmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringOutputConfigProperty := &monitoringOutputConfigProperty{\n\tmonitoringOutputs: []interface{}{\n\t\t&monitoringOutputProperty{\n\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringOutputConfigProperty: sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputConfigProperty = {\n  monitoringOutputs: [{\n    s3Output: {\n      localPath: 'localPath',\n      s3Uri: 's3Uri',\n\n      // the properties below are optional\n      s3UploadMode: 's3UploadMode',\n    },\n  }],\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringOutputConfigProperty: sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputConfigProperty = {\n  monitoringOutputs: [{\n    s3Output: {\n      localPath: 'localPath',\n      s3Uri: 's3Uri',\n\n      // the properties below are optional\n      s3UploadMode: 's3UploadMode',\n    },\n  }],\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 11,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "14ce0505659e6b3febf79ddea90cbe05cd3ba8f4999613b7604699d6346e35f8"
    },
    "7261b9e73dd90c1022c3f18b97604b20bba226b2faa8c03d787c661f9fba6e65": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_output_property = sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputProperty(\n    s3_output=sagemaker.CfnModelExplainabilityJobDefinition.S3OutputProperty(\n        local_path=\"localPath\",\n        s3_uri=\"s3Uri\",\n\n        # the properties below are optional\n        s3_upload_mode=\"s3UploadMode\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringOutputProperty monitoringOutputProperty = new MonitoringOutputProperty {\n    S3Output = new S3OutputProperty {\n        LocalPath = \"localPath\",\n        S3Uri = \"s3Uri\",\n\n        // the properties below are optional\n        S3UploadMode = \"s3UploadMode\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringOutputProperty monitoringOutputProperty = MonitoringOutputProperty.builder()\n        .s3Output(S3OutputProperty.builder()\n                .localPath(\"localPath\")\n                .s3Uri(\"s3Uri\")\n\n                // the properties below are optional\n                .s3UploadMode(\"s3UploadMode\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringOutputProperty := &monitoringOutputProperty{\n\ts3Output: &s3OutputProperty{\n\t\tlocalPath: jsii.String(\"localPath\"),\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t// the properties below are optional\n\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringOutputProperty: sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputProperty = {\n  s3Output: {\n    localPath: 'localPath',\n    s3Uri: 's3Uri',\n\n    // the properties below are optional\n    s3UploadMode: 's3UploadMode',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringOutputProperty: sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputProperty = {\n  s3Output: {\n    localPath: 'localPath',\n    s3Uri: 's3Uri',\n\n    // the properties below are optional\n    s3UploadMode: 's3UploadMode',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "fb125a01006b7e170ec356f53108d39cc68175ba71840278a9e4e3c9f3901762"
    },
    "10f46a6a9c90052f65eee3d171743fe9175f00c4205d2b80b257980335238d4b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_resources_property = sagemaker.CfnModelExplainabilityJobDefinition.MonitoringResourcesProperty(\n    cluster_config=sagemaker.CfnModelExplainabilityJobDefinition.ClusterConfigProperty(\n        instance_count=123,\n        instance_type=\"instanceType\",\n        volume_size_in_gb=123,\n\n        # the properties below are optional\n        volume_kms_key_id=\"volumeKmsKeyId\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringResourcesProperty monitoringResourcesProperty = new MonitoringResourcesProperty {\n    ClusterConfig = new ClusterConfigProperty {\n        InstanceCount = 123,\n        InstanceType = \"instanceType\",\n        VolumeSizeInGb = 123,\n\n        // the properties below are optional\n        VolumeKmsKeyId = \"volumeKmsKeyId\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringResourcesProperty monitoringResourcesProperty = MonitoringResourcesProperty.builder()\n        .clusterConfig(ClusterConfigProperty.builder()\n                .instanceCount(123)\n                .instanceType(\"instanceType\")\n                .volumeSizeInGb(123)\n\n                // the properties below are optional\n                .volumeKmsKeyId(\"volumeKmsKeyId\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringResourcesProperty := &monitoringResourcesProperty{\n\tclusterConfig: &clusterConfigProperty{\n\t\tinstanceCount: jsii.Number(123),\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringResourcesProperty: sagemaker.CfnModelExplainabilityJobDefinition.MonitoringResourcesProperty = {\n  clusterConfig: {\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    volumeSizeInGb: 123,\n\n    // the properties below are optional\n    volumeKmsKeyId: 'volumeKmsKeyId',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.MonitoringResourcesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.MonitoringResourcesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringResourcesProperty: sagemaker.CfnModelExplainabilityJobDefinition.MonitoringResourcesProperty = {\n  clusterConfig: {\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    volumeSizeInGb: 123,\n\n    // the properties below are optional\n    volumeKmsKeyId: 'volumeKmsKeyId',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "1cd649476cea633fbb2abe737701eef1c4a2eb85ec5473ed13a9c5fe0d59da19"
    },
    "2ecc58643206f27d71c1a32d2ee18233602130aa9a0f03b98b5693f384e1dd5b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nnetwork_config_property = sagemaker.CfnModelExplainabilityJobDefinition.NetworkConfigProperty(\n    enable_inter_container_traffic_encryption=False,\n    enable_network_isolation=False,\n    vpc_config=sagemaker.CfnModelExplainabilityJobDefinition.VpcConfigProperty(\n        security_group_ids=[\"securityGroupIds\"],\n        subnets=[\"subnets\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nNetworkConfigProperty networkConfigProperty = new NetworkConfigProperty {\n    EnableInterContainerTrafficEncryption = false,\n    EnableNetworkIsolation = false,\n    VpcConfig = new VpcConfigProperty {\n        SecurityGroupIds = new [] { \"securityGroupIds\" },\n        Subnets = new [] { \"subnets\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nNetworkConfigProperty networkConfigProperty = NetworkConfigProperty.builder()\n        .enableInterContainerTrafficEncryption(false)\n        .enableNetworkIsolation(false)\n        .vpcConfig(VpcConfigProperty.builder()\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .subnets(List.of(\"subnets\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nnetworkConfigProperty := &networkConfigProperty{\n\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\tenableNetworkIsolation: jsii.Boolean(false),\n\tvpcConfig: &vpcConfigProperty{\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t\tsubnets: []*string{\n\t\t\tjsii.String(\"subnets\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst networkConfigProperty: sagemaker.CfnModelExplainabilityJobDefinition.NetworkConfigProperty = {\n  enableInterContainerTrafficEncryption: false,\n  enableNetworkIsolation: false,\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.NetworkConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.NetworkConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst networkConfigProperty: sagemaker.CfnModelExplainabilityJobDefinition.NetworkConfigProperty = {\n  enableInterContainerTrafficEncryption: false,\n  enableNetworkIsolation: false,\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "eb7142360192d6abc6d328374ba7e21b330a636069a9c191862c103d20193e4b"
    },
    "992871fb69f4f4bff8b029fb29c9735e4105ce5187f20cb6395b54a89d14ef9a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ns3_output_property = sagemaker.CfnModelExplainabilityJobDefinition.S3OutputProperty(\n    local_path=\"localPath\",\n    s3_uri=\"s3Uri\",\n\n    # the properties below are optional\n    s3_upload_mode=\"s3UploadMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nS3OutputProperty s3OutputProperty = new S3OutputProperty {\n    LocalPath = \"localPath\",\n    S3Uri = \"s3Uri\",\n\n    // the properties below are optional\n    S3UploadMode = \"s3UploadMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nS3OutputProperty s3OutputProperty = S3OutputProperty.builder()\n        .localPath(\"localPath\")\n        .s3Uri(\"s3Uri\")\n\n        // the properties below are optional\n        .s3UploadMode(\"s3UploadMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ns3OutputProperty := &s3OutputProperty{\n\tlocalPath: jsii.String(\"localPath\"),\n\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t// the properties below are optional\n\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst s3OutputProperty: sagemaker.CfnModelExplainabilityJobDefinition.S3OutputProperty = {\n  localPath: 'localPath',\n  s3Uri: 's3Uri',\n\n  // the properties below are optional\n  s3UploadMode: 's3UploadMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.S3OutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.S3OutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3OutputProperty: sagemaker.CfnModelExplainabilityJobDefinition.S3OutputProperty = {\n  localPath: 'localPath',\n  s3Uri: 's3Uri',\n\n  // the properties below are optional\n  s3UploadMode: 's3UploadMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "995b16f9996ff1993d62b6a7da345d704ffe5c055dd9e046aff62c48d718826d"
    },
    "d892f0c7f12a3733f491aee98e59030be1c0ae00f6d6fdb452f15bf5b63dcb4d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nstopping_condition_property = sagemaker.CfnModelExplainabilityJobDefinition.StoppingConditionProperty(\n    max_runtime_in_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nStoppingConditionProperty stoppingConditionProperty = new StoppingConditionProperty {\n    MaxRuntimeInSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nStoppingConditionProperty stoppingConditionProperty = StoppingConditionProperty.builder()\n        .maxRuntimeInSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nstoppingConditionProperty := &stoppingConditionProperty{\n\tmaxRuntimeInSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst stoppingConditionProperty: sagemaker.CfnModelExplainabilityJobDefinition.StoppingConditionProperty = {\n  maxRuntimeInSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.StoppingConditionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.StoppingConditionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stoppingConditionProperty: sagemaker.CfnModelExplainabilityJobDefinition.StoppingConditionProperty = {\n  maxRuntimeInSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "96c9282b94bd0628c47d6bb38ddd4c974f2362ca6204af171ff34f4f9301836c"
    },
    "49f9433e2412718ad8f1d74130dd90dc2f0d4c210b4712cf39066154f319f106": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nvpc_config_property = sagemaker.CfnModelExplainabilityJobDefinition.VpcConfigProperty(\n    security_group_ids=[\"securityGroupIds\"],\n    subnets=[\"subnets\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nVpcConfigProperty vpcConfigProperty = new VpcConfigProperty {\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    Subnets = new [] { \"subnets\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nVpcConfigProperty vpcConfigProperty = VpcConfigProperty.builder()\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .subnets(List.of(\"subnets\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvpcConfigProperty := &vpcConfigProperty{\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsubnets: []*string{\n\t\tjsii.String(\"subnets\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst vpcConfigProperty: sagemaker.CfnModelExplainabilityJobDefinition.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnets: ['subnets'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.VpcConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinition.VpcConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vpcConfigProperty: sagemaker.CfnModelExplainabilityJobDefinition.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnets: ['subnets'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "5f38e0c35aa963e10e7feecd1332662ffb6d8a2e927df77a711b9734238a9d07"
    },
    "aa004b8b6e2c1baf847b8634461a2a9b3e034554754998cc68a1677b98e91fe0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_model_explainability_job_definition_props = sagemaker.CfnModelExplainabilityJobDefinitionProps(\n    job_resources=sagemaker.CfnModelExplainabilityJobDefinition.MonitoringResourcesProperty(\n        cluster_config=sagemaker.CfnModelExplainabilityJobDefinition.ClusterConfigProperty(\n            instance_count=123,\n            instance_type=\"instanceType\",\n            volume_size_in_gb=123,\n\n            # the properties below are optional\n            volume_kms_key_id=\"volumeKmsKeyId\"\n        )\n    ),\n    model_explainability_app_specification=sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityAppSpecificationProperty(\n        config_uri=\"configUri\",\n        image_uri=\"imageUri\",\n\n        # the properties below are optional\n        environment={\n            \"environment_key\": \"environment\"\n        }\n    ),\n    model_explainability_job_input=sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityJobInputProperty(\n        endpoint_input=sagemaker.CfnModelExplainabilityJobDefinition.EndpointInputProperty(\n            endpoint_name=\"endpointName\",\n            local_path=\"localPath\",\n\n            # the properties below are optional\n            features_attribute=\"featuresAttribute\",\n            inference_attribute=\"inferenceAttribute\",\n            probability_attribute=\"probabilityAttribute\",\n            s3_data_distribution_type=\"s3DataDistributionType\",\n            s3_input_mode=\"s3InputMode\"\n        )\n    ),\n    model_explainability_job_output_config=sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputConfigProperty(\n        monitoring_outputs=[sagemaker.CfnModelExplainabilityJobDefinition.MonitoringOutputProperty(\n            s3_output=sagemaker.CfnModelExplainabilityJobDefinition.S3OutputProperty(\n                local_path=\"localPath\",\n                s3_uri=\"s3Uri\",\n\n                # the properties below are optional\n                s3_upload_mode=\"s3UploadMode\"\n            )\n        )],\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    job_definition_name=\"jobDefinitionName\",\n    model_explainability_baseline_config=sagemaker.CfnModelExplainabilityJobDefinition.ModelExplainabilityBaselineConfigProperty(\n        baselining_job_name=\"baseliningJobName\",\n        constraints_resource=sagemaker.CfnModelExplainabilityJobDefinition.ConstraintsResourceProperty(\n            s3_uri=\"s3Uri\"\n        )\n    ),\n    network_config=sagemaker.CfnModelExplainabilityJobDefinition.NetworkConfigProperty(\n        enable_inter_container_traffic_encryption=False,\n        enable_network_isolation=False,\n        vpc_config=sagemaker.CfnModelExplainabilityJobDefinition.VpcConfigProperty(\n            security_group_ids=[\"securityGroupIds\"],\n            subnets=[\"subnets\"]\n        )\n    ),\n    stopping_condition=sagemaker.CfnModelExplainabilityJobDefinition.StoppingConditionProperty(\n        max_runtime_in_seconds=123\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnModelExplainabilityJobDefinitionProps cfnModelExplainabilityJobDefinitionProps = new CfnModelExplainabilityJobDefinitionProps {\n    JobResources = new MonitoringResourcesProperty {\n        ClusterConfig = new ClusterConfigProperty {\n            InstanceCount = 123,\n            InstanceType = \"instanceType\",\n            VolumeSizeInGb = 123,\n\n            // the properties below are optional\n            VolumeKmsKeyId = \"volumeKmsKeyId\"\n        }\n    },\n    ModelExplainabilityAppSpecification = new ModelExplainabilityAppSpecificationProperty {\n        ConfigUri = \"configUri\",\n        ImageUri = \"imageUri\",\n\n        // the properties below are optional\n        Environment = new Dictionary<string, string> {\n            { \"environmentKey\", \"environment\" }\n        }\n    },\n    ModelExplainabilityJobInput = new ModelExplainabilityJobInputProperty {\n        EndpointInput = new EndpointInputProperty {\n            EndpointName = \"endpointName\",\n            LocalPath = \"localPath\",\n\n            // the properties below are optional\n            FeaturesAttribute = \"featuresAttribute\",\n            InferenceAttribute = \"inferenceAttribute\",\n            ProbabilityAttribute = \"probabilityAttribute\",\n            S3DataDistributionType = \"s3DataDistributionType\",\n            S3InputMode = \"s3InputMode\"\n        }\n    },\n    ModelExplainabilityJobOutputConfig = new MonitoringOutputConfigProperty {\n        MonitoringOutputs = new [] { new MonitoringOutputProperty {\n            S3Output = new S3OutputProperty {\n                LocalPath = \"localPath\",\n                S3Uri = \"s3Uri\",\n\n                // the properties below are optional\n                S3UploadMode = \"s3UploadMode\"\n            }\n        } },\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    JobDefinitionName = \"jobDefinitionName\",\n    ModelExplainabilityBaselineConfig = new ModelExplainabilityBaselineConfigProperty {\n        BaseliningJobName = \"baseliningJobName\",\n        ConstraintsResource = new ConstraintsResourceProperty {\n            S3Uri = \"s3Uri\"\n        }\n    },\n    NetworkConfig = new NetworkConfigProperty {\n        EnableInterContainerTrafficEncryption = false,\n        EnableNetworkIsolation = false,\n        VpcConfig = new VpcConfigProperty {\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            Subnets = new [] { \"subnets\" }\n        }\n    },\n    StoppingCondition = new StoppingConditionProperty {\n        MaxRuntimeInSeconds = 123\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnModelExplainabilityJobDefinitionProps cfnModelExplainabilityJobDefinitionProps = CfnModelExplainabilityJobDefinitionProps.builder()\n        .jobResources(MonitoringResourcesProperty.builder()\n                .clusterConfig(ClusterConfigProperty.builder()\n                        .instanceCount(123)\n                        .instanceType(\"instanceType\")\n                        .volumeSizeInGb(123)\n\n                        // the properties below are optional\n                        .volumeKmsKeyId(\"volumeKmsKeyId\")\n                        .build())\n                .build())\n        .modelExplainabilityAppSpecification(ModelExplainabilityAppSpecificationProperty.builder()\n                .configUri(\"configUri\")\n                .imageUri(\"imageUri\")\n\n                // the properties below are optional\n                .environment(Map.of(\n                        \"environmentKey\", \"environment\"))\n                .build())\n        .modelExplainabilityJobInput(ModelExplainabilityJobInputProperty.builder()\n                .endpointInput(EndpointInputProperty.builder()\n                        .endpointName(\"endpointName\")\n                        .localPath(\"localPath\")\n\n                        // the properties below are optional\n                        .featuresAttribute(\"featuresAttribute\")\n                        .inferenceAttribute(\"inferenceAttribute\")\n                        .probabilityAttribute(\"probabilityAttribute\")\n                        .s3DataDistributionType(\"s3DataDistributionType\")\n                        .s3InputMode(\"s3InputMode\")\n                        .build())\n                .build())\n        .modelExplainabilityJobOutputConfig(MonitoringOutputConfigProperty.builder()\n                .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                        .s3Output(S3OutputProperty.builder()\n                                .localPath(\"localPath\")\n                                .s3Uri(\"s3Uri\")\n\n                                // the properties below are optional\n                                .s3UploadMode(\"s3UploadMode\")\n                                .build())\n                        .build()))\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .jobDefinitionName(\"jobDefinitionName\")\n        .modelExplainabilityBaselineConfig(ModelExplainabilityBaselineConfigProperty.builder()\n                .baseliningJobName(\"baseliningJobName\")\n                .constraintsResource(ConstraintsResourceProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .build())\n        .networkConfig(NetworkConfigProperty.builder()\n                .enableInterContainerTrafficEncryption(false)\n                .enableNetworkIsolation(false)\n                .vpcConfig(VpcConfigProperty.builder()\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnets(List.of(\"subnets\"))\n                        .build())\n                .build())\n        .stoppingCondition(StoppingConditionProperty.builder()\n                .maxRuntimeInSeconds(123)\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnModelExplainabilityJobDefinitionProps := &cfnModelExplainabilityJobDefinitionProps{\n\tjobResources: &monitoringResourcesProperty{\n\t\tclusterConfig: &clusterConfigProperty{\n\t\t\tinstanceCount: jsii.Number(123),\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t\t},\n\t},\n\tmodelExplainabilityAppSpecification: &modelExplainabilityAppSpecificationProperty{\n\t\tconfigUri: jsii.String(\"configUri\"),\n\t\timageUri: jsii.String(\"imageUri\"),\n\n\t\t// the properties below are optional\n\t\tenvironment: map[string]*string{\n\t\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t\t},\n\t},\n\tmodelExplainabilityJobInput: &modelExplainabilityJobInputProperty{\n\t\tendpointInput: &endpointInputProperty{\n\t\t\tendpointName: jsii.String(\"endpointName\"),\n\t\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t\t// the properties below are optional\n\t\t\tfeaturesAttribute: jsii.String(\"featuresAttribute\"),\n\t\t\tinferenceAttribute: jsii.String(\"inferenceAttribute\"),\n\t\t\tprobabilityAttribute: jsii.String(\"probabilityAttribute\"),\n\t\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\t},\n\t},\n\tmodelExplainabilityJobOutputConfig: &monitoringOutputConfigProperty{\n\t\tmonitoringOutputs: []interface{}{\n\t\t\t&monitoringOutputProperty{\n\t\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tjobDefinitionName: jsii.String(\"jobDefinitionName\"),\n\tmodelExplainabilityBaselineConfig: &modelExplainabilityBaselineConfigProperty{\n\t\tbaseliningJobName: jsii.String(\"baseliningJobName\"),\n\t\tconstraintsResource: &constraintsResourceProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t},\n\tnetworkConfig: &networkConfigProperty{\n\t\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\t\tenableNetworkIsolation: jsii.Boolean(false),\n\t\tvpcConfig: &vpcConfigProperty{\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnets: []*string{\n\t\t\t\tjsii.String(\"subnets\"),\n\t\t\t},\n\t\t},\n\t},\n\tstoppingCondition: &stoppingConditionProperty{\n\t\tmaxRuntimeInSeconds: jsii.Number(123),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnModelExplainabilityJobDefinitionProps: sagemaker.CfnModelExplainabilityJobDefinitionProps = {\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  modelExplainabilityAppSpecification: {\n    configUri: 'configUri',\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    environment: {\n      environmentKey: 'environment',\n    },\n  },\n  modelExplainabilityJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      featuresAttribute: 'featuresAttribute',\n      inferenceAttribute: 'inferenceAttribute',\n      probabilityAttribute: 'probabilityAttribute',\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n    },\n  },\n  modelExplainabilityJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  jobDefinitionName: 'jobDefinitionName',\n  modelExplainabilityBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinitionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelExplainabilityJobDefinitionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnModelExplainabilityJobDefinitionProps: sagemaker.CfnModelExplainabilityJobDefinitionProps = {\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  modelExplainabilityAppSpecification: {\n    configUri: 'configUri',\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    environment: {\n      environmentKey: 'environment',\n    },\n  },\n  modelExplainabilityJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      featuresAttribute: 'featuresAttribute',\n      inferenceAttribute: 'inferenceAttribute',\n      probabilityAttribute: 'probabilityAttribute',\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n    },\n  },\n  modelExplainabilityJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  jobDefinitionName: 'jobDefinitionName',\n  modelExplainabilityBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 25,
        "75": 48,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 4,
        "193": 16,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 44,
        "290": 1
      },
      "fqnsFingerprint": "703f0814f1233cf3fa9599a0dfc3f88b022b5490d128e7c6cf2a1fcbc30d33b5"
    },
    "ce880cf54b46a59f9706548b5c5a408c05178e678164c5b45d565c2140e300d8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\n# model_package_group_policy: Any\n\ncfn_model_package_group = sagemaker.CfnModelPackageGroup(self, \"MyCfnModelPackageGroup\",\n    model_package_group_name=\"modelPackageGroupName\",\n\n    # the properties below are optional\n    model_package_group_description=\"modelPackageGroupDescription\",\n    model_package_group_policy=model_package_group_policy,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nvar modelPackageGroupPolicy;\n\nCfnModelPackageGroup cfnModelPackageGroup = new CfnModelPackageGroup(this, \"MyCfnModelPackageGroup\", new CfnModelPackageGroupProps {\n    ModelPackageGroupName = \"modelPackageGroupName\",\n\n    // the properties below are optional\n    ModelPackageGroupDescription = \"modelPackageGroupDescription\",\n    ModelPackageGroupPolicy = modelPackageGroupPolicy,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nObject modelPackageGroupPolicy;\n\nCfnModelPackageGroup cfnModelPackageGroup = CfnModelPackageGroup.Builder.create(this, \"MyCfnModelPackageGroup\")\n        .modelPackageGroupName(\"modelPackageGroupName\")\n\n        // the properties below are optional\n        .modelPackageGroupDescription(\"modelPackageGroupDescription\")\n        .modelPackageGroupPolicy(modelPackageGroupPolicy)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvar modelPackageGroupPolicy interface{}\n\ncfnModelPackageGroup := sagemaker.NewCfnModelPackageGroup(this, jsii.String(\"MyCfnModelPackageGroup\"), &cfnModelPackageGroupProps{\n\tmodelPackageGroupName: jsii.String(\"modelPackageGroupName\"),\n\n\t// the properties below are optional\n\tmodelPackageGroupDescription: jsii.String(\"modelPackageGroupDescription\"),\n\tmodelPackageGroupPolicy: modelPackageGroupPolicy,\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const modelPackageGroupPolicy: any;\nconst cfnModelPackageGroup = new sagemaker.CfnModelPackageGroup(this, 'MyCfnModelPackageGroup', {\n  modelPackageGroupName: 'modelPackageGroupName',\n\n  // the properties below are optional\n  modelPackageGroupDescription: 'modelPackageGroupDescription',\n  modelPackageGroupPolicy: modelPackageGroupPolicy,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelPackageGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelPackageGroup",
        "@aws-cdk/aws-sagemaker.CfnModelPackageGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const modelPackageGroupPolicy: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnModelPackageGroup = new sagemaker.CfnModelPackageGroup(this, 'MyCfnModelPackageGroup', {\n  modelPackageGroupName: 'modelPackageGroupName',\n\n  // the properties below are optional\n  modelPackageGroupDescription: 'modelPackageGroupDescription',\n  modelPackageGroupPolicy: modelPackageGroupPolicy,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 12,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "346b050dfb97cdb7a2359595420d014a2594eec91b7fa0501f3c273d9004a6f8"
    },
    "99fbed56b212e11ea0d204519b344ddcf4c6f50967e3537dc314043f1a602648": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\n# model_package_group_policy: Any\n\ncfn_model_package_group_props = sagemaker.CfnModelPackageGroupProps(\n    model_package_group_name=\"modelPackageGroupName\",\n\n    # the properties below are optional\n    model_package_group_description=\"modelPackageGroupDescription\",\n    model_package_group_policy=model_package_group_policy,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nvar modelPackageGroupPolicy;\n\nCfnModelPackageGroupProps cfnModelPackageGroupProps = new CfnModelPackageGroupProps {\n    ModelPackageGroupName = \"modelPackageGroupName\",\n\n    // the properties below are optional\n    ModelPackageGroupDescription = \"modelPackageGroupDescription\",\n    ModelPackageGroupPolicy = modelPackageGroupPolicy,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nObject modelPackageGroupPolicy;\n\nCfnModelPackageGroupProps cfnModelPackageGroupProps = CfnModelPackageGroupProps.builder()\n        .modelPackageGroupName(\"modelPackageGroupName\")\n\n        // the properties below are optional\n        .modelPackageGroupDescription(\"modelPackageGroupDescription\")\n        .modelPackageGroupPolicy(modelPackageGroupPolicy)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvar modelPackageGroupPolicy interface{}\n\ncfnModelPackageGroupProps := &cfnModelPackageGroupProps{\n\tmodelPackageGroupName: jsii.String(\"modelPackageGroupName\"),\n\n\t// the properties below are optional\n\tmodelPackageGroupDescription: jsii.String(\"modelPackageGroupDescription\"),\n\tmodelPackageGroupPolicy: modelPackageGroupPolicy,\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const modelPackageGroupPolicy: any;\nconst cfnModelPackageGroupProps: sagemaker.CfnModelPackageGroupProps = {\n  modelPackageGroupName: 'modelPackageGroupName',\n\n  // the properties below are optional\n  modelPackageGroupDescription: 'modelPackageGroupDescription',\n  modelPackageGroupPolicy: modelPackageGroupPolicy,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelPackageGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelPackageGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const modelPackageGroupPolicy: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnModelPackageGroupProps: sagemaker.CfnModelPackageGroupProps = {\n  modelPackageGroupName: 'modelPackageGroupName',\n\n  // the properties below are optional\n  modelPackageGroupDescription: 'modelPackageGroupDescription',\n  modelPackageGroupPolicy: modelPackageGroupPolicy,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 12,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "5413be1569871a93199d336ded0cf6ce3a9c72afb92a7821b9ce721a457992f8"
    },
    "734c57ecf889d89a5a74e1cabde3132dbd644c6d4d17d3e3fe966f50417fd563": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\n# environment: Any\n\ncfn_model_props = sagemaker.CfnModelProps(\n    execution_role_arn=\"executionRoleArn\",\n\n    # the properties below are optional\n    containers=[sagemaker.CfnModel.ContainerDefinitionProperty(\n        container_hostname=\"containerHostname\",\n        environment=environment,\n        image=\"image\",\n        image_config=sagemaker.CfnModel.ImageConfigProperty(\n            repository_access_mode=\"repositoryAccessMode\",\n\n            # the properties below are optional\n            repository_auth_config=sagemaker.CfnModel.RepositoryAuthConfigProperty(\n                repository_credentials_provider_arn=\"repositoryCredentialsProviderArn\"\n            )\n        ),\n        inference_specification_name=\"inferenceSpecificationName\",\n        mode=\"mode\",\n        model_data_url=\"modelDataUrl\",\n        model_package_name=\"modelPackageName\",\n        multi_model_config=sagemaker.CfnModel.MultiModelConfigProperty(\n            model_cache_setting=\"modelCacheSetting\"\n        )\n    )],\n    enable_network_isolation=False,\n    inference_execution_config=sagemaker.CfnModel.InferenceExecutionConfigProperty(\n        mode=\"mode\"\n    ),\n    model_name=\"modelName\",\n    primary_container=sagemaker.CfnModel.ContainerDefinitionProperty(\n        container_hostname=\"containerHostname\",\n        environment=environment,\n        image=\"image\",\n        image_config=sagemaker.CfnModel.ImageConfigProperty(\n            repository_access_mode=\"repositoryAccessMode\",\n\n            # the properties below are optional\n            repository_auth_config=sagemaker.CfnModel.RepositoryAuthConfigProperty(\n                repository_credentials_provider_arn=\"repositoryCredentialsProviderArn\"\n            )\n        ),\n        inference_specification_name=\"inferenceSpecificationName\",\n        mode=\"mode\",\n        model_data_url=\"modelDataUrl\",\n        model_package_name=\"modelPackageName\",\n        multi_model_config=sagemaker.CfnModel.MultiModelConfigProperty(\n            model_cache_setting=\"modelCacheSetting\"\n        )\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    vpc_config=sagemaker.CfnModel.VpcConfigProperty(\n        security_group_ids=[\"securityGroupIds\"],\n        subnets=[\"subnets\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nvar environment;\n\nCfnModelProps cfnModelProps = new CfnModelProps {\n    ExecutionRoleArn = \"executionRoleArn\",\n\n    // the properties below are optional\n    Containers = new [] { new ContainerDefinitionProperty {\n        ContainerHostname = \"containerHostname\",\n        Environment = environment,\n        Image = \"image\",\n        ImageConfig = new ImageConfigProperty {\n            RepositoryAccessMode = \"repositoryAccessMode\",\n\n            // the properties below are optional\n            RepositoryAuthConfig = new RepositoryAuthConfigProperty {\n                RepositoryCredentialsProviderArn = \"repositoryCredentialsProviderArn\"\n            }\n        },\n        InferenceSpecificationName = \"inferenceSpecificationName\",\n        Mode = \"mode\",\n        ModelDataUrl = \"modelDataUrl\",\n        ModelPackageName = \"modelPackageName\",\n        MultiModelConfig = new MultiModelConfigProperty {\n            ModelCacheSetting = \"modelCacheSetting\"\n        }\n    } },\n    EnableNetworkIsolation = false,\n    InferenceExecutionConfig = new InferenceExecutionConfigProperty {\n        Mode = \"mode\"\n    },\n    ModelName = \"modelName\",\n    PrimaryContainer = new ContainerDefinitionProperty {\n        ContainerHostname = \"containerHostname\",\n        Environment = environment,\n        Image = \"image\",\n        ImageConfig = new ImageConfigProperty {\n            RepositoryAccessMode = \"repositoryAccessMode\",\n\n            // the properties below are optional\n            RepositoryAuthConfig = new RepositoryAuthConfigProperty {\n                RepositoryCredentialsProviderArn = \"repositoryCredentialsProviderArn\"\n            }\n        },\n        InferenceSpecificationName = \"inferenceSpecificationName\",\n        Mode = \"mode\",\n        ModelDataUrl = \"modelDataUrl\",\n        ModelPackageName = \"modelPackageName\",\n        MultiModelConfig = new MultiModelConfigProperty {\n            ModelCacheSetting = \"modelCacheSetting\"\n        }\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VpcConfig = new VpcConfigProperty {\n        SecurityGroupIds = new [] { \"securityGroupIds\" },\n        Subnets = new [] { \"subnets\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nObject environment;\n\nCfnModelProps cfnModelProps = CfnModelProps.builder()\n        .executionRoleArn(\"executionRoleArn\")\n\n        // the properties below are optional\n        .containers(List.of(ContainerDefinitionProperty.builder()\n                .containerHostname(\"containerHostname\")\n                .environment(environment)\n                .image(\"image\")\n                .imageConfig(ImageConfigProperty.builder()\n                        .repositoryAccessMode(\"repositoryAccessMode\")\n\n                        // the properties below are optional\n                        .repositoryAuthConfig(RepositoryAuthConfigProperty.builder()\n                                .repositoryCredentialsProviderArn(\"repositoryCredentialsProviderArn\")\n                                .build())\n                        .build())\n                .inferenceSpecificationName(\"inferenceSpecificationName\")\n                .mode(\"mode\")\n                .modelDataUrl(\"modelDataUrl\")\n                .modelPackageName(\"modelPackageName\")\n                .multiModelConfig(MultiModelConfigProperty.builder()\n                        .modelCacheSetting(\"modelCacheSetting\")\n                        .build())\n                .build()))\n        .enableNetworkIsolation(false)\n        .inferenceExecutionConfig(InferenceExecutionConfigProperty.builder()\n                .mode(\"mode\")\n                .build())\n        .modelName(\"modelName\")\n        .primaryContainer(ContainerDefinitionProperty.builder()\n                .containerHostname(\"containerHostname\")\n                .environment(environment)\n                .image(\"image\")\n                .imageConfig(ImageConfigProperty.builder()\n                        .repositoryAccessMode(\"repositoryAccessMode\")\n\n                        // the properties below are optional\n                        .repositoryAuthConfig(RepositoryAuthConfigProperty.builder()\n                                .repositoryCredentialsProviderArn(\"repositoryCredentialsProviderArn\")\n                                .build())\n                        .build())\n                .inferenceSpecificationName(\"inferenceSpecificationName\")\n                .mode(\"mode\")\n                .modelDataUrl(\"modelDataUrl\")\n                .modelPackageName(\"modelPackageName\")\n                .multiModelConfig(MultiModelConfigProperty.builder()\n                        .modelCacheSetting(\"modelCacheSetting\")\n                        .build())\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .vpcConfig(VpcConfigProperty.builder()\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .subnets(List.of(\"subnets\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvar environment interface{}\n\ncfnModelProps := &cfnModelProps{\n\texecutionRoleArn: jsii.String(\"executionRoleArn\"),\n\n\t// the properties below are optional\n\tcontainers: []interface{}{\n\t\t&containerDefinitionProperty{\n\t\t\tcontainerHostname: jsii.String(\"containerHostname\"),\n\t\t\tenvironment: environment,\n\t\t\timage: jsii.String(\"image\"),\n\t\t\timageConfig: &imageConfigProperty{\n\t\t\t\trepositoryAccessMode: jsii.String(\"repositoryAccessMode\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\trepositoryAuthConfig: &repositoryAuthConfigProperty{\n\t\t\t\t\trepositoryCredentialsProviderArn: jsii.String(\"repositoryCredentialsProviderArn\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tinferenceSpecificationName: jsii.String(\"inferenceSpecificationName\"),\n\t\t\tmode: jsii.String(\"mode\"),\n\t\t\tmodelDataUrl: jsii.String(\"modelDataUrl\"),\n\t\t\tmodelPackageName: jsii.String(\"modelPackageName\"),\n\t\t\tmultiModelConfig: &multiModelConfigProperty{\n\t\t\t\tmodelCacheSetting: jsii.String(\"modelCacheSetting\"),\n\t\t\t},\n\t\t},\n\t},\n\tenableNetworkIsolation: jsii.Boolean(false),\n\tinferenceExecutionConfig: &inferenceExecutionConfigProperty{\n\t\tmode: jsii.String(\"mode\"),\n\t},\n\tmodelName: jsii.String(\"modelName\"),\n\tprimaryContainer: &containerDefinitionProperty{\n\t\tcontainerHostname: jsii.String(\"containerHostname\"),\n\t\tenvironment: environment,\n\t\timage: jsii.String(\"image\"),\n\t\timageConfig: &imageConfigProperty{\n\t\t\trepositoryAccessMode: jsii.String(\"repositoryAccessMode\"),\n\n\t\t\t// the properties below are optional\n\t\t\trepositoryAuthConfig: &repositoryAuthConfigProperty{\n\t\t\t\trepositoryCredentialsProviderArn: jsii.String(\"repositoryCredentialsProviderArn\"),\n\t\t\t},\n\t\t},\n\t\tinferenceSpecificationName: jsii.String(\"inferenceSpecificationName\"),\n\t\tmode: jsii.String(\"mode\"),\n\t\tmodelDataUrl: jsii.String(\"modelDataUrl\"),\n\t\tmodelPackageName: jsii.String(\"modelPackageName\"),\n\t\tmultiModelConfig: &multiModelConfigProperty{\n\t\t\tmodelCacheSetting: jsii.String(\"modelCacheSetting\"),\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tvpcConfig: &vpcConfigProperty{\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t\tsubnets: []*string{\n\t\t\tjsii.String(\"subnets\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const environment: any;\nconst cfnModelProps: sagemaker.CfnModelProps = {\n  executionRoleArn: 'executionRoleArn',\n\n  // the properties below are optional\n  containers: [{\n    containerHostname: 'containerHostname',\n    environment: environment,\n    image: 'image',\n    imageConfig: {\n      repositoryAccessMode: 'repositoryAccessMode',\n\n      // the properties below are optional\n      repositoryAuthConfig: {\n        repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n      },\n    },\n    inferenceSpecificationName: 'inferenceSpecificationName',\n    mode: 'mode',\n    modelDataUrl: 'modelDataUrl',\n    modelPackageName: 'modelPackageName',\n    multiModelConfig: {\n      modelCacheSetting: 'modelCacheSetting',\n    },\n  }],\n  enableNetworkIsolation: false,\n  inferenceExecutionConfig: {\n    mode: 'mode',\n  },\n  modelName: 'modelName',\n  primaryContainer: {\n    containerHostname: 'containerHostname',\n    environment: environment,\n    image: 'image',\n    imageConfig: {\n      repositoryAccessMode: 'repositoryAccessMode',\n\n      // the properties below are optional\n      repositoryAuthConfig: {\n        repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n      },\n    },\n    inferenceSpecificationName: 'inferenceSpecificationName',\n    mode: 'mode',\n    modelDataUrl: 'modelDataUrl',\n    modelPackageName: 'modelPackageName',\n    multiModelConfig: {\n      modelCacheSetting: 'modelCacheSetting',\n    },\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const environment: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnModelProps: sagemaker.CfnModelProps = {\n  executionRoleArn: 'executionRoleArn',\n\n  // the properties below are optional\n  containers: [{\n    containerHostname: 'containerHostname',\n    environment: environment,\n    image: 'image',\n    imageConfig: {\n      repositoryAccessMode: 'repositoryAccessMode',\n\n      // the properties below are optional\n      repositoryAuthConfig: {\n        repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n      },\n    },\n    inferenceSpecificationName: 'inferenceSpecificationName',\n    mode: 'mode',\n    modelDataUrl: 'modelDataUrl',\n    modelPackageName: 'modelPackageName',\n    multiModelConfig: {\n      modelCacheSetting: 'modelCacheSetting',\n    },\n  }],\n  enableNetworkIsolation: false,\n  inferenceExecutionConfig: {\n    mode: 'mode',\n  },\n  modelName: 'modelName',\n  primaryContainer: {\n    containerHostname: 'containerHostname',\n    environment: environment,\n    image: 'image',\n    imageConfig: {\n      repositoryAccessMode: 'repositoryAccessMode',\n\n      // the properties below are optional\n      repositoryAuthConfig: {\n        repositoryCredentialsProviderArn: 'repositoryCredentialsProviderArn',\n      },\n    },\n    inferenceSpecificationName: 'inferenceSpecificationName',\n    mode: 'mode',\n    modelDataUrl: 'modelDataUrl',\n    modelPackageName: 'modelPackageName',\n    multiModelConfig: {\n      modelCacheSetting: 'modelCacheSetting',\n    },\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 26,
        "75": 46,
        "91": 1,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 4,
        "193": 12,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 39,
        "290": 1
      },
      "fqnsFingerprint": "9526febd09779528b7f6cfb218dfed3d8c7342609cb9eedfd88f2dee80f3755d"
    },
    "1277acccb781cb363f7e10fb7cad89c85ec01c605f3edbcfcf551dd2595ba64f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_model_quality_job_definition = sagemaker.CfnModelQualityJobDefinition(self, \"MyCfnModelQualityJobDefinition\",\n    job_resources=sagemaker.CfnModelQualityJobDefinition.MonitoringResourcesProperty(\n        cluster_config=sagemaker.CfnModelQualityJobDefinition.ClusterConfigProperty(\n            instance_count=123,\n            instance_type=\"instanceType\",\n            volume_size_in_gb=123,\n\n            # the properties below are optional\n            volume_kms_key_id=\"volumeKmsKeyId\"\n        )\n    ),\n    model_quality_app_specification=sagemaker.CfnModelQualityJobDefinition.ModelQualityAppSpecificationProperty(\n        image_uri=\"imageUri\",\n        problem_type=\"problemType\",\n\n        # the properties below are optional\n        container_arguments=[\"containerArguments\"],\n        container_entrypoint=[\"containerEntrypoint\"],\n        environment={\n            \"environment_key\": \"environment\"\n        },\n        post_analytics_processor_source_uri=\"postAnalyticsProcessorSourceUri\",\n        record_preprocessor_source_uri=\"recordPreprocessorSourceUri\"\n    ),\n    model_quality_job_input=sagemaker.CfnModelQualityJobDefinition.ModelQualityJobInputProperty(\n        endpoint_input=sagemaker.CfnModelQualityJobDefinition.EndpointInputProperty(\n            endpoint_name=\"endpointName\",\n            local_path=\"localPath\",\n\n            # the properties below are optional\n            end_time_offset=\"endTimeOffset\",\n            inference_attribute=\"inferenceAttribute\",\n            probability_attribute=\"probabilityAttribute\",\n            probability_threshold_attribute=123,\n            s3_data_distribution_type=\"s3DataDistributionType\",\n            s3_input_mode=\"s3InputMode\",\n            start_time_offset=\"startTimeOffset\"\n        ),\n        ground_truth_s3_input=sagemaker.CfnModelQualityJobDefinition.MonitoringGroundTruthS3InputProperty(\n            s3_uri=\"s3Uri\"\n        )\n    ),\n    model_quality_job_output_config=sagemaker.CfnModelQualityJobDefinition.MonitoringOutputConfigProperty(\n        monitoring_outputs=[sagemaker.CfnModelQualityJobDefinition.MonitoringOutputProperty(\n            s3_output=sagemaker.CfnModelQualityJobDefinition.S3OutputProperty(\n                local_path=\"localPath\",\n                s3_uri=\"s3Uri\",\n\n                # the properties below are optional\n                s3_upload_mode=\"s3UploadMode\"\n            )\n        )],\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    job_definition_name=\"jobDefinitionName\",\n    model_quality_baseline_config=sagemaker.CfnModelQualityJobDefinition.ModelQualityBaselineConfigProperty(\n        baselining_job_name=\"baseliningJobName\",\n        constraints_resource=sagemaker.CfnModelQualityJobDefinition.ConstraintsResourceProperty(\n            s3_uri=\"s3Uri\"\n        )\n    ),\n    network_config=sagemaker.CfnModelQualityJobDefinition.NetworkConfigProperty(\n        enable_inter_container_traffic_encryption=False,\n        enable_network_isolation=False,\n        vpc_config=sagemaker.CfnModelQualityJobDefinition.VpcConfigProperty(\n            security_group_ids=[\"securityGroupIds\"],\n            subnets=[\"subnets\"]\n        )\n    ),\n    stopping_condition=sagemaker.CfnModelQualityJobDefinition.StoppingConditionProperty(\n        max_runtime_in_seconds=123\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnModelQualityJobDefinition cfnModelQualityJobDefinition = new CfnModelQualityJobDefinition(this, \"MyCfnModelQualityJobDefinition\", new CfnModelQualityJobDefinitionProps {\n    JobResources = new MonitoringResourcesProperty {\n        ClusterConfig = new ClusterConfigProperty {\n            InstanceCount = 123,\n            InstanceType = \"instanceType\",\n            VolumeSizeInGb = 123,\n\n            // the properties below are optional\n            VolumeKmsKeyId = \"volumeKmsKeyId\"\n        }\n    },\n    ModelQualityAppSpecification = new ModelQualityAppSpecificationProperty {\n        ImageUri = \"imageUri\",\n        ProblemType = \"problemType\",\n\n        // the properties below are optional\n        ContainerArguments = new [] { \"containerArguments\" },\n        ContainerEntrypoint = new [] { \"containerEntrypoint\" },\n        Environment = new Dictionary<string, string> {\n            { \"environmentKey\", \"environment\" }\n        },\n        PostAnalyticsProcessorSourceUri = \"postAnalyticsProcessorSourceUri\",\n        RecordPreprocessorSourceUri = \"recordPreprocessorSourceUri\"\n    },\n    ModelQualityJobInput = new ModelQualityJobInputProperty {\n        EndpointInput = new EndpointInputProperty {\n            EndpointName = \"endpointName\",\n            LocalPath = \"localPath\",\n\n            // the properties below are optional\n            EndTimeOffset = \"endTimeOffset\",\n            InferenceAttribute = \"inferenceAttribute\",\n            ProbabilityAttribute = \"probabilityAttribute\",\n            ProbabilityThresholdAttribute = 123,\n            S3DataDistributionType = \"s3DataDistributionType\",\n            S3InputMode = \"s3InputMode\",\n            StartTimeOffset = \"startTimeOffset\"\n        },\n        GroundTruthS3Input = new MonitoringGroundTruthS3InputProperty {\n            S3Uri = \"s3Uri\"\n        }\n    },\n    ModelQualityJobOutputConfig = new MonitoringOutputConfigProperty {\n        MonitoringOutputs = new [] { new MonitoringOutputProperty {\n            S3Output = new S3OutputProperty {\n                LocalPath = \"localPath\",\n                S3Uri = \"s3Uri\",\n\n                // the properties below are optional\n                S3UploadMode = \"s3UploadMode\"\n            }\n        } },\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    JobDefinitionName = \"jobDefinitionName\",\n    ModelQualityBaselineConfig = new ModelQualityBaselineConfigProperty {\n        BaseliningJobName = \"baseliningJobName\",\n        ConstraintsResource = new ConstraintsResourceProperty {\n            S3Uri = \"s3Uri\"\n        }\n    },\n    NetworkConfig = new NetworkConfigProperty {\n        EnableInterContainerTrafficEncryption = false,\n        EnableNetworkIsolation = false,\n        VpcConfig = new VpcConfigProperty {\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            Subnets = new [] { \"subnets\" }\n        }\n    },\n    StoppingCondition = new StoppingConditionProperty {\n        MaxRuntimeInSeconds = 123\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnModelQualityJobDefinition cfnModelQualityJobDefinition = CfnModelQualityJobDefinition.Builder.create(this, \"MyCfnModelQualityJobDefinition\")\n        .jobResources(MonitoringResourcesProperty.builder()\n                .clusterConfig(ClusterConfigProperty.builder()\n                        .instanceCount(123)\n                        .instanceType(\"instanceType\")\n                        .volumeSizeInGb(123)\n\n                        // the properties below are optional\n                        .volumeKmsKeyId(\"volumeKmsKeyId\")\n                        .build())\n                .build())\n        .modelQualityAppSpecification(ModelQualityAppSpecificationProperty.builder()\n                .imageUri(\"imageUri\")\n                .problemType(\"problemType\")\n\n                // the properties below are optional\n                .containerArguments(List.of(\"containerArguments\"))\n                .containerEntrypoint(List.of(\"containerEntrypoint\"))\n                .environment(Map.of(\n                        \"environmentKey\", \"environment\"))\n                .postAnalyticsProcessorSourceUri(\"postAnalyticsProcessorSourceUri\")\n                .recordPreprocessorSourceUri(\"recordPreprocessorSourceUri\")\n                .build())\n        .modelQualityJobInput(ModelQualityJobInputProperty.builder()\n                .endpointInput(EndpointInputProperty.builder()\n                        .endpointName(\"endpointName\")\n                        .localPath(\"localPath\")\n\n                        // the properties below are optional\n                        .endTimeOffset(\"endTimeOffset\")\n                        .inferenceAttribute(\"inferenceAttribute\")\n                        .probabilityAttribute(\"probabilityAttribute\")\n                        .probabilityThresholdAttribute(123)\n                        .s3DataDistributionType(\"s3DataDistributionType\")\n                        .s3InputMode(\"s3InputMode\")\n                        .startTimeOffset(\"startTimeOffset\")\n                        .build())\n                .groundTruthS3Input(MonitoringGroundTruthS3InputProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .build())\n        .modelQualityJobOutputConfig(MonitoringOutputConfigProperty.builder()\n                .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                        .s3Output(S3OutputProperty.builder()\n                                .localPath(\"localPath\")\n                                .s3Uri(\"s3Uri\")\n\n                                // the properties below are optional\n                                .s3UploadMode(\"s3UploadMode\")\n                                .build())\n                        .build()))\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .jobDefinitionName(\"jobDefinitionName\")\n        .modelQualityBaselineConfig(ModelQualityBaselineConfigProperty.builder()\n                .baseliningJobName(\"baseliningJobName\")\n                .constraintsResource(ConstraintsResourceProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .build())\n        .networkConfig(NetworkConfigProperty.builder()\n                .enableInterContainerTrafficEncryption(false)\n                .enableNetworkIsolation(false)\n                .vpcConfig(VpcConfigProperty.builder()\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnets(List.of(\"subnets\"))\n                        .build())\n                .build())\n        .stoppingCondition(StoppingConditionProperty.builder()\n                .maxRuntimeInSeconds(123)\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnModelQualityJobDefinition := sagemaker.NewCfnModelQualityJobDefinition(this, jsii.String(\"MyCfnModelQualityJobDefinition\"), &cfnModelQualityJobDefinitionProps{\n\tjobResources: &monitoringResourcesProperty{\n\t\tclusterConfig: &clusterConfigProperty{\n\t\t\tinstanceCount: jsii.Number(123),\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t\t},\n\t},\n\tmodelQualityAppSpecification: &modelQualityAppSpecificationProperty{\n\t\timageUri: jsii.String(\"imageUri\"),\n\t\tproblemType: jsii.String(\"problemType\"),\n\n\t\t// the properties below are optional\n\t\tcontainerArguments: []*string{\n\t\t\tjsii.String(\"containerArguments\"),\n\t\t},\n\t\tcontainerEntrypoint: []*string{\n\t\t\tjsii.String(\"containerEntrypoint\"),\n\t\t},\n\t\tenvironment: map[string]*string{\n\t\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t\t},\n\t\tpostAnalyticsProcessorSourceUri: jsii.String(\"postAnalyticsProcessorSourceUri\"),\n\t\trecordPreprocessorSourceUri: jsii.String(\"recordPreprocessorSourceUri\"),\n\t},\n\tmodelQualityJobInput: &modelQualityJobInputProperty{\n\t\tendpointInput: &endpointInputProperty{\n\t\t\tendpointName: jsii.String(\"endpointName\"),\n\t\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t\t// the properties below are optional\n\t\t\tendTimeOffset: jsii.String(\"endTimeOffset\"),\n\t\t\tinferenceAttribute: jsii.String(\"inferenceAttribute\"),\n\t\t\tprobabilityAttribute: jsii.String(\"probabilityAttribute\"),\n\t\t\tprobabilityThresholdAttribute: jsii.Number(123),\n\t\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\t\tstartTimeOffset: jsii.String(\"startTimeOffset\"),\n\t\t},\n\t\tgroundTruthS3Input: &monitoringGroundTruthS3InputProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t},\n\tmodelQualityJobOutputConfig: &monitoringOutputConfigProperty{\n\t\tmonitoringOutputs: []interface{}{\n\t\t\t&monitoringOutputProperty{\n\t\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tjobDefinitionName: jsii.String(\"jobDefinitionName\"),\n\tmodelQualityBaselineConfig: &modelQualityBaselineConfigProperty{\n\t\tbaseliningJobName: jsii.String(\"baseliningJobName\"),\n\t\tconstraintsResource: &constraintsResourceProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t},\n\tnetworkConfig: &networkConfigProperty{\n\t\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\t\tenableNetworkIsolation: jsii.Boolean(false),\n\t\tvpcConfig: &vpcConfigProperty{\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnets: []*string{\n\t\t\t\tjsii.String(\"subnets\"),\n\t\t\t},\n\t\t},\n\t},\n\tstoppingCondition: &stoppingConditionProperty{\n\t\tmaxRuntimeInSeconds: jsii.Number(123),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnModelQualityJobDefinition = new sagemaker.CfnModelQualityJobDefinition(this, 'MyCfnModelQualityJobDefinition', {\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  modelQualityAppSpecification: {\n    imageUri: 'imageUri',\n    problemType: 'problemType',\n\n    // the properties below are optional\n    containerArguments: ['containerArguments'],\n    containerEntrypoint: ['containerEntrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n    recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n  },\n  modelQualityJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      endTimeOffset: 'endTimeOffset',\n      inferenceAttribute: 'inferenceAttribute',\n      probabilityAttribute: 'probabilityAttribute',\n      probabilityThresholdAttribute: 123,\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n      startTimeOffset: 'startTimeOffset',\n    },\n    groundTruthS3Input: {\n      s3Uri: 's3Uri',\n    },\n  },\n  modelQualityJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  jobDefinitionName: 'jobDefinitionName',\n  modelQualityBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition",
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinitionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnModelQualityJobDefinition = new sagemaker.CfnModelQualityJobDefinition(this, 'MyCfnModelQualityJobDefinition', {\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  modelQualityAppSpecification: {\n    imageUri: 'imageUri',\n    problemType: 'problemType',\n\n    // the properties below are optional\n    containerArguments: ['containerArguments'],\n    containerEntrypoint: ['containerEntrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n    recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n  },\n  modelQualityJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      endTimeOffset: 'endTimeOffset',\n      inferenceAttribute: 'inferenceAttribute',\n      probabilityAttribute: 'probabilityAttribute',\n      probabilityThresholdAttribute: 123,\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n      startTimeOffset: 'startTimeOffset',\n    },\n    groundTruthS3Input: {\n      s3Uri: 's3Uri',\n    },\n  },\n  modelQualityJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  jobDefinitionName: 'jobDefinitionName',\n  modelQualityBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 32,
        "75": 56,
        "91": 2,
        "104": 1,
        "192": 6,
        "193": 17,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 52,
        "290": 1
      },
      "fqnsFingerprint": "5f6c9297819c789bb8b082b797d032aa17fcbc60303cc36065aad1e7e2cef083"
    },
    "74051ac9e20bcc33db91149f8664e970fbaf9f393b1e82eea40cf8a707e67d22": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncluster_config_property = sagemaker.CfnModelQualityJobDefinition.ClusterConfigProperty(\n    instance_count=123,\n    instance_type=\"instanceType\",\n    volume_size_in_gb=123,\n\n    # the properties below are optional\n    volume_kms_key_id=\"volumeKmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nClusterConfigProperty clusterConfigProperty = new ClusterConfigProperty {\n    InstanceCount = 123,\n    InstanceType = \"instanceType\",\n    VolumeSizeInGb = 123,\n\n    // the properties below are optional\n    VolumeKmsKeyId = \"volumeKmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nClusterConfigProperty clusterConfigProperty = ClusterConfigProperty.builder()\n        .instanceCount(123)\n        .instanceType(\"instanceType\")\n        .volumeSizeInGb(123)\n\n        // the properties below are optional\n        .volumeKmsKeyId(\"volumeKmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nclusterConfigProperty := &clusterConfigProperty{\n\tinstanceCount: jsii.Number(123),\n\tinstanceType: jsii.String(\"instanceType\"),\n\tvolumeSizeInGb: jsii.Number(123),\n\n\t// the properties below are optional\n\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst clusterConfigProperty: sagemaker.CfnModelQualityJobDefinition.ClusterConfigProperty = {\n  instanceCount: 123,\n  instanceType: 'instanceType',\n  volumeSizeInGb: 123,\n\n  // the properties below are optional\n  volumeKmsKeyId: 'volumeKmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.ClusterConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.ClusterConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst clusterConfigProperty: sagemaker.CfnModelQualityJobDefinition.ClusterConfigProperty = {\n  instanceCount: 123,\n  instanceType: 'instanceType',\n  volumeSizeInGb: 123,\n\n  // the properties below are optional\n  volumeKmsKeyId: 'volumeKmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "8f9d949bf51edb3533eaeb88b1d884e4703023e3bf8df6972d39434b94b92f59"
    },
    "1f13ffd6f67b5594034864d16e89149c0f4ec3dd40eea25d649014ba4e681ed7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nconstraints_resource_property = sagemaker.CfnModelQualityJobDefinition.ConstraintsResourceProperty(\n    s3_uri=\"s3Uri\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nConstraintsResourceProperty constraintsResourceProperty = new ConstraintsResourceProperty {\n    S3Uri = \"s3Uri\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nConstraintsResourceProperty constraintsResourceProperty = ConstraintsResourceProperty.builder()\n        .s3Uri(\"s3Uri\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nconstraintsResourceProperty := &constraintsResourceProperty{\n\ts3Uri: jsii.String(\"s3Uri\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst constraintsResourceProperty: sagemaker.CfnModelQualityJobDefinition.ConstraintsResourceProperty = {\n  s3Uri: 's3Uri',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.ConstraintsResourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.ConstraintsResourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst constraintsResourceProperty: sagemaker.CfnModelQualityJobDefinition.ConstraintsResourceProperty = {\n  s3Uri: 's3Uri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "a4e94b2b0c2e346e32bc88b26da6f18816661b71f08b353acbf59f2cb40a5128"
    },
    "eb3f4714b2b103888b6ed8b7430a78853c4bfc5af77772effe1f08de846d280f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nendpoint_input_property = sagemaker.CfnModelQualityJobDefinition.EndpointInputProperty(\n    endpoint_name=\"endpointName\",\n    local_path=\"localPath\",\n\n    # the properties below are optional\n    end_time_offset=\"endTimeOffset\",\n    inference_attribute=\"inferenceAttribute\",\n    probability_attribute=\"probabilityAttribute\",\n    probability_threshold_attribute=123,\n    s3_data_distribution_type=\"s3DataDistributionType\",\n    s3_input_mode=\"s3InputMode\",\n    start_time_offset=\"startTimeOffset\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nEndpointInputProperty endpointInputProperty = new EndpointInputProperty {\n    EndpointName = \"endpointName\",\n    LocalPath = \"localPath\",\n\n    // the properties below are optional\n    EndTimeOffset = \"endTimeOffset\",\n    InferenceAttribute = \"inferenceAttribute\",\n    ProbabilityAttribute = \"probabilityAttribute\",\n    ProbabilityThresholdAttribute = 123,\n    S3DataDistributionType = \"s3DataDistributionType\",\n    S3InputMode = \"s3InputMode\",\n    StartTimeOffset = \"startTimeOffset\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nEndpointInputProperty endpointInputProperty = EndpointInputProperty.builder()\n        .endpointName(\"endpointName\")\n        .localPath(\"localPath\")\n\n        // the properties below are optional\n        .endTimeOffset(\"endTimeOffset\")\n        .inferenceAttribute(\"inferenceAttribute\")\n        .probabilityAttribute(\"probabilityAttribute\")\n        .probabilityThresholdAttribute(123)\n        .s3DataDistributionType(\"s3DataDistributionType\")\n        .s3InputMode(\"s3InputMode\")\n        .startTimeOffset(\"startTimeOffset\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nendpointInputProperty := &endpointInputProperty{\n\tendpointName: jsii.String(\"endpointName\"),\n\tlocalPath: jsii.String(\"localPath\"),\n\n\t// the properties below are optional\n\tendTimeOffset: jsii.String(\"endTimeOffset\"),\n\tinferenceAttribute: jsii.String(\"inferenceAttribute\"),\n\tprobabilityAttribute: jsii.String(\"probabilityAttribute\"),\n\tprobabilityThresholdAttribute: jsii.Number(123),\n\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\ts3InputMode: jsii.String(\"s3InputMode\"),\n\tstartTimeOffset: jsii.String(\"startTimeOffset\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst endpointInputProperty: sagemaker.CfnModelQualityJobDefinition.EndpointInputProperty = {\n  endpointName: 'endpointName',\n  localPath: 'localPath',\n\n  // the properties below are optional\n  endTimeOffset: 'endTimeOffset',\n  inferenceAttribute: 'inferenceAttribute',\n  probabilityAttribute: 'probabilityAttribute',\n  probabilityThresholdAttribute: 123,\n  s3DataDistributionType: 's3DataDistributionType',\n  s3InputMode: 's3InputMode',\n  startTimeOffset: 'startTimeOffset',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.EndpointInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.EndpointInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst endpointInputProperty: sagemaker.CfnModelQualityJobDefinition.EndpointInputProperty = {\n  endpointName: 'endpointName',\n  localPath: 'localPath',\n\n  // the properties below are optional\n  endTimeOffset: 'endTimeOffset',\n  inferenceAttribute: 'inferenceAttribute',\n  probabilityAttribute: 'probabilityAttribute',\n  probabilityThresholdAttribute: 123,\n  s3DataDistributionType: 's3DataDistributionType',\n  s3InputMode: 's3InputMode',\n  startTimeOffset: 'startTimeOffset',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 9,
        "75": 14,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "0e8d68ac6268723fe17b1bd4167d867191a14362d7f6c66893da5bfcbe256abf"
    },
    "bb04cbbf0066b8b563648e7974b850aee803b6083d449432ee256d5b77161e2d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmodel_quality_app_specification_property = sagemaker.CfnModelQualityJobDefinition.ModelQualityAppSpecificationProperty(\n    image_uri=\"imageUri\",\n    problem_type=\"problemType\",\n\n    # the properties below are optional\n    container_arguments=[\"containerArguments\"],\n    container_entrypoint=[\"containerEntrypoint\"],\n    environment={\n        \"environment_key\": \"environment\"\n    },\n    post_analytics_processor_source_uri=\"postAnalyticsProcessorSourceUri\",\n    record_preprocessor_source_uri=\"recordPreprocessorSourceUri\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nModelQualityAppSpecificationProperty modelQualityAppSpecificationProperty = new ModelQualityAppSpecificationProperty {\n    ImageUri = \"imageUri\",\n    ProblemType = \"problemType\",\n\n    // the properties below are optional\n    ContainerArguments = new [] { \"containerArguments\" },\n    ContainerEntrypoint = new [] { \"containerEntrypoint\" },\n    Environment = new Dictionary<string, string> {\n        { \"environmentKey\", \"environment\" }\n    },\n    PostAnalyticsProcessorSourceUri = \"postAnalyticsProcessorSourceUri\",\n    RecordPreprocessorSourceUri = \"recordPreprocessorSourceUri\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nModelQualityAppSpecificationProperty modelQualityAppSpecificationProperty = ModelQualityAppSpecificationProperty.builder()\n        .imageUri(\"imageUri\")\n        .problemType(\"problemType\")\n\n        // the properties below are optional\n        .containerArguments(List.of(\"containerArguments\"))\n        .containerEntrypoint(List.of(\"containerEntrypoint\"))\n        .environment(Map.of(\n                \"environmentKey\", \"environment\"))\n        .postAnalyticsProcessorSourceUri(\"postAnalyticsProcessorSourceUri\")\n        .recordPreprocessorSourceUri(\"recordPreprocessorSourceUri\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmodelQualityAppSpecificationProperty := &modelQualityAppSpecificationProperty{\n\timageUri: jsii.String(\"imageUri\"),\n\tproblemType: jsii.String(\"problemType\"),\n\n\t// the properties below are optional\n\tcontainerArguments: []*string{\n\t\tjsii.String(\"containerArguments\"),\n\t},\n\tcontainerEntrypoint: []*string{\n\t\tjsii.String(\"containerEntrypoint\"),\n\t},\n\tenvironment: map[string]*string{\n\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t},\n\tpostAnalyticsProcessorSourceUri: jsii.String(\"postAnalyticsProcessorSourceUri\"),\n\trecordPreprocessorSourceUri: jsii.String(\"recordPreprocessorSourceUri\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst modelQualityAppSpecificationProperty: sagemaker.CfnModelQualityJobDefinition.ModelQualityAppSpecificationProperty = {\n  imageUri: 'imageUri',\n  problemType: 'problemType',\n\n  // the properties below are optional\n  containerArguments: ['containerArguments'],\n  containerEntrypoint: ['containerEntrypoint'],\n  environment: {\n    environmentKey: 'environment',\n  },\n  postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n  recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.ModelQualityAppSpecificationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.ModelQualityAppSpecificationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst modelQualityAppSpecificationProperty: sagemaker.CfnModelQualityJobDefinition.ModelQualityAppSpecificationProperty = {\n  imageUri: 'imageUri',\n  problemType: 'problemType',\n\n  // the properties below are optional\n  containerArguments: ['containerArguments'],\n  containerEntrypoint: ['containerEntrypoint'],\n  environment: {\n    environmentKey: 'environment',\n  },\n  postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n  recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 13,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "adab9ffe75dbae0f302bceb5dbf11044ec1d4a62fad1d14b3db42992ceceafbe"
    },
    "ea5221b821c1e0c900621010b238faa46c1878860288550458c9fccbbc93be11": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmodel_quality_baseline_config_property = sagemaker.CfnModelQualityJobDefinition.ModelQualityBaselineConfigProperty(\n    baselining_job_name=\"baseliningJobName\",\n    constraints_resource=sagemaker.CfnModelQualityJobDefinition.ConstraintsResourceProperty(\n        s3_uri=\"s3Uri\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nModelQualityBaselineConfigProperty modelQualityBaselineConfigProperty = new ModelQualityBaselineConfigProperty {\n    BaseliningJobName = \"baseliningJobName\",\n    ConstraintsResource = new ConstraintsResourceProperty {\n        S3Uri = \"s3Uri\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nModelQualityBaselineConfigProperty modelQualityBaselineConfigProperty = ModelQualityBaselineConfigProperty.builder()\n        .baseliningJobName(\"baseliningJobName\")\n        .constraintsResource(ConstraintsResourceProperty.builder()\n                .s3Uri(\"s3Uri\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmodelQualityBaselineConfigProperty := &modelQualityBaselineConfigProperty{\n\tbaseliningJobName: jsii.String(\"baseliningJobName\"),\n\tconstraintsResource: &constraintsResourceProperty{\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst modelQualityBaselineConfigProperty: sagemaker.CfnModelQualityJobDefinition.ModelQualityBaselineConfigProperty = {\n  baseliningJobName: 'baseliningJobName',\n  constraintsResource: {\n    s3Uri: 's3Uri',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.ModelQualityBaselineConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.ModelQualityBaselineConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst modelQualityBaselineConfigProperty: sagemaker.CfnModelQualityJobDefinition.ModelQualityBaselineConfigProperty = {\n  baseliningJobName: 'baseliningJobName',\n  constraintsResource: {\n    s3Uri: 's3Uri',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "b8a5205ce08352ab0be7a23b2471ba19d352af7c6ea43a8a5fb34e0efc557f5c"
    },
    "a7c2e97528394edf17b74be98dc7313526d462bca949d9c55c74b5d59f8184d8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmodel_quality_job_input_property = sagemaker.CfnModelQualityJobDefinition.ModelQualityJobInputProperty(\n    endpoint_input=sagemaker.CfnModelQualityJobDefinition.EndpointInputProperty(\n        endpoint_name=\"endpointName\",\n        local_path=\"localPath\",\n\n        # the properties below are optional\n        end_time_offset=\"endTimeOffset\",\n        inference_attribute=\"inferenceAttribute\",\n        probability_attribute=\"probabilityAttribute\",\n        probability_threshold_attribute=123,\n        s3_data_distribution_type=\"s3DataDistributionType\",\n        s3_input_mode=\"s3InputMode\",\n        start_time_offset=\"startTimeOffset\"\n    ),\n    ground_truth_s3_input=sagemaker.CfnModelQualityJobDefinition.MonitoringGroundTruthS3InputProperty(\n        s3_uri=\"s3Uri\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nModelQualityJobInputProperty modelQualityJobInputProperty = new ModelQualityJobInputProperty {\n    EndpointInput = new EndpointInputProperty {\n        EndpointName = \"endpointName\",\n        LocalPath = \"localPath\",\n\n        // the properties below are optional\n        EndTimeOffset = \"endTimeOffset\",\n        InferenceAttribute = \"inferenceAttribute\",\n        ProbabilityAttribute = \"probabilityAttribute\",\n        ProbabilityThresholdAttribute = 123,\n        S3DataDistributionType = \"s3DataDistributionType\",\n        S3InputMode = \"s3InputMode\",\n        StartTimeOffset = \"startTimeOffset\"\n    },\n    GroundTruthS3Input = new MonitoringGroundTruthS3InputProperty {\n        S3Uri = \"s3Uri\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nModelQualityJobInputProperty modelQualityJobInputProperty = ModelQualityJobInputProperty.builder()\n        .endpointInput(EndpointInputProperty.builder()\n                .endpointName(\"endpointName\")\n                .localPath(\"localPath\")\n\n                // the properties below are optional\n                .endTimeOffset(\"endTimeOffset\")\n                .inferenceAttribute(\"inferenceAttribute\")\n                .probabilityAttribute(\"probabilityAttribute\")\n                .probabilityThresholdAttribute(123)\n                .s3DataDistributionType(\"s3DataDistributionType\")\n                .s3InputMode(\"s3InputMode\")\n                .startTimeOffset(\"startTimeOffset\")\n                .build())\n        .groundTruthS3Input(MonitoringGroundTruthS3InputProperty.builder()\n                .s3Uri(\"s3Uri\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmodelQualityJobInputProperty := &modelQualityJobInputProperty{\n\tendpointInput: &endpointInputProperty{\n\t\tendpointName: jsii.String(\"endpointName\"),\n\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t// the properties below are optional\n\t\tendTimeOffset: jsii.String(\"endTimeOffset\"),\n\t\tinferenceAttribute: jsii.String(\"inferenceAttribute\"),\n\t\tprobabilityAttribute: jsii.String(\"probabilityAttribute\"),\n\t\tprobabilityThresholdAttribute: jsii.Number(123),\n\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\tstartTimeOffset: jsii.String(\"startTimeOffset\"),\n\t},\n\tgroundTruthS3Input: &monitoringGroundTruthS3InputProperty{\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst modelQualityJobInputProperty: sagemaker.CfnModelQualityJobDefinition.ModelQualityJobInputProperty = {\n  endpointInput: {\n    endpointName: 'endpointName',\n    localPath: 'localPath',\n\n    // the properties below are optional\n    endTimeOffset: 'endTimeOffset',\n    inferenceAttribute: 'inferenceAttribute',\n    probabilityAttribute: 'probabilityAttribute',\n    probabilityThresholdAttribute: 123,\n    s3DataDistributionType: 's3DataDistributionType',\n    s3InputMode: 's3InputMode',\n    startTimeOffset: 'startTimeOffset',\n  },\n  groundTruthS3Input: {\n    s3Uri: 's3Uri',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.ModelQualityJobInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.ModelQualityJobInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst modelQualityJobInputProperty: sagemaker.CfnModelQualityJobDefinition.ModelQualityJobInputProperty = {\n  endpointInput: {\n    endpointName: 'endpointName',\n    localPath: 'localPath',\n\n    // the properties below are optional\n    endTimeOffset: 'endTimeOffset',\n    inferenceAttribute: 'inferenceAttribute',\n    probabilityAttribute: 'probabilityAttribute',\n    probabilityThresholdAttribute: 123,\n    s3DataDistributionType: 's3DataDistributionType',\n    s3InputMode: 's3InputMode',\n    startTimeOffset: 'startTimeOffset',\n  },\n  groundTruthS3Input: {\n    s3Uri: 's3Uri',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 10,
        "75": 17,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "8f423a5aa630990c970f44deeb8bd54ef0e52cb42ff027060604ec7324450f2a"
    },
    "54fa86740dcf288038cd722aed935047a7948c3d59177b80b756eebfebc3bc58": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_ground_truth_s3_input_property = sagemaker.CfnModelQualityJobDefinition.MonitoringGroundTruthS3InputProperty(\n    s3_uri=\"s3Uri\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringGroundTruthS3InputProperty monitoringGroundTruthS3InputProperty = new MonitoringGroundTruthS3InputProperty {\n    S3Uri = \"s3Uri\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringGroundTruthS3InputProperty monitoringGroundTruthS3InputProperty = MonitoringGroundTruthS3InputProperty.builder()\n        .s3Uri(\"s3Uri\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringGroundTruthS3InputProperty := &monitoringGroundTruthS3InputProperty{\n\ts3Uri: jsii.String(\"s3Uri\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringGroundTruthS3InputProperty: sagemaker.CfnModelQualityJobDefinition.MonitoringGroundTruthS3InputProperty = {\n  s3Uri: 's3Uri',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.MonitoringGroundTruthS3InputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.MonitoringGroundTruthS3InputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringGroundTruthS3InputProperty: sagemaker.CfnModelQualityJobDefinition.MonitoringGroundTruthS3InputProperty = {\n  s3Uri: 's3Uri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "6c440e697a32aba22b9190e50182bb15818e32b6c2a4b4df2a5e9fbd46cc5b55"
    },
    "63d65bb395edb8f25a1df647f39da34ab7624d177fd53cbd93be7393cf3247bb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_output_config_property = sagemaker.CfnModelQualityJobDefinition.MonitoringOutputConfigProperty(\n    monitoring_outputs=[sagemaker.CfnModelQualityJobDefinition.MonitoringOutputProperty(\n        s3_output=sagemaker.CfnModelQualityJobDefinition.S3OutputProperty(\n            local_path=\"localPath\",\n            s3_uri=\"s3Uri\",\n\n            # the properties below are optional\n            s3_upload_mode=\"s3UploadMode\"\n        )\n    )],\n\n    # the properties below are optional\n    kms_key_id=\"kmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringOutputConfigProperty monitoringOutputConfigProperty = new MonitoringOutputConfigProperty {\n    MonitoringOutputs = new [] { new MonitoringOutputProperty {\n        S3Output = new S3OutputProperty {\n            LocalPath = \"localPath\",\n            S3Uri = \"s3Uri\",\n\n            // the properties below are optional\n            S3UploadMode = \"s3UploadMode\"\n        }\n    } },\n\n    // the properties below are optional\n    KmsKeyId = \"kmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringOutputConfigProperty monitoringOutputConfigProperty = MonitoringOutputConfigProperty.builder()\n        .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                .s3Output(S3OutputProperty.builder()\n                        .localPath(\"localPath\")\n                        .s3Uri(\"s3Uri\")\n\n                        // the properties below are optional\n                        .s3UploadMode(\"s3UploadMode\")\n                        .build())\n                .build()))\n\n        // the properties below are optional\n        .kmsKeyId(\"kmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringOutputConfigProperty := &monitoringOutputConfigProperty{\n\tmonitoringOutputs: []interface{}{\n\t\t&monitoringOutputProperty{\n\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringOutputConfigProperty: sagemaker.CfnModelQualityJobDefinition.MonitoringOutputConfigProperty = {\n  monitoringOutputs: [{\n    s3Output: {\n      localPath: 'localPath',\n      s3Uri: 's3Uri',\n\n      // the properties below are optional\n      s3UploadMode: 's3UploadMode',\n    },\n  }],\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.MonitoringOutputConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.MonitoringOutputConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringOutputConfigProperty: sagemaker.CfnModelQualityJobDefinition.MonitoringOutputConfigProperty = {\n  monitoringOutputs: [{\n    s3Output: {\n      localPath: 'localPath',\n      s3Uri: 's3Uri',\n\n      // the properties below are optional\n      s3UploadMode: 's3UploadMode',\n    },\n  }],\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 11,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "a0cefd6f925a5f26244b53b056e7e4c660f6e31472eabf64beb27ff536200bf0"
    },
    "0e035bff3f0d8aaf7ab6e66ec48967eea46077597d3627fbf8414dcc7e106e92": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_output_property = sagemaker.CfnModelQualityJobDefinition.MonitoringOutputProperty(\n    s3_output=sagemaker.CfnModelQualityJobDefinition.S3OutputProperty(\n        local_path=\"localPath\",\n        s3_uri=\"s3Uri\",\n\n        # the properties below are optional\n        s3_upload_mode=\"s3UploadMode\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringOutputProperty monitoringOutputProperty = new MonitoringOutputProperty {\n    S3Output = new S3OutputProperty {\n        LocalPath = \"localPath\",\n        S3Uri = \"s3Uri\",\n\n        // the properties below are optional\n        S3UploadMode = \"s3UploadMode\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringOutputProperty monitoringOutputProperty = MonitoringOutputProperty.builder()\n        .s3Output(S3OutputProperty.builder()\n                .localPath(\"localPath\")\n                .s3Uri(\"s3Uri\")\n\n                // the properties below are optional\n                .s3UploadMode(\"s3UploadMode\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringOutputProperty := &monitoringOutputProperty{\n\ts3Output: &s3OutputProperty{\n\t\tlocalPath: jsii.String(\"localPath\"),\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t// the properties below are optional\n\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringOutputProperty: sagemaker.CfnModelQualityJobDefinition.MonitoringOutputProperty = {\n  s3Output: {\n    localPath: 'localPath',\n    s3Uri: 's3Uri',\n\n    // the properties below are optional\n    s3UploadMode: 's3UploadMode',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.MonitoringOutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.MonitoringOutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringOutputProperty: sagemaker.CfnModelQualityJobDefinition.MonitoringOutputProperty = {\n  s3Output: {\n    localPath: 'localPath',\n    s3Uri: 's3Uri',\n\n    // the properties below are optional\n    s3UploadMode: 's3UploadMode',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "26b1750e2e11710d382748b4808e2f8c504e9ae0866d47a8e60e9eb2128ac836"
    },
    "386e3f63e40e8dd5fc1834a0034a0084403beb910637afea0cabdb9c092bd31f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_resources_property = sagemaker.CfnModelQualityJobDefinition.MonitoringResourcesProperty(\n    cluster_config=sagemaker.CfnModelQualityJobDefinition.ClusterConfigProperty(\n        instance_count=123,\n        instance_type=\"instanceType\",\n        volume_size_in_gb=123,\n\n        # the properties below are optional\n        volume_kms_key_id=\"volumeKmsKeyId\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringResourcesProperty monitoringResourcesProperty = new MonitoringResourcesProperty {\n    ClusterConfig = new ClusterConfigProperty {\n        InstanceCount = 123,\n        InstanceType = \"instanceType\",\n        VolumeSizeInGb = 123,\n\n        // the properties below are optional\n        VolumeKmsKeyId = \"volumeKmsKeyId\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringResourcesProperty monitoringResourcesProperty = MonitoringResourcesProperty.builder()\n        .clusterConfig(ClusterConfigProperty.builder()\n                .instanceCount(123)\n                .instanceType(\"instanceType\")\n                .volumeSizeInGb(123)\n\n                // the properties below are optional\n                .volumeKmsKeyId(\"volumeKmsKeyId\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringResourcesProperty := &monitoringResourcesProperty{\n\tclusterConfig: &clusterConfigProperty{\n\t\tinstanceCount: jsii.Number(123),\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringResourcesProperty: sagemaker.CfnModelQualityJobDefinition.MonitoringResourcesProperty = {\n  clusterConfig: {\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    volumeSizeInGb: 123,\n\n    // the properties below are optional\n    volumeKmsKeyId: 'volumeKmsKeyId',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.MonitoringResourcesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.MonitoringResourcesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringResourcesProperty: sagemaker.CfnModelQualityJobDefinition.MonitoringResourcesProperty = {\n  clusterConfig: {\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    volumeSizeInGb: 123,\n\n    // the properties below are optional\n    volumeKmsKeyId: 'volumeKmsKeyId',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "84715f0ea853241753f454e9ff21f1e6f6ba1419374c2026031ab0ce165723fe"
    },
    "cb3dc7c591cdd16b45a493616bab77663fe5501208c79e279774ab805ce73fba": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nnetwork_config_property = sagemaker.CfnModelQualityJobDefinition.NetworkConfigProperty(\n    enable_inter_container_traffic_encryption=False,\n    enable_network_isolation=False,\n    vpc_config=sagemaker.CfnModelQualityJobDefinition.VpcConfigProperty(\n        security_group_ids=[\"securityGroupIds\"],\n        subnets=[\"subnets\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nNetworkConfigProperty networkConfigProperty = new NetworkConfigProperty {\n    EnableInterContainerTrafficEncryption = false,\n    EnableNetworkIsolation = false,\n    VpcConfig = new VpcConfigProperty {\n        SecurityGroupIds = new [] { \"securityGroupIds\" },\n        Subnets = new [] { \"subnets\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nNetworkConfigProperty networkConfigProperty = NetworkConfigProperty.builder()\n        .enableInterContainerTrafficEncryption(false)\n        .enableNetworkIsolation(false)\n        .vpcConfig(VpcConfigProperty.builder()\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .subnets(List.of(\"subnets\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nnetworkConfigProperty := &networkConfigProperty{\n\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\tenableNetworkIsolation: jsii.Boolean(false),\n\tvpcConfig: &vpcConfigProperty{\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t\tsubnets: []*string{\n\t\t\tjsii.String(\"subnets\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst networkConfigProperty: sagemaker.CfnModelQualityJobDefinition.NetworkConfigProperty = {\n  enableInterContainerTrafficEncryption: false,\n  enableNetworkIsolation: false,\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.NetworkConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.NetworkConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst networkConfigProperty: sagemaker.CfnModelQualityJobDefinition.NetworkConfigProperty = {\n  enableInterContainerTrafficEncryption: false,\n  enableNetworkIsolation: false,\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "7b1ace7d681e082305119927f616f588fc0c120cbd483b77b9ea2ca7b97de0ce"
    },
    "6f93eae9deaf0f3a5c33317cae25b84a25f832d2336877d4c3347d8099917a25": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ns3_output_property = sagemaker.CfnModelQualityJobDefinition.S3OutputProperty(\n    local_path=\"localPath\",\n    s3_uri=\"s3Uri\",\n\n    # the properties below are optional\n    s3_upload_mode=\"s3UploadMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nS3OutputProperty s3OutputProperty = new S3OutputProperty {\n    LocalPath = \"localPath\",\n    S3Uri = \"s3Uri\",\n\n    // the properties below are optional\n    S3UploadMode = \"s3UploadMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nS3OutputProperty s3OutputProperty = S3OutputProperty.builder()\n        .localPath(\"localPath\")\n        .s3Uri(\"s3Uri\")\n\n        // the properties below are optional\n        .s3UploadMode(\"s3UploadMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ns3OutputProperty := &s3OutputProperty{\n\tlocalPath: jsii.String(\"localPath\"),\n\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t// the properties below are optional\n\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst s3OutputProperty: sagemaker.CfnModelQualityJobDefinition.S3OutputProperty = {\n  localPath: 'localPath',\n  s3Uri: 's3Uri',\n\n  // the properties below are optional\n  s3UploadMode: 's3UploadMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.S3OutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.S3OutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3OutputProperty: sagemaker.CfnModelQualityJobDefinition.S3OutputProperty = {\n  localPath: 'localPath',\n  s3Uri: 's3Uri',\n\n  // the properties below are optional\n  s3UploadMode: 's3UploadMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "63cea1b763943ba4f3c50ec61eddd6d05e216d167c2912d44733b78e29735907"
    },
    "35da1611505432ac4c881779abcf41f3fe8f6912b5c3cb79c3376e0d69ad93f3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nstopping_condition_property = sagemaker.CfnModelQualityJobDefinition.StoppingConditionProperty(\n    max_runtime_in_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nStoppingConditionProperty stoppingConditionProperty = new StoppingConditionProperty {\n    MaxRuntimeInSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nStoppingConditionProperty stoppingConditionProperty = StoppingConditionProperty.builder()\n        .maxRuntimeInSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nstoppingConditionProperty := &stoppingConditionProperty{\n\tmaxRuntimeInSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst stoppingConditionProperty: sagemaker.CfnModelQualityJobDefinition.StoppingConditionProperty = {\n  maxRuntimeInSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.StoppingConditionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.StoppingConditionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stoppingConditionProperty: sagemaker.CfnModelQualityJobDefinition.StoppingConditionProperty = {\n  maxRuntimeInSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "64e46b3982c5d6fe7bb10848e0263d4d98b52492cff069e10d57965c9614f8d3"
    },
    "67fe7ce88ce4d728ad382ddcad0caefd2c0eb46e545ada923fcc6a5634c05f1a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nvpc_config_property = sagemaker.CfnModelQualityJobDefinition.VpcConfigProperty(\n    security_group_ids=[\"securityGroupIds\"],\n    subnets=[\"subnets\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nVpcConfigProperty vpcConfigProperty = new VpcConfigProperty {\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    Subnets = new [] { \"subnets\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nVpcConfigProperty vpcConfigProperty = VpcConfigProperty.builder()\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .subnets(List.of(\"subnets\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvpcConfigProperty := &vpcConfigProperty{\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsubnets: []*string{\n\t\tjsii.String(\"subnets\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst vpcConfigProperty: sagemaker.CfnModelQualityJobDefinition.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnets: ['subnets'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.VpcConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinition.VpcConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vpcConfigProperty: sagemaker.CfnModelQualityJobDefinition.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnets: ['subnets'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "e99fbe65dc3b40e2f5efe058a7b9d920a4d5fcec57747f8c6fc949ad5e155e8b"
    },
    "7cb02ee06f20772bc4cdbd453a55f0ee286a2df92facff98c597388b8364d795": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_model_quality_job_definition_props = sagemaker.CfnModelQualityJobDefinitionProps(\n    job_resources=sagemaker.CfnModelQualityJobDefinition.MonitoringResourcesProperty(\n        cluster_config=sagemaker.CfnModelQualityJobDefinition.ClusterConfigProperty(\n            instance_count=123,\n            instance_type=\"instanceType\",\n            volume_size_in_gb=123,\n\n            # the properties below are optional\n            volume_kms_key_id=\"volumeKmsKeyId\"\n        )\n    ),\n    model_quality_app_specification=sagemaker.CfnModelQualityJobDefinition.ModelQualityAppSpecificationProperty(\n        image_uri=\"imageUri\",\n        problem_type=\"problemType\",\n\n        # the properties below are optional\n        container_arguments=[\"containerArguments\"],\n        container_entrypoint=[\"containerEntrypoint\"],\n        environment={\n            \"environment_key\": \"environment\"\n        },\n        post_analytics_processor_source_uri=\"postAnalyticsProcessorSourceUri\",\n        record_preprocessor_source_uri=\"recordPreprocessorSourceUri\"\n    ),\n    model_quality_job_input=sagemaker.CfnModelQualityJobDefinition.ModelQualityJobInputProperty(\n        endpoint_input=sagemaker.CfnModelQualityJobDefinition.EndpointInputProperty(\n            endpoint_name=\"endpointName\",\n            local_path=\"localPath\",\n\n            # the properties below are optional\n            end_time_offset=\"endTimeOffset\",\n            inference_attribute=\"inferenceAttribute\",\n            probability_attribute=\"probabilityAttribute\",\n            probability_threshold_attribute=123,\n            s3_data_distribution_type=\"s3DataDistributionType\",\n            s3_input_mode=\"s3InputMode\",\n            start_time_offset=\"startTimeOffset\"\n        ),\n        ground_truth_s3_input=sagemaker.CfnModelQualityJobDefinition.MonitoringGroundTruthS3InputProperty(\n            s3_uri=\"s3Uri\"\n        )\n    ),\n    model_quality_job_output_config=sagemaker.CfnModelQualityJobDefinition.MonitoringOutputConfigProperty(\n        monitoring_outputs=[sagemaker.CfnModelQualityJobDefinition.MonitoringOutputProperty(\n            s3_output=sagemaker.CfnModelQualityJobDefinition.S3OutputProperty(\n                local_path=\"localPath\",\n                s3_uri=\"s3Uri\",\n\n                # the properties below are optional\n                s3_upload_mode=\"s3UploadMode\"\n            )\n        )],\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    job_definition_name=\"jobDefinitionName\",\n    model_quality_baseline_config=sagemaker.CfnModelQualityJobDefinition.ModelQualityBaselineConfigProperty(\n        baselining_job_name=\"baseliningJobName\",\n        constraints_resource=sagemaker.CfnModelQualityJobDefinition.ConstraintsResourceProperty(\n            s3_uri=\"s3Uri\"\n        )\n    ),\n    network_config=sagemaker.CfnModelQualityJobDefinition.NetworkConfigProperty(\n        enable_inter_container_traffic_encryption=False,\n        enable_network_isolation=False,\n        vpc_config=sagemaker.CfnModelQualityJobDefinition.VpcConfigProperty(\n            security_group_ids=[\"securityGroupIds\"],\n            subnets=[\"subnets\"]\n        )\n    ),\n    stopping_condition=sagemaker.CfnModelQualityJobDefinition.StoppingConditionProperty(\n        max_runtime_in_seconds=123\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnModelQualityJobDefinitionProps cfnModelQualityJobDefinitionProps = new CfnModelQualityJobDefinitionProps {\n    JobResources = new MonitoringResourcesProperty {\n        ClusterConfig = new ClusterConfigProperty {\n            InstanceCount = 123,\n            InstanceType = \"instanceType\",\n            VolumeSizeInGb = 123,\n\n            // the properties below are optional\n            VolumeKmsKeyId = \"volumeKmsKeyId\"\n        }\n    },\n    ModelQualityAppSpecification = new ModelQualityAppSpecificationProperty {\n        ImageUri = \"imageUri\",\n        ProblemType = \"problemType\",\n\n        // the properties below are optional\n        ContainerArguments = new [] { \"containerArguments\" },\n        ContainerEntrypoint = new [] { \"containerEntrypoint\" },\n        Environment = new Dictionary<string, string> {\n            { \"environmentKey\", \"environment\" }\n        },\n        PostAnalyticsProcessorSourceUri = \"postAnalyticsProcessorSourceUri\",\n        RecordPreprocessorSourceUri = \"recordPreprocessorSourceUri\"\n    },\n    ModelQualityJobInput = new ModelQualityJobInputProperty {\n        EndpointInput = new EndpointInputProperty {\n            EndpointName = \"endpointName\",\n            LocalPath = \"localPath\",\n\n            // the properties below are optional\n            EndTimeOffset = \"endTimeOffset\",\n            InferenceAttribute = \"inferenceAttribute\",\n            ProbabilityAttribute = \"probabilityAttribute\",\n            ProbabilityThresholdAttribute = 123,\n            S3DataDistributionType = \"s3DataDistributionType\",\n            S3InputMode = \"s3InputMode\",\n            StartTimeOffset = \"startTimeOffset\"\n        },\n        GroundTruthS3Input = new MonitoringGroundTruthS3InputProperty {\n            S3Uri = \"s3Uri\"\n        }\n    },\n    ModelQualityJobOutputConfig = new MonitoringOutputConfigProperty {\n        MonitoringOutputs = new [] { new MonitoringOutputProperty {\n            S3Output = new S3OutputProperty {\n                LocalPath = \"localPath\",\n                S3Uri = \"s3Uri\",\n\n                // the properties below are optional\n                S3UploadMode = \"s3UploadMode\"\n            }\n        } },\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    JobDefinitionName = \"jobDefinitionName\",\n    ModelQualityBaselineConfig = new ModelQualityBaselineConfigProperty {\n        BaseliningJobName = \"baseliningJobName\",\n        ConstraintsResource = new ConstraintsResourceProperty {\n            S3Uri = \"s3Uri\"\n        }\n    },\n    NetworkConfig = new NetworkConfigProperty {\n        EnableInterContainerTrafficEncryption = false,\n        EnableNetworkIsolation = false,\n        VpcConfig = new VpcConfigProperty {\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            Subnets = new [] { \"subnets\" }\n        }\n    },\n    StoppingCondition = new StoppingConditionProperty {\n        MaxRuntimeInSeconds = 123\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnModelQualityJobDefinitionProps cfnModelQualityJobDefinitionProps = CfnModelQualityJobDefinitionProps.builder()\n        .jobResources(MonitoringResourcesProperty.builder()\n                .clusterConfig(ClusterConfigProperty.builder()\n                        .instanceCount(123)\n                        .instanceType(\"instanceType\")\n                        .volumeSizeInGb(123)\n\n                        // the properties below are optional\n                        .volumeKmsKeyId(\"volumeKmsKeyId\")\n                        .build())\n                .build())\n        .modelQualityAppSpecification(ModelQualityAppSpecificationProperty.builder()\n                .imageUri(\"imageUri\")\n                .problemType(\"problemType\")\n\n                // the properties below are optional\n                .containerArguments(List.of(\"containerArguments\"))\n                .containerEntrypoint(List.of(\"containerEntrypoint\"))\n                .environment(Map.of(\n                        \"environmentKey\", \"environment\"))\n                .postAnalyticsProcessorSourceUri(\"postAnalyticsProcessorSourceUri\")\n                .recordPreprocessorSourceUri(\"recordPreprocessorSourceUri\")\n                .build())\n        .modelQualityJobInput(ModelQualityJobInputProperty.builder()\n                .endpointInput(EndpointInputProperty.builder()\n                        .endpointName(\"endpointName\")\n                        .localPath(\"localPath\")\n\n                        // the properties below are optional\n                        .endTimeOffset(\"endTimeOffset\")\n                        .inferenceAttribute(\"inferenceAttribute\")\n                        .probabilityAttribute(\"probabilityAttribute\")\n                        .probabilityThresholdAttribute(123)\n                        .s3DataDistributionType(\"s3DataDistributionType\")\n                        .s3InputMode(\"s3InputMode\")\n                        .startTimeOffset(\"startTimeOffset\")\n                        .build())\n                .groundTruthS3Input(MonitoringGroundTruthS3InputProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .build())\n        .modelQualityJobOutputConfig(MonitoringOutputConfigProperty.builder()\n                .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                        .s3Output(S3OutputProperty.builder()\n                                .localPath(\"localPath\")\n                                .s3Uri(\"s3Uri\")\n\n                                // the properties below are optional\n                                .s3UploadMode(\"s3UploadMode\")\n                                .build())\n                        .build()))\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .jobDefinitionName(\"jobDefinitionName\")\n        .modelQualityBaselineConfig(ModelQualityBaselineConfigProperty.builder()\n                .baseliningJobName(\"baseliningJobName\")\n                .constraintsResource(ConstraintsResourceProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .build())\n        .networkConfig(NetworkConfigProperty.builder()\n                .enableInterContainerTrafficEncryption(false)\n                .enableNetworkIsolation(false)\n                .vpcConfig(VpcConfigProperty.builder()\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnets(List.of(\"subnets\"))\n                        .build())\n                .build())\n        .stoppingCondition(StoppingConditionProperty.builder()\n                .maxRuntimeInSeconds(123)\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnModelQualityJobDefinitionProps := &cfnModelQualityJobDefinitionProps{\n\tjobResources: &monitoringResourcesProperty{\n\t\tclusterConfig: &clusterConfigProperty{\n\t\t\tinstanceCount: jsii.Number(123),\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t\t},\n\t},\n\tmodelQualityAppSpecification: &modelQualityAppSpecificationProperty{\n\t\timageUri: jsii.String(\"imageUri\"),\n\t\tproblemType: jsii.String(\"problemType\"),\n\n\t\t// the properties below are optional\n\t\tcontainerArguments: []*string{\n\t\t\tjsii.String(\"containerArguments\"),\n\t\t},\n\t\tcontainerEntrypoint: []*string{\n\t\t\tjsii.String(\"containerEntrypoint\"),\n\t\t},\n\t\tenvironment: map[string]*string{\n\t\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t\t},\n\t\tpostAnalyticsProcessorSourceUri: jsii.String(\"postAnalyticsProcessorSourceUri\"),\n\t\trecordPreprocessorSourceUri: jsii.String(\"recordPreprocessorSourceUri\"),\n\t},\n\tmodelQualityJobInput: &modelQualityJobInputProperty{\n\t\tendpointInput: &endpointInputProperty{\n\t\t\tendpointName: jsii.String(\"endpointName\"),\n\t\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t\t// the properties below are optional\n\t\t\tendTimeOffset: jsii.String(\"endTimeOffset\"),\n\t\t\tinferenceAttribute: jsii.String(\"inferenceAttribute\"),\n\t\t\tprobabilityAttribute: jsii.String(\"probabilityAttribute\"),\n\t\t\tprobabilityThresholdAttribute: jsii.Number(123),\n\t\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\t\tstartTimeOffset: jsii.String(\"startTimeOffset\"),\n\t\t},\n\t\tgroundTruthS3Input: &monitoringGroundTruthS3InputProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t},\n\tmodelQualityJobOutputConfig: &monitoringOutputConfigProperty{\n\t\tmonitoringOutputs: []interface{}{\n\t\t\t&monitoringOutputProperty{\n\t\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tjobDefinitionName: jsii.String(\"jobDefinitionName\"),\n\tmodelQualityBaselineConfig: &modelQualityBaselineConfigProperty{\n\t\tbaseliningJobName: jsii.String(\"baseliningJobName\"),\n\t\tconstraintsResource: &constraintsResourceProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t},\n\tnetworkConfig: &networkConfigProperty{\n\t\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\t\tenableNetworkIsolation: jsii.Boolean(false),\n\t\tvpcConfig: &vpcConfigProperty{\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnets: []*string{\n\t\t\t\tjsii.String(\"subnets\"),\n\t\t\t},\n\t\t},\n\t},\n\tstoppingCondition: &stoppingConditionProperty{\n\t\tmaxRuntimeInSeconds: jsii.Number(123),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnModelQualityJobDefinitionProps: sagemaker.CfnModelQualityJobDefinitionProps = {\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  modelQualityAppSpecification: {\n    imageUri: 'imageUri',\n    problemType: 'problemType',\n\n    // the properties below are optional\n    containerArguments: ['containerArguments'],\n    containerEntrypoint: ['containerEntrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n    recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n  },\n  modelQualityJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      endTimeOffset: 'endTimeOffset',\n      inferenceAttribute: 'inferenceAttribute',\n      probabilityAttribute: 'probabilityAttribute',\n      probabilityThresholdAttribute: 123,\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n      startTimeOffset: 'startTimeOffset',\n    },\n    groundTruthS3Input: {\n      s3Uri: 's3Uri',\n    },\n  },\n  modelQualityJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  jobDefinitionName: 'jobDefinitionName',\n  modelQualityBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinitionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnModelQualityJobDefinitionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnModelQualityJobDefinitionProps: sagemaker.CfnModelQualityJobDefinitionProps = {\n  jobResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  modelQualityAppSpecification: {\n    imageUri: 'imageUri',\n    problemType: 'problemType',\n\n    // the properties below are optional\n    containerArguments: ['containerArguments'],\n    containerEntrypoint: ['containerEntrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n    recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n  },\n  modelQualityJobInput: {\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      endTimeOffset: 'endTimeOffset',\n      inferenceAttribute: 'inferenceAttribute',\n      probabilityAttribute: 'probabilityAttribute',\n      probabilityThresholdAttribute: 123,\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n      startTimeOffset: 'startTimeOffset',\n    },\n    groundTruthS3Input: {\n      s3Uri: 's3Uri',\n    },\n  },\n  modelQualityJobOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  jobDefinitionName: 'jobDefinitionName',\n  modelQualityBaselineConfig: {\n    baseliningJobName: 'baseliningJobName',\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 31,
        "75": 56,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 6,
        "193": 17,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 52,
        "290": 1
      },
      "fqnsFingerprint": "a9b596368030fb7cb35dc0262be3fde020dbdc98a373934156cecbe4af2ed6be"
    },
    "9282e1612283f6bb33189c1681a4c1721a74e9cde4497731c7faab22cffefa45": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_monitoring_schedule = sagemaker.CfnMonitoringSchedule(self, \"MyCfnMonitoringSchedule\",\n    monitoring_schedule_config=sagemaker.CfnMonitoringSchedule.MonitoringScheduleConfigProperty(\n        monitoring_job_definition=sagemaker.CfnMonitoringSchedule.MonitoringJobDefinitionProperty(\n            monitoring_app_specification=sagemaker.CfnMonitoringSchedule.MonitoringAppSpecificationProperty(\n                image_uri=\"imageUri\",\n\n                # the properties below are optional\n                container_arguments=[\"containerArguments\"],\n                container_entrypoint=[\"containerEntrypoint\"],\n                post_analytics_processor_source_uri=\"postAnalyticsProcessorSourceUri\",\n                record_preprocessor_source_uri=\"recordPreprocessorSourceUri\"\n            ),\n            monitoring_inputs=[sagemaker.CfnMonitoringSchedule.MonitoringInputProperty(\n                endpoint_input=sagemaker.CfnMonitoringSchedule.EndpointInputProperty(\n                    endpoint_name=\"endpointName\",\n                    local_path=\"localPath\",\n\n                    # the properties below are optional\n                    s3_data_distribution_type=\"s3DataDistributionType\",\n                    s3_input_mode=\"s3InputMode\"\n                )\n            )],\n            monitoring_output_config=sagemaker.CfnMonitoringSchedule.MonitoringOutputConfigProperty(\n                monitoring_outputs=[sagemaker.CfnMonitoringSchedule.MonitoringOutputProperty(\n                    s3_output=sagemaker.CfnMonitoringSchedule.S3OutputProperty(\n                        local_path=\"localPath\",\n                        s3_uri=\"s3Uri\",\n\n                        # the properties below are optional\n                        s3_upload_mode=\"s3UploadMode\"\n                    )\n                )],\n\n                # the properties below are optional\n                kms_key_id=\"kmsKeyId\"\n            ),\n            monitoring_resources=sagemaker.CfnMonitoringSchedule.MonitoringResourcesProperty(\n                cluster_config=sagemaker.CfnMonitoringSchedule.ClusterConfigProperty(\n                    instance_count=123,\n                    instance_type=\"instanceType\",\n                    volume_size_in_gb=123,\n\n                    # the properties below are optional\n                    volume_kms_key_id=\"volumeKmsKeyId\"\n                )\n            ),\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            baseline_config=sagemaker.CfnMonitoringSchedule.BaselineConfigProperty(\n                constraints_resource=sagemaker.CfnMonitoringSchedule.ConstraintsResourceProperty(\n                    s3_uri=\"s3Uri\"\n                ),\n                statistics_resource=sagemaker.CfnMonitoringSchedule.StatisticsResourceProperty(\n                    s3_uri=\"s3Uri\"\n                )\n            ),\n            environment={\n                \"environment_key\": \"environment\"\n            },\n            network_config=sagemaker.CfnMonitoringSchedule.NetworkConfigProperty(\n                enable_inter_container_traffic_encryption=False,\n                enable_network_isolation=False,\n                vpc_config=sagemaker.CfnMonitoringSchedule.VpcConfigProperty(\n                    security_group_ids=[\"securityGroupIds\"],\n                    subnets=[\"subnets\"]\n                )\n            ),\n            stopping_condition=sagemaker.CfnMonitoringSchedule.StoppingConditionProperty(\n                max_runtime_in_seconds=123\n            )\n        ),\n        monitoring_job_definition_name=\"monitoringJobDefinitionName\",\n        monitoring_type=\"monitoringType\",\n        schedule_config=sagemaker.CfnMonitoringSchedule.ScheduleConfigProperty(\n            schedule_expression=\"scheduleExpression\"\n        )\n    ),\n    monitoring_schedule_name=\"monitoringScheduleName\",\n\n    # the properties below are optional\n    endpoint_name=\"endpointName\",\n    failure_reason=\"failureReason\",\n    last_monitoring_execution_summary=sagemaker.CfnMonitoringSchedule.MonitoringExecutionSummaryProperty(\n        creation_time=\"creationTime\",\n        last_modified_time=\"lastModifiedTime\",\n        monitoring_execution_status=\"monitoringExecutionStatus\",\n        monitoring_schedule_name=\"monitoringScheduleName\",\n        scheduled_time=\"scheduledTime\",\n\n        # the properties below are optional\n        endpoint_name=\"endpointName\",\n        failure_reason=\"failureReason\",\n        processing_job_arn=\"processingJobArn\"\n    ),\n    monitoring_schedule_status=\"monitoringScheduleStatus\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnMonitoringSchedule cfnMonitoringSchedule = new CfnMonitoringSchedule(this, \"MyCfnMonitoringSchedule\", new CfnMonitoringScheduleProps {\n    MonitoringScheduleConfig = new MonitoringScheduleConfigProperty {\n        MonitoringJobDefinition = new MonitoringJobDefinitionProperty {\n            MonitoringAppSpecification = new MonitoringAppSpecificationProperty {\n                ImageUri = \"imageUri\",\n\n                // the properties below are optional\n                ContainerArguments = new [] { \"containerArguments\" },\n                ContainerEntrypoint = new [] { \"containerEntrypoint\" },\n                PostAnalyticsProcessorSourceUri = \"postAnalyticsProcessorSourceUri\",\n                RecordPreprocessorSourceUri = \"recordPreprocessorSourceUri\"\n            },\n            MonitoringInputs = new [] { new MonitoringInputProperty {\n                EndpointInput = new EndpointInputProperty {\n                    EndpointName = \"endpointName\",\n                    LocalPath = \"localPath\",\n\n                    // the properties below are optional\n                    S3DataDistributionType = \"s3DataDistributionType\",\n                    S3InputMode = \"s3InputMode\"\n                }\n            } },\n            MonitoringOutputConfig = new MonitoringOutputConfigProperty {\n                MonitoringOutputs = new [] { new MonitoringOutputProperty {\n                    S3Output = new S3OutputProperty {\n                        LocalPath = \"localPath\",\n                        S3Uri = \"s3Uri\",\n\n                        // the properties below are optional\n                        S3UploadMode = \"s3UploadMode\"\n                    }\n                } },\n\n                // the properties below are optional\n                KmsKeyId = \"kmsKeyId\"\n            },\n            MonitoringResources = new MonitoringResourcesProperty {\n                ClusterConfig = new ClusterConfigProperty {\n                    InstanceCount = 123,\n                    InstanceType = \"instanceType\",\n                    VolumeSizeInGb = 123,\n\n                    // the properties below are optional\n                    VolumeKmsKeyId = \"volumeKmsKeyId\"\n                }\n            },\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BaselineConfig = new BaselineConfigProperty {\n                ConstraintsResource = new ConstraintsResourceProperty {\n                    S3Uri = \"s3Uri\"\n                },\n                StatisticsResource = new StatisticsResourceProperty {\n                    S3Uri = \"s3Uri\"\n                }\n            },\n            Environment = new Dictionary<string, string> {\n                { \"environmentKey\", \"environment\" }\n            },\n            NetworkConfig = new NetworkConfigProperty {\n                EnableInterContainerTrafficEncryption = false,\n                EnableNetworkIsolation = false,\n                VpcConfig = new VpcConfigProperty {\n                    SecurityGroupIds = new [] { \"securityGroupIds\" },\n                    Subnets = new [] { \"subnets\" }\n                }\n            },\n            StoppingCondition = new StoppingConditionProperty {\n                MaxRuntimeInSeconds = 123\n            }\n        },\n        MonitoringJobDefinitionName = \"monitoringJobDefinitionName\",\n        MonitoringType = \"monitoringType\",\n        ScheduleConfig = new ScheduleConfigProperty {\n            ScheduleExpression = \"scheduleExpression\"\n        }\n    },\n    MonitoringScheduleName = \"monitoringScheduleName\",\n\n    // the properties below are optional\n    EndpointName = \"endpointName\",\n    FailureReason = \"failureReason\",\n    LastMonitoringExecutionSummary = new MonitoringExecutionSummaryProperty {\n        CreationTime = \"creationTime\",\n        LastModifiedTime = \"lastModifiedTime\",\n        MonitoringExecutionStatus = \"monitoringExecutionStatus\",\n        MonitoringScheduleName = \"monitoringScheduleName\",\n        ScheduledTime = \"scheduledTime\",\n\n        // the properties below are optional\n        EndpointName = \"endpointName\",\n        FailureReason = \"failureReason\",\n        ProcessingJobArn = \"processingJobArn\"\n    },\n    MonitoringScheduleStatus = \"monitoringScheduleStatus\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnMonitoringSchedule cfnMonitoringSchedule = CfnMonitoringSchedule.Builder.create(this, \"MyCfnMonitoringSchedule\")\n        .monitoringScheduleConfig(MonitoringScheduleConfigProperty.builder()\n                .monitoringJobDefinition(MonitoringJobDefinitionProperty.builder()\n                        .monitoringAppSpecification(MonitoringAppSpecificationProperty.builder()\n                                .imageUri(\"imageUri\")\n\n                                // the properties below are optional\n                                .containerArguments(List.of(\"containerArguments\"))\n                                .containerEntrypoint(List.of(\"containerEntrypoint\"))\n                                .postAnalyticsProcessorSourceUri(\"postAnalyticsProcessorSourceUri\")\n                                .recordPreprocessorSourceUri(\"recordPreprocessorSourceUri\")\n                                .build())\n                        .monitoringInputs(List.of(MonitoringInputProperty.builder()\n                                .endpointInput(EndpointInputProperty.builder()\n                                        .endpointName(\"endpointName\")\n                                        .localPath(\"localPath\")\n\n                                        // the properties below are optional\n                                        .s3DataDistributionType(\"s3DataDistributionType\")\n                                        .s3InputMode(\"s3InputMode\")\n                                        .build())\n                                .build()))\n                        .monitoringOutputConfig(MonitoringOutputConfigProperty.builder()\n                                .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                                        .s3Output(S3OutputProperty.builder()\n                                                .localPath(\"localPath\")\n                                                .s3Uri(\"s3Uri\")\n\n                                                // the properties below are optional\n                                                .s3UploadMode(\"s3UploadMode\")\n                                                .build())\n                                        .build()))\n\n                                // the properties below are optional\n                                .kmsKeyId(\"kmsKeyId\")\n                                .build())\n                        .monitoringResources(MonitoringResourcesProperty.builder()\n                                .clusterConfig(ClusterConfigProperty.builder()\n                                        .instanceCount(123)\n                                        .instanceType(\"instanceType\")\n                                        .volumeSizeInGb(123)\n\n                                        // the properties below are optional\n                                        .volumeKmsKeyId(\"volumeKmsKeyId\")\n                                        .build())\n                                .build())\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .baselineConfig(BaselineConfigProperty.builder()\n                                .constraintsResource(ConstraintsResourceProperty.builder()\n                                        .s3Uri(\"s3Uri\")\n                                        .build())\n                                .statisticsResource(StatisticsResourceProperty.builder()\n                                        .s3Uri(\"s3Uri\")\n                                        .build())\n                                .build())\n                        .environment(Map.of(\n                                \"environmentKey\", \"environment\"))\n                        .networkConfig(NetworkConfigProperty.builder()\n                                .enableInterContainerTrafficEncryption(false)\n                                .enableNetworkIsolation(false)\n                                .vpcConfig(VpcConfigProperty.builder()\n                                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                                        .subnets(List.of(\"subnets\"))\n                                        .build())\n                                .build())\n                        .stoppingCondition(StoppingConditionProperty.builder()\n                                .maxRuntimeInSeconds(123)\n                                .build())\n                        .build())\n                .monitoringJobDefinitionName(\"monitoringJobDefinitionName\")\n                .monitoringType(\"monitoringType\")\n                .scheduleConfig(ScheduleConfigProperty.builder()\n                        .scheduleExpression(\"scheduleExpression\")\n                        .build())\n                .build())\n        .monitoringScheduleName(\"monitoringScheduleName\")\n\n        // the properties below are optional\n        .endpointName(\"endpointName\")\n        .failureReason(\"failureReason\")\n        .lastMonitoringExecutionSummary(MonitoringExecutionSummaryProperty.builder()\n                .creationTime(\"creationTime\")\n                .lastModifiedTime(\"lastModifiedTime\")\n                .monitoringExecutionStatus(\"monitoringExecutionStatus\")\n                .monitoringScheduleName(\"monitoringScheduleName\")\n                .scheduledTime(\"scheduledTime\")\n\n                // the properties below are optional\n                .endpointName(\"endpointName\")\n                .failureReason(\"failureReason\")\n                .processingJobArn(\"processingJobArn\")\n                .build())\n        .monitoringScheduleStatus(\"monitoringScheduleStatus\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnMonitoringSchedule := sagemaker.NewCfnMonitoringSchedule(this, jsii.String(\"MyCfnMonitoringSchedule\"), &cfnMonitoringScheduleProps{\n\tmonitoringScheduleConfig: &monitoringScheduleConfigProperty{\n\t\tmonitoringJobDefinition: &monitoringJobDefinitionProperty{\n\t\t\tmonitoringAppSpecification: &monitoringAppSpecificationProperty{\n\t\t\t\timageUri: jsii.String(\"imageUri\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcontainerArguments: []*string{\n\t\t\t\t\tjsii.String(\"containerArguments\"),\n\t\t\t\t},\n\t\t\t\tcontainerEntrypoint: []*string{\n\t\t\t\t\tjsii.String(\"containerEntrypoint\"),\n\t\t\t\t},\n\t\t\t\tpostAnalyticsProcessorSourceUri: jsii.String(\"postAnalyticsProcessorSourceUri\"),\n\t\t\t\trecordPreprocessorSourceUri: jsii.String(\"recordPreprocessorSourceUri\"),\n\t\t\t},\n\t\t\tmonitoringInputs: []interface{}{\n\t\t\t\t&monitoringInputProperty{\n\t\t\t\t\tendpointInput: &endpointInputProperty{\n\t\t\t\t\t\tendpointName: jsii.String(\"endpointName\"),\n\t\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\t\t\t\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmonitoringOutputConfig: &monitoringOutputConfigProperty{\n\t\t\t\tmonitoringOutputs: []interface{}{\n\t\t\t\t\t&monitoringOutputProperty{\n\t\t\t\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\t\t},\n\t\t\tmonitoringResources: &monitoringResourcesProperty{\n\t\t\t\tclusterConfig: &clusterConfigProperty{\n\t\t\t\t\tinstanceCount: jsii.Number(123),\n\t\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbaselineConfig: &baselineConfigProperty{\n\t\t\t\tconstraintsResource: &constraintsResourceProperty{\n\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t\t\t},\n\t\t\t\tstatisticsResource: &statisticsResourceProperty{\n\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tenvironment: map[string]*string{\n\t\t\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t\t\t},\n\t\t\tnetworkConfig: &networkConfigProperty{\n\t\t\t\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\t\t\t\tenableNetworkIsolation: jsii.Boolean(false),\n\t\t\t\tvpcConfig: &vpcConfigProperty{\n\t\t\t\t\tsecurityGroupIds: []*string{\n\t\t\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t\t\t},\n\t\t\t\t\tsubnets: []*string{\n\t\t\t\t\t\tjsii.String(\"subnets\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tstoppingCondition: &stoppingConditionProperty{\n\t\t\t\tmaxRuntimeInSeconds: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\tmonitoringJobDefinitionName: jsii.String(\"monitoringJobDefinitionName\"),\n\t\tmonitoringType: jsii.String(\"monitoringType\"),\n\t\tscheduleConfig: &scheduleConfigProperty{\n\t\t\tscheduleExpression: jsii.String(\"scheduleExpression\"),\n\t\t},\n\t},\n\tmonitoringScheduleName: jsii.String(\"monitoringScheduleName\"),\n\n\t// the properties below are optional\n\tendpointName: jsii.String(\"endpointName\"),\n\tfailureReason: jsii.String(\"failureReason\"),\n\tlastMonitoringExecutionSummary: &monitoringExecutionSummaryProperty{\n\t\tcreationTime: jsii.String(\"creationTime\"),\n\t\tlastModifiedTime: jsii.String(\"lastModifiedTime\"),\n\t\tmonitoringExecutionStatus: jsii.String(\"monitoringExecutionStatus\"),\n\t\tmonitoringScheduleName: jsii.String(\"monitoringScheduleName\"),\n\t\tscheduledTime: jsii.String(\"scheduledTime\"),\n\n\t\t// the properties below are optional\n\t\tendpointName: jsii.String(\"endpointName\"),\n\t\tfailureReason: jsii.String(\"failureReason\"),\n\t\tprocessingJobArn: jsii.String(\"processingJobArn\"),\n\t},\n\tmonitoringScheduleStatus: jsii.String(\"monitoringScheduleStatus\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnMonitoringSchedule = new sagemaker.CfnMonitoringSchedule(this, 'MyCfnMonitoringSchedule', {\n  monitoringScheduleConfig: {\n    monitoringJobDefinition: {\n      monitoringAppSpecification: {\n        imageUri: 'imageUri',\n\n        // the properties below are optional\n        containerArguments: ['containerArguments'],\n        containerEntrypoint: ['containerEntrypoint'],\n        postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n        recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n      },\n      monitoringInputs: [{\n        endpointInput: {\n          endpointName: 'endpointName',\n          localPath: 'localPath',\n\n          // the properties below are optional\n          s3DataDistributionType: 's3DataDistributionType',\n          s3InputMode: 's3InputMode',\n        },\n      }],\n      monitoringOutputConfig: {\n        monitoringOutputs: [{\n          s3Output: {\n            localPath: 'localPath',\n            s3Uri: 's3Uri',\n\n            // the properties below are optional\n            s3UploadMode: 's3UploadMode',\n          },\n        }],\n\n        // the properties below are optional\n        kmsKeyId: 'kmsKeyId',\n      },\n      monitoringResources: {\n        clusterConfig: {\n          instanceCount: 123,\n          instanceType: 'instanceType',\n          volumeSizeInGb: 123,\n\n          // the properties below are optional\n          volumeKmsKeyId: 'volumeKmsKeyId',\n        },\n      },\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      baselineConfig: {\n        constraintsResource: {\n          s3Uri: 's3Uri',\n        },\n        statisticsResource: {\n          s3Uri: 's3Uri',\n        },\n      },\n      environment: {\n        environmentKey: 'environment',\n      },\n      networkConfig: {\n        enableInterContainerTrafficEncryption: false,\n        enableNetworkIsolation: false,\n        vpcConfig: {\n          securityGroupIds: ['securityGroupIds'],\n          subnets: ['subnets'],\n        },\n      },\n      stoppingCondition: {\n        maxRuntimeInSeconds: 123,\n      },\n    },\n    monitoringJobDefinitionName: 'monitoringJobDefinitionName',\n    monitoringType: 'monitoringType',\n    scheduleConfig: {\n      scheduleExpression: 'scheduleExpression',\n    },\n  },\n  monitoringScheduleName: 'monitoringScheduleName',\n\n  // the properties below are optional\n  endpointName: 'endpointName',\n  failureReason: 'failureReason',\n  lastMonitoringExecutionSummary: {\n    creationTime: 'creationTime',\n    lastModifiedTime: 'lastModifiedTime',\n    monitoringExecutionStatus: 'monitoringExecutionStatus',\n    monitoringScheduleName: 'monitoringScheduleName',\n    scheduledTime: 'scheduledTime',\n\n    // the properties below are optional\n    endpointName: 'endpointName',\n    failureReason: 'failureReason',\n    processingJobArn: 'processingJobArn',\n  },\n  monitoringScheduleStatus: 'monitoringScheduleStatus',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule",
        "@aws-cdk/aws-sagemaker.CfnMonitoringScheduleProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMonitoringSchedule = new sagemaker.CfnMonitoringSchedule(this, 'MyCfnMonitoringSchedule', {\n  monitoringScheduleConfig: {\n    monitoringJobDefinition: {\n      monitoringAppSpecification: {\n        imageUri: 'imageUri',\n\n        // the properties below are optional\n        containerArguments: ['containerArguments'],\n        containerEntrypoint: ['containerEntrypoint'],\n        postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n        recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n      },\n      monitoringInputs: [{\n        endpointInput: {\n          endpointName: 'endpointName',\n          localPath: 'localPath',\n\n          // the properties below are optional\n          s3DataDistributionType: 's3DataDistributionType',\n          s3InputMode: 's3InputMode',\n        },\n      }],\n      monitoringOutputConfig: {\n        monitoringOutputs: [{\n          s3Output: {\n            localPath: 'localPath',\n            s3Uri: 's3Uri',\n\n            // the properties below are optional\n            s3UploadMode: 's3UploadMode',\n          },\n        }],\n\n        // the properties below are optional\n        kmsKeyId: 'kmsKeyId',\n      },\n      monitoringResources: {\n        clusterConfig: {\n          instanceCount: 123,\n          instanceType: 'instanceType',\n          volumeSizeInGb: 123,\n\n          // the properties below are optional\n          volumeKmsKeyId: 'volumeKmsKeyId',\n        },\n      },\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      baselineConfig: {\n        constraintsResource: {\n          s3Uri: 's3Uri',\n        },\n        statisticsResource: {\n          s3Uri: 's3Uri',\n        },\n      },\n      environment: {\n        environmentKey: 'environment',\n      },\n      networkConfig: {\n        enableInterContainerTrafficEncryption: false,\n        enableNetworkIsolation: false,\n        vpcConfig: {\n          securityGroupIds: ['securityGroupIds'],\n          subnets: ['subnets'],\n        },\n      },\n      stoppingCondition: {\n        maxRuntimeInSeconds: 123,\n      },\n    },\n    monitoringJobDefinitionName: 'monitoringJobDefinitionName',\n    monitoringType: 'monitoringType',\n    scheduleConfig: {\n      scheduleExpression: 'scheduleExpression',\n    },\n  },\n  monitoringScheduleName: 'monitoringScheduleName',\n\n  // the properties below are optional\n  endpointName: 'endpointName',\n  failureReason: 'failureReason',\n  lastMonitoringExecutionSummary: {\n    creationTime: 'creationTime',\n    lastModifiedTime: 'lastModifiedTime',\n    monitoringExecutionStatus: 'monitoringExecutionStatus',\n    monitoringScheduleName: 'monitoringScheduleName',\n    scheduledTime: 'scheduledTime',\n\n    // the properties below are optional\n    endpointName: 'endpointName',\n    failureReason: 'failureReason',\n    processingJobArn: 'processingJobArn',\n  },\n  monitoringScheduleStatus: 'monitoringScheduleStatus',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 40,
        "75": 67,
        "91": 2,
        "104": 1,
        "192": 7,
        "193": 21,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 63,
        "290": 1
      },
      "fqnsFingerprint": "acf2e24fb4e3ab138e220ac9c413c5aff27a37484b0205c7ce222f522845319d"
    },
    "620f01d11dad159668ec0b42709ef59a4c8b13fa9cb020c666fc52e2f1f8d271": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nbaseline_config_property = sagemaker.CfnMonitoringSchedule.BaselineConfigProperty(\n    constraints_resource=sagemaker.CfnMonitoringSchedule.ConstraintsResourceProperty(\n        s3_uri=\"s3Uri\"\n    ),\n    statistics_resource=sagemaker.CfnMonitoringSchedule.StatisticsResourceProperty(\n        s3_uri=\"s3Uri\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nBaselineConfigProperty baselineConfigProperty = new BaselineConfigProperty {\n    ConstraintsResource = new ConstraintsResourceProperty {\n        S3Uri = \"s3Uri\"\n    },\n    StatisticsResource = new StatisticsResourceProperty {\n        S3Uri = \"s3Uri\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nBaselineConfigProperty baselineConfigProperty = BaselineConfigProperty.builder()\n        .constraintsResource(ConstraintsResourceProperty.builder()\n                .s3Uri(\"s3Uri\")\n                .build())\n        .statisticsResource(StatisticsResourceProperty.builder()\n                .s3Uri(\"s3Uri\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nbaselineConfigProperty := &baselineConfigProperty{\n\tconstraintsResource: &constraintsResourceProperty{\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t},\n\tstatisticsResource: &statisticsResourceProperty{\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst baselineConfigProperty: sagemaker.CfnMonitoringSchedule.BaselineConfigProperty = {\n  constraintsResource: {\n    s3Uri: 's3Uri',\n  },\n  statisticsResource: {\n    s3Uri: 's3Uri',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.BaselineConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.BaselineConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst baselineConfigProperty: sagemaker.CfnMonitoringSchedule.BaselineConfigProperty = {\n  constraintsResource: {\n    s3Uri: 's3Uri',\n  },\n  statisticsResource: {\n    s3Uri: 's3Uri',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "1ebcf90d807e6687ae2b3c79c18937b2fd6ee4add65baeefe1ed52adadaaae67"
    },
    "62f070e0cfefddc9e0195885f959e8f599b847c620ad8a63c4bb57559a3376c0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncluster_config_property = sagemaker.CfnMonitoringSchedule.ClusterConfigProperty(\n    instance_count=123,\n    instance_type=\"instanceType\",\n    volume_size_in_gb=123,\n\n    # the properties below are optional\n    volume_kms_key_id=\"volumeKmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nClusterConfigProperty clusterConfigProperty = new ClusterConfigProperty {\n    InstanceCount = 123,\n    InstanceType = \"instanceType\",\n    VolumeSizeInGb = 123,\n\n    // the properties below are optional\n    VolumeKmsKeyId = \"volumeKmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nClusterConfigProperty clusterConfigProperty = ClusterConfigProperty.builder()\n        .instanceCount(123)\n        .instanceType(\"instanceType\")\n        .volumeSizeInGb(123)\n\n        // the properties below are optional\n        .volumeKmsKeyId(\"volumeKmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nclusterConfigProperty := &clusterConfigProperty{\n\tinstanceCount: jsii.Number(123),\n\tinstanceType: jsii.String(\"instanceType\"),\n\tvolumeSizeInGb: jsii.Number(123),\n\n\t// the properties below are optional\n\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst clusterConfigProperty: sagemaker.CfnMonitoringSchedule.ClusterConfigProperty = {\n  instanceCount: 123,\n  instanceType: 'instanceType',\n  volumeSizeInGb: 123,\n\n  // the properties below are optional\n  volumeKmsKeyId: 'volumeKmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.ClusterConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.ClusterConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst clusterConfigProperty: sagemaker.CfnMonitoringSchedule.ClusterConfigProperty = {\n  instanceCount: 123,\n  instanceType: 'instanceType',\n  volumeSizeInGb: 123,\n\n  // the properties below are optional\n  volumeKmsKeyId: 'volumeKmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "79af462f335e6b36e0dc4ed87e1931a857d3fead9dbf003e5341ffd10c84d406"
    },
    "d488d939a29f2f30bcc84dc95b59eb79a5b4a18bf198852d83aa2f925518b246": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nconstraints_resource_property = sagemaker.CfnMonitoringSchedule.ConstraintsResourceProperty(\n    s3_uri=\"s3Uri\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nConstraintsResourceProperty constraintsResourceProperty = new ConstraintsResourceProperty {\n    S3Uri = \"s3Uri\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nConstraintsResourceProperty constraintsResourceProperty = ConstraintsResourceProperty.builder()\n        .s3Uri(\"s3Uri\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nconstraintsResourceProperty := &constraintsResourceProperty{\n\ts3Uri: jsii.String(\"s3Uri\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst constraintsResourceProperty: sagemaker.CfnMonitoringSchedule.ConstraintsResourceProperty = {\n  s3Uri: 's3Uri',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.ConstraintsResourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.ConstraintsResourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst constraintsResourceProperty: sagemaker.CfnMonitoringSchedule.ConstraintsResourceProperty = {\n  s3Uri: 's3Uri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "c61148e79c62931949c78d6c767e9dca798e882d56ae58e2ae26e9a80e102890"
    },
    "fcc3aa355c9fdb1da12425f7f94774208dceef9c6c9944b52616b9f13e29a74b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nendpoint_input_property = sagemaker.CfnMonitoringSchedule.EndpointInputProperty(\n    endpoint_name=\"endpointName\",\n    local_path=\"localPath\",\n\n    # the properties below are optional\n    s3_data_distribution_type=\"s3DataDistributionType\",\n    s3_input_mode=\"s3InputMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nEndpointInputProperty endpointInputProperty = new EndpointInputProperty {\n    EndpointName = \"endpointName\",\n    LocalPath = \"localPath\",\n\n    // the properties below are optional\n    S3DataDistributionType = \"s3DataDistributionType\",\n    S3InputMode = \"s3InputMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nEndpointInputProperty endpointInputProperty = EndpointInputProperty.builder()\n        .endpointName(\"endpointName\")\n        .localPath(\"localPath\")\n\n        // the properties below are optional\n        .s3DataDistributionType(\"s3DataDistributionType\")\n        .s3InputMode(\"s3InputMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nendpointInputProperty := &endpointInputProperty{\n\tendpointName: jsii.String(\"endpointName\"),\n\tlocalPath: jsii.String(\"localPath\"),\n\n\t// the properties below are optional\n\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\ts3InputMode: jsii.String(\"s3InputMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst endpointInputProperty: sagemaker.CfnMonitoringSchedule.EndpointInputProperty = {\n  endpointName: 'endpointName',\n  localPath: 'localPath',\n\n  // the properties below are optional\n  s3DataDistributionType: 's3DataDistributionType',\n  s3InputMode: 's3InputMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.EndpointInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.EndpointInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst endpointInputProperty: sagemaker.CfnMonitoringSchedule.EndpointInputProperty = {\n  endpointName: 'endpointName',\n  localPath: 'localPath',\n\n  // the properties below are optional\n  s3DataDistributionType: 's3DataDistributionType',\n  s3InputMode: 's3InputMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "b72914948c5306ee9ecbb33cb4ea2f5f4f2af1625b5c267136b36202b2a9985e"
    },
    "f8051289ddf005b9ac7d90ac04b893b6b782c41ee25e6a06d44ee1f6969f3475": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_app_specification_property = sagemaker.CfnMonitoringSchedule.MonitoringAppSpecificationProperty(\n    image_uri=\"imageUri\",\n\n    # the properties below are optional\n    container_arguments=[\"containerArguments\"],\n    container_entrypoint=[\"containerEntrypoint\"],\n    post_analytics_processor_source_uri=\"postAnalyticsProcessorSourceUri\",\n    record_preprocessor_source_uri=\"recordPreprocessorSourceUri\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringAppSpecificationProperty monitoringAppSpecificationProperty = new MonitoringAppSpecificationProperty {\n    ImageUri = \"imageUri\",\n\n    // the properties below are optional\n    ContainerArguments = new [] { \"containerArguments\" },\n    ContainerEntrypoint = new [] { \"containerEntrypoint\" },\n    PostAnalyticsProcessorSourceUri = \"postAnalyticsProcessorSourceUri\",\n    RecordPreprocessorSourceUri = \"recordPreprocessorSourceUri\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringAppSpecificationProperty monitoringAppSpecificationProperty = MonitoringAppSpecificationProperty.builder()\n        .imageUri(\"imageUri\")\n\n        // the properties below are optional\n        .containerArguments(List.of(\"containerArguments\"))\n        .containerEntrypoint(List.of(\"containerEntrypoint\"))\n        .postAnalyticsProcessorSourceUri(\"postAnalyticsProcessorSourceUri\")\n        .recordPreprocessorSourceUri(\"recordPreprocessorSourceUri\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringAppSpecificationProperty := &monitoringAppSpecificationProperty{\n\timageUri: jsii.String(\"imageUri\"),\n\n\t// the properties below are optional\n\tcontainerArguments: []*string{\n\t\tjsii.String(\"containerArguments\"),\n\t},\n\tcontainerEntrypoint: []*string{\n\t\tjsii.String(\"containerEntrypoint\"),\n\t},\n\tpostAnalyticsProcessorSourceUri: jsii.String(\"postAnalyticsProcessorSourceUri\"),\n\trecordPreprocessorSourceUri: jsii.String(\"recordPreprocessorSourceUri\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringAppSpecificationProperty: sagemaker.CfnMonitoringSchedule.MonitoringAppSpecificationProperty = {\n  imageUri: 'imageUri',\n\n  // the properties below are optional\n  containerArguments: ['containerArguments'],\n  containerEntrypoint: ['containerEntrypoint'],\n  postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n  recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringAppSpecificationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringAppSpecificationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringAppSpecificationProperty: sagemaker.CfnMonitoringSchedule.MonitoringAppSpecificationProperty = {\n  imageUri: 'imageUri',\n\n  // the properties below are optional\n  containerArguments: ['containerArguments'],\n  containerEntrypoint: ['containerEntrypoint'],\n  postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n  recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "e0dc7e850bcdee5816528c90ad5bc9debe30a6c18bfe389f2f059063858e8c61"
    },
    "b2da277b9719badaf08586d656a544153699bad7ae7d416886446e9d6b9c68d0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_execution_summary_property = sagemaker.CfnMonitoringSchedule.MonitoringExecutionSummaryProperty(\n    creation_time=\"creationTime\",\n    last_modified_time=\"lastModifiedTime\",\n    monitoring_execution_status=\"monitoringExecutionStatus\",\n    monitoring_schedule_name=\"monitoringScheduleName\",\n    scheduled_time=\"scheduledTime\",\n\n    # the properties below are optional\n    endpoint_name=\"endpointName\",\n    failure_reason=\"failureReason\",\n    processing_job_arn=\"processingJobArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringExecutionSummaryProperty monitoringExecutionSummaryProperty = new MonitoringExecutionSummaryProperty {\n    CreationTime = \"creationTime\",\n    LastModifiedTime = \"lastModifiedTime\",\n    MonitoringExecutionStatus = \"monitoringExecutionStatus\",\n    MonitoringScheduleName = \"monitoringScheduleName\",\n    ScheduledTime = \"scheduledTime\",\n\n    // the properties below are optional\n    EndpointName = \"endpointName\",\n    FailureReason = \"failureReason\",\n    ProcessingJobArn = \"processingJobArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringExecutionSummaryProperty monitoringExecutionSummaryProperty = MonitoringExecutionSummaryProperty.builder()\n        .creationTime(\"creationTime\")\n        .lastModifiedTime(\"lastModifiedTime\")\n        .monitoringExecutionStatus(\"monitoringExecutionStatus\")\n        .monitoringScheduleName(\"monitoringScheduleName\")\n        .scheduledTime(\"scheduledTime\")\n\n        // the properties below are optional\n        .endpointName(\"endpointName\")\n        .failureReason(\"failureReason\")\n        .processingJobArn(\"processingJobArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringExecutionSummaryProperty := &monitoringExecutionSummaryProperty{\n\tcreationTime: jsii.String(\"creationTime\"),\n\tlastModifiedTime: jsii.String(\"lastModifiedTime\"),\n\tmonitoringExecutionStatus: jsii.String(\"monitoringExecutionStatus\"),\n\tmonitoringScheduleName: jsii.String(\"monitoringScheduleName\"),\n\tscheduledTime: jsii.String(\"scheduledTime\"),\n\n\t// the properties below are optional\n\tendpointName: jsii.String(\"endpointName\"),\n\tfailureReason: jsii.String(\"failureReason\"),\n\tprocessingJobArn: jsii.String(\"processingJobArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringExecutionSummaryProperty: sagemaker.CfnMonitoringSchedule.MonitoringExecutionSummaryProperty = {\n  creationTime: 'creationTime',\n  lastModifiedTime: 'lastModifiedTime',\n  monitoringExecutionStatus: 'monitoringExecutionStatus',\n  monitoringScheduleName: 'monitoringScheduleName',\n  scheduledTime: 'scheduledTime',\n\n  // the properties below are optional\n  endpointName: 'endpointName',\n  failureReason: 'failureReason',\n  processingJobArn: 'processingJobArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringExecutionSummaryProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringExecutionSummaryProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringExecutionSummaryProperty: sagemaker.CfnMonitoringSchedule.MonitoringExecutionSummaryProperty = {\n  creationTime: 'creationTime',\n  lastModifiedTime: 'lastModifiedTime',\n  monitoringExecutionStatus: 'monitoringExecutionStatus',\n  monitoringScheduleName: 'monitoringScheduleName',\n  scheduledTime: 'scheduledTime',\n\n  // the properties below are optional\n  endpointName: 'endpointName',\n  failureReason: 'failureReason',\n  processingJobArn: 'processingJobArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 13,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "c5de3de1343483ceccebcd99688cc6760dbc17f9b5dbab17feff1f7f1412e2ec"
    },
    "160c19dcea07ff7ce17e72c467151319e6eda19fa117cbcceaac3132c998b609": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_input_property = sagemaker.CfnMonitoringSchedule.MonitoringInputProperty(\n    endpoint_input=sagemaker.CfnMonitoringSchedule.EndpointInputProperty(\n        endpoint_name=\"endpointName\",\n        local_path=\"localPath\",\n\n        # the properties below are optional\n        s3_data_distribution_type=\"s3DataDistributionType\",\n        s3_input_mode=\"s3InputMode\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringInputProperty monitoringInputProperty = new MonitoringInputProperty {\n    EndpointInput = new EndpointInputProperty {\n        EndpointName = \"endpointName\",\n        LocalPath = \"localPath\",\n\n        // the properties below are optional\n        S3DataDistributionType = \"s3DataDistributionType\",\n        S3InputMode = \"s3InputMode\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringInputProperty monitoringInputProperty = MonitoringInputProperty.builder()\n        .endpointInput(EndpointInputProperty.builder()\n                .endpointName(\"endpointName\")\n                .localPath(\"localPath\")\n\n                // the properties below are optional\n                .s3DataDistributionType(\"s3DataDistributionType\")\n                .s3InputMode(\"s3InputMode\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringInputProperty := &monitoringInputProperty{\n\tendpointInput: &endpointInputProperty{\n\t\tendpointName: jsii.String(\"endpointName\"),\n\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t// the properties below are optional\n\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringInputProperty: sagemaker.CfnMonitoringSchedule.MonitoringInputProperty = {\n  endpointInput: {\n    endpointName: 'endpointName',\n    localPath: 'localPath',\n\n    // the properties below are optional\n    s3DataDistributionType: 's3DataDistributionType',\n    s3InputMode: 's3InputMode',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringInputProperty: sagemaker.CfnMonitoringSchedule.MonitoringInputProperty = {\n  endpointInput: {\n    endpointName: 'endpointName',\n    localPath: 'localPath',\n\n    // the properties below are optional\n    s3DataDistributionType: 's3DataDistributionType',\n    s3InputMode: 's3InputMode',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "0bf86614554532b72b48331f3eb35bf48d3f8682b03348a8e8ac0cfbac12c7bf"
    },
    "f17f0c7d30d44c3ed6b33e53695bd16b659a1d9580a58fca1c97a867cf2b1d77": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_job_definition_property = sagemaker.CfnMonitoringSchedule.MonitoringJobDefinitionProperty(\n    monitoring_app_specification=sagemaker.CfnMonitoringSchedule.MonitoringAppSpecificationProperty(\n        image_uri=\"imageUri\",\n\n        # the properties below are optional\n        container_arguments=[\"containerArguments\"],\n        container_entrypoint=[\"containerEntrypoint\"],\n        post_analytics_processor_source_uri=\"postAnalyticsProcessorSourceUri\",\n        record_preprocessor_source_uri=\"recordPreprocessorSourceUri\"\n    ),\n    monitoring_inputs=[sagemaker.CfnMonitoringSchedule.MonitoringInputProperty(\n        endpoint_input=sagemaker.CfnMonitoringSchedule.EndpointInputProperty(\n            endpoint_name=\"endpointName\",\n            local_path=\"localPath\",\n\n            # the properties below are optional\n            s3_data_distribution_type=\"s3DataDistributionType\",\n            s3_input_mode=\"s3InputMode\"\n        )\n    )],\n    monitoring_output_config=sagemaker.CfnMonitoringSchedule.MonitoringOutputConfigProperty(\n        monitoring_outputs=[sagemaker.CfnMonitoringSchedule.MonitoringOutputProperty(\n            s3_output=sagemaker.CfnMonitoringSchedule.S3OutputProperty(\n                local_path=\"localPath\",\n                s3_uri=\"s3Uri\",\n\n                # the properties below are optional\n                s3_upload_mode=\"s3UploadMode\"\n            )\n        )],\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    ),\n    monitoring_resources=sagemaker.CfnMonitoringSchedule.MonitoringResourcesProperty(\n        cluster_config=sagemaker.CfnMonitoringSchedule.ClusterConfigProperty(\n            instance_count=123,\n            instance_type=\"instanceType\",\n            volume_size_in_gb=123,\n\n            # the properties below are optional\n            volume_kms_key_id=\"volumeKmsKeyId\"\n        )\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    baseline_config=sagemaker.CfnMonitoringSchedule.BaselineConfigProperty(\n        constraints_resource=sagemaker.CfnMonitoringSchedule.ConstraintsResourceProperty(\n            s3_uri=\"s3Uri\"\n        ),\n        statistics_resource=sagemaker.CfnMonitoringSchedule.StatisticsResourceProperty(\n            s3_uri=\"s3Uri\"\n        )\n    ),\n    environment={\n        \"environment_key\": \"environment\"\n    },\n    network_config=sagemaker.CfnMonitoringSchedule.NetworkConfigProperty(\n        enable_inter_container_traffic_encryption=False,\n        enable_network_isolation=False,\n        vpc_config=sagemaker.CfnMonitoringSchedule.VpcConfigProperty(\n            security_group_ids=[\"securityGroupIds\"],\n            subnets=[\"subnets\"]\n        )\n    ),\n    stopping_condition=sagemaker.CfnMonitoringSchedule.StoppingConditionProperty(\n        max_runtime_in_seconds=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringJobDefinitionProperty monitoringJobDefinitionProperty = new MonitoringJobDefinitionProperty {\n    MonitoringAppSpecification = new MonitoringAppSpecificationProperty {\n        ImageUri = \"imageUri\",\n\n        // the properties below are optional\n        ContainerArguments = new [] { \"containerArguments\" },\n        ContainerEntrypoint = new [] { \"containerEntrypoint\" },\n        PostAnalyticsProcessorSourceUri = \"postAnalyticsProcessorSourceUri\",\n        RecordPreprocessorSourceUri = \"recordPreprocessorSourceUri\"\n    },\n    MonitoringInputs = new [] { new MonitoringInputProperty {\n        EndpointInput = new EndpointInputProperty {\n            EndpointName = \"endpointName\",\n            LocalPath = \"localPath\",\n\n            // the properties below are optional\n            S3DataDistributionType = \"s3DataDistributionType\",\n            S3InputMode = \"s3InputMode\"\n        }\n    } },\n    MonitoringOutputConfig = new MonitoringOutputConfigProperty {\n        MonitoringOutputs = new [] { new MonitoringOutputProperty {\n            S3Output = new S3OutputProperty {\n                LocalPath = \"localPath\",\n                S3Uri = \"s3Uri\",\n\n                // the properties below are optional\n                S3UploadMode = \"s3UploadMode\"\n            }\n        } },\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    },\n    MonitoringResources = new MonitoringResourcesProperty {\n        ClusterConfig = new ClusterConfigProperty {\n            InstanceCount = 123,\n            InstanceType = \"instanceType\",\n            VolumeSizeInGb = 123,\n\n            // the properties below are optional\n            VolumeKmsKeyId = \"volumeKmsKeyId\"\n        }\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    BaselineConfig = new BaselineConfigProperty {\n        ConstraintsResource = new ConstraintsResourceProperty {\n            S3Uri = \"s3Uri\"\n        },\n        StatisticsResource = new StatisticsResourceProperty {\n            S3Uri = \"s3Uri\"\n        }\n    },\n    Environment = new Dictionary<string, string> {\n        { \"environmentKey\", \"environment\" }\n    },\n    NetworkConfig = new NetworkConfigProperty {\n        EnableInterContainerTrafficEncryption = false,\n        EnableNetworkIsolation = false,\n        VpcConfig = new VpcConfigProperty {\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            Subnets = new [] { \"subnets\" }\n        }\n    },\n    StoppingCondition = new StoppingConditionProperty {\n        MaxRuntimeInSeconds = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringJobDefinitionProperty monitoringJobDefinitionProperty = MonitoringJobDefinitionProperty.builder()\n        .monitoringAppSpecification(MonitoringAppSpecificationProperty.builder()\n                .imageUri(\"imageUri\")\n\n                // the properties below are optional\n                .containerArguments(List.of(\"containerArguments\"))\n                .containerEntrypoint(List.of(\"containerEntrypoint\"))\n                .postAnalyticsProcessorSourceUri(\"postAnalyticsProcessorSourceUri\")\n                .recordPreprocessorSourceUri(\"recordPreprocessorSourceUri\")\n                .build())\n        .monitoringInputs(List.of(MonitoringInputProperty.builder()\n                .endpointInput(EndpointInputProperty.builder()\n                        .endpointName(\"endpointName\")\n                        .localPath(\"localPath\")\n\n                        // the properties below are optional\n                        .s3DataDistributionType(\"s3DataDistributionType\")\n                        .s3InputMode(\"s3InputMode\")\n                        .build())\n                .build()))\n        .monitoringOutputConfig(MonitoringOutputConfigProperty.builder()\n                .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                        .s3Output(S3OutputProperty.builder()\n                                .localPath(\"localPath\")\n                                .s3Uri(\"s3Uri\")\n\n                                // the properties below are optional\n                                .s3UploadMode(\"s3UploadMode\")\n                                .build())\n                        .build()))\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .monitoringResources(MonitoringResourcesProperty.builder()\n                .clusterConfig(ClusterConfigProperty.builder()\n                        .instanceCount(123)\n                        .instanceType(\"instanceType\")\n                        .volumeSizeInGb(123)\n\n                        // the properties below are optional\n                        .volumeKmsKeyId(\"volumeKmsKeyId\")\n                        .build())\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .baselineConfig(BaselineConfigProperty.builder()\n                .constraintsResource(ConstraintsResourceProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .statisticsResource(StatisticsResourceProperty.builder()\n                        .s3Uri(\"s3Uri\")\n                        .build())\n                .build())\n        .environment(Map.of(\n                \"environmentKey\", \"environment\"))\n        .networkConfig(NetworkConfigProperty.builder()\n                .enableInterContainerTrafficEncryption(false)\n                .enableNetworkIsolation(false)\n                .vpcConfig(VpcConfigProperty.builder()\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnets(List.of(\"subnets\"))\n                        .build())\n                .build())\n        .stoppingCondition(StoppingConditionProperty.builder()\n                .maxRuntimeInSeconds(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringJobDefinitionProperty := &monitoringJobDefinitionProperty{\n\tmonitoringAppSpecification: &monitoringAppSpecificationProperty{\n\t\timageUri: jsii.String(\"imageUri\"),\n\n\t\t// the properties below are optional\n\t\tcontainerArguments: []*string{\n\t\t\tjsii.String(\"containerArguments\"),\n\t\t},\n\t\tcontainerEntrypoint: []*string{\n\t\t\tjsii.String(\"containerEntrypoint\"),\n\t\t},\n\t\tpostAnalyticsProcessorSourceUri: jsii.String(\"postAnalyticsProcessorSourceUri\"),\n\t\trecordPreprocessorSourceUri: jsii.String(\"recordPreprocessorSourceUri\"),\n\t},\n\tmonitoringInputs: []interface{}{\n\t\t&monitoringInputProperty{\n\t\t\tendpointInput: &endpointInputProperty{\n\t\t\t\tendpointName: jsii.String(\"endpointName\"),\n\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\t\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\t\t},\n\t\t},\n\t},\n\tmonitoringOutputConfig: &monitoringOutputConfigProperty{\n\t\tmonitoringOutputs: []interface{}{\n\t\t\t&monitoringOutputProperty{\n\t\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\tmonitoringResources: &monitoringResourcesProperty{\n\t\tclusterConfig: &clusterConfigProperty{\n\t\t\tinstanceCount: jsii.Number(123),\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t\t},\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tbaselineConfig: &baselineConfigProperty{\n\t\tconstraintsResource: &constraintsResourceProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t\tstatisticsResource: &statisticsResourceProperty{\n\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t},\n\t},\n\tenvironment: map[string]*string{\n\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t},\n\tnetworkConfig: &networkConfigProperty{\n\t\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\t\tenableNetworkIsolation: jsii.Boolean(false),\n\t\tvpcConfig: &vpcConfigProperty{\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnets: []*string{\n\t\t\t\tjsii.String(\"subnets\"),\n\t\t\t},\n\t\t},\n\t},\n\tstoppingCondition: &stoppingConditionProperty{\n\t\tmaxRuntimeInSeconds: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringJobDefinitionProperty: sagemaker.CfnMonitoringSchedule.MonitoringJobDefinitionProperty = {\n  monitoringAppSpecification: {\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    containerArguments: ['containerArguments'],\n    containerEntrypoint: ['containerEntrypoint'],\n    postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n    recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n  },\n  monitoringInputs: [{\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n    },\n  }],\n  monitoringOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  monitoringResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  baselineConfig: {\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n    statisticsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  environment: {\n    environmentKey: 'environment',\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringJobDefinitionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringJobDefinitionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringJobDefinitionProperty: sagemaker.CfnMonitoringSchedule.MonitoringJobDefinitionProperty = {\n  monitoringAppSpecification: {\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    containerArguments: ['containerArguments'],\n    containerEntrypoint: ['containerEntrypoint'],\n    postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n    recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n  },\n  monitoringInputs: [{\n    endpointInput: {\n      endpointName: 'endpointName',\n      localPath: 'localPath',\n\n      // the properties below are optional\n      s3DataDistributionType: 's3DataDistributionType',\n      s3InputMode: 's3InputMode',\n    },\n  }],\n  monitoringOutputConfig: {\n    monitoringOutputs: [{\n      s3Output: {\n        localPath: 'localPath',\n        s3Uri: 's3Uri',\n\n        // the properties below are optional\n        s3UploadMode: 's3UploadMode',\n      },\n    }],\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  monitoringResources: {\n    clusterConfig: {\n      instanceCount: 123,\n      instanceType: 'instanceType',\n      volumeSizeInGb: 123,\n\n      // the properties below are optional\n      volumeKmsKeyId: 'volumeKmsKeyId',\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  baselineConfig: {\n    constraintsResource: {\n      s3Uri: 's3Uri',\n    },\n    statisticsResource: {\n      s3Uri: 's3Uri',\n    },\n  },\n  environment: {\n    environmentKey: 'environment',\n  },\n  networkConfig: {\n    enableInterContainerTrafficEncryption: false,\n    enableNetworkIsolation: false,\n    vpcConfig: {\n      securityGroupIds: ['securityGroupIds'],\n      subnets: ['subnets'],\n    },\n  },\n  stoppingCondition: {\n    maxRuntimeInSeconds: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 22,
        "75": 46,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 16,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 41,
        "290": 1
      },
      "fqnsFingerprint": "827afc049f0b6344f7692b0c36339969fc09651231557b989cbb6121200c895c"
    },
    "54db3e3a1f4d4922de1c47c5c3488bb25d01d4e0c93abd5491f0f002cc968640": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_output_config_property = sagemaker.CfnMonitoringSchedule.MonitoringOutputConfigProperty(\n    monitoring_outputs=[sagemaker.CfnMonitoringSchedule.MonitoringOutputProperty(\n        s3_output=sagemaker.CfnMonitoringSchedule.S3OutputProperty(\n            local_path=\"localPath\",\n            s3_uri=\"s3Uri\",\n\n            # the properties below are optional\n            s3_upload_mode=\"s3UploadMode\"\n        )\n    )],\n\n    # the properties below are optional\n    kms_key_id=\"kmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringOutputConfigProperty monitoringOutputConfigProperty = new MonitoringOutputConfigProperty {\n    MonitoringOutputs = new [] { new MonitoringOutputProperty {\n        S3Output = new S3OutputProperty {\n            LocalPath = \"localPath\",\n            S3Uri = \"s3Uri\",\n\n            // the properties below are optional\n            S3UploadMode = \"s3UploadMode\"\n        }\n    } },\n\n    // the properties below are optional\n    KmsKeyId = \"kmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringOutputConfigProperty monitoringOutputConfigProperty = MonitoringOutputConfigProperty.builder()\n        .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                .s3Output(S3OutputProperty.builder()\n                        .localPath(\"localPath\")\n                        .s3Uri(\"s3Uri\")\n\n                        // the properties below are optional\n                        .s3UploadMode(\"s3UploadMode\")\n                        .build())\n                .build()))\n\n        // the properties below are optional\n        .kmsKeyId(\"kmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringOutputConfigProperty := &monitoringOutputConfigProperty{\n\tmonitoringOutputs: []interface{}{\n\t\t&monitoringOutputProperty{\n\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringOutputConfigProperty: sagemaker.CfnMonitoringSchedule.MonitoringOutputConfigProperty = {\n  monitoringOutputs: [{\n    s3Output: {\n      localPath: 'localPath',\n      s3Uri: 's3Uri',\n\n      // the properties below are optional\n      s3UploadMode: 's3UploadMode',\n    },\n  }],\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringOutputConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringOutputConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringOutputConfigProperty: sagemaker.CfnMonitoringSchedule.MonitoringOutputConfigProperty = {\n  monitoringOutputs: [{\n    s3Output: {\n      localPath: 'localPath',\n      s3Uri: 's3Uri',\n\n      // the properties below are optional\n      s3UploadMode: 's3UploadMode',\n    },\n  }],\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 11,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "0ac9e74b39442349904dcdac657765faaaf2aa6d39a15ba5876a5ede770df647"
    },
    "e65a233d7cf2d6a0fcab3c550233b8166b1c4a160748deeec33c55899069e152": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_output_property = sagemaker.CfnMonitoringSchedule.MonitoringOutputProperty(\n    s3_output=sagemaker.CfnMonitoringSchedule.S3OutputProperty(\n        local_path=\"localPath\",\n        s3_uri=\"s3Uri\",\n\n        # the properties below are optional\n        s3_upload_mode=\"s3UploadMode\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringOutputProperty monitoringOutputProperty = new MonitoringOutputProperty {\n    S3Output = new S3OutputProperty {\n        LocalPath = \"localPath\",\n        S3Uri = \"s3Uri\",\n\n        // the properties below are optional\n        S3UploadMode = \"s3UploadMode\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringOutputProperty monitoringOutputProperty = MonitoringOutputProperty.builder()\n        .s3Output(S3OutputProperty.builder()\n                .localPath(\"localPath\")\n                .s3Uri(\"s3Uri\")\n\n                // the properties below are optional\n                .s3UploadMode(\"s3UploadMode\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringOutputProperty := &monitoringOutputProperty{\n\ts3Output: &s3OutputProperty{\n\t\tlocalPath: jsii.String(\"localPath\"),\n\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t// the properties below are optional\n\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringOutputProperty: sagemaker.CfnMonitoringSchedule.MonitoringOutputProperty = {\n  s3Output: {\n    localPath: 'localPath',\n    s3Uri: 's3Uri',\n\n    // the properties below are optional\n    s3UploadMode: 's3UploadMode',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringOutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringOutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringOutputProperty: sagemaker.CfnMonitoringSchedule.MonitoringOutputProperty = {\n  s3Output: {\n    localPath: 'localPath',\n    s3Uri: 's3Uri',\n\n    // the properties below are optional\n    s3UploadMode: 's3UploadMode',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "c12b97086b142cad27042978f7b9c34fd4315fde9ae8e22a3d3b8814fc397e3a"
    },
    "8e2a8fdd3dd32a71167bd23a5bf2d25a8378b0913a10e920474a0ca047c31612": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_resources_property = sagemaker.CfnMonitoringSchedule.MonitoringResourcesProperty(\n    cluster_config=sagemaker.CfnMonitoringSchedule.ClusterConfigProperty(\n        instance_count=123,\n        instance_type=\"instanceType\",\n        volume_size_in_gb=123,\n\n        # the properties below are optional\n        volume_kms_key_id=\"volumeKmsKeyId\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringResourcesProperty monitoringResourcesProperty = new MonitoringResourcesProperty {\n    ClusterConfig = new ClusterConfigProperty {\n        InstanceCount = 123,\n        InstanceType = \"instanceType\",\n        VolumeSizeInGb = 123,\n\n        // the properties below are optional\n        VolumeKmsKeyId = \"volumeKmsKeyId\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringResourcesProperty monitoringResourcesProperty = MonitoringResourcesProperty.builder()\n        .clusterConfig(ClusterConfigProperty.builder()\n                .instanceCount(123)\n                .instanceType(\"instanceType\")\n                .volumeSizeInGb(123)\n\n                // the properties below are optional\n                .volumeKmsKeyId(\"volumeKmsKeyId\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringResourcesProperty := &monitoringResourcesProperty{\n\tclusterConfig: &clusterConfigProperty{\n\t\tinstanceCount: jsii.Number(123),\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringResourcesProperty: sagemaker.CfnMonitoringSchedule.MonitoringResourcesProperty = {\n  clusterConfig: {\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    volumeSizeInGb: 123,\n\n    // the properties below are optional\n    volumeKmsKeyId: 'volumeKmsKeyId',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringResourcesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringResourcesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringResourcesProperty: sagemaker.CfnMonitoringSchedule.MonitoringResourcesProperty = {\n  clusterConfig: {\n    instanceCount: 123,\n    instanceType: 'instanceType',\n    volumeSizeInGb: 123,\n\n    // the properties below are optional\n    volumeKmsKeyId: 'volumeKmsKeyId',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "96d16eac90788893b09d54199f6cb056ab1d978185e597b600488b184337e587"
    },
    "09e8cf978aca9a30a7030b37a0b6caad928eff541133467da88b213722735973": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmonitoring_schedule_config_property = sagemaker.CfnMonitoringSchedule.MonitoringScheduleConfigProperty(\n    monitoring_job_definition=sagemaker.CfnMonitoringSchedule.MonitoringJobDefinitionProperty(\n        monitoring_app_specification=sagemaker.CfnMonitoringSchedule.MonitoringAppSpecificationProperty(\n            image_uri=\"imageUri\",\n\n            # the properties below are optional\n            container_arguments=[\"containerArguments\"],\n            container_entrypoint=[\"containerEntrypoint\"],\n            post_analytics_processor_source_uri=\"postAnalyticsProcessorSourceUri\",\n            record_preprocessor_source_uri=\"recordPreprocessorSourceUri\"\n        ),\n        monitoring_inputs=[sagemaker.CfnMonitoringSchedule.MonitoringInputProperty(\n            endpoint_input=sagemaker.CfnMonitoringSchedule.EndpointInputProperty(\n                endpoint_name=\"endpointName\",\n                local_path=\"localPath\",\n\n                # the properties below are optional\n                s3_data_distribution_type=\"s3DataDistributionType\",\n                s3_input_mode=\"s3InputMode\"\n            )\n        )],\n        monitoring_output_config=sagemaker.CfnMonitoringSchedule.MonitoringOutputConfigProperty(\n            monitoring_outputs=[sagemaker.CfnMonitoringSchedule.MonitoringOutputProperty(\n                s3_output=sagemaker.CfnMonitoringSchedule.S3OutputProperty(\n                    local_path=\"localPath\",\n                    s3_uri=\"s3Uri\",\n\n                    # the properties below are optional\n                    s3_upload_mode=\"s3UploadMode\"\n                )\n            )],\n\n            # the properties below are optional\n            kms_key_id=\"kmsKeyId\"\n        ),\n        monitoring_resources=sagemaker.CfnMonitoringSchedule.MonitoringResourcesProperty(\n            cluster_config=sagemaker.CfnMonitoringSchedule.ClusterConfigProperty(\n                instance_count=123,\n                instance_type=\"instanceType\",\n                volume_size_in_gb=123,\n\n                # the properties below are optional\n                volume_kms_key_id=\"volumeKmsKeyId\"\n            )\n        ),\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        baseline_config=sagemaker.CfnMonitoringSchedule.BaselineConfigProperty(\n            constraints_resource=sagemaker.CfnMonitoringSchedule.ConstraintsResourceProperty(\n                s3_uri=\"s3Uri\"\n            ),\n            statistics_resource=sagemaker.CfnMonitoringSchedule.StatisticsResourceProperty(\n                s3_uri=\"s3Uri\"\n            )\n        ),\n        environment={\n            \"environment_key\": \"environment\"\n        },\n        network_config=sagemaker.CfnMonitoringSchedule.NetworkConfigProperty(\n            enable_inter_container_traffic_encryption=False,\n            enable_network_isolation=False,\n            vpc_config=sagemaker.CfnMonitoringSchedule.VpcConfigProperty(\n                security_group_ids=[\"securityGroupIds\"],\n                subnets=[\"subnets\"]\n            )\n        ),\n        stopping_condition=sagemaker.CfnMonitoringSchedule.StoppingConditionProperty(\n            max_runtime_in_seconds=123\n        )\n    ),\n    monitoring_job_definition_name=\"monitoringJobDefinitionName\",\n    monitoring_type=\"monitoringType\",\n    schedule_config=sagemaker.CfnMonitoringSchedule.ScheduleConfigProperty(\n        schedule_expression=\"scheduleExpression\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMonitoringScheduleConfigProperty monitoringScheduleConfigProperty = new MonitoringScheduleConfigProperty {\n    MonitoringJobDefinition = new MonitoringJobDefinitionProperty {\n        MonitoringAppSpecification = new MonitoringAppSpecificationProperty {\n            ImageUri = \"imageUri\",\n\n            // the properties below are optional\n            ContainerArguments = new [] { \"containerArguments\" },\n            ContainerEntrypoint = new [] { \"containerEntrypoint\" },\n            PostAnalyticsProcessorSourceUri = \"postAnalyticsProcessorSourceUri\",\n            RecordPreprocessorSourceUri = \"recordPreprocessorSourceUri\"\n        },\n        MonitoringInputs = new [] { new MonitoringInputProperty {\n            EndpointInput = new EndpointInputProperty {\n                EndpointName = \"endpointName\",\n                LocalPath = \"localPath\",\n\n                // the properties below are optional\n                S3DataDistributionType = \"s3DataDistributionType\",\n                S3InputMode = \"s3InputMode\"\n            }\n        } },\n        MonitoringOutputConfig = new MonitoringOutputConfigProperty {\n            MonitoringOutputs = new [] { new MonitoringOutputProperty {\n                S3Output = new S3OutputProperty {\n                    LocalPath = \"localPath\",\n                    S3Uri = \"s3Uri\",\n\n                    // the properties below are optional\n                    S3UploadMode = \"s3UploadMode\"\n                }\n            } },\n\n            // the properties below are optional\n            KmsKeyId = \"kmsKeyId\"\n        },\n        MonitoringResources = new MonitoringResourcesProperty {\n            ClusterConfig = new ClusterConfigProperty {\n                InstanceCount = 123,\n                InstanceType = \"instanceType\",\n                VolumeSizeInGb = 123,\n\n                // the properties below are optional\n                VolumeKmsKeyId = \"volumeKmsKeyId\"\n            }\n        },\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BaselineConfig = new BaselineConfigProperty {\n            ConstraintsResource = new ConstraintsResourceProperty {\n                S3Uri = \"s3Uri\"\n            },\n            StatisticsResource = new StatisticsResourceProperty {\n                S3Uri = \"s3Uri\"\n            }\n        },\n        Environment = new Dictionary<string, string> {\n            { \"environmentKey\", \"environment\" }\n        },\n        NetworkConfig = new NetworkConfigProperty {\n            EnableInterContainerTrafficEncryption = false,\n            EnableNetworkIsolation = false,\n            VpcConfig = new VpcConfigProperty {\n                SecurityGroupIds = new [] { \"securityGroupIds\" },\n                Subnets = new [] { \"subnets\" }\n            }\n        },\n        StoppingCondition = new StoppingConditionProperty {\n            MaxRuntimeInSeconds = 123\n        }\n    },\n    MonitoringJobDefinitionName = \"monitoringJobDefinitionName\",\n    MonitoringType = \"monitoringType\",\n    ScheduleConfig = new ScheduleConfigProperty {\n        ScheduleExpression = \"scheduleExpression\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMonitoringScheduleConfigProperty monitoringScheduleConfigProperty = MonitoringScheduleConfigProperty.builder()\n        .monitoringJobDefinition(MonitoringJobDefinitionProperty.builder()\n                .monitoringAppSpecification(MonitoringAppSpecificationProperty.builder()\n                        .imageUri(\"imageUri\")\n\n                        // the properties below are optional\n                        .containerArguments(List.of(\"containerArguments\"))\n                        .containerEntrypoint(List.of(\"containerEntrypoint\"))\n                        .postAnalyticsProcessorSourceUri(\"postAnalyticsProcessorSourceUri\")\n                        .recordPreprocessorSourceUri(\"recordPreprocessorSourceUri\")\n                        .build())\n                .monitoringInputs(List.of(MonitoringInputProperty.builder()\n                        .endpointInput(EndpointInputProperty.builder()\n                                .endpointName(\"endpointName\")\n                                .localPath(\"localPath\")\n\n                                // the properties below are optional\n                                .s3DataDistributionType(\"s3DataDistributionType\")\n                                .s3InputMode(\"s3InputMode\")\n                                .build())\n                        .build()))\n                .monitoringOutputConfig(MonitoringOutputConfigProperty.builder()\n                        .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                                .s3Output(S3OutputProperty.builder()\n                                        .localPath(\"localPath\")\n                                        .s3Uri(\"s3Uri\")\n\n                                        // the properties below are optional\n                                        .s3UploadMode(\"s3UploadMode\")\n                                        .build())\n                                .build()))\n\n                        // the properties below are optional\n                        .kmsKeyId(\"kmsKeyId\")\n                        .build())\n                .monitoringResources(MonitoringResourcesProperty.builder()\n                        .clusterConfig(ClusterConfigProperty.builder()\n                                .instanceCount(123)\n                                .instanceType(\"instanceType\")\n                                .volumeSizeInGb(123)\n\n                                // the properties below are optional\n                                .volumeKmsKeyId(\"volumeKmsKeyId\")\n                                .build())\n                        .build())\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .baselineConfig(BaselineConfigProperty.builder()\n                        .constraintsResource(ConstraintsResourceProperty.builder()\n                                .s3Uri(\"s3Uri\")\n                                .build())\n                        .statisticsResource(StatisticsResourceProperty.builder()\n                                .s3Uri(\"s3Uri\")\n                                .build())\n                        .build())\n                .environment(Map.of(\n                        \"environmentKey\", \"environment\"))\n                .networkConfig(NetworkConfigProperty.builder()\n                        .enableInterContainerTrafficEncryption(false)\n                        .enableNetworkIsolation(false)\n                        .vpcConfig(VpcConfigProperty.builder()\n                                .securityGroupIds(List.of(\"securityGroupIds\"))\n                                .subnets(List.of(\"subnets\"))\n                                .build())\n                        .build())\n                .stoppingCondition(StoppingConditionProperty.builder()\n                        .maxRuntimeInSeconds(123)\n                        .build())\n                .build())\n        .monitoringJobDefinitionName(\"monitoringJobDefinitionName\")\n        .monitoringType(\"monitoringType\")\n        .scheduleConfig(ScheduleConfigProperty.builder()\n                .scheduleExpression(\"scheduleExpression\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmonitoringScheduleConfigProperty := &monitoringScheduleConfigProperty{\n\tmonitoringJobDefinition: &monitoringJobDefinitionProperty{\n\t\tmonitoringAppSpecification: &monitoringAppSpecificationProperty{\n\t\t\timageUri: jsii.String(\"imageUri\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcontainerArguments: []*string{\n\t\t\t\tjsii.String(\"containerArguments\"),\n\t\t\t},\n\t\t\tcontainerEntrypoint: []*string{\n\t\t\t\tjsii.String(\"containerEntrypoint\"),\n\t\t\t},\n\t\t\tpostAnalyticsProcessorSourceUri: jsii.String(\"postAnalyticsProcessorSourceUri\"),\n\t\t\trecordPreprocessorSourceUri: jsii.String(\"recordPreprocessorSourceUri\"),\n\t\t},\n\t\tmonitoringInputs: []interface{}{\n\t\t\t&monitoringInputProperty{\n\t\t\t\tendpointInput: &endpointInputProperty{\n\t\t\t\t\tendpointName: jsii.String(\"endpointName\"),\n\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\t\t\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tmonitoringOutputConfig: &monitoringOutputConfigProperty{\n\t\t\tmonitoringOutputs: []interface{}{\n\t\t\t\t&monitoringOutputProperty{\n\t\t\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\t},\n\t\tmonitoringResources: &monitoringResourcesProperty{\n\t\t\tclusterConfig: &clusterConfigProperty{\n\t\t\t\tinstanceCount: jsii.Number(123),\n\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t\t\t},\n\t\t},\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbaselineConfig: &baselineConfigProperty{\n\t\t\tconstraintsResource: &constraintsResourceProperty{\n\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t\t},\n\t\t\tstatisticsResource: &statisticsResourceProperty{\n\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t\t},\n\t\t},\n\t\tenvironment: map[string]*string{\n\t\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t\t},\n\t\tnetworkConfig: &networkConfigProperty{\n\t\t\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\t\t\tenableNetworkIsolation: jsii.Boolean(false),\n\t\t\tvpcConfig: &vpcConfigProperty{\n\t\t\t\tsecurityGroupIds: []*string{\n\t\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t\t},\n\t\t\t\tsubnets: []*string{\n\t\t\t\t\tjsii.String(\"subnets\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tstoppingCondition: &stoppingConditionProperty{\n\t\t\tmaxRuntimeInSeconds: jsii.Number(123),\n\t\t},\n\t},\n\tmonitoringJobDefinitionName: jsii.String(\"monitoringJobDefinitionName\"),\n\tmonitoringType: jsii.String(\"monitoringType\"),\n\tscheduleConfig: &scheduleConfigProperty{\n\t\tscheduleExpression: jsii.String(\"scheduleExpression\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst monitoringScheduleConfigProperty: sagemaker.CfnMonitoringSchedule.MonitoringScheduleConfigProperty = {\n  monitoringJobDefinition: {\n    monitoringAppSpecification: {\n      imageUri: 'imageUri',\n\n      // the properties below are optional\n      containerArguments: ['containerArguments'],\n      containerEntrypoint: ['containerEntrypoint'],\n      postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n      recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n    },\n    monitoringInputs: [{\n      endpointInput: {\n        endpointName: 'endpointName',\n        localPath: 'localPath',\n\n        // the properties below are optional\n        s3DataDistributionType: 's3DataDistributionType',\n        s3InputMode: 's3InputMode',\n      },\n    }],\n    monitoringOutputConfig: {\n      monitoringOutputs: [{\n        s3Output: {\n          localPath: 'localPath',\n          s3Uri: 's3Uri',\n\n          // the properties below are optional\n          s3UploadMode: 's3UploadMode',\n        },\n      }],\n\n      // the properties below are optional\n      kmsKeyId: 'kmsKeyId',\n    },\n    monitoringResources: {\n      clusterConfig: {\n        instanceCount: 123,\n        instanceType: 'instanceType',\n        volumeSizeInGb: 123,\n\n        // the properties below are optional\n        volumeKmsKeyId: 'volumeKmsKeyId',\n      },\n    },\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    baselineConfig: {\n      constraintsResource: {\n        s3Uri: 's3Uri',\n      },\n      statisticsResource: {\n        s3Uri: 's3Uri',\n      },\n    },\n    environment: {\n      environmentKey: 'environment',\n    },\n    networkConfig: {\n      enableInterContainerTrafficEncryption: false,\n      enableNetworkIsolation: false,\n      vpcConfig: {\n        securityGroupIds: ['securityGroupIds'],\n        subnets: ['subnets'],\n      },\n    },\n    stoppingCondition: {\n      maxRuntimeInSeconds: 123,\n    },\n  },\n  monitoringJobDefinitionName: 'monitoringJobDefinitionName',\n  monitoringType: 'monitoringType',\n  scheduleConfig: {\n    scheduleExpression: 'scheduleExpression',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringScheduleConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.MonitoringScheduleConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst monitoringScheduleConfigProperty: sagemaker.CfnMonitoringSchedule.MonitoringScheduleConfigProperty = {\n  monitoringJobDefinition: {\n    monitoringAppSpecification: {\n      imageUri: 'imageUri',\n\n      // the properties below are optional\n      containerArguments: ['containerArguments'],\n      containerEntrypoint: ['containerEntrypoint'],\n      postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n      recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n    },\n    monitoringInputs: [{\n      endpointInput: {\n        endpointName: 'endpointName',\n        localPath: 'localPath',\n\n        // the properties below are optional\n        s3DataDistributionType: 's3DataDistributionType',\n        s3InputMode: 's3InputMode',\n      },\n    }],\n    monitoringOutputConfig: {\n      monitoringOutputs: [{\n        s3Output: {\n          localPath: 'localPath',\n          s3Uri: 's3Uri',\n\n          // the properties below are optional\n          s3UploadMode: 's3UploadMode',\n        },\n      }],\n\n      // the properties below are optional\n      kmsKeyId: 'kmsKeyId',\n    },\n    monitoringResources: {\n      clusterConfig: {\n        instanceCount: 123,\n        instanceType: 'instanceType',\n        volumeSizeInGb: 123,\n\n        // the properties below are optional\n        volumeKmsKeyId: 'volumeKmsKeyId',\n      },\n    },\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    baselineConfig: {\n      constraintsResource: {\n        s3Uri: 's3Uri',\n      },\n      statisticsResource: {\n        s3Uri: 's3Uri',\n      },\n    },\n    environment: {\n      environmentKey: 'environment',\n    },\n    networkConfig: {\n      enableInterContainerTrafficEncryption: false,\n      enableNetworkIsolation: false,\n      vpcConfig: {\n        securityGroupIds: ['securityGroupIds'],\n        subnets: ['subnets'],\n      },\n    },\n    stoppingCondition: {\n      maxRuntimeInSeconds: 123,\n    },\n  },\n  monitoringJobDefinitionName: 'monitoringJobDefinitionName',\n  monitoringType: 'monitoringType',\n  scheduleConfig: {\n    scheduleExpression: 'scheduleExpression',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 25,
        "75": 51,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 18,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 46,
        "290": 1
      },
      "fqnsFingerprint": "39b7c9a1c7667b3e2e35377f3a770c6ffafde0c9684559767a73ec103614332a"
    },
    "1bd3215af160c5ca44f3d7211b49e5f663f36937b261d7b55bab96e3aa0e9436": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nnetwork_config_property = sagemaker.CfnMonitoringSchedule.NetworkConfigProperty(\n    enable_inter_container_traffic_encryption=False,\n    enable_network_isolation=False,\n    vpc_config=sagemaker.CfnMonitoringSchedule.VpcConfigProperty(\n        security_group_ids=[\"securityGroupIds\"],\n        subnets=[\"subnets\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nNetworkConfigProperty networkConfigProperty = new NetworkConfigProperty {\n    EnableInterContainerTrafficEncryption = false,\n    EnableNetworkIsolation = false,\n    VpcConfig = new VpcConfigProperty {\n        SecurityGroupIds = new [] { \"securityGroupIds\" },\n        Subnets = new [] { \"subnets\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nNetworkConfigProperty networkConfigProperty = NetworkConfigProperty.builder()\n        .enableInterContainerTrafficEncryption(false)\n        .enableNetworkIsolation(false)\n        .vpcConfig(VpcConfigProperty.builder()\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .subnets(List.of(\"subnets\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nnetworkConfigProperty := &networkConfigProperty{\n\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\tenableNetworkIsolation: jsii.Boolean(false),\n\tvpcConfig: &vpcConfigProperty{\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t\tsubnets: []*string{\n\t\t\tjsii.String(\"subnets\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst networkConfigProperty: sagemaker.CfnMonitoringSchedule.NetworkConfigProperty = {\n  enableInterContainerTrafficEncryption: false,\n  enableNetworkIsolation: false,\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.NetworkConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.NetworkConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst networkConfigProperty: sagemaker.CfnMonitoringSchedule.NetworkConfigProperty = {\n  enableInterContainerTrafficEncryption: false,\n  enableNetworkIsolation: false,\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "be552d87d70d71eda46bd67193493630e316a28f5eeda9e10cd2a163049c07d8"
    },
    "99cddd9ec77819f8730ed3bcf4abc4c95fdb0fb39fea179060a08e1adc37906f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ns3_output_property = sagemaker.CfnMonitoringSchedule.S3OutputProperty(\n    local_path=\"localPath\",\n    s3_uri=\"s3Uri\",\n\n    # the properties below are optional\n    s3_upload_mode=\"s3UploadMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nS3OutputProperty s3OutputProperty = new S3OutputProperty {\n    LocalPath = \"localPath\",\n    S3Uri = \"s3Uri\",\n\n    // the properties below are optional\n    S3UploadMode = \"s3UploadMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nS3OutputProperty s3OutputProperty = S3OutputProperty.builder()\n        .localPath(\"localPath\")\n        .s3Uri(\"s3Uri\")\n\n        // the properties below are optional\n        .s3UploadMode(\"s3UploadMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ns3OutputProperty := &s3OutputProperty{\n\tlocalPath: jsii.String(\"localPath\"),\n\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t// the properties below are optional\n\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst s3OutputProperty: sagemaker.CfnMonitoringSchedule.S3OutputProperty = {\n  localPath: 'localPath',\n  s3Uri: 's3Uri',\n\n  // the properties below are optional\n  s3UploadMode: 's3UploadMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.S3OutputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.S3OutputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3OutputProperty: sagemaker.CfnMonitoringSchedule.S3OutputProperty = {\n  localPath: 'localPath',\n  s3Uri: 's3Uri',\n\n  // the properties below are optional\n  s3UploadMode: 's3UploadMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "1ed4951e0829ef134cb5ddb1e677082040cacd5cd5f13ac74b7a9e810309c177"
    },
    "db989b893516b4d53d1254c55eb9b07a6758bb010620662b9978ff20f397f602": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nschedule_config_property = sagemaker.CfnMonitoringSchedule.ScheduleConfigProperty(\n    schedule_expression=\"scheduleExpression\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nScheduleConfigProperty scheduleConfigProperty = new ScheduleConfigProperty {\n    ScheduleExpression = \"scheduleExpression\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nScheduleConfigProperty scheduleConfigProperty = ScheduleConfigProperty.builder()\n        .scheduleExpression(\"scheduleExpression\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nscheduleConfigProperty := &scheduleConfigProperty{\n\tscheduleExpression: jsii.String(\"scheduleExpression\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst scheduleConfigProperty: sagemaker.CfnMonitoringSchedule.ScheduleConfigProperty = {\n  scheduleExpression: 'scheduleExpression',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.ScheduleConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.ScheduleConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst scheduleConfigProperty: sagemaker.CfnMonitoringSchedule.ScheduleConfigProperty = {\n  scheduleExpression: 'scheduleExpression',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "4e0956e7f6cf625a793fc8da56b728bb0d62f10b9a46126dc8c9ae22566e2a19"
    },
    "71f0ece8d1830b6dc1ed29db94e652f2b6ed9db9ae0e463863f67d1b6f93d63d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nstatistics_resource_property = sagemaker.CfnMonitoringSchedule.StatisticsResourceProperty(\n    s3_uri=\"s3Uri\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nStatisticsResourceProperty statisticsResourceProperty = new StatisticsResourceProperty {\n    S3Uri = \"s3Uri\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nStatisticsResourceProperty statisticsResourceProperty = StatisticsResourceProperty.builder()\n        .s3Uri(\"s3Uri\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nstatisticsResourceProperty := &statisticsResourceProperty{\n\ts3Uri: jsii.String(\"s3Uri\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst statisticsResourceProperty: sagemaker.CfnMonitoringSchedule.StatisticsResourceProperty = {\n  s3Uri: 's3Uri',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.StatisticsResourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.StatisticsResourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst statisticsResourceProperty: sagemaker.CfnMonitoringSchedule.StatisticsResourceProperty = {\n  s3Uri: 's3Uri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "ef82abb95a2da9ced8a7c62e114808e429756c78c80c677894ee8d9762a7c510"
    },
    "702aab7fe949b2289ec919158d1d959f53f3d7035dd74e07753b7baef67f80b4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nstopping_condition_property = sagemaker.CfnMonitoringSchedule.StoppingConditionProperty(\n    max_runtime_in_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nStoppingConditionProperty stoppingConditionProperty = new StoppingConditionProperty {\n    MaxRuntimeInSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nStoppingConditionProperty stoppingConditionProperty = StoppingConditionProperty.builder()\n        .maxRuntimeInSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nstoppingConditionProperty := &stoppingConditionProperty{\n\tmaxRuntimeInSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst stoppingConditionProperty: sagemaker.CfnMonitoringSchedule.StoppingConditionProperty = {\n  maxRuntimeInSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.StoppingConditionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.StoppingConditionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stoppingConditionProperty: sagemaker.CfnMonitoringSchedule.StoppingConditionProperty = {\n  maxRuntimeInSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "77e80116c8785b93fb1c9d6019a26b5a706958fe57824850af376ae46f54b70c"
    },
    "95691c04b0287148c72fb8252829d9a5456306342a013b51f81f252cbe2ad0bc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nvpc_config_property = sagemaker.CfnMonitoringSchedule.VpcConfigProperty(\n    security_group_ids=[\"securityGroupIds\"],\n    subnets=[\"subnets\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nVpcConfigProperty vpcConfigProperty = new VpcConfigProperty {\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    Subnets = new [] { \"subnets\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nVpcConfigProperty vpcConfigProperty = VpcConfigProperty.builder()\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .subnets(List.of(\"subnets\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvpcConfigProperty := &vpcConfigProperty{\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsubnets: []*string{\n\t\tjsii.String(\"subnets\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst vpcConfigProperty: sagemaker.CfnMonitoringSchedule.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnets: ['subnets'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.VpcConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringSchedule.VpcConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vpcConfigProperty: sagemaker.CfnMonitoringSchedule.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnets: ['subnets'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "4e2e69602fa9b9833c789cfc3526aae0ecb39d4ce008f55b31940546df9a9c63"
    },
    "1cd4c0a5ee2379b6936455b0de6eee2504e64f6cc465b057061b6dc1e207e20c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_monitoring_schedule_props = sagemaker.CfnMonitoringScheduleProps(\n    monitoring_schedule_config=sagemaker.CfnMonitoringSchedule.MonitoringScheduleConfigProperty(\n        monitoring_job_definition=sagemaker.CfnMonitoringSchedule.MonitoringJobDefinitionProperty(\n            monitoring_app_specification=sagemaker.CfnMonitoringSchedule.MonitoringAppSpecificationProperty(\n                image_uri=\"imageUri\",\n\n                # the properties below are optional\n                container_arguments=[\"containerArguments\"],\n                container_entrypoint=[\"containerEntrypoint\"],\n                post_analytics_processor_source_uri=\"postAnalyticsProcessorSourceUri\",\n                record_preprocessor_source_uri=\"recordPreprocessorSourceUri\"\n            ),\n            monitoring_inputs=[sagemaker.CfnMonitoringSchedule.MonitoringInputProperty(\n                endpoint_input=sagemaker.CfnMonitoringSchedule.EndpointInputProperty(\n                    endpoint_name=\"endpointName\",\n                    local_path=\"localPath\",\n\n                    # the properties below are optional\n                    s3_data_distribution_type=\"s3DataDistributionType\",\n                    s3_input_mode=\"s3InputMode\"\n                )\n            )],\n            monitoring_output_config=sagemaker.CfnMonitoringSchedule.MonitoringOutputConfigProperty(\n                monitoring_outputs=[sagemaker.CfnMonitoringSchedule.MonitoringOutputProperty(\n                    s3_output=sagemaker.CfnMonitoringSchedule.S3OutputProperty(\n                        local_path=\"localPath\",\n                        s3_uri=\"s3Uri\",\n\n                        # the properties below are optional\n                        s3_upload_mode=\"s3UploadMode\"\n                    )\n                )],\n\n                # the properties below are optional\n                kms_key_id=\"kmsKeyId\"\n            ),\n            monitoring_resources=sagemaker.CfnMonitoringSchedule.MonitoringResourcesProperty(\n                cluster_config=sagemaker.CfnMonitoringSchedule.ClusterConfigProperty(\n                    instance_count=123,\n                    instance_type=\"instanceType\",\n                    volume_size_in_gb=123,\n\n                    # the properties below are optional\n                    volume_kms_key_id=\"volumeKmsKeyId\"\n                )\n            ),\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            baseline_config=sagemaker.CfnMonitoringSchedule.BaselineConfigProperty(\n                constraints_resource=sagemaker.CfnMonitoringSchedule.ConstraintsResourceProperty(\n                    s3_uri=\"s3Uri\"\n                ),\n                statistics_resource=sagemaker.CfnMonitoringSchedule.StatisticsResourceProperty(\n                    s3_uri=\"s3Uri\"\n                )\n            ),\n            environment={\n                \"environment_key\": \"environment\"\n            },\n            network_config=sagemaker.CfnMonitoringSchedule.NetworkConfigProperty(\n                enable_inter_container_traffic_encryption=False,\n                enable_network_isolation=False,\n                vpc_config=sagemaker.CfnMonitoringSchedule.VpcConfigProperty(\n                    security_group_ids=[\"securityGroupIds\"],\n                    subnets=[\"subnets\"]\n                )\n            ),\n            stopping_condition=sagemaker.CfnMonitoringSchedule.StoppingConditionProperty(\n                max_runtime_in_seconds=123\n            )\n        ),\n        monitoring_job_definition_name=\"monitoringJobDefinitionName\",\n        monitoring_type=\"monitoringType\",\n        schedule_config=sagemaker.CfnMonitoringSchedule.ScheduleConfigProperty(\n            schedule_expression=\"scheduleExpression\"\n        )\n    ),\n    monitoring_schedule_name=\"monitoringScheduleName\",\n\n    # the properties below are optional\n    endpoint_name=\"endpointName\",\n    failure_reason=\"failureReason\",\n    last_monitoring_execution_summary=sagemaker.CfnMonitoringSchedule.MonitoringExecutionSummaryProperty(\n        creation_time=\"creationTime\",\n        last_modified_time=\"lastModifiedTime\",\n        monitoring_execution_status=\"monitoringExecutionStatus\",\n        monitoring_schedule_name=\"monitoringScheduleName\",\n        scheduled_time=\"scheduledTime\",\n\n        # the properties below are optional\n        endpoint_name=\"endpointName\",\n        failure_reason=\"failureReason\",\n        processing_job_arn=\"processingJobArn\"\n    ),\n    monitoring_schedule_status=\"monitoringScheduleStatus\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnMonitoringScheduleProps cfnMonitoringScheduleProps = new CfnMonitoringScheduleProps {\n    MonitoringScheduleConfig = new MonitoringScheduleConfigProperty {\n        MonitoringJobDefinition = new MonitoringJobDefinitionProperty {\n            MonitoringAppSpecification = new MonitoringAppSpecificationProperty {\n                ImageUri = \"imageUri\",\n\n                // the properties below are optional\n                ContainerArguments = new [] { \"containerArguments\" },\n                ContainerEntrypoint = new [] { \"containerEntrypoint\" },\n                PostAnalyticsProcessorSourceUri = \"postAnalyticsProcessorSourceUri\",\n                RecordPreprocessorSourceUri = \"recordPreprocessorSourceUri\"\n            },\n            MonitoringInputs = new [] { new MonitoringInputProperty {\n                EndpointInput = new EndpointInputProperty {\n                    EndpointName = \"endpointName\",\n                    LocalPath = \"localPath\",\n\n                    // the properties below are optional\n                    S3DataDistributionType = \"s3DataDistributionType\",\n                    S3InputMode = \"s3InputMode\"\n                }\n            } },\n            MonitoringOutputConfig = new MonitoringOutputConfigProperty {\n                MonitoringOutputs = new [] { new MonitoringOutputProperty {\n                    S3Output = new S3OutputProperty {\n                        LocalPath = \"localPath\",\n                        S3Uri = \"s3Uri\",\n\n                        // the properties below are optional\n                        S3UploadMode = \"s3UploadMode\"\n                    }\n                } },\n\n                // the properties below are optional\n                KmsKeyId = \"kmsKeyId\"\n            },\n            MonitoringResources = new MonitoringResourcesProperty {\n                ClusterConfig = new ClusterConfigProperty {\n                    InstanceCount = 123,\n                    InstanceType = \"instanceType\",\n                    VolumeSizeInGb = 123,\n\n                    // the properties below are optional\n                    VolumeKmsKeyId = \"volumeKmsKeyId\"\n                }\n            },\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BaselineConfig = new BaselineConfigProperty {\n                ConstraintsResource = new ConstraintsResourceProperty {\n                    S3Uri = \"s3Uri\"\n                },\n                StatisticsResource = new StatisticsResourceProperty {\n                    S3Uri = \"s3Uri\"\n                }\n            },\n            Environment = new Dictionary<string, string> {\n                { \"environmentKey\", \"environment\" }\n            },\n            NetworkConfig = new NetworkConfigProperty {\n                EnableInterContainerTrafficEncryption = false,\n                EnableNetworkIsolation = false,\n                VpcConfig = new VpcConfigProperty {\n                    SecurityGroupIds = new [] { \"securityGroupIds\" },\n                    Subnets = new [] { \"subnets\" }\n                }\n            },\n            StoppingCondition = new StoppingConditionProperty {\n                MaxRuntimeInSeconds = 123\n            }\n        },\n        MonitoringJobDefinitionName = \"monitoringJobDefinitionName\",\n        MonitoringType = \"monitoringType\",\n        ScheduleConfig = new ScheduleConfigProperty {\n            ScheduleExpression = \"scheduleExpression\"\n        }\n    },\n    MonitoringScheduleName = \"monitoringScheduleName\",\n\n    // the properties below are optional\n    EndpointName = \"endpointName\",\n    FailureReason = \"failureReason\",\n    LastMonitoringExecutionSummary = new MonitoringExecutionSummaryProperty {\n        CreationTime = \"creationTime\",\n        LastModifiedTime = \"lastModifiedTime\",\n        MonitoringExecutionStatus = \"monitoringExecutionStatus\",\n        MonitoringScheduleName = \"monitoringScheduleName\",\n        ScheduledTime = \"scheduledTime\",\n\n        // the properties below are optional\n        EndpointName = \"endpointName\",\n        FailureReason = \"failureReason\",\n        ProcessingJobArn = \"processingJobArn\"\n    },\n    MonitoringScheduleStatus = \"monitoringScheduleStatus\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnMonitoringScheduleProps cfnMonitoringScheduleProps = CfnMonitoringScheduleProps.builder()\n        .monitoringScheduleConfig(MonitoringScheduleConfigProperty.builder()\n                .monitoringJobDefinition(MonitoringJobDefinitionProperty.builder()\n                        .monitoringAppSpecification(MonitoringAppSpecificationProperty.builder()\n                                .imageUri(\"imageUri\")\n\n                                // the properties below are optional\n                                .containerArguments(List.of(\"containerArguments\"))\n                                .containerEntrypoint(List.of(\"containerEntrypoint\"))\n                                .postAnalyticsProcessorSourceUri(\"postAnalyticsProcessorSourceUri\")\n                                .recordPreprocessorSourceUri(\"recordPreprocessorSourceUri\")\n                                .build())\n                        .monitoringInputs(List.of(MonitoringInputProperty.builder()\n                                .endpointInput(EndpointInputProperty.builder()\n                                        .endpointName(\"endpointName\")\n                                        .localPath(\"localPath\")\n\n                                        // the properties below are optional\n                                        .s3DataDistributionType(\"s3DataDistributionType\")\n                                        .s3InputMode(\"s3InputMode\")\n                                        .build())\n                                .build()))\n                        .monitoringOutputConfig(MonitoringOutputConfigProperty.builder()\n                                .monitoringOutputs(List.of(MonitoringOutputProperty.builder()\n                                        .s3Output(S3OutputProperty.builder()\n                                                .localPath(\"localPath\")\n                                                .s3Uri(\"s3Uri\")\n\n                                                // the properties below are optional\n                                                .s3UploadMode(\"s3UploadMode\")\n                                                .build())\n                                        .build()))\n\n                                // the properties below are optional\n                                .kmsKeyId(\"kmsKeyId\")\n                                .build())\n                        .monitoringResources(MonitoringResourcesProperty.builder()\n                                .clusterConfig(ClusterConfigProperty.builder()\n                                        .instanceCount(123)\n                                        .instanceType(\"instanceType\")\n                                        .volumeSizeInGb(123)\n\n                                        // the properties below are optional\n                                        .volumeKmsKeyId(\"volumeKmsKeyId\")\n                                        .build())\n                                .build())\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .baselineConfig(BaselineConfigProperty.builder()\n                                .constraintsResource(ConstraintsResourceProperty.builder()\n                                        .s3Uri(\"s3Uri\")\n                                        .build())\n                                .statisticsResource(StatisticsResourceProperty.builder()\n                                        .s3Uri(\"s3Uri\")\n                                        .build())\n                                .build())\n                        .environment(Map.of(\n                                \"environmentKey\", \"environment\"))\n                        .networkConfig(NetworkConfigProperty.builder()\n                                .enableInterContainerTrafficEncryption(false)\n                                .enableNetworkIsolation(false)\n                                .vpcConfig(VpcConfigProperty.builder()\n                                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                                        .subnets(List.of(\"subnets\"))\n                                        .build())\n                                .build())\n                        .stoppingCondition(StoppingConditionProperty.builder()\n                                .maxRuntimeInSeconds(123)\n                                .build())\n                        .build())\n                .monitoringJobDefinitionName(\"monitoringJobDefinitionName\")\n                .monitoringType(\"monitoringType\")\n                .scheduleConfig(ScheduleConfigProperty.builder()\n                        .scheduleExpression(\"scheduleExpression\")\n                        .build())\n                .build())\n        .monitoringScheduleName(\"monitoringScheduleName\")\n\n        // the properties below are optional\n        .endpointName(\"endpointName\")\n        .failureReason(\"failureReason\")\n        .lastMonitoringExecutionSummary(MonitoringExecutionSummaryProperty.builder()\n                .creationTime(\"creationTime\")\n                .lastModifiedTime(\"lastModifiedTime\")\n                .monitoringExecutionStatus(\"monitoringExecutionStatus\")\n                .monitoringScheduleName(\"monitoringScheduleName\")\n                .scheduledTime(\"scheduledTime\")\n\n                // the properties below are optional\n                .endpointName(\"endpointName\")\n                .failureReason(\"failureReason\")\n                .processingJobArn(\"processingJobArn\")\n                .build())\n        .monitoringScheduleStatus(\"monitoringScheduleStatus\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnMonitoringScheduleProps := &cfnMonitoringScheduleProps{\n\tmonitoringScheduleConfig: &monitoringScheduleConfigProperty{\n\t\tmonitoringJobDefinition: &monitoringJobDefinitionProperty{\n\t\t\tmonitoringAppSpecification: &monitoringAppSpecificationProperty{\n\t\t\t\timageUri: jsii.String(\"imageUri\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcontainerArguments: []*string{\n\t\t\t\t\tjsii.String(\"containerArguments\"),\n\t\t\t\t},\n\t\t\t\tcontainerEntrypoint: []*string{\n\t\t\t\t\tjsii.String(\"containerEntrypoint\"),\n\t\t\t\t},\n\t\t\t\tpostAnalyticsProcessorSourceUri: jsii.String(\"postAnalyticsProcessorSourceUri\"),\n\t\t\t\trecordPreprocessorSourceUri: jsii.String(\"recordPreprocessorSourceUri\"),\n\t\t\t},\n\t\t\tmonitoringInputs: []interface{}{\n\t\t\t\t&monitoringInputProperty{\n\t\t\t\t\tendpointInput: &endpointInputProperty{\n\t\t\t\t\t\tendpointName: jsii.String(\"endpointName\"),\n\t\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\ts3DataDistributionType: jsii.String(\"s3DataDistributionType\"),\n\t\t\t\t\t\ts3InputMode: jsii.String(\"s3InputMode\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmonitoringOutputConfig: &monitoringOutputConfigProperty{\n\t\t\t\tmonitoringOutputs: []interface{}{\n\t\t\t\t\t&monitoringOutputProperty{\n\t\t\t\t\t\ts3Output: &s3OutputProperty{\n\t\t\t\t\t\t\tlocalPath: jsii.String(\"localPath\"),\n\t\t\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\ts3UploadMode: jsii.String(\"s3UploadMode\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\t\t},\n\t\t\tmonitoringResources: &monitoringResourcesProperty{\n\t\t\t\tclusterConfig: &clusterConfigProperty{\n\t\t\t\t\tinstanceCount: jsii.Number(123),\n\t\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\t\tvolumeSizeInGb: jsii.Number(123),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tvolumeKmsKeyId: jsii.String(\"volumeKmsKeyId\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbaselineConfig: &baselineConfigProperty{\n\t\t\t\tconstraintsResource: &constraintsResourceProperty{\n\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t\t\t},\n\t\t\t\tstatisticsResource: &statisticsResourceProperty{\n\t\t\t\t\ts3Uri: jsii.String(\"s3Uri\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tenvironment: map[string]*string{\n\t\t\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t\t\t},\n\t\t\tnetworkConfig: &networkConfigProperty{\n\t\t\t\tenableInterContainerTrafficEncryption: jsii.Boolean(false),\n\t\t\t\tenableNetworkIsolation: jsii.Boolean(false),\n\t\t\t\tvpcConfig: &vpcConfigProperty{\n\t\t\t\t\tsecurityGroupIds: []*string{\n\t\t\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t\t\t},\n\t\t\t\t\tsubnets: []*string{\n\t\t\t\t\t\tjsii.String(\"subnets\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tstoppingCondition: &stoppingConditionProperty{\n\t\t\t\tmaxRuntimeInSeconds: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\tmonitoringJobDefinitionName: jsii.String(\"monitoringJobDefinitionName\"),\n\t\tmonitoringType: jsii.String(\"monitoringType\"),\n\t\tscheduleConfig: &scheduleConfigProperty{\n\t\t\tscheduleExpression: jsii.String(\"scheduleExpression\"),\n\t\t},\n\t},\n\tmonitoringScheduleName: jsii.String(\"monitoringScheduleName\"),\n\n\t// the properties below are optional\n\tendpointName: jsii.String(\"endpointName\"),\n\tfailureReason: jsii.String(\"failureReason\"),\n\tlastMonitoringExecutionSummary: &monitoringExecutionSummaryProperty{\n\t\tcreationTime: jsii.String(\"creationTime\"),\n\t\tlastModifiedTime: jsii.String(\"lastModifiedTime\"),\n\t\tmonitoringExecutionStatus: jsii.String(\"monitoringExecutionStatus\"),\n\t\tmonitoringScheduleName: jsii.String(\"monitoringScheduleName\"),\n\t\tscheduledTime: jsii.String(\"scheduledTime\"),\n\n\t\t// the properties below are optional\n\t\tendpointName: jsii.String(\"endpointName\"),\n\t\tfailureReason: jsii.String(\"failureReason\"),\n\t\tprocessingJobArn: jsii.String(\"processingJobArn\"),\n\t},\n\tmonitoringScheduleStatus: jsii.String(\"monitoringScheduleStatus\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnMonitoringScheduleProps: sagemaker.CfnMonitoringScheduleProps = {\n  monitoringScheduleConfig: {\n    monitoringJobDefinition: {\n      monitoringAppSpecification: {\n        imageUri: 'imageUri',\n\n        // the properties below are optional\n        containerArguments: ['containerArguments'],\n        containerEntrypoint: ['containerEntrypoint'],\n        postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n        recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n      },\n      monitoringInputs: [{\n        endpointInput: {\n          endpointName: 'endpointName',\n          localPath: 'localPath',\n\n          // the properties below are optional\n          s3DataDistributionType: 's3DataDistributionType',\n          s3InputMode: 's3InputMode',\n        },\n      }],\n      monitoringOutputConfig: {\n        monitoringOutputs: [{\n          s3Output: {\n            localPath: 'localPath',\n            s3Uri: 's3Uri',\n\n            // the properties below are optional\n            s3UploadMode: 's3UploadMode',\n          },\n        }],\n\n        // the properties below are optional\n        kmsKeyId: 'kmsKeyId',\n      },\n      monitoringResources: {\n        clusterConfig: {\n          instanceCount: 123,\n          instanceType: 'instanceType',\n          volumeSizeInGb: 123,\n\n          // the properties below are optional\n          volumeKmsKeyId: 'volumeKmsKeyId',\n        },\n      },\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      baselineConfig: {\n        constraintsResource: {\n          s3Uri: 's3Uri',\n        },\n        statisticsResource: {\n          s3Uri: 's3Uri',\n        },\n      },\n      environment: {\n        environmentKey: 'environment',\n      },\n      networkConfig: {\n        enableInterContainerTrafficEncryption: false,\n        enableNetworkIsolation: false,\n        vpcConfig: {\n          securityGroupIds: ['securityGroupIds'],\n          subnets: ['subnets'],\n        },\n      },\n      stoppingCondition: {\n        maxRuntimeInSeconds: 123,\n      },\n    },\n    monitoringJobDefinitionName: 'monitoringJobDefinitionName',\n    monitoringType: 'monitoringType',\n    scheduleConfig: {\n      scheduleExpression: 'scheduleExpression',\n    },\n  },\n  monitoringScheduleName: 'monitoringScheduleName',\n\n  // the properties below are optional\n  endpointName: 'endpointName',\n  failureReason: 'failureReason',\n  lastMonitoringExecutionSummary: {\n    creationTime: 'creationTime',\n    lastModifiedTime: 'lastModifiedTime',\n    monitoringExecutionStatus: 'monitoringExecutionStatus',\n    monitoringScheduleName: 'monitoringScheduleName',\n    scheduledTime: 'scheduledTime',\n\n    // the properties below are optional\n    endpointName: 'endpointName',\n    failureReason: 'failureReason',\n    processingJobArn: 'processingJobArn',\n  },\n  monitoringScheduleStatus: 'monitoringScheduleStatus',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnMonitoringScheduleProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnMonitoringScheduleProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMonitoringScheduleProps: sagemaker.CfnMonitoringScheduleProps = {\n  monitoringScheduleConfig: {\n    monitoringJobDefinition: {\n      monitoringAppSpecification: {\n        imageUri: 'imageUri',\n\n        // the properties below are optional\n        containerArguments: ['containerArguments'],\n        containerEntrypoint: ['containerEntrypoint'],\n        postAnalyticsProcessorSourceUri: 'postAnalyticsProcessorSourceUri',\n        recordPreprocessorSourceUri: 'recordPreprocessorSourceUri',\n      },\n      monitoringInputs: [{\n        endpointInput: {\n          endpointName: 'endpointName',\n          localPath: 'localPath',\n\n          // the properties below are optional\n          s3DataDistributionType: 's3DataDistributionType',\n          s3InputMode: 's3InputMode',\n        },\n      }],\n      monitoringOutputConfig: {\n        monitoringOutputs: [{\n          s3Output: {\n            localPath: 'localPath',\n            s3Uri: 's3Uri',\n\n            // the properties below are optional\n            s3UploadMode: 's3UploadMode',\n          },\n        }],\n\n        // the properties below are optional\n        kmsKeyId: 'kmsKeyId',\n      },\n      monitoringResources: {\n        clusterConfig: {\n          instanceCount: 123,\n          instanceType: 'instanceType',\n          volumeSizeInGb: 123,\n\n          // the properties below are optional\n          volumeKmsKeyId: 'volumeKmsKeyId',\n        },\n      },\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      baselineConfig: {\n        constraintsResource: {\n          s3Uri: 's3Uri',\n        },\n        statisticsResource: {\n          s3Uri: 's3Uri',\n        },\n      },\n      environment: {\n        environmentKey: 'environment',\n      },\n      networkConfig: {\n        enableInterContainerTrafficEncryption: false,\n        enableNetworkIsolation: false,\n        vpcConfig: {\n          securityGroupIds: ['securityGroupIds'],\n          subnets: ['subnets'],\n        },\n      },\n      stoppingCondition: {\n        maxRuntimeInSeconds: 123,\n      },\n    },\n    monitoringJobDefinitionName: 'monitoringJobDefinitionName',\n    monitoringType: 'monitoringType',\n    scheduleConfig: {\n      scheduleExpression: 'scheduleExpression',\n    },\n  },\n  monitoringScheduleName: 'monitoringScheduleName',\n\n  // the properties below are optional\n  endpointName: 'endpointName',\n  failureReason: 'failureReason',\n  lastMonitoringExecutionSummary: {\n    creationTime: 'creationTime',\n    lastModifiedTime: 'lastModifiedTime',\n    monitoringExecutionStatus: 'monitoringExecutionStatus',\n    monitoringScheduleName: 'monitoringScheduleName',\n    scheduledTime: 'scheduledTime',\n\n    // the properties below are optional\n    endpointName: 'endpointName',\n    failureReason: 'failureReason',\n    processingJobArn: 'processingJobArn',\n  },\n  monitoringScheduleStatus: 'monitoringScheduleStatus',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 39,
        "75": 67,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 7,
        "193": 21,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 63,
        "290": 1
      },
      "fqnsFingerprint": "2bd6e76d4c875fa48b1b1fe413a46d3ecf8a96e0571e9ced97ed4e1809dd183e"
    },
    "f11fdb509675108a9bd238de9968220e0e014d4d2963738ddfb441e1d882b063": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_notebook_instance = sagemaker.CfnNotebookInstance(self, \"MyCfnNotebookInstance\",\n    instance_type=\"instanceType\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    accelerator_types=[\"acceleratorTypes\"],\n    additional_code_repositories=[\"additionalCodeRepositories\"],\n    default_code_repository=\"defaultCodeRepository\",\n    direct_internet_access=\"directInternetAccess\",\n    kms_key_id=\"kmsKeyId\",\n    lifecycle_config_name=\"lifecycleConfigName\",\n    notebook_instance_name=\"notebookInstanceName\",\n    platform_identifier=\"platformIdentifier\",\n    root_access=\"rootAccess\",\n    security_group_ids=[\"securityGroupIds\"],\n    subnet_id=\"subnetId\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    volume_size_in_gb=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnNotebookInstance cfnNotebookInstance = new CfnNotebookInstance(this, \"MyCfnNotebookInstance\", new CfnNotebookInstanceProps {\n    InstanceType = \"instanceType\",\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    AcceleratorTypes = new [] { \"acceleratorTypes\" },\n    AdditionalCodeRepositories = new [] { \"additionalCodeRepositories\" },\n    DefaultCodeRepository = \"defaultCodeRepository\",\n    DirectInternetAccess = \"directInternetAccess\",\n    KmsKeyId = \"kmsKeyId\",\n    LifecycleConfigName = \"lifecycleConfigName\",\n    NotebookInstanceName = \"notebookInstanceName\",\n    PlatformIdentifier = \"platformIdentifier\",\n    RootAccess = \"rootAccess\",\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    SubnetId = \"subnetId\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VolumeSizeInGb = 123\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnNotebookInstance cfnNotebookInstance = CfnNotebookInstance.Builder.create(this, \"MyCfnNotebookInstance\")\n        .instanceType(\"instanceType\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .acceleratorTypes(List.of(\"acceleratorTypes\"))\n        .additionalCodeRepositories(List.of(\"additionalCodeRepositories\"))\n        .defaultCodeRepository(\"defaultCodeRepository\")\n        .directInternetAccess(\"directInternetAccess\")\n        .kmsKeyId(\"kmsKeyId\")\n        .lifecycleConfigName(\"lifecycleConfigName\")\n        .notebookInstanceName(\"notebookInstanceName\")\n        .platformIdentifier(\"platformIdentifier\")\n        .rootAccess(\"rootAccess\")\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .subnetId(\"subnetId\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .volumeSizeInGb(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnNotebookInstance := sagemaker.NewCfnNotebookInstance(this, jsii.String(\"MyCfnNotebookInstance\"), &cfnNotebookInstanceProps{\n\tinstanceType: jsii.String(\"instanceType\"),\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tacceleratorTypes: []*string{\n\t\tjsii.String(\"acceleratorTypes\"),\n\t},\n\tadditionalCodeRepositories: []*string{\n\t\tjsii.String(\"additionalCodeRepositories\"),\n\t},\n\tdefaultCodeRepository: jsii.String(\"defaultCodeRepository\"),\n\tdirectInternetAccess: jsii.String(\"directInternetAccess\"),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\tlifecycleConfigName: jsii.String(\"lifecycleConfigName\"),\n\tnotebookInstanceName: jsii.String(\"notebookInstanceName\"),\n\tplatformIdentifier: jsii.String(\"platformIdentifier\"),\n\trootAccess: jsii.String(\"rootAccess\"),\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsubnetId: jsii.String(\"subnetId\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tvolumeSizeInGb: jsii.Number(123),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnNotebookInstance = new sagemaker.CfnNotebookInstance(this, 'MyCfnNotebookInstance', {\n  instanceType: 'instanceType',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  acceleratorTypes: ['acceleratorTypes'],\n  additionalCodeRepositories: ['additionalCodeRepositories'],\n  defaultCodeRepository: 'defaultCodeRepository',\n  directInternetAccess: 'directInternetAccess',\n  kmsKeyId: 'kmsKeyId',\n  lifecycleConfigName: 'lifecycleConfigName',\n  notebookInstanceName: 'notebookInstanceName',\n  platformIdentifier: 'platformIdentifier',\n  rootAccess: 'rootAccess',\n  securityGroupIds: ['securityGroupIds'],\n  subnetId: 'subnetId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  volumeSizeInGb: 123,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnNotebookInstance"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnNotebookInstance",
        "@aws-cdk/aws-sagemaker.CfnNotebookInstanceProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnNotebookInstance = new sagemaker.CfnNotebookInstance(this, 'MyCfnNotebookInstance', {\n  instanceType: 'instanceType',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  acceleratorTypes: ['acceleratorTypes'],\n  additionalCodeRepositories: ['additionalCodeRepositories'],\n  defaultCodeRepository: 'defaultCodeRepository',\n  directInternetAccess: 'directInternetAccess',\n  kmsKeyId: 'kmsKeyId',\n  lifecycleConfigName: 'lifecycleConfigName',\n  notebookInstanceName: 'notebookInstanceName',\n  platformIdentifier: 'platformIdentifier',\n  rootAccess: 'rootAccess',\n  securityGroupIds: ['securityGroupIds'],\n  subnetId: 'subnetId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  volumeSizeInGb: 123,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 17,
        "75": 21,
        "104": 1,
        "192": 4,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 17,
        "290": 1
      },
      "fqnsFingerprint": "aae95e424e6cbe713e3723f07eda411bee39b22304b4a9de64fafce07aef1818"
    },
    "386be29b7f330292629eaa640ca5266ab32a8b10a4e9f5993a939b78d481c3b0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_notebook_instance_lifecycle_config = sagemaker.CfnNotebookInstanceLifecycleConfig(self, \"MyCfnNotebookInstanceLifecycleConfig\",\n    notebook_instance_lifecycle_config_name=\"notebookInstanceLifecycleConfigName\",\n    on_create=[sagemaker.CfnNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleHookProperty(\n        content=\"content\"\n    )],\n    on_start=[sagemaker.CfnNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleHookProperty(\n        content=\"content\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnNotebookInstanceLifecycleConfig cfnNotebookInstanceLifecycleConfig = new CfnNotebookInstanceLifecycleConfig(this, \"MyCfnNotebookInstanceLifecycleConfig\", new CfnNotebookInstanceLifecycleConfigProps {\n    NotebookInstanceLifecycleConfigName = \"notebookInstanceLifecycleConfigName\",\n    OnCreate = new [] { new NotebookInstanceLifecycleHookProperty {\n        Content = \"content\"\n    } },\n    OnStart = new [] { new NotebookInstanceLifecycleHookProperty {\n        Content = \"content\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnNotebookInstanceLifecycleConfig cfnNotebookInstanceLifecycleConfig = CfnNotebookInstanceLifecycleConfig.Builder.create(this, \"MyCfnNotebookInstanceLifecycleConfig\")\n        .notebookInstanceLifecycleConfigName(\"notebookInstanceLifecycleConfigName\")\n        .onCreate(List.of(NotebookInstanceLifecycleHookProperty.builder()\n                .content(\"content\")\n                .build()))\n        .onStart(List.of(NotebookInstanceLifecycleHookProperty.builder()\n                .content(\"content\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnNotebookInstanceLifecycleConfig := sagemaker.NewCfnNotebookInstanceLifecycleConfig(this, jsii.String(\"MyCfnNotebookInstanceLifecycleConfig\"), &cfnNotebookInstanceLifecycleConfigProps{\n\tnotebookInstanceLifecycleConfigName: jsii.String(\"notebookInstanceLifecycleConfigName\"),\n\tonCreate: []interface{}{\n\t\t&notebookInstanceLifecycleHookProperty{\n\t\t\tcontent: jsii.String(\"content\"),\n\t\t},\n\t},\n\tonStart: []interface{}{\n\t\t&notebookInstanceLifecycleHookProperty{\n\t\t\tcontent: jsii.String(\"content\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnNotebookInstanceLifecycleConfig = new sagemaker.CfnNotebookInstanceLifecycleConfig(this, 'MyCfnNotebookInstanceLifecycleConfig', /* all optional props */ {\n  notebookInstanceLifecycleConfigName: 'notebookInstanceLifecycleConfigName',\n  onCreate: [{\n    content: 'content',\n  }],\n  onStart: [{\n    content: 'content',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnNotebookInstanceLifecycleConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnNotebookInstanceLifecycleConfig",
        "@aws-cdk/aws-sagemaker.CfnNotebookInstanceLifecycleConfigProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnNotebookInstanceLifecycleConfig = new sagemaker.CfnNotebookInstanceLifecycleConfig(this, 'MyCfnNotebookInstanceLifecycleConfig', /* all optional props */ {\n  notebookInstanceLifecycleConfigName: 'notebookInstanceLifecycleConfigName',\n  onCreate: [{\n    content: 'content',\n  }],\n  onStart: [{\n    content: 'content',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "104": 1,
        "192": 2,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "0432b9a8d2ee66c036464cb962d9ea653f2bc2e21431571a64f233ab8b79bc7f"
    },
    "7271f0c7f70d1685d68df030ae1a030b2eb20a79d6f35b21abf290f75ed5f99f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nnotebook_instance_lifecycle_hook_property = sagemaker.CfnNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleHookProperty(\n    content=\"content\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nNotebookInstanceLifecycleHookProperty notebookInstanceLifecycleHookProperty = new NotebookInstanceLifecycleHookProperty {\n    Content = \"content\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nNotebookInstanceLifecycleHookProperty notebookInstanceLifecycleHookProperty = NotebookInstanceLifecycleHookProperty.builder()\n        .content(\"content\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nnotebookInstanceLifecycleHookProperty := &notebookInstanceLifecycleHookProperty{\n\tcontent: jsii.String(\"content\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst notebookInstanceLifecycleHookProperty: sagemaker.CfnNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleHookProperty = {\n  content: 'content',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleHookProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleHookProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notebookInstanceLifecycleHookProperty: sagemaker.CfnNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleHookProperty = {\n  content: 'content',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "8a218d67604748308b8392f50cfcc71dd829332734091e2cfa1e7a7de98b59dd"
    },
    "67027f530e510dc03c3f4ebfaa8f70d580ed9428a367405f335c5b289a53166b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_notebook_instance_lifecycle_config_props = sagemaker.CfnNotebookInstanceLifecycleConfigProps(\n    notebook_instance_lifecycle_config_name=\"notebookInstanceLifecycleConfigName\",\n    on_create=[sagemaker.CfnNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleHookProperty(\n        content=\"content\"\n    )],\n    on_start=[sagemaker.CfnNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleHookProperty(\n        content=\"content\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnNotebookInstanceLifecycleConfigProps cfnNotebookInstanceLifecycleConfigProps = new CfnNotebookInstanceLifecycleConfigProps {\n    NotebookInstanceLifecycleConfigName = \"notebookInstanceLifecycleConfigName\",\n    OnCreate = new [] { new NotebookInstanceLifecycleHookProperty {\n        Content = \"content\"\n    } },\n    OnStart = new [] { new NotebookInstanceLifecycleHookProperty {\n        Content = \"content\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnNotebookInstanceLifecycleConfigProps cfnNotebookInstanceLifecycleConfigProps = CfnNotebookInstanceLifecycleConfigProps.builder()\n        .notebookInstanceLifecycleConfigName(\"notebookInstanceLifecycleConfigName\")\n        .onCreate(List.of(NotebookInstanceLifecycleHookProperty.builder()\n                .content(\"content\")\n                .build()))\n        .onStart(List.of(NotebookInstanceLifecycleHookProperty.builder()\n                .content(\"content\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnNotebookInstanceLifecycleConfigProps := &cfnNotebookInstanceLifecycleConfigProps{\n\tnotebookInstanceLifecycleConfigName: jsii.String(\"notebookInstanceLifecycleConfigName\"),\n\tonCreate: []interface{}{\n\t\t&notebookInstanceLifecycleHookProperty{\n\t\t\tcontent: jsii.String(\"content\"),\n\t\t},\n\t},\n\tonStart: []interface{}{\n\t\t&notebookInstanceLifecycleHookProperty{\n\t\t\tcontent: jsii.String(\"content\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnNotebookInstanceLifecycleConfigProps: sagemaker.CfnNotebookInstanceLifecycleConfigProps = {\n  notebookInstanceLifecycleConfigName: 'notebookInstanceLifecycleConfigName',\n  onCreate: [{\n    content: 'content',\n  }],\n  onStart: [{\n    content: 'content',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnNotebookInstanceLifecycleConfigProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnNotebookInstanceLifecycleConfigProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnNotebookInstanceLifecycleConfigProps: sagemaker.CfnNotebookInstanceLifecycleConfigProps = {\n  notebookInstanceLifecycleConfigName: 'notebookInstanceLifecycleConfigName',\n  onCreate: [{\n    content: 'content',\n  }],\n  onStart: [{\n    content: 'content',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "32b5c85e869cd48e0d90447f817e465b6f96080aabb33df12c2db83992c916d2"
    },
    "67cfa67e4363c4c77ecd927185f2dc9179ff778e8b67d375d5c4c481bdbfc2cd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_notebook_instance_props = sagemaker.CfnNotebookInstanceProps(\n    instance_type=\"instanceType\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    accelerator_types=[\"acceleratorTypes\"],\n    additional_code_repositories=[\"additionalCodeRepositories\"],\n    default_code_repository=\"defaultCodeRepository\",\n    direct_internet_access=\"directInternetAccess\",\n    kms_key_id=\"kmsKeyId\",\n    lifecycle_config_name=\"lifecycleConfigName\",\n    notebook_instance_name=\"notebookInstanceName\",\n    platform_identifier=\"platformIdentifier\",\n    root_access=\"rootAccess\",\n    security_group_ids=[\"securityGroupIds\"],\n    subnet_id=\"subnetId\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    volume_size_in_gb=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnNotebookInstanceProps cfnNotebookInstanceProps = new CfnNotebookInstanceProps {\n    InstanceType = \"instanceType\",\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    AcceleratorTypes = new [] { \"acceleratorTypes\" },\n    AdditionalCodeRepositories = new [] { \"additionalCodeRepositories\" },\n    DefaultCodeRepository = \"defaultCodeRepository\",\n    DirectInternetAccess = \"directInternetAccess\",\n    KmsKeyId = \"kmsKeyId\",\n    LifecycleConfigName = \"lifecycleConfigName\",\n    NotebookInstanceName = \"notebookInstanceName\",\n    PlatformIdentifier = \"platformIdentifier\",\n    RootAccess = \"rootAccess\",\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    SubnetId = \"subnetId\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VolumeSizeInGb = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnNotebookInstanceProps cfnNotebookInstanceProps = CfnNotebookInstanceProps.builder()\n        .instanceType(\"instanceType\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .acceleratorTypes(List.of(\"acceleratorTypes\"))\n        .additionalCodeRepositories(List.of(\"additionalCodeRepositories\"))\n        .defaultCodeRepository(\"defaultCodeRepository\")\n        .directInternetAccess(\"directInternetAccess\")\n        .kmsKeyId(\"kmsKeyId\")\n        .lifecycleConfigName(\"lifecycleConfigName\")\n        .notebookInstanceName(\"notebookInstanceName\")\n        .platformIdentifier(\"platformIdentifier\")\n        .rootAccess(\"rootAccess\")\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .subnetId(\"subnetId\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .volumeSizeInGb(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnNotebookInstanceProps := &cfnNotebookInstanceProps{\n\tinstanceType: jsii.String(\"instanceType\"),\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tacceleratorTypes: []*string{\n\t\tjsii.String(\"acceleratorTypes\"),\n\t},\n\tadditionalCodeRepositories: []*string{\n\t\tjsii.String(\"additionalCodeRepositories\"),\n\t},\n\tdefaultCodeRepository: jsii.String(\"defaultCodeRepository\"),\n\tdirectInternetAccess: jsii.String(\"directInternetAccess\"),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\tlifecycleConfigName: jsii.String(\"lifecycleConfigName\"),\n\tnotebookInstanceName: jsii.String(\"notebookInstanceName\"),\n\tplatformIdentifier: jsii.String(\"platformIdentifier\"),\n\trootAccess: jsii.String(\"rootAccess\"),\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsubnetId: jsii.String(\"subnetId\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tvolumeSizeInGb: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnNotebookInstanceProps: sagemaker.CfnNotebookInstanceProps = {\n  instanceType: 'instanceType',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  acceleratorTypes: ['acceleratorTypes'],\n  additionalCodeRepositories: ['additionalCodeRepositories'],\n  defaultCodeRepository: 'defaultCodeRepository',\n  directInternetAccess: 'directInternetAccess',\n  kmsKeyId: 'kmsKeyId',\n  lifecycleConfigName: 'lifecycleConfigName',\n  notebookInstanceName: 'notebookInstanceName',\n  platformIdentifier: 'platformIdentifier',\n  rootAccess: 'rootAccess',\n  securityGroupIds: ['securityGroupIds'],\n  subnetId: 'subnetId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  volumeSizeInGb: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnNotebookInstanceProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnNotebookInstanceProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnNotebookInstanceProps: sagemaker.CfnNotebookInstanceProps = {\n  instanceType: 'instanceType',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  acceleratorTypes: ['acceleratorTypes'],\n  additionalCodeRepositories: ['additionalCodeRepositories'],\n  defaultCodeRepository: 'defaultCodeRepository',\n  directInternetAccess: 'directInternetAccess',\n  kmsKeyId: 'kmsKeyId',\n  lifecycleConfigName: 'lifecycleConfigName',\n  notebookInstanceName: 'notebookInstanceName',\n  platformIdentifier: 'platformIdentifier',\n  rootAccess: 'rootAccess',\n  securityGroupIds: ['securityGroupIds'],\n  subnetId: 'subnetId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  volumeSizeInGb: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 16,
        "75": 21,
        "153": 1,
        "169": 1,
        "192": 4,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 17,
        "290": 1
      },
      "fqnsFingerprint": "bf143c88c6ce557407a16b047bdfb5bbd3b3f121e28abb9698390ae13c67bdc0"
    },
    "06faf32a91a03bc19531285e8e0a19c57d65d616ea450ab4a5d9a417be518438": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\n# parallelism_configuration: Any\n# pipeline_definition: Any\n\ncfn_pipeline = sagemaker.CfnPipeline(self, \"MyCfnPipeline\",\n    pipeline_definition=pipeline_definition,\n    pipeline_name=\"pipelineName\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    parallelism_configuration=parallelism_configuration,\n    pipeline_description=\"pipelineDescription\",\n    pipeline_display_name=\"pipelineDisplayName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nvar parallelismConfiguration;\nvar pipelineDefinition;\n\nCfnPipeline cfnPipeline = new CfnPipeline(this, \"MyCfnPipeline\", new CfnPipelineProps {\n    PipelineDefinition = pipelineDefinition,\n    PipelineName = \"pipelineName\",\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    ParallelismConfiguration = parallelismConfiguration,\n    PipelineDescription = \"pipelineDescription\",\n    PipelineDisplayName = \"pipelineDisplayName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nObject parallelismConfiguration;\nObject pipelineDefinition;\n\nCfnPipeline cfnPipeline = CfnPipeline.Builder.create(this, \"MyCfnPipeline\")\n        .pipelineDefinition(pipelineDefinition)\n        .pipelineName(\"pipelineName\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .parallelismConfiguration(parallelismConfiguration)\n        .pipelineDescription(\"pipelineDescription\")\n        .pipelineDisplayName(\"pipelineDisplayName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvar parallelismConfiguration interface{}\nvar pipelineDefinition interface{}\n\ncfnPipeline := sagemaker.NewCfnPipeline(this, jsii.String(\"MyCfnPipeline\"), &cfnPipelineProps{\n\tpipelineDefinition: pipelineDefinition,\n\tpipelineName: jsii.String(\"pipelineName\"),\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tparallelismConfiguration: parallelismConfiguration,\n\tpipelineDescription: jsii.String(\"pipelineDescription\"),\n\tpipelineDisplayName: jsii.String(\"pipelineDisplayName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const parallelismConfiguration: any;\ndeclare const pipelineDefinition: any;\nconst cfnPipeline = new sagemaker.CfnPipeline(this, 'MyCfnPipeline', {\n  pipelineDefinition: pipelineDefinition,\n  pipelineName: 'pipelineName',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  parallelismConfiguration: parallelismConfiguration,\n  pipelineDescription: 'pipelineDescription',\n  pipelineDisplayName: 'pipelineDisplayName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnPipeline"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnPipeline",
        "@aws-cdk/aws-sagemaker.CfnPipelineProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const parallelismConfiguration: any;\ndeclare const pipelineDefinition: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPipeline = new sagemaker.CfnPipeline(this, 'MyCfnPipeline', {\n  pipelineDefinition: pipelineDefinition,\n  pipelineName: 'pipelineName',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  parallelismConfiguration: parallelismConfiguration,\n  pipelineDescription: 'pipelineDescription',\n  pipelineDisplayName: 'pipelineDisplayName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 17,
        "104": 1,
        "125": 2,
        "130": 2,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "f2b0f7ef566353727cb0e41fddd4a1b7097574ab433ebc9f18d8647e87c52d9d"
    },
    "5a38cd644eb4bbed73ba9018c139ec19cf411777ca1463e4fefa65ee54fda947": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\n# parallelism_configuration: Any\n# pipeline_definition: Any\n\ncfn_pipeline_props = sagemaker.CfnPipelineProps(\n    pipeline_definition=pipeline_definition,\n    pipeline_name=\"pipelineName\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    parallelism_configuration=parallelism_configuration,\n    pipeline_description=\"pipelineDescription\",\n    pipeline_display_name=\"pipelineDisplayName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nvar parallelismConfiguration;\nvar pipelineDefinition;\n\nCfnPipelineProps cfnPipelineProps = new CfnPipelineProps {\n    PipelineDefinition = pipelineDefinition,\n    PipelineName = \"pipelineName\",\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    ParallelismConfiguration = parallelismConfiguration,\n    PipelineDescription = \"pipelineDescription\",\n    PipelineDisplayName = \"pipelineDisplayName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nObject parallelismConfiguration;\nObject pipelineDefinition;\n\nCfnPipelineProps cfnPipelineProps = CfnPipelineProps.builder()\n        .pipelineDefinition(pipelineDefinition)\n        .pipelineName(\"pipelineName\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .parallelismConfiguration(parallelismConfiguration)\n        .pipelineDescription(\"pipelineDescription\")\n        .pipelineDisplayName(\"pipelineDisplayName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvar parallelismConfiguration interface{}\nvar pipelineDefinition interface{}\n\ncfnPipelineProps := &cfnPipelineProps{\n\tpipelineDefinition: pipelineDefinition,\n\tpipelineName: jsii.String(\"pipelineName\"),\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tparallelismConfiguration: parallelismConfiguration,\n\tpipelineDescription: jsii.String(\"pipelineDescription\"),\n\tpipelineDisplayName: jsii.String(\"pipelineDisplayName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const parallelismConfiguration: any;\ndeclare const pipelineDefinition: any;\nconst cfnPipelineProps: sagemaker.CfnPipelineProps = {\n  pipelineDefinition: pipelineDefinition,\n  pipelineName: 'pipelineName',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  parallelismConfiguration: parallelismConfiguration,\n  pipelineDescription: 'pipelineDescription',\n  pipelineDisplayName: 'pipelineDisplayName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnPipelineProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnPipelineProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const parallelismConfiguration: any;\ndeclare const pipelineDefinition: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPipelineProps: sagemaker.CfnPipelineProps = {\n  pipelineDefinition: pipelineDefinition,\n  pipelineName: 'pipelineName',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  parallelismConfiguration: parallelismConfiguration,\n  pipelineDescription: 'pipelineDescription',\n  pipelineDisplayName: 'pipelineDisplayName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 17,
        "125": 2,
        "130": 2,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "160b991534b19e39286590be2fe3928e31504f1c249e224057b59daa9e3821de"
    },
    "0a5a569bda93303acf240831b252b88a1f42a08306e36a01495ae96a88973533": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\n# service_catalog_provisioning_details: Any\n\ncfn_project = sagemaker.CfnProject(self, \"MyCfnProject\",\n    project_name=\"projectName\",\n    service_catalog_provisioning_details=service_catalog_provisioning_details,\n\n    # the properties below are optional\n    project_description=\"projectDescription\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nvar serviceCatalogProvisioningDetails;\n\nCfnProject cfnProject = new CfnProject(this, \"MyCfnProject\", new CfnProjectProps {\n    ProjectName = \"projectName\",\n    ServiceCatalogProvisioningDetails = serviceCatalogProvisioningDetails,\n\n    // the properties below are optional\n    ProjectDescription = \"projectDescription\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nObject serviceCatalogProvisioningDetails;\n\nCfnProject cfnProject = CfnProject.Builder.create(this, \"MyCfnProject\")\n        .projectName(\"projectName\")\n        .serviceCatalogProvisioningDetails(serviceCatalogProvisioningDetails)\n\n        // the properties below are optional\n        .projectDescription(\"projectDescription\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvar serviceCatalogProvisioningDetails interface{}\n\ncfnProject := sagemaker.NewCfnProject(this, jsii.String(\"MyCfnProject\"), &cfnProjectProps{\n\tprojectName: jsii.String(\"projectName\"),\n\tserviceCatalogProvisioningDetails: serviceCatalogProvisioningDetails,\n\n\t// the properties below are optional\n\tprojectDescription: jsii.String(\"projectDescription\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const serviceCatalogProvisioningDetails: any;\nconst cfnProject = new sagemaker.CfnProject(this, 'MyCfnProject', {\n  projectName: 'projectName',\n  serviceCatalogProvisioningDetails: serviceCatalogProvisioningDetails,\n\n  // the properties below are optional\n  projectDescription: 'projectDescription',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnProject"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnProject",
        "@aws-cdk/aws-sagemaker.CfnProjectProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const serviceCatalogProvisioningDetails: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnProject = new sagemaker.CfnProject(this, 'MyCfnProject', {\n  projectName: 'projectName',\n  serviceCatalogProvisioningDetails: serviceCatalogProvisioningDetails,\n\n  // the properties below are optional\n  projectDescription: 'projectDescription',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 12,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "2b147a0e50be67c6c9955350ab832648bf2aeb5bd2c96f7771b94e40f95c0cc0"
    },
    "5b7ddf807e4ef5e5a5d3f4fc31386a695018269789614bc2f62a0f478774b7f9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\n# service_catalog_provisioning_details: Any\n\ncfn_project_props = sagemaker.CfnProjectProps(\n    project_name=\"projectName\",\n    service_catalog_provisioning_details=service_catalog_provisioning_details,\n\n    # the properties below are optional\n    project_description=\"projectDescription\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nvar serviceCatalogProvisioningDetails;\n\nCfnProjectProps cfnProjectProps = new CfnProjectProps {\n    ProjectName = \"projectName\",\n    ServiceCatalogProvisioningDetails = serviceCatalogProvisioningDetails,\n\n    // the properties below are optional\n    ProjectDescription = \"projectDescription\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nObject serviceCatalogProvisioningDetails;\n\nCfnProjectProps cfnProjectProps = CfnProjectProps.builder()\n        .projectName(\"projectName\")\n        .serviceCatalogProvisioningDetails(serviceCatalogProvisioningDetails)\n\n        // the properties below are optional\n        .projectDescription(\"projectDescription\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nvar serviceCatalogProvisioningDetails interface{}\n\ncfnProjectProps := &cfnProjectProps{\n\tprojectName: jsii.String(\"projectName\"),\n\tserviceCatalogProvisioningDetails: serviceCatalogProvisioningDetails,\n\n\t// the properties below are optional\n\tprojectDescription: jsii.String(\"projectDescription\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const serviceCatalogProvisioningDetails: any;\nconst cfnProjectProps: sagemaker.CfnProjectProps = {\n  projectName: 'projectName',\n  serviceCatalogProvisioningDetails: serviceCatalogProvisioningDetails,\n\n  // the properties below are optional\n  projectDescription: 'projectDescription',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnProjectProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnProjectProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n\ndeclare const serviceCatalogProvisioningDetails: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnProjectProps: sagemaker.CfnProjectProps = {\n  projectName: 'projectName',\n  serviceCatalogProvisioningDetails: serviceCatalogProvisioningDetails,\n\n  // the properties below are optional\n  projectDescription: 'projectDescription',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 12,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "fb770a4fb60cca73644552e48c0df72d5573b2cb702f857c39795ffcf10d15cf"
    },
    "36b94ac955ff22299f94a2df793f2f6955a89fb5385a06f8c63a1a1b5c1325a0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_user_profile = sagemaker.CfnUserProfile(self, \"MyCfnUserProfile\",\n    domain_id=\"domainId\",\n    user_profile_name=\"userProfileName\",\n\n    # the properties below are optional\n    single_sign_on_user_identifier=\"singleSignOnUserIdentifier\",\n    single_sign_on_user_value=\"singleSignOnUserValue\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    user_settings=sagemaker.CfnUserProfile.UserSettingsProperty(\n        execution_role=\"executionRole\",\n        jupyter_server_app_settings=sagemaker.CfnUserProfile.JupyterServerAppSettingsProperty(\n            default_resource_spec=sagemaker.CfnUserProfile.ResourceSpecProperty(\n                instance_type=\"instanceType\",\n                sage_maker_image_arn=\"sageMakerImageArn\",\n                sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n            )\n        ),\n        kernel_gateway_app_settings=sagemaker.CfnUserProfile.KernelGatewayAppSettingsProperty(\n            custom_images=[sagemaker.CfnUserProfile.CustomImageProperty(\n                app_image_config_name=\"appImageConfigName\",\n                image_name=\"imageName\",\n\n                # the properties below are optional\n                image_version_number=123\n            )],\n            default_resource_spec=sagemaker.CfnUserProfile.ResourceSpecProperty(\n                instance_type=\"instanceType\",\n                sage_maker_image_arn=\"sageMakerImageArn\",\n                sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n            )\n        ),\n        r_studio_server_pro_app_settings=sagemaker.CfnUserProfile.RStudioServerProAppSettingsProperty(\n            access_status=\"accessStatus\",\n            user_group=\"userGroup\"\n        ),\n        security_groups=[\"securityGroups\"],\n        sharing_settings=sagemaker.CfnUserProfile.SharingSettingsProperty(\n            notebook_output_option=\"notebookOutputOption\",\n            s3_kms_key_id=\"s3KmsKeyId\",\n            s3_output_path=\"s3OutputPath\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnUserProfile cfnUserProfile = new CfnUserProfile(this, \"MyCfnUserProfile\", new CfnUserProfileProps {\n    DomainId = \"domainId\",\n    UserProfileName = \"userProfileName\",\n\n    // the properties below are optional\n    SingleSignOnUserIdentifier = \"singleSignOnUserIdentifier\",\n    SingleSignOnUserValue = \"singleSignOnUserValue\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    UserSettings = new UserSettingsProperty {\n        ExecutionRole = \"executionRole\",\n        JupyterServerAppSettings = new JupyterServerAppSettingsProperty {\n            DefaultResourceSpec = new ResourceSpecProperty {\n                InstanceType = \"instanceType\",\n                SageMakerImageArn = \"sageMakerImageArn\",\n                SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n            }\n        },\n        KernelGatewayAppSettings = new KernelGatewayAppSettingsProperty {\n            CustomImages = new [] { new CustomImageProperty {\n                AppImageConfigName = \"appImageConfigName\",\n                ImageName = \"imageName\",\n\n                // the properties below are optional\n                ImageVersionNumber = 123\n            } },\n            DefaultResourceSpec = new ResourceSpecProperty {\n                InstanceType = \"instanceType\",\n                SageMakerImageArn = \"sageMakerImageArn\",\n                SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n            }\n        },\n        RStudioServerProAppSettings = new RStudioServerProAppSettingsProperty {\n            AccessStatus = \"accessStatus\",\n            UserGroup = \"userGroup\"\n        },\n        SecurityGroups = new [] { \"securityGroups\" },\n        SharingSettings = new SharingSettingsProperty {\n            NotebookOutputOption = \"notebookOutputOption\",\n            S3KmsKeyId = \"s3KmsKeyId\",\n            S3OutputPath = \"s3OutputPath\"\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnUserProfile cfnUserProfile = CfnUserProfile.Builder.create(this, \"MyCfnUserProfile\")\n        .domainId(\"domainId\")\n        .userProfileName(\"userProfileName\")\n\n        // the properties below are optional\n        .singleSignOnUserIdentifier(\"singleSignOnUserIdentifier\")\n        .singleSignOnUserValue(\"singleSignOnUserValue\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .userSettings(UserSettingsProperty.builder()\n                .executionRole(\"executionRole\")\n                .jupyterServerAppSettings(JupyterServerAppSettingsProperty.builder()\n                        .defaultResourceSpec(ResourceSpecProperty.builder()\n                                .instanceType(\"instanceType\")\n                                .sageMakerImageArn(\"sageMakerImageArn\")\n                                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                                .build())\n                        .build())\n                .kernelGatewayAppSettings(KernelGatewayAppSettingsProperty.builder()\n                        .customImages(List.of(CustomImageProperty.builder()\n                                .appImageConfigName(\"appImageConfigName\")\n                                .imageName(\"imageName\")\n\n                                // the properties below are optional\n                                .imageVersionNumber(123)\n                                .build()))\n                        .defaultResourceSpec(ResourceSpecProperty.builder()\n                                .instanceType(\"instanceType\")\n                                .sageMakerImageArn(\"sageMakerImageArn\")\n                                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                                .build())\n                        .build())\n                .rStudioServerProAppSettings(RStudioServerProAppSettingsProperty.builder()\n                        .accessStatus(\"accessStatus\")\n                        .userGroup(\"userGroup\")\n                        .build())\n                .securityGroups(List.of(\"securityGroups\"))\n                .sharingSettings(SharingSettingsProperty.builder()\n                        .notebookOutputOption(\"notebookOutputOption\")\n                        .s3KmsKeyId(\"s3KmsKeyId\")\n                        .s3OutputPath(\"s3OutputPath\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnUserProfile := sagemaker.NewCfnUserProfile(this, jsii.String(\"MyCfnUserProfile\"), &cfnUserProfileProps{\n\tdomainId: jsii.String(\"domainId\"),\n\tuserProfileName: jsii.String(\"userProfileName\"),\n\n\t// the properties below are optional\n\tsingleSignOnUserIdentifier: jsii.String(\"singleSignOnUserIdentifier\"),\n\tsingleSignOnUserValue: jsii.String(\"singleSignOnUserValue\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tuserSettings: &userSettingsProperty{\n\t\texecutionRole: jsii.String(\"executionRole\"),\n\t\tjupyterServerAppSettings: &jupyterServerAppSettingsProperty{\n\t\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t\t},\n\t\t},\n\t\tkernelGatewayAppSettings: &kernelGatewayAppSettingsProperty{\n\t\t\tcustomImages: []interface{}{\n\t\t\t\t&customImageProperty{\n\t\t\t\t\tappImageConfigName: jsii.String(\"appImageConfigName\"),\n\t\t\t\t\timageName: jsii.String(\"imageName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\timageVersionNumber: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t\t},\n\t\t},\n\t\trStudioServerProAppSettings: &rStudioServerProAppSettingsProperty{\n\t\t\taccessStatus: jsii.String(\"accessStatus\"),\n\t\t\tuserGroup: jsii.String(\"userGroup\"),\n\t\t},\n\t\tsecurityGroups: []*string{\n\t\t\tjsii.String(\"securityGroups\"),\n\t\t},\n\t\tsharingSettings: &sharingSettingsProperty{\n\t\t\tnotebookOutputOption: jsii.String(\"notebookOutputOption\"),\n\t\t\ts3KmsKeyId: jsii.String(\"s3KmsKeyId\"),\n\t\t\ts3OutputPath: jsii.String(\"s3OutputPath\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnUserProfile = new sagemaker.CfnUserProfile(this, 'MyCfnUserProfile', {\n  domainId: 'domainId',\n  userProfileName: 'userProfileName',\n\n  // the properties below are optional\n  singleSignOnUserIdentifier: 'singleSignOnUserIdentifier',\n  singleSignOnUserValue: 'singleSignOnUserValue',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  userSettings: {\n    executionRole: 'executionRole',\n    jupyterServerAppSettings: {\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    kernelGatewayAppSettings: {\n      customImages: [{\n        appImageConfigName: 'appImageConfigName',\n        imageName: 'imageName',\n\n        // the properties below are optional\n        imageVersionNumber: 123,\n      }],\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    rStudioServerProAppSettings: {\n      accessStatus: 'accessStatus',\n      userGroup: 'userGroup',\n    },\n    securityGroups: ['securityGroups'],\n    sharingSettings: {\n      notebookOutputOption: 'notebookOutputOption',\n      s3KmsKeyId: 's3KmsKeyId',\n      s3OutputPath: 's3OutputPath',\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnUserProfile"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnUserProfile",
        "@aws-cdk/aws-sagemaker.CfnUserProfileProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserProfile = new sagemaker.CfnUserProfile(this, 'MyCfnUserProfile', {\n  domainId: 'domainId',\n  userProfileName: 'userProfileName',\n\n  // the properties below are optional\n  singleSignOnUserIdentifier: 'singleSignOnUserIdentifier',\n  singleSignOnUserValue: 'singleSignOnUserValue',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  userSettings: {\n    executionRole: 'executionRole',\n    jupyterServerAppSettings: {\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    kernelGatewayAppSettings: {\n      customImages: [{\n        appImageConfigName: 'appImageConfigName',\n        imageName: 'imageName',\n\n        // the properties below are optional\n        imageVersionNumber: 123,\n      }],\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    rStudioServerProAppSettings: {\n      accessStatus: 'accessStatus',\n      userGroup: 'userGroup',\n    },\n    securityGroups: ['securityGroups'],\n    sharingSettings: {\n      notebookOutputOption: 'notebookOutputOption',\n      s3KmsKeyId: 's3KmsKeyId',\n      s3OutputPath: 's3OutputPath',\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 23,
        "75": 35,
        "104": 1,
        "192": 3,
        "193": 10,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 31,
        "290": 1
      },
      "fqnsFingerprint": "db9e606c7e18a96995f34482dd85913862f33123c9e3ae3acc7e90aa02303612"
    },
    "995eb48e2512191ea22e0f354d9c3b749878162ebec786a97af1ee4c0dd3fe8a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncustom_image_property = sagemaker.CfnUserProfile.CustomImageProperty(\n    app_image_config_name=\"appImageConfigName\",\n    image_name=\"imageName\",\n\n    # the properties below are optional\n    image_version_number=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCustomImageProperty customImageProperty = new CustomImageProperty {\n    AppImageConfigName = \"appImageConfigName\",\n    ImageName = \"imageName\",\n\n    // the properties below are optional\n    ImageVersionNumber = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCustomImageProperty customImageProperty = CustomImageProperty.builder()\n        .appImageConfigName(\"appImageConfigName\")\n        .imageName(\"imageName\")\n\n        // the properties below are optional\n        .imageVersionNumber(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncustomImageProperty := &customImageProperty{\n\tappImageConfigName: jsii.String(\"appImageConfigName\"),\n\timageName: jsii.String(\"imageName\"),\n\n\t// the properties below are optional\n\timageVersionNumber: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst customImageProperty: sagemaker.CfnUserProfile.CustomImageProperty = {\n  appImageConfigName: 'appImageConfigName',\n  imageName: 'imageName',\n\n  // the properties below are optional\n  imageVersionNumber: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnUserProfile.CustomImageProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnUserProfile.CustomImageProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customImageProperty: sagemaker.CfnUserProfile.CustomImageProperty = {\n  appImageConfigName: 'appImageConfigName',\n  imageName: 'imageName',\n\n  // the properties below are optional\n  imageVersionNumber: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "69e74650a2ce83c53c93b3f386d15e272fb6f201deb8c3c974ffb15a508ea583"
    },
    "7b351755cee18fe422a0df8656f4b77bc24219bfb888ac6235455519fd8b62f5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\njupyter_server_app_settings_property = sagemaker.CfnUserProfile.JupyterServerAppSettingsProperty(\n    default_resource_spec=sagemaker.CfnUserProfile.ResourceSpecProperty(\n        instance_type=\"instanceType\",\n        sage_maker_image_arn=\"sageMakerImageArn\",\n        sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nJupyterServerAppSettingsProperty jupyterServerAppSettingsProperty = new JupyterServerAppSettingsProperty {\n    DefaultResourceSpec = new ResourceSpecProperty {\n        InstanceType = \"instanceType\",\n        SageMakerImageArn = \"sageMakerImageArn\",\n        SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nJupyterServerAppSettingsProperty jupyterServerAppSettingsProperty = JupyterServerAppSettingsProperty.builder()\n        .defaultResourceSpec(ResourceSpecProperty.builder()\n                .instanceType(\"instanceType\")\n                .sageMakerImageArn(\"sageMakerImageArn\")\n                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\njupyterServerAppSettingsProperty := &jupyterServerAppSettingsProperty{\n\tdefaultResourceSpec: &resourceSpecProperty{\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst jupyterServerAppSettingsProperty: sagemaker.CfnUserProfile.JupyterServerAppSettingsProperty = {\n  defaultResourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnUserProfile.JupyterServerAppSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnUserProfile.JupyterServerAppSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jupyterServerAppSettingsProperty: sagemaker.CfnUserProfile.JupyterServerAppSettingsProperty = {\n  defaultResourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "c1891ba2bd123c5b2d8cf02e210f970f0dcb741b19e2558030daa06346a9ce5d"
    },
    "56b6e8ba27defa3a9acc35f2519866947c2a4447948cd997116f732a45d51ddc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nkernel_gateway_app_settings_property = sagemaker.CfnUserProfile.KernelGatewayAppSettingsProperty(\n    custom_images=[sagemaker.CfnUserProfile.CustomImageProperty(\n        app_image_config_name=\"appImageConfigName\",\n        image_name=\"imageName\",\n\n        # the properties below are optional\n        image_version_number=123\n    )],\n    default_resource_spec=sagemaker.CfnUserProfile.ResourceSpecProperty(\n        instance_type=\"instanceType\",\n        sage_maker_image_arn=\"sageMakerImageArn\",\n        sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nKernelGatewayAppSettingsProperty kernelGatewayAppSettingsProperty = new KernelGatewayAppSettingsProperty {\n    CustomImages = new [] { new CustomImageProperty {\n        AppImageConfigName = \"appImageConfigName\",\n        ImageName = \"imageName\",\n\n        // the properties below are optional\n        ImageVersionNumber = 123\n    } },\n    DefaultResourceSpec = new ResourceSpecProperty {\n        InstanceType = \"instanceType\",\n        SageMakerImageArn = \"sageMakerImageArn\",\n        SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nKernelGatewayAppSettingsProperty kernelGatewayAppSettingsProperty = KernelGatewayAppSettingsProperty.builder()\n        .customImages(List.of(CustomImageProperty.builder()\n                .appImageConfigName(\"appImageConfigName\")\n                .imageName(\"imageName\")\n\n                // the properties below are optional\n                .imageVersionNumber(123)\n                .build()))\n        .defaultResourceSpec(ResourceSpecProperty.builder()\n                .instanceType(\"instanceType\")\n                .sageMakerImageArn(\"sageMakerImageArn\")\n                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nkernelGatewayAppSettingsProperty := &kernelGatewayAppSettingsProperty{\n\tcustomImages: []interface{}{\n\t\t&customImageProperty{\n\t\t\tappImageConfigName: jsii.String(\"appImageConfigName\"),\n\t\t\timageName: jsii.String(\"imageName\"),\n\n\t\t\t// the properties below are optional\n\t\t\timageVersionNumber: jsii.Number(123),\n\t\t},\n\t},\n\tdefaultResourceSpec: &resourceSpecProperty{\n\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst kernelGatewayAppSettingsProperty: sagemaker.CfnUserProfile.KernelGatewayAppSettingsProperty = {\n  customImages: [{\n    appImageConfigName: 'appImageConfigName',\n    imageName: 'imageName',\n\n    // the properties below are optional\n    imageVersionNumber: 123,\n  }],\n  defaultResourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnUserProfile.KernelGatewayAppSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnUserProfile.KernelGatewayAppSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kernelGatewayAppSettingsProperty: sagemaker.CfnUserProfile.KernelGatewayAppSettingsProperty = {\n  customImages: [{\n    appImageConfigName: 'appImageConfigName',\n    imageName: 'imageName',\n\n    // the properties below are optional\n    imageVersionNumber: 123,\n  }],\n  defaultResourceSpec: {\n    instanceType: 'instanceType',\n    sageMakerImageArn: 'sageMakerImageArn',\n    sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 6,
        "75": 13,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "0f0b257f3366d4595d0af7b333639d08dc8dc86da1a561c74df7721b7532f286"
    },
    "1eaf9d7ce3e7796cd9e31b18470f2097793530a3188e909b15e7eba1f25c4e89": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nr_studio_server_pro_app_settings_property = sagemaker.CfnUserProfile.RStudioServerProAppSettingsProperty(\n    access_status=\"accessStatus\",\n    user_group=\"userGroup\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nRStudioServerProAppSettingsProperty rStudioServerProAppSettingsProperty = new RStudioServerProAppSettingsProperty {\n    AccessStatus = \"accessStatus\",\n    UserGroup = \"userGroup\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nRStudioServerProAppSettingsProperty rStudioServerProAppSettingsProperty = RStudioServerProAppSettingsProperty.builder()\n        .accessStatus(\"accessStatus\")\n        .userGroup(\"userGroup\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nrStudioServerProAppSettingsProperty := &rStudioServerProAppSettingsProperty{\n\taccessStatus: jsii.String(\"accessStatus\"),\n\tuserGroup: jsii.String(\"userGroup\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst rStudioServerProAppSettingsProperty: sagemaker.CfnUserProfile.RStudioServerProAppSettingsProperty = {\n  accessStatus: 'accessStatus',\n  userGroup: 'userGroup',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnUserProfile.RStudioServerProAppSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnUserProfile.RStudioServerProAppSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst rStudioServerProAppSettingsProperty: sagemaker.CfnUserProfile.RStudioServerProAppSettingsProperty = {\n  accessStatus: 'accessStatus',\n  userGroup: 'userGroup',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "ac7f8702a95a7eb1ffe930db4245f21392ae9674a4e02c8033d1035421c692ba"
    },
    "dbccc4f21f18c12b8e9549bae67aa9873e0d342c0d736c24d31151d85d022999": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nresource_spec_property = sagemaker.CfnUserProfile.ResourceSpecProperty(\n    instance_type=\"instanceType\",\n    sage_maker_image_arn=\"sageMakerImageArn\",\n    sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nResourceSpecProperty resourceSpecProperty = new ResourceSpecProperty {\n    InstanceType = \"instanceType\",\n    SageMakerImageArn = \"sageMakerImageArn\",\n    SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nResourceSpecProperty resourceSpecProperty = ResourceSpecProperty.builder()\n        .instanceType(\"instanceType\")\n        .sageMakerImageArn(\"sageMakerImageArn\")\n        .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nresourceSpecProperty := &resourceSpecProperty{\n\tinstanceType: jsii.String(\"instanceType\"),\n\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst resourceSpecProperty: sagemaker.CfnUserProfile.ResourceSpecProperty = {\n  instanceType: 'instanceType',\n  sageMakerImageArn: 'sageMakerImageArn',\n  sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnUserProfile.ResourceSpecProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnUserProfile.ResourceSpecProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst resourceSpecProperty: sagemaker.CfnUserProfile.ResourceSpecProperty = {\n  instanceType: 'instanceType',\n  sageMakerImageArn: 'sageMakerImageArn',\n  sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "82d55bbfd4bdc9d15eeaca84c9321af5901f595ddaab6c51ebe850ec55371d09"
    },
    "ee4513c264dceaa587dfec014dd05a1f64799a9a3ced17aa561f111f914afcc7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nsharing_settings_property = sagemaker.CfnUserProfile.SharingSettingsProperty(\n    notebook_output_option=\"notebookOutputOption\",\n    s3_kms_key_id=\"s3KmsKeyId\",\n    s3_output_path=\"s3OutputPath\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nSharingSettingsProperty sharingSettingsProperty = new SharingSettingsProperty {\n    NotebookOutputOption = \"notebookOutputOption\",\n    S3KmsKeyId = \"s3KmsKeyId\",\n    S3OutputPath = \"s3OutputPath\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nSharingSettingsProperty sharingSettingsProperty = SharingSettingsProperty.builder()\n        .notebookOutputOption(\"notebookOutputOption\")\n        .s3KmsKeyId(\"s3KmsKeyId\")\n        .s3OutputPath(\"s3OutputPath\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nsharingSettingsProperty := &sharingSettingsProperty{\n\tnotebookOutputOption: jsii.String(\"notebookOutputOption\"),\n\ts3KmsKeyId: jsii.String(\"s3KmsKeyId\"),\n\ts3OutputPath: jsii.String(\"s3OutputPath\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst sharingSettingsProperty: sagemaker.CfnUserProfile.SharingSettingsProperty = {\n  notebookOutputOption: 'notebookOutputOption',\n  s3KmsKeyId: 's3KmsKeyId',\n  s3OutputPath: 's3OutputPath',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnUserProfile.SharingSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnUserProfile.SharingSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sharingSettingsProperty: sagemaker.CfnUserProfile.SharingSettingsProperty = {\n  notebookOutputOption: 'notebookOutputOption',\n  s3KmsKeyId: 's3KmsKeyId',\n  s3OutputPath: 's3OutputPath',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "8fcfd2ed92a01a9ea4855197ebb6ac19883d0748ee99a0b0214b2f866e2de8ed"
    },
    "8b5c0d967e2109e81ae2c1d6a9cec8f8cd76633ac6a8babb25276b183633eff6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nuser_settings_property = sagemaker.CfnUserProfile.UserSettingsProperty(\n    execution_role=\"executionRole\",\n    jupyter_server_app_settings=sagemaker.CfnUserProfile.JupyterServerAppSettingsProperty(\n        default_resource_spec=sagemaker.CfnUserProfile.ResourceSpecProperty(\n            instance_type=\"instanceType\",\n            sage_maker_image_arn=\"sageMakerImageArn\",\n            sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n        )\n    ),\n    kernel_gateway_app_settings=sagemaker.CfnUserProfile.KernelGatewayAppSettingsProperty(\n        custom_images=[sagemaker.CfnUserProfile.CustomImageProperty(\n            app_image_config_name=\"appImageConfigName\",\n            image_name=\"imageName\",\n\n            # the properties below are optional\n            image_version_number=123\n        )],\n        default_resource_spec=sagemaker.CfnUserProfile.ResourceSpecProperty(\n            instance_type=\"instanceType\",\n            sage_maker_image_arn=\"sageMakerImageArn\",\n            sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n        )\n    ),\n    r_studio_server_pro_app_settings=sagemaker.CfnUserProfile.RStudioServerProAppSettingsProperty(\n        access_status=\"accessStatus\",\n        user_group=\"userGroup\"\n    ),\n    security_groups=[\"securityGroups\"],\n    sharing_settings=sagemaker.CfnUserProfile.SharingSettingsProperty(\n        notebook_output_option=\"notebookOutputOption\",\n        s3_kms_key_id=\"s3KmsKeyId\",\n        s3_output_path=\"s3OutputPath\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nUserSettingsProperty userSettingsProperty = new UserSettingsProperty {\n    ExecutionRole = \"executionRole\",\n    JupyterServerAppSettings = new JupyterServerAppSettingsProperty {\n        DefaultResourceSpec = new ResourceSpecProperty {\n            InstanceType = \"instanceType\",\n            SageMakerImageArn = \"sageMakerImageArn\",\n            SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n        }\n    },\n    KernelGatewayAppSettings = new KernelGatewayAppSettingsProperty {\n        CustomImages = new [] { new CustomImageProperty {\n            AppImageConfigName = \"appImageConfigName\",\n            ImageName = \"imageName\",\n\n            // the properties below are optional\n            ImageVersionNumber = 123\n        } },\n        DefaultResourceSpec = new ResourceSpecProperty {\n            InstanceType = \"instanceType\",\n            SageMakerImageArn = \"sageMakerImageArn\",\n            SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n        }\n    },\n    RStudioServerProAppSettings = new RStudioServerProAppSettingsProperty {\n        AccessStatus = \"accessStatus\",\n        UserGroup = \"userGroup\"\n    },\n    SecurityGroups = new [] { \"securityGroups\" },\n    SharingSettings = new SharingSettingsProperty {\n        NotebookOutputOption = \"notebookOutputOption\",\n        S3KmsKeyId = \"s3KmsKeyId\",\n        S3OutputPath = \"s3OutputPath\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nUserSettingsProperty userSettingsProperty = UserSettingsProperty.builder()\n        .executionRole(\"executionRole\")\n        .jupyterServerAppSettings(JupyterServerAppSettingsProperty.builder()\n                .defaultResourceSpec(ResourceSpecProperty.builder()\n                        .instanceType(\"instanceType\")\n                        .sageMakerImageArn(\"sageMakerImageArn\")\n                        .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                        .build())\n                .build())\n        .kernelGatewayAppSettings(KernelGatewayAppSettingsProperty.builder()\n                .customImages(List.of(CustomImageProperty.builder()\n                        .appImageConfigName(\"appImageConfigName\")\n                        .imageName(\"imageName\")\n\n                        // the properties below are optional\n                        .imageVersionNumber(123)\n                        .build()))\n                .defaultResourceSpec(ResourceSpecProperty.builder()\n                        .instanceType(\"instanceType\")\n                        .sageMakerImageArn(\"sageMakerImageArn\")\n                        .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                        .build())\n                .build())\n        .rStudioServerProAppSettings(RStudioServerProAppSettingsProperty.builder()\n                .accessStatus(\"accessStatus\")\n                .userGroup(\"userGroup\")\n                .build())\n        .securityGroups(List.of(\"securityGroups\"))\n        .sharingSettings(SharingSettingsProperty.builder()\n                .notebookOutputOption(\"notebookOutputOption\")\n                .s3KmsKeyId(\"s3KmsKeyId\")\n                .s3OutputPath(\"s3OutputPath\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nuserSettingsProperty := &userSettingsProperty{\n\texecutionRole: jsii.String(\"executionRole\"),\n\tjupyterServerAppSettings: &jupyterServerAppSettingsProperty{\n\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t},\n\t},\n\tkernelGatewayAppSettings: &kernelGatewayAppSettingsProperty{\n\t\tcustomImages: []interface{}{\n\t\t\t&customImageProperty{\n\t\t\t\tappImageConfigName: jsii.String(\"appImageConfigName\"),\n\t\t\t\timageName: jsii.String(\"imageName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\timageVersionNumber: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t},\n\t},\n\trStudioServerProAppSettings: &rStudioServerProAppSettingsProperty{\n\t\taccessStatus: jsii.String(\"accessStatus\"),\n\t\tuserGroup: jsii.String(\"userGroup\"),\n\t},\n\tsecurityGroups: []*string{\n\t\tjsii.String(\"securityGroups\"),\n\t},\n\tsharingSettings: &sharingSettingsProperty{\n\t\tnotebookOutputOption: jsii.String(\"notebookOutputOption\"),\n\t\ts3KmsKeyId: jsii.String(\"s3KmsKeyId\"),\n\t\ts3OutputPath: jsii.String(\"s3OutputPath\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst userSettingsProperty: sagemaker.CfnUserProfile.UserSettingsProperty = {\n  executionRole: 'executionRole',\n  jupyterServerAppSettings: {\n    defaultResourceSpec: {\n      instanceType: 'instanceType',\n      sageMakerImageArn: 'sageMakerImageArn',\n      sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n    },\n  },\n  kernelGatewayAppSettings: {\n    customImages: [{\n      appImageConfigName: 'appImageConfigName',\n      imageName: 'imageName',\n\n      // the properties below are optional\n      imageVersionNumber: 123,\n    }],\n    defaultResourceSpec: {\n      instanceType: 'instanceType',\n      sageMakerImageArn: 'sageMakerImageArn',\n      sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n    },\n  },\n  rStudioServerProAppSettings: {\n    accessStatus: 'accessStatus',\n    userGroup: 'userGroup',\n  },\n  securityGroups: ['securityGroups'],\n  sharingSettings: {\n    notebookOutputOption: 'notebookOutputOption',\n    s3KmsKeyId: 's3KmsKeyId',\n    s3OutputPath: 's3OutputPath',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnUserProfile.UserSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnUserProfile.UserSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userSettingsProperty: sagemaker.CfnUserProfile.UserSettingsProperty = {\n  executionRole: 'executionRole',\n  jupyterServerAppSettings: {\n    defaultResourceSpec: {\n      instanceType: 'instanceType',\n      sageMakerImageArn: 'sageMakerImageArn',\n      sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n    },\n  },\n  kernelGatewayAppSettings: {\n    customImages: [{\n      appImageConfigName: 'appImageConfigName',\n      imageName: 'imageName',\n\n      // the properties below are optional\n      imageVersionNumber: 123,\n    }],\n    defaultResourceSpec: {\n      instanceType: 'instanceType',\n      sageMakerImageArn: 'sageMakerImageArn',\n      sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n    },\n  },\n  rStudioServerProAppSettings: {\n    accessStatus: 'accessStatus',\n    userGroup: 'userGroup',\n  },\n  securityGroups: ['securityGroups'],\n  sharingSettings: {\n    notebookOutputOption: 'notebookOutputOption',\n    s3KmsKeyId: 's3KmsKeyId',\n    s3OutputPath: 's3OutputPath',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 16,
        "75": 28,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 8,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 23,
        "290": 1
      },
      "fqnsFingerprint": "6d02991aceda609542b12eb1a194a64d6e3583d2aa1ea0b1e359ac73ee237a6f"
    },
    "b5a8150267bed6591867bddb4b66599a3a7c1e5a3092950a3d7ca8fa92942848": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_user_profile_props = sagemaker.CfnUserProfileProps(\n    domain_id=\"domainId\",\n    user_profile_name=\"userProfileName\",\n\n    # the properties below are optional\n    single_sign_on_user_identifier=\"singleSignOnUserIdentifier\",\n    single_sign_on_user_value=\"singleSignOnUserValue\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    user_settings=sagemaker.CfnUserProfile.UserSettingsProperty(\n        execution_role=\"executionRole\",\n        jupyter_server_app_settings=sagemaker.CfnUserProfile.JupyterServerAppSettingsProperty(\n            default_resource_spec=sagemaker.CfnUserProfile.ResourceSpecProperty(\n                instance_type=\"instanceType\",\n                sage_maker_image_arn=\"sageMakerImageArn\",\n                sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n            )\n        ),\n        kernel_gateway_app_settings=sagemaker.CfnUserProfile.KernelGatewayAppSettingsProperty(\n            custom_images=[sagemaker.CfnUserProfile.CustomImageProperty(\n                app_image_config_name=\"appImageConfigName\",\n                image_name=\"imageName\",\n\n                # the properties below are optional\n                image_version_number=123\n            )],\n            default_resource_spec=sagemaker.CfnUserProfile.ResourceSpecProperty(\n                instance_type=\"instanceType\",\n                sage_maker_image_arn=\"sageMakerImageArn\",\n                sage_maker_image_version_arn=\"sageMakerImageVersionArn\"\n            )\n        ),\n        r_studio_server_pro_app_settings=sagemaker.CfnUserProfile.RStudioServerProAppSettingsProperty(\n            access_status=\"accessStatus\",\n            user_group=\"userGroup\"\n        ),\n        security_groups=[\"securityGroups\"],\n        sharing_settings=sagemaker.CfnUserProfile.SharingSettingsProperty(\n            notebook_output_option=\"notebookOutputOption\",\n            s3_kms_key_id=\"s3KmsKeyId\",\n            s3_output_path=\"s3OutputPath\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnUserProfileProps cfnUserProfileProps = new CfnUserProfileProps {\n    DomainId = \"domainId\",\n    UserProfileName = \"userProfileName\",\n\n    // the properties below are optional\n    SingleSignOnUserIdentifier = \"singleSignOnUserIdentifier\",\n    SingleSignOnUserValue = \"singleSignOnUserValue\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    UserSettings = new UserSettingsProperty {\n        ExecutionRole = \"executionRole\",\n        JupyterServerAppSettings = new JupyterServerAppSettingsProperty {\n            DefaultResourceSpec = new ResourceSpecProperty {\n                InstanceType = \"instanceType\",\n                SageMakerImageArn = \"sageMakerImageArn\",\n                SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n            }\n        },\n        KernelGatewayAppSettings = new KernelGatewayAppSettingsProperty {\n            CustomImages = new [] { new CustomImageProperty {\n                AppImageConfigName = \"appImageConfigName\",\n                ImageName = \"imageName\",\n\n                // the properties below are optional\n                ImageVersionNumber = 123\n            } },\n            DefaultResourceSpec = new ResourceSpecProperty {\n                InstanceType = \"instanceType\",\n                SageMakerImageArn = \"sageMakerImageArn\",\n                SageMakerImageVersionArn = \"sageMakerImageVersionArn\"\n            }\n        },\n        RStudioServerProAppSettings = new RStudioServerProAppSettingsProperty {\n            AccessStatus = \"accessStatus\",\n            UserGroup = \"userGroup\"\n        },\n        SecurityGroups = new [] { \"securityGroups\" },\n        SharingSettings = new SharingSettingsProperty {\n            NotebookOutputOption = \"notebookOutputOption\",\n            S3KmsKeyId = \"s3KmsKeyId\",\n            S3OutputPath = \"s3OutputPath\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnUserProfileProps cfnUserProfileProps = CfnUserProfileProps.builder()\n        .domainId(\"domainId\")\n        .userProfileName(\"userProfileName\")\n\n        // the properties below are optional\n        .singleSignOnUserIdentifier(\"singleSignOnUserIdentifier\")\n        .singleSignOnUserValue(\"singleSignOnUserValue\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .userSettings(UserSettingsProperty.builder()\n                .executionRole(\"executionRole\")\n                .jupyterServerAppSettings(JupyterServerAppSettingsProperty.builder()\n                        .defaultResourceSpec(ResourceSpecProperty.builder()\n                                .instanceType(\"instanceType\")\n                                .sageMakerImageArn(\"sageMakerImageArn\")\n                                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                                .build())\n                        .build())\n                .kernelGatewayAppSettings(KernelGatewayAppSettingsProperty.builder()\n                        .customImages(List.of(CustomImageProperty.builder()\n                                .appImageConfigName(\"appImageConfigName\")\n                                .imageName(\"imageName\")\n\n                                // the properties below are optional\n                                .imageVersionNumber(123)\n                                .build()))\n                        .defaultResourceSpec(ResourceSpecProperty.builder()\n                                .instanceType(\"instanceType\")\n                                .sageMakerImageArn(\"sageMakerImageArn\")\n                                .sageMakerImageVersionArn(\"sageMakerImageVersionArn\")\n                                .build())\n                        .build())\n                .rStudioServerProAppSettings(RStudioServerProAppSettingsProperty.builder()\n                        .accessStatus(\"accessStatus\")\n                        .userGroup(\"userGroup\")\n                        .build())\n                .securityGroups(List.of(\"securityGroups\"))\n                .sharingSettings(SharingSettingsProperty.builder()\n                        .notebookOutputOption(\"notebookOutputOption\")\n                        .s3KmsKeyId(\"s3KmsKeyId\")\n                        .s3OutputPath(\"s3OutputPath\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnUserProfileProps := &cfnUserProfileProps{\n\tdomainId: jsii.String(\"domainId\"),\n\tuserProfileName: jsii.String(\"userProfileName\"),\n\n\t// the properties below are optional\n\tsingleSignOnUserIdentifier: jsii.String(\"singleSignOnUserIdentifier\"),\n\tsingleSignOnUserValue: jsii.String(\"singleSignOnUserValue\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tuserSettings: &userSettingsProperty{\n\t\texecutionRole: jsii.String(\"executionRole\"),\n\t\tjupyterServerAppSettings: &jupyterServerAppSettingsProperty{\n\t\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t\t},\n\t\t},\n\t\tkernelGatewayAppSettings: &kernelGatewayAppSettingsProperty{\n\t\t\tcustomImages: []interface{}{\n\t\t\t\t&customImageProperty{\n\t\t\t\t\tappImageConfigName: jsii.String(\"appImageConfigName\"),\n\t\t\t\t\timageName: jsii.String(\"imageName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\timageVersionNumber: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefaultResourceSpec: &resourceSpecProperty{\n\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\tsageMakerImageArn: jsii.String(\"sageMakerImageArn\"),\n\t\t\t\tsageMakerImageVersionArn: jsii.String(\"sageMakerImageVersionArn\"),\n\t\t\t},\n\t\t},\n\t\trStudioServerProAppSettings: &rStudioServerProAppSettingsProperty{\n\t\t\taccessStatus: jsii.String(\"accessStatus\"),\n\t\t\tuserGroup: jsii.String(\"userGroup\"),\n\t\t},\n\t\tsecurityGroups: []*string{\n\t\t\tjsii.String(\"securityGroups\"),\n\t\t},\n\t\tsharingSettings: &sharingSettingsProperty{\n\t\t\tnotebookOutputOption: jsii.String(\"notebookOutputOption\"),\n\t\t\ts3KmsKeyId: jsii.String(\"s3KmsKeyId\"),\n\t\t\ts3OutputPath: jsii.String(\"s3OutputPath\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnUserProfileProps: sagemaker.CfnUserProfileProps = {\n  domainId: 'domainId',\n  userProfileName: 'userProfileName',\n\n  // the properties below are optional\n  singleSignOnUserIdentifier: 'singleSignOnUserIdentifier',\n  singleSignOnUserValue: 'singleSignOnUserValue',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  userSettings: {\n    executionRole: 'executionRole',\n    jupyterServerAppSettings: {\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    kernelGatewayAppSettings: {\n      customImages: [{\n        appImageConfigName: 'appImageConfigName',\n        imageName: 'imageName',\n\n        // the properties below are optional\n        imageVersionNumber: 123,\n      }],\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    rStudioServerProAppSettings: {\n      accessStatus: 'accessStatus',\n      userGroup: 'userGroup',\n    },\n    securityGroups: ['securityGroups'],\n    sharingSettings: {\n      notebookOutputOption: 'notebookOutputOption',\n      s3KmsKeyId: 's3KmsKeyId',\n      s3OutputPath: 's3OutputPath',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnUserProfileProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnUserProfileProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserProfileProps: sagemaker.CfnUserProfileProps = {\n  domainId: 'domainId',\n  userProfileName: 'userProfileName',\n\n  // the properties below are optional\n  singleSignOnUserIdentifier: 'singleSignOnUserIdentifier',\n  singleSignOnUserValue: 'singleSignOnUserValue',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  userSettings: {\n    executionRole: 'executionRole',\n    jupyterServerAppSettings: {\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    kernelGatewayAppSettings: {\n      customImages: [{\n        appImageConfigName: 'appImageConfigName',\n        imageName: 'imageName',\n\n        // the properties below are optional\n        imageVersionNumber: 123,\n      }],\n      defaultResourceSpec: {\n        instanceType: 'instanceType',\n        sageMakerImageArn: 'sageMakerImageArn',\n        sageMakerImageVersionArn: 'sageMakerImageVersionArn',\n      },\n    },\n    rStudioServerProAppSettings: {\n      accessStatus: 'accessStatus',\n      userGroup: 'userGroup',\n    },\n    securityGroups: ['securityGroups'],\n    sharingSettings: {\n      notebookOutputOption: 'notebookOutputOption',\n      s3KmsKeyId: 's3KmsKeyId',\n      s3OutputPath: 's3OutputPath',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 22,
        "75": 35,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 10,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 31,
        "290": 1
      },
      "fqnsFingerprint": "789960995ed3f6cc2272ced876a42ff0f303297115b6e74c9174553b6b190f23"
    },
    "814861a3bea7ac02f335d03ebb6a2bd3213bcca3463abac340cb5e547f2073f1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_workteam = sagemaker.CfnWorkteam(self, \"MyCfnWorkteam\",\n    description=\"description\",\n    member_definitions=[sagemaker.CfnWorkteam.MemberDefinitionProperty(\n        cognito_member_definition=sagemaker.CfnWorkteam.CognitoMemberDefinitionProperty(\n            cognito_client_id=\"cognitoClientId\",\n            cognito_user_group=\"cognitoUserGroup\",\n            cognito_user_pool=\"cognitoUserPool\"\n        )\n    )],\n    notification_configuration=sagemaker.CfnWorkteam.NotificationConfigurationProperty(\n        notification_topic_arn=\"notificationTopicArn\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    workteam_name=\"workteamName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnWorkteam cfnWorkteam = new CfnWorkteam(this, \"MyCfnWorkteam\", new CfnWorkteamProps {\n    Description = \"description\",\n    MemberDefinitions = new [] { new MemberDefinitionProperty {\n        CognitoMemberDefinition = new CognitoMemberDefinitionProperty {\n            CognitoClientId = \"cognitoClientId\",\n            CognitoUserGroup = \"cognitoUserGroup\",\n            CognitoUserPool = \"cognitoUserPool\"\n        }\n    } },\n    NotificationConfiguration = new NotificationConfigurationProperty {\n        NotificationTopicArn = \"notificationTopicArn\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    WorkteamName = \"workteamName\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnWorkteam cfnWorkteam = CfnWorkteam.Builder.create(this, \"MyCfnWorkteam\")\n        .description(\"description\")\n        .memberDefinitions(List.of(MemberDefinitionProperty.builder()\n                .cognitoMemberDefinition(CognitoMemberDefinitionProperty.builder()\n                        .cognitoClientId(\"cognitoClientId\")\n                        .cognitoUserGroup(\"cognitoUserGroup\")\n                        .cognitoUserPool(\"cognitoUserPool\")\n                        .build())\n                .build()))\n        .notificationConfiguration(NotificationConfigurationProperty.builder()\n                .notificationTopicArn(\"notificationTopicArn\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .workteamName(\"workteamName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnWorkteam := sagemaker.NewCfnWorkteam(this, jsii.String(\"MyCfnWorkteam\"), &cfnWorkteamProps{\n\tdescription: jsii.String(\"description\"),\n\tmemberDefinitions: []interface{}{\n\t\t&memberDefinitionProperty{\n\t\t\tcognitoMemberDefinition: &cognitoMemberDefinitionProperty{\n\t\t\t\tcognitoClientId: jsii.String(\"cognitoClientId\"),\n\t\t\t\tcognitoUserGroup: jsii.String(\"cognitoUserGroup\"),\n\t\t\t\tcognitoUserPool: jsii.String(\"cognitoUserPool\"),\n\t\t\t},\n\t\t},\n\t},\n\tnotificationConfiguration: &notificationConfigurationProperty{\n\t\tnotificationTopicArn: jsii.String(\"notificationTopicArn\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tworkteamName: jsii.String(\"workteamName\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnWorkteam = new sagemaker.CfnWorkteam(this, 'MyCfnWorkteam', /* all optional props */ {\n  description: 'description',\n  memberDefinitions: [{\n    cognitoMemberDefinition: {\n      cognitoClientId: 'cognitoClientId',\n      cognitoUserGroup: 'cognitoUserGroup',\n      cognitoUserPool: 'cognitoUserPool',\n    },\n  }],\n  notificationConfiguration: {\n    notificationTopicArn: 'notificationTopicArn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  workteamName: 'workteamName',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnWorkteam"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnWorkteam",
        "@aws-cdk/aws-sagemaker.CfnWorkteamProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnWorkteam = new sagemaker.CfnWorkteam(this, 'MyCfnWorkteam', /* all optional props */ {\n  description: 'description',\n  memberDefinitions: [{\n    cognitoMemberDefinition: {\n      cognitoClientId: 'cognitoClientId',\n      cognitoUserGroup: 'cognitoUserGroup',\n      cognitoUserPool: 'cognitoUserPool',\n    },\n  }],\n  notificationConfiguration: {\n    notificationTopicArn: 'notificationTopicArn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  workteamName: 'workteamName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 16,
        "104": 1,
        "192": 2,
        "193": 5,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "f7b80280d14a33ff8c35b8821a6eb7a163190be4cdb04eba56190a7fb335199e"
    },
    "71ca2b729d08b6c731328c9af165f9c59a4f360fda06eb4ec16508d317ea587b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncognito_member_definition_property = sagemaker.CfnWorkteam.CognitoMemberDefinitionProperty(\n    cognito_client_id=\"cognitoClientId\",\n    cognito_user_group=\"cognitoUserGroup\",\n    cognito_user_pool=\"cognitoUserPool\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCognitoMemberDefinitionProperty cognitoMemberDefinitionProperty = new CognitoMemberDefinitionProperty {\n    CognitoClientId = \"cognitoClientId\",\n    CognitoUserGroup = \"cognitoUserGroup\",\n    CognitoUserPool = \"cognitoUserPool\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCognitoMemberDefinitionProperty cognitoMemberDefinitionProperty = CognitoMemberDefinitionProperty.builder()\n        .cognitoClientId(\"cognitoClientId\")\n        .cognitoUserGroup(\"cognitoUserGroup\")\n        .cognitoUserPool(\"cognitoUserPool\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncognitoMemberDefinitionProperty := &cognitoMemberDefinitionProperty{\n\tcognitoClientId: jsii.String(\"cognitoClientId\"),\n\tcognitoUserGroup: jsii.String(\"cognitoUserGroup\"),\n\tcognitoUserPool: jsii.String(\"cognitoUserPool\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cognitoMemberDefinitionProperty: sagemaker.CfnWorkteam.CognitoMemberDefinitionProperty = {\n  cognitoClientId: 'cognitoClientId',\n  cognitoUserGroup: 'cognitoUserGroup',\n  cognitoUserPool: 'cognitoUserPool',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnWorkteam.CognitoMemberDefinitionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnWorkteam.CognitoMemberDefinitionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cognitoMemberDefinitionProperty: sagemaker.CfnWorkteam.CognitoMemberDefinitionProperty = {\n  cognitoClientId: 'cognitoClientId',\n  cognitoUserGroup: 'cognitoUserGroup',\n  cognitoUserPool: 'cognitoUserPool',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "45f52c9ca22bad1634035b5daa743fc8d70bfddea7411585a06633f9c17b43d7"
    },
    "097da4d83fc29cd087254780824fafab6edaf522dbc73db07a2a55d223a402e2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nmember_definition_property = sagemaker.CfnWorkteam.MemberDefinitionProperty(\n    cognito_member_definition=sagemaker.CfnWorkteam.CognitoMemberDefinitionProperty(\n        cognito_client_id=\"cognitoClientId\",\n        cognito_user_group=\"cognitoUserGroup\",\n        cognito_user_pool=\"cognitoUserPool\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nMemberDefinitionProperty memberDefinitionProperty = new MemberDefinitionProperty {\n    CognitoMemberDefinition = new CognitoMemberDefinitionProperty {\n        CognitoClientId = \"cognitoClientId\",\n        CognitoUserGroup = \"cognitoUserGroup\",\n        CognitoUserPool = \"cognitoUserPool\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nMemberDefinitionProperty memberDefinitionProperty = MemberDefinitionProperty.builder()\n        .cognitoMemberDefinition(CognitoMemberDefinitionProperty.builder()\n                .cognitoClientId(\"cognitoClientId\")\n                .cognitoUserGroup(\"cognitoUserGroup\")\n                .cognitoUserPool(\"cognitoUserPool\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nmemberDefinitionProperty := &memberDefinitionProperty{\n\tcognitoMemberDefinition: &cognitoMemberDefinitionProperty{\n\t\tcognitoClientId: jsii.String(\"cognitoClientId\"),\n\t\tcognitoUserGroup: jsii.String(\"cognitoUserGroup\"),\n\t\tcognitoUserPool: jsii.String(\"cognitoUserPool\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst memberDefinitionProperty: sagemaker.CfnWorkteam.MemberDefinitionProperty = {\n  cognitoMemberDefinition: {\n    cognitoClientId: 'cognitoClientId',\n    cognitoUserGroup: 'cognitoUserGroup',\n    cognitoUserPool: 'cognitoUserPool',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnWorkteam.MemberDefinitionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnWorkteam.MemberDefinitionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst memberDefinitionProperty: sagemaker.CfnWorkteam.MemberDefinitionProperty = {\n  cognitoMemberDefinition: {\n    cognitoClientId: 'cognitoClientId',\n    cognitoUserGroup: 'cognitoUserGroup',\n    cognitoUserPool: 'cognitoUserPool',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "f013b75ff75cb9ee712b09c9e5f0c48b81fd89efaf628f888cf7934a422418f0"
    },
    "274e3e999fa55351e868a56fab123bcb95f35d64404ffb673cc2285978f1bb38": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\nnotification_configuration_property = sagemaker.CfnWorkteam.NotificationConfigurationProperty(\n    notification_topic_arn=\"notificationTopicArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nNotificationConfigurationProperty notificationConfigurationProperty = new NotificationConfigurationProperty {\n    NotificationTopicArn = \"notificationTopicArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nNotificationConfigurationProperty notificationConfigurationProperty = NotificationConfigurationProperty.builder()\n        .notificationTopicArn(\"notificationTopicArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\nnotificationConfigurationProperty := &notificationConfigurationProperty{\n\tnotificationTopicArn: jsii.String(\"notificationTopicArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst notificationConfigurationProperty: sagemaker.CfnWorkteam.NotificationConfigurationProperty = {\n  notificationTopicArn: 'notificationTopicArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnWorkteam.NotificationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnWorkteam.NotificationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notificationConfigurationProperty: sagemaker.CfnWorkteam.NotificationConfigurationProperty = {\n  notificationTopicArn: 'notificationTopicArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "5b345960266c87d52d42d5d7cbb3bb2972f00bc738c661d542a7201b3e79213b"
    },
    "6a926faa05f52952b6c2073752bdf14ea97a8bb24f2a214efb67c93e538c8ed2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_sagemaker as sagemaker\n\ncfn_workteam_props = sagemaker.CfnWorkteamProps(\n    description=\"description\",\n    member_definitions=[sagemaker.CfnWorkteam.MemberDefinitionProperty(\n        cognito_member_definition=sagemaker.CfnWorkteam.CognitoMemberDefinitionProperty(\n            cognito_client_id=\"cognitoClientId\",\n            cognito_user_group=\"cognitoUserGroup\",\n            cognito_user_pool=\"cognitoUserPool\"\n        )\n    )],\n    notification_configuration=sagemaker.CfnWorkteam.NotificationConfigurationProperty(\n        notification_topic_arn=\"notificationTopicArn\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    workteam_name=\"workteamName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Sagemaker;\n\nCfnWorkteamProps cfnWorkteamProps = new CfnWorkteamProps {\n    Description = \"description\",\n    MemberDefinitions = new [] { new MemberDefinitionProperty {\n        CognitoMemberDefinition = new CognitoMemberDefinitionProperty {\n            CognitoClientId = \"cognitoClientId\",\n            CognitoUserGroup = \"cognitoUserGroup\",\n            CognitoUserPool = \"cognitoUserPool\"\n        }\n    } },\n    NotificationConfiguration = new NotificationConfigurationProperty {\n        NotificationTopicArn = \"notificationTopicArn\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    WorkteamName = \"workteamName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.sagemaker.*;\n\nCfnWorkteamProps cfnWorkteamProps = CfnWorkteamProps.builder()\n        .description(\"description\")\n        .memberDefinitions(List.of(MemberDefinitionProperty.builder()\n                .cognitoMemberDefinition(CognitoMemberDefinitionProperty.builder()\n                        .cognitoClientId(\"cognitoClientId\")\n                        .cognitoUserGroup(\"cognitoUserGroup\")\n                        .cognitoUserPool(\"cognitoUserPool\")\n                        .build())\n                .build()))\n        .notificationConfiguration(NotificationConfigurationProperty.builder()\n                .notificationTopicArn(\"notificationTopicArn\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .workteamName(\"workteamName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport sagemaker \"github.com/aws-samples/dummy/awscdkawssagemaker\"\n\ncfnWorkteamProps := &cfnWorkteamProps{\n\tdescription: jsii.String(\"description\"),\n\tmemberDefinitions: []interface{}{\n\t\t&memberDefinitionProperty{\n\t\t\tcognitoMemberDefinition: &cognitoMemberDefinitionProperty{\n\t\t\t\tcognitoClientId: jsii.String(\"cognitoClientId\"),\n\t\t\t\tcognitoUserGroup: jsii.String(\"cognitoUserGroup\"),\n\t\t\t\tcognitoUserPool: jsii.String(\"cognitoUserPool\"),\n\t\t\t},\n\t\t},\n\t},\n\tnotificationConfiguration: &notificationConfigurationProperty{\n\t\tnotificationTopicArn: jsii.String(\"notificationTopicArn\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tworkteamName: jsii.String(\"workteamName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\nconst cfnWorkteamProps: sagemaker.CfnWorkteamProps = {\n  description: 'description',\n  memberDefinitions: [{\n    cognitoMemberDefinition: {\n      cognitoClientId: 'cognitoClientId',\n      cognitoUserGroup: 'cognitoUserGroup',\n      cognitoUserPool: 'cognitoUserPool',\n    },\n  }],\n  notificationConfiguration: {\n    notificationTopicArn: 'notificationTopicArn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  workteamName: 'workteamName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sagemaker.CfnWorkteamProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sagemaker.CfnWorkteamProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sagemaker from '@aws-cdk/aws-sagemaker';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnWorkteamProps: sagemaker.CfnWorkteamProps = {\n  description: 'description',\n  memberDefinitions: [{\n    cognitoMemberDefinition: {\n      cognitoClientId: 'cognitoClientId',\n      cognitoUserGroup: 'cognitoUserGroup',\n      cognitoUserPool: 'cognitoUserPool',\n    },\n  }],\n  notificationConfiguration: {\n    notificationTopicArn: 'notificationTopicArn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  workteamName: 'workteamName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 16,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "1f584d6290b324b23446467fd5685941f13d6e188ca9ec18b3aa5438683efbe5"
    }
  }
}