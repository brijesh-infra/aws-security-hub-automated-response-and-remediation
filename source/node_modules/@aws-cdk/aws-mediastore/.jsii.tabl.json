{
  "version": "2",
  "toolVersion": "1.63.2",
  "snippets": {
    "7218b95db0c6a46f44f2eb44e2e5410c0b9d06747a8a5c247df22b7265065b2d": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_mediastore as mediastore",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.MediaStore;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.mediastore.*;",
          "version": "1"
        },
        "go": {
          "source": "import mediastore \"github.com/aws-samples/dummy/awscdkawsmediastore\"",
          "version": "1"
        },
        "$": {
          "source": "import * as mediastore from '@aws-cdk/aws-mediastore';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-mediastore"
        },
        "field": {
          "field": "markdown",
          "line": 18
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as mediastore from '@aws-cdk/aws-mediastore';",
      "syntaxKindCounter": {
        "10": 1,
        "75": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "4e22a9b0dfd5aefd28c6fe4e97538d81c56413c79e421434dbae53187e20b9ce": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_mediastore as mediastore\n\ncfn_container = mediastore.CfnContainer(self, \"MyCfnContainer\",\n    container_name=\"containerName\",\n\n    # the properties below are optional\n    access_logging_enabled=False,\n    cors_policy=[mediastore.CfnContainer.CorsRuleProperty(\n        allowed_headers=[\"allowedHeaders\"],\n        allowed_methods=[\"allowedMethods\"],\n        allowed_origins=[\"allowedOrigins\"],\n        expose_headers=[\"exposeHeaders\"],\n        max_age_seconds=123\n    )],\n    lifecycle_policy=\"lifecyclePolicy\",\n    metric_policy=mediastore.CfnContainer.MetricPolicyProperty(\n        container_level_metrics=\"containerLevelMetrics\",\n\n        # the properties below are optional\n        metric_policy_rules=[mediastore.CfnContainer.MetricPolicyRuleProperty(\n            object_group=\"objectGroup\",\n            object_group_name=\"objectGroupName\"\n        )]\n    ),\n    policy=\"policy\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MediaStore;\n\nCfnContainer cfnContainer = new CfnContainer(this, \"MyCfnContainer\", new CfnContainerProps {\n    ContainerName = \"containerName\",\n\n    // the properties below are optional\n    AccessLoggingEnabled = false,\n    CorsPolicy = new [] { new CorsRuleProperty {\n        AllowedHeaders = new [] { \"allowedHeaders\" },\n        AllowedMethods = new [] { \"allowedMethods\" },\n        AllowedOrigins = new [] { \"allowedOrigins\" },\n        ExposeHeaders = new [] { \"exposeHeaders\" },\n        MaxAgeSeconds = 123\n    } },\n    LifecyclePolicy = \"lifecyclePolicy\",\n    MetricPolicy = new MetricPolicyProperty {\n        ContainerLevelMetrics = \"containerLevelMetrics\",\n\n        // the properties below are optional\n        MetricPolicyRules = new [] { new MetricPolicyRuleProperty {\n            ObjectGroup = \"objectGroup\",\n            ObjectGroupName = \"objectGroupName\"\n        } }\n    },\n    Policy = \"policy\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.mediastore.*;\n\nCfnContainer cfnContainer = CfnContainer.Builder.create(this, \"MyCfnContainer\")\n        .containerName(\"containerName\")\n\n        // the properties below are optional\n        .accessLoggingEnabled(false)\n        .corsPolicy(List.of(CorsRuleProperty.builder()\n                .allowedHeaders(List.of(\"allowedHeaders\"))\n                .allowedMethods(List.of(\"allowedMethods\"))\n                .allowedOrigins(List.of(\"allowedOrigins\"))\n                .exposeHeaders(List.of(\"exposeHeaders\"))\n                .maxAgeSeconds(123)\n                .build()))\n        .lifecyclePolicy(\"lifecyclePolicy\")\n        .metricPolicy(MetricPolicyProperty.builder()\n                .containerLevelMetrics(\"containerLevelMetrics\")\n\n                // the properties below are optional\n                .metricPolicyRules(List.of(MetricPolicyRuleProperty.builder()\n                        .objectGroup(\"objectGroup\")\n                        .objectGroupName(\"objectGroupName\")\n                        .build()))\n                .build())\n        .policy(\"policy\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport mediastore \"github.com/aws-samples/dummy/awscdkawsmediastore\"\n\ncfnContainer := mediastore.NewCfnContainer(this, jsii.String(\"MyCfnContainer\"), &cfnContainerProps{\n\tcontainerName: jsii.String(\"containerName\"),\n\n\t// the properties below are optional\n\taccessLoggingEnabled: jsii.Boolean(false),\n\tcorsPolicy: []interface{}{\n\t\t&corsRuleProperty{\n\t\t\tallowedHeaders: []*string{\n\t\t\t\tjsii.String(\"allowedHeaders\"),\n\t\t\t},\n\t\t\tallowedMethods: []*string{\n\t\t\t\tjsii.String(\"allowedMethods\"),\n\t\t\t},\n\t\t\tallowedOrigins: []*string{\n\t\t\t\tjsii.String(\"allowedOrigins\"),\n\t\t\t},\n\t\t\texposeHeaders: []*string{\n\t\t\t\tjsii.String(\"exposeHeaders\"),\n\t\t\t},\n\t\t\tmaxAgeSeconds: jsii.Number(123),\n\t\t},\n\t},\n\tlifecyclePolicy: jsii.String(\"lifecyclePolicy\"),\n\tmetricPolicy: &metricPolicyProperty{\n\t\tcontainerLevelMetrics: jsii.String(\"containerLevelMetrics\"),\n\n\t\t// the properties below are optional\n\t\tmetricPolicyRules: []interface{}{\n\t\t\t&metricPolicyRuleProperty{\n\t\t\t\tobjectGroup: jsii.String(\"objectGroup\"),\n\t\t\t\tobjectGroupName: jsii.String(\"objectGroupName\"),\n\t\t\t},\n\t\t},\n\t},\n\tpolicy: jsii.String(\"policy\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as mediastore from '@aws-cdk/aws-mediastore';\nconst cfnContainer = new mediastore.CfnContainer(this, 'MyCfnContainer', {\n  containerName: 'containerName',\n\n  // the properties below are optional\n  accessLoggingEnabled: false,\n  corsPolicy: [{\n    allowedHeaders: ['allowedHeaders'],\n    allowedMethods: ['allowedMethods'],\n    allowedOrigins: ['allowedOrigins'],\n    exposeHeaders: ['exposeHeaders'],\n    maxAgeSeconds: 123,\n  }],\n  lifecyclePolicy: 'lifecyclePolicy',\n  metricPolicy: {\n    containerLevelMetrics: 'containerLevelMetrics',\n\n    // the properties below are optional\n    metricPolicyRules: [{\n      objectGroup: 'objectGroup',\n      objectGroupName: 'objectGroupName',\n    }],\n  },\n  policy: 'policy',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-mediastore.CfnContainer"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-mediastore.CfnContainer",
        "@aws-cdk/aws-mediastore.CfnContainerProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as mediastore from '@aws-cdk/aws-mediastore';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnContainer = new mediastore.CfnContainer(this, 'MyCfnContainer', {\n  containerName: 'containerName',\n\n  // the properties below are optional\n  accessLoggingEnabled: false,\n  corsPolicy: [{\n    allowedHeaders: ['allowedHeaders'],\n    allowedMethods: ['allowedMethods'],\n    allowedOrigins: ['allowedOrigins'],\n    exposeHeaders: ['exposeHeaders'],\n    maxAgeSeconds: 123,\n  }],\n  lifecyclePolicy: 'lifecyclePolicy',\n  metricPolicy: {\n    containerLevelMetrics: 'containerLevelMetrics',\n\n    // the properties below are optional\n    metricPolicyRules: [{\n      objectGroup: 'objectGroup',\n      objectGroupName: 'objectGroupName',\n    }],\n  },\n  policy: 'policy',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 14,
        "75": 22,
        "91": 1,
        "104": 1,
        "192": 7,
        "193": 5,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 18,
        "290": 1
      },
      "fqnsFingerprint": "1a681d5ef9b3ed433f2c55f7dbb7361c6807b8c1899b9b1a0c6c5cd9a42dcc7e"
    },
    "b3ba6991923a3fb773c6fcdc31b68da166378cf66709cac8d59c92149d5280f3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_mediastore as mediastore\n\ncors_rule_property = mediastore.CfnContainer.CorsRuleProperty(\n    allowed_headers=[\"allowedHeaders\"],\n    allowed_methods=[\"allowedMethods\"],\n    allowed_origins=[\"allowedOrigins\"],\n    expose_headers=[\"exposeHeaders\"],\n    max_age_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MediaStore;\n\nCorsRuleProperty corsRuleProperty = new CorsRuleProperty {\n    AllowedHeaders = new [] { \"allowedHeaders\" },\n    AllowedMethods = new [] { \"allowedMethods\" },\n    AllowedOrigins = new [] { \"allowedOrigins\" },\n    ExposeHeaders = new [] { \"exposeHeaders\" },\n    MaxAgeSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.mediastore.*;\n\nCorsRuleProperty corsRuleProperty = CorsRuleProperty.builder()\n        .allowedHeaders(List.of(\"allowedHeaders\"))\n        .allowedMethods(List.of(\"allowedMethods\"))\n        .allowedOrigins(List.of(\"allowedOrigins\"))\n        .exposeHeaders(List.of(\"exposeHeaders\"))\n        .maxAgeSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport mediastore \"github.com/aws-samples/dummy/awscdkawsmediastore\"\n\ncorsRuleProperty := &corsRuleProperty{\n\tallowedHeaders: []*string{\n\t\tjsii.String(\"allowedHeaders\"),\n\t},\n\tallowedMethods: []*string{\n\t\tjsii.String(\"allowedMethods\"),\n\t},\n\tallowedOrigins: []*string{\n\t\tjsii.String(\"allowedOrigins\"),\n\t},\n\texposeHeaders: []*string{\n\t\tjsii.String(\"exposeHeaders\"),\n\t},\n\tmaxAgeSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as mediastore from '@aws-cdk/aws-mediastore';\nconst corsRuleProperty: mediastore.CfnContainer.CorsRuleProperty = {\n  allowedHeaders: ['allowedHeaders'],\n  allowedMethods: ['allowedMethods'],\n  allowedOrigins: ['allowedOrigins'],\n  exposeHeaders: ['exposeHeaders'],\n  maxAgeSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-mediastore.CfnContainer.CorsRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-mediastore.CfnContainer.CorsRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as mediastore from '@aws-cdk/aws-mediastore';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst corsRuleProperty: mediastore.CfnContainer.CorsRuleProperty = {\n  allowedHeaders: ['allowedHeaders'],\n  allowedMethods: ['allowedMethods'],\n  allowedOrigins: ['allowedOrigins'],\n  exposeHeaders: ['exposeHeaders'],\n  maxAgeSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 10,
        "153": 2,
        "169": 1,
        "192": 4,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "f1278d1dbe4d2210d0f74cef2bc7c9c38d9980c6bfdbb3a056adb57b7c0a2f01"
    },
    "f22f9496eb48147e1930126d7e26a46d3b8e7292ae2ac9e7976bd217afd153fc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_mediastore as mediastore\n\nmetric_policy_property = mediastore.CfnContainer.MetricPolicyProperty(\n    container_level_metrics=\"containerLevelMetrics\",\n\n    # the properties below are optional\n    metric_policy_rules=[mediastore.CfnContainer.MetricPolicyRuleProperty(\n        object_group=\"objectGroup\",\n        object_group_name=\"objectGroupName\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MediaStore;\n\nMetricPolicyProperty metricPolicyProperty = new MetricPolicyProperty {\n    ContainerLevelMetrics = \"containerLevelMetrics\",\n\n    // the properties below are optional\n    MetricPolicyRules = new [] { new MetricPolicyRuleProperty {\n        ObjectGroup = \"objectGroup\",\n        ObjectGroupName = \"objectGroupName\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.mediastore.*;\n\nMetricPolicyProperty metricPolicyProperty = MetricPolicyProperty.builder()\n        .containerLevelMetrics(\"containerLevelMetrics\")\n\n        // the properties below are optional\n        .metricPolicyRules(List.of(MetricPolicyRuleProperty.builder()\n                .objectGroup(\"objectGroup\")\n                .objectGroupName(\"objectGroupName\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport mediastore \"github.com/aws-samples/dummy/awscdkawsmediastore\"\n\nmetricPolicyProperty := &metricPolicyProperty{\n\tcontainerLevelMetrics: jsii.String(\"containerLevelMetrics\"),\n\n\t// the properties below are optional\n\tmetricPolicyRules: []interface{}{\n\t\t&metricPolicyRuleProperty{\n\t\t\tobjectGroup: jsii.String(\"objectGroup\"),\n\t\t\tobjectGroupName: jsii.String(\"objectGroupName\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as mediastore from '@aws-cdk/aws-mediastore';\nconst metricPolicyProperty: mediastore.CfnContainer.MetricPolicyProperty = {\n  containerLevelMetrics: 'containerLevelMetrics',\n\n  // the properties below are optional\n  metricPolicyRules: [{\n    objectGroup: 'objectGroup',\n    objectGroupName: 'objectGroupName',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-mediastore.CfnContainer.MetricPolicyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-mediastore.CfnContainer.MetricPolicyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as mediastore from '@aws-cdk/aws-mediastore';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricPolicyProperty: mediastore.CfnContainer.MetricPolicyProperty = {\n  containerLevelMetrics: 'containerLevelMetrics',\n\n  // the properties below are optional\n  metricPolicyRules: [{\n    objectGroup: 'objectGroup',\n    objectGroupName: 'objectGroupName',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "a8b3d1604b2a8423be6bb74814f86025bbb9ecbc49b48b99e422f115b36eed2c"
    },
    "5e6153c0b4edc373bb5df62b87985b262764d19b73327c1cad24418981dca8d1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_mediastore as mediastore\n\nmetric_policy_rule_property = mediastore.CfnContainer.MetricPolicyRuleProperty(\n    object_group=\"objectGroup\",\n    object_group_name=\"objectGroupName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MediaStore;\n\nMetricPolicyRuleProperty metricPolicyRuleProperty = new MetricPolicyRuleProperty {\n    ObjectGroup = \"objectGroup\",\n    ObjectGroupName = \"objectGroupName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.mediastore.*;\n\nMetricPolicyRuleProperty metricPolicyRuleProperty = MetricPolicyRuleProperty.builder()\n        .objectGroup(\"objectGroup\")\n        .objectGroupName(\"objectGroupName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport mediastore \"github.com/aws-samples/dummy/awscdkawsmediastore\"\n\nmetricPolicyRuleProperty := &metricPolicyRuleProperty{\n\tobjectGroup: jsii.String(\"objectGroup\"),\n\tobjectGroupName: jsii.String(\"objectGroupName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as mediastore from '@aws-cdk/aws-mediastore';\nconst metricPolicyRuleProperty: mediastore.CfnContainer.MetricPolicyRuleProperty = {\n  objectGroup: 'objectGroup',\n  objectGroupName: 'objectGroupName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-mediastore.CfnContainer.MetricPolicyRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-mediastore.CfnContainer.MetricPolicyRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as mediastore from '@aws-cdk/aws-mediastore';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricPolicyRuleProperty: mediastore.CfnContainer.MetricPolicyRuleProperty = {\n  objectGroup: 'objectGroup',\n  objectGroupName: 'objectGroupName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "658b06ef855f8c7c43405a9b8571e7a14857930a27d7009b9e64e40cc98ab086"
    },
    "3a9baf5568c86e2fff44991172354f2b62dd334783b96c1a699e06524ce78c27": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_mediastore as mediastore\n\ncfn_container_props = mediastore.CfnContainerProps(\n    container_name=\"containerName\",\n\n    # the properties below are optional\n    access_logging_enabled=False,\n    cors_policy=[mediastore.CfnContainer.CorsRuleProperty(\n        allowed_headers=[\"allowedHeaders\"],\n        allowed_methods=[\"allowedMethods\"],\n        allowed_origins=[\"allowedOrigins\"],\n        expose_headers=[\"exposeHeaders\"],\n        max_age_seconds=123\n    )],\n    lifecycle_policy=\"lifecyclePolicy\",\n    metric_policy=mediastore.CfnContainer.MetricPolicyProperty(\n        container_level_metrics=\"containerLevelMetrics\",\n\n        # the properties below are optional\n        metric_policy_rules=[mediastore.CfnContainer.MetricPolicyRuleProperty(\n            object_group=\"objectGroup\",\n            object_group_name=\"objectGroupName\"\n        )]\n    ),\n    policy=\"policy\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.MediaStore;\n\nCfnContainerProps cfnContainerProps = new CfnContainerProps {\n    ContainerName = \"containerName\",\n\n    // the properties below are optional\n    AccessLoggingEnabled = false,\n    CorsPolicy = new [] { new CorsRuleProperty {\n        AllowedHeaders = new [] { \"allowedHeaders\" },\n        AllowedMethods = new [] { \"allowedMethods\" },\n        AllowedOrigins = new [] { \"allowedOrigins\" },\n        ExposeHeaders = new [] { \"exposeHeaders\" },\n        MaxAgeSeconds = 123\n    } },\n    LifecyclePolicy = \"lifecyclePolicy\",\n    MetricPolicy = new MetricPolicyProperty {\n        ContainerLevelMetrics = \"containerLevelMetrics\",\n\n        // the properties below are optional\n        MetricPolicyRules = new [] { new MetricPolicyRuleProperty {\n            ObjectGroup = \"objectGroup\",\n            ObjectGroupName = \"objectGroupName\"\n        } }\n    },\n    Policy = \"policy\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.mediastore.*;\n\nCfnContainerProps cfnContainerProps = CfnContainerProps.builder()\n        .containerName(\"containerName\")\n\n        // the properties below are optional\n        .accessLoggingEnabled(false)\n        .corsPolicy(List.of(CorsRuleProperty.builder()\n                .allowedHeaders(List.of(\"allowedHeaders\"))\n                .allowedMethods(List.of(\"allowedMethods\"))\n                .allowedOrigins(List.of(\"allowedOrigins\"))\n                .exposeHeaders(List.of(\"exposeHeaders\"))\n                .maxAgeSeconds(123)\n                .build()))\n        .lifecyclePolicy(\"lifecyclePolicy\")\n        .metricPolicy(MetricPolicyProperty.builder()\n                .containerLevelMetrics(\"containerLevelMetrics\")\n\n                // the properties below are optional\n                .metricPolicyRules(List.of(MetricPolicyRuleProperty.builder()\n                        .objectGroup(\"objectGroup\")\n                        .objectGroupName(\"objectGroupName\")\n                        .build()))\n                .build())\n        .policy(\"policy\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport mediastore \"github.com/aws-samples/dummy/awscdkawsmediastore\"\n\ncfnContainerProps := &cfnContainerProps{\n\tcontainerName: jsii.String(\"containerName\"),\n\n\t// the properties below are optional\n\taccessLoggingEnabled: jsii.Boolean(false),\n\tcorsPolicy: []interface{}{\n\t\t&corsRuleProperty{\n\t\t\tallowedHeaders: []*string{\n\t\t\t\tjsii.String(\"allowedHeaders\"),\n\t\t\t},\n\t\t\tallowedMethods: []*string{\n\t\t\t\tjsii.String(\"allowedMethods\"),\n\t\t\t},\n\t\t\tallowedOrigins: []*string{\n\t\t\t\tjsii.String(\"allowedOrigins\"),\n\t\t\t},\n\t\t\texposeHeaders: []*string{\n\t\t\t\tjsii.String(\"exposeHeaders\"),\n\t\t\t},\n\t\t\tmaxAgeSeconds: jsii.Number(123),\n\t\t},\n\t},\n\tlifecyclePolicy: jsii.String(\"lifecyclePolicy\"),\n\tmetricPolicy: &metricPolicyProperty{\n\t\tcontainerLevelMetrics: jsii.String(\"containerLevelMetrics\"),\n\n\t\t// the properties below are optional\n\t\tmetricPolicyRules: []interface{}{\n\t\t\t&metricPolicyRuleProperty{\n\t\t\t\tobjectGroup: jsii.String(\"objectGroup\"),\n\t\t\t\tobjectGroupName: jsii.String(\"objectGroupName\"),\n\t\t\t},\n\t\t},\n\t},\n\tpolicy: jsii.String(\"policy\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as mediastore from '@aws-cdk/aws-mediastore';\nconst cfnContainerProps: mediastore.CfnContainerProps = {\n  containerName: 'containerName',\n\n  // the properties below are optional\n  accessLoggingEnabled: false,\n  corsPolicy: [{\n    allowedHeaders: ['allowedHeaders'],\n    allowedMethods: ['allowedMethods'],\n    allowedOrigins: ['allowedOrigins'],\n    exposeHeaders: ['exposeHeaders'],\n    maxAgeSeconds: 123,\n  }],\n  lifecyclePolicy: 'lifecyclePolicy',\n  metricPolicy: {\n    containerLevelMetrics: 'containerLevelMetrics',\n\n    // the properties below are optional\n    metricPolicyRules: [{\n      objectGroup: 'objectGroup',\n      objectGroupName: 'objectGroupName',\n    }],\n  },\n  policy: 'policy',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-mediastore.CfnContainerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-mediastore.CfnContainerProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as mediastore from '@aws-cdk/aws-mediastore';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnContainerProps: mediastore.CfnContainerProps = {\n  containerName: 'containerName',\n\n  // the properties below are optional\n  accessLoggingEnabled: false,\n  corsPolicy: [{\n    allowedHeaders: ['allowedHeaders'],\n    allowedMethods: ['allowedMethods'],\n    allowedOrigins: ['allowedOrigins'],\n    exposeHeaders: ['exposeHeaders'],\n    maxAgeSeconds: 123,\n  }],\n  lifecyclePolicy: 'lifecyclePolicy',\n  metricPolicy: {\n    containerLevelMetrics: 'containerLevelMetrics',\n\n    // the properties below are optional\n    metricPolicyRules: [{\n      objectGroup: 'objectGroup',\n      objectGroupName: 'objectGroupName',\n    }],\n  },\n  policy: 'policy',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 13,
        "75": 22,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 7,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 18,
        "290": 1
      },
      "fqnsFingerprint": "fae21fc2b4e8990474d6edf01c7a0b0899f5087b69cce438c13750a4c4df0808"
    }
  }
}