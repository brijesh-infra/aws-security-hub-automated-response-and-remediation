function _aws_cdk_aws_redshift_NodeType(p) {
}
function _aws_cdk_aws_redshift_ClusterType(p) {
}
function _aws_cdk_aws_redshift_Login(p) {
}
function _aws_cdk_aws_redshift_RotationMultiUserOptions(p) {
}
function _aws_cdk_aws_redshift_ICluster(p) {
}
function _aws_cdk_aws_redshift_ClusterAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_redshift_ClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.masterUser))
            _aws_cdk_aws_redshift_Login(p.masterUser);
        if (!visitedObjects.has(p.clusterType))
            _aws_cdk_aws_redshift_ClusterType(p.clusterType);
        if (!visitedObjects.has(p.nodeType))
            _aws_cdk_aws_redshift_NodeType(p.nodeType);
        if (!visitedObjects.has(p.parameterGroup))
            _aws_cdk_aws_redshift_IClusterParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.roles))
            require("@aws-cdk/aws-iam/.warnings.jsii.js")._aws_cdk_aws_iam_IRole(p.roles);
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
        if (!visitedObjects.has(p.subnetGroup))
            _aws_cdk_aws_redshift_IClusterSubnetGroup(p.subnetGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_redshift_Cluster(p) {
}
function _aws_cdk_aws_redshift_IClusterParameterGroup(p) {
}
function _aws_cdk_aws_redshift_ClusterParameterGroupProps(p) {
}
function _aws_cdk_aws_redshift_ClusterParameterGroup(p) {
}
function _aws_cdk_aws_redshift_DatabaseOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            _aws_cdk_aws_redshift_ICluster(p.cluster);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_redshift_DatabaseSecretProps(p) {
}
function _aws_cdk_aws_redshift_DatabaseSecret(p) {
}
function _aws_cdk_aws_redshift_Endpoint(p) {
}
function _aws_cdk_aws_redshift_IClusterSubnetGroup(p) {
}
function _aws_cdk_aws_redshift_ClusterSubnetGroupProps(p) {
}
function _aws_cdk_aws_redshift_ClusterSubnetGroup(p) {
}
function _aws_cdk_aws_redshift_TableAction(p) {
}
function _aws_cdk_aws_redshift_Column(p) {
}
function _aws_cdk_aws_redshift_TableProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tableColumns))
            _aws_cdk_aws_redshift_Column(p.tableColumns);
        if (!visitedObjects.has(p.distStyle))
            _aws_cdk_aws_redshift_TableDistStyle(p.distStyle);
        if (!visitedObjects.has(p.sortStyle))
            _aws_cdk_aws_redshift_TableSortStyle(p.sortStyle);
        if (!visitedObjects.has(p.cluster))
            _aws_cdk_aws_redshift_ICluster(p.cluster);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_redshift_ITable(p) {
}
function _aws_cdk_aws_redshift_TableAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            _aws_cdk_aws_redshift_ICluster(p.cluster);
        if (!visitedObjects.has(p.tableColumns))
            _aws_cdk_aws_redshift_Column(p.tableColumns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_redshift_Table(p) {
}
function _aws_cdk_aws_redshift_TableDistStyle(p) {
}
function _aws_cdk_aws_redshift_TableSortStyle(p) {
}
function _aws_cdk_aws_redshift_UserProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            _aws_cdk_aws_redshift_ICluster(p.cluster);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_redshift_IUser(p) {
}
function _aws_cdk_aws_redshift_UserAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            _aws_cdk_aws_redshift_ICluster(p.cluster);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_redshift_User(p) {
}
function _aws_cdk_aws_redshift_CfnClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_redshift_CfnCluster(p) {
}
function _aws_cdk_aws_redshift_CfnCluster_EndpointProperty(p) {
}
function _aws_cdk_aws_redshift_CfnCluster_LoggingPropertiesProperty(p) {
}
function _aws_cdk_aws_redshift_CfnClusterParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_redshift_CfnClusterParameterGroup(p) {
}
function _aws_cdk_aws_redshift_CfnClusterParameterGroup_ParameterProperty(p) {
}
function _aws_cdk_aws_redshift_CfnClusterSecurityGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_redshift_CfnClusterSecurityGroup(p) {
}
function _aws_cdk_aws_redshift_CfnClusterSecurityGroupIngressProps(p) {
}
function _aws_cdk_aws_redshift_CfnClusterSecurityGroupIngress(p) {
}
function _aws_cdk_aws_redshift_CfnClusterSubnetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_redshift_CfnClusterSubnetGroup(p) {
}
function _aws_cdk_aws_redshift_CfnEndpointAccessProps(p) {
}
function _aws_cdk_aws_redshift_CfnEndpointAccess(p) {
}
function _aws_cdk_aws_redshift_CfnEndpointAccess_VpcSecurityGroupProperty(p) {
}
function _aws_cdk_aws_redshift_CfnEndpointAuthorizationProps(p) {
}
function _aws_cdk_aws_redshift_CfnEndpointAuthorization(p) {
}
function _aws_cdk_aws_redshift_CfnEventSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_redshift_CfnEventSubscription(p) {
}
function _aws_cdk_aws_redshift_CfnScheduledActionProps(p) {
}
function _aws_cdk_aws_redshift_CfnScheduledAction(p) {
}
function print(name, deprecationMessage) {
    const deprecated = process.env.JSII_DEPRECATED;
    const deprecationMode = ["warn", "fail", "quiet"].includes(deprecated) ? deprecated : "warn";
    const message = `${name} is deprecated.\n  ${deprecationMessage.trim()}\n  This API will be removed in the next major release.`;
    switch (deprecationMode) {
        case "fail":
            throw new DeprecationError(message);
        case "warn":
            console.warn("[WARNING]", message);
            break;
    }
}
function getPropertyDescriptor(obj, prop) {
    const descriptor = Object.getOwnPropertyDescriptor(obj, prop);
    if (descriptor) {
        return descriptor;
    }
    const proto = Object.getPrototypeOf(obj);
    const prototypeDescriptor = proto && getPropertyDescriptor(proto, prop);
    if (prototypeDescriptor) {
        return prototypeDescriptor;
    }
    return {};
}
const visitedObjects = new Set();
class DeprecationError extends Error {
    constructor(...args) {
        super(...args);
        Object.defineProperty(this, "name", {
            configurable: false,
            enumerable: true,
            value: "DeprecationError",
            writable: false,
        });
    }
}
module.exports = { print, getPropertyDescriptor, DeprecationError, _aws_cdk_aws_redshift_NodeType, _aws_cdk_aws_redshift_ClusterType, _aws_cdk_aws_redshift_Login, _aws_cdk_aws_redshift_RotationMultiUserOptions, _aws_cdk_aws_redshift_ICluster, _aws_cdk_aws_redshift_ClusterAttributes, _aws_cdk_aws_redshift_ClusterProps, _aws_cdk_aws_redshift_Cluster, _aws_cdk_aws_redshift_IClusterParameterGroup, _aws_cdk_aws_redshift_ClusterParameterGroupProps, _aws_cdk_aws_redshift_ClusterParameterGroup, _aws_cdk_aws_redshift_DatabaseOptions, _aws_cdk_aws_redshift_DatabaseSecretProps, _aws_cdk_aws_redshift_DatabaseSecret, _aws_cdk_aws_redshift_Endpoint, _aws_cdk_aws_redshift_IClusterSubnetGroup, _aws_cdk_aws_redshift_ClusterSubnetGroupProps, _aws_cdk_aws_redshift_ClusterSubnetGroup, _aws_cdk_aws_redshift_TableAction, _aws_cdk_aws_redshift_Column, _aws_cdk_aws_redshift_TableProps, _aws_cdk_aws_redshift_ITable, _aws_cdk_aws_redshift_TableAttributes, _aws_cdk_aws_redshift_Table, _aws_cdk_aws_redshift_TableDistStyle, _aws_cdk_aws_redshift_TableSortStyle, _aws_cdk_aws_redshift_UserProps, _aws_cdk_aws_redshift_IUser, _aws_cdk_aws_redshift_UserAttributes, _aws_cdk_aws_redshift_User, _aws_cdk_aws_redshift_CfnClusterProps, _aws_cdk_aws_redshift_CfnCluster, _aws_cdk_aws_redshift_CfnCluster_EndpointProperty, _aws_cdk_aws_redshift_CfnCluster_LoggingPropertiesProperty, _aws_cdk_aws_redshift_CfnClusterParameterGroupProps, _aws_cdk_aws_redshift_CfnClusterParameterGroup, _aws_cdk_aws_redshift_CfnClusterParameterGroup_ParameterProperty, _aws_cdk_aws_redshift_CfnClusterSecurityGroupProps, _aws_cdk_aws_redshift_CfnClusterSecurityGroup, _aws_cdk_aws_redshift_CfnClusterSecurityGroupIngressProps, _aws_cdk_aws_redshift_CfnClusterSecurityGroupIngress, _aws_cdk_aws_redshift_CfnClusterSubnetGroupProps, _aws_cdk_aws_redshift_CfnClusterSubnetGroup, _aws_cdk_aws_redshift_CfnEndpointAccessProps, _aws_cdk_aws_redshift_CfnEndpointAccess, _aws_cdk_aws_redshift_CfnEndpointAccess_VpcSecurityGroupProperty, _aws_cdk_aws_redshift_CfnEndpointAuthorizationProps, _aws_cdk_aws_redshift_CfnEndpointAuthorization, _aws_cdk_aws_redshift_CfnEventSubscriptionProps, _aws_cdk_aws_redshift_CfnEventSubscription, _aws_cdk_aws_redshift_CfnScheduledActionProps, _aws_cdk_aws_redshift_CfnScheduledAction };
