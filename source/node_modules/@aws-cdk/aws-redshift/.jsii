{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-ec2": "1.169.0",
    "@aws-cdk/aws-iam": "1.169.0",
    "@aws-cdk/aws-kms": "1.169.0",
    "@aws-cdk/aws-lambda": "1.169.0",
    "@aws-cdk/aws-s3": "1.169.0",
    "@aws-cdk/aws-secretsmanager": "1.169.0",
    "@aws-cdk/core": "1.169.0",
    "@aws-cdk/custom-resources": "1.169.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SAM",
          "packageId": "Amazon.CDK.AWS.SAM"
        },
        "java": {
          "maven": {
            "artifactId": "sam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sam"
        },
        "js": {
          "npm": "@aws-cdk/aws-sam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sam",
          "module": "aws_cdk.aws_sam"
        }
      }
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager"
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::Redshift",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.63.2 (build a8a8833)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "redshift"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": false
      }
    }
  },
  "name": "@aws-cdk/aws-redshift",
  "readme": {
    "markdown": "# Amazon Redshift Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n> All classes with the `Cfn` prefix in this module ([CFN Resources]) are always stable and safe to use.\n>\n> [CFN Resources]: https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\n## Starting a Redshift Cluster Database\n\nTo set up a Redshift cluster, define a `Cluster`. It will be launched in a VPC.\nYou can specify a VPC, otherwise one will be created. The nodes are always launched in private subnets and are encrypted by default.\n\n```ts\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nconst vpc = new ec2.Vpc(this, 'Vpc');\nconst cluster = new Cluster(this, 'Redshift', {\n  masterUser: {\n    masterUsername: 'admin',\n  },\n  vpc\n});\n```\n\nBy default, the master password will be generated and stored in AWS Secrets Manager.\n\nA default database named `default_db` will be created in the cluster. To change the name of this database set the `defaultDatabaseName` attribute in the constructor properties.\n\nBy default, the cluster will not be publicly accessible.\nDepending on your use case, you can make the cluster publicly accessible with the `publiclyAccessible` property.\n\n## Connecting\n\nTo control who can access the cluster, use the `.connections` attribute. Redshift Clusters have\na default port, so you don't need to specify the port:\n\n```ts fixture=cluster\ncluster.connections.allowDefaultPortFromAnyIpv4('Open to the world');\n```\n\nThe endpoint to access your database cluster will be available as the `.clusterEndpoint` attribute:\n\n```ts fixture=cluster\ncluster.clusterEndpoint.socketAddress;   // \"HOSTNAME:PORT\"\n```\n\n## Database Resources\n\nThis module allows for the creation of non-CloudFormation database resources such as users\nand tables. This allows you to manage identities, permissions, and stateful resources\nwithin your Redshift cluster from your CDK application.\n\nBecause these resources are not available in CloudFormation, this library leverages\n[custom\nresources](https://docs.aws.amazon.com/cdk/api/latest/docs/custom-resources-readme.html)\nto manage them. In addition to the IAM permissions required to make Redshift service\ncalls, the execution role for the custom resource handler requires database credentials to\ncreate resources within the cluster.\n\nThese database credentials can be supplied explicitly through the `adminUser` properties\nof the various database resource constructs. Alternatively, the credentials can be\nautomatically pulled from the Redshift cluster's default administrator\ncredentials. However, this option is only available if the password for the credentials\nwas generated by the CDK application (ie., no value vas provided for [the `masterPassword`\nproperty](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-redshift.Login.html#masterpasswordspan-classapi-icon-api-icon-experimental-titlethis-api-element-is-experimental-it-may-change-without-noticespan)\nof\n[`Cluster.masterUser`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-redshift.Cluster.html#masteruserspan-classapi-icon-api-icon-experimental-titlethis-api-element-is-experimental-it-may-change-without-noticespan)).\n\n### Creating Users\n\nCreate a user within a Redshift cluster database by instantiating a `User` construct. This\nwill generate a username and password, store the credentials in a [AWS Secrets Manager\n`Secret`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-secretsmanager.Secret.html),\nand make a query to the Redshift cluster to create a new database user with the\ncredentials.\n\n```ts fixture=cluster\nnew User(this, 'User', {\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\n```\n\nBy default, the user credentials are encrypted with your AWS account's default Secrets\nManager encryption key. You can specify the encryption key used for this purpose by\nsupplying a key in the `encryptionKey` property.\n\n```ts fixture=cluster\nimport * as kms from '@aws-cdk/aws-kms';\n\nconst encryptionKey = new kms.Key(this, 'Key');\nnew User(this, 'User', {\n  encryptionKey: encryptionKey,\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\n```\n\nBy default, a username is automatically generated from the user construct ID and its path\nin the construct tree. You can specify a particular username by providing a value for the\n`username` property. Usernames must be valid identifiers; see: [Names and\nidentifiers](https://docs.aws.amazon.com/redshift/latest/dg/r_names.html) in the *Amazon\nRedshift Database Developer Guide*.\n\n```ts fixture=cluster\nnew User(this, 'User', {\n  username: 'myuser',\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\n```\n\nThe user password is generated by AWS Secrets Manager using the default configuration\nfound in\n[`secretsmanager.SecretStringGenerator`](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-secretsmanager.SecretStringGenerator.html),\nexcept with password length `30` and some SQL-incompliant characters excluded. The\nplaintext for the password will never be present in the CDK application; instead, a\n[CloudFormation Dynamic\nReference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html)\nwill be used wherever the password value is required.\n\n### Creating Tables\n\nCreate a table within a Redshift cluster database by instantiating a `Table`\nconstruct. This will make a query to the Redshift cluster to create a new database table\nwith the supplied schema.\n\n```ts fixture=cluster\nnew Table(this, 'Table', {\n  tableColumns: [{ name: 'col1', dataType: 'varchar(4)' }, { name: 'col2', dataType: 'float' }],\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\n```\n\nThe table can be configured to have distStyle attribute and a distKey column:\n\n```ts fixture=cluster\nnew Table(this, 'Table', {\n  tableColumns: [\n    { name: 'col1', dataType: 'varchar(4)', distKey: true },\n    { name: 'col2', dataType: 'float' },\n  ],\n  cluster: cluster,\n  databaseName: 'databaseName',\n  distStyle: TableDistStyle.KEY,\n});\n```\n\nThe table can also be configured to have sortStyle attribute and sortKey columns:\n\n```ts fixture=cluster\nnew Table(this, 'Table', {\n  tableColumns: [\n    { name: 'col1', dataType: 'varchar(4)', sortKey: true },\n    { name: 'col2', dataType: 'float', sortKey: true },\n  ],\n  cluster: cluster,\n  databaseName: 'databaseName',\n  sortStyle: TableSortStyle.COMPOUND,\n});\n```\n\n### Granting Privileges\n\nYou can give a user privileges to perform certain actions on a table by using the\n`Table.grant()` method.\n\n```ts fixture=cluster\nconst user = new User(this, 'User', {\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\nconst table = new Table(this, 'Table', {\n  tableColumns: [{ name: 'col1', dataType: 'varchar(4)' }, { name: 'col2', dataType: 'float' }],\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\n\ntable.grant(user, TableAction.DROP, TableAction.SELECT);\n```\n\nTake care when managing privileges via the CDK, as attempting to manage a user's\nprivileges on the same table in multiple CDK applications could lead to accidentally\noverriding these permissions. Consider the following two CDK applications which both refer\nto the same user and table. In application 1, the resources are created and the user is\ngiven `INSERT` permissions on the table:\n\n```ts fixture=cluster\nconst databaseName = 'databaseName';\nconst username = 'myuser'\nconst tableName = 'mytable'\n\nconst user = new User(this, 'User', {\n  username: username,\n  cluster: cluster,\n  databaseName: databaseName,\n});\nconst table = new Table(this, 'Table', {\n  tableColumns: [{ name: 'col1', dataType: 'varchar(4)' }, { name: 'col2', dataType: 'float' }],\n  cluster: cluster,\n  databaseName: databaseName,\n});\ntable.grant(user, TableAction.INSERT);\n```\n\nIn application 2, the resources are imported and the user is given `INSERT` permissions on\nthe table:\n\n```ts fixture=cluster\nconst databaseName = 'databaseName';\nconst username = 'myuser'\nconst tableName = 'mytable'\n\nconst user = User.fromUserAttributes(this, 'User', {\n  username: username,\n  password: SecretValue.unsafePlainText('NOT_FOR_PRODUCTION'),\n  cluster: cluster,\n  databaseName: databaseName,\n});\nconst table = Table.fromTableAttributes(this, 'Table', {\n  tableName: tableName,\n  tableColumns: [{ name: 'col1', dataType: 'varchar(4)' }, { name: 'col2', dataType: 'float' }],\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\ntable.grant(user, TableAction.INSERT);\n```\n\nBoth applications attempt to grant the user the appropriate privilege on the table by\nsubmitting a `GRANT USER` SQL query to the Redshift cluster. Note that the latter of these\ntwo calls will have no effect since the user has already been granted the privilege.\n\nNow, if application 1 were to remove the call to `grant`, a `REVOKE USER` SQL query is\nsubmitted to the Redshift cluster. In general, application 1 does not know that\napplication 2 has also granted this permission and thus cannot decide not to issue the\nrevocation. This leads to the undesirable state where application 2 still contains the\ncall to `grant` but the user does not have the specified permission.\n\nNote that this does not occur when duplicate privileges are granted within the same\napplication, as such privileges are de-duplicated before any SQL query is submitted.\n\n## Rotating credentials\n\nWhen the master password is generated and stored in AWS Secrets Manager, it can be rotated automatically:\n\n```ts fixture=cluster\ncluster.addRotationSingleUser(); // Will rotate automatically after 30 days\n```\n\nThe multi user rotation scheme is also available:\n\n```ts fixture=cluster\n\nconst user = new User(this, 'User', {\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\ncluster.addRotationMultiUser('MultiUserRotation', {\n  secret: user.secret,\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-redshift",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Redshift",
      "packageId": "Amazon.CDK.AWS.Redshift"
    },
    "java": {
      "maven": {
        "artifactId": "redshift",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.redshift"
    },
    "js": {
      "npm": "@aws-cdk/aws-redshift"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-redshift",
      "module": "aws_cdk.aws_redshift"
    }
  },
  "types": {
    "@aws-cdk/aws-redshift.CfnCluster": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Redshift::Cluster",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a cluster. A *cluster* is a fully managed data warehouse that consists of a set of compute nodes.\n\nTo create a cluster in Virtual Private Cloud (VPC), you must provide a cluster subnet group name. The cluster subnet group identifies the subnets of your VPC that Amazon Redshift uses when creating the cluster. For more information about managing clusters, go to [Amazon Redshift Clusters](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html) in the *Amazon Redshift Cluster Management Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Redshift::Cluster`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnCluster = new redshift.CfnCluster(this, 'MyCfnCluster', {\n  clusterType: 'clusterType',\n  dbName: 'dbName',\n  masterUsername: 'masterUsername',\n  masterUserPassword: 'masterUserPassword',\n  nodeType: 'nodeType',\n\n  // the properties below are optional\n  allowVersionUpgrade: false,\n  aquaConfigurationStatus: 'aquaConfigurationStatus',\n  automatedSnapshotRetentionPeriod: 123,\n  availabilityZone: 'availabilityZone',\n  availabilityZoneRelocation: false,\n  availabilityZoneRelocationStatus: 'availabilityZoneRelocationStatus',\n  classic: false,\n  clusterIdentifier: 'clusterIdentifier',\n  clusterParameterGroupName: 'clusterParameterGroupName',\n  clusterSecurityGroups: ['clusterSecurityGroups'],\n  clusterSubnetGroupName: 'clusterSubnetGroupName',\n  clusterVersion: 'clusterVersion',\n  deferMaintenance: false,\n  deferMaintenanceDuration: 123,\n  deferMaintenanceEndTime: 'deferMaintenanceEndTime',\n  deferMaintenanceStartTime: 'deferMaintenanceStartTime',\n  destinationRegion: 'destinationRegion',\n  elasticIp: 'elasticIp',\n  encrypted: false,\n  enhancedVpcRouting: false,\n  hsmClientCertificateIdentifier: 'hsmClientCertificateIdentifier',\n  hsmConfigurationIdentifier: 'hsmConfigurationIdentifier',\n  iamRoles: ['iamRoles'],\n  kmsKeyId: 'kmsKeyId',\n  loggingProperties: {\n    bucketName: 'bucketName',\n\n    // the properties below are optional\n    s3KeyPrefix: 's3KeyPrefix',\n  },\n  maintenanceTrackName: 'maintenanceTrackName',\n  manualSnapshotRetentionPeriod: 123,\n  numberOfNodes: 123,\n  ownerAccount: 'ownerAccount',\n  port: 123,\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  publiclyAccessible: false,\n  resourceAction: 'resourceAction',\n  revisionTarget: 'revisionTarget',\n  rotateEncryptionKey: false,\n  snapshotClusterIdentifier: 'snapshotClusterIdentifier',\n  snapshotCopyGrantName: 'snapshotCopyGrantName',\n  snapshotCopyManual: false,\n  snapshotCopyRetentionPeriod: 123,\n  snapshotIdentifier: 'snapshotIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n});"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnCluster",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Redshift::Cluster`."
        },
        "locationInModule": {
          "filename": "lib/redshift.generated.ts",
          "line": 1196
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.CfnClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 680
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1268
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1325
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCluster",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 684
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DeferMaintenanceIdentifier"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 709
          },
          "name": "attrDeferMaintenanceIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Endpoint.Address"
            },
            "remarks": "For example: `examplecluster.cg034hpkmmjt.us-east-1.redshift.amazonaws.com` .",
            "stability": "external",
            "summary": "The connection endpoint for the Amazon Redshift cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 715
          },
          "name": "attrEndpointAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Endpoint.Port"
            },
            "remarks": "For example: `5439` .",
            "stability": "external",
            "summary": "The port number on which the Amazon Redshift cluster accepts connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 721
          },
          "name": "attrEndpointPort",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "remarks": "You use this identifier to refer to the cluster for any subsequent cluster operations such as deleting or modifying. The identifier also appears in the Amazon Redshift console.\n\nExample: `myexamplecluster`",
            "stability": "external",
            "summary": "A unique identifier for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 729
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1273
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-tags"
            },
            "stability": "external",
            "summary": "A list of tag instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1178
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustertype"
            },
            "remarks": "- `single-node` , the *NumberOfNodes* parameter is not required.\n- `multi-node` , the *NumberOfNodes* parameter is required.\n\nValid Values: `multi-node` | `single-node`\n\nDefault: `multi-node`",
            "stability": "external",
            "summary": "The type of the cluster. When cluster type is specified as."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 743
          },
          "name": "clusterType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-dbname"
            },
            "remarks": "To create additional databases after the cluster is created, connect to the cluster with a SQL client and use SQL commands to create a database. For more information, go to [Create a Database](https://docs.aws.amazon.com/redshift/latest/dg/t_creating_database.html) in the Amazon Redshift Database Developer Guide.\n\nDefault: `dev`\n\nConstraints:\n\n- Must contain 1 to 64 alphanumeric characters.\n- Must contain only lowercase letters.\n- Cannot be a word that is reserved by the service. A list of reserved words can be found in [Reserved Words](https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html) in the Amazon Redshift Database Developer Guide.",
            "stability": "external",
            "summary": "The name of the first database to be created when the cluster is created."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 760
          },
          "name": "dbName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-masterusername"
            },
            "remarks": "Constraints:\n\n- Must be 1 - 128 alphanumeric characters. The user name can't be `PUBLIC` .\n- First character must be a letter.\n- Cannot be a reserved word. A list of reserved words can be found in [Reserved Words](https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html) in the Amazon Redshift Database Developer Guide.",
            "stability": "external",
            "summary": "The user name associated with the admin user account for the cluster that is being created."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 773
          },
          "name": "masterUsername",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-masteruserpassword"
            },
            "remarks": "Constraints:\n\n- Must be between 8 and 64 characters in length.\n- Must contain at least one uppercase letter.\n- Must contain at least one lowercase letter.\n- Must contain one number.\n- Can be any printable ASCII character (ASCII code 33-126) except ' (single quote), \" (double quote), \\, /, or @.",
            "stability": "external",
            "summary": "The password associated with the admin user account for the cluster that is being created."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 788
          },
          "name": "masterUserPassword",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-nodetype"
            },
            "remarks": "For information about node types, go to [Working with Clusters](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes) in the *Amazon Redshift Cluster Management Guide* .\n\nValid Values: `ds2.xlarge` | `ds2.8xlarge` | `dc1.large` | `dc1.8xlarge` | `dc2.large` | `dc2.8xlarge` | `ra3.xlplus` | `ra3.4xlarge` | `ra3.16xlarge`",
            "stability": "external",
            "summary": "The node type to be provisioned for the cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 797
          },
          "name": "nodeType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-allowversionupgrade"
            },
            "remarks": "When a new major version of the Amazon Redshift engine is released, you can request that the service automatically apply upgrades during the maintenance window to the Amazon Redshift engine that is running on your cluster.\n\nDefault: `true`",
            "stability": "external",
            "summary": "If `true` , major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 808
          },
          "name": "allowVersionUpgrade",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-aquaconfigurationstatus"
            },
            "remarks": "Possible values include the following.\n\n- enabled - Use AQUA if it is available for the current AWS Region and Amazon Redshift node type.\n- disabled - Don't use AQUA.\n- auto - Amazon Redshift determines whether to use AQUA.",
            "stability": "external",
            "summary": "The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) when it is created."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 819
          },
          "name": "aquaConfigurationStatus",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-automatedsnapshotretentionperiod"
            },
            "remarks": "If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with [CreateClusterSnapshot](https://docs.aws.amazon.com/redshift/latest/APIReference/API_CreateClusterSnapshot.html) in the *Amazon Redshift API Reference* .\n\nDefault: `1`\n\nConstraints: Must be a value from 0 to 35.",
            "stability": "external",
            "summary": "The number of days that automated snapshots are retained."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 830
          },
          "name": "automatedSnapshotRetentionPeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-availabilityzone"
            },
            "remarks": "For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency.\n\nDefault: A random, system-chosen Availability Zone in the region that is specified by the endpoint.\n\nExample: `us-east-2d`\n\nConstraint: The specified Availability Zone must be in the same region as the current endpoint.",
            "stability": "external",
            "summary": "The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 843
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-availabilityzonerelocation"
            },
            "stability": "external",
            "summary": "The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster is created."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 850
          },
          "name": "availabilityZoneRelocation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-availabilityzonerelocationstatus"
            },
            "stability": "external",
            "summary": "Describes the status of the Availability Zone relocation operation."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 857
          },
          "name": "availabilityZoneRelocationStatus",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-classic"
            },
            "remarks": "If you don't provide this parameter or set the value to `false` , the resize type is elastic.",
            "stability": "external",
            "summary": "A boolean value indicating whether the resize operation is using the classic resize process."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 864
          },
          "name": "classic",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusteridentifier"
            },
            "remarks": "You use this identifier to refer to the cluster for any subsequent cluster operations such as deleting or modifying. The identifier also appears in the Amazon Redshift console.\n\nConstraints:\n\n- Must contain from 1 to 63 alphanumeric characters or hyphens.\n- Alphabetic characters must be lowercase.\n- First character must be a letter.\n- Cannot end with a hyphen or contain two consecutive hyphens.\n- Must be unique for all clusters within an AWS account .\n\nExample: `myexamplecluster`",
            "stability": "external",
            "summary": "A unique identifier for the cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 881
          },
          "name": "clusterIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusterparametergroupname"
            },
            "remarks": "Default: The default Amazon Redshift cluster parameter group. For information about the default parameter group, go to [Working with Amazon Redshift Parameter Groups](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html)\n\nConstraints:\n\n- Must be 1 to 255 alphanumeric characters or hyphens.\n- First character must be a letter.\n- Cannot end with a hyphen or contain two consecutive hyphens.",
            "stability": "external",
            "summary": "The name of the parameter group to be associated with this cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 896
          },
          "name": "clusterParameterGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustersecuritygroups"
            },
            "remarks": "Default: The default cluster security group for Amazon Redshift.",
            "stability": "external",
            "summary": "A list of security groups to be associated with this cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 905
          },
          "name": "clusterSecurityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustersubnetgroupname"
            },
            "remarks": "If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).",
            "stability": "external",
            "summary": "The name of a cluster subnet group to be associated with this cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 914
          },
          "name": "clusterSubnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusterversion"
            },
            "remarks": "The version selected runs on all the nodes in the cluster.\n\nConstraints: Only version 1.0 is currently available.\n\nExample: `1.0`",
            "stability": "external",
            "summary": "The version of the Amazon Redshift engine software that you want to deploy on the cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 927
          },
          "name": "clusterVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenance"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.DeferMaintenance`."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 934
          },
          "name": "deferMaintenance",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenanceduration"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.DeferMaintenanceDuration`."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 941
          },
          "name": "deferMaintenanceDuration",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenanceendtime"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.DeferMaintenanceEndTime`."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 948
          },
          "name": "deferMaintenanceEndTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenancestarttime"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.DeferMaintenanceStartTime`."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 955
          },
          "name": "deferMaintenanceStartTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-destinationregion"
            },
            "stability": "external",
            "summary": "The destination region that snapshots are automatically copied to when cross-region snapshot copy is enabled."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 962
          },
          "name": "destinationRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-elasticip"
            },
            "remarks": "Constraints: The cluster must be provisioned in EC2-VPC and publicly-accessible through an Internet gateway. For more information about provisioning clusters in EC2-VPC, go to [Supported Platforms to Launch Your Cluster](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms) in the Amazon Redshift Cluster Management Guide.",
            "stability": "external",
            "summary": "The Elastic IP (EIP) address for the cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 971
          },
          "name": "elasticIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-encrypted"
            },
            "remarks": "Default: false",
            "stability": "external",
            "summary": "If `true` , the data in the cluster is encrypted at rest."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 980
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-enhancedvpcrouting"
            },
            "remarks": "To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see [Enhanced VPC Routing](https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html) in the Amazon Redshift Cluster Management Guide.\n\nIf this option is `true` , enhanced VPC routing is enabled.\n\nDefault: false",
            "stability": "external",
            "summary": "An option that specifies whether to create the cluster with enhanced VPC routing enabled."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 991
          },
          "name": "enhancedVpcRouting",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-hsmclientcertificateidentifier"
            },
            "stability": "external",
            "summary": "Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 998
          },
          "name": "hsmClientCertificateIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-hsmconfigurationidentifier"
            },
            "stability": "external",
            "summary": "Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1005
          },
          "name": "hsmConfigurationIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-iamroles"
            },
            "remarks": "You must supply the IAM roles in their Amazon Resource Name (ARN) format.\n\nThe maximum number of IAM roles that you can associate is subject to a quota. For more information, go to [Quotas and limits](https://docs.aws.amazon.com/redshift/latest/mgmt/amazon-redshift-limits.html) in the *Amazon Redshift Cluster Management Guide* .",
            "stability": "external",
            "summary": "A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to access other AWS services."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1014
          },
          "name": "iamRoles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-kmskeyid"
            },
            "stability": "external",
            "summary": "The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1021
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-loggingproperties"
            },
            "stability": "external",
            "summary": "Specifies logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1028
          },
          "name": "loggingProperties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-redshift.CfnCluster.LoggingPropertiesProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-maintenancetrackname"
            },
            "remarks": "If you don't provide a maintenance track name, the cluster is assigned to the `current` track.",
            "stability": "external",
            "summary": "An optional parameter for the name of the maintenance track for the cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1035
          },
          "name": "maintenanceTrackName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-manualsnapshotretentionperiod"
            },
            "remarks": "If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots.\n\nThe value must be either -1 or an integer between 1 and 3,653.",
            "stability": "external",
            "summary": "The default number of days to retain a manual snapshot."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1044
          },
          "name": "manualSnapshotRetentionPeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-numberofnodes"
            },
            "remarks": "This parameter is required when the *ClusterType* parameter is specified as `multi-node` .\n\nFor information about determining how many nodes you need, go to [Working with Clusters](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes) in the *Amazon Redshift Cluster Management Guide* .\n\nIf you don't specify this parameter, you get a single-node cluster. When requesting a multi-node cluster, you must specify the number of nodes that you want in the cluster.\n\nDefault: `1`\n\nConstraints: Value must be at least 1 and no more than 100.",
            "stability": "external",
            "summary": "The number of compute nodes in the cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1059
          },
          "name": "numberOfNodes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-owneraccount"
            },
            "remarks": "Required if you are restoring a snapshot you do not own, optional if you own the snapshot.",
            "stability": "external",
            "summary": "The AWS account used to create or copy the snapshot."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1066
          },
          "name": "ownerAccount",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-port"
            },
            "remarks": "The cluster is accessible only via the JDBC and ODBC connection strings. Part of the connection string requires the port on which the cluster will listen for incoming connections.\n\nDefault: `5439`\n\nValid Values: `1150-65535`",
            "stability": "external",
            "summary": "The port number on which the cluster accepts incoming connections."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1079
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-preferredmaintenancewindow"
            },
            "remarks": "Format: `ddd:hh24:mi-ddd:hh24:mi`\n\nDefault: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week. For more information about the time blocks for each region, see [Maintenance Windows](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows) in Amazon Redshift Cluster Management Guide.\n\nValid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun\n\nConstraints: Minimum 30-minute window.",
            "stability": "external",
            "summary": "The weekly time range (in UTC) during which automated cluster maintenance can occur."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1094
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-publiclyaccessible"
            },
            "stability": "external",
            "summary": "If `true` , the cluster can be accessed from a public network."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1101
          },
          "name": "publiclyAccessible",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-resourceaction"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.ResourceAction`."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1108
          },
          "name": "resourceAction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-revisiontarget"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.RevisionTarget`."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1115
          },
          "name": "revisionTarget",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-rotateencryptionkey"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.RotateEncryptionKey`."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1122
          },
          "name": "rotateEncryptionKey",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotclusteridentifier"
            },
            "remarks": "This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.",
            "stability": "external",
            "summary": "The name of the cluster the source snapshot was created from."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1129
          },
          "name": "snapshotClusterIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotcopygrantname"
            },
            "stability": "external",
            "summary": "The name of the snapshot copy grant."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1136
          },
          "name": "snapshotCopyGrantName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotcopymanual"
            },
            "stability": "external",
            "summary": "Indicates whether to apply the snapshot retention period to newly copied manual snapshots instead of automated snapshots."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1143
          },
          "name": "snapshotCopyManual",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotcopyretentionperiod"
            },
            "remarks": "By default, this only changes the retention period of copied automated snapshots.\n\nIf you decrease the retention period for automated snapshots that are copied to a destination AWS Region , Amazon Redshift deletes any existing automated snapshots that were copied to the destination AWS Region and that fall outside of the new retention period.\n\nConstraints: Must be at least 1 and no more than 35 for automated snapshots.\n\nIf you specify the `manual` option, only newly copied manual snapshots will have the new retention period.\n\nIf you specify the value of -1 newly copied manual snapshots are retained indefinitely.\n\nConstraints: The number of days must be either -1 or an integer between 1 and 3,653 for manual snapshots.",
            "stability": "external",
            "summary": "The number of days to retain automated snapshots in the destination AWS Region after they are copied from the source AWS Region ."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1162
          },
          "name": "snapshotCopyRetentionPeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotidentifier"
            },
            "remarks": "Example: `my-snapshot-id`",
            "stability": "external",
            "summary": "The name of the snapshot from which to create the new cluster. This parameter isn't case sensitive."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1171
          },
          "name": "snapshotIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-vpcsecuritygroupids"
            },
            "remarks": "Default: The default VPC security group is associated with the cluster.",
            "stability": "external",
            "summary": "A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1187
          },
          "name": "vpcSecurityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnCluster"
    },
    "@aws-cdk/aws-redshift.CfnCluster.EndpointProperty": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-cluster-endpoint.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a connection endpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst endpointProperty: redshift.CfnCluster.EndpointProperty = {\n  address: 'address',\n  port: 'port',\n};"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnCluster.EndpointProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 1339
      },
      "name": "EndpointProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-cluster-endpoint.html#cfn-redshift-cluster-endpoint-address"
            },
            "stability": "external",
            "summary": "The DNS address of the Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1345
          },
          "name": "address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-cluster-endpoint.html#cfn-redshift-cluster-endpoint-port"
            },
            "stability": "external",
            "summary": "The port that the database engine is listening on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1351
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnCluster.EndpointProperty"
    },
    "@aws-cdk/aws-redshift.CfnCluster.LoggingPropertiesProperty": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-cluster-loggingproperties.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst loggingPropertiesProperty: redshift.CfnCluster.LoggingPropertiesProperty = {\n  bucketName: 'bucketName',\n\n  // the properties below are optional\n  s3KeyPrefix: 's3KeyPrefix',\n};"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnCluster.LoggingPropertiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 1415
      },
      "name": "LoggingPropertiesProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-cluster-loggingproperties.html#cfn-redshift-cluster-loggingproperties-bucketname"
            },
            "remarks": "Constraints:\n\n- Must be in the same region as the cluster\n- The cluster must have read bucket and put object permissions",
            "stability": "external",
            "summary": "The name of an existing S3 bucket where the log files are to be stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1426
          },
          "name": "bucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-cluster-loggingproperties.html#cfn-redshift-cluster-loggingproperties-s3keyprefix"
            },
            "remarks": "Constraints:\n\n- Cannot exceed 512 characters\n- Cannot contain spaces( ), double quotes (\"), single quotes ('), a backslash (\\), or control characters. The hexadecimal codes for invalid characters are:\n\n- x00 to x20\n- x22\n- x27\n- x5c\n- x7f or larger",
            "stability": "external",
            "summary": "The prefix applied to the log file names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1443
          },
          "name": "s3KeyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnCluster.LoggingPropertiesProperty"
    },
    "@aws-cdk/aws-redshift.CfnClusterParameterGroup": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Redshift::ClusterParameterGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Describes a parameter group.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Redshift::ClusterParameterGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnClusterParameterGroup = new redshift.CfnClusterParameterGroup(this, 'MyCfnClusterParameterGroup', {\n  description: 'description',\n  parameterGroupFamily: 'parameterGroupFamily',\n\n  // the properties below are optional\n  parameters: [{\n    parameterName: 'parameterName',\n    parameterValue: 'parameterValue',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnClusterParameterGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Redshift::ClusterParameterGroup`."
        },
        "locationInModule": {
          "filename": "lib/redshift.generated.ts",
          "line": 1672
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.CfnClusterParameterGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 1608
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1689
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1703
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClusterParameterGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1612
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1694
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-tags"
            },
            "stability": "external",
            "summary": "The list of tags for the cluster parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1663
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-description"
            },
            "stability": "external",
            "summary": "The description of the parameter group."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1638
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-parametergroupfamily"
            },
            "stability": "external",
            "summary": "The name of the cluster parameter group family that this cluster parameter group is compatible with."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1645
          },
          "name": "parameterGroupFamily",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-parameters"
            },
            "remarks": "For each parameter to be modified, you must supply at least the parameter name and parameter value; other name-value pairs of the parameter are optional.\n\nFor the workload management (WLM) configuration, you must supply all the name-value pairs in the wlm_json_configuration parameter.",
            "stability": "external",
            "summary": "An array of parameters to be modified. A maximum of 20 parameters can be modified in a single request."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1656
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-redshift.CfnClusterParameterGroup.ParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnClusterParameterGroup"
    },
    "@aws-cdk/aws-redshift.CfnClusterParameterGroup.ParameterProperty": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-property-redshift-clusterparametergroup-parameter.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a parameter in a cluster parameter group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst parameterProperty: redshift.CfnClusterParameterGroup.ParameterProperty = {\n  parameterName: 'parameterName',\n  parameterValue: 'parameterValue',\n};"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnClusterParameterGroup.ParameterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 1717
      },
      "name": "ParameterProperty",
      "namespace": "CfnClusterParameterGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-property-redshift-clusterparametergroup-parameter.html#cfn-redshift-clusterparametergroup-parameter-parametername"
            },
            "stability": "external",
            "summary": "The name of the parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1723
          },
          "name": "parameterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-property-redshift-clusterparametergroup-parameter.html#cfn-redshift-clusterparametergroup-parameter-parametervalue"
            },
            "remarks": "If `ParameterName` is `wlm_json_configuration` , then the maximum size of `ParameterValue` is 8000 characters.",
            "stability": "external",
            "summary": "The value of the parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1729
          },
          "name": "parameterValue",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnClusterParameterGroup.ParameterProperty"
    },
    "@aws-cdk/aws-redshift.CfnClusterParameterGroupProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnClusterParameterGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnClusterParameterGroupProps: redshift.CfnClusterParameterGroupProps = {\n  description: 'description',\n  parameterGroupFamily: 'parameterGroupFamily',\n\n  // the properties below are optional\n  parameters: [{\n    parameterName: 'parameterName',\n    parameterValue: 'parameterValue',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnClusterParameterGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 1507
      },
      "name": "CfnClusterParameterGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-description"
            },
            "stability": "external",
            "summary": "The description of the parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1514
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-parametergroupfamily"
            },
            "stability": "external",
            "summary": "The name of the cluster parameter group family that this cluster parameter group is compatible with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1521
          },
          "name": "parameterGroupFamily",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-parameters"
            },
            "remarks": "For each parameter to be modified, you must supply at least the parameter name and parameter value; other name-value pairs of the parameter are optional.\n\nFor the workload management (WLM) configuration, you must supply all the name-value pairs in the wlm_json_configuration parameter.",
            "stability": "external",
            "summary": "An array of parameters to be modified. A maximum of 20 parameters can be modified in a single request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1532
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-redshift.CfnClusterParameterGroup.ParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-tags"
            },
            "stability": "external",
            "summary": "The list of tags for the cluster parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1539
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnClusterParameterGroupProps"
    },
    "@aws-cdk/aws-redshift.CfnClusterProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCluster`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnClusterProps: redshift.CfnClusterProps = {\n  clusterType: 'clusterType',\n  dbName: 'dbName',\n  masterUsername: 'masterUsername',\n  masterUserPassword: 'masterUserPassword',\n  nodeType: 'nodeType',\n\n  // the properties below are optional\n  allowVersionUpgrade: false,\n  aquaConfigurationStatus: 'aquaConfigurationStatus',\n  automatedSnapshotRetentionPeriod: 123,\n  availabilityZone: 'availabilityZone',\n  availabilityZoneRelocation: false,\n  availabilityZoneRelocationStatus: 'availabilityZoneRelocationStatus',\n  classic: false,\n  clusterIdentifier: 'clusterIdentifier',\n  clusterParameterGroupName: 'clusterParameterGroupName',\n  clusterSecurityGroups: ['clusterSecurityGroups'],\n  clusterSubnetGroupName: 'clusterSubnetGroupName',\n  clusterVersion: 'clusterVersion',\n  deferMaintenance: false,\n  deferMaintenanceDuration: 123,\n  deferMaintenanceEndTime: 'deferMaintenanceEndTime',\n  deferMaintenanceStartTime: 'deferMaintenanceStartTime',\n  destinationRegion: 'destinationRegion',\n  elasticIp: 'elasticIp',\n  encrypted: false,\n  enhancedVpcRouting: false,\n  hsmClientCertificateIdentifier: 'hsmClientCertificateIdentifier',\n  hsmConfigurationIdentifier: 'hsmConfigurationIdentifier',\n  iamRoles: ['iamRoles'],\n  kmsKeyId: 'kmsKeyId',\n  loggingProperties: {\n    bucketName: 'bucketName',\n\n    // the properties below are optional\n    s3KeyPrefix: 's3KeyPrefix',\n  },\n  maintenanceTrackName: 'maintenanceTrackName',\n  manualSnapshotRetentionPeriod: 123,\n  numberOfNodes: 123,\n  ownerAccount: 'ownerAccount',\n  port: 123,\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  publiclyAccessible: false,\n  resourceAction: 'resourceAction',\n  revisionTarget: 'revisionTarget',\n  rotateEncryptionKey: false,\n  snapshotClusterIdentifier: 'snapshotClusterIdentifier',\n  snapshotCopyGrantName: 'snapshotCopyGrantName',\n  snapshotCopyManual: false,\n  snapshotCopyRetentionPeriod: 123,\n  snapshotIdentifier: 'snapshotIdentifier',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n};"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 19
      },
      "name": "CfnClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustertype"
            },
            "remarks": "- `single-node` , the *NumberOfNodes* parameter is not required.\n- `multi-node` , the *NumberOfNodes* parameter is required.\n\nValid Values: `multi-node` | `single-node`\n\nDefault: `multi-node`",
            "stability": "external",
            "summary": "The type of the cluster. When cluster type is specified as."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 33
          },
          "name": "clusterType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-dbname"
            },
            "remarks": "To create additional databases after the cluster is created, connect to the cluster with a SQL client and use SQL commands to create a database. For more information, go to [Create a Database](https://docs.aws.amazon.com/redshift/latest/dg/t_creating_database.html) in the Amazon Redshift Database Developer Guide.\n\nDefault: `dev`\n\nConstraints:\n\n- Must contain 1 to 64 alphanumeric characters.\n- Must contain only lowercase letters.\n- Cannot be a word that is reserved by the service. A list of reserved words can be found in [Reserved Words](https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html) in the Amazon Redshift Database Developer Guide.",
            "stability": "external",
            "summary": "The name of the first database to be created when the cluster is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 50
          },
          "name": "dbName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-masterusername"
            },
            "remarks": "Constraints:\n\n- Must be 1 - 128 alphanumeric characters. The user name can't be `PUBLIC` .\n- First character must be a letter.\n- Cannot be a reserved word. A list of reserved words can be found in [Reserved Words](https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html) in the Amazon Redshift Database Developer Guide.",
            "stability": "external",
            "summary": "The user name associated with the admin user account for the cluster that is being created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 63
          },
          "name": "masterUsername",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-masteruserpassword"
            },
            "remarks": "Constraints:\n\n- Must be between 8 and 64 characters in length.\n- Must contain at least one uppercase letter.\n- Must contain at least one lowercase letter.\n- Must contain one number.\n- Can be any printable ASCII character (ASCII code 33-126) except ' (single quote), \" (double quote), \\, /, or @.",
            "stability": "external",
            "summary": "The password associated with the admin user account for the cluster that is being created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 78
          },
          "name": "masterUserPassword",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-nodetype"
            },
            "remarks": "For information about node types, go to [Working with Clusters](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes) in the *Amazon Redshift Cluster Management Guide* .\n\nValid Values: `ds2.xlarge` | `ds2.8xlarge` | `dc1.large` | `dc1.8xlarge` | `dc2.large` | `dc2.8xlarge` | `ra3.xlplus` | `ra3.4xlarge` | `ra3.16xlarge`",
            "stability": "external",
            "summary": "The node type to be provisioned for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 87
          },
          "name": "nodeType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-allowversionupgrade"
            },
            "remarks": "When a new major version of the Amazon Redshift engine is released, you can request that the service automatically apply upgrades during the maintenance window to the Amazon Redshift engine that is running on your cluster.\n\nDefault: `true`",
            "stability": "external",
            "summary": "If `true` , major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 98
          },
          "name": "allowVersionUpgrade",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-aquaconfigurationstatus"
            },
            "remarks": "Possible values include the following.\n\n- enabled - Use AQUA if it is available for the current AWS Region and Amazon Redshift node type.\n- disabled - Don't use AQUA.\n- auto - Amazon Redshift determines whether to use AQUA.",
            "stability": "external",
            "summary": "The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) when it is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 109
          },
          "name": "aquaConfigurationStatus",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-automatedsnapshotretentionperiod"
            },
            "remarks": "If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with [CreateClusterSnapshot](https://docs.aws.amazon.com/redshift/latest/APIReference/API_CreateClusterSnapshot.html) in the *Amazon Redshift API Reference* .\n\nDefault: `1`\n\nConstraints: Must be a value from 0 to 35.",
            "stability": "external",
            "summary": "The number of days that automated snapshots are retained."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 120
          },
          "name": "automatedSnapshotRetentionPeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-availabilityzone"
            },
            "remarks": "For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency.\n\nDefault: A random, system-chosen Availability Zone in the region that is specified by the endpoint.\n\nExample: `us-east-2d`\n\nConstraint: The specified Availability Zone must be in the same region as the current endpoint.",
            "stability": "external",
            "summary": "The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 133
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-availabilityzonerelocation"
            },
            "stability": "external",
            "summary": "The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 140
          },
          "name": "availabilityZoneRelocation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-availabilityzonerelocationstatus"
            },
            "stability": "external",
            "summary": "Describes the status of the Availability Zone relocation operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 147
          },
          "name": "availabilityZoneRelocationStatus",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-classic"
            },
            "remarks": "If you don't provide this parameter or set the value to `false` , the resize type is elastic.",
            "stability": "external",
            "summary": "A boolean value indicating whether the resize operation is using the classic resize process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 154
          },
          "name": "classic",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusteridentifier"
            },
            "remarks": "You use this identifier to refer to the cluster for any subsequent cluster operations such as deleting or modifying. The identifier also appears in the Amazon Redshift console.\n\nConstraints:\n\n- Must contain from 1 to 63 alphanumeric characters or hyphens.\n- Alphabetic characters must be lowercase.\n- First character must be a letter.\n- Cannot end with a hyphen or contain two consecutive hyphens.\n- Must be unique for all clusters within an AWS account .\n\nExample: `myexamplecluster`",
            "stability": "external",
            "summary": "A unique identifier for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 171
          },
          "name": "clusterIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusterparametergroupname"
            },
            "remarks": "Default: The default Amazon Redshift cluster parameter group. For information about the default parameter group, go to [Working with Amazon Redshift Parameter Groups](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html)\n\nConstraints:\n\n- Must be 1 to 255 alphanumeric characters or hyphens.\n- First character must be a letter.\n- Cannot end with a hyphen or contain two consecutive hyphens.",
            "stability": "external",
            "summary": "The name of the parameter group to be associated with this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 186
          },
          "name": "clusterParameterGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustersecuritygroups"
            },
            "remarks": "Default: The default cluster security group for Amazon Redshift.",
            "stability": "external",
            "summary": "A list of security groups to be associated with this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 195
          },
          "name": "clusterSecurityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustersubnetgroupname"
            },
            "remarks": "If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).",
            "stability": "external",
            "summary": "The name of a cluster subnet group to be associated with this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 204
          },
          "name": "clusterSubnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusterversion"
            },
            "remarks": "The version selected runs on all the nodes in the cluster.\n\nConstraints: Only version 1.0 is currently available.\n\nExample: `1.0`",
            "stability": "external",
            "summary": "The version of the Amazon Redshift engine software that you want to deploy on the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 217
          },
          "name": "clusterVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenance"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.DeferMaintenance`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 224
          },
          "name": "deferMaintenance",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenanceduration"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.DeferMaintenanceDuration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 231
          },
          "name": "deferMaintenanceDuration",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenanceendtime"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.DeferMaintenanceEndTime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 238
          },
          "name": "deferMaintenanceEndTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenancestarttime"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.DeferMaintenanceStartTime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 245
          },
          "name": "deferMaintenanceStartTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-destinationregion"
            },
            "stability": "external",
            "summary": "The destination region that snapshots are automatically copied to when cross-region snapshot copy is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 252
          },
          "name": "destinationRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-elasticip"
            },
            "remarks": "Constraints: The cluster must be provisioned in EC2-VPC and publicly-accessible through an Internet gateway. For more information about provisioning clusters in EC2-VPC, go to [Supported Platforms to Launch Your Cluster](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms) in the Amazon Redshift Cluster Management Guide.",
            "stability": "external",
            "summary": "The Elastic IP (EIP) address for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 261
          },
          "name": "elasticIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-encrypted"
            },
            "remarks": "Default: false",
            "stability": "external",
            "summary": "If `true` , the data in the cluster is encrypted at rest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 270
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-enhancedvpcrouting"
            },
            "remarks": "To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see [Enhanced VPC Routing](https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html) in the Amazon Redshift Cluster Management Guide.\n\nIf this option is `true` , enhanced VPC routing is enabled.\n\nDefault: false",
            "stability": "external",
            "summary": "An option that specifies whether to create the cluster with enhanced VPC routing enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 281
          },
          "name": "enhancedVpcRouting",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-hsmclientcertificateidentifier"
            },
            "stability": "external",
            "summary": "Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 288
          },
          "name": "hsmClientCertificateIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-hsmconfigurationidentifier"
            },
            "stability": "external",
            "summary": "Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 295
          },
          "name": "hsmConfigurationIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-iamroles"
            },
            "remarks": "You must supply the IAM roles in their Amazon Resource Name (ARN) format.\n\nThe maximum number of IAM roles that you can associate is subject to a quota. For more information, go to [Quotas and limits](https://docs.aws.amazon.com/redshift/latest/mgmt/amazon-redshift-limits.html) in the *Amazon Redshift Cluster Management Guide* .",
            "stability": "external",
            "summary": "A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to access other AWS services."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 304
          },
          "name": "iamRoles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-kmskeyid"
            },
            "stability": "external",
            "summary": "The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 311
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-loggingproperties"
            },
            "stability": "external",
            "summary": "Specifies logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 318
          },
          "name": "loggingProperties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-redshift.CfnCluster.LoggingPropertiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-maintenancetrackname"
            },
            "remarks": "If you don't provide a maintenance track name, the cluster is assigned to the `current` track.",
            "stability": "external",
            "summary": "An optional parameter for the name of the maintenance track for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 325
          },
          "name": "maintenanceTrackName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-manualsnapshotretentionperiod"
            },
            "remarks": "If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots.\n\nThe value must be either -1 or an integer between 1 and 3,653.",
            "stability": "external",
            "summary": "The default number of days to retain a manual snapshot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 334
          },
          "name": "manualSnapshotRetentionPeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-numberofnodes"
            },
            "remarks": "This parameter is required when the *ClusterType* parameter is specified as `multi-node` .\n\nFor information about determining how many nodes you need, go to [Working with Clusters](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes) in the *Amazon Redshift Cluster Management Guide* .\n\nIf you don't specify this parameter, you get a single-node cluster. When requesting a multi-node cluster, you must specify the number of nodes that you want in the cluster.\n\nDefault: `1`\n\nConstraints: Value must be at least 1 and no more than 100.",
            "stability": "external",
            "summary": "The number of compute nodes in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 349
          },
          "name": "numberOfNodes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-owneraccount"
            },
            "remarks": "Required if you are restoring a snapshot you do not own, optional if you own the snapshot.",
            "stability": "external",
            "summary": "The AWS account used to create or copy the snapshot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 356
          },
          "name": "ownerAccount",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-port"
            },
            "remarks": "The cluster is accessible only via the JDBC and ODBC connection strings. Part of the connection string requires the port on which the cluster will listen for incoming connections.\n\nDefault: `5439`\n\nValid Values: `1150-65535`",
            "stability": "external",
            "summary": "The port number on which the cluster accepts incoming connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 369
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-preferredmaintenancewindow"
            },
            "remarks": "Format: `ddd:hh24:mi-ddd:hh24:mi`\n\nDefault: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week. For more information about the time blocks for each region, see [Maintenance Windows](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows) in Amazon Redshift Cluster Management Guide.\n\nValid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun\n\nConstraints: Minimum 30-minute window.",
            "stability": "external",
            "summary": "The weekly time range (in UTC) during which automated cluster maintenance can occur."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 384
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-publiclyaccessible"
            },
            "stability": "external",
            "summary": "If `true` , the cluster can be accessed from a public network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 391
          },
          "name": "publiclyAccessible",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-resourceaction"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.ResourceAction`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 398
          },
          "name": "resourceAction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-revisiontarget"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.RevisionTarget`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 405
          },
          "name": "revisionTarget",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-rotateencryptionkey"
            },
            "stability": "external",
            "summary": "`AWS::Redshift::Cluster.RotateEncryptionKey`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 412
          },
          "name": "rotateEncryptionKey",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotclusteridentifier"
            },
            "remarks": "This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.",
            "stability": "external",
            "summary": "The name of the cluster the source snapshot was created from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 419
          },
          "name": "snapshotClusterIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotcopygrantname"
            },
            "stability": "external",
            "summary": "The name of the snapshot copy grant."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 426
          },
          "name": "snapshotCopyGrantName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotcopymanual"
            },
            "stability": "external",
            "summary": "Indicates whether to apply the snapshot retention period to newly copied manual snapshots instead of automated snapshots."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 433
          },
          "name": "snapshotCopyManual",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotcopyretentionperiod"
            },
            "remarks": "By default, this only changes the retention period of copied automated snapshots.\n\nIf you decrease the retention period for automated snapshots that are copied to a destination AWS Region , Amazon Redshift deletes any existing automated snapshots that were copied to the destination AWS Region and that fall outside of the new retention period.\n\nConstraints: Must be at least 1 and no more than 35 for automated snapshots.\n\nIf you specify the `manual` option, only newly copied manual snapshots will have the new retention period.\n\nIf you specify the value of -1 newly copied manual snapshots are retained indefinitely.\n\nConstraints: The number of days must be either -1 or an integer between 1 and 3,653 for manual snapshots.",
            "stability": "external",
            "summary": "The number of days to retain automated snapshots in the destination AWS Region after they are copied from the source AWS Region ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 452
          },
          "name": "snapshotCopyRetentionPeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotidentifier"
            },
            "remarks": "Example: `my-snapshot-id`",
            "stability": "external",
            "summary": "The name of the snapshot from which to create the new cluster. This parameter isn't case sensitive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 461
          },
          "name": "snapshotIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-tags"
            },
            "stability": "external",
            "summary": "A list of tag instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 468
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-vpcsecuritygroupids"
            },
            "remarks": "Default: The default VPC security group is associated with the cluster.",
            "stability": "external",
            "summary": "A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 477
          },
          "name": "vpcSecurityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnClusterProps"
    },
    "@aws-cdk/aws-redshift.CfnClusterSecurityGroup": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Redshift::ClusterSecurityGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a new Amazon Redshift security group. You use security groups to control access to non-VPC clusters.\n\nFor information about managing security groups, go to [Amazon Redshift Cluster Security Groups](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html) in the *Amazon Redshift Cluster Management Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Redshift::ClusterSecurityGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnClusterSecurityGroup = new redshift.CfnClusterSecurityGroup(this, 'MyCfnClusterSecurityGroup', {\n  description: 'description',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnClusterSecurityGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Redshift::ClusterSecurityGroup`."
        },
        "locationInModule": {
          "filename": "lib/redshift.generated.ts",
          "line": 1918
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.CfnClusterSecurityGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 1872
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1932
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1944
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClusterSecurityGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1876
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1937
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html#cfn-redshift-clustersecuritygroup-tags"
            },
            "remarks": "Use tags to manage your resources.",
            "stability": "external",
            "summary": "Specifies an arbitrary set of tags (key–value pairs) to associate with this security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1909
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html#cfn-redshift-clustersecuritygroup-description"
            },
            "stability": "external",
            "summary": "A description for the security group."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1902
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnClusterSecurityGroup"
    },
    "@aws-cdk/aws-redshift.CfnClusterSecurityGroupIngress": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Redshift::ClusterSecurityGroupIngress",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Adds an inbound (ingress) rule to an Amazon Redshift security group. Depending on whether the application accessing your cluster is running on the Internet or an Amazon EC2 instance, you can authorize inbound access to either a Classless Interdomain Routing (CIDR)/Internet Protocol (IP) range or to an Amazon EC2 security group. You can add as many as 20 ingress rules to an Amazon Redshift security group.\n\nIf you authorize access to an Amazon EC2 security group, specify *EC2SecurityGroupName* and *EC2SecurityGroupOwnerId* . The Amazon EC2 security group and Amazon Redshift cluster must be in the same AWS Region .\n\nIf you authorize access to a CIDR/IP address range, specify *CIDRIP* . For an overview of CIDR blocks, see the Wikipedia article on [Classless Inter-Domain Routing](https://docs.aws.amazon.com/http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) .\n\nYou must also associate the security group with a cluster so that clients running on these IP addresses or the EC2 instance are authorized to connect to the cluster. For information about managing security groups, go to [Working with Security Groups](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html) in the *Amazon Redshift Cluster Management Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Redshift::ClusterSecurityGroupIngress`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnClusterSecurityGroupIngress = new redshift.CfnClusterSecurityGroupIngress(this, 'MyCfnClusterSecurityGroupIngress', {\n  clusterSecurityGroupName: 'clusterSecurityGroupName',\n\n  // the properties below are optional\n  cidrip: 'cidrip',\n  ec2SecurityGroupName: 'ec2SecurityGroupName',\n  ec2SecurityGroupOwnerId: 'ec2SecurityGroupOwnerId',\n});"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnClusterSecurityGroupIngress",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Redshift::ClusterSecurityGroupIngress`."
        },
        "locationInModule": {
          "filename": "lib/redshift.generated.ts",
          "line": 2127
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.CfnClusterSecurityGroupIngressProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 2063
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2143
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2157
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClusterSecurityGroupIngress",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2067
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2148
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html#cfn-redshift-clustersecuritygroupingress-clustersecuritygroupname"
            },
            "stability": "external",
            "summary": "The name of the security group to which the ingress rule is added."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2093
          },
          "name": "clusterSecurityGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html#cfn-redshift-clustersecuritygroupingress-cidrip"
            },
            "stability": "external",
            "summary": "The IP range to be added the Amazon Redshift security group."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2100
          },
          "name": "cidrip",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html#cfn-redshift-clustersecuritygroupingress-ec2securitygroupname"
            },
            "stability": "external",
            "summary": "The EC2 security group to be added the Amazon Redshift security group."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2107
          },
          "name": "ec2SecurityGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html#cfn-redshift-clustersecuritygroupingress-ec2securitygroupownerid"
            },
            "remarks": "The AWS Access Key ID is not an acceptable value.\n\nExample: `111122223333`\n\nConditional. If you specify the `EC2SecurityGroupName` property, you must specify this property.",
            "stability": "external",
            "summary": "The AWS account number of the owner of the security group specified by the *EC2SecurityGroupName* parameter."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2118
          },
          "name": "ec2SecurityGroupOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnClusterSecurityGroupIngress"
    },
    "@aws-cdk/aws-redshift.CfnClusterSecurityGroupIngressProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnClusterSecurityGroupIngress`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnClusterSecurityGroupIngressProps: redshift.CfnClusterSecurityGroupIngressProps = {\n  clusterSecurityGroupName: 'clusterSecurityGroupName',\n\n  // the properties below are optional\n  cidrip: 'cidrip',\n  ec2SecurityGroupName: 'ec2SecurityGroupName',\n  ec2SecurityGroupOwnerId: 'ec2SecurityGroupOwnerId',\n};"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnClusterSecurityGroupIngressProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 1957
      },
      "name": "CfnClusterSecurityGroupIngressProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html#cfn-redshift-clustersecuritygroupingress-clustersecuritygroupname"
            },
            "stability": "external",
            "summary": "The name of the security group to which the ingress rule is added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1964
          },
          "name": "clusterSecurityGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html#cfn-redshift-clustersecuritygroupingress-cidrip"
            },
            "stability": "external",
            "summary": "The IP range to be added the Amazon Redshift security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1971
          },
          "name": "cidrip",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html#cfn-redshift-clustersecuritygroupingress-ec2securitygroupname"
            },
            "stability": "external",
            "summary": "The EC2 security group to be added the Amazon Redshift security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1978
          },
          "name": "ec2SecurityGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html#cfn-redshift-clustersecuritygroupingress-ec2securitygroupownerid"
            },
            "remarks": "The AWS Access Key ID is not an acceptable value.\n\nExample: `111122223333`\n\nConditional. If you specify the `EC2SecurityGroupName` property, you must specify this property.",
            "stability": "external",
            "summary": "The AWS account number of the owner of the security group specified by the *EC2SecurityGroupName* parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1989
          },
          "name": "ec2SecurityGroupOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnClusterSecurityGroupIngressProps"
    },
    "@aws-cdk/aws-redshift.CfnClusterSecurityGroupProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnClusterSecurityGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnClusterSecurityGroupProps: redshift.CfnClusterSecurityGroupProps = {\n  description: 'description',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnClusterSecurityGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 1794
      },
      "name": "CfnClusterSecurityGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html#cfn-redshift-clustersecuritygroup-description"
            },
            "stability": "external",
            "summary": "A description for the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1801
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html#cfn-redshift-clustersecuritygroup-tags"
            },
            "remarks": "Use tags to manage your resources.",
            "stability": "external",
            "summary": "Specifies an arbitrary set of tags (key–value pairs) to associate with this security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 1808
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnClusterSecurityGroupProps"
    },
    "@aws-cdk/aws-redshift.CfnClusterSubnetGroup": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Redshift::ClusterSubnetGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies an Amazon Redshift subnet group. You must provide a list of one or more subnets in your existing Amazon Virtual Private Cloud ( Amazon VPC ) when creating Amazon Redshift subnet group.\n\nFor information about subnet groups, go to [Amazon Redshift Cluster Subnet Groups](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-cluster-subnet-groups.html) in the *Amazon Redshift Cluster Management Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Redshift::ClusterSubnetGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnClusterSubnetGroup = new redshift.CfnClusterSubnetGroup(this, 'MyCfnClusterSubnetGroup', {\n  description: 'description',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnClusterSubnetGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Redshift::ClusterSubnetGroup`."
        },
        "locationInModule": {
          "filename": "lib/redshift.generated.ts",
          "line": 2312
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.CfnClusterSubnetGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 2259
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2328
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2341
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClusterSubnetGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2263
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2333
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html#cfn-redshift-clustersubnetgroup-tags"
            },
            "remarks": "Use tags to manage your resources.",
            "stability": "external",
            "summary": "Specifies an arbitrary set of tags (key–value pairs) to associate with this subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2303
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html#cfn-redshift-clustersubnetgroup-description"
            },
            "stability": "external",
            "summary": "A description for the subnet group."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2289
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html#cfn-redshift-clustersubnetgroup-subnetids"
            },
            "remarks": "A maximum of 20 subnets can be modified in a single request.",
            "stability": "external",
            "summary": "An array of VPC subnet IDs."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2296
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnClusterSubnetGroup"
    },
    "@aws-cdk/aws-redshift.CfnClusterSubnetGroupProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnClusterSubnetGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnClusterSubnetGroupProps: redshift.CfnClusterSubnetGroupProps = {\n  description: 'description',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnClusterSubnetGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 2170
      },
      "name": "CfnClusterSubnetGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html#cfn-redshift-clustersubnetgroup-description"
            },
            "stability": "external",
            "summary": "A description for the subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2177
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html#cfn-redshift-clustersubnetgroup-subnetids"
            },
            "remarks": "A maximum of 20 subnets can be modified in a single request.",
            "stability": "external",
            "summary": "An array of VPC subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2184
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html#cfn-redshift-clustersubnetgroup-tags"
            },
            "remarks": "Use tags to manage your resources.",
            "stability": "external",
            "summary": "Specifies an arbitrary set of tags (key–value pairs) to associate with this subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2191
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnClusterSubnetGroupProps"
    },
    "@aws-cdk/aws-redshift.CfnEndpointAccess": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Redshift::EndpointAccess",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a Redshift-managed VPC endpoint.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Redshift::EndpointAccess`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnEndpointAccess = new redshift.CfnEndpointAccess(this, 'MyCfnEndpointAccess', {\n  endpointName: 'endpointName',\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n\n  // the properties below are optional\n  clusterIdentifier: 'clusterIdentifier',\n  resourceOwner: 'resourceOwner',\n  subnetGroupName: 'subnetGroupName',\n});"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnEndpointAccess",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Redshift::EndpointAccess`."
        },
        "locationInModule": {
          "filename": "lib/redshift.generated.ts",
          "line": 2558
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.CfnEndpointAccessProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 2461
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2581
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2596
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEndpointAccess",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2465
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Address"
            },
            "stability": "external",
            "summary": "The DNS address of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2490
          },
          "name": "attrAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "EndpointCreateTime"
            },
            "stability": "external",
            "summary": "The time (UTC) that the endpoint was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2496
          },
          "name": "attrEndpointCreateTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "EndpointStatus"
            },
            "stability": "external",
            "summary": "The status of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2502
          },
          "name": "attrEndpointStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Port"
            },
            "stability": "external",
            "summary": "The port number on which the cluster accepts incoming connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2508
          },
          "name": "attrPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "VpcSecurityGroups"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2514
          },
          "name": "attrVpcSecurityGroups",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2586
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-endpointname"
            },
            "stability": "external",
            "summary": "The name of the endpoint."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2521
          },
          "name": "endpointName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-vpcsecuritygroupids"
            },
            "stability": "external",
            "summary": "The security group that defines the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2528
          },
          "name": "vpcSecurityGroupIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-clusteridentifier"
            },
            "stability": "external",
            "summary": "The cluster identifier of the cluster associated with the endpoint."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2535
          },
          "name": "clusterIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-resourceowner"
            },
            "stability": "external",
            "summary": "The AWS account ID of the owner of the cluster."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2542
          },
          "name": "resourceOwner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-subnetgroupname"
            },
            "stability": "external",
            "summary": "The subnet group name where Amazon Redshift chooses to deploy the endpoint."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2549
          },
          "name": "subnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnEndpointAccess"
    },
    "@aws-cdk/aws-redshift.CfnEndpointAccess.VpcSecurityGroupProperty": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-endpointaccess-vpcsecuritygroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The security groups associated with the endpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst vpcSecurityGroupProperty: redshift.CfnEndpointAccess.VpcSecurityGroupProperty = {\n  status: 'status',\n  vpcSecurityGroupId: 'vpcSecurityGroupId',\n};"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnEndpointAccess.VpcSecurityGroupProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 2610
      },
      "name": "VpcSecurityGroupProperty",
      "namespace": "CfnEndpointAccess",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-endpointaccess-vpcsecuritygroup.html#cfn-redshift-endpointaccess-vpcsecuritygroup-status"
            },
            "stability": "external",
            "summary": "The status of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2616
          },
          "name": "status",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-endpointaccess-vpcsecuritygroup.html#cfn-redshift-endpointaccess-vpcsecuritygroup-vpcsecuritygroupid"
            },
            "stability": "external",
            "summary": "The identifier of the VPC security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2622
          },
          "name": "vpcSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnEndpointAccess.VpcSecurityGroupProperty"
    },
    "@aws-cdk/aws-redshift.CfnEndpointAccessProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnEndpointAccess`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnEndpointAccessProps: redshift.CfnEndpointAccessProps = {\n  endpointName: 'endpointName',\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n\n  // the properties below are optional\n  clusterIdentifier: 'clusterIdentifier',\n  resourceOwner: 'resourceOwner',\n  subnetGroupName: 'subnetGroupName',\n};"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnEndpointAccessProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 2354
      },
      "name": "CfnEndpointAccessProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-endpointname"
            },
            "stability": "external",
            "summary": "The name of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2361
          },
          "name": "endpointName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-vpcsecuritygroupids"
            },
            "stability": "external",
            "summary": "The security group that defines the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2368
          },
          "name": "vpcSecurityGroupIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-clusteridentifier"
            },
            "stability": "external",
            "summary": "The cluster identifier of the cluster associated with the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2375
          },
          "name": "clusterIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-resourceowner"
            },
            "stability": "external",
            "summary": "The AWS account ID of the owner of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2382
          },
          "name": "resourceOwner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-subnetgroupname"
            },
            "stability": "external",
            "summary": "The subnet group name where Amazon Redshift chooses to deploy the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2389
          },
          "name": "subnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnEndpointAccessProps"
    },
    "@aws-cdk/aws-redshift.CfnEndpointAuthorization": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Redshift::EndpointAuthorization",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Describes an endpoint authorization for authorizing Redshift-managed VPC endpoint access to a cluster across AWS accounts .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Redshift::EndpointAuthorization`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnEndpointAuthorization = new redshift.CfnEndpointAuthorization(this, 'MyCfnEndpointAuthorization', {\n  account: 'account',\n  clusterIdentifier: 'clusterIdentifier',\n\n  // the properties below are optional\n  force: false,\n  vpcIds: ['vpcIds'],\n});"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnEndpointAuthorization",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Redshift::EndpointAuthorization`."
        },
        "locationInModule": {
          "filename": "lib/redshift.generated.ts",
          "line": 2890
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.CfnEndpointAuthorizationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 2782
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2915
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2929
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEndpointAuthorization",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2786
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AllowedAllVPCs"
            },
            "stability": "external",
            "summary": "Indicates whether all VPCs in the grantee account are allowed access to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2811
          },
          "name": "attrAllowedAllVpCs",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AllowedVPCs"
            },
            "stability": "external",
            "summary": "The VPCs allowed access to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2817
          },
          "name": "attrAllowedVpCs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AuthorizeTime"
            },
            "stability": "external",
            "summary": "The time (UTC) when the authorization was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2823
          },
          "name": "attrAuthorizeTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ClusterStatus"
            },
            "stability": "external",
            "summary": "The status of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2829
          },
          "name": "attrClusterStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "EndpointCount"
            },
            "stability": "external",
            "summary": "The number of Redshift-managed VPC endpoints created for the authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2835
          },
          "name": "attrEndpointCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Grantee"
            },
            "stability": "external",
            "summary": "The AWS account ID of the grantee of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2841
          },
          "name": "attrGrantee",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Grantor"
            },
            "stability": "external",
            "summary": "The AWS account ID of the cluster owner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2847
          },
          "name": "attrGrantor",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Status"
            },
            "stability": "external",
            "summary": "The status of the authorization action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2853
          },
          "name": "attrStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2920
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-account"
            },
            "remarks": "If `Grantee` parameter is true, then the `Account` value is of the grantor.",
            "stability": "external",
            "summary": "The A AWS account ID of either the cluster owner (grantor) or grantee."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2860
          },
          "name": "account",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-clusteridentifier"
            },
            "stability": "external",
            "summary": "The cluster identifier."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2867
          },
          "name": "clusterIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-force"
            },
            "remarks": "If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted.",
            "stability": "external",
            "summary": "Indicates whether to force the revoke action."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2874
          },
          "name": "force",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-vpcids"
            },
            "stability": "external",
            "summary": "The virtual private cloud (VPC) identifiers to grant access to."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2881
          },
          "name": "vpcIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnEndpointAuthorization"
    },
    "@aws-cdk/aws-redshift.CfnEndpointAuthorizationProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnEndpointAuthorization`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnEndpointAuthorizationProps: redshift.CfnEndpointAuthorizationProps = {\n  account: 'account',\n  clusterIdentifier: 'clusterIdentifier',\n\n  // the properties below are optional\n  force: false,\n  vpcIds: ['vpcIds'],\n};"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnEndpointAuthorizationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 2685
      },
      "name": "CfnEndpointAuthorizationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-account"
            },
            "remarks": "If `Grantee` parameter is true, then the `Account` value is of the grantor.",
            "stability": "external",
            "summary": "The A AWS account ID of either the cluster owner (grantor) or grantee."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2692
          },
          "name": "account",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-clusteridentifier"
            },
            "stability": "external",
            "summary": "The cluster identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2699
          },
          "name": "clusterIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-force"
            },
            "remarks": "If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted.",
            "stability": "external",
            "summary": "Indicates whether to force the revoke action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2706
          },
          "name": "force",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-vpcids"
            },
            "stability": "external",
            "summary": "The virtual private cloud (VPC) identifiers to grant access to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2713
          },
          "name": "vpcIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnEndpointAuthorizationProps"
    },
    "@aws-cdk/aws-redshift.CfnEventSubscription": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Redshift::EventSubscription",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Redshift::EventSubscription`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnEventSubscription = new redshift.CfnEventSubscription(this, 'MyCfnEventSubscription', {\n  subscriptionName: 'subscriptionName',\n\n  // the properties below are optional\n  enabled: false,\n  eventCategories: ['eventCategories'],\n  severity: 'severity',\n  snsTopicArn: 'snsTopicArn',\n  sourceIds: ['sourceIds'],\n  sourceType: 'sourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnEventSubscription",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Redshift::EventSubscription`."
        },
        "locationInModule": {
          "filename": "lib/redshift.generated.ts",
          "line": 3243
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.CfnEventSubscriptionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 3095
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3269
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3287
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEventSubscription",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3099
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CustomerAwsId"
            },
            "stability": "external",
            "summary": "The AWS account associated with the Amazon Redshift event notification subscription."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3130
          },
          "name": "attrCustomerAwsId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CustSubscriptionId"
            },
            "stability": "external",
            "summary": "The name of the Amazon Redshift event notification subscription."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3124
          },
          "name": "attrCustSubscriptionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "EventCategoriesList"
            },
            "remarks": "Values: Configuration, Management, Monitoring, Security, Pending",
            "stability": "external",
            "summary": "The list of Amazon Redshift event categories specified in the event notification subscription."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3138
          },
          "name": "attrEventCategoriesList",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SourceIdsList"
            },
            "stability": "external",
            "summary": "A list of the sources that publish events to the Amazon Redshift event notification subscription."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3144
          },
          "name": "attrSourceIdsList",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Status"
            },
            "remarks": "Constraints:\n\n- Can be one of the following: active | no-permission | topic-not-exist\n- The status \"no-permission\" indicates that Amazon Redshift no longer has permission to post to the Amazon SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.",
            "stability": "external",
            "summary": "The status of the Amazon Redshift event notification subscription."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3155
          },
          "name": "attrStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SubscriptionCreationTime"
            },
            "stability": "external",
            "summary": "The date and time the Amazon Redshift event notification subscription was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3161
          },
          "name": "attrSubscriptionCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3274
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-tags"
            },
            "stability": "external",
            "summary": "A list of tag instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3234
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-subscriptionname"
            },
            "remarks": "Constraints:\n\n- Cannot be null, empty, or blank.\n- Must contain from 1 to 255 alphanumeric characters or hyphens.\n- First character must be a letter.\n- Cannot end with a hyphen or contain two consecutive hyphens.",
            "stability": "external",
            "summary": "The name of the event subscription to be created."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3175
          },
          "name": "subscriptionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-enabled"
            },
            "remarks": "set to `true` to activate the subscription, and set to `false` to create the subscription but not activate it.",
            "stability": "external",
            "summary": "A boolean value;"
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3182
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-eventcategories"
            },
            "remarks": "Values: configuration, management, monitoring, security, pending",
            "stability": "external",
            "summary": "Specifies the Amazon Redshift event categories to be published by the event notification subscription."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3191
          },
          "name": "eventCategories",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-severity"
            },
            "remarks": "Values: ERROR, INFO",
            "stability": "external",
            "summary": "Specifies the Amazon Redshift event severity to be published by the event notification subscription."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3200
          },
          "name": "severity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-snstopicarn"
            },
            "remarks": "The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Amazon SNS topic used to transmit the event notifications."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3207
          },
          "name": "snsTopicArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-sourceids"
            },
            "remarks": "All of the objects must be of the same type as was specified in the source type parameter. The event subscription will return only events generated by the specified objects. If not specified, then events are returned for all objects within the source type specified.\n\nExample: my-cluster-1, my-cluster-2\n\nExample: my-snapshot-20131010",
            "stability": "external",
            "summary": "A list of one or more identifiers of Amazon Redshift source objects."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3218
          },
          "name": "sourceIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-sourcetype"
            },
            "remarks": "For example, if you want to be notified of events generated by a cluster, you would set this parameter to cluster. If this value is not specified, events are returned for all Amazon Redshift objects in your AWS account . You must specify a source type in order to specify source IDs.\n\nValid values: cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot, and scheduled-action.",
            "stability": "external",
            "summary": "The type of source that will be generating the events."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3227
          },
          "name": "sourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnEventSubscription"
    },
    "@aws-cdk/aws-redshift.CfnEventSubscriptionProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnEventSubscription`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst cfnEventSubscriptionProps: redshift.CfnEventSubscriptionProps = {\n  subscriptionName: 'subscriptionName',\n\n  // the properties below are optional\n  enabled: false,\n  eventCategories: ['eventCategories'],\n  severity: 'severity',\n  snsTopicArn: 'snsTopicArn',\n  sourceIds: ['sourceIds'],\n  sourceType: 'sourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnEventSubscriptionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 2942
      },
      "name": "CfnEventSubscriptionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-subscriptionname"
            },
            "remarks": "Constraints:\n\n- Cannot be null, empty, or blank.\n- Must contain from 1 to 255 alphanumeric characters or hyphens.\n- First character must be a letter.\n- Cannot end with a hyphen or contain two consecutive hyphens.",
            "stability": "external",
            "summary": "The name of the event subscription to be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2956
          },
          "name": "subscriptionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-enabled"
            },
            "remarks": "set to `true` to activate the subscription, and set to `false` to create the subscription but not activate it.",
            "stability": "external",
            "summary": "A boolean value;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2963
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-eventcategories"
            },
            "remarks": "Values: configuration, management, monitoring, security, pending",
            "stability": "external",
            "summary": "Specifies the Amazon Redshift event categories to be published by the event notification subscription."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2972
          },
          "name": "eventCategories",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-severity"
            },
            "remarks": "Values: ERROR, INFO",
            "stability": "external",
            "summary": "Specifies the Amazon Redshift event severity to be published by the event notification subscription."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2981
          },
          "name": "severity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-snstopicarn"
            },
            "remarks": "The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Amazon SNS topic used to transmit the event notifications."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2988
          },
          "name": "snsTopicArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-sourceids"
            },
            "remarks": "All of the objects must be of the same type as was specified in the source type parameter. The event subscription will return only events generated by the specified objects. If not specified, then events are returned for all objects within the source type specified.\n\nExample: my-cluster-1, my-cluster-2\n\nExample: my-snapshot-20131010",
            "stability": "external",
            "summary": "A list of one or more identifiers of Amazon Redshift source objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 2999
          },
          "name": "sourceIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-sourcetype"
            },
            "remarks": "For example, if you want to be notified of events generated by a cluster, you would set this parameter to cluster. If this value is not specified, events are returned for all Amazon Redshift objects in your AWS account . You must specify a source type in order to specify source IDs.\n\nValid values: cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot, and scheduled-action.",
            "stability": "external",
            "summary": "The type of source that will be generating the events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3008
          },
          "name": "sourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-tags"
            },
            "stability": "external",
            "summary": "A list of tag instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3015
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnEventSubscriptionProps"
    },
    "@aws-cdk/aws-redshift.CfnScheduledAction": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Redshift::ScheduledAction",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a scheduled action. A scheduled action contains a schedule and an Amazon Redshift API action. For example, you can create a schedule of when to run the `ResizeCluster` API operation.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Redshift::ScheduledAction`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\n\ndeclare const targetAction: any;\nconst cfnScheduledAction = new redshift.CfnScheduledAction(this, 'MyCfnScheduledAction', {\n  scheduledActionName: 'scheduledActionName',\n\n  // the properties below are optional\n  enable: false,\n  endTime: 'endTime',\n  iamRole: 'iamRole',\n  schedule: 'schedule',\n  scheduledActionDescription: 'scheduledActionDescription',\n  startTime: 'startTime',\n  targetAction: targetAction,\n});"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnScheduledAction",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Redshift::ScheduledAction`."
        },
        "locationInModule": {
          "filename": "lib/redshift.generated.ts",
          "line": 3548
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.CfnScheduledActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 3442
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3570
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3588
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnScheduledAction",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3446
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NextInvocations"
            },
            "stability": "external",
            "summary": "List of times when the scheduled action will run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3471
          },
          "name": "attrNextInvocations",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "remarks": "For example, `DISABLED` .",
            "stability": "external",
            "summary": "The state of the scheduled action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3477
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3575
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-scheduledactionname"
            },
            "stability": "external",
            "summary": "The name of the scheduled action."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3484
          },
          "name": "scheduledActionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-targetaction"
            },
            "remarks": "\" `{\\\"ResizeCluster\\\":{\\\"NodeType\\\":\\\"ds2.8xlarge\\\",\\\"ClusterIdentifier\\\":\\\"my-test-cluster\\\",\\\"NumberOfNodes\\\":3}}` \".",
            "stability": "external",
            "summary": "A JSON format string of the Amazon Redshift API operation with input parameters."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3539
          },
          "name": "targetAction",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-enable"
            },
            "remarks": "If false, the scheduled action does not trigger. For more information about `state` of the scheduled action, see `ScheduledAction` .",
            "stability": "external",
            "summary": "If true, the schedule is enabled."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3491
          },
          "name": "enable",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-endtime"
            },
            "remarks": "After this time, the scheduled action does not trigger.",
            "stability": "external",
            "summary": "The end time in UTC when the schedule is no longer active."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3498
          },
          "name": "endTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-iamrole"
            },
            "remarks": "This IAM role must have permission to run the Amazon Redshift API operation in the scheduled action. This IAM role must allow the Amazon Redshift scheduler (Principal scheduler.redshift.amazonaws.com) to assume permissions on your behalf. For more information about the IAM role to use with the Amazon Redshift scheduler, see [Using Identity-Based Policies for Amazon Redshift](https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html) in the *Amazon Redshift Cluster Management Guide* .",
            "stability": "external",
            "summary": "The IAM role to assume to run the scheduled action."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3505
          },
          "name": "iamRole",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-schedule"
            },
            "remarks": "Schedule invocations must be separated by at least one hour.\n\nFormat of at expressions is \" `at(yyyy-mm-ddThh:mm:ss)` \". For example, \" `at(2016-03-04T17:27:00)` \".\n\nFormat of cron expressions is \" `cron(Minutes Hours Day-of-month Month Day-of-week Year)` \". For example, \" `cron(0 10 ? * MON *)` \". For more information, see [Cron Expressions](https://docs.aws.amazon.com//AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions) in the *Amazon CloudWatch Events User Guide* .",
            "stability": "external",
            "summary": "The schedule for a one-time (at format) or recurring (cron format) scheduled action."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3516
          },
          "name": "schedule",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-scheduledactiondescription"
            },
            "stability": "external",
            "summary": "The description of the scheduled action."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3523
          },
          "name": "scheduledActionDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-starttime"
            },
            "remarks": "Before this time, the scheduled action does not trigger.",
            "stability": "external",
            "summary": "The start time in UTC when the schedule is active."
          },
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3530
          },
          "name": "startTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnScheduledAction"
    },
    "@aws-cdk/aws-redshift.CfnScheduledActionProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnScheduledAction`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\n\ndeclare const targetAction: any;\nconst cfnScheduledActionProps: redshift.CfnScheduledActionProps = {\n  scheduledActionName: 'scheduledActionName',\n\n  // the properties below are optional\n  enable: false,\n  endTime: 'endTime',\n  iamRole: 'iamRole',\n  schedule: 'schedule',\n  scheduledActionDescription: 'scheduledActionDescription',\n  startTime: 'startTime',\n  targetAction: targetAction,\n};"
      },
      "fqn": "@aws-cdk/aws-redshift.CfnScheduledActionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/redshift.generated.ts",
        "line": 3300
      },
      "name": "CfnScheduledActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-scheduledactionname"
            },
            "stability": "external",
            "summary": "The name of the scheduled action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3307
          },
          "name": "scheduledActionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-enable"
            },
            "remarks": "If false, the scheduled action does not trigger. For more information about `state` of the scheduled action, see `ScheduledAction` .",
            "stability": "external",
            "summary": "If true, the schedule is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3314
          },
          "name": "enable",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-endtime"
            },
            "remarks": "After this time, the scheduled action does not trigger.",
            "stability": "external",
            "summary": "The end time in UTC when the schedule is no longer active."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3321
          },
          "name": "endTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-iamrole"
            },
            "remarks": "This IAM role must have permission to run the Amazon Redshift API operation in the scheduled action. This IAM role must allow the Amazon Redshift scheduler (Principal scheduler.redshift.amazonaws.com) to assume permissions on your behalf. For more information about the IAM role to use with the Amazon Redshift scheduler, see [Using Identity-Based Policies for Amazon Redshift](https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html) in the *Amazon Redshift Cluster Management Guide* .",
            "stability": "external",
            "summary": "The IAM role to assume to run the scheduled action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3328
          },
          "name": "iamRole",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-schedule"
            },
            "remarks": "Schedule invocations must be separated by at least one hour.\n\nFormat of at expressions is \" `at(yyyy-mm-ddThh:mm:ss)` \". For example, \" `at(2016-03-04T17:27:00)` \".\n\nFormat of cron expressions is \" `cron(Minutes Hours Day-of-month Month Day-of-week Year)` \". For example, \" `cron(0 10 ? * MON *)` \". For more information, see [Cron Expressions](https://docs.aws.amazon.com//AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions) in the *Amazon CloudWatch Events User Guide* .",
            "stability": "external",
            "summary": "The schedule for a one-time (at format) or recurring (cron format) scheduled action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3339
          },
          "name": "schedule",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-scheduledactiondescription"
            },
            "stability": "external",
            "summary": "The description of the scheduled action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3346
          },
          "name": "scheduledActionDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-starttime"
            },
            "remarks": "Before this time, the scheduled action does not trigger.",
            "stability": "external",
            "summary": "The start time in UTC when the schedule is active."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3353
          },
          "name": "startTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-targetaction"
            },
            "remarks": "\" `{\\\"ResizeCluster\\\":{\\\"NodeType\\\":\\\"ds2.8xlarge\\\",\\\"ClusterIdentifier\\\":\\\"my-test-cluster\\\",\\\"NumberOfNodes\\\":3}}` \".",
            "stability": "external",
            "summary": "A JSON format string of the Amazon Redshift API operation with input parameters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/redshift.generated.ts",
            "line": 3362
          },
          "name": "targetAction",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/redshift.generated:CfnScheduledActionProps"
    },
    "@aws-cdk/aws-redshift.Cluster": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "resource": "AWS::Redshift::Cluster"
        },
        "example": "import * as ec2 from '@aws-cdk/aws-ec2';\n\nconst vpc = new ec2.Vpc(this, 'Vpc');\nconst cluster = new Cluster(this, 'Redshift', {\n  masterUser: {\n    masterUsername: 'admin',\n  },\n  vpc\n});",
        "stability": "experimental",
        "summary": "Create a Redshift cluster a given number of nodes."
      },
      "fqn": "@aws-cdk/aws-redshift.Cluster",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/cluster.ts",
          "line": 413
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.ClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-redshift.ICluster"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 362
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing DatabaseCluster from properties."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 366
          },
          "name": "fromClusterAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-redshift.ClusterAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-redshift.ICluster"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds the multi user rotation to this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 538
          },
          "name": "addRotationMultiUser",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-redshift.RotationMultiUserOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretRotation"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds the single user rotation of the master password to this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 514
          },
          "name": "addRotationSingleUser",
          "parameters": [
            {
              "docs": {
                "summary": "Specifies the number of days after the previous rotation before Secrets Manager triggers the next automatic rotation."
              },
              "name": "automaticallyAfter",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretRotation"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Renders the secret attachment target specifications."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 349
          },
          "name": "asSecretAttachmentTarget",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretAttachmentTargetProps"
            }
          }
        }
      ],
      "name": "Cluster",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The endpoint to use for read/write operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 388
          },
          "name": "clusterEndpoint",
          "overrides": "@aws-cdk/aws-redshift.ICluster",
          "type": {
            "fqn": "@aws-cdk/aws-redshift.Endpoint"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Identifier of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 383
          },
          "name": "clusterName",
          "overrides": "@aws-cdk/aws-redshift.ICluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Access to the network connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 393
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The secret attached to this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 398
          },
          "name": "secret",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ],
      "symbolId": "lib/cluster:Cluster"
    },
    "@aws-cdk/aws-redshift.ClusterAttributes": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties that describe an existing cluster instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as redshift from '@aws-cdk/aws-redshift';\n\ndeclare const securityGroup: ec2.SecurityGroup;\nconst clusterAttributes: redshift.ClusterAttributes = {\n  clusterEndpointAddress: 'clusterEndpointAddress',\n  clusterEndpointPort: 123,\n  clusterName: 'clusterName',\n\n  // the properties below are optional\n  securityGroups: [securityGroup],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-redshift.ClusterAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 150
      },
      "name": "ClusterAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Cluster endpoint address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 166
          },
          "name": "clusterEndpointAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Cluster endpoint port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 171
          },
          "name": "clusterEndpointPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Identifier for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 161
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no security groups will be attached to the import",
            "stability": "experimental",
            "summary": "The security groups of the redshift cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 156
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cluster:ClusterAttributes"
    },
    "@aws-cdk/aws-redshift.ClusterParameterGroup": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Redshift::ClusterParameterGroup",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "experimental",
        "summary": "A cluster parameter group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst clusterParameterGroup = new redshift.ClusterParameterGroup(this, 'MyClusterParameterGroup', {\n  parameters: {\n    parametersKey: 'parameters',\n  },\n\n  // the properties below are optional\n  description: 'description',\n});"
      },
      "fqn": "@aws-cdk/aws-redshift.ClusterParameterGroup",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/parameter-group.ts",
          "line": 65
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.ClusterParameterGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-redshift.IClusterParameterGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/parameter-group.ts",
        "line": 49
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Imports a parameter group."
          },
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 53
          },
          "name": "fromClusterParameterGroupName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "clusterParameterGroupName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-redshift.IClusterParameterGroup"
            }
          },
          "static": true
        }
      ],
      "name": "ClusterParameterGroup",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 63
          },
          "name": "clusterParameterGroupName",
          "overrides": "@aws-cdk/aws-redshift.IClusterParameterGroup",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/parameter-group:ClusterParameterGroup"
    },
    "@aws-cdk/aws-redshift.ClusterParameterGroupProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a parameter group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst clusterParameterGroupProps: redshift.ClusterParameterGroupProps = {\n  parameters: {\n    parametersKey: 'parameters',\n  },\n\n  // the properties below are optional\n  description: 'description',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-redshift.ClusterParameterGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/parameter-group.ts",
        "line": 30
      },
      "name": "ClusterParameterGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The parameters in this parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 41
          },
          "name": "parameters",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "a CDK generated description",
            "stability": "experimental",
            "summary": "Description for this parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 36
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/parameter-group:ClusterParameterGroupProps"
    },
    "@aws-cdk/aws-redshift.ClusterProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as ec2 from '@aws-cdk/aws-ec2';\n\nconst vpc = new ec2.Vpc(this, 'Vpc');\nconst cluster = new Cluster(this, 'Redshift', {\n  masterUser: {\n    masterUsername: 'admin',\n  },\n  vpc\n});",
        "stability": "experimental",
        "summary": "Properties for a new database cluster."
      },
      "fqn": "@aws-cdk/aws-redshift.ClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 178
      },
      "name": "ClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Username and password for the administrative user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 279
          },
          "name": "masterUser",
          "type": {
            "fqn": "@aws-cdk/aws-redshift.Login"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC to place the cluster in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 253
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A name is automatically generated.",
            "stability": "experimental",
            "summary": "An optional identifier for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 185
          },
          "name": "clusterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{@link ClusterType.MULTI_NODE}",
            "stability": "experimental",
            "summary": "Settings for the individual instances that are launched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 216
          },
          "name": "clusterType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-redshift.ClusterType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default_db",
            "stability": "experimental",
            "summary": "Name of a database which is automatically created inside the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 294
          },
          "name": "defaultDatabaseName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to enable encryption of data at rest in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 230
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- AWS-managed key, if encryption at rest is enabled",
            "stability": "experimental",
            "summary": "The KMS key to use for encryption of data at rest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 237
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Logs",
            "remarks": "Logging information includes queries and connection attempts, for the specified Amazon Redshift cluster.",
            "stability": "experimental",
            "summary": "Bucket to send logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 302
          },
          "name": "loggingBucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no prefix",
            "stability": "experimental",
            "summary": "Prefix used for logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 309
          },
          "name": "loggingKeyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{@link NodeType.DC2_LARGE}",
            "stability": "experimental",
            "summary": "The node type to be provisioned for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 209
          },
          "name": "nodeType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-redshift.NodeType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 2 if `clusterType` is ClusterType.MULTI_NODE, undefined otherwise",
            "remarks": "Value must be at least 2 and no more than 100.",
            "stability": "experimental",
            "summary": "Number of compute nodes in the cluster. Only specify this property for multi-node clusters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 202
          },
          "name": "numberOfNodes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No parameter group.",
            "stability": "experimental",
            "summary": "Additional parameters to pass to the database engine https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 193
          },
          "name": "parameterGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-redshift.IClusterParameterGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The default for the engine is used.",
            "stability": "experimental",
            "summary": "What port to listen on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 223
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 30-minute window selected at random from an 8-hour block of time for\neach AWS Region, occurring on a random day of the week.",
            "remarks": "Example: 'Sun:23:45-Mon:00:15'",
            "see": "https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance",
            "stability": "experimental",
            "summary": "A preferred maintenance window day/time range. Should be specified as a range ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 248
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Whether to make cluster publicly accessible."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 324
          },
          "name": "publiclyAccessible",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.RETAIN",
            "stability": "experimental",
            "summary": "The removal policy to apply when the cluster and its instances are removed from the stack or replaced during an update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 317
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No role is attached to the cluster.",
            "remarks": "Specify a maximum of 10 roles.",
            "stability": "experimental",
            "summary": "A list of AWS Identity and Access Management (IAM) role that can be used by the cluster to access other AWS services."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 287
          },
          "name": "roles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.IRole"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new security group is created.",
            "stability": "experimental",
            "summary": "Security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 267
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new subnet group will be created.",
            "stability": "experimental",
            "summary": "A cluster subnet group to use with this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 274
          },
          "name": "subnetGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-redshift.IClusterSubnetGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- private subnets",
            "stability": "experimental",
            "summary": "Where to place the instances within the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 260
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/cluster:ClusterProps"
    },
    "@aws-cdk/aws-redshift.ClusterSubnetGroup": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Redshift::ClusterSubnetGroup",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "experimental",
        "summary": "Class for creating a Redshift cluster subnet group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as redshift from '@aws-cdk/aws-redshift';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\nconst clusterSubnetGroup = new redshift.ClusterSubnetGroup(this, 'MyClusterSubnetGroup', {\n  description: 'description',\n  vpc: vpc,\n\n  // the properties below are optional\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-redshift.ClusterSubnetGroup",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/subnet-group.ts",
          "line": 65
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.ClusterSubnetGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-redshift.IClusterSubnetGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/subnet-group.ts",
        "line": 52
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Imports an existing subnet group by name."
          },
          "locationInModule": {
            "filename": "lib/subnet-group.ts",
            "line": 57
          },
          "name": "fromClusterSubnetGroupName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "clusterSubnetGroupName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-redshift.IClusterSubnetGroup"
            }
          },
          "static": true
        }
      ],
      "name": "ClusterSubnetGroup",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the cluster subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/subnet-group.ts",
            "line": 63
          },
          "name": "clusterSubnetGroupName",
          "overrides": "@aws-cdk/aws-redshift.IClusterSubnetGroup",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/subnet-group:ClusterSubnetGroup"
    },
    "@aws-cdk/aws-redshift.ClusterSubnetGroupProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for creating a ClusterSubnetGroup.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as redshift from '@aws-cdk/aws-redshift';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\nconst clusterSubnetGroupProps: redshift.ClusterSubnetGroupProps = {\n  description: 'description',\n  vpc: vpc,\n\n  // the properties below are optional\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-redshift.ClusterSubnetGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/subnet-group.ts",
        "line": 20
      },
      "name": "ClusterSubnetGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Description of the subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/subnet-group.ts",
            "line": 24
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC to place the subnet group in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/subnet-group.ts",
            "line": 29
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.RETAIN",
            "stability": "experimental",
            "summary": "The removal policy to apply when the subnet group are removed from the stack or replaced during an update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/subnet-group.ts",
            "line": 44
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- private subnets",
            "stability": "experimental",
            "summary": "Which subnets within the VPC to associate with this group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/subnet-group.ts",
            "line": 36
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/subnet-group:ClusterSubnetGroupProps"
    },
    "@aws-cdk/aws-redshift.ClusterType": {
      "assembly": "@aws-cdk/aws-redshift",
      "docs": {
        "remarks": "Used by {@link ClusterProps.clusterType}",
        "stability": "experimental",
        "summary": "What cluster type to use."
      },
      "fqn": "@aws-cdk/aws-redshift.ClusterType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 61
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "single-node cluster, the {@link ClusterProps.numberOfNodes} parameter is not required."
          },
          "name": "SINGLE_NODE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "multi-node cluster, set the amount of nodes using {@link ClusterProps.numberOfNodes} parameter."
          },
          "name": "MULTI_NODE"
        }
      ],
      "name": "ClusterType",
      "symbolId": "lib/cluster:ClusterType"
    },
    "@aws-cdk/aws-redshift.Column": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A column in a Redshift table.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst column: redshift.Column = {\n  dataType: 'dataType',\n  name: 'name',\n\n  // the properties below are optional\n  distKey: false,\n  sortKey: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-redshift.Column",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/table.ts",
        "line": 60
      },
      "name": "Column",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The data type of the column."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 69
          },
          "name": "dataType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the column."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 64
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- column is not DISTKEY",
            "stability": "experimental",
            "summary": "Boolean value that indicates whether the column is to be configured as DISTKEY."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 76
          },
          "name": "distKey",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- column is not a SORTKEY",
            "stability": "experimental",
            "summary": "Boolean value that indicates whether the column is to be configured as SORTKEY."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 83
          },
          "name": "sortKey",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/table:Column"
    },
    "@aws-cdk/aws-redshift.DatabaseOptions": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for accessing a Redshift database.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const cluster: redshift.Cluster;\ndeclare const secret: secretsmanager.Secret;\nconst databaseOptions: redshift.DatabaseOptions = {\n  cluster: cluster,\n  databaseName: 'databaseName',\n\n  // the properties below are optional\n  adminUser: secret,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-redshift.DatabaseOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/database-options.ts",
        "line": 7
      },
      "name": "DatabaseOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The cluster containing the database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-options.ts",
            "line": 11
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-redshift.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-options.ts",
            "line": 16
          },
          "name": "databaseName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the admin secret is taken from the cluster",
            "remarks": "Secret JSON schema: `{ username: string; password: string }`.",
            "stability": "experimental",
            "summary": "The secret containing credentials to a Redshift user with administrator privileges."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-options.ts",
            "line": 25
          },
          "name": "adminUser",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ],
      "symbolId": "lib/database-options:DatabaseOptions"
    },
    "@aws-cdk/aws-redshift.DatabaseSecret": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/aws-secretsmanager.Secret",
      "docs": {
        "custom": {
          "resource": "AWS::SecretsManager::Secret",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "experimental",
        "summary": "A database secret.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as redshift from '@aws-cdk/aws-redshift';\n\ndeclare const key: kms.Key;\nconst databaseSecret = new redshift.DatabaseSecret(this, 'MyDatabaseSecret', {\n  username: 'username',\n\n  // the properties below are optional\n  encryptionKey: key,\n});"
      },
      "fqn": "@aws-cdk/aws-redshift.DatabaseSecret",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/database-secret.ts",
          "line": 28
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.DatabaseSecretProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/database-secret.ts",
        "line": 27
      },
      "name": "DatabaseSecret",
      "symbolId": "lib/database-secret:DatabaseSecret"
    },
    "@aws-cdk/aws-redshift.DatabaseSecretProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Construction properties for a DatabaseSecret.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as redshift from '@aws-cdk/aws-redshift';\n\ndeclare const key: kms.Key;\nconst databaseSecretProps: redshift.DatabaseSecretProps = {\n  username: 'username',\n\n  // the properties below are optional\n  encryptionKey: key,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-redshift.DatabaseSecretProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/database-secret.ts",
        "line": 8
      },
      "name": "DatabaseSecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-secret.ts",
            "line": 12
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "default master key",
            "stability": "experimental",
            "summary": "The KMS key to use to encrypt the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-secret.ts",
            "line": 19
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ],
      "symbolId": "lib/database-secret:DatabaseSecretProps"
    },
    "@aws-cdk/aws-redshift.Endpoint": {
      "assembly": "@aws-cdk/aws-redshift",
      "docs": {
        "remarks": "Consists of a combination of hostname and port.",
        "stability": "experimental",
        "summary": "Connection endpoint of a redshift cluster.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as redshift from '@aws-cdk/aws-redshift';\nconst endpoint = new redshift.Endpoint('address', 123);",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-redshift.Endpoint",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/endpoint.ts",
          "line": 24
        },
        "parameters": [
          {
            "name": "address",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "port",
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/endpoint.ts",
        "line": 8
      },
      "name": "Endpoint",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The hostname of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 12
          },
          "name": "hostname",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The port of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 17
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The combination of \"HOSTNAME:PORT\" for this endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 22
          },
          "name": "socketAddress",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/endpoint:Endpoint"
    },
    "@aws-cdk/aws-redshift.ICluster": {
      "assembly": "@aws-cdk/aws-redshift",
      "docs": {
        "remarks": "Implemented by {@link Cluster} via {@link ClusterBase}.",
        "stability": "experimental",
        "summary": "Create a Redshift Cluster with a given number of nodes."
      },
      "fqn": "@aws-cdk/aws-redshift.ICluster",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-ec2.IConnectable",
        "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 131
      },
      "name": "ICluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "EndpointAddress,EndpointPort"
            },
            "stability": "experimental",
            "summary": "The endpoint to use for read/write operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 144
          },
          "name": "clusterEndpoint",
          "type": {
            "fqn": "@aws-cdk/aws-redshift.Endpoint"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "ClusterName"
            },
            "stability": "experimental",
            "summary": "Name of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 137
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cluster:ICluster"
    },
    "@aws-cdk/aws-redshift.IClusterParameterGroup": {
      "assembly": "@aws-cdk/aws-redshift",
      "docs": {
        "stability": "experimental",
        "summary": "A parameter group."
      },
      "fqn": "@aws-cdk/aws-redshift.IClusterParameterGroup",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/parameter-group.ts",
        "line": 8
      },
      "name": "IClusterParameterGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of this parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 14
          },
          "name": "clusterParameterGroupName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/parameter-group:IClusterParameterGroup"
    },
    "@aws-cdk/aws-redshift.IClusterSubnetGroup": {
      "assembly": "@aws-cdk/aws-redshift",
      "docs": {
        "stability": "experimental",
        "summary": "Interface for a cluster subnet group."
      },
      "fqn": "@aws-cdk/aws-redshift.IClusterSubnetGroup",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/subnet-group.ts",
        "line": 9
      },
      "name": "IClusterSubnetGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of the cluster subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/subnet-group.ts",
            "line": 14
          },
          "name": "clusterSubnetGroupName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/subnet-group:IClusterSubnetGroup"
    },
    "@aws-cdk/aws-redshift.ITable": {
      "assembly": "@aws-cdk/aws-redshift",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a table in a Redshift database."
      },
      "fqn": "@aws-cdk/aws-redshift.ITable",
      "interfaces": [
        "@aws-cdk/core.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/table.ts",
        "line": 127
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Grant a user privilege to access this table."
          },
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 151
          },
          "name": "grant",
          "parameters": [
            {
              "name": "user",
              "type": {
                "fqn": "@aws-cdk/aws-redshift.IUser"
              }
            },
            {
              "name": "actions",
              "type": {
                "fqn": "@aws-cdk/aws-redshift.TableAction"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "ITable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The cluster where the table is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 141
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-redshift.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the database where the table is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 146
          },
          "name": "databaseName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The columns of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 136
          },
          "name": "tableColumns",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-redshift.Column"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Name of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 131
          },
          "name": "tableName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/table:ITable"
    },
    "@aws-cdk/aws-redshift.IUser": {
      "assembly": "@aws-cdk/aws-redshift",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a user in a Redshift database."
      },
      "fqn": "@aws-cdk/aws-redshift.IUser",
      "interfaces": [
        "@aws-cdk/core.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user.ts",
        "line": 49
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Grant this user privilege to access a table."
          },
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 73
          },
          "name": "addTablePrivileges",
          "parameters": [
            {
              "name": "table",
              "type": {
                "fqn": "@aws-cdk/aws-redshift.ITable"
              }
            },
            {
              "name": "actions",
              "type": {
                "fqn": "@aws-cdk/aws-redshift.TableAction"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "IUser",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The cluster where the table is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 63
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-redshift.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the database where the table is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 68
          },
          "name": "databaseName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The password of the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 58
          },
          "name": "password",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 53
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user:IUser"
    },
    "@aws-cdk/aws-redshift.Login": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=cluster infused"
        },
        "example": "\nconst user = new User(this, 'User', {\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\ncluster.addRotationMultiUser('MultiUserRotation', {\n  secret: user.secret,\n});",
        "stability": "experimental",
        "summary": "Username and password combination."
      },
      "fqn": "@aws-cdk/aws-redshift.Login",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 75
      },
      "name": "Login",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 79
          },
          "name": "masterUsername",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "default master key",
            "stability": "experimental",
            "summary": "KMS encryption key to encrypt the generated secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 95
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "a Secrets Manager generated password",
            "remarks": "Do not put passwords in your CDK code directly.",
            "stability": "experimental",
            "summary": "Password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 88
          },
          "name": "masterPassword",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        }
      ],
      "symbolId": "lib/cluster:Login"
    },
    "@aws-cdk/aws-redshift.NodeType": {
      "assembly": "@aws-cdk/aws-redshift",
      "docs": {
        "stability": "experimental",
        "summary": "Possible Node Types to use in the cluster used for defining {@link ClusterProps.nodeType}."
      },
      "fqn": "@aws-cdk/aws-redshift.NodeType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 18
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "ds2.xlarge."
          },
          "name": "DS2_XLARGE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "ds2.8xlarge."
          },
          "name": "DS2_8XLARGE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "dc1.large."
          },
          "name": "DC1_LARGE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "dc1.8xlarge."
          },
          "name": "DC1_8XLARGE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "dc2.large."
          },
          "name": "DC2_LARGE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "dc2.8xlarge."
          },
          "name": "DC2_8XLARGE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "ra3.xlplus."
          },
          "name": "RA3_XLPLUS"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "ra3.4xlarge."
          },
          "name": "RA3_4XLARGE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "ra3.16xlarge."
          },
          "name": "RA3_16XLARGE"
        }
      ],
      "name": "NodeType",
      "symbolId": "lib/cluster:NodeType"
    },
    "@aws-cdk/aws-redshift.RotationMultiUserOptions": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=cluster infused"
        },
        "example": "\nconst user = new User(this, 'User', {\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\ncluster.addRotationMultiUser('MultiUserRotation', {\n  secret: user.secret,\n});",
        "stability": "experimental",
        "summary": "Options to add the multi user rotation."
      },
      "fqn": "@aws-cdk/aws-redshift.RotationMultiUserOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 101
      },
      "name": "RotationMultiUserOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "It must be a JSON string with the following format:\n```\n{\n   \"engine\": <required: database engine>,\n   \"host\": <required: instance host name>,\n   \"username\": <required: username>,\n   \"password\": <required: password>,\n   \"dbname\": <optional: database name>,\n   \"port\": <optional: if not specified, default port will be used>,\n   \"masterarn\": <required: the arn of the master secret which will be used to create users/change passwords>\n}\n```",
            "stability": "experimental",
            "summary": "The secret to rotate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 116
          },
          "name": "secret",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.days(30)",
            "stability": "experimental",
            "summary": "Specifies the number of days after the previous rotation before Secrets Manager triggers the next automatic rotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 124
          },
          "name": "automaticallyAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/cluster:RotationMultiUserOptions"
    },
    "@aws-cdk/aws-redshift.Table": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=cluster infused"
        },
        "example": "new Table(this, 'Table', {\n  tableColumns: [\n    { name: 'col1', dataType: 'varchar(4)', distKey: true },\n    { name: 'col2', dataType: 'float' },\n  ],\n  cluster: cluster,\n  databaseName: 'databaseName',\n  distStyle: TableDistStyle.KEY,\n});",
        "stability": "experimental",
        "summary": "A table in a Redshift cluster."
      },
      "fqn": "@aws-cdk/aws-redshift.Table",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/table.ts",
          "line": 212
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.TableProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-redshift.ITable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/table.ts",
        "line": 192
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Specify a Redshift table using a table name and schema that already exists."
          },
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 196
          },
          "name": "fromTableAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-redshift.TableAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-redshift.ITable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be destroyed (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).\n\nThis resource is retained by default.",
            "stability": "experimental",
            "summary": "Apply the given removal policy to this resource."
          },
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 258
          },
          "name": "applyRemovalPolicy",
          "parameters": [
            {
              "name": "policy",
              "type": {
                "fqn": "@aws-cdk/core.RemovalPolicy"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grant a user privilege to access this table."
          },
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 184
          },
          "name": "grant",
          "overrides": "@aws-cdk/aws-redshift.ITable",
          "parameters": [
            {
              "name": "user",
              "type": {
                "fqn": "@aws-cdk/aws-redshift.IUser"
              }
            },
            {
              "name": "actions",
              "type": {
                "fqn": "@aws-cdk/aws-redshift.TableAction"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "Table",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The cluster where the table is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 207
          },
          "name": "cluster",
          "overrides": "@aws-cdk/aws-redshift.ITable",
          "type": {
            "fqn": "@aws-cdk/aws-redshift.ICluster"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the database where the table is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 208
          },
          "name": "databaseName",
          "overrides": "@aws-cdk/aws-redshift.ITable",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The columns of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 206
          },
          "name": "tableColumns",
          "overrides": "@aws-cdk/aws-redshift.ITable",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-redshift.Column"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Name of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 205
          },
          "name": "tableName",
          "overrides": "@aws-cdk/aws-redshift.ITable",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/table:Table"
    },
    "@aws-cdk/aws-redshift.TableAction": {
      "assembly": "@aws-cdk/aws-redshift",
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=cluster infused"
        },
        "example": "const databaseName = 'databaseName';\nconst username = 'myuser'\nconst tableName = 'mytable'\n\nconst user = new User(this, 'User', {\n  username: username,\n  cluster: cluster,\n  databaseName: databaseName,\n});\nconst table = new Table(this, 'Table', {\n  tableColumns: [{ name: 'col1', dataType: 'varchar(4)' }, { name: 'col2', dataType: 'float' }],\n  cluster: cluster,\n  databaseName: databaseName,\n});\ntable.grant(user, TableAction.INSERT);",
        "stability": "experimental",
        "summary": "An action that a Redshift user can be granted privilege to perform on a table."
      },
      "fqn": "@aws-cdk/aws-redshift.TableAction",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/table.ts",
        "line": 18
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grants privilege to select data from a table or view using a SELECT statement."
          },
          "name": "SELECT"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grants privilege to load data into a table using an INSERT statement or a COPY statement."
          },
          "name": "INSERT"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grants privilege to update a table column using an UPDATE statement."
          },
          "name": "UPDATE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grants privilege to delete a data row from a table."
          },
          "name": "DELETE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grants privilege to drop a table."
          },
          "name": "DROP"
        },
        {
          "docs": {
            "remarks": "You need to grant this privilege on both the referenced table and the referencing table; otherwise, the user can't create the constraint.",
            "stability": "experimental",
            "summary": "Grants privilege to create a foreign key constraint."
          },
          "name": "REFERENCES"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grants all available privileges at once to the specified user or user group."
          },
          "name": "ALL"
        }
      ],
      "name": "TableAction",
      "symbolId": "lib/table:TableAction"
    },
    "@aws-cdk/aws-redshift.TableAttributes": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=cluster infused"
        },
        "example": "const databaseName = 'databaseName';\nconst username = 'myuser'\nconst tableName = 'mytable'\n\nconst user = User.fromUserAttributes(this, 'User', {\n  username: username,\n  password: SecretValue.unsafePlainText('NOT_FOR_PRODUCTION'),\n  cluster: cluster,\n  databaseName: databaseName,\n});\nconst table = Table.fromTableAttributes(this, 'Table', {\n  tableName: tableName,\n  tableColumns: [{ name: 'col1', dataType: 'varchar(4)' }, { name: 'col2', dataType: 'float' }],\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\ntable.grant(user, TableAction.INSERT);",
        "stability": "experimental",
        "summary": "A full specification of a Redshift table that can be used to import it fluently into the CDK application."
      },
      "fqn": "@aws-cdk/aws-redshift.TableAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/table.ts",
        "line": 157
      },
      "name": "TableAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The cluster where the table is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 171
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-redshift.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the database where the table is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 176
          },
          "name": "databaseName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The columns of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 166
          },
          "name": "tableColumns",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-redshift.Column"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Name of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 161
          },
          "name": "tableName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/table:TableAttributes"
    },
    "@aws-cdk/aws-redshift.TableDistStyle": {
      "assembly": "@aws-cdk/aws-redshift",
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=cluster infused"
        },
        "example": "new Table(this, 'Table', {\n  tableColumns: [\n    { name: 'col1', dataType: 'varchar(4)', distKey: true },\n    { name: 'col2', dataType: 'float' },\n  ],\n  cluster: cluster,\n  databaseName: 'databaseName',\n  distStyle: TableDistStyle.KEY,\n});",
        "stability": "experimental",
        "summary": "The data distribution style of a table."
      },
      "fqn": "@aws-cdk/aws-redshift.TableDistStyle",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/table.ts",
        "line": 299
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Amazon Redshift assigns an optimal distribution style based on the table data."
          },
          "name": "AUTO"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The data in the table is spread evenly across the nodes in a cluster in a round-robin distribution."
          },
          "name": "EVEN"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The data is distributed by the values in the DISTKEY column."
          },
          "name": "KEY"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A copy of the entire table is distributed to every node."
          },
          "name": "ALL"
        }
      ],
      "name": "TableDistStyle",
      "symbolId": "lib/table:TableDistStyle"
    },
    "@aws-cdk/aws-redshift.TableProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=cluster infused"
        },
        "example": "new Table(this, 'Table', {\n  tableColumns: [\n    { name: 'col1', dataType: 'varchar(4)', distKey: true },\n    { name: 'col2', dataType: 'float' },\n  ],\n  cluster: cluster,\n  databaseName: 'databaseName',\n  distStyle: TableDistStyle.KEY,\n});",
        "stability": "experimental",
        "summary": "Properties for configuring a Redshift table."
      },
      "fqn": "@aws-cdk/aws-redshift.TableProps",
      "interfaces": [
        "@aws-cdk/aws-redshift.DatabaseOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/table.ts",
        "line": 89
      },
      "name": "TableProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The columns of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 100
          },
          "name": "tableColumns",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-redshift.Column"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "TableDistStyle.AUTO",
            "stability": "experimental",
            "summary": "The distribution style of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 107
          },
          "name": "distStyle",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-redshift.TableDistStyle"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "cdk.RemovalPolicy.Retain",
            "stability": "experimental",
            "summary": "The policy to apply when this resource is removed from the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 121
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "TableSortStyle.AUTO if no sort key is specified, TableSortStyle.COMPOUND if a sort key is specified",
            "stability": "experimental",
            "summary": "The sort style of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 114
          },
          "name": "sortStyle",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-redshift.TableSortStyle"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a name is generated",
            "stability": "experimental",
            "summary": "The name of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table.ts",
            "line": 95
          },
          "name": "tableName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/table:TableProps"
    },
    "@aws-cdk/aws-redshift.TableSortStyle": {
      "assembly": "@aws-cdk/aws-redshift",
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=cluster infused"
        },
        "example": "new Table(this, 'Table', {\n  tableColumns: [\n    { name: 'col1', dataType: 'varchar(4)', sortKey: true },\n    { name: 'col2', dataType: 'float', sortKey: true },\n  ],\n  cluster: cluster,\n  databaseName: 'databaseName',\n  sortStyle: TableSortStyle.COMPOUND,\n});",
        "stability": "experimental",
        "summary": "The sort style of a table."
      },
      "fqn": "@aws-cdk/aws-redshift.TableSortStyle",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/table.ts",
        "line": 324
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Amazon Redshift assigns an optimal sort key based on the table data."
          },
          "name": "AUTO"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Specifies that the data is sorted using a compound key made up of all of the listed columns, in the order they are listed."
          },
          "name": "COMPOUND"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Specifies that the data is sorted using an interleaved sort key."
          },
          "name": "INTERLEAVED"
        }
      ],
      "name": "TableSortStyle",
      "symbolId": "lib/table:TableSortStyle"
    },
    "@aws-cdk/aws-redshift.User": {
      "assembly": "@aws-cdk/aws-redshift",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=cluster infused"
        },
        "example": "\nconst user = new User(this, 'User', {\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\ncluster.addRotationMultiUser('MultiUserRotation', {\n  secret: user.secret,\n});",
        "stability": "experimental",
        "summary": "A user in a Redshift cluster."
      },
      "fqn": "@aws-cdk/aws-redshift.User",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/user.ts",
          "line": 149
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-redshift.UserProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-redshift.IUser"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user.ts",
        "line": 121
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Specify a Redshift user using credentials that already exist."
          },
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 125
          },
          "name": "fromUserAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-redshift.UserAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-redshift.IUser"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grant this user privilege to access a table."
          },
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 106
          },
          "name": "addTablePrivileges",
          "overrides": "@aws-cdk/aws-redshift.IUser",
          "parameters": [
            {
              "name": "table",
              "type": {
                "fqn": "@aws-cdk/aws-redshift.ITable"
              }
            },
            {
              "name": "actions",
              "type": {
                "fqn": "@aws-cdk/aws-redshift.TableAction"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be destroyed (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).\n\nThis resource is destroyed by default.",
            "stability": "experimental",
            "summary": "Apply the given removal policy to this resource."
          },
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 191
          },
          "name": "applyRemovalPolicy",
          "parameters": [
            {
              "name": "policy",
              "type": {
                "fqn": "@aws-cdk/core.RemovalPolicy"
              }
            }
          ]
        }
      ],
      "name": "User",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The cluster where the table is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 137
          },
          "name": "cluster",
          "overrides": "@aws-cdk/aws-redshift.IUser",
          "type": {
            "fqn": "@aws-cdk/aws-redshift.ICluster"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the database where the table is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 138
          },
          "name": "databaseName",
          "overrides": "@aws-cdk/aws-redshift.IUser",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The password of the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 136
          },
          "name": "password",
          "overrides": "@aws-cdk/aws-redshift.IUser",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The Secrets Manager secret of the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 145
          },
          "name": "secret",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 135
          },
          "name": "username",
          "overrides": "@aws-cdk/aws-redshift.IUser",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 139
          },
          "name": "databaseProps",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-redshift.DatabaseOptions"
          }
        }
      ],
      "symbolId": "lib/user:User"
    },
    "@aws-cdk/aws-redshift.UserAttributes": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=cluster infused"
        },
        "example": "const databaseName = 'databaseName';\nconst username = 'myuser'\nconst tableName = 'mytable'\n\nconst user = User.fromUserAttributes(this, 'User', {\n  username: username,\n  password: SecretValue.unsafePlainText('NOT_FOR_PRODUCTION'),\n  cluster: cluster,\n  databaseName: databaseName,\n});\nconst table = Table.fromTableAttributes(this, 'Table', {\n  tableName: tableName,\n  tableColumns: [{ name: 'col1', dataType: 'varchar(4)' }, { name: 'col2', dataType: 'float' }],\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\ntable.grant(user, TableAction.INSERT);",
        "stability": "experimental",
        "summary": "A full specification of a Redshift user that can be used to import it fluently into the CDK application."
      },
      "fqn": "@aws-cdk/aws-redshift.UserAttributes",
      "interfaces": [
        "@aws-cdk/aws-redshift.DatabaseOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user.ts",
        "line": 79
      },
      "name": "UserAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Do not put passwords in CDK code directly.",
            "stability": "experimental",
            "summary": "The password of the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 90
          },
          "name": "password",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 83
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user:UserAttributes"
    },
    "@aws-cdk/aws-redshift.UserProps": {
      "assembly": "@aws-cdk/aws-redshift",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=cluster infused"
        },
        "example": "\nconst user = new User(this, 'User', {\n  cluster: cluster,\n  databaseName: 'databaseName',\n});\ncluster.addRotationMultiUser('MultiUserRotation', {\n  secret: user.secret,\n});",
        "stability": "experimental",
        "summary": "Properties for configuring a Redshift user."
      },
      "fqn": "@aws-cdk/aws-redshift.UserProps",
      "interfaces": [
        "@aws-cdk/aws-redshift.DatabaseOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user.ts",
        "line": 21
      },
      "name": "UserProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- the default AWS managed key is used",
            "stability": "experimental",
            "summary": "KMS key to encrypt the generated secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 36
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "cdk.RemovalPolicy.Destroy",
            "stability": "experimental",
            "summary": "The policy to apply when this resource is removed from the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 43
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a name is generated",
            "remarks": "For valid values, see: https://docs.aws.amazon.com/redshift/latest/dg/r_names.html",
            "stability": "experimental",
            "summary": "The name of the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user.ts",
            "line": 29
          },
          "name": "username",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user:UserProps"
    }
  },
  "version": "1.169.0",
  "fingerprint": "**********"
}