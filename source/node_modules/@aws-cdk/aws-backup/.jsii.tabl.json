{
  "version": "2",
  "toolVersion": "1.63.2",
  "snippets": {
    "bcecf594e6c84fcad6d3894560eda68208c73635e660cf6a4bb0157e9599a50b": {
      "translations": {
        "python": {
          "source": "# Daily, weekly and monthly with 5 year retention\nplan = backup.BackupPlan.daily_weekly_monthly5_year_retention(self, \"Plan\")",
          "version": "2"
        },
        "csharp": {
          "source": "// Daily, weekly and monthly with 5 year retention\nBackupPlan plan = BackupPlan.DailyWeeklyMonthly5YearRetention(this, \"Plan\");",
          "version": "1"
        },
        "java": {
          "source": "// Daily, weekly and monthly with 5 year retention\nBackupPlan plan = BackupPlan.dailyWeeklyMonthly5YearRetention(this, \"Plan\");",
          "version": "1"
        },
        "go": {
          "source": "// Daily, weekly and monthly with 5 year retention\nplan := backup.backupPlan.dailyWeeklyMonthly5YearRetention(this, jsii.String(\"Plan\"))",
          "version": "1"
        },
        "$": {
          "source": "// Daily, weekly and monthly with 5 year retention\nconst plan = backup.BackupPlan.dailyWeeklyMonthly5YearRetention(this, 'Plan');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-backup"
        },
        "field": {
          "field": "markdown",
          "line": 28
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupPlan",
        "@aws-cdk/aws-backup.BackupPlan#dailyWeeklyMonthly5YearRetention",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Daily, weekly and monthly with 5 year retention\nconst plan = backup.BackupPlan.dailyWeeklyMonthly5YearRetention(this, 'Plan');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 4,
        "104": 1,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "081a572e2f944e2a74002053579ba0d7e38448d3f6b8702ca38c7fb7ae5f2c8d"
    },
    "3dc8f6c47573db117e31ef62bb95cbae7f08201f68f6864c59dc0d044454e150": {
      "translations": {
        "python": {
          "source": "# plan: backup.BackupPlan\n\nmy_table = dynamodb.Table.from_table_name(self, \"Table\", \"myTableName\")\nmy_cool_construct = Construct(self, \"MyCoolConstruct\")\n\nplan.add_selection(\"Selection\",\n    resources=[\n        backup.BackupResource.from_dynamo_db_table(my_table),  # A DynamoDB table\n        backup.BackupResource.from_tag(\"stage\", \"prod\"),  # All resources that are tagged stage=prod in the region/account\n        backup.BackupResource.from_construct(my_cool_construct)\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "BackupPlan plan;\n\nITable myTable = Table.FromTableName(this, \"Table\", \"myTableName\");\nConstruct myCoolConstruct = new Construct(this, \"MyCoolConstruct\");\n\nplan.AddSelection(\"Selection\", new BackupSelectionOptions {\n    Resources = new [] { BackupResource.FromDynamoDbTable(myTable), BackupResource.FromTag(\"stage\", \"prod\"), BackupResource.FromConstruct(myCoolConstruct) }\n});",
          "version": "1"
        },
        "java": {
          "source": "BackupPlan plan;\n\nITable myTable = Table.fromTableName(this, \"Table\", \"myTableName\");\nConstruct myCoolConstruct = new Construct(this, \"MyCoolConstruct\");\n\nplan.addSelection(\"Selection\", BackupSelectionOptions.builder()\n        .resources(List.of(BackupResource.fromDynamoDbTable(myTable), BackupResource.fromTag(\"stage\", \"prod\"), BackupResource.fromConstruct(myCoolConstruct)))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var plan backupPlan\n\nmyTable := dynamodb.table.fromTableName(this, jsii.String(\"Table\"), jsii.String(\"myTableName\"))\nmyCoolConstruct := constructs.NewConstruct(this, jsii.String(\"MyCoolConstruct\"))\n\nplan.addSelection(jsii.String(\"Selection\"), &backupSelectionOptions{\n\tresources: []backupResource{\n\t\tbackup.*backupResource.fromDynamoDbTable(myTable),\n\t\tbackup.*backupResource.fromTag(jsii.String(\"stage\"), jsii.String(\"prod\")),\n\t\tbackup.*backupResource.fromConstruct(myCoolConstruct),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const plan: backup.BackupPlan;\nconst myTable = dynamodb.Table.fromTableName(this, 'Table', 'myTableName');\nconst myCoolConstruct = new Construct(this, 'MyCoolConstruct');\n\nplan.addSelection('Selection', {\n  resources: [\n    backup.BackupResource.fromDynamoDbTable(myTable), // A DynamoDB table\n    backup.BackupResource.fromTag('stage', 'prod'), // All resources that are tagged stage=prod in the region/account\n    backup.BackupResource.fromConstruct(myCoolConstruct), // All backupable resources in `myCoolConstruct`\n  ]\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-backup"
        },
        "field": {
          "field": "markdown",
          "line": 35
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupPlan#addSelection",
        "@aws-cdk/aws-backup.BackupResource",
        "@aws-cdk/aws-backup.BackupResource#fromConstruct",
        "@aws-cdk/aws-backup.BackupResource#fromDynamoDbTable",
        "@aws-cdk/aws-backup.BackupResource#fromTag",
        "@aws-cdk/aws-backup.BackupSelectionOptions",
        "@aws-cdk/aws-dynamodb.ITable",
        "@aws-cdk/aws-dynamodb.Table",
        "@aws-cdk/aws-dynamodb.Table#fromTableName",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const plan: backup.BackupPlan;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst myTable = dynamodb.Table.fromTableName(this, 'Table', 'myTableName');\nconst myCoolConstruct = new Construct(this, 'MyCoolConstruct');\n\nplan.addSelection('Selection', {\n  resources: [\n    backup.BackupResource.fromDynamoDbTable(myTable), // A DynamoDB table\n    backup.BackupResource.fromTag('stage', 'prod'), // All resources that are tagged stage=prod in the region/account\n    backup.BackupResource.fromConstruct(myCoolConstruct), // All backupable resources in `myCoolConstruct`\n  ]\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 23,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 9,
        "196": 5,
        "197": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "7ffae5674834619b321d0274864f7911765ad908a8a83d046d2d50b3ee4488cd"
    },
    "57546d876f981473ccc8dc55855ea2464ba5f5b0d053a6718ddee4ec37899428": {
      "translations": {
        "python": {
          "source": "# plan: backup.BackupPlan\n\nplan.add_rule(backup.BackupPlanRule(\n    completion_window=Duration.hours(2),\n    start_window=Duration.hours(1),\n    schedule_expression=events.Schedule.cron( # Only cron expressions are supported\n        day=\"15\",\n        hour=\"3\",\n        minute=\"30\"),\n    move_to_cold_storage_after=Duration.days(30)\n))",
          "version": "2"
        },
        "csharp": {
          "source": "BackupPlan plan;\n\nplan.AddRule(new BackupPlanRule(new BackupPlanRuleProps {\n    CompletionWindow = Duration.Hours(2),\n    StartWindow = Duration.Hours(1),\n    ScheduleExpression = Schedule.Cron(new CronOptions {  // Only cron expressions are supported\n        Day = \"15\",\n        Hour = \"3\",\n        Minute = \"30\" }),\n    MoveToColdStorageAfter = Duration.Days(30)\n}));",
          "version": "1"
        },
        "java": {
          "source": "BackupPlan plan;\n\nplan.addRule(BackupPlanRule.Builder.create()\n        .completionWindow(Duration.hours(2))\n        .startWindow(Duration.hours(1))\n        .scheduleExpression(Schedule.cron(CronOptions.builder() // Only cron expressions are supported\n                .day(\"15\")\n                .hour(\"3\")\n                .minute(\"30\").build()))\n        .moveToColdStorageAfter(Duration.days(30))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var plan backupPlan\n\nplan.addRule(backup.NewBackupPlanRule(&backupPlanRuleProps{\n\tcompletionWindow: *awscdkcore.Duration.hours(jsii.Number(2)),\n\tstartWindow: *awscdkcore.Duration.hours(jsii.Number(1)),\n\tscheduleExpression: events.schedule.cron(&cronOptions{\n\t\t // Only cron expressions are supported\n\t\tday: jsii.String(\"15\"),\n\t\thour: jsii.String(\"3\"),\n\t\tminute: jsii.String(\"30\"),\n\t}),\n\tmoveToColdStorageAfter: *awscdkcore.Duration.days(jsii.Number(30)),\n}))",
          "version": "1"
        },
        "$": {
          "source": "declare const plan: backup.BackupPlan;\nplan.addRule(new backup.BackupPlanRule({\n  completionWindow: Duration.hours(2),\n  startWindow: Duration.hours(1),\n  scheduleExpression: events.Schedule.cron({ // Only cron expressions are supported\n    day: '15',\n    hour: '3',\n    minute: '30',\n  }),\n  moveToColdStorageAfter: Duration.days(30),\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-backup"
        },
        "field": {
          "field": "markdown",
          "line": 54
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupPlan#addRule",
        "@aws-cdk/aws-backup.BackupPlanRule",
        "@aws-cdk/aws-backup.BackupPlanRuleProps",
        "@aws-cdk/aws-events.CronOptions",
        "@aws-cdk/aws-events.Schedule",
        "@aws-cdk/aws-events.Schedule#cron",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#days",
        "@aws-cdk/core.Duration#hours"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const plan: backup.BackupPlan;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nplan.addRule(new backup.BackupPlanRule({\n  completionWindow: Duration.hours(2),\n  startWindow: Duration.hours(1),\n  scheduleExpression: events.Schedule.cron({ // Only cron expressions are supported\n    day: '15',\n    hour: '3',\n    minute: '30',\n  }),\n  moveToColdStorageAfter: Duration.days(30),\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 3,
        "10": 3,
        "75": 23,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 7,
        "196": 5,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "29ca00ce764ae6f3922d9b359fb67eb1b1c161ab7307e99b82e323e3e4d67b6a"
    },
    "030f280a2c6749fbe384af6220e46320aa768d3a666410dd1c713464b8189d7b": {
      "translations": {
        "python": {
          "source": "# plan: backup.BackupPlan\n\nplan.add_rule(backup.BackupPlanRule(\n    enable_continuous_backup=True,\n    delete_after=Duration.days(14)\n))",
          "version": "2"
        },
        "csharp": {
          "source": "BackupPlan plan;\n\nplan.AddRule(new BackupPlanRule(new BackupPlanRuleProps {\n    EnableContinuousBackup = true,\n    DeleteAfter = Duration.Days(14)\n}));",
          "version": "1"
        },
        "java": {
          "source": "BackupPlan plan;\n\nplan.addRule(BackupPlanRule.Builder.create()\n        .enableContinuousBackup(true)\n        .deleteAfter(Duration.days(14))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var plan backupPlan\n\nplan.addRule(backup.NewBackupPlanRule(&backupPlanRuleProps{\n\tenableContinuousBackup: jsii.Boolean(true),\n\tdeleteAfter: *awscdkcore.Duration.days(jsii.Number(14)),\n}))",
          "version": "1"
        },
        "$": {
          "source": "declare const plan: backup.BackupPlan;\nplan.addRule(new backup.BackupPlanRule({\n  enableContinuousBackup: true,\n  deleteAfter: Duration.days(14),\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-backup"
        },
        "field": {
          "field": "markdown",
          "line": 74
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupPlan#addRule",
        "@aws-cdk/aws-backup.BackupPlanRule",
        "@aws-cdk/aws-backup.BackupPlanRuleProps",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#days"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const plan: backup.BackupPlan;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nplan.addRule(new backup.BackupPlanRule({\n  enableContinuousBackup: true,\n  deleteAfter: Duration.days(14),\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 1,
        "75": 11,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 3,
        "196": 2,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "03676d1fe24845b6302a9506ac7b003899515928b51bb83cbfb8090378e3fe75"
    },
    "e70717f76a3db78ada4a991a8374e7b87d9f291d441ef05db02f6bf14698a955": {
      "translations": {
        "python": {
          "source": "# plan: backup.BackupPlan\n\nplan.add_rule(backup.BackupPlanRule.daily())\nplan.add_rule(backup.BackupPlanRule.weekly())",
          "version": "2"
        },
        "csharp": {
          "source": "BackupPlan plan;\n\nplan.AddRule(BackupPlanRule.Daily());\nplan.AddRule(BackupPlanRule.Weekly());",
          "version": "1"
        },
        "java": {
          "source": "BackupPlan plan;\n\nplan.addRule(BackupPlanRule.daily());\nplan.addRule(BackupPlanRule.weekly());",
          "version": "1"
        },
        "go": {
          "source": "var plan backupPlan\n\nplan.addRule(backup.backupPlanRule.daily())\nplan.addRule(backup.backupPlanRule.weekly())",
          "version": "1"
        },
        "$": {
          "source": "declare const plan: backup.BackupPlan;\nplan.addRule(backup.BackupPlanRule.daily());\nplan.addRule(backup.BackupPlanRule.weekly());",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-backup"
        },
        "field": {
          "field": "markdown",
          "line": 84
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupPlan#addRule",
        "@aws-cdk/aws-backup.BackupPlanRule",
        "@aws-cdk/aws-backup.BackupPlanRule#daily",
        "@aws-cdk/aws-backup.BackupPlanRule#weekly"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const plan: backup.BackupPlan;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nplan.addRule(backup.BackupPlanRule.daily());\nplan.addRule(backup.BackupPlanRule.weekly());\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "75": 13,
        "130": 1,
        "153": 1,
        "169": 1,
        "194": 6,
        "196": 4,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "290": 1
      },
      "fqnsFingerprint": "f4a6a705496929bd90d8a59dbbf4b1a9ab7120fd38e607ec6d86310544aa691a"
    },
    "99f307c1a9eaaa49de425bd0c163f8beec7aa7f1cb81d5cdf516feaaa11803ca": {
      "translations": {
        "python": {
          "source": "my_vault = backup.BackupVault.from_backup_vault_name(self, \"Vault1\", \"myVault\")\nother_vault = backup.BackupVault.from_backup_vault_name(self, \"Vault2\", \"otherVault\")\n\nplan = backup.BackupPlan.daily35_day_retention(self, \"Plan\", my_vault) # Use `myVault` for all plan rules\nplan.add_rule(backup.BackupPlanRule.monthly1_year(other_vault))",
          "version": "2"
        },
        "csharp": {
          "source": "IBackupVault myVault = BackupVault.FromBackupVaultName(this, \"Vault1\", \"myVault\");\nIBackupVault otherVault = BackupVault.FromBackupVaultName(this, \"Vault2\", \"otherVault\");\n\nBackupPlan plan = BackupPlan.Daily35DayRetention(this, \"Plan\", myVault); // Use `myVault` for all plan rules\nplan.AddRule(BackupPlanRule.Monthly1Year(otherVault));",
          "version": "1"
        },
        "java": {
          "source": "IBackupVault myVault = BackupVault.fromBackupVaultName(this, \"Vault1\", \"myVault\");\nIBackupVault otherVault = BackupVault.fromBackupVaultName(this, \"Vault2\", \"otherVault\");\n\nBackupPlan plan = BackupPlan.daily35DayRetention(this, \"Plan\", myVault); // Use `myVault` for all plan rules\nplan.addRule(BackupPlanRule.monthly1Year(otherVault));",
          "version": "1"
        },
        "go": {
          "source": "myVault := backup.backupVault.fromBackupVaultName(this, jsii.String(\"Vault1\"), jsii.String(\"myVault\"))\notherVault := backup.backupVault.fromBackupVaultName(this, jsii.String(\"Vault2\"), jsii.String(\"otherVault\"))\n\nplan := backup.backupPlan.daily35DayRetention(this, jsii.String(\"Plan\"), myVault) // Use `myVault` for all plan rules\nplan.addRule(backup.backupPlanRule.monthly1Year(otherVault))",
          "version": "1"
        },
        "$": {
          "source": "const myVault = backup.BackupVault.fromBackupVaultName(this, 'Vault1', 'myVault');\nconst otherVault = backup.BackupVault.fromBackupVaultName(this, 'Vault2', 'otherVault');\n\nconst plan = backup.BackupPlan.daily35DayRetention(this, 'Plan', myVault); // Use `myVault` for all plan rules\nplan.addRule(backup.BackupPlanRule.monthly1Year(otherVault)); // Use `otherVault` for this specific rule",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-backup"
        },
        "field": {
          "field": "markdown",
          "line": 94
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupPlan",
        "@aws-cdk/aws-backup.BackupPlan#addRule",
        "@aws-cdk/aws-backup.BackupPlan#daily35DayRetention",
        "@aws-cdk/aws-backup.BackupPlanRule",
        "@aws-cdk/aws-backup.BackupPlanRule#monthly1Year",
        "@aws-cdk/aws-backup.BackupVault",
        "@aws-cdk/aws-backup.BackupVault#fromBackupVaultName",
        "@aws-cdk/aws-backup.IBackupVault",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myVault = backup.BackupVault.fromBackupVaultName(this, 'Vault1', 'myVault');\nconst otherVault = backup.BackupVault.fromBackupVaultName(this, 'Vault2', 'otherVault');\n\nconst plan = backup.BackupPlan.daily35DayRetention(this, 'Plan', myVault); // Use `myVault` for all plan rules\nplan.addRule(backup.BackupPlanRule.monthly1Year(otherVault));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 19,
        "104": 3,
        "194": 9,
        "196": 5,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3
      },
      "fqnsFingerprint": "cce6573346cb73cb79bbec929f5899009da8d040cfa3127cb38485c5c02a3b8d"
    },
    "33bc8a536e32344cc62eecf3c135254cd05e9c11e3ada76785c80d0319b91bb3": {
      "translations": {
        "python": {
          "source": "plan = backup.BackupPlan(self, \"Plan\",\n    windows_vss=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "BackupPlan plan = new BackupPlan(this, \"Plan\", new BackupPlanProps {\n    WindowsVss = true\n});",
          "version": "1"
        },
        "java": {
          "source": "BackupPlan plan = BackupPlan.Builder.create(this, \"Plan\")\n        .windowsVss(true)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "plan := backup.NewBackupPlan(this, jsii.String(\"Plan\"), &backupPlanProps{\n\twindowsVss: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "const plan = new backup.BackupPlan(this, 'Plan', {\n  windowsVss: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-backup"
        },
        "field": {
          "field": "markdown",
          "line": 107
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupPlan",
        "@aws-cdk/aws-backup.BackupPlanProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst plan = new backup.BackupPlan(this, 'Plan', {\n  windowsVss: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 4,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "caf3f97ebbb104109e8e126181aad179e0cde94fb42a7a4b17d9d9770b408b15"
    },
    "69890cc0c47d8171867765735e51b48054cedbc47800174fca64b3c3ee3d5af8": {
      "translations": {
        "python": {
          "source": "my_key = kms.Key.from_key_arn(self, \"MyKey\", \"aaa\")\nmy_topic = sns.Topic.from_topic_arn(self, \"MyTopic\", \"bbb\")\n\nvault = backup.BackupVault(self, \"Vault\",\n    encryption_key=my_key,  # Custom encryption key\n    notification_topic=my_topic\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IKey myKey = Key.FromKeyArn(this, \"MyKey\", \"aaa\");\nITopic myTopic = Topic.FromTopicArn(this, \"MyTopic\", \"bbb\");\n\nBackupVault vault = new BackupVault(this, \"Vault\", new BackupVaultProps {\n    EncryptionKey = myKey,  // Custom encryption key\n    NotificationTopic = myTopic\n});",
          "version": "1"
        },
        "java": {
          "source": "IKey myKey = Key.fromKeyArn(this, \"MyKey\", \"aaa\");\nITopic myTopic = Topic.fromTopicArn(this, \"MyTopic\", \"bbb\");\n\nBackupVault vault = BackupVault.Builder.create(this, \"Vault\")\n        .encryptionKey(myKey) // Custom encryption key\n        .notificationTopic(myTopic)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "myKey := kms.key.fromKeyArn(this, jsii.String(\"MyKey\"), jsii.String(\"aaa\"))\nmyTopic := sns.topic.fromTopicArn(this, jsii.String(\"MyTopic\"), jsii.String(\"bbb\"))\n\nvault := backup.NewBackupVault(this, jsii.String(\"Vault\"), &backupVaultProps{\n\tencryptionKey: myKey,\n\t // Custom encryption key\n\tnotificationTopic: myTopic,\n})",
          "version": "1"
        },
        "$": {
          "source": "const myKey = kms.Key.fromKeyArn(this, 'MyKey', 'aaa');\nconst myTopic = sns.Topic.fromTopicArn(this, 'MyTopic', 'bbb');\n\nconst vault = new backup.BackupVault(this, 'Vault', {\n  encryptionKey: myKey, // Custom encryption key\n  notificationTopic: myTopic, // Send all vault events to this SNS topic\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-backup"
        },
        "field": {
          "field": "markdown",
          "line": 121
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupVault",
        "@aws-cdk/aws-backup.BackupVaultProps",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-kms.Key#fromKeyArn",
        "@aws-cdk/aws-sns.ITopic",
        "@aws-cdk/aws-sns.Topic",
        "@aws-cdk/aws-sns.Topic#fromTopicArn",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myKey = kms.Key.fromKeyArn(this, 'MyKey', 'aaa');\nconst myTopic = sns.Topic.fromTopicArn(this, 'MyTopic', 'bbb');\n\nconst vault = new backup.BackupVault(this, 'Vault', {\n  encryptionKey: myKey, // Custom encryption key\n  notificationTopic: myTopic, // Send all vault events to this SNS topic\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 15,
        "104": 3,
        "193": 1,
        "194": 5,
        "196": 2,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "281": 2
      },
      "fqnsFingerprint": "48ef53c91c22655b535fd9e62f82b130dd47e64e14712129b96792cd47ef4124"
    },
    "b687682bcbbdff9eb69d15cab2a736058fde3e14c95998f7f39e95dacc297221": {
      "translations": {
        "python": {
          "source": "vault = backup.BackupVault(self, \"Vault\",\n    access_policy=iam.PolicyDocument(\n        statements=[\n            iam.PolicyStatement(\n                effect=iam.Effect.DENY,\n                principals=[iam.AnyPrincipal()],\n                actions=[\"backup:DeleteRecoveryPoint\"],\n                resources=[\"*\"],\n                conditions={\n                    \"StringNotLike\": {\n                        \"aws:userId\": [\"user1\", \"user2\"\n                        ]\n                    }\n                }\n            )\n        ]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "BackupVault vault = new BackupVault(this, \"Vault\", new BackupVaultProps {\n    AccessPolicy = new PolicyDocument(new PolicyDocumentProps {\n        Statements = new [] {\n            new PolicyStatement(new PolicyStatementProps {\n                Effect = Effect.DENY,\n                Principals = new [] { new AnyPrincipal() },\n                Actions = new [] { \"backup:DeleteRecoveryPoint\" },\n                Resources = new [] { \"*\" },\n                Conditions = new Dictionary<string, object> {\n                    { \"StringNotLike\", new Dictionary<string, string[]> {\n                        { \"aws:userId\", new [] { \"user1\", \"user2\" } }\n                    } }\n                }\n            }) }\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "BackupVault vault = BackupVault.Builder.create(this, \"Vault\")\n        .accessPolicy(PolicyDocument.Builder.create()\n                .statements(List.of(\n                    PolicyStatement.Builder.create()\n                            .effect(Effect.DENY)\n                            .principals(List.of(new AnyPrincipal()))\n                            .actions(List.of(\"backup:DeleteRecoveryPoint\"))\n                            .resources(List.of(\"*\"))\n                            .conditions(Map.of(\n                                    \"StringNotLike\", Map.of(\n                                            \"aws:userId\", List.of(\"user1\", \"user2\"))))\n                            .build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "vault := backup.NewBackupVault(this, jsii.String(\"Vault\"), &backupVaultProps{\n\taccessPolicy: iam.NewPolicyDocument(&policyDocumentProps{\n\t\tstatements: []policyStatement{\n\t\t\tiam.NewPolicyStatement(&policyStatementProps{\n\t\t\t\teffect: iam.effect_DENY,\n\t\t\t\tprincipals: []iPrincipal{\n\t\t\t\t\tiam.NewAnyPrincipal(),\n\t\t\t\t},\n\t\t\t\tactions: []*string{\n\t\t\t\t\tjsii.String(\"backup:DeleteRecoveryPoint\"),\n\t\t\t\t},\n\t\t\t\tresources: []*string{\n\t\t\t\t\tjsii.String(\"*\"),\n\t\t\t\t},\n\t\t\t\tconditions: map[string]interface{}{\n\t\t\t\t\t\"StringNotLike\": map[string][]*string{\n\t\t\t\t\t\t\"aws:userId\": []*string{\n\t\t\t\t\t\t\tjsii.String(\"user1\"),\n\t\t\t\t\t\t\tjsii.String(\"user2\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t},\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "const vault = new backup.BackupVault(this, 'Vault', {\n  accessPolicy: new iam.PolicyDocument({\n    statements: [\n      new iam.PolicyStatement({\n        effect: iam.Effect.DENY,\n        principals: [new iam.AnyPrincipal()],\n        actions: ['backup:DeleteRecoveryPoint'],\n        resources: ['*'],\n        conditions: {\n          StringNotLike: {\n            'aws:userId': [\n              'user1',\n              'user2',\n            ],\n          },\n        },\n      }),\n    ],\n  }),\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-backup"
        },
        "field": {
          "field": "markdown",
          "line": 140
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupVault",
        "@aws-cdk/aws-backup.BackupVaultProps",
        "@aws-cdk/aws-iam.AnyPrincipal",
        "@aws-cdk/aws-iam.Effect",
        "@aws-cdk/aws-iam.Effect#DENY",
        "@aws-cdk/aws-iam.PolicyDocument",
        "@aws-cdk/aws-iam.PolicyDocumentProps",
        "@aws-cdk/aws-iam.PolicyStatement",
        "@aws-cdk/aws-iam.PolicyStatementProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst vault = new backup.BackupVault(this, 'Vault', {\n  accessPolicy: new iam.PolicyDocument({\n    statements: [\n      new iam.PolicyStatement({\n        effect: iam.Effect.DENY,\n        principals: [new iam.AnyPrincipal()],\n        actions: ['backup:DeleteRecoveryPoint'],\n        resources: ['*'],\n        conditions: {\n          StringNotLike: {\n            'aws:userId': [\n              'user1',\n              'user2',\n            ],\n          },\n        },\n      }),\n    ],\n  }),\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 20,
        "104": 1,
        "192": 5,
        "193": 5,
        "194": 6,
        "197": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 9
      },
      "fqnsFingerprint": "946f7094b8c6f0f3f66c133fc0e0d970f07d1d18c69162db0f6bcb84358d0d66"
    },
    "43dc5b73fb3076b32d330155666edf928cbed5474f0b7d2697b936f1b5e9a0e1": {
      "translations": {
        "python": {
          "source": "# backup_vault: backup.BackupVault\nbackup.BackupVault(self, \"Vault\",\n    block_recovery_point_deletion=True\n)\nbackup_vault.block_recovery_point_deletion()",
          "version": "2"
        },
        "csharp": {
          "source": "BackupVault backupVault;\nnew BackupVault(this, \"Vault\", new BackupVaultProps {\n    BlockRecoveryPointDeletion = true\n});\nbackupVault.BlockRecoveryPointDeletion();",
          "version": "1"
        },
        "java": {
          "source": "BackupVault backupVault;\nBackupVault.Builder.create(this, \"Vault\")\n        .blockRecoveryPointDeletion(true)\n        .build();\nbackupVault.blockRecoveryPointDeletion();",
          "version": "1"
        },
        "go": {
          "source": "var backupVault backupVault\nbackup.NewBackupVault(this, jsii.String(\"Vault\"), &backupVaultProps{\n\tblockRecoveryPointDeletion: jsii.Boolean(true),\n})\nbackupVault.blockRecoveryPointDeletion()",
          "version": "1"
        },
        "$": {
          "source": "new backup.BackupVault(this, 'Vault', {\n  blockRecoveryPointDeletion: true,\n});\n\ndeclare const backupVault: backup.BackupVault;\nbackupVault.blockRecoveryPointDeletion();",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-backup"
        },
        "field": {
          "field": "markdown",
          "line": 168
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupVault",
        "@aws-cdk/aws-backup.BackupVault#blockRecoveryPointDeletion",
        "@aws-cdk/aws-backup.BackupVaultProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n\n\ndeclare const backupVault: backup.BackupVault;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew backup.BackupVault(this, 'Vault', {\n  blockRecoveryPointDeletion: true,\n});\nbackupVault.blockRecoveryPointDeletion();\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "104": 1,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "6dc5ce76d551f96e4de997dfa1080a9182a78ced2add2ae394d447ecfc4ce012"
    },
    "5d2f23ed8b0ef4fe6136ab4f64852b292f57818271d45c6e22f66a10ed907b20": {
      "translations": {
        "python": {
          "source": "imported_vault = backup.BackupVault.from_backup_vault_name(self, \"Vault\", \"myVaultName\")\n\nrole = iam.Role(self, \"Access Role\", assumed_by=iam.ServicePrincipal(\"lambda.amazonaws.com\"))\n\nimported_vault.grant(role, \"backup:StartBackupJob\")",
          "version": "2"
        },
        "csharp": {
          "source": "IBackupVault importedVault = BackupVault.FromBackupVaultName(this, \"Vault\", \"myVaultName\");\n\nRole role = new Role(this, \"Access Role\", new RoleProps { AssumedBy = new ServicePrincipal(\"lambda.amazonaws.com\") });\n\nimportedVault.Grant(role, \"backup:StartBackupJob\");",
          "version": "1"
        },
        "java": {
          "source": "IBackupVault importedVault = BackupVault.fromBackupVaultName(this, \"Vault\", \"myVaultName\");\n\nRole role = Role.Builder.create(this, \"Access Role\").assumedBy(new ServicePrincipal(\"lambda.amazonaws.com\")).build();\n\nimportedVault.grant(role, \"backup:StartBackupJob\");",
          "version": "1"
        },
        "go": {
          "source": "importedVault := backup.backupVault.fromBackupVaultName(this, jsii.String(\"Vault\"), jsii.String(\"myVaultName\"))\n\nrole := iam.NewRole(this, jsii.String(\"Access Role\"), &roleProps{\n\tassumedBy: iam.NewServicePrincipal(jsii.String(\"lambda.amazonaws.com\")),\n})\n\nimportedVault.grant(role, jsii.String(\"backup:StartBackupJob\"))",
          "version": "1"
        },
        "$": {
          "source": "const importedVault = backup.BackupVault.fromBackupVaultName(this, 'Vault', 'myVaultName');\n\nconst role = new iam.Role(this, 'Access Role', { assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com') });\n\nimportedVault.grant(role, 'backup:StartBackupJob');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-backup"
        },
        "field": {
          "field": "markdown",
          "line": 184
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupVault",
        "@aws-cdk/aws-backup.BackupVault#fromBackupVaultName",
        "@aws-cdk/aws-backup.IBackupVault",
        "@aws-cdk/aws-backup.IBackupVault#grant",
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-iam.IPrincipal",
        "@aws-cdk/aws-iam.Role",
        "@aws-cdk/aws-iam.RoleProps",
        "@aws-cdk/aws-iam.ServicePrincipal",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst importedVault = backup.BackupVault.fromBackupVaultName(this, 'Vault', 'myVaultName');\n\nconst role = new iam.Role(this, 'Access Role', { assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com') });\n\nimportedVault.grant(role, 'backup:StartBackupJob');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 13,
        "104": 2,
        "193": 1,
        "194": 5,
        "196": 2,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 1
      },
      "fqnsFingerprint": "a62062f69d172e6f32bc0bae40eb34b53f83cbe80c396c4dd48b64ccb8bf0571"
    },
    "507e407b15b3020af9f0195dfd1fd651135e665c8290c40741745c642656552d": {
      "translations": {
        "python": {
          "source": "# Daily, weekly and monthly with 5 year retention\nplan = backup.BackupPlan.daily_weekly_monthly5_year_retention(self, \"Plan\")",
          "version": "2"
        },
        "csharp": {
          "source": "// Daily, weekly and monthly with 5 year retention\nBackupPlan plan = BackupPlan.DailyWeeklyMonthly5YearRetention(this, \"Plan\");",
          "version": "1"
        },
        "java": {
          "source": "// Daily, weekly and monthly with 5 year retention\nBackupPlan plan = BackupPlan.dailyWeeklyMonthly5YearRetention(this, \"Plan\");",
          "version": "1"
        },
        "go": {
          "source": "// Daily, weekly and monthly with 5 year retention\nplan := backup.backupPlan.dailyWeeklyMonthly5YearRetention(this, jsii.String(\"Plan\"))",
          "version": "1"
        },
        "$": {
          "source": "// Daily, weekly and monthly with 5 year retention\nconst plan = backup.BackupPlan.dailyWeeklyMonthly5YearRetention(this, 'Plan');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.BackupPlan"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupPlan",
        "@aws-cdk/aws-backup.BackupPlan#dailyWeeklyMonthly5YearRetention",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Daily, weekly and monthly with 5 year retention\nconst plan = backup.BackupPlan.dailyWeeklyMonthly5YearRetention(this, 'Plan');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 4,
        "104": 1,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "081a572e2f944e2a74002053579ba0d7e38448d3f6b8702ca38c7fb7ae5f2c8d"
    },
    "8d60c7ea4a8ed91065d83ace97aa6655f327a2f3b6297a80ffd43e50fe523c2f": {
      "translations": {
        "python": {
          "source": "plan = backup.BackupPlan(self, \"Plan\",\n    windows_vss=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "BackupPlan plan = new BackupPlan(this, \"Plan\", new BackupPlanProps {\n    WindowsVss = true\n});",
          "version": "1"
        },
        "java": {
          "source": "BackupPlan plan = BackupPlan.Builder.create(this, \"Plan\")\n        .windowsVss(true)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "plan := backup.NewBackupPlan(this, jsii.String(\"Plan\"), &backupPlanProps{\n\twindowsVss: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "const plan = new backup.BackupPlan(this, 'Plan', {\n  windowsVss: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.BackupPlanProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupPlan",
        "@aws-cdk/aws-backup.BackupPlanProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst plan = new backup.BackupPlan(this, 'Plan', {\n  windowsVss: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 4,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "caf3f97ebbb104109e8e126181aad179e0cde94fb42a7a4b17d9d9770b408b15"
    },
    "768d488439b358f8279f1c728369ec231a25f62c0e08059e7fc9be91bfd28120": {
      "translations": {
        "python": {
          "source": "# plan: backup.BackupPlan\n\nplan.add_rule(backup.BackupPlanRule.daily())\nplan.add_rule(backup.BackupPlanRule.weekly())",
          "version": "2"
        },
        "csharp": {
          "source": "BackupPlan plan;\n\nplan.AddRule(BackupPlanRule.Daily());\nplan.AddRule(BackupPlanRule.Weekly());",
          "version": "1"
        },
        "java": {
          "source": "BackupPlan plan;\n\nplan.addRule(BackupPlanRule.daily());\nplan.addRule(BackupPlanRule.weekly());",
          "version": "1"
        },
        "go": {
          "source": "var plan backupPlan\n\nplan.addRule(backup.backupPlanRule.daily())\nplan.addRule(backup.backupPlanRule.weekly())",
          "version": "1"
        },
        "$": {
          "source": "declare const plan: backup.BackupPlan;\nplan.addRule(backup.BackupPlanRule.daily());\nplan.addRule(backup.BackupPlanRule.weekly());",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupPlan#addRule",
        "@aws-cdk/aws-backup.BackupPlanRule",
        "@aws-cdk/aws-backup.BackupPlanRule#daily",
        "@aws-cdk/aws-backup.BackupPlanRule#weekly"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const plan: backup.BackupPlan;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nplan.addRule(backup.BackupPlanRule.daily());\nplan.addRule(backup.BackupPlanRule.weekly());\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "75": 13,
        "130": 1,
        "153": 1,
        "169": 1,
        "194": 6,
        "196": 4,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "290": 1
      },
      "fqnsFingerprint": "f4a6a705496929bd90d8a59dbbf4b1a9ab7120fd38e607ec6d86310544aa691a"
    },
    "830560974135a2fb6c3a147120cefe126409fc196698e3c4984fe603b99284d1": {
      "translations": {
        "python": {
          "source": "# plan: backup.BackupPlan\n\nplan.add_rule(backup.BackupPlanRule(\n    completion_window=Duration.hours(2),\n    start_window=Duration.hours(1),\n    schedule_expression=events.Schedule.cron( # Only cron expressions are supported\n        day=\"15\",\n        hour=\"3\",\n        minute=\"30\"),\n    move_to_cold_storage_after=Duration.days(30)\n))",
          "version": "2"
        },
        "csharp": {
          "source": "BackupPlan plan;\n\nplan.AddRule(new BackupPlanRule(new BackupPlanRuleProps {\n    CompletionWindow = Duration.Hours(2),\n    StartWindow = Duration.Hours(1),\n    ScheduleExpression = Schedule.Cron(new CronOptions {  // Only cron expressions are supported\n        Day = \"15\",\n        Hour = \"3\",\n        Minute = \"30\" }),\n    MoveToColdStorageAfter = Duration.Days(30)\n}));",
          "version": "1"
        },
        "java": {
          "source": "BackupPlan plan;\n\nplan.addRule(BackupPlanRule.Builder.create()\n        .completionWindow(Duration.hours(2))\n        .startWindow(Duration.hours(1))\n        .scheduleExpression(Schedule.cron(CronOptions.builder() // Only cron expressions are supported\n                .day(\"15\")\n                .hour(\"3\")\n                .minute(\"30\").build()))\n        .moveToColdStorageAfter(Duration.days(30))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var plan backupPlan\n\nplan.addRule(backup.NewBackupPlanRule(&backupPlanRuleProps{\n\tcompletionWindow: *awscdkcore.Duration.hours(jsii.Number(2)),\n\tstartWindow: *awscdkcore.Duration.hours(jsii.Number(1)),\n\tscheduleExpression: events.schedule.cron(&cronOptions{\n\t\t // Only cron expressions are supported\n\t\tday: jsii.String(\"15\"),\n\t\thour: jsii.String(\"3\"),\n\t\tminute: jsii.String(\"30\"),\n\t}),\n\tmoveToColdStorageAfter: *awscdkcore.Duration.days(jsii.Number(30)),\n}))",
          "version": "1"
        },
        "$": {
          "source": "declare const plan: backup.BackupPlan;\nplan.addRule(new backup.BackupPlanRule({\n  completionWindow: Duration.hours(2),\n  startWindow: Duration.hours(1),\n  scheduleExpression: events.Schedule.cron({ // Only cron expressions are supported\n    day: '15',\n    hour: '3',\n    minute: '30',\n  }),\n  moveToColdStorageAfter: Duration.days(30),\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.BackupPlanRuleProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupPlan#addRule",
        "@aws-cdk/aws-backup.BackupPlanRule",
        "@aws-cdk/aws-backup.BackupPlanRuleProps",
        "@aws-cdk/aws-events.CronOptions",
        "@aws-cdk/aws-events.Schedule",
        "@aws-cdk/aws-events.Schedule#cron",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#days",
        "@aws-cdk/core.Duration#hours"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const plan: backup.BackupPlan;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nplan.addRule(new backup.BackupPlanRule({\n  completionWindow: Duration.hours(2),\n  startWindow: Duration.hours(1),\n  scheduleExpression: events.Schedule.cron({ // Only cron expressions are supported\n    day: '15',\n    hour: '3',\n    minute: '30',\n  }),\n  moveToColdStorageAfter: Duration.days(30),\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 3,
        "10": 3,
        "75": 23,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 7,
        "196": 5,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "29ca00ce764ae6f3922d9b359fb67eb1b1c161ab7307e99b82e323e3e4d67b6a"
    },
    "7de29ead9d93774adc0e1cbe51f3cb8ff8a270d210be401ee12840d519c2a559": {
      "translations": {
        "python": {
          "source": "# plan: backup.BackupPlan\n\nmy_table = dynamodb.Table.from_table_name(self, \"Table\", \"myTableName\")\nmy_cool_construct = Construct(self, \"MyCoolConstruct\")\n\nplan.add_selection(\"Selection\",\n    resources=[\n        backup.BackupResource.from_dynamo_db_table(my_table),  # A DynamoDB table\n        backup.BackupResource.from_tag(\"stage\", \"prod\"),  # All resources that are tagged stage=prod in the region/account\n        backup.BackupResource.from_construct(my_cool_construct)\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "BackupPlan plan;\n\nITable myTable = Table.FromTableName(this, \"Table\", \"myTableName\");\nConstruct myCoolConstruct = new Construct(this, \"MyCoolConstruct\");\n\nplan.AddSelection(\"Selection\", new BackupSelectionOptions {\n    Resources = new [] { BackupResource.FromDynamoDbTable(myTable), BackupResource.FromTag(\"stage\", \"prod\"), BackupResource.FromConstruct(myCoolConstruct) }\n});",
          "version": "1"
        },
        "java": {
          "source": "BackupPlan plan;\n\nITable myTable = Table.fromTableName(this, \"Table\", \"myTableName\");\nConstruct myCoolConstruct = new Construct(this, \"MyCoolConstruct\");\n\nplan.addSelection(\"Selection\", BackupSelectionOptions.builder()\n        .resources(List.of(BackupResource.fromDynamoDbTable(myTable), BackupResource.fromTag(\"stage\", \"prod\"), BackupResource.fromConstruct(myCoolConstruct)))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var plan backupPlan\n\nmyTable := dynamodb.table.fromTableName(this, jsii.String(\"Table\"), jsii.String(\"myTableName\"))\nmyCoolConstruct := constructs.NewConstruct(this, jsii.String(\"MyCoolConstruct\"))\n\nplan.addSelection(jsii.String(\"Selection\"), &backupSelectionOptions{\n\tresources: []backupResource{\n\t\tbackup.*backupResource.fromDynamoDbTable(myTable),\n\t\tbackup.*backupResource.fromTag(jsii.String(\"stage\"), jsii.String(\"prod\")),\n\t\tbackup.*backupResource.fromConstruct(myCoolConstruct),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const plan: backup.BackupPlan;\nconst myTable = dynamodb.Table.fromTableName(this, 'Table', 'myTableName');\nconst myCoolConstruct = new Construct(this, 'MyCoolConstruct');\n\nplan.addSelection('Selection', {\n  resources: [\n    backup.BackupResource.fromDynamoDbTable(myTable), // A DynamoDB table\n    backup.BackupResource.fromTag('stage', 'prod'), // All resources that are tagged stage=prod in the region/account\n    backup.BackupResource.fromConstruct(myCoolConstruct), // All backupable resources in `myCoolConstruct`\n  ]\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.BackupResource"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupPlan#addSelection",
        "@aws-cdk/aws-backup.BackupResource",
        "@aws-cdk/aws-backup.BackupResource#fromConstruct",
        "@aws-cdk/aws-backup.BackupResource#fromDynamoDbTable",
        "@aws-cdk/aws-backup.BackupResource#fromTag",
        "@aws-cdk/aws-backup.BackupSelectionOptions",
        "@aws-cdk/aws-dynamodb.ITable",
        "@aws-cdk/aws-dynamodb.Table",
        "@aws-cdk/aws-dynamodb.Table#fromTableName",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const plan: backup.BackupPlan;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst myTable = dynamodb.Table.fromTableName(this, 'Table', 'myTableName');\nconst myCoolConstruct = new Construct(this, 'MyCoolConstruct');\n\nplan.addSelection('Selection', {\n  resources: [\n    backup.BackupResource.fromDynamoDbTable(myTable), // A DynamoDB table\n    backup.BackupResource.fromTag('stage', 'prod'), // All resources that are tagged stage=prod in the region/account\n    backup.BackupResource.fromConstruct(myCoolConstruct), // All backupable resources in `myCoolConstruct`\n  ]\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 23,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 9,
        "196": 5,
        "197": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "7ffae5674834619b321d0274864f7911765ad908a8a83d046d2d50b3ee4488cd"
    },
    "05227ca0cc5c8cd9497ab9e26011b5ef23ecf231c3726a2ec6dd5f1ea1d29207": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\nimport aws_cdk.aws_iam as iam\n\n# backup_plan: backup.BackupPlan\n# backup_resource: backup.BackupResource\n# role: iam.Role\n\nbackup_selection = backup.BackupSelection(self, \"MyBackupSelection\",\n    backup_plan=backup_plan,\n    resources=[backup_resource],\n\n    # the properties below are optional\n    allow_restores=False,\n    backup_selection_name=\"backupSelectionName\",\n    role=role\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\nusing Amazon.CDK.AWS.IAM;\n\nBackupPlan backupPlan;\nBackupResource backupResource;\nRole role;\n\nBackupSelection backupSelection = new BackupSelection(this, \"MyBackupSelection\", new BackupSelectionProps {\n    BackupPlan = backupPlan,\n    Resources = new [] { backupResource },\n\n    // the properties below are optional\n    AllowRestores = false,\n    BackupSelectionName = \"backupSelectionName\",\n    Role = role\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\nimport software.amazon.awscdk.services.iam.*;\n\nBackupPlan backupPlan;\nBackupResource backupResource;\nRole role;\n\nBackupSelection backupSelection = BackupSelection.Builder.create(this, \"MyBackupSelection\")\n        .backupPlan(backupPlan)\n        .resources(List.of(backupResource))\n\n        // the properties below are optional\n        .allowRestores(false)\n        .backupSelectionName(\"backupSelectionName\")\n        .role(role)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar backupPlan backupPlan\nvar backupResource backupResource\nvar role role\n\nbackupSelection := backup.NewBackupSelection(this, jsii.String(\"MyBackupSelection\"), &backupSelectionProps{\n\tbackupPlan: backupPlan,\n\tresources: []*backupResource{\n\t\tbackupResource,\n\t},\n\n\t// the properties below are optional\n\tallowRestores: jsii.Boolean(false),\n\tbackupSelectionName: jsii.String(\"backupSelectionName\"),\n\trole: role,\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const backupPlan: backup.BackupPlan;\ndeclare const backupResource: backup.BackupResource;\ndeclare const role: iam.Role;\nconst backupSelection = new backup.BackupSelection(this, 'MyBackupSelection', {\n  backupPlan: backupPlan,\n  resources: [backupResource],\n\n  // the properties below are optional\n  allowRestores: false,\n  backupSelectionName: 'backupSelectionName',\n  role: role,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.BackupSelection"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupSelection",
        "@aws-cdk/aws-backup.BackupSelectionProps",
        "@aws-cdk/aws-backup.IBackupPlan",
        "@aws-cdk/aws-iam.IRole",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const backupPlan: backup.BackupPlan;\ndeclare const backupResource: backup.BackupResource;\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst backupSelection = new backup.BackupSelection(this, 'MyBackupSelection', {\n  backupPlan: backupPlan,\n  resources: [backupResource],\n\n  // the properties below are optional\n  allowRestores: false,\n  backupSelectionName: 'backupSelectionName',\n  role: role,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 22,
        "91": 1,
        "104": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "ef24a8967eb61c4dc5d286369764f1cffb6a3c53c6a1c908e88795abcb210c6c"
    },
    "5543a814e310ad10903107ed4271c334e4e6c629e26543e6e243378dfadfe587": {
      "translations": {
        "python": {
          "source": "# plan: backup.BackupPlan\n\nmy_table = dynamodb.Table.from_table_name(self, \"Table\", \"myTableName\")\nmy_cool_construct = Construct(self, \"MyCoolConstruct\")\n\nplan.add_selection(\"Selection\",\n    resources=[\n        backup.BackupResource.from_dynamo_db_table(my_table),  # A DynamoDB table\n        backup.BackupResource.from_tag(\"stage\", \"prod\"),  # All resources that are tagged stage=prod in the region/account\n        backup.BackupResource.from_construct(my_cool_construct)\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "BackupPlan plan;\n\nITable myTable = Table.FromTableName(this, \"Table\", \"myTableName\");\nConstruct myCoolConstruct = new Construct(this, \"MyCoolConstruct\");\n\nplan.AddSelection(\"Selection\", new BackupSelectionOptions {\n    Resources = new [] { BackupResource.FromDynamoDbTable(myTable), BackupResource.FromTag(\"stage\", \"prod\"), BackupResource.FromConstruct(myCoolConstruct) }\n});",
          "version": "1"
        },
        "java": {
          "source": "BackupPlan plan;\n\nITable myTable = Table.fromTableName(this, \"Table\", \"myTableName\");\nConstruct myCoolConstruct = new Construct(this, \"MyCoolConstruct\");\n\nplan.addSelection(\"Selection\", BackupSelectionOptions.builder()\n        .resources(List.of(BackupResource.fromDynamoDbTable(myTable), BackupResource.fromTag(\"stage\", \"prod\"), BackupResource.fromConstruct(myCoolConstruct)))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var plan backupPlan\n\nmyTable := dynamodb.table.fromTableName(this, jsii.String(\"Table\"), jsii.String(\"myTableName\"))\nmyCoolConstruct := constructs.NewConstruct(this, jsii.String(\"MyCoolConstruct\"))\n\nplan.addSelection(jsii.String(\"Selection\"), &backupSelectionOptions{\n\tresources: []backupResource{\n\t\tbackup.*backupResource.fromDynamoDbTable(myTable),\n\t\tbackup.*backupResource.fromTag(jsii.String(\"stage\"), jsii.String(\"prod\")),\n\t\tbackup.*backupResource.fromConstruct(myCoolConstruct),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const plan: backup.BackupPlan;\nconst myTable = dynamodb.Table.fromTableName(this, 'Table', 'myTableName');\nconst myCoolConstruct = new Construct(this, 'MyCoolConstruct');\n\nplan.addSelection('Selection', {\n  resources: [\n    backup.BackupResource.fromDynamoDbTable(myTable), // A DynamoDB table\n    backup.BackupResource.fromTag('stage', 'prod'), // All resources that are tagged stage=prod in the region/account\n    backup.BackupResource.fromConstruct(myCoolConstruct), // All backupable resources in `myCoolConstruct`\n  ]\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.BackupSelectionOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupPlan#addSelection",
        "@aws-cdk/aws-backup.BackupResource",
        "@aws-cdk/aws-backup.BackupResource#fromConstruct",
        "@aws-cdk/aws-backup.BackupResource#fromDynamoDbTable",
        "@aws-cdk/aws-backup.BackupResource#fromTag",
        "@aws-cdk/aws-backup.BackupSelectionOptions",
        "@aws-cdk/aws-dynamodb.ITable",
        "@aws-cdk/aws-dynamodb.Table",
        "@aws-cdk/aws-dynamodb.Table#fromTableName",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const plan: backup.BackupPlan;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst myTable = dynamodb.Table.fromTableName(this, 'Table', 'myTableName');\nconst myCoolConstruct = new Construct(this, 'MyCoolConstruct');\n\nplan.addSelection('Selection', {\n  resources: [\n    backup.BackupResource.fromDynamoDbTable(myTable), // A DynamoDB table\n    backup.BackupResource.fromTag('stage', 'prod'), // All resources that are tagged stage=prod in the region/account\n    backup.BackupResource.fromConstruct(myCoolConstruct), // All backupable resources in `myCoolConstruct`\n  ]\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 23,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 9,
        "196": 5,
        "197": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "7ffae5674834619b321d0274864f7911765ad908a8a83d046d2d50b3ee4488cd"
    },
    "a4b7620fbd41abd2ec673d82b51ae8902de5ec1db4a2a13e60adecc659f2fd36": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\nimport aws_cdk.aws_iam as iam\n\n# backup_plan: backup.BackupPlan\n# backup_resource: backup.BackupResource\n# role: iam.Role\n\nbackup_selection_props = backup.BackupSelectionProps(\n    backup_plan=backup_plan,\n    resources=[backup_resource],\n\n    # the properties below are optional\n    allow_restores=False,\n    backup_selection_name=\"backupSelectionName\",\n    role=role\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\nusing Amazon.CDK.AWS.IAM;\n\nBackupPlan backupPlan;\nBackupResource backupResource;\nRole role;\n\nBackupSelectionProps backupSelectionProps = new BackupSelectionProps {\n    BackupPlan = backupPlan,\n    Resources = new [] { backupResource },\n\n    // the properties below are optional\n    AllowRestores = false,\n    BackupSelectionName = \"backupSelectionName\",\n    Role = role\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\nimport software.amazon.awscdk.services.iam.*;\n\nBackupPlan backupPlan;\nBackupResource backupResource;\nRole role;\n\nBackupSelectionProps backupSelectionProps = BackupSelectionProps.builder()\n        .backupPlan(backupPlan)\n        .resources(List.of(backupResource))\n\n        // the properties below are optional\n        .allowRestores(false)\n        .backupSelectionName(\"backupSelectionName\")\n        .role(role)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar backupPlan backupPlan\nvar backupResource backupResource\nvar role role\n\nbackupSelectionProps := &backupSelectionProps{\n\tbackupPlan: backupPlan,\n\tresources: []*backupResource{\n\t\tbackupResource,\n\t},\n\n\t// the properties below are optional\n\tallowRestores: jsii.Boolean(false),\n\tbackupSelectionName: jsii.String(\"backupSelectionName\"),\n\trole: role,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const backupPlan: backup.BackupPlan;\ndeclare const backupResource: backup.BackupResource;\ndeclare const role: iam.Role;\nconst backupSelectionProps: backup.BackupSelectionProps = {\n  backupPlan: backupPlan,\n  resources: [backupResource],\n\n  // the properties below are optional\n  allowRestores: false,\n  backupSelectionName: 'backupSelectionName',\n  role: role,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.BackupSelectionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupSelectionProps",
        "@aws-cdk/aws-backup.IBackupPlan",
        "@aws-cdk/aws-iam.IRole"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const backupPlan: backup.BackupPlan;\ndeclare const backupResource: backup.BackupResource;\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst backupSelectionProps: backup.BackupSelectionProps = {\n  backupPlan: backupPlan,\n  resources: [backupResource],\n\n  // the properties below are optional\n  allowRestores: false,\n  backupSelectionName: 'backupSelectionName',\n  role: role,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 22,
        "91": 1,
        "130": 3,
        "153": 4,
        "169": 4,
        "192": 1,
        "193": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "effc9f0c12182d1426c1d26b7f9193112a68c273f95e55c87bf94a05ef513622"
    },
    "9be81f871c1bde7b524bb5d3c7de215156123fdadbd84d2e5324ebcce80ea82a": {
      "translations": {
        "python": {
          "source": "imported_vault = backup.BackupVault.from_backup_vault_name(self, \"Vault\", \"myVaultName\")\n\nrole = iam.Role(self, \"Access Role\", assumed_by=iam.ServicePrincipal(\"lambda.amazonaws.com\"))\n\nimported_vault.grant(role, \"backup:StartBackupJob\")",
          "version": "2"
        },
        "csharp": {
          "source": "IBackupVault importedVault = BackupVault.FromBackupVaultName(this, \"Vault\", \"myVaultName\");\n\nRole role = new Role(this, \"Access Role\", new RoleProps { AssumedBy = new ServicePrincipal(\"lambda.amazonaws.com\") });\n\nimportedVault.Grant(role, \"backup:StartBackupJob\");",
          "version": "1"
        },
        "java": {
          "source": "IBackupVault importedVault = BackupVault.fromBackupVaultName(this, \"Vault\", \"myVaultName\");\n\nRole role = Role.Builder.create(this, \"Access Role\").assumedBy(new ServicePrincipal(\"lambda.amazonaws.com\")).build();\n\nimportedVault.grant(role, \"backup:StartBackupJob\");",
          "version": "1"
        },
        "go": {
          "source": "importedVault := backup.backupVault.fromBackupVaultName(this, jsii.String(\"Vault\"), jsii.String(\"myVaultName\"))\n\nrole := iam.NewRole(this, jsii.String(\"Access Role\"), &roleProps{\n\tassumedBy: iam.NewServicePrincipal(jsii.String(\"lambda.amazonaws.com\")),\n})\n\nimportedVault.grant(role, jsii.String(\"backup:StartBackupJob\"))",
          "version": "1"
        },
        "$": {
          "source": "const importedVault = backup.BackupVault.fromBackupVaultName(this, 'Vault', 'myVaultName');\n\nconst role = new iam.Role(this, 'Access Role', { assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com') });\n\nimportedVault.grant(role, 'backup:StartBackupJob');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.BackupVault"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupVault",
        "@aws-cdk/aws-backup.BackupVault#fromBackupVaultName",
        "@aws-cdk/aws-backup.IBackupVault",
        "@aws-cdk/aws-backup.IBackupVault#grant",
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-iam.IPrincipal",
        "@aws-cdk/aws-iam.Role",
        "@aws-cdk/aws-iam.RoleProps",
        "@aws-cdk/aws-iam.ServicePrincipal",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst importedVault = backup.BackupVault.fromBackupVaultName(this, 'Vault', 'myVaultName');\n\nconst role = new iam.Role(this, 'Access Role', { assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com') });\n\nimportedVault.grant(role, 'backup:StartBackupJob');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 13,
        "104": 2,
        "193": 1,
        "194": 5,
        "196": 2,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 1
      },
      "fqnsFingerprint": "a62062f69d172e6f32bc0bae40eb34b53f83cbe80c396c4dd48b64ccb8bf0571"
    },
    "5d74a7e4130aac155a2f97c841751f5d0991b37c87250cbbe574f8b2c913be62": {
      "translations": {
        "python": {
          "source": "my_key = kms.Key.from_key_arn(self, \"MyKey\", \"aaa\")\nmy_topic = sns.Topic.from_topic_arn(self, \"MyTopic\", \"bbb\")\n\nvault = backup.BackupVault(self, \"Vault\",\n    encryption_key=my_key,  # Custom encryption key\n    notification_topic=my_topic\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IKey myKey = Key.FromKeyArn(this, \"MyKey\", \"aaa\");\nITopic myTopic = Topic.FromTopicArn(this, \"MyTopic\", \"bbb\");\n\nBackupVault vault = new BackupVault(this, \"Vault\", new BackupVaultProps {\n    EncryptionKey = myKey,  // Custom encryption key\n    NotificationTopic = myTopic\n});",
          "version": "1"
        },
        "java": {
          "source": "IKey myKey = Key.fromKeyArn(this, \"MyKey\", \"aaa\");\nITopic myTopic = Topic.fromTopicArn(this, \"MyTopic\", \"bbb\");\n\nBackupVault vault = BackupVault.Builder.create(this, \"Vault\")\n        .encryptionKey(myKey) // Custom encryption key\n        .notificationTopic(myTopic)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "myKey := kms.key.fromKeyArn(this, jsii.String(\"MyKey\"), jsii.String(\"aaa\"))\nmyTopic := sns.topic.fromTopicArn(this, jsii.String(\"MyTopic\"), jsii.String(\"bbb\"))\n\nvault := backup.NewBackupVault(this, jsii.String(\"Vault\"), &backupVaultProps{\n\tencryptionKey: myKey,\n\t // Custom encryption key\n\tnotificationTopic: myTopic,\n})",
          "version": "1"
        },
        "$": {
          "source": "const myKey = kms.Key.fromKeyArn(this, 'MyKey', 'aaa');\nconst myTopic = sns.Topic.fromTopicArn(this, 'MyTopic', 'bbb');\n\nconst vault = new backup.BackupVault(this, 'Vault', {\n  encryptionKey: myKey, // Custom encryption key\n  notificationTopic: myTopic, // Send all vault events to this SNS topic\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.BackupVaultProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.BackupVault",
        "@aws-cdk/aws-backup.BackupVaultProps",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-kms.Key#fromKeyArn",
        "@aws-cdk/aws-sns.ITopic",
        "@aws-cdk/aws-sns.Topic",
        "@aws-cdk/aws-sns.Topic#fromTopicArn",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as events from '@aws-cdk/aws-events';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as sns from '@aws-cdk/aws-sns';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myKey = kms.Key.fromKeyArn(this, 'MyKey', 'aaa');\nconst myTopic = sns.Topic.fromTopicArn(this, 'MyTopic', 'bbb');\n\nconst vault = new backup.BackupVault(this, 'Vault', {\n  encryptionKey: myKey, // Custom encryption key\n  notificationTopic: myTopic, // Send all vault events to this SNS topic\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 15,
        "104": 3,
        "193": 1,
        "194": 5,
        "196": 2,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "281": 2
      },
      "fqnsFingerprint": "48ef53c91c22655b535fd9e62f82b130dd47e64e14712129b96792cd47ef4124"
    },
    "af1b9d80c1ace60b4766a69345ab796392082d98cd3bc632c4076edd7096fc78": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# backup_options: Any\n\ncfn_backup_plan = backup.CfnBackupPlan(self, \"MyCfnBackupPlan\",\n    backup_plan=backup.CfnBackupPlan.BackupPlanResourceTypeProperty(\n        backup_plan_name=\"backupPlanName\",\n        backup_plan_rule=[backup.CfnBackupPlan.BackupRuleResourceTypeProperty(\n            rule_name=\"ruleName\",\n            target_backup_vault=\"targetBackupVault\",\n\n            # the properties below are optional\n            completion_window_minutes=123,\n            copy_actions=[backup.CfnBackupPlan.CopyActionResourceTypeProperty(\n                destination_backup_vault_arn=\"destinationBackupVaultArn\",\n\n                # the properties below are optional\n                lifecycle=backup.CfnBackupPlan.LifecycleResourceTypeProperty(\n                    delete_after_days=123,\n                    move_to_cold_storage_after_days=123\n                )\n            )],\n            enable_continuous_backup=False,\n            lifecycle=backup.CfnBackupPlan.LifecycleResourceTypeProperty(\n                delete_after_days=123,\n                move_to_cold_storage_after_days=123\n            ),\n            recovery_point_tags={\n                \"recovery_point_tags_key\": \"recoveryPointTags\"\n            },\n            schedule_expression=\"scheduleExpression\",\n            start_window_minutes=123\n        )],\n\n        # the properties below are optional\n        advanced_backup_settings=[backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty(\n            backup_options=backup_options,\n            resource_type=\"resourceType\"\n        )]\n    ),\n\n    # the properties below are optional\n    backup_plan_tags={\n        \"backup_plan_tags_key\": \"backupPlanTags\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar backupOptions;\n\nCfnBackupPlan cfnBackupPlan = new CfnBackupPlan(this, \"MyCfnBackupPlan\", new CfnBackupPlanProps {\n    BackupPlan = new BackupPlanResourceTypeProperty {\n        BackupPlanName = \"backupPlanName\",\n        BackupPlanRule = new [] { new BackupRuleResourceTypeProperty {\n            RuleName = \"ruleName\",\n            TargetBackupVault = \"targetBackupVault\",\n\n            // the properties below are optional\n            CompletionWindowMinutes = 123,\n            CopyActions = new [] { new CopyActionResourceTypeProperty {\n                DestinationBackupVaultArn = \"destinationBackupVaultArn\",\n\n                // the properties below are optional\n                Lifecycle = new LifecycleResourceTypeProperty {\n                    DeleteAfterDays = 123,\n                    MoveToColdStorageAfterDays = 123\n                }\n            } },\n            EnableContinuousBackup = false,\n            Lifecycle = new LifecycleResourceTypeProperty {\n                DeleteAfterDays = 123,\n                MoveToColdStorageAfterDays = 123\n            },\n            RecoveryPointTags = new Dictionary<string, string> {\n                { \"recoveryPointTagsKey\", \"recoveryPointTags\" }\n            },\n            ScheduleExpression = \"scheduleExpression\",\n            StartWindowMinutes = 123\n        } },\n\n        // the properties below are optional\n        AdvancedBackupSettings = new [] { new AdvancedBackupSettingResourceTypeProperty {\n            BackupOptions = backupOptions,\n            ResourceType = \"resourceType\"\n        } }\n    },\n\n    // the properties below are optional\n    BackupPlanTags = new Dictionary<string, string> {\n        { \"backupPlanTagsKey\", \"backupPlanTags\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject backupOptions;\n\nCfnBackupPlan cfnBackupPlan = CfnBackupPlan.Builder.create(this, \"MyCfnBackupPlan\")\n        .backupPlan(BackupPlanResourceTypeProperty.builder()\n                .backupPlanName(\"backupPlanName\")\n                .backupPlanRule(List.of(BackupRuleResourceTypeProperty.builder()\n                        .ruleName(\"ruleName\")\n                        .targetBackupVault(\"targetBackupVault\")\n\n                        // the properties below are optional\n                        .completionWindowMinutes(123)\n                        .copyActions(List.of(CopyActionResourceTypeProperty.builder()\n                                .destinationBackupVaultArn(\"destinationBackupVaultArn\")\n\n                                // the properties below are optional\n                                .lifecycle(LifecycleResourceTypeProperty.builder()\n                                        .deleteAfterDays(123)\n                                        .moveToColdStorageAfterDays(123)\n                                        .build())\n                                .build()))\n                        .enableContinuousBackup(false)\n                        .lifecycle(LifecycleResourceTypeProperty.builder()\n                                .deleteAfterDays(123)\n                                .moveToColdStorageAfterDays(123)\n                                .build())\n                        .recoveryPointTags(Map.of(\n                                \"recoveryPointTagsKey\", \"recoveryPointTags\"))\n                        .scheduleExpression(\"scheduleExpression\")\n                        .startWindowMinutes(123)\n                        .build()))\n\n                // the properties below are optional\n                .advancedBackupSettings(List.of(AdvancedBackupSettingResourceTypeProperty.builder()\n                        .backupOptions(backupOptions)\n                        .resourceType(\"resourceType\")\n                        .build()))\n                .build())\n\n        // the properties below are optional\n        .backupPlanTags(Map.of(\n                \"backupPlanTagsKey\", \"backupPlanTags\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar backupOptions interface{}\n\ncfnBackupPlan := backup.NewCfnBackupPlan(this, jsii.String(\"MyCfnBackupPlan\"), &cfnBackupPlanProps{\n\tbackupPlan: &backupPlanResourceTypeProperty{\n\t\tbackupPlanName: jsii.String(\"backupPlanName\"),\n\t\tbackupPlanRule: []interface{}{\n\t\t\t&backupRuleResourceTypeProperty{\n\t\t\t\truleName: jsii.String(\"ruleName\"),\n\t\t\t\ttargetBackupVault: jsii.String(\"targetBackupVault\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcompletionWindowMinutes: jsii.Number(123),\n\t\t\t\tcopyActions: []interface{}{\n\t\t\t\t\t&copyActionResourceTypeProperty{\n\t\t\t\t\t\tdestinationBackupVaultArn: jsii.String(\"destinationBackupVaultArn\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tlifecycle: &lifecycleResourceTypeProperty{\n\t\t\t\t\t\t\tdeleteAfterDays: jsii.Number(123),\n\t\t\t\t\t\t\tmoveToColdStorageAfterDays: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tenableContinuousBackup: jsii.Boolean(false),\n\t\t\t\tlifecycle: &lifecycleResourceTypeProperty{\n\t\t\t\t\tdeleteAfterDays: jsii.Number(123),\n\t\t\t\t\tmoveToColdStorageAfterDays: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\trecoveryPointTags: map[string]*string{\n\t\t\t\t\t\"recoveryPointTagsKey\": jsii.String(\"recoveryPointTags\"),\n\t\t\t\t},\n\t\t\t\tscheduleExpression: jsii.String(\"scheduleExpression\"),\n\t\t\t\tstartWindowMinutes: jsii.Number(123),\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tadvancedBackupSettings: []interface{}{\n\t\t\t&advancedBackupSettingResourceTypeProperty{\n\t\t\t\tbackupOptions: backupOptions,\n\t\t\t\tresourceType: jsii.String(\"resourceType\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tbackupPlanTags: map[string]*string{\n\t\t\"backupPlanTagsKey\": jsii.String(\"backupPlanTags\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const backupOptions: any;\nconst cfnBackupPlan = new backup.CfnBackupPlan(this, 'MyCfnBackupPlan', {\n  backupPlan: {\n    backupPlanName: 'backupPlanName',\n    backupPlanRule: [{\n      ruleName: 'ruleName',\n      targetBackupVault: 'targetBackupVault',\n\n      // the properties below are optional\n      completionWindowMinutes: 123,\n      copyActions: [{\n        destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n        // the properties below are optional\n        lifecycle: {\n          deleteAfterDays: 123,\n          moveToColdStorageAfterDays: 123,\n        },\n      }],\n      enableContinuousBackup: false,\n      lifecycle: {\n        deleteAfterDays: 123,\n        moveToColdStorageAfterDays: 123,\n      },\n      recoveryPointTags: {\n        recoveryPointTagsKey: 'recoveryPointTags',\n      },\n      scheduleExpression: 'scheduleExpression',\n      startWindowMinutes: 123,\n    }],\n\n    // the properties below are optional\n    advancedBackupSettings: [{\n      backupOptions: backupOptions,\n      resourceType: 'resourceType',\n    }],\n  },\n\n  // the properties below are optional\n  backupPlanTags: {\n    backupPlanTagsKey: 'backupPlanTags',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupPlan"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupPlan",
        "@aws-cdk/aws-backup.CfnBackupPlanProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const backupOptions: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnBackupPlan = new backup.CfnBackupPlan(this, 'MyCfnBackupPlan', {\n  backupPlan: {\n    backupPlanName: 'backupPlanName',\n    backupPlanRule: [{\n      ruleName: 'ruleName',\n      targetBackupVault: 'targetBackupVault',\n\n      // the properties below are optional\n      completionWindowMinutes: 123,\n      copyActions: [{\n        destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n        // the properties below are optional\n        lifecycle: {\n          deleteAfterDays: 123,\n          moveToColdStorageAfterDays: 123,\n        },\n      }],\n      enableContinuousBackup: false,\n      lifecycle: {\n        deleteAfterDays: 123,\n        moveToColdStorageAfterDays: 123,\n      },\n      recoveryPointTags: {\n        recoveryPointTagsKey: 'recoveryPointTags',\n      },\n      scheduleExpression: 'scheduleExpression',\n      startWindowMinutes: 123,\n    }],\n\n    // the properties below are optional\n    advancedBackupSettings: [{\n      backupOptions: backupOptions,\n      resourceType: 'resourceType',\n    }],\n  },\n\n  // the properties below are optional\n  backupPlanTags: {\n    backupPlanTagsKey: 'backupPlanTags',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 10,
        "75": 30,
        "91": 1,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 3,
        "193": 9,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 24,
        "290": 1
      },
      "fqnsFingerprint": "102060679b6579227f0b9991b2aff294f2860383f38cc1b16e1b6b2e5ceaaf6f"
    },
    "2bf4299b00f8e2df77ef884010b96389c1ed4a5d7617d34ba9b19ea2a25382d0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# backup_options: Any\n\nadvanced_backup_setting_resource_type_property = backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty(\n    backup_options=backup_options,\n    resource_type=\"resourceType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar backupOptions;\n\nAdvancedBackupSettingResourceTypeProperty advancedBackupSettingResourceTypeProperty = new AdvancedBackupSettingResourceTypeProperty {\n    BackupOptions = backupOptions,\n    ResourceType = \"resourceType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject backupOptions;\n\nAdvancedBackupSettingResourceTypeProperty advancedBackupSettingResourceTypeProperty = AdvancedBackupSettingResourceTypeProperty.builder()\n        .backupOptions(backupOptions)\n        .resourceType(\"resourceType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar backupOptions interface{}\n\nadvancedBackupSettingResourceTypeProperty := &advancedBackupSettingResourceTypeProperty{\n\tbackupOptions: backupOptions,\n\tresourceType: jsii.String(\"resourceType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const backupOptions: any;\nconst advancedBackupSettingResourceTypeProperty: backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty = {\n  backupOptions: backupOptions,\n  resourceType: 'resourceType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const backupOptions: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst advancedBackupSettingResourceTypeProperty: backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty = {\n  backupOptions: backupOptions,\n  resourceType: 'resourceType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "ae800ebc3eab7edb5cbd1108ebb86157575023bbbeb494f83166daa534a55379"
    },
    "4366fb7f75c7bcd1be89ae3b8287c43d76c621d7735631d8da882db24fea90cc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# backup_options: Any\n\nbackup_plan_resource_type_property = backup.CfnBackupPlan.BackupPlanResourceTypeProperty(\n    backup_plan_name=\"backupPlanName\",\n    backup_plan_rule=[backup.CfnBackupPlan.BackupRuleResourceTypeProperty(\n        rule_name=\"ruleName\",\n        target_backup_vault=\"targetBackupVault\",\n\n        # the properties below are optional\n        completion_window_minutes=123,\n        copy_actions=[backup.CfnBackupPlan.CopyActionResourceTypeProperty(\n            destination_backup_vault_arn=\"destinationBackupVaultArn\",\n\n            # the properties below are optional\n            lifecycle=backup.CfnBackupPlan.LifecycleResourceTypeProperty(\n                delete_after_days=123,\n                move_to_cold_storage_after_days=123\n            )\n        )],\n        enable_continuous_backup=False,\n        lifecycle=backup.CfnBackupPlan.LifecycleResourceTypeProperty(\n            delete_after_days=123,\n            move_to_cold_storage_after_days=123\n        ),\n        recovery_point_tags={\n            \"recovery_point_tags_key\": \"recoveryPointTags\"\n        },\n        schedule_expression=\"scheduleExpression\",\n        start_window_minutes=123\n    )],\n\n    # the properties below are optional\n    advanced_backup_settings=[backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty(\n        backup_options=backup_options,\n        resource_type=\"resourceType\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar backupOptions;\n\nBackupPlanResourceTypeProperty backupPlanResourceTypeProperty = new BackupPlanResourceTypeProperty {\n    BackupPlanName = \"backupPlanName\",\n    BackupPlanRule = new [] { new BackupRuleResourceTypeProperty {\n        RuleName = \"ruleName\",\n        TargetBackupVault = \"targetBackupVault\",\n\n        // the properties below are optional\n        CompletionWindowMinutes = 123,\n        CopyActions = new [] { new CopyActionResourceTypeProperty {\n            DestinationBackupVaultArn = \"destinationBackupVaultArn\",\n\n            // the properties below are optional\n            Lifecycle = new LifecycleResourceTypeProperty {\n                DeleteAfterDays = 123,\n                MoveToColdStorageAfterDays = 123\n            }\n        } },\n        EnableContinuousBackup = false,\n        Lifecycle = new LifecycleResourceTypeProperty {\n            DeleteAfterDays = 123,\n            MoveToColdStorageAfterDays = 123\n        },\n        RecoveryPointTags = new Dictionary<string, string> {\n            { \"recoveryPointTagsKey\", \"recoveryPointTags\" }\n        },\n        ScheduleExpression = \"scheduleExpression\",\n        StartWindowMinutes = 123\n    } },\n\n    // the properties below are optional\n    AdvancedBackupSettings = new [] { new AdvancedBackupSettingResourceTypeProperty {\n        BackupOptions = backupOptions,\n        ResourceType = \"resourceType\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject backupOptions;\n\nBackupPlanResourceTypeProperty backupPlanResourceTypeProperty = BackupPlanResourceTypeProperty.builder()\n        .backupPlanName(\"backupPlanName\")\n        .backupPlanRule(List.of(BackupRuleResourceTypeProperty.builder()\n                .ruleName(\"ruleName\")\n                .targetBackupVault(\"targetBackupVault\")\n\n                // the properties below are optional\n                .completionWindowMinutes(123)\n                .copyActions(List.of(CopyActionResourceTypeProperty.builder()\n                        .destinationBackupVaultArn(\"destinationBackupVaultArn\")\n\n                        // the properties below are optional\n                        .lifecycle(LifecycleResourceTypeProperty.builder()\n                                .deleteAfterDays(123)\n                                .moveToColdStorageAfterDays(123)\n                                .build())\n                        .build()))\n                .enableContinuousBackup(false)\n                .lifecycle(LifecycleResourceTypeProperty.builder()\n                        .deleteAfterDays(123)\n                        .moveToColdStorageAfterDays(123)\n                        .build())\n                .recoveryPointTags(Map.of(\n                        \"recoveryPointTagsKey\", \"recoveryPointTags\"))\n                .scheduleExpression(\"scheduleExpression\")\n                .startWindowMinutes(123)\n                .build()))\n\n        // the properties below are optional\n        .advancedBackupSettings(List.of(AdvancedBackupSettingResourceTypeProperty.builder()\n                .backupOptions(backupOptions)\n                .resourceType(\"resourceType\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar backupOptions interface{}\n\nbackupPlanResourceTypeProperty := &backupPlanResourceTypeProperty{\n\tbackupPlanName: jsii.String(\"backupPlanName\"),\n\tbackupPlanRule: []interface{}{\n\t\t&backupRuleResourceTypeProperty{\n\t\t\truleName: jsii.String(\"ruleName\"),\n\t\t\ttargetBackupVault: jsii.String(\"targetBackupVault\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcompletionWindowMinutes: jsii.Number(123),\n\t\t\tcopyActions: []interface{}{\n\t\t\t\t&copyActionResourceTypeProperty{\n\t\t\t\t\tdestinationBackupVaultArn: jsii.String(\"destinationBackupVaultArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tlifecycle: &lifecycleResourceTypeProperty{\n\t\t\t\t\t\tdeleteAfterDays: jsii.Number(123),\n\t\t\t\t\t\tmoveToColdStorageAfterDays: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tenableContinuousBackup: jsii.Boolean(false),\n\t\t\tlifecycle: &lifecycleResourceTypeProperty{\n\t\t\t\tdeleteAfterDays: jsii.Number(123),\n\t\t\t\tmoveToColdStorageAfterDays: jsii.Number(123),\n\t\t\t},\n\t\t\trecoveryPointTags: map[string]*string{\n\t\t\t\t\"recoveryPointTagsKey\": jsii.String(\"recoveryPointTags\"),\n\t\t\t},\n\t\t\tscheduleExpression: jsii.String(\"scheduleExpression\"),\n\t\t\tstartWindowMinutes: jsii.Number(123),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tadvancedBackupSettings: []interface{}{\n\t\t&advancedBackupSettingResourceTypeProperty{\n\t\t\tbackupOptions: backupOptions,\n\t\t\tresourceType: jsii.String(\"resourceType\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const backupOptions: any;\nconst backupPlanResourceTypeProperty: backup.CfnBackupPlan.BackupPlanResourceTypeProperty = {\n  backupPlanName: 'backupPlanName',\n  backupPlanRule: [{\n    ruleName: 'ruleName',\n    targetBackupVault: 'targetBackupVault',\n\n    // the properties below are optional\n    completionWindowMinutes: 123,\n    copyActions: [{\n      destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n      // the properties below are optional\n      lifecycle: {\n        deleteAfterDays: 123,\n        moveToColdStorageAfterDays: 123,\n      },\n    }],\n    enableContinuousBackup: false,\n    lifecycle: {\n      deleteAfterDays: 123,\n      moveToColdStorageAfterDays: 123,\n    },\n    recoveryPointTags: {\n      recoveryPointTagsKey: 'recoveryPointTags',\n    },\n    scheduleExpression: 'scheduleExpression',\n    startWindowMinutes: 123,\n  }],\n\n  // the properties below are optional\n  advancedBackupSettings: [{\n    backupOptions: backupOptions,\n    resourceType: 'resourceType',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.BackupPlanResourceTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupPlan.BackupPlanResourceTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const backupOptions: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst backupPlanResourceTypeProperty: backup.CfnBackupPlan.BackupPlanResourceTypeProperty = {\n  backupPlanName: 'backupPlanName',\n  backupPlanRule: [{\n    ruleName: 'ruleName',\n    targetBackupVault: 'targetBackupVault',\n\n    // the properties below are optional\n    completionWindowMinutes: 123,\n    copyActions: [{\n      destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n      // the properties below are optional\n      lifecycle: {\n        deleteAfterDays: 123,\n        moveToColdStorageAfterDays: 123,\n      },\n    }],\n    enableContinuousBackup: false,\n    lifecycle: {\n      deleteAfterDays: 123,\n      moveToColdStorageAfterDays: 123,\n    },\n    recoveryPointTags: {\n      recoveryPointTagsKey: 'recoveryPointTags',\n    },\n    scheduleExpression: 'scheduleExpression',\n    startWindowMinutes: 123,\n  }],\n\n  // the properties below are optional\n  advancedBackupSettings: [{\n    backupOptions: backupOptions,\n    resourceType: 'resourceType',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 8,
        "75": 28,
        "91": 1,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 3,
        "193": 7,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 21,
        "290": 1
      },
      "fqnsFingerprint": "c23a9cc48541d5aa5cc809b93ed6a1b3bfca3acc19889cbf01088f57c0da418a"
    },
    "b2bd2a29efd6a186a02a6f472876031f675c6502f5989633875ca757a6bb88af": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\nbackup_rule_resource_type_property = backup.CfnBackupPlan.BackupRuleResourceTypeProperty(\n    rule_name=\"ruleName\",\n    target_backup_vault=\"targetBackupVault\",\n\n    # the properties below are optional\n    completion_window_minutes=123,\n    copy_actions=[backup.CfnBackupPlan.CopyActionResourceTypeProperty(\n        destination_backup_vault_arn=\"destinationBackupVaultArn\",\n\n        # the properties below are optional\n        lifecycle=backup.CfnBackupPlan.LifecycleResourceTypeProperty(\n            delete_after_days=123,\n            move_to_cold_storage_after_days=123\n        )\n    )],\n    enable_continuous_backup=False,\n    lifecycle=backup.CfnBackupPlan.LifecycleResourceTypeProperty(\n        delete_after_days=123,\n        move_to_cold_storage_after_days=123\n    ),\n    recovery_point_tags={\n        \"recovery_point_tags_key\": \"recoveryPointTags\"\n    },\n    schedule_expression=\"scheduleExpression\",\n    start_window_minutes=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nBackupRuleResourceTypeProperty backupRuleResourceTypeProperty = new BackupRuleResourceTypeProperty {\n    RuleName = \"ruleName\",\n    TargetBackupVault = \"targetBackupVault\",\n\n    // the properties below are optional\n    CompletionWindowMinutes = 123,\n    CopyActions = new [] { new CopyActionResourceTypeProperty {\n        DestinationBackupVaultArn = \"destinationBackupVaultArn\",\n\n        // the properties below are optional\n        Lifecycle = new LifecycleResourceTypeProperty {\n            DeleteAfterDays = 123,\n            MoveToColdStorageAfterDays = 123\n        }\n    } },\n    EnableContinuousBackup = false,\n    Lifecycle = new LifecycleResourceTypeProperty {\n        DeleteAfterDays = 123,\n        MoveToColdStorageAfterDays = 123\n    },\n    RecoveryPointTags = new Dictionary<string, string> {\n        { \"recoveryPointTagsKey\", \"recoveryPointTags\" }\n    },\n    ScheduleExpression = \"scheduleExpression\",\n    StartWindowMinutes = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nBackupRuleResourceTypeProperty backupRuleResourceTypeProperty = BackupRuleResourceTypeProperty.builder()\n        .ruleName(\"ruleName\")\n        .targetBackupVault(\"targetBackupVault\")\n\n        // the properties below are optional\n        .completionWindowMinutes(123)\n        .copyActions(List.of(CopyActionResourceTypeProperty.builder()\n                .destinationBackupVaultArn(\"destinationBackupVaultArn\")\n\n                // the properties below are optional\n                .lifecycle(LifecycleResourceTypeProperty.builder()\n                        .deleteAfterDays(123)\n                        .moveToColdStorageAfterDays(123)\n                        .build())\n                .build()))\n        .enableContinuousBackup(false)\n        .lifecycle(LifecycleResourceTypeProperty.builder()\n                .deleteAfterDays(123)\n                .moveToColdStorageAfterDays(123)\n                .build())\n        .recoveryPointTags(Map.of(\n                \"recoveryPointTagsKey\", \"recoveryPointTags\"))\n        .scheduleExpression(\"scheduleExpression\")\n        .startWindowMinutes(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nbackupRuleResourceTypeProperty := &backupRuleResourceTypeProperty{\n\truleName: jsii.String(\"ruleName\"),\n\ttargetBackupVault: jsii.String(\"targetBackupVault\"),\n\n\t// the properties below are optional\n\tcompletionWindowMinutes: jsii.Number(123),\n\tcopyActions: []interface{}{\n\t\t&copyActionResourceTypeProperty{\n\t\t\tdestinationBackupVaultArn: jsii.String(\"destinationBackupVaultArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tlifecycle: &lifecycleResourceTypeProperty{\n\t\t\t\tdeleteAfterDays: jsii.Number(123),\n\t\t\t\tmoveToColdStorageAfterDays: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\tenableContinuousBackup: jsii.Boolean(false),\n\tlifecycle: &lifecycleResourceTypeProperty{\n\t\tdeleteAfterDays: jsii.Number(123),\n\t\tmoveToColdStorageAfterDays: jsii.Number(123),\n\t},\n\trecoveryPointTags: map[string]*string{\n\t\t\"recoveryPointTagsKey\": jsii.String(\"recoveryPointTags\"),\n\t},\n\tscheduleExpression: jsii.String(\"scheduleExpression\"),\n\tstartWindowMinutes: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst backupRuleResourceTypeProperty: backup.CfnBackupPlan.BackupRuleResourceTypeProperty = {\n  ruleName: 'ruleName',\n  targetBackupVault: 'targetBackupVault',\n\n  // the properties below are optional\n  completionWindowMinutes: 123,\n  copyActions: [{\n    destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n    // the properties below are optional\n    lifecycle: {\n      deleteAfterDays: 123,\n      moveToColdStorageAfterDays: 123,\n    },\n  }],\n  enableContinuousBackup: false,\n  lifecycle: {\n    deleteAfterDays: 123,\n    moveToColdStorageAfterDays: 123,\n  },\n  recoveryPointTags: {\n    recoveryPointTagsKey: 'recoveryPointTags',\n  },\n  scheduleExpression: 'scheduleExpression',\n  startWindowMinutes: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.BackupRuleResourceTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupPlan.BackupRuleResourceTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst backupRuleResourceTypeProperty: backup.CfnBackupPlan.BackupRuleResourceTypeProperty = {\n  ruleName: 'ruleName',\n  targetBackupVault: 'targetBackupVault',\n\n  // the properties below are optional\n  completionWindowMinutes: 123,\n  copyActions: [{\n    destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n    // the properties below are optional\n    lifecycle: {\n      deleteAfterDays: 123,\n      moveToColdStorageAfterDays: 123,\n    },\n  }],\n  enableContinuousBackup: false,\n  lifecycle: {\n    deleteAfterDays: 123,\n    moveToColdStorageAfterDays: 123,\n  },\n  recoveryPointTags: {\n    recoveryPointTagsKey: 'recoveryPointTags',\n  },\n  scheduleExpression: 'scheduleExpression',\n  startWindowMinutes: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 6,
        "75": 21,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 16,
        "290": 1
      },
      "fqnsFingerprint": "0f6039c4c3c2c84d476efead527aeab930ba3ba768b2a9d99b49babda4d34503"
    },
    "a3276a0b938be14c8d871b5e5650be3bff2267737591f213ef14f172d00d094c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\ncopy_action_resource_type_property = backup.CfnBackupPlan.CopyActionResourceTypeProperty(\n    destination_backup_vault_arn=\"destinationBackupVaultArn\",\n\n    # the properties below are optional\n    lifecycle=backup.CfnBackupPlan.LifecycleResourceTypeProperty(\n        delete_after_days=123,\n        move_to_cold_storage_after_days=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nCopyActionResourceTypeProperty copyActionResourceTypeProperty = new CopyActionResourceTypeProperty {\n    DestinationBackupVaultArn = \"destinationBackupVaultArn\",\n\n    // the properties below are optional\n    Lifecycle = new LifecycleResourceTypeProperty {\n        DeleteAfterDays = 123,\n        MoveToColdStorageAfterDays = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nCopyActionResourceTypeProperty copyActionResourceTypeProperty = CopyActionResourceTypeProperty.builder()\n        .destinationBackupVaultArn(\"destinationBackupVaultArn\")\n\n        // the properties below are optional\n        .lifecycle(LifecycleResourceTypeProperty.builder()\n                .deleteAfterDays(123)\n                .moveToColdStorageAfterDays(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\ncopyActionResourceTypeProperty := &copyActionResourceTypeProperty{\n\tdestinationBackupVaultArn: jsii.String(\"destinationBackupVaultArn\"),\n\n\t// the properties below are optional\n\tlifecycle: &lifecycleResourceTypeProperty{\n\t\tdeleteAfterDays: jsii.Number(123),\n\t\tmoveToColdStorageAfterDays: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst copyActionResourceTypeProperty: backup.CfnBackupPlan.CopyActionResourceTypeProperty = {\n  destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n  // the properties below are optional\n  lifecycle: {\n    deleteAfterDays: 123,\n    moveToColdStorageAfterDays: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.CopyActionResourceTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupPlan.CopyActionResourceTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst copyActionResourceTypeProperty: backup.CfnBackupPlan.CopyActionResourceTypeProperty = {\n  destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n  // the properties below are optional\n  lifecycle: {\n    deleteAfterDays: 123,\n    moveToColdStorageAfterDays: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "d60f087ed412707aff83c85aeb37253621abd426201cf4f8f758975c5c596191"
    },
    "274512b12d744310af6d892c17fd0f09885371422c39e1e536eae4df0860c3f3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\nlifecycle_resource_type_property = backup.CfnBackupPlan.LifecycleResourceTypeProperty(\n    delete_after_days=123,\n    move_to_cold_storage_after_days=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nLifecycleResourceTypeProperty lifecycleResourceTypeProperty = new LifecycleResourceTypeProperty {\n    DeleteAfterDays = 123,\n    MoveToColdStorageAfterDays = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nLifecycleResourceTypeProperty lifecycleResourceTypeProperty = LifecycleResourceTypeProperty.builder()\n        .deleteAfterDays(123)\n        .moveToColdStorageAfterDays(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nlifecycleResourceTypeProperty := &lifecycleResourceTypeProperty{\n\tdeleteAfterDays: jsii.Number(123),\n\tmoveToColdStorageAfterDays: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst lifecycleResourceTypeProperty: backup.CfnBackupPlan.LifecycleResourceTypeProperty = {\n  deleteAfterDays: 123,\n  moveToColdStorageAfterDays: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.LifecycleResourceTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupPlan.LifecycleResourceTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lifecycleResourceTypeProperty: backup.CfnBackupPlan.LifecycleResourceTypeProperty = {\n  deleteAfterDays: 123,\n  moveToColdStorageAfterDays: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d064fe637830132c4e39b2cde1e5ef0873a445ef30c26ba9083e431d92653946"
    },
    "d02695710f8a682cd0f92d818662483c505b93f332f1ac8b627f5c37027b3d88": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# backup_options: Any\n\ncfn_backup_plan_props = backup.CfnBackupPlanProps(\n    backup_plan=backup.CfnBackupPlan.BackupPlanResourceTypeProperty(\n        backup_plan_name=\"backupPlanName\",\n        backup_plan_rule=[backup.CfnBackupPlan.BackupRuleResourceTypeProperty(\n            rule_name=\"ruleName\",\n            target_backup_vault=\"targetBackupVault\",\n\n            # the properties below are optional\n            completion_window_minutes=123,\n            copy_actions=[backup.CfnBackupPlan.CopyActionResourceTypeProperty(\n                destination_backup_vault_arn=\"destinationBackupVaultArn\",\n\n                # the properties below are optional\n                lifecycle=backup.CfnBackupPlan.LifecycleResourceTypeProperty(\n                    delete_after_days=123,\n                    move_to_cold_storage_after_days=123\n                )\n            )],\n            enable_continuous_backup=False,\n            lifecycle=backup.CfnBackupPlan.LifecycleResourceTypeProperty(\n                delete_after_days=123,\n                move_to_cold_storage_after_days=123\n            ),\n            recovery_point_tags={\n                \"recovery_point_tags_key\": \"recoveryPointTags\"\n            },\n            schedule_expression=\"scheduleExpression\",\n            start_window_minutes=123\n        )],\n\n        # the properties below are optional\n        advanced_backup_settings=[backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty(\n            backup_options=backup_options,\n            resource_type=\"resourceType\"\n        )]\n    ),\n\n    # the properties below are optional\n    backup_plan_tags={\n        \"backup_plan_tags_key\": \"backupPlanTags\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar backupOptions;\n\nCfnBackupPlanProps cfnBackupPlanProps = new CfnBackupPlanProps {\n    BackupPlan = new BackupPlanResourceTypeProperty {\n        BackupPlanName = \"backupPlanName\",\n        BackupPlanRule = new [] { new BackupRuleResourceTypeProperty {\n            RuleName = \"ruleName\",\n            TargetBackupVault = \"targetBackupVault\",\n\n            // the properties below are optional\n            CompletionWindowMinutes = 123,\n            CopyActions = new [] { new CopyActionResourceTypeProperty {\n                DestinationBackupVaultArn = \"destinationBackupVaultArn\",\n\n                // the properties below are optional\n                Lifecycle = new LifecycleResourceTypeProperty {\n                    DeleteAfterDays = 123,\n                    MoveToColdStorageAfterDays = 123\n                }\n            } },\n            EnableContinuousBackup = false,\n            Lifecycle = new LifecycleResourceTypeProperty {\n                DeleteAfterDays = 123,\n                MoveToColdStorageAfterDays = 123\n            },\n            RecoveryPointTags = new Dictionary<string, string> {\n                { \"recoveryPointTagsKey\", \"recoveryPointTags\" }\n            },\n            ScheduleExpression = \"scheduleExpression\",\n            StartWindowMinutes = 123\n        } },\n\n        // the properties below are optional\n        AdvancedBackupSettings = new [] { new AdvancedBackupSettingResourceTypeProperty {\n            BackupOptions = backupOptions,\n            ResourceType = \"resourceType\"\n        } }\n    },\n\n    // the properties below are optional\n    BackupPlanTags = new Dictionary<string, string> {\n        { \"backupPlanTagsKey\", \"backupPlanTags\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject backupOptions;\n\nCfnBackupPlanProps cfnBackupPlanProps = CfnBackupPlanProps.builder()\n        .backupPlan(BackupPlanResourceTypeProperty.builder()\n                .backupPlanName(\"backupPlanName\")\n                .backupPlanRule(List.of(BackupRuleResourceTypeProperty.builder()\n                        .ruleName(\"ruleName\")\n                        .targetBackupVault(\"targetBackupVault\")\n\n                        // the properties below are optional\n                        .completionWindowMinutes(123)\n                        .copyActions(List.of(CopyActionResourceTypeProperty.builder()\n                                .destinationBackupVaultArn(\"destinationBackupVaultArn\")\n\n                                // the properties below are optional\n                                .lifecycle(LifecycleResourceTypeProperty.builder()\n                                        .deleteAfterDays(123)\n                                        .moveToColdStorageAfterDays(123)\n                                        .build())\n                                .build()))\n                        .enableContinuousBackup(false)\n                        .lifecycle(LifecycleResourceTypeProperty.builder()\n                                .deleteAfterDays(123)\n                                .moveToColdStorageAfterDays(123)\n                                .build())\n                        .recoveryPointTags(Map.of(\n                                \"recoveryPointTagsKey\", \"recoveryPointTags\"))\n                        .scheduleExpression(\"scheduleExpression\")\n                        .startWindowMinutes(123)\n                        .build()))\n\n                // the properties below are optional\n                .advancedBackupSettings(List.of(AdvancedBackupSettingResourceTypeProperty.builder()\n                        .backupOptions(backupOptions)\n                        .resourceType(\"resourceType\")\n                        .build()))\n                .build())\n\n        // the properties below are optional\n        .backupPlanTags(Map.of(\n                \"backupPlanTagsKey\", \"backupPlanTags\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar backupOptions interface{}\n\ncfnBackupPlanProps := &cfnBackupPlanProps{\n\tbackupPlan: &backupPlanResourceTypeProperty{\n\t\tbackupPlanName: jsii.String(\"backupPlanName\"),\n\t\tbackupPlanRule: []interface{}{\n\t\t\t&backupRuleResourceTypeProperty{\n\t\t\t\truleName: jsii.String(\"ruleName\"),\n\t\t\t\ttargetBackupVault: jsii.String(\"targetBackupVault\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcompletionWindowMinutes: jsii.Number(123),\n\t\t\t\tcopyActions: []interface{}{\n\t\t\t\t\t&copyActionResourceTypeProperty{\n\t\t\t\t\t\tdestinationBackupVaultArn: jsii.String(\"destinationBackupVaultArn\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tlifecycle: &lifecycleResourceTypeProperty{\n\t\t\t\t\t\t\tdeleteAfterDays: jsii.Number(123),\n\t\t\t\t\t\t\tmoveToColdStorageAfterDays: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tenableContinuousBackup: jsii.Boolean(false),\n\t\t\t\tlifecycle: &lifecycleResourceTypeProperty{\n\t\t\t\t\tdeleteAfterDays: jsii.Number(123),\n\t\t\t\t\tmoveToColdStorageAfterDays: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\trecoveryPointTags: map[string]*string{\n\t\t\t\t\t\"recoveryPointTagsKey\": jsii.String(\"recoveryPointTags\"),\n\t\t\t\t},\n\t\t\t\tscheduleExpression: jsii.String(\"scheduleExpression\"),\n\t\t\t\tstartWindowMinutes: jsii.Number(123),\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tadvancedBackupSettings: []interface{}{\n\t\t\t&advancedBackupSettingResourceTypeProperty{\n\t\t\t\tbackupOptions: backupOptions,\n\t\t\t\tresourceType: jsii.String(\"resourceType\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tbackupPlanTags: map[string]*string{\n\t\t\"backupPlanTagsKey\": jsii.String(\"backupPlanTags\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const backupOptions: any;\nconst cfnBackupPlanProps: backup.CfnBackupPlanProps = {\n  backupPlan: {\n    backupPlanName: 'backupPlanName',\n    backupPlanRule: [{\n      ruleName: 'ruleName',\n      targetBackupVault: 'targetBackupVault',\n\n      // the properties below are optional\n      completionWindowMinutes: 123,\n      copyActions: [{\n        destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n        // the properties below are optional\n        lifecycle: {\n          deleteAfterDays: 123,\n          moveToColdStorageAfterDays: 123,\n        },\n      }],\n      enableContinuousBackup: false,\n      lifecycle: {\n        deleteAfterDays: 123,\n        moveToColdStorageAfterDays: 123,\n      },\n      recoveryPointTags: {\n        recoveryPointTagsKey: 'recoveryPointTags',\n      },\n      scheduleExpression: 'scheduleExpression',\n      startWindowMinutes: 123,\n    }],\n\n    // the properties below are optional\n    advancedBackupSettings: [{\n      backupOptions: backupOptions,\n      resourceType: 'resourceType',\n    }],\n  },\n\n  // the properties below are optional\n  backupPlanTags: {\n    backupPlanTagsKey: 'backupPlanTags',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupPlanProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupPlanProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const backupOptions: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnBackupPlanProps: backup.CfnBackupPlanProps = {\n  backupPlan: {\n    backupPlanName: 'backupPlanName',\n    backupPlanRule: [{\n      ruleName: 'ruleName',\n      targetBackupVault: 'targetBackupVault',\n\n      // the properties below are optional\n      completionWindowMinutes: 123,\n      copyActions: [{\n        destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n        // the properties below are optional\n        lifecycle: {\n          deleteAfterDays: 123,\n          moveToColdStorageAfterDays: 123,\n        },\n      }],\n      enableContinuousBackup: false,\n      lifecycle: {\n        deleteAfterDays: 123,\n        moveToColdStorageAfterDays: 123,\n      },\n      recoveryPointTags: {\n        recoveryPointTagsKey: 'recoveryPointTags',\n      },\n      scheduleExpression: 'scheduleExpression',\n      startWindowMinutes: 123,\n    }],\n\n    // the properties below are optional\n    advancedBackupSettings: [{\n      backupOptions: backupOptions,\n      resourceType: 'resourceType',\n    }],\n  },\n\n  // the properties below are optional\n  backupPlanTags: {\n    backupPlanTagsKey: 'backupPlanTags',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 9,
        "75": 30,
        "91": 1,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 9,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 24,
        "290": 1
      },
      "fqnsFingerprint": "5a1dc7be93d752c5d367e9642c61d881ec468dad2704d4077f034ebb201c7ab0"
    },
    "7e1f54aa645501ea788d3224c30d59af0437211027bb238dd4152144e86710b6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# conditions: Any\n\ncfn_backup_selection = backup.CfnBackupSelection(self, \"MyCfnBackupSelection\",\n    backup_plan_id=\"backupPlanId\",\n    backup_selection=backup.CfnBackupSelection.BackupSelectionResourceTypeProperty(\n        iam_role_arn=\"iamRoleArn\",\n        selection_name=\"selectionName\",\n\n        # the properties below are optional\n        conditions=conditions,\n        list_of_tags=[backup.CfnBackupSelection.ConditionResourceTypeProperty(\n            condition_key=\"conditionKey\",\n            condition_type=\"conditionType\",\n            condition_value=\"conditionValue\"\n        )],\n        not_resources=[\"notResources\"],\n        resources=[\"resources\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar conditions;\n\nCfnBackupSelection cfnBackupSelection = new CfnBackupSelection(this, \"MyCfnBackupSelection\", new CfnBackupSelectionProps {\n    BackupPlanId = \"backupPlanId\",\n    BackupSelection = new BackupSelectionResourceTypeProperty {\n        IamRoleArn = \"iamRoleArn\",\n        SelectionName = \"selectionName\",\n\n        // the properties below are optional\n        Conditions = conditions,\n        ListOfTags = new [] { new ConditionResourceTypeProperty {\n            ConditionKey = \"conditionKey\",\n            ConditionType = \"conditionType\",\n            ConditionValue = \"conditionValue\"\n        } },\n        NotResources = new [] { \"notResources\" },\n        Resources = new [] { \"resources\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject conditions;\n\nCfnBackupSelection cfnBackupSelection = CfnBackupSelection.Builder.create(this, \"MyCfnBackupSelection\")\n        .backupPlanId(\"backupPlanId\")\n        .backupSelection(BackupSelectionResourceTypeProperty.builder()\n                .iamRoleArn(\"iamRoleArn\")\n                .selectionName(\"selectionName\")\n\n                // the properties below are optional\n                .conditions(conditions)\n                .listOfTags(List.of(ConditionResourceTypeProperty.builder()\n                        .conditionKey(\"conditionKey\")\n                        .conditionType(\"conditionType\")\n                        .conditionValue(\"conditionValue\")\n                        .build()))\n                .notResources(List.of(\"notResources\"))\n                .resources(List.of(\"resources\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar conditions interface{}\n\ncfnBackupSelection := backup.NewCfnBackupSelection(this, jsii.String(\"MyCfnBackupSelection\"), &cfnBackupSelectionProps{\n\tbackupPlanId: jsii.String(\"backupPlanId\"),\n\tbackupSelection: &backupSelectionResourceTypeProperty{\n\t\tiamRoleArn: jsii.String(\"iamRoleArn\"),\n\t\tselectionName: jsii.String(\"selectionName\"),\n\n\t\t// the properties below are optional\n\t\tconditions: conditions,\n\t\tlistOfTags: []interface{}{\n\t\t\t&conditionResourceTypeProperty{\n\t\t\t\tconditionKey: jsii.String(\"conditionKey\"),\n\t\t\t\tconditionType: jsii.String(\"conditionType\"),\n\t\t\t\tconditionValue: jsii.String(\"conditionValue\"),\n\t\t\t},\n\t\t},\n\t\tnotResources: []*string{\n\t\t\tjsii.String(\"notResources\"),\n\t\t},\n\t\tresources: []*string{\n\t\t\tjsii.String(\"resources\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const conditions: any;\nconst cfnBackupSelection = new backup.CfnBackupSelection(this, 'MyCfnBackupSelection', {\n  backupPlanId: 'backupPlanId',\n  backupSelection: {\n    iamRoleArn: 'iamRoleArn',\n    selectionName: 'selectionName',\n\n    // the properties below are optional\n    conditions: conditions,\n    listOfTags: [{\n      conditionKey: 'conditionKey',\n      conditionType: 'conditionType',\n      conditionValue: 'conditionValue',\n    }],\n    notResources: ['notResources'],\n    resources: ['resources'],\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupSelection"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupSelection",
        "@aws-cdk/aws-backup.CfnBackupSelectionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const conditions: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnBackupSelection = new backup.CfnBackupSelection(this, 'MyCfnBackupSelection', {\n  backupPlanId: 'backupPlanId',\n  backupSelection: {\n    iamRoleArn: 'iamRoleArn',\n    selectionName: 'selectionName',\n\n    // the properties below are optional\n    conditions: conditions,\n    listOfTags: [{\n      conditionKey: 'conditionKey',\n      conditionType: 'conditionType',\n      conditionValue: 'conditionValue',\n    }],\n    notResources: ['notResources'],\n    resources: ['resources'],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 17,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 3,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "907ff80c6421c58eed9d25a807913d95ff892fb442d4a3020d3a86764313bb89"
    },
    "603c91289b5bac1cfd27908522cf3c9135c699954f6258412956c04d8b1225fd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# conditions: Any\n\nbackup_selection_resource_type_property = backup.CfnBackupSelection.BackupSelectionResourceTypeProperty(\n    iam_role_arn=\"iamRoleArn\",\n    selection_name=\"selectionName\",\n\n    # the properties below are optional\n    conditions=conditions,\n    list_of_tags=[backup.CfnBackupSelection.ConditionResourceTypeProperty(\n        condition_key=\"conditionKey\",\n        condition_type=\"conditionType\",\n        condition_value=\"conditionValue\"\n    )],\n    not_resources=[\"notResources\"],\n    resources=[\"resources\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar conditions;\n\nBackupSelectionResourceTypeProperty backupSelectionResourceTypeProperty = new BackupSelectionResourceTypeProperty {\n    IamRoleArn = \"iamRoleArn\",\n    SelectionName = \"selectionName\",\n\n    // the properties below are optional\n    Conditions = conditions,\n    ListOfTags = new [] { new ConditionResourceTypeProperty {\n        ConditionKey = \"conditionKey\",\n        ConditionType = \"conditionType\",\n        ConditionValue = \"conditionValue\"\n    } },\n    NotResources = new [] { \"notResources\" },\n    Resources = new [] { \"resources\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject conditions;\n\nBackupSelectionResourceTypeProperty backupSelectionResourceTypeProperty = BackupSelectionResourceTypeProperty.builder()\n        .iamRoleArn(\"iamRoleArn\")\n        .selectionName(\"selectionName\")\n\n        // the properties below are optional\n        .conditions(conditions)\n        .listOfTags(List.of(ConditionResourceTypeProperty.builder()\n                .conditionKey(\"conditionKey\")\n                .conditionType(\"conditionType\")\n                .conditionValue(\"conditionValue\")\n                .build()))\n        .notResources(List.of(\"notResources\"))\n        .resources(List.of(\"resources\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar conditions interface{}\n\nbackupSelectionResourceTypeProperty := &backupSelectionResourceTypeProperty{\n\tiamRoleArn: jsii.String(\"iamRoleArn\"),\n\tselectionName: jsii.String(\"selectionName\"),\n\n\t// the properties below are optional\n\tconditions: conditions,\n\tlistOfTags: []interface{}{\n\t\t&conditionResourceTypeProperty{\n\t\t\tconditionKey: jsii.String(\"conditionKey\"),\n\t\t\tconditionType: jsii.String(\"conditionType\"),\n\t\t\tconditionValue: jsii.String(\"conditionValue\"),\n\t\t},\n\t},\n\tnotResources: []*string{\n\t\tjsii.String(\"notResources\"),\n\t},\n\tresources: []*string{\n\t\tjsii.String(\"resources\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const conditions: any;\nconst backupSelectionResourceTypeProperty: backup.CfnBackupSelection.BackupSelectionResourceTypeProperty = {\n  iamRoleArn: 'iamRoleArn',\n  selectionName: 'selectionName',\n\n  // the properties below are optional\n  conditions: conditions,\n  listOfTags: [{\n    conditionKey: 'conditionKey',\n    conditionType: 'conditionType',\n    conditionValue: 'conditionValue',\n  }],\n  notResources: ['notResources'],\n  resources: ['resources'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupSelection.BackupSelectionResourceTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupSelection.BackupSelectionResourceTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const conditions: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst backupSelectionResourceTypeProperty: backup.CfnBackupSelection.BackupSelectionResourceTypeProperty = {\n  iamRoleArn: 'iamRoleArn',\n  selectionName: 'selectionName',\n\n  // the properties below are optional\n  conditions: conditions,\n  listOfTags: [{\n    conditionKey: 'conditionKey',\n    conditionType: 'conditionType',\n    conditionValue: 'conditionValue',\n  }],\n  notResources: ['notResources'],\n  resources: ['resources'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 16,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 3,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "de7cd98fa2046a22dd7ae4c3a9e5685f99e85e0b78f4c0b48c2e654a3605842c"
    },
    "7f61b6e9bb9f29540ff2fed9cae354188d0686aeca47e8026bcd57bee8c13807": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\ncondition_resource_type_property = backup.CfnBackupSelection.ConditionResourceTypeProperty(\n    condition_key=\"conditionKey\",\n    condition_type=\"conditionType\",\n    condition_value=\"conditionValue\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nConditionResourceTypeProperty conditionResourceTypeProperty = new ConditionResourceTypeProperty {\n    ConditionKey = \"conditionKey\",\n    ConditionType = \"conditionType\",\n    ConditionValue = \"conditionValue\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nConditionResourceTypeProperty conditionResourceTypeProperty = ConditionResourceTypeProperty.builder()\n        .conditionKey(\"conditionKey\")\n        .conditionType(\"conditionType\")\n        .conditionValue(\"conditionValue\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nconditionResourceTypeProperty := &conditionResourceTypeProperty{\n\tconditionKey: jsii.String(\"conditionKey\"),\n\tconditionType: jsii.String(\"conditionType\"),\n\tconditionValue: jsii.String(\"conditionValue\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst conditionResourceTypeProperty: backup.CfnBackupSelection.ConditionResourceTypeProperty = {\n  conditionKey: 'conditionKey',\n  conditionType: 'conditionType',\n  conditionValue: 'conditionValue',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupSelection.ConditionResourceTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupSelection.ConditionResourceTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst conditionResourceTypeProperty: backup.CfnBackupSelection.ConditionResourceTypeProperty = {\n  conditionKey: 'conditionKey',\n  conditionType: 'conditionType',\n  conditionValue: 'conditionValue',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "8255d10b9a7852b77fc7df5f888d087797017909c35ec0050eea319041381ee0"
    },
    "32c3606ceac6ebf5d13a84f330eeb35649d1d5ca54c66b1f164a27b9b2577781": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# conditions: Any\n\ncfn_backup_selection_props = backup.CfnBackupSelectionProps(\n    backup_plan_id=\"backupPlanId\",\n    backup_selection=backup.CfnBackupSelection.BackupSelectionResourceTypeProperty(\n        iam_role_arn=\"iamRoleArn\",\n        selection_name=\"selectionName\",\n\n        # the properties below are optional\n        conditions=conditions,\n        list_of_tags=[backup.CfnBackupSelection.ConditionResourceTypeProperty(\n            condition_key=\"conditionKey\",\n            condition_type=\"conditionType\",\n            condition_value=\"conditionValue\"\n        )],\n        not_resources=[\"notResources\"],\n        resources=[\"resources\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar conditions;\n\nCfnBackupSelectionProps cfnBackupSelectionProps = new CfnBackupSelectionProps {\n    BackupPlanId = \"backupPlanId\",\n    BackupSelection = new BackupSelectionResourceTypeProperty {\n        IamRoleArn = \"iamRoleArn\",\n        SelectionName = \"selectionName\",\n\n        // the properties below are optional\n        Conditions = conditions,\n        ListOfTags = new [] { new ConditionResourceTypeProperty {\n            ConditionKey = \"conditionKey\",\n            ConditionType = \"conditionType\",\n            ConditionValue = \"conditionValue\"\n        } },\n        NotResources = new [] { \"notResources\" },\n        Resources = new [] { \"resources\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject conditions;\n\nCfnBackupSelectionProps cfnBackupSelectionProps = CfnBackupSelectionProps.builder()\n        .backupPlanId(\"backupPlanId\")\n        .backupSelection(BackupSelectionResourceTypeProperty.builder()\n                .iamRoleArn(\"iamRoleArn\")\n                .selectionName(\"selectionName\")\n\n                // the properties below are optional\n                .conditions(conditions)\n                .listOfTags(List.of(ConditionResourceTypeProperty.builder()\n                        .conditionKey(\"conditionKey\")\n                        .conditionType(\"conditionType\")\n                        .conditionValue(\"conditionValue\")\n                        .build()))\n                .notResources(List.of(\"notResources\"))\n                .resources(List.of(\"resources\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar conditions interface{}\n\ncfnBackupSelectionProps := &cfnBackupSelectionProps{\n\tbackupPlanId: jsii.String(\"backupPlanId\"),\n\tbackupSelection: &backupSelectionResourceTypeProperty{\n\t\tiamRoleArn: jsii.String(\"iamRoleArn\"),\n\t\tselectionName: jsii.String(\"selectionName\"),\n\n\t\t// the properties below are optional\n\t\tconditions: conditions,\n\t\tlistOfTags: []interface{}{\n\t\t\t&conditionResourceTypeProperty{\n\t\t\t\tconditionKey: jsii.String(\"conditionKey\"),\n\t\t\t\tconditionType: jsii.String(\"conditionType\"),\n\t\t\t\tconditionValue: jsii.String(\"conditionValue\"),\n\t\t\t},\n\t\t},\n\t\tnotResources: []*string{\n\t\t\tjsii.String(\"notResources\"),\n\t\t},\n\t\tresources: []*string{\n\t\t\tjsii.String(\"resources\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const conditions: any;\nconst cfnBackupSelectionProps: backup.CfnBackupSelectionProps = {\n  backupPlanId: 'backupPlanId',\n  backupSelection: {\n    iamRoleArn: 'iamRoleArn',\n    selectionName: 'selectionName',\n\n    // the properties below are optional\n    conditions: conditions,\n    listOfTags: [{\n      conditionKey: 'conditionKey',\n      conditionType: 'conditionType',\n      conditionValue: 'conditionValue',\n    }],\n    notResources: ['notResources'],\n    resources: ['resources'],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupSelectionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupSelectionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const conditions: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnBackupSelectionProps: backup.CfnBackupSelectionProps = {\n  backupPlanId: 'backupPlanId',\n  backupSelection: {\n    iamRoleArn: 'iamRoleArn',\n    selectionName: 'selectionName',\n\n    // the properties below are optional\n    conditions: conditions,\n    listOfTags: [{\n      conditionKey: 'conditionKey',\n      conditionType: 'conditionType',\n      conditionValue: 'conditionValue',\n    }],\n    notResources: ['notResources'],\n    resources: ['resources'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 17,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 3,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "606cfb66a3667663d1a08398c8550c288e120366c09a15e3a178cfa084699c7b"
    },
    "d5dc6e80381e3b6cdbe5c43dac35e90cb468f1b4056ce016b874328a37ef0c18": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# access_policy: Any\n\ncfn_backup_vault = backup.CfnBackupVault(self, \"MyCfnBackupVault\",\n    backup_vault_name=\"backupVaultName\",\n\n    # the properties below are optional\n    access_policy=access_policy,\n    backup_vault_tags={\n        \"backup_vault_tags_key\": \"backupVaultTags\"\n    },\n    encryption_key_arn=\"encryptionKeyArn\",\n    lock_configuration=backup.CfnBackupVault.LockConfigurationTypeProperty(\n        min_retention_days=123,\n\n        # the properties below are optional\n        changeable_for_days=123,\n        max_retention_days=123\n    ),\n    notifications=backup.CfnBackupVault.NotificationObjectTypeProperty(\n        backup_vault_events=[\"backupVaultEvents\"],\n        sns_topic_arn=\"snsTopicArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar accessPolicy;\n\nCfnBackupVault cfnBackupVault = new CfnBackupVault(this, \"MyCfnBackupVault\", new CfnBackupVaultProps {\n    BackupVaultName = \"backupVaultName\",\n\n    // the properties below are optional\n    AccessPolicy = accessPolicy,\n    BackupVaultTags = new Dictionary<string, string> {\n        { \"backupVaultTagsKey\", \"backupVaultTags\" }\n    },\n    EncryptionKeyArn = \"encryptionKeyArn\",\n    LockConfiguration = new LockConfigurationTypeProperty {\n        MinRetentionDays = 123,\n\n        // the properties below are optional\n        ChangeableForDays = 123,\n        MaxRetentionDays = 123\n    },\n    Notifications = new NotificationObjectTypeProperty {\n        BackupVaultEvents = new [] { \"backupVaultEvents\" },\n        SnsTopicArn = \"snsTopicArn\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject accessPolicy;\n\nCfnBackupVault cfnBackupVault = CfnBackupVault.Builder.create(this, \"MyCfnBackupVault\")\n        .backupVaultName(\"backupVaultName\")\n\n        // the properties below are optional\n        .accessPolicy(accessPolicy)\n        .backupVaultTags(Map.of(\n                \"backupVaultTagsKey\", \"backupVaultTags\"))\n        .encryptionKeyArn(\"encryptionKeyArn\")\n        .lockConfiguration(LockConfigurationTypeProperty.builder()\n                .minRetentionDays(123)\n\n                // the properties below are optional\n                .changeableForDays(123)\n                .maxRetentionDays(123)\n                .build())\n        .notifications(NotificationObjectTypeProperty.builder()\n                .backupVaultEvents(List.of(\"backupVaultEvents\"))\n                .snsTopicArn(\"snsTopicArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar accessPolicy interface{}\n\ncfnBackupVault := backup.NewCfnBackupVault(this, jsii.String(\"MyCfnBackupVault\"), &cfnBackupVaultProps{\n\tbackupVaultName: jsii.String(\"backupVaultName\"),\n\n\t// the properties below are optional\n\taccessPolicy: accessPolicy,\n\tbackupVaultTags: map[string]*string{\n\t\t\"backupVaultTagsKey\": jsii.String(\"backupVaultTags\"),\n\t},\n\tencryptionKeyArn: jsii.String(\"encryptionKeyArn\"),\n\tlockConfiguration: &lockConfigurationTypeProperty{\n\t\tminRetentionDays: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tchangeableForDays: jsii.Number(123),\n\t\tmaxRetentionDays: jsii.Number(123),\n\t},\n\tnotifications: &notificationObjectTypeProperty{\n\t\tbackupVaultEvents: []*string{\n\t\t\tjsii.String(\"backupVaultEvents\"),\n\t\t},\n\t\tsnsTopicArn: jsii.String(\"snsTopicArn\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const accessPolicy: any;\nconst cfnBackupVault = new backup.CfnBackupVault(this, 'MyCfnBackupVault', {\n  backupVaultName: 'backupVaultName',\n\n  // the properties below are optional\n  accessPolicy: accessPolicy,\n  backupVaultTags: {\n    backupVaultTagsKey: 'backupVaultTags',\n  },\n  encryptionKeyArn: 'encryptionKeyArn',\n  lockConfiguration: {\n    minRetentionDays: 123,\n\n    // the properties below are optional\n    changeableForDays: 123,\n    maxRetentionDays: 123,\n  },\n  notifications: {\n    backupVaultEvents: ['backupVaultEvents'],\n    snsTopicArn: 'snsTopicArn',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupVault"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupVault",
        "@aws-cdk/aws-backup.CfnBackupVaultProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const accessPolicy: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnBackupVault = new backup.CfnBackupVault(this, 'MyCfnBackupVault', {\n  backupVaultName: 'backupVaultName',\n\n  // the properties below are optional\n  accessPolicy: accessPolicy,\n  backupVaultTags: {\n    backupVaultTagsKey: 'backupVaultTags',\n  },\n  encryptionKeyArn: 'encryptionKeyArn',\n  lockConfiguration: {\n    minRetentionDays: 123,\n\n    // the properties below are optional\n    changeableForDays: 123,\n    maxRetentionDays: 123,\n  },\n  notifications: {\n    backupVaultEvents: ['backupVaultEvents'],\n    snsTopicArn: 'snsTopicArn',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 7,
        "75": 18,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 1,
        "193": 4,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "0a2f7cfe5ba8340461447efb015df050699c11efc81a66ea56468a5f7b714dbd"
    },
    "91bdad41b2e14c9553a79f1f69471b0daaeb85abf7928aa4166c98bd5ec0a563": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\nlock_configuration_type_property = backup.CfnBackupVault.LockConfigurationTypeProperty(\n    min_retention_days=123,\n\n    # the properties below are optional\n    changeable_for_days=123,\n    max_retention_days=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nLockConfigurationTypeProperty lockConfigurationTypeProperty = new LockConfigurationTypeProperty {\n    MinRetentionDays = 123,\n\n    // the properties below are optional\n    ChangeableForDays = 123,\n    MaxRetentionDays = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nLockConfigurationTypeProperty lockConfigurationTypeProperty = LockConfigurationTypeProperty.builder()\n        .minRetentionDays(123)\n\n        // the properties below are optional\n        .changeableForDays(123)\n        .maxRetentionDays(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nlockConfigurationTypeProperty := &lockConfigurationTypeProperty{\n\tminRetentionDays: jsii.Number(123),\n\n\t// the properties below are optional\n\tchangeableForDays: jsii.Number(123),\n\tmaxRetentionDays: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst lockConfigurationTypeProperty: backup.CfnBackupVault.LockConfigurationTypeProperty = {\n  minRetentionDays: 123,\n\n  // the properties below are optional\n  changeableForDays: 123,\n  maxRetentionDays: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupVault.LockConfigurationTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupVault.LockConfigurationTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lockConfigurationTypeProperty: backup.CfnBackupVault.LockConfigurationTypeProperty = {\n  minRetentionDays: 123,\n\n  // the properties below are optional\n  changeableForDays: 123,\n  maxRetentionDays: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 1,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "365f9d0fcd3396f2bc888430dcf05ce2fa63dca1f0141a96c58d023a81a2f8bc"
    },
    "0b29f27d7dc87f9f6fab56595eac8b9900154f253a054f6999ab93e936b4db2a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\nnotification_object_type_property = backup.CfnBackupVault.NotificationObjectTypeProperty(\n    backup_vault_events=[\"backupVaultEvents\"],\n    sns_topic_arn=\"snsTopicArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nNotificationObjectTypeProperty notificationObjectTypeProperty = new NotificationObjectTypeProperty {\n    BackupVaultEvents = new [] { \"backupVaultEvents\" },\n    SnsTopicArn = \"snsTopicArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nNotificationObjectTypeProperty notificationObjectTypeProperty = NotificationObjectTypeProperty.builder()\n        .backupVaultEvents(List.of(\"backupVaultEvents\"))\n        .snsTopicArn(\"snsTopicArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nnotificationObjectTypeProperty := &notificationObjectTypeProperty{\n\tbackupVaultEvents: []*string{\n\t\tjsii.String(\"backupVaultEvents\"),\n\t},\n\tsnsTopicArn: jsii.String(\"snsTopicArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst notificationObjectTypeProperty: backup.CfnBackupVault.NotificationObjectTypeProperty = {\n  backupVaultEvents: ['backupVaultEvents'],\n  snsTopicArn: 'snsTopicArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupVault.NotificationObjectTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupVault.NotificationObjectTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notificationObjectTypeProperty: backup.CfnBackupVault.NotificationObjectTypeProperty = {\n  backupVaultEvents: ['backupVaultEvents'],\n  snsTopicArn: 'snsTopicArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "17c7c9f00a81e80cdb36fb2700eb35c8e2d0b94fd3fc46d96c3c5d4c28a6da71"
    },
    "e4e016efde6598d2ce5d14086c4689f616d0cf27f5199fe9666dbfadbedd9191": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# access_policy: Any\n\ncfn_backup_vault_props = backup.CfnBackupVaultProps(\n    backup_vault_name=\"backupVaultName\",\n\n    # the properties below are optional\n    access_policy=access_policy,\n    backup_vault_tags={\n        \"backup_vault_tags_key\": \"backupVaultTags\"\n    },\n    encryption_key_arn=\"encryptionKeyArn\",\n    lock_configuration=backup.CfnBackupVault.LockConfigurationTypeProperty(\n        min_retention_days=123,\n\n        # the properties below are optional\n        changeable_for_days=123,\n        max_retention_days=123\n    ),\n    notifications=backup.CfnBackupVault.NotificationObjectTypeProperty(\n        backup_vault_events=[\"backupVaultEvents\"],\n        sns_topic_arn=\"snsTopicArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar accessPolicy;\n\nCfnBackupVaultProps cfnBackupVaultProps = new CfnBackupVaultProps {\n    BackupVaultName = \"backupVaultName\",\n\n    // the properties below are optional\n    AccessPolicy = accessPolicy,\n    BackupVaultTags = new Dictionary<string, string> {\n        { \"backupVaultTagsKey\", \"backupVaultTags\" }\n    },\n    EncryptionKeyArn = \"encryptionKeyArn\",\n    LockConfiguration = new LockConfigurationTypeProperty {\n        MinRetentionDays = 123,\n\n        // the properties below are optional\n        ChangeableForDays = 123,\n        MaxRetentionDays = 123\n    },\n    Notifications = new NotificationObjectTypeProperty {\n        BackupVaultEvents = new [] { \"backupVaultEvents\" },\n        SnsTopicArn = \"snsTopicArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject accessPolicy;\n\nCfnBackupVaultProps cfnBackupVaultProps = CfnBackupVaultProps.builder()\n        .backupVaultName(\"backupVaultName\")\n\n        // the properties below are optional\n        .accessPolicy(accessPolicy)\n        .backupVaultTags(Map.of(\n                \"backupVaultTagsKey\", \"backupVaultTags\"))\n        .encryptionKeyArn(\"encryptionKeyArn\")\n        .lockConfiguration(LockConfigurationTypeProperty.builder()\n                .minRetentionDays(123)\n\n                // the properties below are optional\n                .changeableForDays(123)\n                .maxRetentionDays(123)\n                .build())\n        .notifications(NotificationObjectTypeProperty.builder()\n                .backupVaultEvents(List.of(\"backupVaultEvents\"))\n                .snsTopicArn(\"snsTopicArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar accessPolicy interface{}\n\ncfnBackupVaultProps := &cfnBackupVaultProps{\n\tbackupVaultName: jsii.String(\"backupVaultName\"),\n\n\t// the properties below are optional\n\taccessPolicy: accessPolicy,\n\tbackupVaultTags: map[string]*string{\n\t\t\"backupVaultTagsKey\": jsii.String(\"backupVaultTags\"),\n\t},\n\tencryptionKeyArn: jsii.String(\"encryptionKeyArn\"),\n\tlockConfiguration: &lockConfigurationTypeProperty{\n\t\tminRetentionDays: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tchangeableForDays: jsii.Number(123),\n\t\tmaxRetentionDays: jsii.Number(123),\n\t},\n\tnotifications: &notificationObjectTypeProperty{\n\t\tbackupVaultEvents: []*string{\n\t\t\tjsii.String(\"backupVaultEvents\"),\n\t\t},\n\t\tsnsTopicArn: jsii.String(\"snsTopicArn\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const accessPolicy: any;\nconst cfnBackupVaultProps: backup.CfnBackupVaultProps = {\n  backupVaultName: 'backupVaultName',\n\n  // the properties below are optional\n  accessPolicy: accessPolicy,\n  backupVaultTags: {\n    backupVaultTagsKey: 'backupVaultTags',\n  },\n  encryptionKeyArn: 'encryptionKeyArn',\n  lockConfiguration: {\n    minRetentionDays: 123,\n\n    // the properties below are optional\n    changeableForDays: 123,\n    maxRetentionDays: 123,\n  },\n  notifications: {\n    backupVaultEvents: ['backupVaultEvents'],\n    snsTopicArn: 'snsTopicArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnBackupVaultProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnBackupVaultProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const accessPolicy: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnBackupVaultProps: backup.CfnBackupVaultProps = {\n  backupVaultName: 'backupVaultName',\n\n  // the properties below are optional\n  accessPolicy: accessPolicy,\n  backupVaultTags: {\n    backupVaultTagsKey: 'backupVaultTags',\n  },\n  encryptionKeyArn: 'encryptionKeyArn',\n  lockConfiguration: {\n    minRetentionDays: 123,\n\n    // the properties below are optional\n    changeableForDays: 123,\n    maxRetentionDays: 123,\n  },\n  notifications: {\n    backupVaultEvents: ['backupVaultEvents'],\n    snsTopicArn: 'snsTopicArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 6,
        "75": 18,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "c6d67b368357d610094dee903c42bd0658b0d8aa9e0ef455dd910994fd5ab19c"
    },
    "2397914e320820685e6cdf35cdd7639815e120f0635a65373c4ee7ff0df2666b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# control_scope: Any\n\ncfn_framework = backup.CfnFramework(self, \"MyCfnFramework\",\n    framework_controls=[backup.CfnFramework.FrameworkControlProperty(\n        control_name=\"controlName\",\n\n        # the properties below are optional\n        control_input_parameters=[backup.CfnFramework.ControlInputParameterProperty(\n            parameter_name=\"parameterName\",\n            parameter_value=\"parameterValue\"\n        )],\n        control_scope=control_scope\n    )],\n\n    # the properties below are optional\n    framework_description=\"frameworkDescription\",\n    framework_name=\"frameworkName\",\n    framework_tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar controlScope;\n\nCfnFramework cfnFramework = new CfnFramework(this, \"MyCfnFramework\", new CfnFrameworkProps {\n    FrameworkControls = new [] { new FrameworkControlProperty {\n        ControlName = \"controlName\",\n\n        // the properties below are optional\n        ControlInputParameters = new [] { new ControlInputParameterProperty {\n            ParameterName = \"parameterName\",\n            ParameterValue = \"parameterValue\"\n        } },\n        ControlScope = controlScope\n    } },\n\n    // the properties below are optional\n    FrameworkDescription = \"frameworkDescription\",\n    FrameworkName = \"frameworkName\",\n    FrameworkTags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject controlScope;\n\nCfnFramework cfnFramework = CfnFramework.Builder.create(this, \"MyCfnFramework\")\n        .frameworkControls(List.of(FrameworkControlProperty.builder()\n                .controlName(\"controlName\")\n\n                // the properties below are optional\n                .controlInputParameters(List.of(ControlInputParameterProperty.builder()\n                        .parameterName(\"parameterName\")\n                        .parameterValue(\"parameterValue\")\n                        .build()))\n                .controlScope(controlScope)\n                .build()))\n\n        // the properties below are optional\n        .frameworkDescription(\"frameworkDescription\")\n        .frameworkName(\"frameworkName\")\n        .frameworkTags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar controlScope interface{}\n\ncfnFramework := backup.NewCfnFramework(this, jsii.String(\"MyCfnFramework\"), &cfnFrameworkProps{\n\tframeworkControls: []interface{}{\n\t\t&frameworkControlProperty{\n\t\t\tcontrolName: jsii.String(\"controlName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcontrolInputParameters: []interface{}{\n\t\t\t\t&controlInputParameterProperty{\n\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcontrolScope: controlScope,\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tframeworkDescription: jsii.String(\"frameworkDescription\"),\n\tframeworkName: jsii.String(\"frameworkName\"),\n\tframeworkTags: []interface{}{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const controlScope: any;\nconst cfnFramework = new backup.CfnFramework(this, 'MyCfnFramework', {\n  frameworkControls: [{\n    controlName: 'controlName',\n\n    // the properties below are optional\n    controlInputParameters: [{\n      parameterName: 'parameterName',\n      parameterValue: 'parameterValue',\n    }],\n    controlScope: controlScope,\n  }],\n\n  // the properties below are optional\n  frameworkDescription: 'frameworkDescription',\n  frameworkName: 'frameworkName',\n  frameworkTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnFramework"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnFramework",
        "@aws-cdk/aws-backup.CfnFrameworkProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const controlScope: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnFramework = new backup.CfnFramework(this, 'MyCfnFramework', {\n  frameworkControls: [{\n    controlName: 'controlName',\n\n    // the properties below are optional\n    controlInputParameters: [{\n      parameterName: 'parameterName',\n      parameterValue: 'parameterValue',\n    }],\n    controlScope: controlScope,\n  }],\n\n  // the properties below are optional\n  frameworkDescription: 'frameworkDescription',\n  frameworkName: 'frameworkName',\n  frameworkTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 17,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 3,
        "193": 4,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "1934fc31608daf785caef69b105ee6d9e3ff7538b1ddf10b08b4c0a962b40578"
    },
    "e58fe02cb2371ba8401e21b8680fb22afbc4210730cea3163ed433153cfe584c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\ncontrol_input_parameter_property = backup.CfnFramework.ControlInputParameterProperty(\n    parameter_name=\"parameterName\",\n    parameter_value=\"parameterValue\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nControlInputParameterProperty controlInputParameterProperty = new ControlInputParameterProperty {\n    ParameterName = \"parameterName\",\n    ParameterValue = \"parameterValue\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nControlInputParameterProperty controlInputParameterProperty = ControlInputParameterProperty.builder()\n        .parameterName(\"parameterName\")\n        .parameterValue(\"parameterValue\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\ncontrolInputParameterProperty := &controlInputParameterProperty{\n\tparameterName: jsii.String(\"parameterName\"),\n\tparameterValue: jsii.String(\"parameterValue\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst controlInputParameterProperty: backup.CfnFramework.ControlInputParameterProperty = {\n  parameterName: 'parameterName',\n  parameterValue: 'parameterValue',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnFramework.ControlInputParameterProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnFramework.ControlInputParameterProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst controlInputParameterProperty: backup.CfnFramework.ControlInputParameterProperty = {\n  parameterName: 'parameterName',\n  parameterValue: 'parameterValue',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "a868b11d924ec064405b3f4a7fe4101c814bf46db5108287452eabb11a2165c5"
    },
    "875bcb53f0e28a6f97a96dd0c5161ae9c6dc37d0c79bff6d52f8fdd881a4d12d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# control_scope: Any\n\nframework_control_property = backup.CfnFramework.FrameworkControlProperty(\n    control_name=\"controlName\",\n\n    # the properties below are optional\n    control_input_parameters=[backup.CfnFramework.ControlInputParameterProperty(\n        parameter_name=\"parameterName\",\n        parameter_value=\"parameterValue\"\n    )],\n    control_scope=control_scope\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar controlScope;\n\nFrameworkControlProperty frameworkControlProperty = new FrameworkControlProperty {\n    ControlName = \"controlName\",\n\n    // the properties below are optional\n    ControlInputParameters = new [] { new ControlInputParameterProperty {\n        ParameterName = \"parameterName\",\n        ParameterValue = \"parameterValue\"\n    } },\n    ControlScope = controlScope\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject controlScope;\n\nFrameworkControlProperty frameworkControlProperty = FrameworkControlProperty.builder()\n        .controlName(\"controlName\")\n\n        // the properties below are optional\n        .controlInputParameters(List.of(ControlInputParameterProperty.builder()\n                .parameterName(\"parameterName\")\n                .parameterValue(\"parameterValue\")\n                .build()))\n        .controlScope(controlScope)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar controlScope interface{}\n\nframeworkControlProperty := &frameworkControlProperty{\n\tcontrolName: jsii.String(\"controlName\"),\n\n\t// the properties below are optional\n\tcontrolInputParameters: []interface{}{\n\t\t&controlInputParameterProperty{\n\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t},\n\t},\n\tcontrolScope: controlScope,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const controlScope: any;\nconst frameworkControlProperty: backup.CfnFramework.FrameworkControlProperty = {\n  controlName: 'controlName',\n\n  // the properties below are optional\n  controlInputParameters: [{\n    parameterName: 'parameterName',\n    parameterValue: 'parameterValue',\n  }],\n  controlScope: controlScope,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnFramework.FrameworkControlProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnFramework.FrameworkControlProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const controlScope: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst frameworkControlProperty: backup.CfnFramework.FrameworkControlProperty = {\n  controlName: 'controlName',\n\n  // the properties below are optional\n  controlInputParameters: [{\n    parameterName: 'parameterName',\n    parameterValue: 'parameterValue',\n  }],\n  controlScope: controlScope,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 12,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "0d27aa0c5f6fe9589b1b3452cb555376c368509331e2d2d90bf65c9656968421"
    },
    "bb63018fc96703e3cf0e9b230f9b8c49e71af52dc7633e7223ef7cb84f14b362": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# control_scope: Any\n\ncfn_framework_props = backup.CfnFrameworkProps(\n    framework_controls=[backup.CfnFramework.FrameworkControlProperty(\n        control_name=\"controlName\",\n\n        # the properties below are optional\n        control_input_parameters=[backup.CfnFramework.ControlInputParameterProperty(\n            parameter_name=\"parameterName\",\n            parameter_value=\"parameterValue\"\n        )],\n        control_scope=control_scope\n    )],\n\n    # the properties below are optional\n    framework_description=\"frameworkDescription\",\n    framework_name=\"frameworkName\",\n    framework_tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar controlScope;\n\nCfnFrameworkProps cfnFrameworkProps = new CfnFrameworkProps {\n    FrameworkControls = new [] { new FrameworkControlProperty {\n        ControlName = \"controlName\",\n\n        // the properties below are optional\n        ControlInputParameters = new [] { new ControlInputParameterProperty {\n            ParameterName = \"parameterName\",\n            ParameterValue = \"parameterValue\"\n        } },\n        ControlScope = controlScope\n    } },\n\n    // the properties below are optional\n    FrameworkDescription = \"frameworkDescription\",\n    FrameworkName = \"frameworkName\",\n    FrameworkTags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject controlScope;\n\nCfnFrameworkProps cfnFrameworkProps = CfnFrameworkProps.builder()\n        .frameworkControls(List.of(FrameworkControlProperty.builder()\n                .controlName(\"controlName\")\n\n                // the properties below are optional\n                .controlInputParameters(List.of(ControlInputParameterProperty.builder()\n                        .parameterName(\"parameterName\")\n                        .parameterValue(\"parameterValue\")\n                        .build()))\n                .controlScope(controlScope)\n                .build()))\n\n        // the properties below are optional\n        .frameworkDescription(\"frameworkDescription\")\n        .frameworkName(\"frameworkName\")\n        .frameworkTags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar controlScope interface{}\n\ncfnFrameworkProps := &cfnFrameworkProps{\n\tframeworkControls: []interface{}{\n\t\t&frameworkControlProperty{\n\t\t\tcontrolName: jsii.String(\"controlName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcontrolInputParameters: []interface{}{\n\t\t\t\t&controlInputParameterProperty{\n\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcontrolScope: controlScope,\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tframeworkDescription: jsii.String(\"frameworkDescription\"),\n\tframeworkName: jsii.String(\"frameworkName\"),\n\tframeworkTags: []interface{}{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const controlScope: any;\nconst cfnFrameworkProps: backup.CfnFrameworkProps = {\n  frameworkControls: [{\n    controlName: 'controlName',\n\n    // the properties below are optional\n    controlInputParameters: [{\n      parameterName: 'parameterName',\n      parameterValue: 'parameterValue',\n    }],\n    controlScope: controlScope,\n  }],\n\n  // the properties below are optional\n  frameworkDescription: 'frameworkDescription',\n  frameworkName: 'frameworkName',\n  frameworkTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnFrameworkProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnFrameworkProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const controlScope: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnFrameworkProps: backup.CfnFrameworkProps = {\n  frameworkControls: [{\n    controlName: 'controlName',\n\n    // the properties below are optional\n    controlInputParameters: [{\n      parameterName: 'parameterName',\n      parameterValue: 'parameterValue',\n    }],\n    controlScope: controlScope,\n  }],\n\n  // the properties below are optional\n  frameworkDescription: 'frameworkDescription',\n  frameworkName: 'frameworkName',\n  frameworkTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 17,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 4,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "e9d6a6192048d5049ec5df4d9b6b581383b8da7946b32c93958dd4774bec90ab"
    },
    "c20cfbdc89415367ce430fa01d52de69cd2feba2c41816f671875db463691a0b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# report_delivery_channel: Any\n# report_setting: Any\n\ncfn_report_plan = backup.CfnReportPlan(self, \"MyCfnReportPlan\",\n    report_delivery_channel=report_delivery_channel,\n    report_setting=report_setting,\n\n    # the properties below are optional\n    report_plan_description=\"reportPlanDescription\",\n    report_plan_name=\"reportPlanName\",\n    report_plan_tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar reportDeliveryChannel;\nvar reportSetting;\n\nCfnReportPlan cfnReportPlan = new CfnReportPlan(this, \"MyCfnReportPlan\", new CfnReportPlanProps {\n    ReportDeliveryChannel = reportDeliveryChannel,\n    ReportSetting = reportSetting,\n\n    // the properties below are optional\n    ReportPlanDescription = \"reportPlanDescription\",\n    ReportPlanName = \"reportPlanName\",\n    ReportPlanTags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject reportDeliveryChannel;\nObject reportSetting;\n\nCfnReportPlan cfnReportPlan = CfnReportPlan.Builder.create(this, \"MyCfnReportPlan\")\n        .reportDeliveryChannel(reportDeliveryChannel)\n        .reportSetting(reportSetting)\n\n        // the properties below are optional\n        .reportPlanDescription(\"reportPlanDescription\")\n        .reportPlanName(\"reportPlanName\")\n        .reportPlanTags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar reportDeliveryChannel interface{}\nvar reportSetting interface{}\n\ncfnReportPlan := backup.NewCfnReportPlan(this, jsii.String(\"MyCfnReportPlan\"), &cfnReportPlanProps{\n\treportDeliveryChannel: reportDeliveryChannel,\n\treportSetting: reportSetting,\n\n\t// the properties below are optional\n\treportPlanDescription: jsii.String(\"reportPlanDescription\"),\n\treportPlanName: jsii.String(\"reportPlanName\"),\n\treportPlanTags: []interface{}{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const reportDeliveryChannel: any;\ndeclare const reportSetting: any;\nconst cfnReportPlan = new backup.CfnReportPlan(this, 'MyCfnReportPlan', {\n  reportDeliveryChannel: reportDeliveryChannel,\n  reportSetting: reportSetting,\n\n  // the properties below are optional\n  reportPlanDescription: 'reportPlanDescription',\n  reportPlanName: 'reportPlanName',\n  reportPlanTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnReportPlan"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnReportPlan",
        "@aws-cdk/aws-backup.CfnReportPlanProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const reportDeliveryChannel: any;\ndeclare const reportSetting: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnReportPlan = new backup.CfnReportPlan(this, 'MyCfnReportPlan', {\n  reportDeliveryChannel: reportDeliveryChannel,\n  reportSetting: reportSetting,\n\n  // the properties below are optional\n  reportPlanDescription: 'reportPlanDescription',\n  reportPlanName: 'reportPlanName',\n  reportPlanTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 15,
        "104": 1,
        "125": 2,
        "130": 2,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "a9ef11d5a77041e816e23d952e5fecd56765ba439259aaec7324a5b897100926"
    },
    "ec926f97c5dbd7b5d828200ebf74863683d0bf8b1016631ee51323183cd2f439": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\n# report_delivery_channel: Any\n# report_setting: Any\n\ncfn_report_plan_props = backup.CfnReportPlanProps(\n    report_delivery_channel=report_delivery_channel,\n    report_setting=report_setting,\n\n    # the properties below are optional\n    report_plan_description=\"reportPlanDescription\",\n    report_plan_name=\"reportPlanName\",\n    report_plan_tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nvar reportDeliveryChannel;\nvar reportSetting;\n\nCfnReportPlanProps cfnReportPlanProps = new CfnReportPlanProps {\n    ReportDeliveryChannel = reportDeliveryChannel,\n    ReportSetting = reportSetting,\n\n    // the properties below are optional\n    ReportPlanDescription = \"reportPlanDescription\",\n    ReportPlanName = \"reportPlanName\",\n    ReportPlanTags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nObject reportDeliveryChannel;\nObject reportSetting;\n\nCfnReportPlanProps cfnReportPlanProps = CfnReportPlanProps.builder()\n        .reportDeliveryChannel(reportDeliveryChannel)\n        .reportSetting(reportSetting)\n\n        // the properties below are optional\n        .reportPlanDescription(\"reportPlanDescription\")\n        .reportPlanName(\"reportPlanName\")\n        .reportPlanTags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\nvar reportDeliveryChannel interface{}\nvar reportSetting interface{}\n\ncfnReportPlanProps := &cfnReportPlanProps{\n\treportDeliveryChannel: reportDeliveryChannel,\n\treportSetting: reportSetting,\n\n\t// the properties below are optional\n\treportPlanDescription: jsii.String(\"reportPlanDescription\"),\n\treportPlanName: jsii.String(\"reportPlanName\"),\n\treportPlanTags: []interface{}{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const reportDeliveryChannel: any;\ndeclare const reportSetting: any;\nconst cfnReportPlanProps: backup.CfnReportPlanProps = {\n  reportDeliveryChannel: reportDeliveryChannel,\n  reportSetting: reportSetting,\n\n  // the properties below are optional\n  reportPlanDescription: 'reportPlanDescription',\n  reportPlanName: 'reportPlanName',\n  reportPlanTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.CfnReportPlanProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.CfnReportPlanProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const reportDeliveryChannel: any;\ndeclare const reportSetting: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnReportPlanProps: backup.CfnReportPlanProps = {\n  reportDeliveryChannel: reportDeliveryChannel,\n  reportSetting: reportSetting,\n\n  // the properties below are optional\n  reportPlanDescription: 'reportPlanDescription',\n  reportPlanName: 'reportPlanName',\n  reportPlanTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 15,
        "125": 2,
        "130": 2,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "482cd028395ee6d71bdbf0b2fe5b60dcb1487e94765b0bb6fc2d3f4eea09574c"
    },
    "b74aa4a576af6af98f046d6046401e6425578398280e3d63f9873a30b25d7372": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_backup as backup\n\ntag_condition = backup.TagCondition(\n    key=\"key\",\n    value=\"value\",\n\n    # the properties below are optional\n    operation=backup.TagOperation.STRING_EQUALS\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Backup;\n\nTagCondition tagCondition = new TagCondition {\n    Key = \"key\",\n    Value = \"value\",\n\n    // the properties below are optional\n    Operation = TagOperation.STRING_EQUALS\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.backup.*;\n\nTagCondition tagCondition = TagCondition.builder()\n        .key(\"key\")\n        .value(\"value\")\n\n        // the properties below are optional\n        .operation(TagOperation.STRING_EQUALS)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport backup \"github.com/aws-samples/dummy/awscdkawsbackup\"\n\ntagCondition := &tagCondition{\n\tkey: jsii.String(\"key\"),\n\tvalue: jsii.String(\"value\"),\n\n\t// the properties below are optional\n\toperation: backup.tagOperation_STRING_EQUALS,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst tagCondition: backup.TagCondition = {\n  key: 'key',\n  value: 'value',\n\n  // the properties below are optional\n  operation: backup.TagOperation.STRING_EQUALS,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-backup.TagCondition"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-backup.TagCondition",
        "@aws-cdk/aws-backup.TagOperation",
        "@aws-cdk/aws-backup.TagOperation#STRING_EQUALS"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tagCondition: backup.TagCondition = {\n  key: 'key',\n  value: 'value',\n\n  // the properties below are optional\n  operation: backup.TagOperation.STRING_EQUALS,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "138563861bbc467a3d0e4631f27b53b37926185e6723f69a7759d8ec91ff0e40"
    }
  }
}