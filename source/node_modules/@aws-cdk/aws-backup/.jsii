{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-dynamodb": "1.169.0",
    "@aws-cdk/aws-ec2": "1.169.0",
    "@aws-cdk/aws-efs": "1.169.0",
    "@aws-cdk/aws-events": "1.169.0",
    "@aws-cdk/aws-iam": "1.169.0",
    "@aws-cdk/aws-kms": "1.169.0",
    "@aws-cdk/aws-rds": "1.169.0",
    "@aws-cdk/aws-sns": "1.169.0",
    "@aws-cdk/core": "1.169.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-dynamodb": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.DynamoDB",
          "packageId": "Amazon.CDK.AWS.DynamoDB"
        },
        "java": {
          "maven": {
            "artifactId": "dynamodb",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.dynamodb"
        },
        "js": {
          "npm": "@aws-cdk/aws-dynamodb"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-dynamodb",
          "module": "aws_cdk.aws_dynamodb"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kinesis": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Kinesis",
          "packageId": "Amazon.CDK.AWS.Kinesis"
        },
        "java": {
          "maven": {
            "artifactId": "kinesis",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kinesis"
        },
        "js": {
          "npm": "@aws-cdk/aws-kinesis"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kinesis",
          "module": "aws_cdk.aws_kinesis"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-rds": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.RDS",
          "packageId": "Amazon.CDK.AWS.RDS"
        },
        "java": {
          "maven": {
            "artifactId": "rds",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.rds"
        },
        "js": {
          "npm": "@aws-cdk/aws-rds"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-rds",
          "module": "aws_cdk.aws_rds"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SAM",
          "packageId": "Amazon.CDK.AWS.SAM"
        },
        "java": {
          "maven": {
            "artifactId": "sam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sam"
        },
        "js": {
          "npm": "@aws-cdk/aws-sam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sam",
          "module": "aws_cdk.aws_sam"
        }
      }
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager"
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::Backup",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.63.2 (build a8a8833)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "AWS::Backup",
    "aws-backup"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-backup",
  "readme": {
    "markdown": "# AWS Backup Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nAWS Backup is a fully managed backup service that makes it easy to centralize and automate the\nbackup of data across AWS services in the cloud and on premises. Using AWS Backup, you can\nconfigure backup policies and monitor backup activity for your AWS resources in one place.\n\n## Backup plan and selection\n\nIn AWS Backup, a *backup plan* is a policy expression that defines when and how you want to back up\n your AWS resources, such as Amazon DynamoDB tables or Amazon Elastic File System (Amazon EFS) file\n systems. You can assign resources to backup plans, and AWS Backup automatically backs up and retains\n backups for those resources according to the backup plan. You can create multiple backup plans if you\n have workloads with different backup requirements.\n\nThis module provides ready-made backup plans (similar to the console experience):\n\n```ts\n// Daily, weekly and monthly with 5 year retention\nconst plan = backup.BackupPlan.dailyWeeklyMonthly5YearRetention(this, 'Plan');\n```\n\nAssigning resources to a plan can be done with `addSelection()`:\n\n```ts\ndeclare const plan: backup.BackupPlan;\nconst myTable = dynamodb.Table.fromTableName(this, 'Table', 'myTableName');\nconst myCoolConstruct = new Construct(this, 'MyCoolConstruct');\n\nplan.addSelection('Selection', {\n  resources: [\n    backup.BackupResource.fromDynamoDbTable(myTable), // A DynamoDB table\n    backup.BackupResource.fromTag('stage', 'prod'), // All resources that are tagged stage=prod in the region/account\n    backup.BackupResource.fromConstruct(myCoolConstruct), // All backupable resources in `myCoolConstruct`\n  ]\n})\n```\n\nIf not specified, a new IAM role with a managed policy for backup will be\ncreated for the selection. The `BackupSelection` implements `IGrantable`.\n\nTo add rules to a plan, use `addRule()`:\n\n```ts\ndeclare const plan: backup.BackupPlan;\nplan.addRule(new backup.BackupPlanRule({\n  completionWindow: Duration.hours(2),\n  startWindow: Duration.hours(1),\n  scheduleExpression: events.Schedule.cron({ // Only cron expressions are supported\n    day: '15',\n    hour: '3',\n    minute: '30',\n  }),\n  moveToColdStorageAfter: Duration.days(30),\n}));\n```\n\nContinuous backup and point-in-time restores (PITR) can be configured.\nProperty `deleteAfter` defines the retention period for the backup. It is mandatory if PITR is enabled.\nIf no value is specified, the retention period is set to 35 days which is the maximum retention period supported by PITR.\nProperty `moveToColdStorageAfter` must not be specified because PITR does not support this option.\nThis example defines an AWS Backup rule with PITR and a retention period set to 14 days:\n\n```ts\ndeclare const plan: backup.BackupPlan;\nplan.addRule(new backup.BackupPlanRule({\n  enableContinuousBackup: true,\n  deleteAfter: Duration.days(14),\n}));\n```\n\nReady-made rules are also available:\n\n```ts\ndeclare const plan: backup.BackupPlan;\nplan.addRule(backup.BackupPlanRule.daily());\nplan.addRule(backup.BackupPlanRule.weekly());\n```\n\nBy default a new [vault](#Backup-vault) is created when creating a plan.\nIt is also possible to specify a vault either at the plan level or at the\nrule level.\n\n```ts\nconst myVault = backup.BackupVault.fromBackupVaultName(this, 'Vault1', 'myVault');\nconst otherVault = backup.BackupVault.fromBackupVaultName(this, 'Vault2', 'otherVault');\n\nconst plan = backup.BackupPlan.daily35DayRetention(this, 'Plan', myVault); // Use `myVault` for all plan rules\nplan.addRule(backup.BackupPlanRule.monthly1Year(otherVault)); // Use `otherVault` for this specific rule\n```\n\nYou can [backup](https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html)\nVSS-enabled Windows applications running on Amazon EC2 instances by setting the `windowsVss`\nparameter to `true`. If the application has VSS writer registered with Windows VSS,\nthen AWS Backup creates a snapshot that will be consistent for that application.\n\n```ts\nconst plan = new backup.BackupPlan(this, 'Plan', {\n  windowsVss: true,\n});\n```\n\n## Backup vault\n\nIn AWS Backup, a *backup vault* is a container that you organize your backups in. You can use backup\nvaults to set the AWS Key Management Service (AWS KMS) encryption key that is used to encrypt backups\nin the backup vault and to control access to the backups in the backup vault. If you require different\nencryption keys or access policies for different groups of backups, you can optionally create multiple\nbackup vaults.\n\n```ts\nconst myKey = kms.Key.fromKeyArn(this, 'MyKey', 'aaa');\nconst myTopic = sns.Topic.fromTopicArn(this, 'MyTopic', 'bbb');\n\nconst vault = new backup.BackupVault(this, 'Vault', {\n  encryptionKey: myKey, // Custom encryption key\n  notificationTopic: myTopic, // Send all vault events to this SNS topic\n});\n```\n\nA vault has a default `RemovalPolicy` set to `RETAIN`. Note that removing a vault\nthat contains recovery points will fail.\n\nYou can assign policies to backup vaults and the resources they contain. Assigning policies allows\nyou to do things like grant access to users to create backup plans and on-demand backups, but limit\ntheir ability to delete recovery points after they're created.\n\nUse the `accessPolicy` property to create a backup vault policy:\n\n```ts\nconst vault = new backup.BackupVault(this, 'Vault', {\n  accessPolicy: new iam.PolicyDocument({\n    statements: [\n      new iam.PolicyStatement({\n        effect: iam.Effect.DENY,\n        principals: [new iam.AnyPrincipal()],\n        actions: ['backup:DeleteRecoveryPoint'],\n        resources: ['*'],\n        conditions: {\n          StringNotLike: {\n            'aws:userId': [\n              'user1',\n              'user2',\n            ],\n          },\n        },\n      }),\n    ],\n  }),\n})\n```\n\nAlternativately statements can be added to the vault policy using `addToAccessPolicy()`.\n\nUse the `blockRecoveryPointDeletion` property or the `blockRecoveryPointDeletion()` method to add\na statement to the vault access policy that prevents recovery point deletions in your vault:\n\n```ts\nnew backup.BackupVault(this, 'Vault', {\n  blockRecoveryPointDeletion: true,\n});\n\ndeclare const backupVault: backup.BackupVault;\nbackupVault.blockRecoveryPointDeletion();\n```\n\nBy default access is not restricted.\n\n## Importing existing backup vault\n\nTo import an existing backup vault into your CDK application, use the `BackupVault.fromBackupVaultArn` or `BackupVault.fromBackupVaultName`\nstatic method. Here is an example of giving an IAM Role permission to start a backup job:\n\n```ts\nconst importedVault = backup.BackupVault.fromBackupVaultName(this, 'Vault', 'myVaultName');\n\nconst role = new iam.Role(this, 'Access Role', { assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com') });\n\nimportedVault.grant(role, 'backup:StartBackupJob');\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-backup",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Backup",
      "packageId": "Amazon.CDK.AWS.Backup"
    },
    "java": {
      "maven": {
        "artifactId": "backup",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.backup"
    },
    "js": {
      "npm": "@aws-cdk/aws-backup"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-backup",
      "module": "aws_cdk.aws_backup"
    }
  },
  "types": {
    "@aws-cdk/aws-backup.BackupPlan": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "// Daily, weekly and monthly with 5 year retention\nconst plan = backup.BackupPlan.dailyWeeklyMonthly5YearRetention(this, 'Plan');",
        "stability": "stable",
        "summary": "A backup plan."
      },
      "fqn": "@aws-cdk/aws-backup.BackupPlan",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/plan.ts",
          "line": 131
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-backup.IBackupPlan"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/plan.ts",
        "line": 60
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Daily with 35 day retention."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 74
          },
          "name": "daily35DayRetention",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlan"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Daily and monthly with 1 year retention."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 83
          },
          "name": "dailyMonthly1YearRetention",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlan"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Daily, weekly and monthly with 5 year retention."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 93
          },
          "name": "dailyWeeklyMonthly5YearRetention",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlan"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Daily, weekly and monthly with 7 year retention."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 104
          },
          "name": "dailyWeeklyMonthly7YearRetention",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlan"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing backup plan."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 64
          },
          "name": "fromBackupPlanId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "backupPlanId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.IBackupPlan"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a rule to a plan."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 170
          },
          "name": "addRule",
          "parameters": [
            {
              "docs": {
                "summary": "the rule to add."
              },
              "name": "rule",
              "type": {
                "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a selection to this plan."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 211
          },
          "name": "addSelection",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-backup.BackupSelectionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupSelection"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 218
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "BackupPlan",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 119
          },
          "name": "backupPlanArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The identifier of the backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 112
          },
          "name": "backupPlanId",
          "overrides": "@aws-cdk/aws-backup.IBackupPlan",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The backup vault where backups are stored if not defined at the rule level."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 199
          },
          "name": "backupVault",
          "type": {
            "fqn": "@aws-cdk/aws-backup.IBackupVault"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Version Id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 126
          },
          "name": "versionId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/plan:BackupPlan"
    },
    "@aws-cdk/aws-backup.BackupPlanProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const plan = new backup.BackupPlan(this, 'Plan', {\n  windowsVss: true,\n});",
        "stability": "stable",
        "summary": "Properties for a BackupPlan."
      },
      "fqn": "@aws-cdk/aws-backup.BackupPlanProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/plan.ts",
        "line": 23
      },
      "name": "BackupPlanProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- A CDK generated name",
            "stability": "stable",
            "summary": "The display name of the backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 29
          },
          "name": "backupPlanName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use `addRule()` to add rules",
            "remarks": "Use `addRule()` to add rules after\ninstantiation.",
            "stability": "stable",
            "summary": "Rules for the backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 45
          },
          "name": "backupPlanRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the vault defined at the rule level. If not defined a new\ncommon vault for the plan will be created",
            "stability": "stable",
            "summary": "The backup vault where backups are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 37
          },
          "name": "backupVault",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-backup.IBackupVault"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html",
            "stability": "stable",
            "summary": "Enable Windows VSS backup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 54
          },
          "name": "windowsVss",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/plan:BackupPlanProps"
    },
    "@aws-cdk/aws-backup.BackupPlanRule": {
      "assembly": "@aws-cdk/aws-backup",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const plan: backup.BackupPlan;\nplan.addRule(backup.BackupPlanRule.daily());\nplan.addRule(backup.BackupPlanRule.weekly());",
        "stability": "stable",
        "summary": "A backup plan rule."
      },
      "fqn": "@aws-cdk/aws-backup.BackupPlanRule",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/rule.ts",
          "line": 167
        },
        "parameters": [
          {
            "docs": {
              "summary": "Rule properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanRuleProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 78
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Daily with 35 days retention."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 82
          },
          "name": "daily",
          "parameters": [
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Monthly 1 year retention, move to cold storage after 1 month."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 113
          },
          "name": "monthly1Year",
          "parameters": [
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Monthly 5 year retention, move to cold storage after 3 months."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 130
          },
          "name": "monthly5Year",
          "parameters": [
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Monthly 7 year retention, move to cold storage after 3 months."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 147
          },
          "name": "monthly7Year",
          "parameters": [
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Weekly with 3 months retention."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 97
          },
          "name": "weekly",
          "parameters": [
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
            }
          },
          "static": true
        }
      ],
      "name": "BackupPlanRule",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Properties of BackupPlanRule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 164
          },
          "name": "props",
          "type": {
            "fqn": "@aws-cdk/aws-backup.BackupPlanRuleProps"
          }
        }
      ],
      "symbolId": "lib/rule:BackupPlanRule"
    },
    "@aws-cdk/aws-backup.BackupPlanRuleProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const plan: backup.BackupPlan;\nplan.addRule(new backup.BackupPlanRule({\n  completionWindow: Duration.hours(2),\n  startWindow: Duration.hours(1),\n  scheduleExpression: events.Schedule.cron({ // Only cron expressions are supported\n    day: '15',\n    hour: '3',\n    minute: '30',\n  }),\n  moveToColdStorageAfter: Duration.days(30),\n}));",
        "stability": "stable",
        "summary": "Properties for a BackupPlanRule."
      },
      "fqn": "@aws-cdk/aws-backup.BackupPlanRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 8
      },
      "name": "BackupPlanRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- use the vault defined at the plan level. If not defined a new\ncommon vault for the plan will be created",
            "stability": "stable",
            "summary": "The backup vault where backups are."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 60
          },
          "name": "backupVault",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-backup.IBackupVault"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 8 hours",
            "stability": "stable",
            "summary": "The duration after a backup job is successfully started before it must be completed or it is canceled by AWS Backup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 15
          },
          "name": "completionWindow",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- recovery point is never deleted",
            "remarks": "Must be greater than `moveToColdStorageAfter`.",
            "stability": "stable",
            "summary": "Specifies the duration after creation that a recovery point is deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 23
          },
          "name": "deleteAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Property `deleteAfter` defines the retention period for the backup. It is mandatory if PITR is enabled.\nIf no value is specified, the retention period is set to 35 days which is the maximum retention period supported by PITR.\n\nProperty `moveToColdStorageAfter` must not be specified because PITR does not support this option.",
            "stability": "stable",
            "summary": "Enables continuous backup and point-in-time restores (PITR)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 72
          },
          "name": "enableContinuousBackup",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- recovery point is never moved to cold storage",
            "stability": "stable",
            "summary": "Specifies the duration after creation that a recovery point is moved to cold storage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 31
          },
          "name": "moveToColdStorageAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a CDK generated name",
            "stability": "stable",
            "summary": "A display name for the backup rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 38
          },
          "name": "ruleName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no schedule",
            "stability": "stable",
            "summary": "A CRON expression specifying when AWS Backup initiates a backup job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 45
          },
          "name": "scheduleExpression",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-events.Schedule"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 8 hours",
            "stability": "stable",
            "summary": "The duration after a backup is scheduled before a job is canceled if it doesn't start successfully."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 52
          },
          "name": "startWindow",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/rule:BackupPlanRuleProps"
    },
    "@aws-cdk/aws-backup.BackupResource": {
      "assembly": "@aws-cdk/aws-backup",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const plan: backup.BackupPlan;\nconst myTable = dynamodb.Table.fromTableName(this, 'Table', 'myTableName');\nconst myCoolConstruct = new Construct(this, 'MyCoolConstruct');\n\nplan.addSelection('Selection', {\n  resources: [\n    backup.BackupResource.fromDynamoDbTable(myTable), // A DynamoDB table\n    backup.BackupResource.fromTag('stage', 'prod'), // All resources that are tagged stage=prod in the region/account\n    backup.BackupResource.fromConstruct(myCoolConstruct), // All backupable resources in `myCoolConstruct`\n  ]\n})",
        "stability": "stable",
        "summary": "A resource to backup."
      },
      "fqn": "@aws-cdk/aws-backup.BackupResource",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/resource.ts",
          "line": 139
        },
        "parameters": [
          {
            "name": "resource",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "tagCondition",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-backup.TagCondition"
            }
          },
          {
            "name": "construct",
            "optional": true,
            "type": {
              "fqn": "constructs.Construct"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/resource.ts",
        "line": 59
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A list of ARNs or match patterns such as `arn:aws:ec2:us-east-1:123456789012:volume/*`."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 109
          },
          "name": "fromArn",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds all supported resources in a construct."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 65
          },
          "name": "fromConstruct",
          "parameters": [
            {
              "docs": {
                "summary": "The construct containing resources to backup."
              },
              "name": "construct",
              "type": {
                "fqn": "constructs.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A DynamoDB table."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 72
          },
          "name": "fromDynamoDbTable",
          "parameters": [
            {
              "name": "table",
              "type": {
                "fqn": "@aws-cdk/aws-dynamodb.ITable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An EC2 instance."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 79
          },
          "name": "fromEc2Instance",
          "parameters": [
            {
              "name": "instance",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IInstance"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An EFS file system."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 90
          },
          "name": "fromEfsFileSystem",
          "parameters": [
            {
              "name": "fileSystem",
              "type": {
                "fqn": "@aws-cdk/aws-efs.IFileSystem"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A RDS database instance."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 101
          },
          "name": "fromRdsDatabaseInstance",
          "parameters": [
            {
              "name": "instance",
              "type": {
                "fqn": "@aws-cdk/aws-rds.IDatabaseInstance"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A tag condition."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 116
          },
          "name": "fromTag",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "operation",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.TagOperation"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        }
      ],
      "name": "BackupResource",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 137
          },
          "name": "construct",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Construct"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 127
          },
          "name": "resource",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A condition on a tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 132
          },
          "name": "tagCondition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-backup.TagCondition"
          }
        }
      ],
      "symbolId": "lib/resource:BackupResource"
    },
    "@aws-cdk/aws-backup.BackupSelection": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A backup selection.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const backupPlan: backup.BackupPlan;\ndeclare const backupResource: backup.BackupResource;\ndeclare const role: iam.Role;\nconst backupSelection = new backup.BackupSelection(this, 'MyBackupSelection', {\n  backupPlan: backupPlan,\n  resources: [backupResource],\n\n  // the properties below are optional\n  allowRestores: false,\n  backupSelectionName: 'backupSelectionName',\n  role: role,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-backup.BackupSelection",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/selection.ts",
          "line": 82
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupSelectionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/selection.ts",
        "line": 58
      },
      "name": "BackupSelection",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The identifier of the backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 64
          },
          "name": "backupPlanId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 76
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The identifier of the backup selection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 71
          },
          "name": "selectionId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/selection:BackupSelection"
    },
    "@aws-cdk/aws-backup.BackupSelectionOptions": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const plan: backup.BackupPlan;\nconst myTable = dynamodb.Table.fromTableName(this, 'Table', 'myTableName');\nconst myCoolConstruct = new Construct(this, 'MyCoolConstruct');\n\nplan.addSelection('Selection', {\n  resources: [\n    backup.BackupResource.fromDynamoDbTable(myTable), // A DynamoDB table\n    backup.BackupResource.fromTag('stage', 'prod'), // All resources that are tagged stage=prod in the region/account\n    backup.BackupResource.fromConstruct(myCoolConstruct), // All backupable resources in `myCoolConstruct`\n  ]\n})",
        "stability": "stable",
        "summary": "Options for a BackupSelection."
      },
      "fqn": "@aws-cdk/aws-backup.BackupSelectionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/selection.ts",
        "line": 12
      },
      "name": "BackupSelectionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Use the helper static methods defined on `BackupResource`.",
            "stability": "stable",
            "summary": "The resources to backup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 17
          },
          "name": "resources",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-backup.BackupResource"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If `true`, the `AWSBackupServiceRolePolicyForRestores` managed\npolicy will be attached to the role.",
            "stability": "stable",
            "summary": "Whether to automatically give restores permissions to the role that AWS Backup uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 42
          },
          "name": "allowRestores",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a CDK generated name",
            "stability": "stable",
            "summary": "The name for this selection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 24
          },
          "name": "backupSelectionName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new role will be created",
            "remarks": "The `AWSBackupServiceRolePolicyForBackup` managed policy\nwill be attached to this role.",
            "stability": "stable",
            "summary": "The role that AWS Backup uses to authenticate when backuping or restoring the resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 33
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/selection:BackupSelectionOptions"
    },
    "@aws-cdk/aws-backup.BackupSelectionProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a BackupSelection.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const backupPlan: backup.BackupPlan;\ndeclare const backupResource: backup.BackupResource;\ndeclare const role: iam.Role;\nconst backupSelectionProps: backup.BackupSelectionProps = {\n  backupPlan: backupPlan,\n  resources: [backupResource],\n\n  // the properties below are optional\n  allowRestores: false,\n  backupSelectionName: 'backupSelectionName',\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-backup.BackupSelectionProps",
      "interfaces": [
        "@aws-cdk/aws-backup.BackupSelectionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/selection.ts",
        "line": 48
      },
      "name": "BackupSelectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The backup plan for this selection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 52
          },
          "name": "backupPlan",
          "type": {
            "fqn": "@aws-cdk/aws-backup.IBackupPlan"
          }
        }
      ],
      "symbolId": "lib/selection:BackupSelectionProps"
    },
    "@aws-cdk/aws-backup.BackupVault": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const importedVault = backup.BackupVault.fromBackupVaultName(this, 'Vault', 'myVaultName');\n\nconst role = new iam.Role(this, 'Access Role', { assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com') });\n\nimportedVault.grant(role, 'backup:StartBackupJob');",
        "stability": "stable",
        "summary": "A backup vault."
      },
      "fqn": "@aws-cdk/aws-backup.BackupVault",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vault.ts",
          "line": 203
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupVaultProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-backup.IBackupVault"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vault.ts",
        "line": 162
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing backup vault by arn."
          },
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 180
          },
          "name": "fromBackupVaultArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "backupVaultArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.IBackupVault"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing backup vault by name."
          },
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 166
          },
          "name": "fromBackupVaultName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "backupVaultName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.IBackupVault"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the vault access policy."
          },
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 239
          },
          "name": "addToAccessPolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the vault access policy that prevents anyone from deleting a recovery point."
          },
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 247
          },
          "name": "blockRecoveryPointDeletion"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant the actions defined in actions to the given grantee on this Backup Vault resource."
          },
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 143
          },
          "name": "grant",
          "overrides": "@aws-cdk/aws-backup.IBackupVault",
          "parameters": [
            {
              "docs": {
                "summary": "Principal to grant right to."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "The actions to grant."
              },
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "variadic": true
        }
      ],
      "name": "BackupVault",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the backup vault."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 199
          },
          "name": "backupVaultArn",
          "overrides": "@aws-cdk/aws-backup.IBackupVault",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a logical container where backups are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 198
          },
          "name": "backupVaultName",
          "overrides": "@aws-cdk/aws-backup.IBackupVault",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vault:BackupVault"
    },
    "@aws-cdk/aws-backup.BackupVaultEvents": {
      "assembly": "@aws-cdk/aws-backup",
      "docs": {
        "stability": "stable",
        "summary": "Backup vault events."
      },
      "fqn": "@aws-cdk/aws-backup.BackupVaultEvents",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vault.ts",
        "line": 99
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "BACKUP_JOB_STARTED."
          },
          "name": "BACKUP_JOB_STARTED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "BACKUP_JOB_COMPLETED."
          },
          "name": "BACKUP_JOB_COMPLETED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "BACKUP_JOB_SUCCESSFUL."
          },
          "name": "BACKUP_JOB_SUCCESSFUL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "BACKUP_JOB_FAILED."
          },
          "name": "BACKUP_JOB_FAILED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "BACKUP_JOB_EXPIRED."
          },
          "name": "BACKUP_JOB_EXPIRED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "RESTORE_JOB_STARTED."
          },
          "name": "RESTORE_JOB_STARTED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "RESTORE_JOB_COMPLETED."
          },
          "name": "RESTORE_JOB_COMPLETED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "RESTORE_JOB_SUCCESSFUL."
          },
          "name": "RESTORE_JOB_SUCCESSFUL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "RESTORE_JOB_FAILED."
          },
          "name": "RESTORE_JOB_FAILED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "COPY_JOB_STARTED."
          },
          "name": "COPY_JOB_STARTED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "COPY_JOB_SUCCESSFUL."
          },
          "name": "COPY_JOB_SUCCESSFUL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "COPY_JOB_FAILED."
          },
          "name": "COPY_JOB_FAILED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "RECOVERY_POINT_MODIFIED."
          },
          "name": "RECOVERY_POINT_MODIFIED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "BACKUP_PLAN_CREATED."
          },
          "name": "BACKUP_PLAN_CREATED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "BACKUP_PLAN_MODIFIED."
          },
          "name": "BACKUP_PLAN_MODIFIED"
        }
      ],
      "name": "BackupVaultEvents",
      "symbolId": "lib/vault:BackupVaultEvents"
    },
    "@aws-cdk/aws-backup.BackupVaultProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const myKey = kms.Key.fromKeyArn(this, 'MyKey', 'aaa');\nconst myTopic = sns.Topic.fromTopicArn(this, 'MyTopic', 'bbb');\n\nconst vault = new backup.BackupVault(this, 'Vault', {\n  encryptionKey: myKey, // Custom encryption key\n  notificationTopic: myTopic, // Send all vault events to this SNS topic\n});",
        "stability": "stable",
        "summary": "Properties for a BackupVault."
      },
      "fqn": "@aws-cdk/aws-backup.BackupVaultProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vault.ts",
        "line": 36
      },
      "name": "BackupVaultProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- access is not restricted",
            "stability": "stable",
            "summary": "A resource-based policy that is used to manage access permissions on the backup vault."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 52
          },
          "name": "accessPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.PolicyDocument"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A CDK generated name",
            "remarks": "Backup vaults\nare identified by names that are unique to the account used to create\nthem and the AWS Region where they are created.",
            "stability": "stable",
            "summary": "The name of a logical container where backups are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 44
          },
          "name": "backupVaultName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to add statements to the vault access policy that prevents anyone from deleting a recovery point."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 93
          },
          "name": "blockRecoveryPointDeletion",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- an Amazon managed KMS key",
            "stability": "stable",
            "summary": "The server-side encryption key to use to protect your backups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 59
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- all vault events if `notificationTopic` is defined",
            "see": "https://docs.aws.amazon.com/aws-backup/latest/devguide/sns-notifications.html",
            "stability": "stable",
            "summary": "The vault events to send."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 77
          },
          "name": "notificationEvents",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-backup.BackupVaultEvents"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no notifications",
            "see": "https://docs.aws.amazon.com/aws-backup/latest/devguide/sns-notifications.html",
            "stability": "stable",
            "summary": "A SNS topic to send vault events to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 68
          },
          "name": "notificationTopic",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-sns.ITopic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.RETAIN",
            "remarks": "Note that removing a vault\nthat contains recovery points will fail.",
            "stability": "stable",
            "summary": "The removal policy to apply to the vault."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 85
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        }
      ],
      "symbolId": "lib/vault:BackupVaultProps"
    },
    "@aws-cdk/aws-backup.CfnBackupPlan": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Backup::BackupPlan",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Contains an optional backup plan display name and an array of `BackupRule` objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of AWS resources.\n\nFor a sample AWS CloudFormation template, see the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/assigning-resources.html#assigning-resources-cfn) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Backup::BackupPlan`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const backupOptions: any;\nconst cfnBackupPlan = new backup.CfnBackupPlan(this, 'MyCfnBackupPlan', {\n  backupPlan: {\n    backupPlanName: 'backupPlanName',\n    backupPlanRule: [{\n      ruleName: 'ruleName',\n      targetBackupVault: 'targetBackupVault',\n\n      // the properties below are optional\n      completionWindowMinutes: 123,\n      copyActions: [{\n        destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n        // the properties below are optional\n        lifecycle: {\n          deleteAfterDays: 123,\n          moveToColdStorageAfterDays: 123,\n        },\n      }],\n      enableContinuousBackup: false,\n      lifecycle: {\n        deleteAfterDays: 123,\n        moveToColdStorageAfterDays: 123,\n      },\n      recoveryPointTags: {\n        recoveryPointTagsKey: 'recoveryPointTags',\n      },\n      scheduleExpression: 'scheduleExpression',\n      startWindowMinutes: 123,\n    }],\n\n    // the properties below are optional\n    advancedBackupSettings: [{\n      backupOptions: backupOptions,\n      resourceType: 'resourceType',\n    }],\n  },\n\n  // the properties below are optional\n  backupPlanTags: {\n    backupPlanTagsKey: 'backupPlanTags',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlan",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Backup::BackupPlan`."
        },
        "locationInModule": {
          "filename": "lib/backup.generated.ts",
          "line": 161
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-backup.CfnBackupPlanProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 97
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 178
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 190
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnBackupPlan",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 101
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "BackupPlanArn"
            },
            "remarks": "for example, `arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50` .",
            "stability": "external",
            "summary": "An Amazon Resource Name (ARN) that uniquely identifies a backup plan;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 126
          },
          "name": "attrBackupPlanArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "BackupPlanId"
            },
            "stability": "external",
            "summary": "Uniquely identifies a backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 132
          },
          "name": "attrBackupPlanId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "VersionId"
            },
            "remarks": "Version Ids cannot be edited.",
            "stability": "external",
            "summary": "Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 138
          },
          "name": "attrVersionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 183
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html#cfn-backup-backupplan-backupplan"
            },
            "stability": "external",
            "summary": "Uniquely identifies the backup plan to be associated with the selection of resources."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 145
          },
          "name": "backupPlan",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.BackupPlanResourceTypeProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html#cfn-backup-backupplan-backupplantags"
            },
            "remarks": "Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.",
            "stability": "external",
            "summary": "To help organize your resources, you can assign your own metadata to the resources that you create."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 152
          },
          "name": "backupPlanTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupPlan"
    },
    "@aws-cdk/aws-backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-advancedbackupsettingresourcetype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is only supported for Windows VSS backups.",
        "stability": "external",
        "summary": "Specifies an object containing resource type and backup options.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const backupOptions: any;\nconst advancedBackupSettingResourceTypeProperty: backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty = {\n  backupOptions: backupOptions,\n  resourceType: 'resourceType',\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 204
      },
      "name": "AdvancedBackupSettingResourceTypeProperty",
      "namespace": "CfnBackupPlan",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-advancedbackupsettingresourcetype.html#cfn-backup-backupplan-advancedbackupsettingresourcetype-backupoptions"
            },
            "remarks": "Each option is a key-value pair.",
            "stability": "external",
            "summary": "The backup option for the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 210
          },
          "name": "backupOptions",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-advancedbackupsettingresourcetype.html#cfn-backup-backupplan-advancedbackupsettingresourcetype-resourcetype"
            },
            "remarks": "The only supported resource type is EC2.",
            "stability": "external",
            "summary": "The name of a resource type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 216
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty"
    },
    "@aws-cdk/aws-backup.CfnBackupPlan.BackupPlanResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupplanresourcetype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies an object containing properties used to create a backup plan.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const backupOptions: any;\nconst backupPlanResourceTypeProperty: backup.CfnBackupPlan.BackupPlanResourceTypeProperty = {\n  backupPlanName: 'backupPlanName',\n  backupPlanRule: [{\n    ruleName: 'ruleName',\n    targetBackupVault: 'targetBackupVault',\n\n    // the properties below are optional\n    completionWindowMinutes: 123,\n    copyActions: [{\n      destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n      // the properties below are optional\n      lifecycle: {\n        deleteAfterDays: 123,\n        moveToColdStorageAfterDays: 123,\n      },\n    }],\n    enableContinuousBackup: false,\n    lifecycle: {\n      deleteAfterDays: 123,\n      moveToColdStorageAfterDays: 123,\n    },\n    recoveryPointTags: {\n      recoveryPointTagsKey: 'recoveryPointTags',\n    },\n    scheduleExpression: 'scheduleExpression',\n    startWindowMinutes: 123,\n  }],\n\n  // the properties below are optional\n  advancedBackupSettings: [{\n    backupOptions: backupOptions,\n    resourceType: 'resourceType',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.BackupPlanResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 282
      },
      "name": "BackupPlanResourceTypeProperty",
      "namespace": "CfnBackupPlan",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupplanresourcetype.html#cfn-backup-backupplan-backupplanresourcetype-backupplanname"
            },
            "stability": "external",
            "summary": "The display name of a backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 294
          },
          "name": "backupPlanName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupplanresourcetype.html#cfn-backup-backupplan-backupplanresourcetype-backupplanrule"
            },
            "stability": "external",
            "summary": "An array of `BackupRule` objects, each of which specifies a scheduled task that is used to back up a selection of resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 300
          },
          "name": "backupPlanRule",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.BackupRuleResourceTypeProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupplanresourcetype.html#cfn-backup-backupplan-backupplanresourcetype-advancedbackupsettings"
            },
            "stability": "external",
            "summary": "A list of backup options for each resource type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 288
          },
          "name": "advancedBackupSettings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupPlan.BackupPlanResourceTypeProperty"
    },
    "@aws-cdk/aws-backup.CfnBackupPlan.BackupRuleResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies an object containing properties used to schedule a task to back up a selection of resources.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst backupRuleResourceTypeProperty: backup.CfnBackupPlan.BackupRuleResourceTypeProperty = {\n  ruleName: 'ruleName',\n  targetBackupVault: 'targetBackupVault',\n\n  // the properties below are optional\n  completionWindowMinutes: 123,\n  copyActions: [{\n    destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n    // the properties below are optional\n    lifecycle: {\n      deleteAfterDays: 123,\n      moveToColdStorageAfterDays: 123,\n    },\n  }],\n  enableContinuousBackup: false,\n  lifecycle: {\n    deleteAfterDays: 123,\n    moveToColdStorageAfterDays: 123,\n  },\n  recoveryPointTags: {\n    recoveryPointTagsKey: 'recoveryPointTags',\n  },\n  scheduleExpression: 'scheduleExpression',\n  startWindowMinutes: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.BackupRuleResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 369
      },
      "name": "BackupRuleResourceTypeProperty",
      "namespace": "CfnBackupPlan",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-rulename"
            },
            "stability": "external",
            "summary": "A display name for a backup rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 405
          },
          "name": "ruleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-targetbackupvault"
            },
            "remarks": "Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of letters, numbers, and hyphens.",
            "stability": "external",
            "summary": "The name of a logical container where backups are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 423
          },
          "name": "targetBackupVault",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-completionwindowminutes"
            },
            "stability": "external",
            "summary": "A value in minutes after a backup job is successfully started before it must be completed or it is canceled by AWS Backup ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 375
          },
          "name": "completionWindowMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-copyactions"
            },
            "stability": "external",
            "summary": "An array of CopyAction objects, which contains the details of the copy operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 381
          },
          "name": "copyActions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.CopyActionResourceTypeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-enablecontinuousbackup"
            },
            "stability": "external",
            "summary": "Enables continuous backup and point-in-time restores (PITR)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 387
          },
          "name": "enableContinuousBackup",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-lifecycle"
            },
            "remarks": "AWS Backup transitions and expires backups automatically according to the lifecycle that you define.",
            "stability": "external",
            "summary": "The lifecycle defines when a protected resource is transitioned to cold storage and when it expires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 393
          },
          "name": "lifecycle",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.LifecycleResourceTypeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-recoverypointtags"
            },
            "remarks": "Each tag is a key-value pair.",
            "stability": "external",
            "summary": "To help organize your resources, you can assign your own metadata to the resources that you create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 399
          },
          "name": "recoveryPointTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-scheduleexpression"
            },
            "stability": "external",
            "summary": "A CRON expression specifying when AWS Backup initiates a backup job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 411
          },
          "name": "scheduleExpression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-startwindowminutes"
            },
            "stability": "external",
            "summary": "An optional value that specifies a period of time in minutes after a backup is scheduled before a job is canceled if it doesn't start successfully."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 417
          },
          "name": "startWindowMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupPlan.BackupRuleResourceTypeProperty"
    },
    "@aws-cdk/aws-backup.CfnBackupPlan.CopyActionResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-copyactionresourcetype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Copies backups created by a backup rule to another vault.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst copyActionResourceTypeProperty: backup.CfnBackupPlan.CopyActionResourceTypeProperty = {\n  destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n  // the properties below are optional\n  lifecycle: {\n    deleteAfterDays: 123,\n    moveToColdStorageAfterDays: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.CopyActionResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 510
      },
      "name": "CopyActionResourceTypeProperty",
      "namespace": "CfnBackupPlan",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-copyactionresourcetype.html#cfn-backup-backupplan-copyactionresourcetype-destinationbackupvaultarn"
            },
            "remarks": "For example, `arn:aws:backup:us-east-1:123456789012:vault:aBackupVault.`",
            "stability": "external",
            "summary": "An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 516
          },
          "name": "destinationBackupVaultArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-copyactionresourcetype.html#cfn-backup-backupplan-copyactionresourcetype-lifecycle"
            },
            "remarks": "AWS Backup transitions and expires backups automatically according to the lifecycle that you define. If you do not specify a lifecycle, AWS Backup applies the lifecycle policy of the source backup to the destination backup.\n\nBackups transitioned to cold storage must be stored in cold storage for a minimum of 90 days.",
            "stability": "external",
            "summary": "Defines when a protected resource is transitioned to cold storage and when it expires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 524
          },
          "name": "lifecycle",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.LifecycleResourceTypeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupPlan.CopyActionResourceTypeProperty"
    },
    "@aws-cdk/aws-backup.CfnBackupPlan.LifecycleResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-lifecycleresourcetype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies an object containing an array of `Transition` objects that determine how long in days before a recovery point transitions to cold storage or is deleted.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst lifecycleResourceTypeProperty: backup.CfnBackupPlan.LifecycleResourceTypeProperty = {\n  deleteAfterDays: 123,\n  moveToColdStorageAfterDays: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.LifecycleResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 589
      },
      "name": "LifecycleResourceTypeProperty",
      "namespace": "CfnBackupPlan",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-lifecycleresourcetype.html#cfn-backup-backupplan-lifecycleresourcetype-deleteafterdays"
            },
            "remarks": "Must be greater than `MoveToColdStorageAfterDays` .",
            "stability": "external",
            "summary": "Specifies the number of days after creation that a recovery point is deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 595
          },
          "name": "deleteAfterDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-lifecycleresourcetype.html#cfn-backup-backupplan-lifecycleresourcetype-movetocoldstorageafterdays"
            },
            "stability": "external",
            "summary": "Specifies the number of days after creation that a recovery point is moved to cold storage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 601
          },
          "name": "moveToColdStorageAfterDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupPlan.LifecycleResourceTypeProperty"
    },
    "@aws-cdk/aws-backup.CfnBackupPlanProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnBackupPlan`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const backupOptions: any;\nconst cfnBackupPlanProps: backup.CfnBackupPlanProps = {\n  backupPlan: {\n    backupPlanName: 'backupPlanName',\n    backupPlanRule: [{\n      ruleName: 'ruleName',\n      targetBackupVault: 'targetBackupVault',\n\n      // the properties below are optional\n      completionWindowMinutes: 123,\n      copyActions: [{\n        destinationBackupVaultArn: 'destinationBackupVaultArn',\n\n        // the properties below are optional\n        lifecycle: {\n          deleteAfterDays: 123,\n          moveToColdStorageAfterDays: 123,\n        },\n      }],\n      enableContinuousBackup: false,\n      lifecycle: {\n        deleteAfterDays: 123,\n        moveToColdStorageAfterDays: 123,\n      },\n      recoveryPointTags: {\n        recoveryPointTagsKey: 'recoveryPointTags',\n      },\n      scheduleExpression: 'scheduleExpression',\n      startWindowMinutes: 123,\n    }],\n\n    // the properties below are optional\n    advancedBackupSettings: [{\n      backupOptions: backupOptions,\n      resourceType: 'resourceType',\n    }],\n  },\n\n  // the properties below are optional\n  backupPlanTags: {\n    backupPlanTagsKey: 'backupPlanTags',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlanProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 19
      },
      "name": "CfnBackupPlanProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html#cfn-backup-backupplan-backupplan"
            },
            "stability": "external",
            "summary": "Uniquely identifies the backup plan to be associated with the selection of resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 26
          },
          "name": "backupPlan",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.BackupPlanResourceTypeProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html#cfn-backup-backupplan-backupplantags"
            },
            "remarks": "Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.",
            "stability": "external",
            "summary": "To help organize your resources, you can assign your own metadata to the resources that you create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 33
          },
          "name": "backupPlanTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupPlanProps"
    },
    "@aws-cdk/aws-backup.CfnBackupSelection": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Backup::BackupSelection",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a set of resources to assign to a backup plan.\n\nFor a sample AWS CloudFormation template, see the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/assigning-resources.html#assigning-resources-cfn) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Backup::BackupSelection`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const conditions: any;\nconst cfnBackupSelection = new backup.CfnBackupSelection(this, 'MyCfnBackupSelection', {\n  backupPlanId: 'backupPlanId',\n  backupSelection: {\n    iamRoleArn: 'iamRoleArn',\n    selectionName: 'selectionName',\n\n    // the properties below are optional\n    conditions: conditions,\n    listOfTags: [{\n      conditionKey: 'conditionKey',\n      conditionType: 'conditionType',\n      conditionValue: 'conditionValue',\n    }],\n    notResources: ['notResources'],\n    resources: ['resources'],\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupSelection",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Backup::BackupSelection`."
        },
        "locationInModule": {
          "filename": "lib/backup.generated.ts",
          "line": 811
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-backup.CfnBackupSelectionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 745
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 829
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 841
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnBackupSelection",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 749
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "BackupPlanId"
            },
            "stability": "external",
            "summary": "Uniquely identifies a backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 774
          },
          "name": "attrBackupPlanId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "Uniquely identifies the backup selection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 780
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SelectionId"
            },
            "stability": "external",
            "summary": "Uniquely identifies a request to assign a set of resources to a backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 786
          },
          "name": "attrSelectionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 834
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html#cfn-backup-backupselection-backupplanid"
            },
            "stability": "external",
            "summary": "Uniquely identifies a backup plan."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 793
          },
          "name": "backupPlanId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html#cfn-backup-backupselection-backupselection"
            },
            "remarks": "It includes an array of resources, an optional array of patterns to exclude resources, an optional role to provide access to the AWS service the resource belongs to, and an optional array of tags used to identify a set of resources.",
            "stability": "external",
            "summary": "Specifies the body of a request to assign a set of resources to a backup plan."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 802
          },
          "name": "backupSelection",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupSelection.BackupSelectionResourceTypeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupSelection"
    },
    "@aws-cdk/aws-backup.CfnBackupSelection.BackupSelectionResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-backupselectionresourcetype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies an object containing properties used to assign a set of resources to a backup plan.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const conditions: any;\nconst backupSelectionResourceTypeProperty: backup.CfnBackupSelection.BackupSelectionResourceTypeProperty = {\n  iamRoleArn: 'iamRoleArn',\n  selectionName: 'selectionName',\n\n  // the properties below are optional\n  conditions: conditions,\n  listOfTags: [{\n    conditionKey: 'conditionKey',\n    conditionType: 'conditionType',\n    conditionValue: 'conditionValue',\n  }],\n  notResources: ['notResources'],\n  resources: ['resources'],\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupSelection.BackupSelectionResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 855
      },
      "name": "BackupSelectionResourceTypeProperty",
      "namespace": "CfnBackupSelection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-backupselectionresourcetype.html#cfn-backup-backupselection-backupselectionresourcetype-iamrolearn"
            },
            "remarks": "for example, `arn:aws:iam::123456789012:role/S3Access` .",
            "stability": "external",
            "summary": "The ARN of the IAM role that AWS Backup uses to authenticate when backing up the target resource;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 872
          },
          "name": "iamRoleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-backupselectionresourcetype.html#cfn-backup-backupselection-backupselectionresourcetype-selectionname"
            },
            "stability": "external",
            "summary": "The display name of a resource selection document."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 898
          },
          "name": "selectionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-backupselectionresourcetype.html#cfn-backup-backupselection-backupselectionresourcetype-conditions"
            },
            "remarks": "For example, `\"StringEquals\": {\"Department\": \"accounting\"` . Condition operators are case sensitive.\n\n`Conditions` differs from `ListOfTags` as follows:\n\n- When you specify more than one condition, you only assign the resources that match ALL conditions (using AND logic).\n- `Conditions` supports `StringEquals` , `StringLike` , `StringNotEquals` , and `StringNotLike` . `ListOfTags` only supports `StringEquals` .",
            "stability": "external",
            "summary": "A list of conditions that you define to assign resources to your backup plans using tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 866
          },
          "name": "conditions",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-backupselectionresourcetype.html#cfn-backup-backupselection-backupselectionresourcetype-listoftags"
            },
            "remarks": "for example, `\"STRINGEQUALS\": {\"Department\":\"accounting\"` .",
            "stability": "external",
            "summary": "An array of conditions used to specify a set of resources to assign to a backup plan;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 878
          },
          "name": "listOfTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-backup.CfnBackupSelection.ConditionResourceTypeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-backupselectionresourcetype.html#cfn-backup-backupselection-backupselectionresourcetype-notresources"
            },
            "remarks": "The maximum number of ARNs is 500 without wildcards, or 30 ARNs with wildcards.\n\nIf you need to exclude many resources from a backup plan, consider a different resource selection strategy, such as assigning only one or a few resource types or refining your resource selection using tags.",
            "stability": "external",
            "summary": "A list of Amazon Resource Names (ARNs) to exclude from a backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 886
          },
          "name": "notResources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-backupselectionresourcetype.html#cfn-backup-backupselection-backupselectionresourcetype-resources"
            },
            "stability": "external",
            "summary": "An array of strings that contain Amazon Resource Names (ARNs) of resources to assign to a backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 892
          },
          "name": "resources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupSelection.BackupSelectionResourceTypeProperty"
    },
    "@aws-cdk/aws-backup.CfnBackupSelection.ConditionResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-conditionresourcetype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Conditions are used to filter resources in a selection that is assigned to a backup plan.",
        "stability": "external",
        "summary": "Specifies an object that contains an array of triplets made up of a condition type (such as `STRINGEQUALS` ), a key, and a value.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst conditionResourceTypeProperty: backup.CfnBackupSelection.ConditionResourceTypeProperty = {\n  conditionKey: 'conditionKey',\n  conditionType: 'conditionType',\n  conditionValue: 'conditionValue',\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupSelection.ConditionResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 976
      },
      "name": "ConditionResourceTypeProperty",
      "namespace": "CfnBackupSelection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-conditionresourcetype.html#cfn-backup-backupselection-conditionresourcetype-conditionkey"
            },
            "remarks": "For example, in `\"Department\": \"accounting\"` , `\"Department\"` is the key.",
            "stability": "external",
            "summary": "The key in a key-value pair."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 982
          },
          "name": "conditionKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-conditionresourcetype.html#cfn-backup-backupselection-conditionresourcetype-conditiontype"
            },
            "stability": "external",
            "summary": "An operation, such as `STRINGEQUALS` , that is applied to a key-value pair used to filter resources in a selection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 988
          },
          "name": "conditionType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-conditionresourcetype.html#cfn-backup-backupselection-conditionresourcetype-conditionvalue"
            },
            "remarks": "For example, in `\"Department\": \"accounting\"` , `\"accounting\"` is the value.",
            "stability": "external",
            "summary": "The value in a key-value pair."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 994
          },
          "name": "conditionValue",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupSelection.ConditionResourceTypeProperty"
    },
    "@aws-cdk/aws-backup.CfnBackupSelectionProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnBackupSelection`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const conditions: any;\nconst cfnBackupSelectionProps: backup.CfnBackupSelectionProps = {\n  backupPlanId: 'backupPlanId',\n  backupSelection: {\n    iamRoleArn: 'iamRoleArn',\n    selectionName: 'selectionName',\n\n    // the properties below are optional\n    conditions: conditions,\n    listOfTags: [{\n      conditionKey: 'conditionKey',\n      conditionType: 'conditionType',\n      conditionValue: 'conditionValue',\n    }],\n    notResources: ['notResources'],\n    resources: ['resources'],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupSelectionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 664
      },
      "name": "CfnBackupSelectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html#cfn-backup-backupselection-backupplanid"
            },
            "stability": "external",
            "summary": "Uniquely identifies a backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 671
          },
          "name": "backupPlanId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html#cfn-backup-backupselection-backupselection"
            },
            "remarks": "It includes an array of resources, an optional array of patterns to exclude resources, an optional role to provide access to the AWS service the resource belongs to, and an optional array of tags used to identify a set of resources.",
            "stability": "external",
            "summary": "Specifies the body of a request to assign a set of resources to a backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 680
          },
          "name": "backupSelection",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupSelection.BackupSelectionResourceTypeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupSelectionProps"
    },
    "@aws-cdk/aws-backup.CfnBackupVault": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Backup::BackupVault",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a logical container where backups are stored. A `CreateBackupVault` request includes a name, optionally one or more resource tags, an encryption key, and a request ID.\n\nDo not include sensitive data, such as passport numbers, in the name of a backup vault.\n\nFor a sample AWS CloudFormation template, see the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/assigning-resources.html#assigning-resources-cfn) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Backup::BackupVault`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const accessPolicy: any;\nconst cfnBackupVault = new backup.CfnBackupVault(this, 'MyCfnBackupVault', {\n  backupVaultName: 'backupVaultName',\n\n  // the properties below are optional\n  accessPolicy: accessPolicy,\n  backupVaultTags: {\n    backupVaultTagsKey: 'backupVaultTags',\n  },\n  encryptionKeyArn: 'encryptionKeyArn',\n  lockConfiguration: {\n    minRetentionDays: 123,\n\n    // the properties below are optional\n    changeableForDays: 123,\n    maxRetentionDays: 123,\n  },\n  notifications: {\n    backupVaultEvents: ['backupVaultEvents'],\n    snsTopicArn: 'snsTopicArn',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupVault",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Backup::BackupVault`."
        },
        "locationInModule": {
          "filename": "lib/backup.generated.ts",
          "line": 1273
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-backup.CfnBackupVaultProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 1185
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1298
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1314
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnBackupVault",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1189
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "BackupVaultArn"
            },
            "remarks": "for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault` .",
            "stability": "external",
            "summary": "An Amazon Resource Name (ARN) that uniquely identifies a backup vault;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1214
          },
          "name": "attrBackupVaultArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "BackupVaultName"
            },
            "remarks": "Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase and uppercase letters, numbers, and hyphens.",
            "stability": "external",
            "summary": "The name of a logical container where backups are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1220
          },
          "name": "attrBackupVaultName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1303
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-accesspolicy"
            },
            "stability": "external",
            "summary": "A resource-based policy that is used to manage access permissions on the target backup vault."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1234
          },
          "name": "accessPolicy",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaultname"
            },
            "remarks": "Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.",
            "stability": "external",
            "summary": "The name of a logical container where backups are stored."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1227
          },
          "name": "backupVaultName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaulttags"
            },
            "remarks": "Each tag is a key-value pair.",
            "stability": "external",
            "summary": "Metadata that you can assign to help organize the resources that you create."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1241
          },
          "name": "backupVaultTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-encryptionkeyarn"
            },
            "remarks": "for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` . If you specify a key, you must specify its ARN, not its alias. If you do not specify a key, AWS Backup creates a KMS key for you by default.\n\nTo learn which AWS Backup services support full AWS Backup management and how AWS Backup handles encryption for backups from services that do not yet support full AWS Backup , see [Encryption for backups in AWS Backup](https://docs.aws.amazon.com/aws-backup/latest/devguide/encryption.html)",
            "stability": "external",
            "summary": "A server-side encryption key you can specify to encrypt your backups from services that support full AWS Backup management;"
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1250
          },
          "name": "encryptionKeyArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-lockconfiguration"
            },
            "stability": "external",
            "summary": "Configuration for [AWS Backup Vault Lock](https://docs.aws.amazon.com/aws-backup/latest/devguide/vault-lock.html) ."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1257
          },
          "name": "lockConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupVault.LockConfigurationTypeProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-notifications"
            },
            "stability": "external",
            "summary": "The SNS event notifications for the specified backup vault."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1264
          },
          "name": "notifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupVault.NotificationObjectTypeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupVault"
    },
    "@aws-cdk/aws-backup.CfnBackupVault.LockConfigurationTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupvault-lockconfigurationtype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The `LockConfigurationType` property type specifies configuration for [AWS Backup Vault Lock](https://docs.aws.amazon.com/aws-backup/latest/devguide/vault-lock.html) .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst lockConfigurationTypeProperty: backup.CfnBackupVault.LockConfigurationTypeProperty = {\n  minRetentionDays: 123,\n\n  // the properties below are optional\n  changeableForDays: 123,\n  maxRetentionDays: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupVault.LockConfigurationTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 1328
      },
      "name": "LockConfigurationTypeProperty",
      "namespace": "CfnBackupVault",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupvault-lockconfigurationtype.html#cfn-backup-backupvault-lockconfigurationtype-minretentiondays"
            },
            "remarks": "This setting can be useful if, for example, your organization's policies require you to retain certain data for at least seven years (2555 days).\n\nIf this parameter is not specified, Vault Lock will not enforce a minimum retention period.\n\nIf this parameter is specified, any backup or copy job to the vault must have a lifecycle policy with a retention period equal to or longer than the minimum retention period. If the job's retention period is shorter than that minimum retention period, then the vault fails that backup or copy job, and you should either modify your lifecycle settings or use a different vault. Recovery points already saved in the vault prior to Vault Lock are not affected.",
            "stability": "external",
            "summary": "The AWS Backup Vault Lock configuration that specifies the minimum retention period that the vault retains its recovery points."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1360
          },
          "name": "minRetentionDays",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupvault-lockconfigurationtype.html#cfn-backup-backupvault-lockconfigurationtype-changeablefordays"
            },
            "remarks": "For example, setting `ChangeableForDays` to 30 on Jan. 1, 2022 at 8pm UTC will set the lock date to Jan. 31, 2022 at 8pm UTC.\n\nAWS Backup enforces a 72-hour cooling-off period before Vault Lock takes effect and becomes immutable. Therefore, you must set `ChangeableForDays` to 3 or greater.\n\nBefore the lock date, you can delete Vault Lock from the vault using `DeleteBackupVaultLockConfiguration` or change the Vault Lock configuration using `PutBackupVaultLockConfiguration` . On and after the lock date, the Vault Lock becomes immutable and cannot be changed or deleted.\n\nIf this parameter is not specified, you can delete Vault Lock from the vault using `DeleteBackupVaultLockConfiguration` or change the Vault Lock configuration using `PutBackupVaultLockConfiguration` at any time.",
            "stability": "external",
            "summary": "The AWS Backup Vault Lock configuration that specifies the number of days before the lock date."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1340
          },
          "name": "changeableForDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupvault-lockconfigurationtype.html#cfn-backup-backupvault-lockconfigurationtype-maxretentiondays"
            },
            "remarks": "This setting can be useful if, for example, your organization's policies require you to destroy certain data after retaining it for four years (1460 days).\n\nIf this parameter is not included, Vault Lock does not enforce a maximum retention period on the recovery points in the vault. If this parameter is included without a value, Vault Lock will not enforce a maximum retention period.\n\nIf this parameter is specified, any backup or copy job to the vault must have a lifecycle policy with a retention period equal to or shorter than the maximum retention period. If the job's retention period is longer than that maximum retention period, then the vault fails the backup or copy job, and you should either modify your lifecycle settings or use a different vault. Recovery points already saved in the vault prior to Vault Lock are not affected.",
            "stability": "external",
            "summary": "The AWS Backup Vault Lock configuration that specifies the maximum retention period that the vault retains its recovery points."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1350
          },
          "name": "maxRetentionDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupVault.LockConfigurationTypeProperty"
    },
    "@aws-cdk/aws-backup.CfnBackupVault.NotificationObjectTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupvault-notificationobjecttype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies an object containing SNS event notification properties for the target backup vault.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst notificationObjectTypeProperty: backup.CfnBackupVault.NotificationObjectTypeProperty = {\n  backupVaultEvents: ['backupVaultEvents'],\n  snsTopicArn: 'snsTopicArn',\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupVault.NotificationObjectTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 1428
      },
      "name": "NotificationObjectTypeProperty",
      "namespace": "CfnBackupVault",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupvault-notificationobjecttype.html#cfn-backup-backupvault-notificationobjecttype-backupvaultevents"
            },
            "remarks": "For valid events, see [BackupVaultEvents](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_PutBackupVaultNotifications.html#API_PutBackupVaultNotifications_RequestSyntax) in the *AWS Backup API Guide* .",
            "stability": "external",
            "summary": "An array of events that indicate the status of jobs to back up resources to the backup vault."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1434
          },
          "name": "backupVaultEvents",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupvault-notificationobjecttype.html#cfn-backup-backupvault-notificationobjecttype-snstopicarn"
            },
            "remarks": "for example, `arn:aws:sns:us-west-2:111122223333:MyTopic` .",
            "stability": "external",
            "summary": "An ARN that uniquely identifies an Amazon Simple Notification Service (Amazon SNS) topic;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1440
          },
          "name": "snsTopicArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupVault.NotificationObjectTypeProperty"
    },
    "@aws-cdk/aws-backup.CfnBackupVaultProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnBackupVault`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const accessPolicy: any;\nconst cfnBackupVaultProps: backup.CfnBackupVaultProps = {\n  backupVaultName: 'backupVaultName',\n\n  // the properties below are optional\n  accessPolicy: accessPolicy,\n  backupVaultTags: {\n    backupVaultTagsKey: 'backupVaultTags',\n  },\n  encryptionKeyArn: 'encryptionKeyArn',\n  lockConfiguration: {\n    minRetentionDays: 123,\n\n    // the properties below are optional\n    changeableForDays: 123,\n    maxRetentionDays: 123,\n  },\n  notifications: {\n    backupVaultEvents: ['backupVaultEvents'],\n    snsTopicArn: 'snsTopicArn',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupVaultProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 1063
      },
      "name": "CfnBackupVaultProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaultname"
            },
            "remarks": "Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.",
            "stability": "external",
            "summary": "The name of a logical container where backups are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1070
          },
          "name": "backupVaultName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-accesspolicy"
            },
            "stability": "external",
            "summary": "A resource-based policy that is used to manage access permissions on the target backup vault."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1077
          },
          "name": "accessPolicy",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaulttags"
            },
            "remarks": "Each tag is a key-value pair.",
            "stability": "external",
            "summary": "Metadata that you can assign to help organize the resources that you create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1084
          },
          "name": "backupVaultTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-encryptionkeyarn"
            },
            "remarks": "for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` . If you specify a key, you must specify its ARN, not its alias. If you do not specify a key, AWS Backup creates a KMS key for you by default.\n\nTo learn which AWS Backup services support full AWS Backup management and how AWS Backup handles encryption for backups from services that do not yet support full AWS Backup , see [Encryption for backups in AWS Backup](https://docs.aws.amazon.com/aws-backup/latest/devguide/encryption.html)",
            "stability": "external",
            "summary": "A server-side encryption key you can specify to encrypt your backups from services that support full AWS Backup management;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1093
          },
          "name": "encryptionKeyArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-lockconfiguration"
            },
            "stability": "external",
            "summary": "Configuration for [AWS Backup Vault Lock](https://docs.aws.amazon.com/aws-backup/latest/devguide/vault-lock.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1100
          },
          "name": "lockConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupVault.LockConfigurationTypeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-notifications"
            },
            "stability": "external",
            "summary": "The SNS event notifications for the specified backup vault."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1107
          },
          "name": "notifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupVault.NotificationObjectTypeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnBackupVaultProps"
    },
    "@aws-cdk/aws-backup.CfnFramework": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Backup::Framework",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a framework with one or more controls. A framework is a collection of controls that you can use to evaluate your backup practices. By using pre-built customizable controls to define your policies, you can evaluate whether your backup practices comply with your policies and which resources are not yet in compliance.\n\nFor a sample AWS CloudFormation template, see the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/bam-cfn-integration.html#bam-cfn-frameworks-template) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Backup::Framework`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const controlScope: any;\nconst cfnFramework = new backup.CfnFramework(this, 'MyCfnFramework', {\n  frameworkControls: [{\n    controlName: 'controlName',\n\n    // the properties below are optional\n    controlInputParameters: [{\n      parameterName: 'parameterName',\n      parameterValue: 'parameterValue',\n    }],\n    controlScope: controlScope,\n  }],\n\n  // the properties below are optional\n  frameworkDescription: 'frameworkDescription',\n  frameworkName: 'frameworkName',\n  frameworkTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-backup.CfnFramework",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Backup::Framework`."
        },
        "locationInModule": {
          "filename": "lib/backup.generated.ts",
          "line": 1687
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-backup.CfnFrameworkProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 1603
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1707
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1721
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnFramework",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1607
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTime"
            },
            "stability": "external",
            "summary": "The UTC time when you created your framework."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1632
          },
          "name": "attrCreationTime",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DeploymentStatus"
            },
            "remarks": "This status is usually `Completed` , but might also be `Create in progress` or another status. For a list of statuses, see [Framework compliance status](https://docs.aws.amazon.com/aws-backup/latest/devguide/viewing-frameworks.html) in the *Developer Guide* .",
            "stability": "external",
            "summary": "Depolyment status refers to whether your framework has completed deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1638
          },
          "name": "attrDeploymentStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FrameworkArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of your framework."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1644
          },
          "name": "attrFrameworkArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FrameworkStatus"
            },
            "remarks": "This status is `Active` when you turn on all resources the framework evaluates. For other statuses and steps to correct them, see [Framework compliance status](https://docs.aws.amazon.com/aws-backup/latest/devguide/viewing-frameworks.html) in the *Developer Guide* .",
            "stability": "external",
            "summary": "Framework status refers to whether you have turned on resource tracking for all of your resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1650
          },
          "name": "attrFrameworkStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1712
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworkcontrols"
            },
            "remarks": "Each framework must contain at least one control.",
            "stability": "external",
            "summary": "Contains detailed information about all of the controls of a framework."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1657
          },
          "name": "frameworkControls",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-backup.CfnFramework.FrameworkControlProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworkdescription"
            },
            "stability": "external",
            "summary": "An optional description of the framework with a maximum 1,024 characters."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1664
          },
          "name": "frameworkDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworkname"
            },
            "remarks": "This name is between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).",
            "stability": "external",
            "summary": "The unique name of a framework."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1671
          },
          "name": "frameworkName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworktags"
            },
            "stability": "external",
            "summary": "A list of tags with which to tag your framework."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1678
          },
          "name": "frameworkTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/core.CfnTag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnFramework"
    },
    "@aws-cdk/aws-backup.CfnFramework.ControlInputParameterProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-framework-controlinputparameter.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A control can have zero, one, or more than one parameter. An example of a control with two parameters is: \"backup plan frequency is at least `daily` and the retention period is at least `1 year` \". The first parameter is `daily` . The second parameter is `1 year` .",
        "stability": "external",
        "summary": "A list of parameters for a control.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst controlInputParameterProperty: backup.CfnFramework.ControlInputParameterProperty = {\n  parameterName: 'parameterName',\n  parameterValue: 'parameterValue',\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnFramework.ControlInputParameterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 1735
      },
      "name": "ControlInputParameterProperty",
      "namespace": "CfnFramework",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-framework-controlinputparameter.html#cfn-backup-framework-controlinputparameter-parametername"
            },
            "stability": "external",
            "summary": "The name of a parameter, for example, `BackupPlanFrequency` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1741
          },
          "name": "parameterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-framework-controlinputparameter.html#cfn-backup-framework-controlinputparameter-parametervalue"
            },
            "stability": "external",
            "summary": "The value of parameter, for example, `hourly` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1747
          },
          "name": "parameterValue",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnFramework.ControlInputParameterProperty"
    },
    "@aws-cdk/aws-backup.CfnFramework.FrameworkControlProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-framework-frameworkcontrol.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Each framework must contain at least one control.",
        "stability": "external",
        "summary": "Contains detailed information about all of the controls of a framework.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const controlScope: any;\nconst frameworkControlProperty: backup.CfnFramework.FrameworkControlProperty = {\n  controlName: 'controlName',\n\n  // the properties below are optional\n  controlInputParameters: [{\n    parameterName: 'parameterName',\n    parameterValue: 'parameterValue',\n  }],\n  controlScope: controlScope,\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnFramework.FrameworkControlProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 1813
      },
      "name": "FrameworkControlProperty",
      "namespace": "CfnFramework",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-framework-frameworkcontrol.html#cfn-backup-framework-frameworkcontrol-controlname"
            },
            "remarks": "This name is between 1 and 256 characters.",
            "stability": "external",
            "summary": "The name of a control."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1825
          },
          "name": "controlName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-framework-frameworkcontrol.html#cfn-backup-framework-frameworkcontrol-controlinputparameters"
            },
            "stability": "external",
            "summary": "A list of `ParameterName` and `ParameterValue` pairs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1819
          },
          "name": "controlInputParameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-backup.CfnFramework.ControlInputParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-framework-frameworkcontrol.html#cfn-backup-framework-frameworkcontrol-controlscope"
            },
            "remarks": "The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans. For more information, see [`ControlScope` .](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_ControlScope.html)",
            "stability": "external",
            "summary": "The scope of a control."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1831
          },
          "name": "controlScope",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnFramework.FrameworkControlProperty"
    },
    "@aws-cdk/aws-backup.CfnFrameworkProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnFramework`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const controlScope: any;\nconst cfnFrameworkProps: backup.CfnFrameworkProps = {\n  frameworkControls: [{\n    controlName: 'controlName',\n\n    // the properties below are optional\n    controlInputParameters: [{\n      parameterName: 'parameterName',\n      parameterValue: 'parameterValue',\n    }],\n    controlScope: controlScope,\n  }],\n\n  // the properties below are optional\n  frameworkDescription: 'frameworkDescription',\n  frameworkName: 'frameworkName',\n  frameworkTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnFrameworkProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 1505
      },
      "name": "CfnFrameworkProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworkcontrols"
            },
            "remarks": "Each framework must contain at least one control.",
            "stability": "external",
            "summary": "Contains detailed information about all of the controls of a framework."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1512
          },
          "name": "frameworkControls",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-backup.CfnFramework.FrameworkControlProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworkdescription"
            },
            "stability": "external",
            "summary": "An optional description of the framework with a maximum 1,024 characters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1519
          },
          "name": "frameworkDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworkname"
            },
            "remarks": "This name is between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).",
            "stability": "external",
            "summary": "The unique name of a framework."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1526
          },
          "name": "frameworkName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworktags"
            },
            "stability": "external",
            "summary": "A list of tags with which to tag your framework."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1533
          },
          "name": "frameworkTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/core.CfnTag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnFrameworkProps"
    },
    "@aws-cdk/aws-backup.CfnReportPlan": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Backup::ReportPlan",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a report plan. A report plan is a document that contains information about the contents of the report and where AWS Backup will deliver it.\n\nIf you call `CreateReportPlan` with a plan that already exists, you receive an `AlreadyExistsException` exception.\n\nFor a sample AWS CloudFormation template, see the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/assigning-resources.html#assigning-resources-cfn) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Backup::ReportPlan`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const reportDeliveryChannel: any;\ndeclare const reportSetting: any;\nconst cfnReportPlan = new backup.CfnReportPlan(this, 'MyCfnReportPlan', {\n  reportDeliveryChannel: reportDeliveryChannel,\n  reportSetting: reportSetting,\n\n  // the properties below are optional\n  reportPlanDescription: 'reportPlanDescription',\n  reportPlanName: 'reportPlanName',\n  reportPlanTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-backup.CfnReportPlan",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Backup::ReportPlan`."
        },
        "locationInModule": {
          "filename": "lib/backup.generated.ts",
          "line": 2090
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-backup.CfnReportPlanProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 2013
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 2109
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 2124
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnReportPlan",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 2017
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ReportPlanArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of your report plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 2042
          },
          "name": "attrReportPlanArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 2114
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportdeliverychannel"
            },
            "stability": "external",
            "summary": "Contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 2049
          },
          "name": "reportDeliveryChannel",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportsetting"
            },
            "remarks": "`RESOURCE_COMPLIANCE_REPORT | CONTROL_COMPLIANCE_REPORT | BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT`\n\nIf the report template is `RESOURCE_COMPLIANCE_REPORT` or `CONTROL_COMPLIANCE_REPORT` , this API resource also describes the report coverage by AWS Regions and frameworks.",
            "stability": "external",
            "summary": "Identifies the report template for the report. Reports are built using a report template. The report templates are:."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 2060
          },
          "name": "reportSetting",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportplandescription"
            },
            "stability": "external",
            "summary": "An optional description of the report plan with a maximum 1,024 characters."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 2067
          },
          "name": "reportPlanDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportplanname"
            },
            "remarks": "This name is between 1 and 256 characters starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).",
            "stability": "external",
            "summary": "The unique name of the report plan."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 2074
          },
          "name": "reportPlanName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportplantags"
            },
            "stability": "external",
            "summary": "A list of tags to tag your report plan."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 2081
          },
          "name": "reportPlanTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/core.CfnTag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnReportPlan"
    },
    "@aws-cdk/aws-backup.CfnReportPlanProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnReportPlan`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\n\ndeclare const reportDeliveryChannel: any;\ndeclare const reportSetting: any;\nconst cfnReportPlanProps: backup.CfnReportPlanProps = {\n  reportDeliveryChannel: reportDeliveryChannel,\n  reportSetting: reportSetting,\n\n  // the properties below are optional\n  reportPlanDescription: 'reportPlanDescription',\n  reportPlanName: 'reportPlanName',\n  reportPlanTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-backup.CfnReportPlanProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 1898
      },
      "name": "CfnReportPlanProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportdeliverychannel"
            },
            "stability": "external",
            "summary": "Contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1905
          },
          "name": "reportDeliveryChannel",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportsetting"
            },
            "remarks": "`RESOURCE_COMPLIANCE_REPORT | CONTROL_COMPLIANCE_REPORT | BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT`\n\nIf the report template is `RESOURCE_COMPLIANCE_REPORT` or `CONTROL_COMPLIANCE_REPORT` , this API resource also describes the report coverage by AWS Regions and frameworks.",
            "stability": "external",
            "summary": "Identifies the report template for the report. Reports are built using a report template. The report templates are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1916
          },
          "name": "reportSetting",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportplandescription"
            },
            "stability": "external",
            "summary": "An optional description of the report plan with a maximum 1,024 characters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1923
          },
          "name": "reportPlanDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportplanname"
            },
            "remarks": "This name is between 1 and 256 characters starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).",
            "stability": "external",
            "summary": "The unique name of the report plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1930
          },
          "name": "reportPlanName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportplantags"
            },
            "stability": "external",
            "summary": "A list of tags to tag your report plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1937
          },
          "name": "reportPlanTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/core.CfnTag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/backup.generated:CfnReportPlanProps"
    },
    "@aws-cdk/aws-backup.IBackupPlan": {
      "assembly": "@aws-cdk/aws-backup",
      "docs": {
        "stability": "stable",
        "summary": "A backup plan."
      },
      "fqn": "@aws-cdk/aws-backup.IBackupPlan",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/plan.ts",
        "line": 11
      },
      "name": "IBackupPlan",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The identifier of the backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 17
          },
          "name": "backupPlanId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/plan:IBackupPlan"
    },
    "@aws-cdk/aws-backup.IBackupVault": {
      "assembly": "@aws-cdk/aws-backup",
      "docs": {
        "stability": "stable",
        "summary": "A backup vault."
      },
      "fqn": "@aws-cdk/aws-backup.IBackupVault",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vault.ts",
        "line": 11
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grant the actions defined in actions to the given grantee on this backup vault."
          },
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 30
          },
          "name": "grant",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "variadic": true
        }
      ],
      "name": "IBackupVault",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the backup vault."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 24
          },
          "name": "backupVaultArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of a logical container where backups are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 17
          },
          "name": "backupVaultName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vault:IBackupVault"
    },
    "@aws-cdk/aws-backup.TagCondition": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A tag condition.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as backup from '@aws-cdk/aws-backup';\nconst tagCondition: backup.TagCondition = {\n  key: 'key',\n  value: 'value',\n\n  // the properties below are optional\n  operation: backup.TagOperation.STRING_EQUALS,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-backup.TagCondition",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resource.ts",
        "line": 30
      },
      "name": "TagCondition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, in `\"ec2:ResourceTag/Department\": \"accounting\"`,\n`ec2:ResourceTag/Department` is the key.",
            "stability": "stable",
            "summary": "The key in a key-value pair."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 37
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, in `\"ec2:ResourceTag/Department\": \"accounting\"`,\n`accounting` is the value.",
            "stability": "stable",
            "summary": "The value in a key-value pair."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 53
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "STRING_EQUALS",
            "stability": "stable",
            "summary": "An operation that is applied to a key-value pair used to filter resources in a selection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 45
          },
          "name": "operation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-backup.TagOperation"
          }
        }
      ],
      "symbolId": "lib/resource:TagCondition"
    },
    "@aws-cdk/aws-backup.TagOperation": {
      "assembly": "@aws-cdk/aws-backup",
      "docs": {
        "stability": "stable",
        "summary": "An operation that is applied to a key-value pair."
      },
      "fqn": "@aws-cdk/aws-backup.TagOperation",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/resource.ts",
        "line": 15
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "StringEquals."
          },
          "name": "STRING_EQUALS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Dummy member."
          },
          "name": "DUMMY"
        }
      ],
      "name": "TagOperation",
      "symbolId": "lib/resource:TagOperation"
    }
  },
  "version": "1.169.0",
  "fingerprint": "**********"
}