{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-ec2": "1.169.0",
    "@aws-cdk/aws-efs": "1.169.0",
    "@aws-cdk/aws-iam": "1.169.0",
    "@aws-cdk/aws-kms": "1.169.0",
    "@aws-cdk/aws-logs": "1.169.0",
    "@aws-cdk/aws-secretsmanager": "1.169.0",
    "@aws-cdk/core": "1.169.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SAM",
          "packageId": "Amazon.CDK.AWS.SAM"
        },
        "java": {
          "maven": {
            "artifactId": "sam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sam"
        },
        "js": {
          "npm": "@aws-cdk/aws-sam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sam",
          "module": "aws_cdk.aws_sam"
        }
      }
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager"
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::DocDB",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.63.2 (build a8a8833)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "AWS::DocDB",
    "aws-docdb"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-docdb",
  "readme": {
    "markdown": "# Amazon DocumentDB Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\n## Starting a Clustered Database\n\nTo set up a clustered DocumentDB database, define a `DatabaseCluster`. You must\nalways launch a database in a VPC. Use the `vpcSubnets` attribute to control whether\nyour instances will be launched privately or publicly:\n\n```ts\ndeclare const vpc: ec2.Vpc;\nconst cluster = new docdb.DatabaseCluster(this, 'Database', {\n  masterUser: {\n    username: 'myuser', // NOTE: 'admin' is reserved by DocumentDB\n    excludeCharacters: '\\\"@/:', // optional, defaults to the set \"\\\"@/\" and is also used for eventually created rotations\n    secretName: '/myapp/mydocdb/masteruser', // optional, if you prefer to specify the secret name\n  },\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n  vpcSubnets: {\n    subnetType: ec2.SubnetType.PUBLIC,\n  },\n  vpc,\n});\n```\n\nBy default, the master password will be generated and stored in AWS Secrets Manager with auto-generated description.\n\nYour cluster will be empty by default.\n\n## Connecting\n\nTo control who can access the cluster, use the `.connections` attribute. DocumentDB databases have a default port, so\nyou don't need to specify the port:\n\n```ts\ndeclare const cluster: docdb.DatabaseCluster;\ncluster.connections.allowDefaultPortFromAnyIpv4('Open to the world');\n```\n\nThe endpoints to access your database cluster will be available as the `.clusterEndpoint` and `.clusterReadEndpoint`\nattributes:\n\n```ts\ndeclare const cluster: docdb.DatabaseCluster;\nconst writeAddress = cluster.clusterEndpoint.socketAddress;   // \"HOSTNAME:PORT\"\n```\n\nIf you have existing security groups you would like to add to the cluster, use the `addSecurityGroups` method. Security\ngroups added in this way will not be managed by the `Connections` object of the cluster.\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const cluster: docdb.DatabaseCluster;\n\nconst securityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', {\n  vpc,\n});\ncluster.addSecurityGroups(securityGroup);\n```\n\n## Deletion protection\n\nDeletion protection can be enabled on an Amazon DocumentDB cluster to prevent accidental deletion of the cluster:\n\n```ts\ndeclare const vpc: ec2.Vpc;\nconst cluster = new docdb.DatabaseCluster(this, 'Database', {\n  masterUser: {\n    username: 'myuser',\n  },\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n  vpcSubnets: {\n    subnetType: ec2.SubnetType.PUBLIC,\n  },\n  vpc,\n  deletionProtection: true, // Enable deletion protection.\n});\n```\n\n## Rotating credentials\n\nWhen the master password is generated and stored in AWS Secrets Manager, it can be rotated automatically:\n\n```ts\ndeclare const cluster: docdb.DatabaseCluster;\ncluster.addRotationSingleUser(); // Will rotate automatically after 30 days\n```\n\n```ts lit=test/integ.cluster-rotation.lit.ts\nconst cluster = new docdb.DatabaseCluster(stack, 'Database', {\n  masterUser: {\n    username: 'docdb',\n  },\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n  vpc,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\ncluster.addRotationSingleUser();\n```\n\nThe multi user rotation scheme is also available:\n\n```ts\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const myImportedSecret: secretsmanager.Secret;\ndeclare const cluster: docdb.DatabaseCluster;\n\ncluster.addRotationMultiUser('MyUser', {\n  secret: myImportedSecret, // This secret must have the `masterarn` key\n});\n```\n\nIt's also possible to create user credentials together with the cluster and add rotation:\n\n```ts\ndeclare const cluster: docdb.DatabaseCluster;\nconst myUserSecret = new docdb.DatabaseSecret(this, 'MyUserSecret', {\n  username: 'myuser',\n  masterSecret: cluster.secret,\n});\nconst myUserSecretAttached = myUserSecret.attach(cluster); // Adds DB connections information in the secret\n\ncluster.addRotationMultiUser('MyUser', { // Add rotation using the multi user scheme\n  secret: myUserSecretAttached, // This secret must have the `masterarn` key\n});\n```\n\n**Note**: This user must be created manually in the database using the master credentials.\nThe rotation will start as soon as this user exists.\n\nSee also [@aws-cdk/aws-secretsmanager](https://github.com/aws/aws-cdk/blob/master/packages/%40aws-cdk/aws-secretsmanager/README.md) for credentials rotation of existing clusters.\n\n## Audit and profiler Logs\n\nSending audit or profiler needs to be configured in two places:\n\n1. Check / create the needed options in your ParameterGroup for [audit](https://docs.aws.amazon.com/documentdb/latest/developerguide/event-auditing.html#event-auditing-enabling-auditing) and\n[profiler](https://docs.aws.amazon.com/documentdb/latest/developerguide/profiling.html#profiling.enable-profiling) logs.\n2. Enable the corresponding option(s) when creating the `DatabaseCluster`:\n\n```ts\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from'@aws-cdk/aws-logs';\n\ndeclare const myLogsPublishingRole: iam.Role;\ndeclare const vpc: ec2.Vpc;\n\nconst cluster = new docdb.DatabaseCluster(this, 'Database', {\n  masterUser: {\n    username: 'myuser',\n  },\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n  vpcSubnets: {\n    subnetType: ec2.SubnetType.PUBLIC,\n  },\n  vpc,\n  exportProfilerLogsToCloudWatch: true, // Enable sending profiler logs\n  exportAuditLogsToCloudWatch: true, // Enable sending audit logs\n  cloudWatchLogsRetention: logs.RetentionDays.THREE_MONTHS, // Optional - default is to never expire logs\n  cloudWatchLogsRetentionRole: myLogsPublishingRole, // Optional - a role will be created if not provided\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-docdb",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.DocDB",
      "packageId": "Amazon.CDK.AWS.DocDB"
    },
    "java": {
      "maven": {
        "artifactId": "docdb",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.docdb"
    },
    "js": {
      "npm": "@aws-cdk/aws-docdb"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-docdb",
      "module": "aws_cdk.aws_docdb"
    }
  },
  "types": {
    "@aws-cdk/aws-docdb.BackupProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "default": "- The retention period for automated backups is 1 day.\nThe preferred backup window will be a 30-minute window selected at random\nfrom an 8-hour block of time for each AWS Region.",
        "see": "https://docs.aws.amazon.com/documentdb/latest/developerguide/backup-restore.db-cluster-snapshots.html#backup-restore.backup-window",
        "stability": "stable",
        "summary": "Backup configuration for DocumentDB databases.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nimport * as cdk from '@aws-cdk/core';\nconst backupProps: docdb.BackupProps = {\n  retention: cdk.Duration.minutes(30),\n\n  // the properties below are optional\n  preferredWindow: 'preferredWindow',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-docdb.BackupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/props.ts",
        "line": 13
      },
      "name": "BackupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "How many days to retain the backup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 18
          },
          "name": "retention",
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a 30-minute window selected at random from an 8-hour block of\ntime for each AWS Region. To see the time blocks available, see\nhttps://docs.aws.amazon.com/documentdb/latest/developerguide/backup-restore.db-cluster-snapshots.html#backup-restore.backup-window",
            "remarks": "Must be at least 30 minutes long.\n\nExample: '01:00-02:00'",
            "stability": "stable",
            "summary": "A daily time range in 24-hours UTC format in which backups preferably execute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 31
          },
          "name": "preferredWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/props:BackupProps"
    },
    "@aws-cdk/aws-docdb.CfnDBCluster": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::DocDB::DBCluster",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::DocDB::DBCluster` Amazon DocumentDB (with MongoDB compatibility) resource describes a DBCluster. Amazon DocumentDB is a fully managed, MongoDB-compatible document database engine. For more information, see [DBCluster](https://docs.aws.amazon.com/documentdb/latest/developerguide/API_DBCluster.html) in the *Amazon DocumentDB Developer Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::DocDB::DBCluster`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nconst cfnDBCluster = new docdb.CfnDBCluster(this, 'MyCfnDBCluster', /* all optional props */ {\n  availabilityZones: ['availabilityZones'],\n  backupRetentionPeriod: 123,\n  copyTagsToSnapshot: false,\n  dbClusterIdentifier: 'dbClusterIdentifier',\n  dbClusterParameterGroupName: 'dbClusterParameterGroupName',\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  deletionProtection: false,\n  enableCloudwatchLogsExports: ['enableCloudwatchLogsExports'],\n  engineVersion: 'engineVersion',\n  kmsKeyId: 'kmsKeyId',\n  masterUsername: 'masterUsername',\n  masterUserPassword: 'masterUserPassword',\n  port: 123,\n  preferredBackupWindow: 'preferredBackupWindow',\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  restoreToTime: 'restoreToTime',\n  restoreType: 'restoreType',\n  snapshotIdentifier: 'snapshotIdentifier',\n  sourceDbClusterIdentifier: 'sourceDbClusterIdentifier',\n  storageEncrypted: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  useLatestRestorableTime: false,\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n});"
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBCluster",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::DocDB::DBCluster`."
        },
        "locationInModule": {
          "filename": "lib/docdb.generated.ts",
          "line": 635
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-docdb.CfnDBClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 361
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 678
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 711
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDBCluster",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 365
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ClusterResourceId"
            },
            "remarks": "for example: `cluster-ABCD1234EFGH5678IJKL90MNOP` . The cluster ID uniquely identifies the cluster and is used in things like IAM authentication policies.",
            "stability": "external",
            "summary": "The resource id for the cluster;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 390
          },
          "name": "attrClusterResourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Endpoint"
            },
            "stability": "external",
            "summary": "The connection endpoint for the cluster, such as `sample-cluster.cluster-cozrlsfrcjoc.us-east-1.docdb.amazonaws.com` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 396
          },
          "name": "attrEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Port"
            },
            "remarks": "For example: `27017` .",
            "stability": "external",
            "summary": "The port number on which the cluster accepts connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 402
          },
          "name": "attrPort",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ReadEndpoint"
            },
            "remarks": "For example: `sample-cluster.cluster-ro-cozrlsfrcjoc.us-east-1.docdb.amazonaws.com` .",
            "stability": "external",
            "summary": "The reader endpoint for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 408
          },
          "name": "attrReadEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 683
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-tags"
            },
            "stability": "external",
            "summary": "The tags to be assigned to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 612
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-availabilityzones"
            },
            "stability": "external",
            "summary": "A list of Amazon EC2 Availability Zones that instances in the cluster can be created in."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 415
          },
          "name": "availabilityZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-backupretentionperiod"
            },
            "remarks": "Default: 1\n\nConstraints:\n\n- Must be a value from 1 to 35.",
            "stability": "external",
            "summary": "The number of days for which automated backups are retained. You must specify a minimum value of 1."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 428
          },
          "name": "backupRetentionPeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-copytagstosnapshot"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.CopyTagsToSnapshot`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 435
          },
          "name": "copyTagsToSnapshot",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbclusteridentifier"
            },
            "remarks": "Constraints:\n\n- Must contain from 1 to 63 letters, numbers, or hyphens.\n- The first character must be a letter.\n- Cannot end with a hyphen or contain two consecutive hyphens.\n\nExample: `my-cluster`",
            "stability": "external",
            "summary": "The cluster identifier. This parameter is stored as a lowercase string."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 450
          },
          "name": "dbClusterIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbclusterparametergroupname"
            },
            "stability": "external",
            "summary": "The name of the cluster parameter group to associate with this cluster."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 457
          },
          "name": "dbClusterParameterGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbsubnetgroupname"
            },
            "remarks": "Constraints: Must match the name of an existing `DBSubnetGroup` . Must not be default.\n\nExample: `mySubnetgroup`",
            "stability": "external",
            "summary": "A subnet group to associate with this cluster."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 468
          },
          "name": "dbSubnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-deletionprotection"
            },
            "remarks": "If enabled, the cluster cannot be deleted unless it is modified and `DeletionProtection` is disabled.",
            "stability": "external",
            "summary": "Protects clusters from being accidentally deleted."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 475
          },
          "name": "deletionProtection",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-enablecloudwatchlogsexports"
            },
            "remarks": "You can enable audit logs or profiler logs. For more information, see [Auditing Amazon DocumentDB Events](https://docs.aws.amazon.com/documentdb/latest/developerguide/event-auditing.html) and [Profiling Amazon DocumentDB Operations](https://docs.aws.amazon.com/documentdb/latest/developerguide/profiling.html) .",
            "stability": "external",
            "summary": "The list of log types that need to be enabled for exporting to Amazon CloudWatch Logs."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 482
          },
          "name": "enableCloudwatchLogsExports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-engineversion"
            },
            "remarks": "The `--engine-version` will default to the latest major engine version. For production workloads, we recommend explicitly declaring this parameter with the intended major engine version.",
            "stability": "external",
            "summary": "The version number of the database engine to use."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 489
          },
          "name": "engineVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-kmskeyid"
            },
            "remarks": "The AWS KMS key identifier is the Amazon Resource Name (ARN) for the AWS KMS encryption key. If you are creating a cluster using the same AWS account that owns the AWS KMS encryption key that is used to encrypt the new cluster, you can use the AWS KMS key alias instead of the ARN for the AWS KMS encryption key.\n\nIf an encryption key is not specified in `KmsKeyId` :\n\n- If the `StorageEncrypted` parameter is `true` , Amazon DocumentDB uses your default encryption key.\n\nAWS KMS creates the default encryption key for your AWS account . Your AWS account has a different default encryption key for each AWS Regions .",
            "stability": "external",
            "summary": "The AWS KMS key identifier for an encrypted cluster."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 504
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-masterusername"
            },
            "remarks": "Constraints:\n\n- Must be from 1 to 63 letters or numbers.\n- The first character must be a letter.\n- Cannot be a reserved word for the chosen database engine.",
            "stability": "external",
            "summary": "The name of the master user for the cluster."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 517
          },
          "name": "masterUsername",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-masteruserpassword"
            },
            "remarks": "This password can contain any printable ASCII character except forward slash (/), double quote (\"), or the \"at\" symbol (@).\n\nConstraints: Must contain from 8 to 100 characters.",
            "stability": "external",
            "summary": "The password for the master database user."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 526
          },
          "name": "masterUserPassword",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-port"
            },
            "stability": "external",
            "summary": "Specifies the port that the database engine is listening on."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 533
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-preferredbackupwindow"
            },
            "remarks": "The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region .\n\nConstraints:\n\n- Must be in the format `hh24:mi-hh24:mi` .\n- Must be in Universal Coordinated Time (UTC).\n- Must not conflict with the preferred maintenance window.\n- Must be at least 30 minutes.",
            "stability": "external",
            "summary": "The daily time range during which automated backups are created if automated backups are enabled using the `BackupRetentionPeriod` parameter."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 549
          },
          "name": "preferredBackupWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-preferredmaintenancewindow"
            },
            "remarks": "Format: `ddd:hh24:mi-ddd:hh24:mi`\n\nThe default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region , occurring on a random day of the week.\n\nValid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun\n\nConstraints: Minimum 30-minute window.",
            "stability": "external",
            "summary": "The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC)."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 564
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-restoretotime"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.RestoreToTime`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 571
          },
          "name": "restoreToTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-restoretype"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.RestoreType`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 578
          },
          "name": "restoreType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-snapshotidentifier"
            },
            "remarks": "You can use either the name or the Amazon Resource Name (ARN) to specify a cluster snapshot. However, you can use only the ARN to specify a snapshot.\n\nConstraints:\n\n- Must match the identifier of an existing snapshot.",
            "stability": "external",
            "summary": "The identifier for the snapshot or cluster snapshot to restore from."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 591
          },
          "name": "snapshotIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-sourcedbclusteridentifier"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.SourceDBClusterIdentifier`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 598
          },
          "name": "sourceDbClusterIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-storageencrypted"
            },
            "stability": "external",
            "summary": "Specifies whether the cluster is encrypted."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 605
          },
          "name": "storageEncrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-uselatestrestorabletime"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.UseLatestRestorableTime`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 619
          },
          "name": "useLatestRestorableTime",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-vpcsecuritygroupids"
            },
            "stability": "external",
            "summary": "A list of EC2 VPC security groups to associate with this cluster."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 626
          },
          "name": "vpcSecurityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/docdb.generated:CfnDBCluster"
    },
    "@aws-cdk/aws-docdb.CfnDBClusterParameterGroup": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::DocDB::DBClusterParameterGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::DocDB::DBClusterParameterGroup` Amazon DocumentDB (with MongoDB compatibility) resource describes a DBClusterParameterGroup. For more information, see [DBClusterParameterGroup](https://docs.aws.amazon.com/documentdb/latest/developerguide/API_DBClusterParameterGroup.html) in the *Amazon DocumentDB Developer Guide* .\n\nParameters in a cluster parameter group apply to all of the instances in a cluster.\n\nA cluster parameter group is initially created with the default parameters for the database engine used by instances in the cluster. To provide custom values for any of the parameters, you must modify the group after you create it. After you create a DB cluster parameter group, you must associate it with your cluster. For the new cluster parameter group and associated settings to take effect, you must then reboot the DB instances in the cluster without failover.\n\n> After you create a cluster parameter group, you should wait at least 5 minutes before creating your first cluster that uses that cluster parameter group as the default parameter group. This allows Amazon DocumentDB to fully complete the create action before the cluster parameter group is used as the default for a new cluster. This step is especially important for parameters that are critical when creating the default database for a cluster, such as the character set for the default database defined by the `character_set_database` parameter.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::DocDB::DBClusterParameterGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\n\ndeclare const parameters: any;\nconst cfnDBClusterParameterGroup = new docdb.CfnDBClusterParameterGroup(this, 'MyCfnDBClusterParameterGroup', {\n  description: 'description',\n  family: 'family',\n  parameters: parameters,\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBClusterParameterGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::DocDB::DBClusterParameterGroup`."
        },
        "locationInModule": {
          "filename": "lib/docdb.generated.ts",
          "line": 917
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.CfnDBClusterParameterGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 844
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 936
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 951
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDBClusterParameterGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 848
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 941
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-tags"
            },
            "stability": "external",
            "summary": "The tags to be assigned to the cluster parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 908
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-description"
            },
            "stability": "external",
            "summary": "The description for the cluster parameter group."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 874
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-family"
            },
            "stability": "external",
            "summary": "The cluster parameter group family name."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 881
          },
          "name": "family",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-parameters"
            },
            "stability": "external",
            "summary": "Provides a list of parameters for the cluster parameter group."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 888
          },
          "name": "parameters",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-name"
            },
            "remarks": "Constraints:\n\n- Must not match the name of an existing `DBClusterParameterGroup` .\n\n> This value is stored as a lowercase string.",
            "stability": "external",
            "summary": "The name of the DB cluster parameter group."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 901
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/docdb.generated:CfnDBClusterParameterGroup"
    },
    "@aws-cdk/aws-docdb.CfnDBClusterParameterGroupProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnDBClusterParameterGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\n\ndeclare const parameters: any;\nconst cfnDBClusterParameterGroupProps: docdb.CfnDBClusterParameterGroupProps = {\n  description: 'description',\n  family: 'family',\n  parameters: parameters,\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBClusterParameterGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 724
      },
      "name": "CfnDBClusterParameterGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-description"
            },
            "stability": "external",
            "summary": "The description for the cluster parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 731
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-family"
            },
            "stability": "external",
            "summary": "The cluster parameter group family name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 738
          },
          "name": "family",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-parameters"
            },
            "stability": "external",
            "summary": "Provides a list of parameters for the cluster parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 745
          },
          "name": "parameters",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-name"
            },
            "remarks": "Constraints:\n\n- Must not match the name of an existing `DBClusterParameterGroup` .\n\n> This value is stored as a lowercase string.",
            "stability": "external",
            "summary": "The name of the DB cluster parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 758
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-tags"
            },
            "stability": "external",
            "summary": "The tags to be assigned to the cluster parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 765
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/docdb.generated:CfnDBClusterParameterGroupProps"
    },
    "@aws-cdk/aws-docdb.CfnDBClusterProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnDBCluster`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nconst cfnDBClusterProps: docdb.CfnDBClusterProps = {\n  availabilityZones: ['availabilityZones'],\n  backupRetentionPeriod: 123,\n  copyTagsToSnapshot: false,\n  dbClusterIdentifier: 'dbClusterIdentifier',\n  dbClusterParameterGroupName: 'dbClusterParameterGroupName',\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  deletionProtection: false,\n  enableCloudwatchLogsExports: ['enableCloudwatchLogsExports'],\n  engineVersion: 'engineVersion',\n  kmsKeyId: 'kmsKeyId',\n  masterUsername: 'masterUsername',\n  masterUserPassword: 'masterUserPassword',\n  port: 123,\n  preferredBackupWindow: 'preferredBackupWindow',\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  restoreToTime: 'restoreToTime',\n  restoreType: 'restoreType',\n  snapshotIdentifier: 'snapshotIdentifier',\n  sourceDbClusterIdentifier: 'sourceDbClusterIdentifier',\n  storageEncrypted: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  useLatestRestorableTime: false,\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n};"
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 19
      },
      "name": "CfnDBClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-availabilityzones"
            },
            "stability": "external",
            "summary": "A list of Amazon EC2 Availability Zones that instances in the cluster can be created in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 26
          },
          "name": "availabilityZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-backupretentionperiod"
            },
            "remarks": "Default: 1\n\nConstraints:\n\n- Must be a value from 1 to 35.",
            "stability": "external",
            "summary": "The number of days for which automated backups are retained. You must specify a minimum value of 1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 39
          },
          "name": "backupRetentionPeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-copytagstosnapshot"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.CopyTagsToSnapshot`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 46
          },
          "name": "copyTagsToSnapshot",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbclusteridentifier"
            },
            "remarks": "Constraints:\n\n- Must contain from 1 to 63 letters, numbers, or hyphens.\n- The first character must be a letter.\n- Cannot end with a hyphen or contain two consecutive hyphens.\n\nExample: `my-cluster`",
            "stability": "external",
            "summary": "The cluster identifier. This parameter is stored as a lowercase string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 61
          },
          "name": "dbClusterIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbclusterparametergroupname"
            },
            "stability": "external",
            "summary": "The name of the cluster parameter group to associate with this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 68
          },
          "name": "dbClusterParameterGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbsubnetgroupname"
            },
            "remarks": "Constraints: Must match the name of an existing `DBSubnetGroup` . Must not be default.\n\nExample: `mySubnetgroup`",
            "stability": "external",
            "summary": "A subnet group to associate with this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 79
          },
          "name": "dbSubnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-deletionprotection"
            },
            "remarks": "If enabled, the cluster cannot be deleted unless it is modified and `DeletionProtection` is disabled.",
            "stability": "external",
            "summary": "Protects clusters from being accidentally deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 86
          },
          "name": "deletionProtection",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-enablecloudwatchlogsexports"
            },
            "remarks": "You can enable audit logs or profiler logs. For more information, see [Auditing Amazon DocumentDB Events](https://docs.aws.amazon.com/documentdb/latest/developerguide/event-auditing.html) and [Profiling Amazon DocumentDB Operations](https://docs.aws.amazon.com/documentdb/latest/developerguide/profiling.html) .",
            "stability": "external",
            "summary": "The list of log types that need to be enabled for exporting to Amazon CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 93
          },
          "name": "enableCloudwatchLogsExports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-engineversion"
            },
            "remarks": "The `--engine-version` will default to the latest major engine version. For production workloads, we recommend explicitly declaring this parameter with the intended major engine version.",
            "stability": "external",
            "summary": "The version number of the database engine to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 100
          },
          "name": "engineVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-kmskeyid"
            },
            "remarks": "The AWS KMS key identifier is the Amazon Resource Name (ARN) for the AWS KMS encryption key. If you are creating a cluster using the same AWS account that owns the AWS KMS encryption key that is used to encrypt the new cluster, you can use the AWS KMS key alias instead of the ARN for the AWS KMS encryption key.\n\nIf an encryption key is not specified in `KmsKeyId` :\n\n- If the `StorageEncrypted` parameter is `true` , Amazon DocumentDB uses your default encryption key.\n\nAWS KMS creates the default encryption key for your AWS account . Your AWS account has a different default encryption key for each AWS Regions .",
            "stability": "external",
            "summary": "The AWS KMS key identifier for an encrypted cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 115
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-masterusername"
            },
            "remarks": "Constraints:\n\n- Must be from 1 to 63 letters or numbers.\n- The first character must be a letter.\n- Cannot be a reserved word for the chosen database engine.",
            "stability": "external",
            "summary": "The name of the master user for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 128
          },
          "name": "masterUsername",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-masteruserpassword"
            },
            "remarks": "This password can contain any printable ASCII character except forward slash (/), double quote (\"), or the \"at\" symbol (@).\n\nConstraints: Must contain from 8 to 100 characters.",
            "stability": "external",
            "summary": "The password for the master database user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 137
          },
          "name": "masterUserPassword",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-port"
            },
            "stability": "external",
            "summary": "Specifies the port that the database engine is listening on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 144
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-preferredbackupwindow"
            },
            "remarks": "The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region .\n\nConstraints:\n\n- Must be in the format `hh24:mi-hh24:mi` .\n- Must be in Universal Coordinated Time (UTC).\n- Must not conflict with the preferred maintenance window.\n- Must be at least 30 minutes.",
            "stability": "external",
            "summary": "The daily time range during which automated backups are created if automated backups are enabled using the `BackupRetentionPeriod` parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 160
          },
          "name": "preferredBackupWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-preferredmaintenancewindow"
            },
            "remarks": "Format: `ddd:hh24:mi-ddd:hh24:mi`\n\nThe default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region , occurring on a random day of the week.\n\nValid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun\n\nConstraints: Minimum 30-minute window.",
            "stability": "external",
            "summary": "The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 175
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-restoretotime"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.RestoreToTime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 182
          },
          "name": "restoreToTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-restoretype"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.RestoreType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 189
          },
          "name": "restoreType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-snapshotidentifier"
            },
            "remarks": "You can use either the name or the Amazon Resource Name (ARN) to specify a cluster snapshot. However, you can use only the ARN to specify a snapshot.\n\nConstraints:\n\n- Must match the identifier of an existing snapshot.",
            "stability": "external",
            "summary": "The identifier for the snapshot or cluster snapshot to restore from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 202
          },
          "name": "snapshotIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-sourcedbclusteridentifier"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.SourceDBClusterIdentifier`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 209
          },
          "name": "sourceDbClusterIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-storageencrypted"
            },
            "stability": "external",
            "summary": "Specifies whether the cluster is encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 216
          },
          "name": "storageEncrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-tags"
            },
            "stability": "external",
            "summary": "The tags to be assigned to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 223
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-uselatestrestorabletime"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.UseLatestRestorableTime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 230
          },
          "name": "useLatestRestorableTime",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-vpcsecuritygroupids"
            },
            "stability": "external",
            "summary": "A list of EC2 VPC security groups to associate with this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 237
          },
          "name": "vpcSecurityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/docdb.generated:CfnDBClusterProps"
    },
    "@aws-cdk/aws-docdb.CfnDBInstance": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::DocDB::DBInstance",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::DocDB::DBInstance` Amazon DocumentDB (with MongoDB compatibility) resource describes a DBInstance. For more information, see [DBInstance](https://docs.aws.amazon.com/documentdb/latest/developerguide/API_DBInstance.html) in the *Amazon DocumentDB Developer Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::DocDB::DBInstance`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nconst cfnDBInstance = new docdb.CfnDBInstance(this, 'MyCfnDBInstance', {\n  dbClusterIdentifier: 'dbClusterIdentifier',\n  dbInstanceClass: 'dbInstanceClass',\n\n  // the properties below are optional\n  autoMinorVersionUpgrade: false,\n  availabilityZone: 'availabilityZone',\n  dbInstanceIdentifier: 'dbInstanceIdentifier',\n  enablePerformanceInsights: false,\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBInstance",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::DocDB::DBInstance`."
        },
        "locationInModule": {
          "filename": "lib/docdb.generated.ts",
          "line": 1245
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.CfnDBInstanceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 1123
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1273
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1291
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDBInstance",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1127
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Endpoint"
            },
            "remarks": "For example: `sample-cluster.cluster-abcdefghijkl.us-east-1.docdb.amazonaws.com` .",
            "stability": "external",
            "summary": "The connection endpoint for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1152
          },
          "name": "attrEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Port"
            },
            "stability": "external",
            "summary": "The port number on which the database accepts connections, such as `27017` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1158
          },
          "name": "attrPort",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1278
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-tags"
            },
            "remarks": "You can assign up to 10 tags to an instance.",
            "stability": "external",
            "summary": "The tags to be assigned to the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1236
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbclusteridentifier"
            },
            "stability": "external",
            "summary": "The identifier of the cluster that the instance will belong to."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1165
          },
          "name": "dbClusterIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbinstanceclass"
            },
            "remarks": "for example, `db.m4.large` . If you change the class of an instance there can be some interruption in the cluster's service.",
            "stability": "external",
            "summary": "The compute and memory capacity of the instance;"
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1172
          },
          "name": "dbInstanceClass",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-autominorversionupgrade"
            },
            "remarks": "Amazon DocumentDB does not perform minor version upgrades regardless of the value set.\n\nDefault: `false`",
            "stability": "external",
            "summary": "This parameter does not apply to Amazon DocumentDB."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1181
          },
          "name": "autoMinorVersionUpgrade",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-availabilityzone"
            },
            "remarks": "Default: A random, system-chosen Availability Zone in the endpoint's AWS Region .\n\nExample: `us-east-1d`",
            "stability": "external",
            "summary": "The Amazon EC2 Availability Zone that the instance is created in."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1192
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbinstanceidentifier"
            },
            "remarks": "Constraints:\n\n- Must contain from 1 to 63 letters, numbers, or hyphens.\n- The first character must be a letter.\n- Cannot end with a hyphen or contain two consecutive hyphens.\n\nExample: `mydbinstance`",
            "stability": "external",
            "summary": "The instance identifier. This parameter is stored as a lowercase string."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1207
          },
          "name": "dbInstanceIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-enableperformanceinsights"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.EnablePerformanceInsights`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1214
          },
          "name": "enablePerformanceInsights",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-preferredmaintenancewindow"
            },
            "remarks": "Format: `ddd:hh24:mi-ddd:hh24:mi`\n\nThe default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region , occurring on a random day of the week.\n\nValid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun\n\nConstraints: Minimum 30-minute window.",
            "stability": "external",
            "summary": "The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC)."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1229
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/docdb.generated:CfnDBInstance"
    },
    "@aws-cdk/aws-docdb.CfnDBInstanceProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnDBInstance`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nconst cfnDBInstanceProps: docdb.CfnDBInstanceProps = {\n  dbClusterIdentifier: 'dbClusterIdentifier',\n  dbInstanceClass: 'dbInstanceClass',\n\n  // the properties below are optional\n  autoMinorVersionUpgrade: false,\n  availabilityZone: 'availabilityZone',\n  dbInstanceIdentifier: 'dbInstanceIdentifier',\n  enablePerformanceInsights: false,\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBInstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 964
      },
      "name": "CfnDBInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbclusteridentifier"
            },
            "stability": "external",
            "summary": "The identifier of the cluster that the instance will belong to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 971
          },
          "name": "dbClusterIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbinstanceclass"
            },
            "remarks": "for example, `db.m4.large` . If you change the class of an instance there can be some interruption in the cluster's service.",
            "stability": "external",
            "summary": "The compute and memory capacity of the instance;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 978
          },
          "name": "dbInstanceClass",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-autominorversionupgrade"
            },
            "remarks": "Amazon DocumentDB does not perform minor version upgrades regardless of the value set.\n\nDefault: `false`",
            "stability": "external",
            "summary": "This parameter does not apply to Amazon DocumentDB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 987
          },
          "name": "autoMinorVersionUpgrade",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-availabilityzone"
            },
            "remarks": "Default: A random, system-chosen Availability Zone in the endpoint's AWS Region .\n\nExample: `us-east-1d`",
            "stability": "external",
            "summary": "The Amazon EC2 Availability Zone that the instance is created in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 998
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbinstanceidentifier"
            },
            "remarks": "Constraints:\n\n- Must contain from 1 to 63 letters, numbers, or hyphens.\n- The first character must be a letter.\n- Cannot end with a hyphen or contain two consecutive hyphens.\n\nExample: `mydbinstance`",
            "stability": "external",
            "summary": "The instance identifier. This parameter is stored as a lowercase string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1013
          },
          "name": "dbInstanceIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-enableperformanceinsights"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.EnablePerformanceInsights`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1020
          },
          "name": "enablePerformanceInsights",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-preferredmaintenancewindow"
            },
            "remarks": "Format: `ddd:hh24:mi-ddd:hh24:mi`\n\nThe default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region , occurring on a random day of the week.\n\nValid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun\n\nConstraints: Minimum 30-minute window.",
            "stability": "external",
            "summary": "The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1035
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-tags"
            },
            "remarks": "You can assign up to 10 tags to an instance.",
            "stability": "external",
            "summary": "The tags to be assigned to the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1042
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/docdb.generated:CfnDBInstanceProps"
    },
    "@aws-cdk/aws-docdb.CfnDBSubnetGroup": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::DocDB::DBSubnetGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::DocDB::DBSubnetGroup` Amazon DocumentDB (with MongoDB compatibility) resource describes a DBSubnetGroup. subnet groups must contain at least one subnet in at least two Availability Zones in the AWS Region . For more information, see [DBSubnetGroup](https://docs.aws.amazon.com/documentdb/latest/developerguide/API_DBSubnetGroup.html) in the *Amazon DocumentDB Developer Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::DocDB::DBSubnetGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nconst cfnDBSubnetGroup = new docdb.CfnDBSubnetGroup(this, 'MyCfnDBSubnetGroup', {\n  dbSubnetGroupDescription: 'dbSubnetGroupDescription',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBSubnetGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::DocDB::DBSubnetGroup`."
        },
        "locationInModule": {
          "filename": "lib/docdb.generated.ts",
          "line": 1469
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.CfnDBSubnetGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 1405
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1486
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1500
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDBSubnetGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1409
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1491
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-tags"
            },
            "stability": "external",
            "summary": "The tags to be assigned to the subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1460
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupdescription"
            },
            "stability": "external",
            "summary": "The description for the subnet group."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1435
          },
          "name": "dbSubnetGroupDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-subnetids"
            },
            "stability": "external",
            "summary": "The Amazon EC2 subnet IDs for the subnet group."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1442
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupname"
            },
            "remarks": "Constraints: Must contain no more than 255 letters, numbers, periods, underscores, spaces, or hyphens. Must not be default.\n\nExample: `mySubnetgroup`",
            "stability": "external",
            "summary": "The name for the subnet group. This value is stored as a lowercase string."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1453
          },
          "name": "dbSubnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/docdb.generated:CfnDBSubnetGroup"
    },
    "@aws-cdk/aws-docdb.CfnDBSubnetGroupProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnDBSubnetGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nconst cfnDBSubnetGroupProps: docdb.CfnDBSubnetGroupProps = {\n  dbSubnetGroupDescription: 'dbSubnetGroupDescription',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  dbSubnetGroupName: 'dbSubnetGroupName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBSubnetGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 1304
      },
      "name": "CfnDBSubnetGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupdescription"
            },
            "stability": "external",
            "summary": "The description for the subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1311
          },
          "name": "dbSubnetGroupDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-subnetids"
            },
            "stability": "external",
            "summary": "The Amazon EC2 subnet IDs for the subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1318
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupname"
            },
            "remarks": "Constraints: Must contain no more than 255 letters, numbers, periods, underscores, spaces, or hyphens. Must not be default.\n\nExample: `mySubnetgroup`",
            "stability": "external",
            "summary": "The name for the subnet group. This value is stored as a lowercase string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1329
          },
          "name": "dbSubnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-tags"
            },
            "stability": "external",
            "summary": "The tags to be assigned to the subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1336
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/docdb.generated:CfnDBSubnetGroupProps"
    },
    "@aws-cdk/aws-docdb.ClusterParameterGroup": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::DocDB::DBClusterParameterGroup",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "stable",
        "summary": "A cluster parameter group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nconst clusterParameterGroup = new docdb.ClusterParameterGroup(this, 'MyClusterParameterGroup', {\n  family: 'family',\n  parameters: {\n    parametersKey: 'parameters',\n  },\n\n  // the properties below are optional\n  dbClusterParameterGroupName: 'dbClusterParameterGroupName',\n  description: 'description',\n});"
      },
      "fqn": "@aws-cdk/aws-docdb.ClusterParameterGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/parameter-group.ts",
          "line": 75
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.ClusterParameterGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-docdb.IClusterParameterGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/parameter-group.ts",
        "line": 69
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a parameter group."
          },
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 22
          },
          "name": "fromParameterGroupName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "parameterGroupName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-docdb.IClusterParameterGroup"
            }
          },
          "static": true
        }
      ],
      "name": "ClusterParameterGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 73
          },
          "name": "parameterGroupName",
          "overrides": "@aws-cdk/aws-docdb.IClusterParameterGroup",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/parameter-group:ClusterParameterGroup"
    },
    "@aws-cdk/aws-docdb.ClusterParameterGroupProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a cluster parameter group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nconst clusterParameterGroupProps: docdb.ClusterParameterGroupProps = {\n  family: 'family',\n  parameters: {\n    parametersKey: 'parameters',\n  },\n\n  // the properties below are optional\n  dbClusterParameterGroupName: 'dbClusterParameterGroupName',\n  description: 'description',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-docdb.ClusterParameterGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/parameter-group.ts",
        "line": 38
      },
      "name": "ClusterParameterGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Database family of this parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 49
          },
          "name": "family",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The parameters in this parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 61
          },
          "name": "parameters",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A CDK generated name for the cluster parameter group",
            "stability": "stable",
            "summary": "The name of the cluster parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 56
          },
          "name": "dbClusterParameterGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "a CDK generated description",
            "stability": "stable",
            "summary": "Description for this parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 44
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/parameter-group:ClusterParameterGroupProps"
    },
    "@aws-cdk/aws-docdb.DatabaseCluster": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "resource": "AWS::DocDB::DBCluster"
        },
        "example": "declare const vpc: ec2.Vpc;\nconst cluster = new docdb.DatabaseCluster(this, 'Database', {\n  masterUser: {\n    username: 'myuser', // NOTE: 'admin' is reserved by DocumentDB\n    excludeCharacters: '\\\"@/:', // optional, defaults to the set \"\\\"@/\" and is also used for eventually created rotations\n    secretName: '/myapp/mydocdb/masteruser', // optional, if you prefer to specify the secret name\n  },\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n  vpcSubnets: {\n    subnetType: ec2.SubnetType.PUBLIC,\n  },\n  vpc,\n});",
        "stability": "stable",
        "summary": "Create a clustered database with a given number of instances."
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseCluster",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cluster.ts",
          "line": 386
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.DatabaseClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-docdb.IDatabaseCluster"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 242
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing DatabaseCluster from properties."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 258
          },
          "name": "fromDatabaseClusterAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-docdb.DatabaseClusterAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-docdb.IDatabaseCluster"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds the multi user rotation to this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 578
          },
          "name": "addRotationMultiUser",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-docdb.RotationMultiUserOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretRotation"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds the single user rotation of the master password to this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 553
          },
          "name": "addRotationSingleUser",
          "parameters": [
            {
              "docs": {
                "summary": "Specifies the number of days after the previous rotation before Secrets Manager triggers the next automatic rotation."
              },
              "name": "automaticallyAfter",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretRotation"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds security groups to this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 598
          },
          "name": "addSecurityGroups",
          "parameters": [
            {
              "docs": {
                "summary": "The security groups to add."
              },
              "name": "securityGroups",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the secret attachment target specifications."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 229
          },
          "name": "asSecretAttachmentTarget",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretAttachmentTargetProps"
            }
          }
        }
      ],
      "name": "DatabaseCluster",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The default number of instances in the DocDB cluster if none are specified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 248
          },
          "name": "DEFAULT_NUM_INSTANCES",
          "static": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The default port Document DB listens on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 253
          },
          "name": "DEFAULT_PORT",
          "static": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The endpoint to use for read/write operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 332
          },
          "name": "clusterEndpoint",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseCluster",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Endpoint"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Identifier of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 327
          },
          "name": "clusterIdentifier",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseCluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Endpoint to use for load-balanced read-only operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 337
          },
          "name": "clusterReadEndpoint",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseCluster",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Endpoint"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "ClusterResourceId"
            },
            "remarks": "for example: cluster-ABCD1234EFGH5678IJKL90MNOP. The cluster ID uniquely\nidentifies the cluster and is used in things like IAM authentication policies.",
            "stability": "stable",
            "summary": "The resource id for the cluster;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 344
          },
          "name": "clusterResourceIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The connections object to implement IConnectable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 349
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Endpoints which address each individual replica."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 359
          },
          "name": "instanceEndpoints",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseCluster",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-docdb.Endpoint"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Identifiers of the replicas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 354
          },
          "name": "instanceIdentifiers",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseCluster",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Security group identifier of this database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 364
          },
          "name": "securityGroupId",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseCluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The secret attached to this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 369
          },
          "name": "secret",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ],
      "symbolId": "lib/cluster:DatabaseCluster"
    },
    "@aws-cdk/aws-docdb.DatabaseClusterAttributes": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties that describe an existing cluster instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const securityGroup: ec2.SecurityGroup;\nconst databaseClusterAttributes: docdb.DatabaseClusterAttributes = {\n  clusterIdentifier: 'clusterIdentifier',\n\n  // the properties below are optional\n  clusterEndpointAddress: 'clusterEndpointAddress',\n  instanceEndpointAddresses: ['instanceEndpointAddresses'],\n  instanceIdentifiers: ['instanceIdentifiers'],\n  port: 123,\n  readerEndpointAddress: 'readerEndpointAddress',\n  securityGroup: securityGroup,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseClusterAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster-ref.ts",
        "line": 46
      },
      "name": "DatabaseClusterAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Identifier for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 62
          },
          "name": "clusterIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no cluster endpoint address",
            "stability": "stable",
            "summary": "Cluster endpoint address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 75
          },
          "name": "clusterEndpointAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no instance endpoint addresses",
            "stability": "stable",
            "summary": "Endpoint addresses of individual instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 87
          },
          "name": "instanceEndpointAddresses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no instance identifiers",
            "stability": "stable",
            "summary": "Identifier for the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 68
          },
          "name": "instanceIdentifiers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "The database port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 51
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no reader endpoint address",
            "stability": "stable",
            "summary": "Reader endpoint address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 81
          },
          "name": "readerEndpointAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no security groups",
            "stability": "stable",
            "summary": "The security group of the database cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 57
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        }
      ],
      "symbolId": "lib/cluster-ref:DatabaseClusterAttributes"
    },
    "@aws-cdk/aws-docdb.DatabaseClusterProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\nconst cluster = new docdb.DatabaseCluster(this, 'Database', {\n  masterUser: {\n    username: 'myuser', // NOTE: 'admin' is reserved by DocumentDB\n    excludeCharacters: '\\\"@/:', // optional, defaults to the set \"\\\"@/\" and is also used for eventually created rotations\n    secretName: '/myapp/mydocdb/masteruser', // optional, if you prefer to specify the secret name\n  },\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n  vpcSubnets: {\n    subnetType: ec2.SubnetType.PUBLIC,\n  },\n  vpc,\n});",
        "stability": "stable",
        "summary": "Properties for a new database cluster."
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 18
      },
      "name": "DatabaseClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "What type of instance to start for the replicas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 89
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Username and password for the administrative user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 36
          },
          "name": "masterUser",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Login"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be at least 2 subnets in two different AZs.",
            "stability": "stable",
            "summary": "What subnets to run the DocumentDB instances in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 96
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Backup retention period for automated backups is 1 day.\nBackup preferred window is set to a 30-minute window selected at random from an\n8-hour block of time for each AWS Region, occurring on a random day of the week.",
            "see": "https://docs.aws.amazon.com/documentdb/latest/developerguide/backup-restore.db-cluster-snapshots.html#backup-restore.backup-window",
            "stability": "stable",
            "summary": "Backup settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 46
          },
          "name": "backup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-docdb.BackupProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- logs never expire",
            "remarks": "When updating\nthis property, unsetting it doesn't remove the log retention policy. To\nremove the retention policy, set the value to `Infinity`.",
            "stability": "stable",
            "summary": "The number of days log events are kept in CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 177
          },
          "name": "cloudWatchLogsRetention",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.RetentionDays"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new role is created.",
            "stability": "stable",
            "summary": "The IAM role for the Lambda function associated with the custom resource that sets the retention policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 185
          },
          "name": "cloudWatchLogsRetentionRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A name is automatically generated.",
            "stability": "stable",
            "summary": "An optional identifier for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 74
          },
          "name": "dbClusterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "remarks": "If deletionProtection is\nenabled, the cluster cannot be deleted unless it is modified and\ndeletionProtection is disabled. deletionProtection protects clusters from\nbeing accidentally deleted.",
            "stability": "stable",
            "summary": "Specifies whether this cluster can be deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 150
          },
          "name": "deletionProtection",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The default engine version.",
            "stability": "stable",
            "summary": "What version of the database to start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 24
          },
          "name": "engineVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Note that you also have to configure the audit log export in the Cluster's Parameter Group.",
            "see": "https://docs.aws.amazon.com/documentdb/latest/developerguide/event-auditing.html#event-auditing-enabling-auditing",
            "stability": "stable",
            "summary": "Whether the audit logs should be exported to CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 168
          },
          "name": "exportAuditLogsToCloudWatch",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Note that you also have to configure the profiler log export in the Cluster's Parameter Group.",
            "see": "https://docs.aws.amazon.com/documentdb/latest/developerguide/profiling.html#profiling.enable-profiling",
            "stability": "stable",
            "summary": "Whether the profiler logs should be exported to CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 159
          },
          "name": "exportProfilerLogsToCloudWatch",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- `dbClusterName` is used with the word \"Instance\" appended. If `dbClusterName` is not provided, the\nidentifier is automatically generated.",
            "remarks": "Every replica is named by appending the replica number to this string, 1-based.",
            "stability": "stable",
            "summary": "Base identifier for instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 84
          },
          "name": "instanceIdentifierBase",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "stable",
            "summary": "Number of DocDB compute instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 67
          },
          "name": "instances",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default master key.",
            "stability": "stable",
            "summary": "The KMS key for storage encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 53
          },
          "name": "kmsKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no parameter group",
            "stability": "stable",
            "summary": "The DB parameter group to associate with the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 117
          },
          "name": "parameterGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-docdb.IClusterParameterGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DatabaseCluster.DEFAULT_PORT",
            "stability": "stable",
            "summary": "The port the DocumentDB cluster will listen on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 31
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 30-minute window selected at random from an 8-hour block of time for\neach AWS Region, occurring on a random day of the week.",
            "remarks": "Must be at least 30 minutes long.\n\nExample: 'tue:04:17-tue:04:47'",
            "see": "https://docs.aws.amazon.com/documentdb/latest/developerguide/db-instance-maintain.html#maintenance-window",
            "stability": "stable",
            "summary": "A weekly time range in which maintenance should preferably execute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 130
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Retain cluster.",
            "remarks": "This\nremoval policy also applies to the implicit security group created for the\ncluster if one is not supplied as a parameter.",
            "stability": "stable",
            "summary": "The removal policy to apply when the cluster and its instances are removed or replaced during a stack update, or when the stack is deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 140
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "a new security group is created.",
            "stability": "stable",
            "summary": "Security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 110
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to enable storage encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 60
          },
          "name": "storageEncrypted",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "private subnets",
            "stability": "stable",
            "summary": "Where to place the instances within the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 103
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/cluster:DatabaseClusterProps"
    },
    "@aws-cdk/aws-docdb.DatabaseInstance": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::DocDB::DBInstance",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "stable",
        "summary": "A database instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const databaseCluster: docdb.DatabaseCluster;\ndeclare const instanceType: ec2.InstanceType;\nconst databaseInstance = new docdb.DatabaseInstance(this, 'MyDatabaseInstance', {\n  cluster: databaseCluster,\n  instanceType: instanceType,\n\n  // the properties below are optional\n  autoMinorVersionUpgrade: false,\n  availabilityZone: 'availabilityZone',\n  dbInstanceName: 'dbInstanceName',\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});"
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseInstance",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/instance.ts",
          "line": 201
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.DatabaseInstanceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-docdb.IDatabaseInstance"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 175
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing database instance."
          },
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 70
          },
          "name": "fromDatabaseInstanceAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-docdb.DatabaseInstanceAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-docdb.IDatabaseInstance"
            }
          },
          "static": true
        }
      ],
      "name": "DatabaseInstance",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance's database cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 179
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.IDatabaseCluster"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "The instance endpoint address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 189
          },
          "name": "dbInstanceEndpointAddress",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "The instance endpoint port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 194
          },
          "name": "dbInstanceEndpointPort",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance arn."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 102
          },
          "name": "instanceArn",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "The instance endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 199
          },
          "name": "instanceEndpoint",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseInstance",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Endpoint"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "stable",
            "summary": "The instance identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 184
          },
          "name": "instanceIdentifier",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseInstance",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/instance:DatabaseInstance"
    },
    "@aws-cdk/aws-docdb.DatabaseInstanceAttributes": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties that describe an existing instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nconst databaseInstanceAttributes: docdb.DatabaseInstanceAttributes = {\n  instanceEndpointAddress: 'instanceEndpointAddress',\n  instanceIdentifier: 'instanceIdentifier',\n  port: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseInstanceAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 46
      },
      "name": "DatabaseInstanceAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The endpoint address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 55
          },
          "name": "instanceEndpointAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The instance identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 50
          },
          "name": "instanceIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The database port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 60
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/instance:DatabaseInstanceAttributes"
    },
    "@aws-cdk/aws-docdb.DatabaseInstanceProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a DatabaseInstanceNew.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const databaseCluster: docdb.DatabaseCluster;\ndeclare const instanceType: ec2.InstanceType;\nconst databaseInstanceProps: docdb.DatabaseInstanceProps = {\n  cluster: databaseCluster,\n  instanceType: instanceType,\n\n  // the properties below are optional\n  autoMinorVersionUpgrade: false,\n  availabilityZone: 'availabilityZone',\n  dbInstanceName: 'dbInstanceName',\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseInstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 115
      },
      "name": "DatabaseInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The DocumentDB database cluster the instance should launch into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 119
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.IDatabaseCluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the compute and memory capacity classes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 124
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Indicates that minor engine upgrades are applied automatically to the DB instance during the maintenance window."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 147
          },
          "name": "autoMinorVersionUpgrade",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no preference",
            "stability": "stable",
            "summary": "The name of the Availability Zone where the DB instance will be located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 131
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a CloudFormation generated name",
            "remarks": "If you specify a name, AWS CloudFormation\nconverts it to lowercase.",
            "stability": "stable",
            "summary": "A name for the DB instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 139
          },
          "name": "dbInstanceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a 30-minute window selected at random from an 8-hour block of\ntime for each AWS Region, occurring on a random day of the week. To see\nthe time blocks available, see https://docs.aws.amazon.com/documentdb/latest/developerguide/db-instance-maintain.html#maintenance-window",
            "remarks": "Format: `ddd:hh24:mi-ddd:hh24:mi`\nConstraint: Minimum 30-minute window",
            "stability": "stable",
            "summary": "The weekly time range (in UTC) during which system maintenance can occur."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 159
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.Retain",
            "stability": "stable",
            "summary": "The CloudFormation policy to apply when the instance is removed from the stack or replaced during an update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 167
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        }
      ],
      "symbolId": "lib/instance:DatabaseInstanceProps"
    },
    "@aws-cdk/aws-docdb.DatabaseSecret": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/aws-secretsmanager.Secret",
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "resource": "AWS::SecretsManager::Secret"
        },
        "example": "declare const cluster: docdb.DatabaseCluster;\nconst myUserSecret = new docdb.DatabaseSecret(this, 'MyUserSecret', {\n  username: 'myuser',\n  masterSecret: cluster.secret,\n});\nconst myUserSecretAttached = myUserSecret.attach(cluster); // Adds DB connections information in the secret\n\ncluster.addRotationMultiUser('MyUser', { // Add rotation using the multi user scheme\n  secret: myUserSecretAttached, // This secret must have the `masterarn` key\n});",
        "stability": "stable",
        "summary": "A database secret."
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseSecret",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/database-secret.ts",
          "line": 58
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.DatabaseSecretProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/database-secret.ts",
        "line": 50
      },
      "name": "DatabaseSecret",
      "symbolId": "lib/database-secret:DatabaseSecret"
    },
    "@aws-cdk/aws-docdb.DatabaseSecretProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const cluster: docdb.DatabaseCluster;\nconst myUserSecret = new docdb.DatabaseSecret(this, 'MyUserSecret', {\n  username: 'myuser',\n  masterSecret: cluster.secret,\n});\nconst myUserSecretAttached = myUserSecret.attach(cluster); // Adds DB connections information in the secret\n\ncluster.addRotationMultiUser('MyUser', { // Add rotation using the multi user scheme\n  secret: myUserSecretAttached, // This secret must have the `masterarn` key\n});",
        "stability": "stable",
        "summary": "Construction properties for a DatabaseSecret."
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseSecretProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/database-secret.ts",
        "line": 9
      },
      "name": "DatabaseSecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-secret.ts",
            "line": 13
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "default master key",
            "stability": "stable",
            "summary": "The KMS key to use to encrypt the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-secret.ts",
            "line": 20
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "": "/\""
            },
            "default": "\"\\\"",
            "stability": "stable",
            "summary": "Characters to not include in the generated password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-secret.ts",
            "line": 41
          },
          "name": "excludeCharacters",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no master secret information will be included",
            "stability": "stable",
            "summary": "The master secret which will be used to rotate this secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-secret.ts",
            "line": 34
          },
          "name": "masterSecret",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Secretsmanager will generate a physical name for the secret",
            "stability": "stable",
            "summary": "The physical name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-secret.ts",
            "line": 27
          },
          "name": "secretName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/database-secret:DatabaseSecretProps"
    },
    "@aws-cdk/aws-docdb.Endpoint": {
      "assembly": "@aws-cdk/aws-docdb",
      "docs": {
        "remarks": "Consists of a combination of hostname and port.",
        "stability": "stable",
        "summary": "Connection endpoint of a database cluster or instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as docdb from '@aws-cdk/aws-docdb';\nconst endpoint = new docdb.Endpoint('address', 123);",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-docdb.Endpoint",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs an Endpoint instance."
        },
        "locationInModule": {
          "filename": "lib/endpoint.ts",
          "line": 53
        },
        "parameters": [
          {
            "docs": {
              "summary": "- The hostname or address of the endpoint."
            },
            "name": "address",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- The port number of the endpoint."
            },
            "name": "port",
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/endpoint.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "remarks": "This is intended to deal with CDK's token system. Numeric CDK tokens are not expanded when their string\nrepresentation is embedded in a string. This function returns the port either as an unresolved string token or\nas a resolved string representation of the port value.",
            "returns": "An (un)resolved string representation of the endpoint's port number",
            "stability": "stable",
            "summary": "Returns the port number as a string representation that can be used for embedding within other strings."
          },
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 74
          },
          "name": "portAsString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Endpoint",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The hostname of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 32
          },
          "name": "hostname",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "This can potentially be a CDK token. If you need to embed the port in a string (e.g. instance user data script),\nuse {@link Endpoint.portAsString}.",
            "stability": "stable",
            "summary": "The port number of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 40
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The combination of ``HOSTNAME:PORT`` for this endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 45
          },
          "name": "socketAddress",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/endpoint:Endpoint"
    },
    "@aws-cdk/aws-docdb.IClusterParameterGroup": {
      "assembly": "@aws-cdk/aws-docdb",
      "docs": {
        "stability": "stable",
        "summary": "A parameter group."
      },
      "fqn": "@aws-cdk/aws-docdb.IClusterParameterGroup",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/parameter-group.ts",
        "line": 8
      },
      "name": "IClusterParameterGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of this parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 12
          },
          "name": "parameterGroupName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/parameter-group:IClusterParameterGroup"
    },
    "@aws-cdk/aws-docdb.IDatabaseCluster": {
      "assembly": "@aws-cdk/aws-docdb",
      "docs": {
        "stability": "stable",
        "summary": "Create a clustered database with a given number of instances."
      },
      "fqn": "@aws-cdk/aws-docdb.IDatabaseCluster",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-ec2.IConnectable",
        "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster-ref.ts",
        "line": 9
      },
      "name": "IDatabaseCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "Endpoint,Port"
            },
            "stability": "stable",
            "summary": "The endpoint to use for read/write operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 24
          },
          "name": "clusterEndpoint",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Endpoint"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Identifier of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 13
          },
          "name": "clusterIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "ReadEndpoint"
            },
            "stability": "stable",
            "summary": "Endpoint to use for load-balanced read-only operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 30
          },
          "name": "clusterReadEndpoint",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Endpoint"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Endpoints which address each individual replica."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 35
          },
          "name": "instanceEndpoints",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-docdb.Endpoint"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Identifiers of the replicas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 18
          },
          "name": "instanceIdentifiers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The security group for this database cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 40
          },
          "name": "securityGroupId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cluster-ref:IDatabaseCluster"
    },
    "@aws-cdk/aws-docdb.IDatabaseInstance": {
      "assembly": "@aws-cdk/aws-docdb",
      "docs": {
        "stability": "stable",
        "summary": "A database instance."
      },
      "fqn": "@aws-cdk/aws-docdb.IDatabaseInstance",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 12
      },
      "name": "IDatabaseInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "Endpoint"
            },
            "stability": "stable",
            "summary": "The instance endpoint address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 28
          },
          "name": "dbInstanceEndpointAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "Port"
            },
            "stability": "stable",
            "summary": "The instance endpoint port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 35
          },
          "name": "dbInstanceEndpointPort",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The instance arn."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 21
          },
          "name": "instanceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The instance endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 40
          },
          "name": "instanceEndpoint",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Endpoint"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The instance identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 16
          },
          "name": "instanceIdentifier",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/instance:IDatabaseInstance"
    },
    "@aws-cdk/aws-docdb.Login": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\nconst cluster = new docdb.DatabaseCluster(this, 'Database', {\n  masterUser: {\n    username: 'myuser', // NOTE: 'admin' is reserved by DocumentDB\n    excludeCharacters: '\\\"@/:', // optional, defaults to the set \"\\\"@/\" and is also used for eventually created rotations\n    secretName: '/myapp/mydocdb/masteruser', // optional, if you prefer to specify the secret name\n  },\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n  vpcSubnets: {\n    subnetType: ec2.SubnetType.PUBLIC,\n  },\n  vpc,\n});",
        "stability": "stable",
        "summary": "Login credentials for a database cluster."
      },
      "fqn": "@aws-cdk/aws-docdb.Login",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/props.ts",
        "line": 37
      },
      "name": "Login",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 41
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "": "/\""
            },
            "default": "\"\\\"",
            "stability": "stable",
            "summary": "Specifies characters to not include in generated passwords."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 62
          },
          "name": "excludeCharacters",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "default master key",
            "stability": "stable",
            "summary": "KMS encryption key to encrypt the generated secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 55
          },
          "name": "kmsKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "a Secrets Manager generated password",
            "remarks": "Do not put passwords in your CDK code directly.",
            "stability": "stable",
            "summary": "Password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 49
          },
          "name": "password",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Secretsmanager will generate a physical name for the secret",
            "stability": "stable",
            "summary": "The physical name of the secret, that will be generated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 69
          },
          "name": "secretName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/props:Login"
    },
    "@aws-cdk/aws-docdb.RotationMultiUserOptions": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const myImportedSecret: secretsmanager.Secret;\ndeclare const cluster: docdb.DatabaseCluster;\n\ncluster.addRotationMultiUser('MyUser', {\n  secret: myImportedSecret, // This secret must have the `masterarn` key\n});",
        "stability": "stable",
        "summary": "Options to add the multi user rotation."
      },
      "fqn": "@aws-cdk/aws-docdb.RotationMultiUserOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/props.ts",
        "line": 75
      },
      "name": "RotationMultiUserOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "It must be a JSON string with the following format:\n```\n{\n   \"engine\": <required: must be set to 'mongo'>,\n   \"host\": <required: instance host name>,\n   \"username\": <required: username>,\n   \"password\": <required: password>,\n   \"dbname\": <optional: database name>,\n   \"port\": <optional: if not specified, default port 27017 will be used>,\n   \"masterarn\": <required: the arn of the master secret which will be used to create users/change passwords>\n   \"ssl\": <optional: if not specified, defaults to false. This must be true if being used for DocumentDB rotations\n          where the cluster has TLS enabled>\n}\n```",
            "stability": "stable",
            "summary": "The secret to rotate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 92
          },
          "name": "secret",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.days(30)",
            "stability": "stable",
            "summary": "Specifies the number of days after the previous rotation before Secrets Manager triggers the next automatic rotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 100
          },
          "name": "automaticallyAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/props:RotationMultiUserOptions"
    }
  },
  "version": "1.169.0",
  "fingerprint": "**********"
}