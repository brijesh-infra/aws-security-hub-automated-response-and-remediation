{
  "version": "2",
  "toolVersion": "1.63.2",
  "snippets": {
    "a80f1365e57582fb343ab80e8a2d4866efae398c3d579192cbcc88be926c4fdd": {
      "translations": {
        "python": {
          "source": "trail = cloudtrail.Trail(self, \"CloudTrail\")",
          "version": "2"
        },
        "csharp": {
          "source": "Trail trail = new Trail(this, \"CloudTrail\");",
          "version": "1"
        },
        "java": {
          "source": "Trail trail = new Trail(this, \"CloudTrail\");",
          "version": "1"
        },
        "go": {
          "source": "trail := cloudtrail.NewTrail(this, jsii.String(\"CloudTrail\"))",
          "version": "1"
        },
        "$": {
          "source": "const trail = new cloudtrail.Trail(this, 'CloudTrail');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudtrail"
        },
        "field": {
          "field": "markdown",
          "line": 24
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.Trail",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst trail = new cloudtrail.Trail(this, 'CloudTrail');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 3,
        "104": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "b8b32e4941b23729c407b85ab4967be3ed2a467a0cfc9184df05141d3275b758"
    },
    "7c2a2454c7873b65687a67d2c0751415bc12dbb7a4cb432073ebf858918d3f70": {
      "translations": {
        "python": {
          "source": "trail = cloudtrail.Trail(self, \"CloudTrail\",\n    enable_file_validation=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Trail trail = new Trail(this, \"CloudTrail\", new TrailProps {\n    EnableFileValidation = false\n});",
          "version": "1"
        },
        "java": {
          "source": "Trail trail = Trail.Builder.create(this, \"CloudTrail\")\n        .enableFileValidation(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "trail := cloudtrail.NewTrail(this, jsii.String(\"CloudTrail\"), &trailProps{\n\tenableFileValidation: jsii.Boolean(false),\n})",
          "version": "1"
        },
        "$": {
          "source": "const trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  enableFileValidation: false,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudtrail"
        },
        "field": {
          "field": "markdown",
          "line": 40
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.Trail",
        "@aws-cdk/aws-cloudtrail.TrailProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  enableFileValidation: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 4,
        "91": 1,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "abe2326e296ca4879e57b10175b8b4211493fd79d3fa36dbbcddecee2c973c41"
    },
    "91fe0b6e81ecfe6dc8ccf780e917f0b79e090e0999a7702c6eb68f447b819f37": {
      "translations": {
        "python": {
          "source": "topic = sns.Topic(self, \"TrailTopic\")\ntrail = cloudtrail.Trail(self, \"CloudTrail\",\n    sns_topic=topic\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Topic topic = new Topic(this, \"TrailTopic\");\nTrail trail = new Trail(this, \"CloudTrail\", new TrailProps {\n    SnsTopic = topic\n});",
          "version": "1"
        },
        "java": {
          "source": "Topic topic = new Topic(this, \"TrailTopic\");\nTrail trail = Trail.Builder.create(this, \"CloudTrail\")\n        .snsTopic(topic)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "topic := sns.NewTopic(this, jsii.String(\"TrailTopic\"))\ntrail := cloudtrail.NewTrail(this, jsii.String(\"CloudTrail\"), &trailProps{\n\tsnsTopic: topic,\n})",
          "version": "1"
        },
        "$": {
          "source": "const topic = new sns.Topic(this, 'TrailTopic');\nconst trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  snsTopic: topic,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudtrail"
        },
        "field": {
          "field": "markdown",
          "line": 53
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.Trail",
        "@aws-cdk/aws-cloudtrail.TrailProps",
        "@aws-cdk/aws-sns.ITopic",
        "@aws-cdk/aws-sns.Topic",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst topic = new sns.Topic(this, 'TrailTopic');\nconst trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  snsTopic: topic,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 8,
        "104": 2,
        "193": 1,
        "194": 2,
        "197": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 1
      },
      "fqnsFingerprint": "bc2c2d50fcff523c1999ecffab389acddaa547f4a8abe6185f2453e9fe3b1042"
    },
    "2ec6136aae40a99f7d86e4eaf9e84a90358a8a9b4d7cd7ca7cad249e62452649": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_logs as logs\n\n\ntrail = cloudtrail.Trail(self, \"CloudTrail\",\n    send_to_cloud_watch_logs=True,\n    cloud_watch_logs_retention=logs.RetentionDays.FOUR_MONTHS\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Logs;\n\n\nTrail trail = new Trail(this, \"CloudTrail\", new TrailProps {\n    SendToCloudWatchLogs = true,\n    CloudWatchLogsRetention = RetentionDays.FOUR_MONTHS\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.logs.*;\n\n\nTrail trail = Trail.Builder.create(this, \"CloudTrail\")\n        .sendToCloudWatchLogs(true)\n        .cloudWatchLogsRetention(RetentionDays.FOUR_MONTHS)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\n\ntrail := cloudtrail.NewTrail(this, jsii.String(\"CloudTrail\"), &trailProps{\n\tsendToCloudWatchLogs: jsii.Boolean(true),\n\tcloudWatchLogsRetention: logs.retentionDays_FOUR_MONTHS,\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as logs from '@aws-cdk/aws-logs';\n\nconst trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  sendToCloudWatchLogs: true,\n  cloudWatchLogsRetention: logs.RetentionDays.FOUR_MONTHS,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudtrail"
        },
        "field": {
          "field": "markdown",
          "line": 70
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.Trail",
        "@aws-cdk/aws-cloudtrail.TrailProps",
        "@aws-cdk/aws-logs.RetentionDays",
        "@aws-cdk/aws-logs.RetentionDays#FOUR_MONTHS",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  sendToCloudWatchLogs: true,\n  cloudWatchLogsRetention: logs.RetentionDays.FOUR_MONTHS,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "f0b187b6ef82a7c9467811b77b25348155be55b81aede04dba5db7180620c3b7"
    },
    "4f95cc669eb9aa6bf99827fb12272ce05ca98e34fbdd9e098540ef52bec0e529": {
      "translations": {
        "python": {
          "source": "my_function_handler = lambda_.Function(self, \"MyFunction\",\n    code=lambda_.Code.from_asset(\"resource/myfunction\"),\n    runtime=lambda_.Runtime.NODEJS_12_X,\n    handler=\"index.handler\"\n)\n\nevent_rule = cloudtrail.Trail.on_event(self, \"MyCloudWatchEvent\",\n    target=targets.LambdaFunction(my_function_handler)\n)\n\nevent_rule.add_event_pattern(\n    account=[\"123456789012\"],\n    source=[\"aws.s3\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Function myFunctionHandler = new Function(this, \"MyFunction\", new FunctionProps {\n    Code = Code.FromAsset(\"resource/myfunction\"),\n    Runtime = Runtime.NODEJS_12_X,\n    Handler = \"index.handler\"\n});\n\nRule eventRule = Trail.OnEvent(this, \"MyCloudWatchEvent\", new OnEventOptions {\n    Target = new LambdaFunction(myFunctionHandler)\n});\n\neventRule.AddEventPattern(new EventPattern {\n    Account = new [] { \"123456789012\" },\n    Source = new [] { \"aws.s3\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "Function myFunctionHandler = Function.Builder.create(this, \"MyFunction\")\n        .code(Code.fromAsset(\"resource/myfunction\"))\n        .runtime(Runtime.NODEJS_12_X)\n        .handler(\"index.handler\")\n        .build();\n\nRule eventRule = Trail.onEvent(this, \"MyCloudWatchEvent\", OnEventOptions.builder()\n        .target(new LambdaFunction(myFunctionHandler))\n        .build());\n\neventRule.addEventPattern(EventPattern.builder()\n        .account(List.of(\"123456789012\"))\n        .source(List.of(\"aws.s3\"))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "myFunctionHandler := lambda.NewFunction(this, jsii.String(\"MyFunction\"), &functionProps{\n\tcode: lambda.code.fromAsset(jsii.String(\"resource/myfunction\")),\n\truntime: lambda.runtime_NODEJS_12_X(),\n\thandler: jsii.String(\"index.handler\"),\n})\n\neventRule := cloudtrail.trail.onEvent(this, jsii.String(\"MyCloudWatchEvent\"), &onEventOptions{\n\ttarget: targets.NewLambdaFunction(myFunctionHandler),\n})\n\neventRule.addEventPattern(&eventPattern{\n\taccount: []*string{\n\t\tjsii.String(\"123456789012\"),\n\t},\n\tsource: []*string{\n\t\tjsii.String(\"aws.s3\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const myFunctionHandler = new lambda.Function(this, 'MyFunction', {\n  code: lambda.Code.fromAsset('resource/myfunction'),\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n});\n\nconst eventRule = cloudtrail.Trail.onEvent(this, 'MyCloudWatchEvent', {\n  target: new targets.LambdaFunction(myFunctionHandler),\n});\n\neventRule.addEventPattern({\n  account: ['123456789012'],\n  source: ['aws.s3'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudtrail"
        },
        "field": {
          "field": "markdown",
          "line": 91
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.Trail",
        "@aws-cdk/aws-cloudtrail.Trail#onEvent",
        "@aws-cdk/aws-events-targets.LambdaFunction",
        "@aws-cdk/aws-events.EventPattern",
        "@aws-cdk/aws-events.IRuleTarget",
        "@aws-cdk/aws-events.OnEventOptions",
        "@aws-cdk/aws-events.Rule",
        "@aws-cdk/aws-events.Rule#addEventPattern",
        "@aws-cdk/aws-lambda.Code",
        "@aws-cdk/aws-lambda.Code#fromAsset",
        "@aws-cdk/aws-lambda.Function",
        "@aws-cdk/aws-lambda.FunctionProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#NODEJS_12_X",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst myFunctionHandler = new lambda.Function(this, 'MyFunction', {\n  code: lambda.Code.fromAsset('resource/myfunction'),\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n});\n\nconst eventRule = cloudtrail.Trail.onEvent(this, 'MyCloudWatchEvent', {\n  target: new targets.LambdaFunction(myFunctionHandler),\n});\n\neventRule.addEventPattern({\n  account: ['123456789012'],\n  source: ['aws.s3'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 6,
        "75": 24,
        "104": 2,
        "192": 2,
        "193": 3,
        "194": 9,
        "196": 3,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 6
      },
      "fqnsFingerprint": "f0327b9e79bf264006fda76a3ede5299350accc94fd533fb688e9fef4b9bdb5c"
    },
    "9cd538fbf93561698e87b6410b6bccfba7fcb3065f0a4a41bbf27039893c4009": {
      "translations": {
        "python": {
          "source": "trail = cloudtrail.Trail(self, \"CloudTrail\",\n    # ...\n    is_multi_region_trail=False,\n    include_global_service_events=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Trail trail = new Trail(this, \"CloudTrail\", new TrailProps {\n    // ...\n    IsMultiRegionTrail = false,\n    IncludeGlobalServiceEvents = false\n});",
          "version": "1"
        },
        "java": {
          "source": "Trail trail = Trail.Builder.create(this, \"CloudTrail\")\n        // ...\n        .isMultiRegionTrail(false)\n        .includeGlobalServiceEvents(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "trail := cloudtrail.NewTrail(this, jsii.String(\"CloudTrail\"), &trailProps{\n\t// ...\n\tisMultiRegionTrail: jsii.Boolean(false),\n\tincludeGlobalServiceEvents: jsii.Boolean(false),\n})",
          "version": "1"
        },
        "$": {
          "source": "const trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  // ...\n  isMultiRegionTrail: false,\n  includeGlobalServiceEvents: false,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudtrail"
        },
        "field": {
          "field": "markdown",
          "line": 124
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.Trail",
        "@aws-cdk/aws-cloudtrail.TrailProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  // ...\n  isMultiRegionTrail: false,\n  includeGlobalServiceEvents: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "91": 2,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "abe2326e296ca4879e57b10175b8b4211493fd79d3fa36dbbcddecee2c973c41"
    },
    "ae95b0862cdb0592f453499c2a0f47ee775eb0c12172b0a9f1affc22d441ec60": {
      "translations": {
        "python": {
          "source": "trail = cloudtrail.Trail(self, \"CloudTrail\",\n    # ...\n    management_events=cloudtrail.ReadWriteType.READ_ONLY\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Trail trail = new Trail(this, \"CloudTrail\", new TrailProps {\n    // ...\n    ManagementEvents = ReadWriteType.READ_ONLY\n});",
          "version": "1"
        },
        "java": {
          "source": "Trail trail = Trail.Builder.create(this, \"CloudTrail\")\n        // ...\n        .managementEvents(ReadWriteType.READ_ONLY)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "trail := cloudtrail.NewTrail(this, jsii.String(\"CloudTrail\"), &trailProps{\n\t// ...\n\tmanagementEvents: cloudtrail.readWriteType_READ_ONLY,\n})",
          "version": "1"
        },
        "$": {
          "source": "const trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  // ...\n  managementEvents: cloudtrail.ReadWriteType.READ_ONLY,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudtrail"
        },
        "field": {
          "field": "markdown",
          "line": 143
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.ReadWriteType",
        "@aws-cdk/aws-cloudtrail.ReadWriteType#READ_ONLY",
        "@aws-cdk/aws-cloudtrail.Trail",
        "@aws-cdk/aws-cloudtrail.TrailProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  // ...\n  managementEvents: cloudtrail.ReadWriteType.READ_ONLY,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "1d38871d80edf1c1327a405f102489f18c2b1208f78fadabcaeba64b854bbe86"
    },
    "4148c319148b821e5c385823ba71e538c56ed81213c63ea749686b2cee9c0d99": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_s3 as s3\n# bucket: s3.Bucket\n\n\ntrail = cloudtrail.Trail(self, \"MyAmazingCloudTrail\")\n\n# Adds an event selector to the bucket foo\ntrail.add_s3_event_selector([\n    bucket=bucket,\n    object_prefix=\"bar/\"\n])",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.S3;\nBucket bucket;\n\n\nTrail trail = new Trail(this, \"MyAmazingCloudTrail\");\n\n// Adds an event selector to the bucket foo\ntrail.AddS3EventSelector(new [] { new S3EventSelector {\n    Bucket = bucket,\n    ObjectPrefix = \"bar/\"\n} });",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.s3.*;\nBucket bucket;\n\n\nTrail trail = new Trail(this, \"MyAmazingCloudTrail\");\n\n// Adds an event selector to the bucket foo\ntrail.addS3EventSelector(List.of(S3EventSelector.builder()\n        .bucket(bucket)\n        .objectPrefix(\"bar/\")\n        .build()));",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nvar bucket bucket\n\n\ntrail := cloudtrail.NewTrail(this, jsii.String(\"MyAmazingCloudTrail\"))\n\n// Adds an event selector to the bucket foo\ntrail.addS3EventSelector([]s3EventSelector{\n\t&s3EventSelector{\n\t\tbucket: bucket,\n\t\tobjectPrefix: jsii.String(\"bar/\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as s3 from '@aws-cdk/aws-s3';\n\nconst trail = new cloudtrail.Trail(this, 'MyAmazingCloudTrail');\ndeclare const bucket: s3.Bucket;\n\n// Adds an event selector to the bucket foo\ntrail.addS3EventSelector([{\n  bucket,\n  objectPrefix: 'bar/',\n}]);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudtrail"
        },
        "field": {
          "field": "markdown",
          "line": 161
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.Trail",
        "@aws-cdk/aws-cloudtrail.Trail#addS3EventSelector",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as s3 from '@aws-cdk/aws-s3';\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst trail = new cloudtrail.Trail(this, 'MyAmazingCloudTrail');\n\n// Adds an event selector to the bucket foo\ntrail.addS3EventSelector([{\n  bucket,\n  objectPrefix: 'bar/',\n}]);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 3,
        "75": 11,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "96ce0c8f4e6952f2249c07edc7b7ab6dc84f22a1bb2da02abd4c9fb8295f7c45"
    },
    "69fa99459a34cc2107850f0ae3e94a698dfad4f0ad1040155e5387725df93c09": {
      "translations": {
        "python": {
          "source": "trail = cloudtrail.Trail(self, \"MyAmazingCloudTrail\")\namazing_function = lambda_.Function(self, \"AnAmazingFunction\",\n    runtime=lambda_.Runtime.NODEJS_12_X,\n    handler=\"hello.handler\",\n    code=lambda_.Code.from_asset(\"lambda\")\n)\n\n# Add an event selector to log data events for the provided Lambda functions.\ntrail.add_lambda_event_selector([amazing_function])",
          "version": "2"
        },
        "csharp": {
          "source": "Trail trail = new Trail(this, \"MyAmazingCloudTrail\");\nFunction amazingFunction = new Function(this, \"AnAmazingFunction\", new FunctionProps {\n    Runtime = Runtime.NODEJS_12_X,\n    Handler = \"hello.handler\",\n    Code = Code.FromAsset(\"lambda\")\n});\n\n// Add an event selector to log data events for the provided Lambda functions.\ntrail.AddLambdaEventSelector(new [] { amazingFunction });",
          "version": "1"
        },
        "java": {
          "source": "Trail trail = new Trail(this, \"MyAmazingCloudTrail\");\nFunction amazingFunction = Function.Builder.create(this, \"AnAmazingFunction\")\n        .runtime(Runtime.NODEJS_12_X)\n        .handler(\"hello.handler\")\n        .code(Code.fromAsset(\"lambda\"))\n        .build();\n\n// Add an event selector to log data events for the provided Lambda functions.\ntrail.addLambdaEventSelector(List.of(amazingFunction));",
          "version": "1"
        },
        "go": {
          "source": "trail := cloudtrail.NewTrail(this, jsii.String(\"MyAmazingCloudTrail\"))\namazingFunction := lambda.NewFunction(this, jsii.String(\"AnAmazingFunction\"), &functionProps{\n\truntime: lambda.runtime_NODEJS_12_X(),\n\thandler: jsii.String(\"hello.handler\"),\n\tcode: lambda.code.fromAsset(jsii.String(\"lambda\")),\n})\n\n// Add an event selector to log data events for the provided Lambda functions.\ntrail.addLambdaEventSelector([]iFunction{\n\tamazingFunction,\n})",
          "version": "1"
        },
        "$": {
          "source": "const trail = new cloudtrail.Trail(this, 'MyAmazingCloudTrail');\nconst amazingFunction = new lambda.Function(this, 'AnAmazingFunction', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: \"hello.handler\",\n  code: lambda.Code.fromAsset(\"lambda\"),\n});\n\n// Add an event selector to log data events for the provided Lambda functions.\ntrail.addLambdaEventSelector([ amazingFunction ]);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudtrail"
        },
        "field": {
          "field": "markdown",
          "line": 178
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.Trail",
        "@aws-cdk/aws-cloudtrail.Trail#addLambdaEventSelector",
        "@aws-cdk/aws-lambda.Code",
        "@aws-cdk/aws-lambda.Code#fromAsset",
        "@aws-cdk/aws-lambda.Function",
        "@aws-cdk/aws-lambda.FunctionProps",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#NODEJS_12_X",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst trail = new cloudtrail.Trail(this, 'MyAmazingCloudTrail');\nconst amazingFunction = new lambda.Function(this, 'AnAmazingFunction', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: \"hello.handler\",\n  code: lambda.Code.fromAsset(\"lambda\"),\n});\n\n// Add an event selector to log data events for the provided Lambda functions.\ntrail.addLambdaEventSelector([ amazingFunction ]);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 4,
        "75": 18,
        "104": 2,
        "192": 1,
        "193": 1,
        "194": 7,
        "196": 2,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 3
      },
      "fqnsFingerprint": "5d7638e8f109548afd0dd9669fdcb2c4a1387a58b270ab2f36f7202e3c574d00"
    },
    "960bd8b2415d364f8e3737d8f92f0a0c1b136dbcf119bab45db9029fdd6f7bfe": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_cloudtrail as cloudtrail\n\n# source_bucket: s3.Bucket\n\nsource_output = codepipeline.Artifact()\nkey = \"some/key.zip\"\ntrail = cloudtrail.Trail(self, \"CloudTrail\")\ntrail.add_s3_event_selector([cloudtrail.S3EventSelector(\n    bucket=source_bucket,\n    object_prefix=key\n)],\n    read_write_type=cloudtrail.ReadWriteType.WRITE_ONLY\n)\nsource_action = codepipeline_actions.S3SourceAction(\n    action_name=\"S3Source\",\n    bucket_key=key,\n    bucket=source_bucket,\n    output=source_output,\n    trigger=codepipeline_actions.S3Trigger.EVENTS\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.CloudTrail;\n\nBucket sourceBucket;\n\nArtifact sourceOutput = new Artifact();\nstring key = \"some/key.zip\";\nTrail trail = new Trail(this, \"CloudTrail\");\ntrail.AddS3EventSelector(new [] { new S3EventSelector {\n    Bucket = sourceBucket,\n    ObjectPrefix = key\n} }, new AddEventSelectorOptions {\n    ReadWriteType = ReadWriteType.WRITE_ONLY\n});\nS3SourceAction sourceAction = new S3SourceAction(new S3SourceActionProps {\n    ActionName = \"S3Source\",\n    BucketKey = key,\n    Bucket = sourceBucket,\n    Output = sourceOutput,\n    Trigger = S3Trigger.EVENTS\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.cloudtrail.*;\n\nBucket sourceBucket;\n\nArtifact sourceOutput = new Artifact();\nString key = \"some/key.zip\";\nTrail trail = new Trail(this, \"CloudTrail\");\ntrail.addS3EventSelector(List.of(S3EventSelector.builder()\n        .bucket(sourceBucket)\n        .objectPrefix(key)\n        .build()), AddEventSelectorOptions.builder()\n        .readWriteType(ReadWriteType.WRITE_ONLY)\n        .build());\nS3SourceAction sourceAction = S3SourceAction.Builder.create()\n        .actionName(\"S3Source\")\n        .bucketKey(key)\n        .bucket(sourceBucket)\n        .output(sourceOutput)\n        .trigger(S3Trigger.EVENTS)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloudtrail \"github.com/aws-samples/dummy/awscdkawscloudtrail\"\n\nvar sourceBucket bucket\n\nsourceOutput := codepipeline.NewArtifact()\nkey := \"some/key.zip\"\ntrail := cloudtrail.NewTrail(this, jsii.String(\"CloudTrail\"))\ntrail.addS3EventSelector([]s3EventSelector{\n\t&s3EventSelector{\n\t\tbucket: sourceBucket,\n\t\tobjectPrefix: key,\n\t},\n}, &addEventSelectorOptions{\n\treadWriteType: cloudtrail.readWriteType_WRITE_ONLY,\n})\nsourceAction := codepipeline_actions.NewS3SourceAction(&s3SourceActionProps{\n\tactionName: jsii.String(\"S3Source\"),\n\tbucketKey: key,\n\tbucket: sourceBucket,\n\toutput: sourceOutput,\n\ttrigger: codepipeline_actions.s3Trigger_EVENTS,\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n\ndeclare const sourceBucket: s3.Bucket;\nconst sourceOutput = new codepipeline.Artifact();\nconst key = 'some/key.zip';\nconst trail = new cloudtrail.Trail(this, 'CloudTrail');\ntrail.addS3EventSelector([{\n  bucket: sourceBucket,\n  objectPrefix: key,\n}], {\n  readWriteType: cloudtrail.ReadWriteType.WRITE_ONLY,\n});\nconst sourceAction = new codepipeline_actions.S3SourceAction({\n  actionName: 'S3Source',\n  bucketKey: key,\n  bucket: sourceBucket,\n  output: sourceOutput,\n  trigger: codepipeline_actions.S3Trigger.EVENTS, // default: S3Trigger.POLL\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.AddEventSelectorOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.AddEventSelectorOptions",
        "@aws-cdk/aws-cloudtrail.ReadWriteType",
        "@aws-cdk/aws-cloudtrail.ReadWriteType#WRITE_ONLY",
        "@aws-cdk/aws-cloudtrail.Trail",
        "@aws-cdk/aws-cloudtrail.Trail#addS3EventSelector",
        "@aws-cdk/aws-codepipeline-actions.S3SourceAction",
        "@aws-cdk/aws-codepipeline-actions.S3SourceActionProps",
        "@aws-cdk/aws-codepipeline-actions.S3Trigger",
        "@aws-cdk/aws-codepipeline-actions.S3Trigger#EVENTS",
        "@aws-cdk/aws-codepipeline.Artifact",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n\ndeclare const sourceBucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Arn, Construct, Duration, SecretValue, Stack } from '@aws-cdk/core';\nimport codebuild = require('@aws-cdk/aws-codebuild');\nimport codedeploy = require('@aws-cdk/aws-codedeploy');\nimport codepipeline = require('@aws-cdk/aws-codepipeline');\nimport codepipeline_actions = require('@aws-cdk/aws-codepipeline-actions');\nimport codecommit = require('@aws-cdk/aws-codecommit');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3 = require('@aws-cdk/aws-s3');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst sourceOutput = new codepipeline.Artifact();\nconst key = 'some/key.zip';\nconst trail = new cloudtrail.Trail(this, 'CloudTrail');\ntrail.addS3EventSelector([{\n  bucket: sourceBucket,\n  objectPrefix: key,\n}], {\n  readWriteType: cloudtrail.ReadWriteType.WRITE_ONLY,\n});\nconst sourceAction = new codepipeline_actions.S3SourceAction({\n  actionName: 'S3Source',\n  bucketKey: key,\n  bucket: sourceBucket,\n  output: sourceOutput,\n  trigger: codepipeline_actions.S3Trigger.EVENTS, // default: S3Trigger.POLL\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 35,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "194": 8,
        "196": 1,
        "197": 3,
        "225": 5,
        "226": 1,
        "242": 5,
        "243": 5,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "6cf56cb6ee7ffe352c58842b0983db1e5199dcc662a376079683912fb3e34824"
    },
    "60994fdec35fcaa3d7aca55ff868340336daf6d531ef07b1fb8b2f9de7294b4c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cloudtrail as cloudtrail\n\ncfn_event_data_store = cloudtrail.CfnEventDataStore(self, \"MyCfnEventDataStore\",\n    advanced_event_selectors=[cloudtrail.CfnEventDataStore.AdvancedEventSelectorProperty(\n        field_selectors=[cloudtrail.CfnEventDataStore.AdvancedFieldSelectorProperty(\n            field=\"field\",\n\n            # the properties below are optional\n            ends_with=[\"endsWith\"],\n            equal_to=[\"equalTo\"],\n            not_ends_with=[\"notEndsWith\"],\n            not_equals=[\"notEquals\"],\n            not_starts_with=[\"notStartsWith\"],\n            starts_with=[\"startsWith\"]\n        )],\n\n        # the properties below are optional\n        name=\"name\"\n    )],\n    multi_region_enabled=False,\n    name=\"name\",\n    organization_enabled=False,\n    retention_period=123,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    termination_protection_enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CloudTrail;\n\nCfnEventDataStore cfnEventDataStore = new CfnEventDataStore(this, \"MyCfnEventDataStore\", new CfnEventDataStoreProps {\n    AdvancedEventSelectors = new [] { new AdvancedEventSelectorProperty {\n        FieldSelectors = new [] { new AdvancedFieldSelectorProperty {\n            Field = \"field\",\n\n            // the properties below are optional\n            EndsWith = new [] { \"endsWith\" },\n            EqualTo = new [] { \"equalTo\" },\n            NotEndsWith = new [] { \"notEndsWith\" },\n            NotEquals = new [] { \"notEquals\" },\n            NotStartsWith = new [] { \"notStartsWith\" },\n            StartsWith = new [] { \"startsWith\" }\n        } },\n\n        // the properties below are optional\n        Name = \"name\"\n    } },\n    MultiRegionEnabled = false,\n    Name = \"name\",\n    OrganizationEnabled = false,\n    RetentionPeriod = 123,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TerminationProtectionEnabled = false\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cloudtrail.*;\n\nCfnEventDataStore cfnEventDataStore = CfnEventDataStore.Builder.create(this, \"MyCfnEventDataStore\")\n        .advancedEventSelectors(List.of(AdvancedEventSelectorProperty.builder()\n                .fieldSelectors(List.of(AdvancedFieldSelectorProperty.builder()\n                        .field(\"field\")\n\n                        // the properties below are optional\n                        .endsWith(List.of(\"endsWith\"))\n                        .equalTo(List.of(\"equalTo\"))\n                        .notEndsWith(List.of(\"notEndsWith\"))\n                        .notEquals(List.of(\"notEquals\"))\n                        .notStartsWith(List.of(\"notStartsWith\"))\n                        .startsWith(List.of(\"startsWith\"))\n                        .build()))\n\n                // the properties below are optional\n                .name(\"name\")\n                .build()))\n        .multiRegionEnabled(false)\n        .name(\"name\")\n        .organizationEnabled(false)\n        .retentionPeriod(123)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .terminationProtectionEnabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cloudtrail \"github.com/aws-samples/dummy/awscdkawscloudtrail\"\n\ncfnEventDataStore := cloudtrail.NewCfnEventDataStore(this, jsii.String(\"MyCfnEventDataStore\"), &cfnEventDataStoreProps{\n\tadvancedEventSelectors: []interface{}{\n\t\t&advancedEventSelectorProperty{\n\t\t\tfieldSelectors: []interface{}{\n\t\t\t\t&advancedFieldSelectorProperty{\n\t\t\t\t\tfield: jsii.String(\"field\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tendsWith: []*string{\n\t\t\t\t\t\tjsii.String(\"endsWith\"),\n\t\t\t\t\t},\n\t\t\t\t\tequalTo: []*string{\n\t\t\t\t\t\tjsii.String(\"equalTo\"),\n\t\t\t\t\t},\n\t\t\t\t\tnotEndsWith: []*string{\n\t\t\t\t\t\tjsii.String(\"notEndsWith\"),\n\t\t\t\t\t},\n\t\t\t\t\tnotEquals: []*string{\n\t\t\t\t\t\tjsii.String(\"notEquals\"),\n\t\t\t\t\t},\n\t\t\t\t\tnotStartsWith: []*string{\n\t\t\t\t\t\tjsii.String(\"notStartsWith\"),\n\t\t\t\t\t},\n\t\t\t\t\tstartsWith: []*string{\n\t\t\t\t\t\tjsii.String(\"startsWith\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t},\n\tmultiRegionEnabled: jsii.Boolean(false),\n\tname: jsii.String(\"name\"),\n\torganizationEnabled: jsii.Boolean(false),\n\tretentionPeriod: jsii.Number(123),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tterminationProtectionEnabled: jsii.Boolean(false),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nconst cfnEventDataStore = new cloudtrail.CfnEventDataStore(this, 'MyCfnEventDataStore', /* all optional props */ {\n  advancedEventSelectors: [{\n    fieldSelectors: [{\n      field: 'field',\n\n      // the properties below are optional\n      endsWith: ['endsWith'],\n      equalTo: ['equalTo'],\n      notEndsWith: ['notEndsWith'],\n      notEquals: ['notEquals'],\n      notStartsWith: ['notStartsWith'],\n      startsWith: ['startsWith'],\n    }],\n\n    // the properties below are optional\n    name: 'name',\n  }],\n  multiRegionEnabled: false,\n  name: 'name',\n  organizationEnabled: false,\n  retentionPeriod: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  terminationProtectionEnabled: false,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.CfnEventDataStore"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.CfnEventDataStore",
        "@aws-cdk/aws-cloudtrail.CfnEventDataStoreProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnEventDataStore = new cloudtrail.CfnEventDataStore(this, 'MyCfnEventDataStore', /* all optional props */ {\n  advancedEventSelectors: [{\n    fieldSelectors: [{\n      field: 'field',\n\n      // the properties below are optional\n      endsWith: ['endsWith'],\n      equalTo: ['equalTo'],\n      notEndsWith: ['notEndsWith'],\n      notEquals: ['notEquals'],\n      notStartsWith: ['notStartsWith'],\n      startsWith: ['startsWith'],\n    }],\n\n    // the properties below are optional\n    name: 'name',\n  }],\n  multiRegionEnabled: false,\n  name: 'name',\n  organizationEnabled: false,\n  retentionPeriod: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  terminationProtectionEnabled: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 13,
        "75": 22,
        "91": 3,
        "104": 1,
        "192": 9,
        "193": 4,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 18,
        "290": 1
      },
      "fqnsFingerprint": "60bd998d13635d4ff14ef01d776db8a4628e2966219779357eef212f47a817dc"
    },
    "fbab7d9901a7e762874ac7e851f0d9468a27e11ffb28f3e41ec1b4ec1a726841": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cloudtrail as cloudtrail\n\nadvanced_event_selector_property = cloudtrail.CfnEventDataStore.AdvancedEventSelectorProperty(\n    field_selectors=[cloudtrail.CfnEventDataStore.AdvancedFieldSelectorProperty(\n        field=\"field\",\n\n        # the properties below are optional\n        ends_with=[\"endsWith\"],\n        equal_to=[\"equalTo\"],\n        not_ends_with=[\"notEndsWith\"],\n        not_equals=[\"notEquals\"],\n        not_starts_with=[\"notStartsWith\"],\n        starts_with=[\"startsWith\"]\n    )],\n\n    # the properties below are optional\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CloudTrail;\n\nAdvancedEventSelectorProperty advancedEventSelectorProperty = new AdvancedEventSelectorProperty {\n    FieldSelectors = new [] { new AdvancedFieldSelectorProperty {\n        Field = \"field\",\n\n        // the properties below are optional\n        EndsWith = new [] { \"endsWith\" },\n        EqualTo = new [] { \"equalTo\" },\n        NotEndsWith = new [] { \"notEndsWith\" },\n        NotEquals = new [] { \"notEquals\" },\n        NotStartsWith = new [] { \"notStartsWith\" },\n        StartsWith = new [] { \"startsWith\" }\n    } },\n\n    // the properties below are optional\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cloudtrail.*;\n\nAdvancedEventSelectorProperty advancedEventSelectorProperty = AdvancedEventSelectorProperty.builder()\n        .fieldSelectors(List.of(AdvancedFieldSelectorProperty.builder()\n                .field(\"field\")\n\n                // the properties below are optional\n                .endsWith(List.of(\"endsWith\"))\n                .equalTo(List.of(\"equalTo\"))\n                .notEndsWith(List.of(\"notEndsWith\"))\n                .notEquals(List.of(\"notEquals\"))\n                .notStartsWith(List.of(\"notStartsWith\"))\n                .startsWith(List.of(\"startsWith\"))\n                .build()))\n\n        // the properties below are optional\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cloudtrail \"github.com/aws-samples/dummy/awscdkawscloudtrail\"\n\nadvancedEventSelectorProperty := &advancedEventSelectorProperty{\n\tfieldSelectors: []interface{}{\n\t\t&advancedFieldSelectorProperty{\n\t\t\tfield: jsii.String(\"field\"),\n\n\t\t\t// the properties below are optional\n\t\t\tendsWith: []*string{\n\t\t\t\tjsii.String(\"endsWith\"),\n\t\t\t},\n\t\t\tequalTo: []*string{\n\t\t\t\tjsii.String(\"equalTo\"),\n\t\t\t},\n\t\t\tnotEndsWith: []*string{\n\t\t\t\tjsii.String(\"notEndsWith\"),\n\t\t\t},\n\t\t\tnotEquals: []*string{\n\t\t\t\tjsii.String(\"notEquals\"),\n\t\t\t},\n\t\t\tnotStartsWith: []*string{\n\t\t\t\tjsii.String(\"notStartsWith\"),\n\t\t\t},\n\t\t\tstartsWith: []*string{\n\t\t\t\tjsii.String(\"startsWith\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nconst advancedEventSelectorProperty: cloudtrail.CfnEventDataStore.AdvancedEventSelectorProperty = {\n  fieldSelectors: [{\n    field: 'field',\n\n    // the properties below are optional\n    endsWith: ['endsWith'],\n    equalTo: ['equalTo'],\n    notEndsWith: ['notEndsWith'],\n    notEquals: ['notEquals'],\n    notStartsWith: ['notStartsWith'],\n    startsWith: ['startsWith'],\n  }],\n\n  // the properties below are optional\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.CfnEventDataStore.AdvancedEventSelectorProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.CfnEventDataStore.AdvancedEventSelectorProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst advancedEventSelectorProperty: cloudtrail.CfnEventDataStore.AdvancedEventSelectorProperty = {\n  fieldSelectors: [{\n    field: 'field',\n\n    // the properties below are optional\n    endsWith: ['endsWith'],\n    equalTo: ['equalTo'],\n    notEndsWith: ['notEndsWith'],\n    notEquals: ['notEquals'],\n    notStartsWith: ['notStartsWith'],\n    startsWith: ['startsWith'],\n  }],\n\n  // the properties below are optional\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 14,
        "153": 2,
        "169": 1,
        "192": 7,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "001c02e74672691631141088413e1cd1d27fe5430c8ce8aaa79c627c3f9ba98e"
    },
    "cd48189e774c53e9ba34c03fa3f541167ebc9afb0d3dfeda0ecc33d054fc565d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cloudtrail as cloudtrail\n\nadvanced_field_selector_property = cloudtrail.CfnEventDataStore.AdvancedFieldSelectorProperty(\n    field=\"field\",\n\n    # the properties below are optional\n    ends_with=[\"endsWith\"],\n    equal_to=[\"equalTo\"],\n    not_ends_with=[\"notEndsWith\"],\n    not_equals=[\"notEquals\"],\n    not_starts_with=[\"notStartsWith\"],\n    starts_with=[\"startsWith\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CloudTrail;\n\nAdvancedFieldSelectorProperty advancedFieldSelectorProperty = new AdvancedFieldSelectorProperty {\n    Field = \"field\",\n\n    // the properties below are optional\n    EndsWith = new [] { \"endsWith\" },\n    EqualTo = new [] { \"equalTo\" },\n    NotEndsWith = new [] { \"notEndsWith\" },\n    NotEquals = new [] { \"notEquals\" },\n    NotStartsWith = new [] { \"notStartsWith\" },\n    StartsWith = new [] { \"startsWith\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cloudtrail.*;\n\nAdvancedFieldSelectorProperty advancedFieldSelectorProperty = AdvancedFieldSelectorProperty.builder()\n        .field(\"field\")\n\n        // the properties below are optional\n        .endsWith(List.of(\"endsWith\"))\n        .equalTo(List.of(\"equalTo\"))\n        .notEndsWith(List.of(\"notEndsWith\"))\n        .notEquals(List.of(\"notEquals\"))\n        .notStartsWith(List.of(\"notStartsWith\"))\n        .startsWith(List.of(\"startsWith\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cloudtrail \"github.com/aws-samples/dummy/awscdkawscloudtrail\"\n\nadvancedFieldSelectorProperty := &advancedFieldSelectorProperty{\n\tfield: jsii.String(\"field\"),\n\n\t// the properties below are optional\n\tendsWith: []*string{\n\t\tjsii.String(\"endsWith\"),\n\t},\n\tequalTo: []*string{\n\t\tjsii.String(\"equalTo\"),\n\t},\n\tnotEndsWith: []*string{\n\t\tjsii.String(\"notEndsWith\"),\n\t},\n\tnotEquals: []*string{\n\t\tjsii.String(\"notEquals\"),\n\t},\n\tnotStartsWith: []*string{\n\t\tjsii.String(\"notStartsWith\"),\n\t},\n\tstartsWith: []*string{\n\t\tjsii.String(\"startsWith\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nconst advancedFieldSelectorProperty: cloudtrail.CfnEventDataStore.AdvancedFieldSelectorProperty = {\n  field: 'field',\n\n  // the properties below are optional\n  endsWith: ['endsWith'],\n  equalTo: ['equalTo'],\n  notEndsWith: ['notEndsWith'],\n  notEquals: ['notEquals'],\n  notStartsWith: ['notStartsWith'],\n  startsWith: ['startsWith'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.CfnEventDataStore.AdvancedFieldSelectorProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.CfnEventDataStore.AdvancedFieldSelectorProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst advancedFieldSelectorProperty: cloudtrail.CfnEventDataStore.AdvancedFieldSelectorProperty = {\n  field: 'field',\n\n  // the properties below are optional\n  endsWith: ['endsWith'],\n  equalTo: ['equalTo'],\n  notEndsWith: ['notEndsWith'],\n  notEquals: ['notEquals'],\n  notStartsWith: ['notStartsWith'],\n  startsWith: ['startsWith'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 12,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "3a8ac573b7d4e0a7f96d634c1c88f10564f22b3f6ea55c971451f81401e65bef"
    },
    "0e35f472aba80b37c4f191da9d38de7c03c546f408be96a6fec5148dada3d17b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cloudtrail as cloudtrail\n\ncfn_event_data_store_props = cloudtrail.CfnEventDataStoreProps(\n    advanced_event_selectors=[cloudtrail.CfnEventDataStore.AdvancedEventSelectorProperty(\n        field_selectors=[cloudtrail.CfnEventDataStore.AdvancedFieldSelectorProperty(\n            field=\"field\",\n\n            # the properties below are optional\n            ends_with=[\"endsWith\"],\n            equal_to=[\"equalTo\"],\n            not_ends_with=[\"notEndsWith\"],\n            not_equals=[\"notEquals\"],\n            not_starts_with=[\"notStartsWith\"],\n            starts_with=[\"startsWith\"]\n        )],\n\n        # the properties below are optional\n        name=\"name\"\n    )],\n    multi_region_enabled=False,\n    name=\"name\",\n    organization_enabled=False,\n    retention_period=123,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    termination_protection_enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CloudTrail;\n\nCfnEventDataStoreProps cfnEventDataStoreProps = new CfnEventDataStoreProps {\n    AdvancedEventSelectors = new [] { new AdvancedEventSelectorProperty {\n        FieldSelectors = new [] { new AdvancedFieldSelectorProperty {\n            Field = \"field\",\n\n            // the properties below are optional\n            EndsWith = new [] { \"endsWith\" },\n            EqualTo = new [] { \"equalTo\" },\n            NotEndsWith = new [] { \"notEndsWith\" },\n            NotEquals = new [] { \"notEquals\" },\n            NotStartsWith = new [] { \"notStartsWith\" },\n            StartsWith = new [] { \"startsWith\" }\n        } },\n\n        // the properties below are optional\n        Name = \"name\"\n    } },\n    MultiRegionEnabled = false,\n    Name = \"name\",\n    OrganizationEnabled = false,\n    RetentionPeriod = 123,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TerminationProtectionEnabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cloudtrail.*;\n\nCfnEventDataStoreProps cfnEventDataStoreProps = CfnEventDataStoreProps.builder()\n        .advancedEventSelectors(List.of(AdvancedEventSelectorProperty.builder()\n                .fieldSelectors(List.of(AdvancedFieldSelectorProperty.builder()\n                        .field(\"field\")\n\n                        // the properties below are optional\n                        .endsWith(List.of(\"endsWith\"))\n                        .equalTo(List.of(\"equalTo\"))\n                        .notEndsWith(List.of(\"notEndsWith\"))\n                        .notEquals(List.of(\"notEquals\"))\n                        .notStartsWith(List.of(\"notStartsWith\"))\n                        .startsWith(List.of(\"startsWith\"))\n                        .build()))\n\n                // the properties below are optional\n                .name(\"name\")\n                .build()))\n        .multiRegionEnabled(false)\n        .name(\"name\")\n        .organizationEnabled(false)\n        .retentionPeriod(123)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .terminationProtectionEnabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cloudtrail \"github.com/aws-samples/dummy/awscdkawscloudtrail\"\n\ncfnEventDataStoreProps := &cfnEventDataStoreProps{\n\tadvancedEventSelectors: []interface{}{\n\t\t&advancedEventSelectorProperty{\n\t\t\tfieldSelectors: []interface{}{\n\t\t\t\t&advancedFieldSelectorProperty{\n\t\t\t\t\tfield: jsii.String(\"field\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tendsWith: []*string{\n\t\t\t\t\t\tjsii.String(\"endsWith\"),\n\t\t\t\t\t},\n\t\t\t\t\tequalTo: []*string{\n\t\t\t\t\t\tjsii.String(\"equalTo\"),\n\t\t\t\t\t},\n\t\t\t\t\tnotEndsWith: []*string{\n\t\t\t\t\t\tjsii.String(\"notEndsWith\"),\n\t\t\t\t\t},\n\t\t\t\t\tnotEquals: []*string{\n\t\t\t\t\t\tjsii.String(\"notEquals\"),\n\t\t\t\t\t},\n\t\t\t\t\tnotStartsWith: []*string{\n\t\t\t\t\t\tjsii.String(\"notStartsWith\"),\n\t\t\t\t\t},\n\t\t\t\t\tstartsWith: []*string{\n\t\t\t\t\t\tjsii.String(\"startsWith\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t},\n\tmultiRegionEnabled: jsii.Boolean(false),\n\tname: jsii.String(\"name\"),\n\torganizationEnabled: jsii.Boolean(false),\n\tretentionPeriod: jsii.Number(123),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tterminationProtectionEnabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nconst cfnEventDataStoreProps: cloudtrail.CfnEventDataStoreProps = {\n  advancedEventSelectors: [{\n    fieldSelectors: [{\n      field: 'field',\n\n      // the properties below are optional\n      endsWith: ['endsWith'],\n      equalTo: ['equalTo'],\n      notEndsWith: ['notEndsWith'],\n      notEquals: ['notEquals'],\n      notStartsWith: ['notStartsWith'],\n      startsWith: ['startsWith'],\n    }],\n\n    // the properties below are optional\n    name: 'name',\n  }],\n  multiRegionEnabled: false,\n  name: 'name',\n  organizationEnabled: false,\n  retentionPeriod: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  terminationProtectionEnabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.CfnEventDataStoreProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.CfnEventDataStoreProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnEventDataStoreProps: cloudtrail.CfnEventDataStoreProps = {\n  advancedEventSelectors: [{\n    fieldSelectors: [{\n      field: 'field',\n\n      // the properties below are optional\n      endsWith: ['endsWith'],\n      equalTo: ['equalTo'],\n      notEndsWith: ['notEndsWith'],\n      notEquals: ['notEquals'],\n      notStartsWith: ['notStartsWith'],\n      startsWith: ['startsWith'],\n    }],\n\n    // the properties below are optional\n    name: 'name',\n  }],\n  multiRegionEnabled: false,\n  name: 'name',\n  organizationEnabled: false,\n  retentionPeriod: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  terminationProtectionEnabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 12,
        "75": 22,
        "91": 3,
        "153": 1,
        "169": 1,
        "192": 9,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 18,
        "290": 1
      },
      "fqnsFingerprint": "a3796daf88fd97c21e4cf6768bac6f09738bbf93fe78ba3f890fd8a4270cb549"
    },
    "a55dc69590c31d0eb73378dea65217ae4f8e939a99527cd28b5428f3d919de1e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cloudtrail as cloudtrail\n\ncfn_trail = cloudtrail.CfnTrail(self, \"MyCfnTrail\",\n    is_logging=False,\n    s3_bucket_name=\"s3BucketName\",\n\n    # the properties below are optional\n    cloud_watch_logs_log_group_arn=\"cloudWatchLogsLogGroupArn\",\n    cloud_watch_logs_role_arn=\"cloudWatchLogsRoleArn\",\n    enable_log_file_validation=False,\n    event_selectors=[cloudtrail.CfnTrail.EventSelectorProperty(\n        data_resources=[cloudtrail.CfnTrail.DataResourceProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            values=[\"values\"]\n        )],\n        exclude_management_event_sources=[\"excludeManagementEventSources\"],\n        include_management_events=False,\n        read_write_type=\"readWriteType\"\n    )],\n    include_global_service_events=False,\n    insight_selectors=[cloudtrail.CfnTrail.InsightSelectorProperty(\n        insight_type=\"insightType\"\n    )],\n    is_multi_region_trail=False,\n    is_organization_trail=False,\n    kms_key_id=\"kmsKeyId\",\n    s3_key_prefix=\"s3KeyPrefix\",\n    sns_topic_name=\"snsTopicName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    trail_name=\"trailName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CloudTrail;\n\nCfnTrail cfnTrail = new CfnTrail(this, \"MyCfnTrail\", new CfnTrailProps {\n    IsLogging = false,\n    S3BucketName = \"s3BucketName\",\n\n    // the properties below are optional\n    CloudWatchLogsLogGroupArn = \"cloudWatchLogsLogGroupArn\",\n    CloudWatchLogsRoleArn = \"cloudWatchLogsRoleArn\",\n    EnableLogFileValidation = false,\n    EventSelectors = new [] { new EventSelectorProperty {\n        DataResources = new [] { new DataResourceProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            Values = new [] { \"values\" }\n        } },\n        ExcludeManagementEventSources = new [] { \"excludeManagementEventSources\" },\n        IncludeManagementEvents = false,\n        ReadWriteType = \"readWriteType\"\n    } },\n    IncludeGlobalServiceEvents = false,\n    InsightSelectors = new [] { new InsightSelectorProperty {\n        InsightType = \"insightType\"\n    } },\n    IsMultiRegionTrail = false,\n    IsOrganizationTrail = false,\n    KmsKeyId = \"kmsKeyId\",\n    S3KeyPrefix = \"s3KeyPrefix\",\n    SnsTopicName = \"snsTopicName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TrailName = \"trailName\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cloudtrail.*;\n\nCfnTrail cfnTrail = CfnTrail.Builder.create(this, \"MyCfnTrail\")\n        .isLogging(false)\n        .s3BucketName(\"s3BucketName\")\n\n        // the properties below are optional\n        .cloudWatchLogsLogGroupArn(\"cloudWatchLogsLogGroupArn\")\n        .cloudWatchLogsRoleArn(\"cloudWatchLogsRoleArn\")\n        .enableLogFileValidation(false)\n        .eventSelectors(List.of(EventSelectorProperty.builder()\n                .dataResources(List.of(DataResourceProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .values(List.of(\"values\"))\n                        .build()))\n                .excludeManagementEventSources(List.of(\"excludeManagementEventSources\"))\n                .includeManagementEvents(false)\n                .readWriteType(\"readWriteType\")\n                .build()))\n        .includeGlobalServiceEvents(false)\n        .insightSelectors(List.of(InsightSelectorProperty.builder()\n                .insightType(\"insightType\")\n                .build()))\n        .isMultiRegionTrail(false)\n        .isOrganizationTrail(false)\n        .kmsKeyId(\"kmsKeyId\")\n        .s3KeyPrefix(\"s3KeyPrefix\")\n        .snsTopicName(\"snsTopicName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .trailName(\"trailName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cloudtrail \"github.com/aws-samples/dummy/awscdkawscloudtrail\"\n\ncfnTrail := cloudtrail.NewCfnTrail(this, jsii.String(\"MyCfnTrail\"), &cfnTrailProps{\n\tisLogging: jsii.Boolean(false),\n\ts3BucketName: jsii.String(\"s3BucketName\"),\n\n\t// the properties below are optional\n\tcloudWatchLogsLogGroupArn: jsii.String(\"cloudWatchLogsLogGroupArn\"),\n\tcloudWatchLogsRoleArn: jsii.String(\"cloudWatchLogsRoleArn\"),\n\tenableLogFileValidation: jsii.Boolean(false),\n\teventSelectors: []interface{}{\n\t\t&eventSelectorProperty{\n\t\t\tdataResources: []interface{}{\n\t\t\t\t&dataResourceProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tvalues: []*string{\n\t\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\texcludeManagementEventSources: []*string{\n\t\t\t\tjsii.String(\"excludeManagementEventSources\"),\n\t\t\t},\n\t\t\tincludeManagementEvents: jsii.Boolean(false),\n\t\t\treadWriteType: jsii.String(\"readWriteType\"),\n\t\t},\n\t},\n\tincludeGlobalServiceEvents: jsii.Boolean(false),\n\tinsightSelectors: []interface{}{\n\t\t&insightSelectorProperty{\n\t\t\tinsightType: jsii.String(\"insightType\"),\n\t\t},\n\t},\n\tisMultiRegionTrail: jsii.Boolean(false),\n\tisOrganizationTrail: jsii.Boolean(false),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\ts3KeyPrefix: jsii.String(\"s3KeyPrefix\"),\n\tsnsTopicName: jsii.String(\"snsTopicName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttrailName: jsii.String(\"trailName\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nconst cfnTrail = new cloudtrail.CfnTrail(this, 'MyCfnTrail', {\n  isLogging: false,\n  s3BucketName: 's3BucketName',\n\n  // the properties below are optional\n  cloudWatchLogsLogGroupArn: 'cloudWatchLogsLogGroupArn',\n  cloudWatchLogsRoleArn: 'cloudWatchLogsRoleArn',\n  enableLogFileValidation: false,\n  eventSelectors: [{\n    dataResources: [{\n      type: 'type',\n\n      // the properties below are optional\n      values: ['values'],\n    }],\n    excludeManagementEventSources: ['excludeManagementEventSources'],\n    includeManagementEvents: false,\n    readWriteType: 'readWriteType',\n  }],\n  includeGlobalServiceEvents: false,\n  insightSelectors: [{\n    insightType: 'insightType',\n  }],\n  isMultiRegionTrail: false,\n  isOrganizationTrail: false,\n  kmsKeyId: 'kmsKeyId',\n  s3KeyPrefix: 's3KeyPrefix',\n  snsTopicName: 'snsTopicName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  trailName: 'trailName',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.CfnTrail"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.CfnTrail",
        "@aws-cdk/aws-cloudtrail.CfnTrailProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTrail = new cloudtrail.CfnTrail(this, 'MyCfnTrail', {\n  isLogging: false,\n  s3BucketName: 's3BucketName',\n\n  // the properties below are optional\n  cloudWatchLogsLogGroupArn: 'cloudWatchLogsLogGroupArn',\n  cloudWatchLogsRoleArn: 'cloudWatchLogsRoleArn',\n  enableLogFileValidation: false,\n  eventSelectors: [{\n    dataResources: [{\n      type: 'type',\n\n      // the properties below are optional\n      values: ['values'],\n    }],\n    excludeManagementEventSources: ['excludeManagementEventSources'],\n    includeManagementEvents: false,\n    readWriteType: 'readWriteType',\n  }],\n  includeGlobalServiceEvents: false,\n  insightSelectors: [{\n    insightType: 'insightType',\n  }],\n  isMultiRegionTrail: false,\n  isOrganizationTrail: false,\n  kmsKeyId: 'kmsKeyId',\n  s3KeyPrefix: 's3KeyPrefix',\n  snsTopicName: 'snsTopicName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  trailName: 'trailName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 16,
        "75": 28,
        "91": 6,
        "104": 1,
        "192": 6,
        "193": 5,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 24,
        "290": 1
      },
      "fqnsFingerprint": "93b316cd4d9b670f43dd5a71fc6c37b23de5a22353bede1c81774eb16c5934e9"
    },
    "0a95f233a3f19bdda40ff674c643518e7ddd9d1cfa502ea063c2557c890cdd04": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cloudtrail as cloudtrail\n\ndata_resource_property = cloudtrail.CfnTrail.DataResourceProperty(\n    type=\"type\",\n\n    # the properties below are optional\n    values=[\"values\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CloudTrail;\n\nDataResourceProperty dataResourceProperty = new DataResourceProperty {\n    Type = \"type\",\n\n    // the properties below are optional\n    Values = new [] { \"values\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cloudtrail.*;\n\nDataResourceProperty dataResourceProperty = DataResourceProperty.builder()\n        .type(\"type\")\n\n        // the properties below are optional\n        .values(List.of(\"values\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cloudtrail \"github.com/aws-samples/dummy/awscdkawscloudtrail\"\n\ndataResourceProperty := &dataResourceProperty{\n\ttype: jsii.String(\"type\"),\n\n\t// the properties below are optional\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nconst dataResourceProperty: cloudtrail.CfnTrail.DataResourceProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  values: ['values'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.CfnTrail.DataResourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.CfnTrail.DataResourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataResourceProperty: cloudtrail.CfnTrail.DataResourceProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  values: ['values'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "523ecc08713a50a508baf60ec0683a47f696f85b5d00c2794c980e40c0bab91a"
    },
    "51f30a9f596617bc0df7556f7da9c20d2b529e3cd8f9f56f99c792cf81876636": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cloudtrail as cloudtrail\n\nevent_selector_property = cloudtrail.CfnTrail.EventSelectorProperty(\n    data_resources=[cloudtrail.CfnTrail.DataResourceProperty(\n        type=\"type\",\n\n        # the properties below are optional\n        values=[\"values\"]\n    )],\n    exclude_management_event_sources=[\"excludeManagementEventSources\"],\n    include_management_events=False,\n    read_write_type=\"readWriteType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CloudTrail;\n\nEventSelectorProperty eventSelectorProperty = new EventSelectorProperty {\n    DataResources = new [] { new DataResourceProperty {\n        Type = \"type\",\n\n        // the properties below are optional\n        Values = new [] { \"values\" }\n    } },\n    ExcludeManagementEventSources = new [] { \"excludeManagementEventSources\" },\n    IncludeManagementEvents = false,\n    ReadWriteType = \"readWriteType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cloudtrail.*;\n\nEventSelectorProperty eventSelectorProperty = EventSelectorProperty.builder()\n        .dataResources(List.of(DataResourceProperty.builder()\n                .type(\"type\")\n\n                // the properties below are optional\n                .values(List.of(\"values\"))\n                .build()))\n        .excludeManagementEventSources(List.of(\"excludeManagementEventSources\"))\n        .includeManagementEvents(false)\n        .readWriteType(\"readWriteType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cloudtrail \"github.com/aws-samples/dummy/awscdkawscloudtrail\"\n\neventSelectorProperty := &eventSelectorProperty{\n\tdataResources: []interface{}{\n\t\t&dataResourceProperty{\n\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t// the properties below are optional\n\t\t\tvalues: []*string{\n\t\t\t\tjsii.String(\"values\"),\n\t\t\t},\n\t\t},\n\t},\n\texcludeManagementEventSources: []*string{\n\t\tjsii.String(\"excludeManagementEventSources\"),\n\t},\n\tincludeManagementEvents: jsii.Boolean(false),\n\treadWriteType: jsii.String(\"readWriteType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nconst eventSelectorProperty: cloudtrail.CfnTrail.EventSelectorProperty = {\n  dataResources: [{\n    type: 'type',\n\n    // the properties below are optional\n    values: ['values'],\n  }],\n  excludeManagementEventSources: ['excludeManagementEventSources'],\n  includeManagementEvents: false,\n  readWriteType: 'readWriteType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.CfnTrail.EventSelectorProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.CfnTrail.EventSelectorProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst eventSelectorProperty: cloudtrail.CfnTrail.EventSelectorProperty = {\n  dataResources: [{\n    type: 'type',\n\n    // the properties below are optional\n    values: ['values'],\n  }],\n  excludeManagementEventSources: ['excludeManagementEventSources'],\n  includeManagementEvents: false,\n  readWriteType: 'readWriteType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 11,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 3,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "d33545218b8afb2f21ab0227ad289898e4b23ab302000edef459a0cb864563a2"
    },
    "1ef8ebf0d7671fecb0c44feed4b1a95e2741399e63b7ef884c0a5e95d106b718": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cloudtrail as cloudtrail\n\ninsight_selector_property = cloudtrail.CfnTrail.InsightSelectorProperty(\n    insight_type=\"insightType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CloudTrail;\n\nInsightSelectorProperty insightSelectorProperty = new InsightSelectorProperty {\n    InsightType = \"insightType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cloudtrail.*;\n\nInsightSelectorProperty insightSelectorProperty = InsightSelectorProperty.builder()\n        .insightType(\"insightType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cloudtrail \"github.com/aws-samples/dummy/awscdkawscloudtrail\"\n\ninsightSelectorProperty := &insightSelectorProperty{\n\tinsightType: jsii.String(\"insightType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nconst insightSelectorProperty: cloudtrail.CfnTrail.InsightSelectorProperty = {\n  insightType: 'insightType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.CfnTrail.InsightSelectorProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.CfnTrail.InsightSelectorProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst insightSelectorProperty: cloudtrail.CfnTrail.InsightSelectorProperty = {\n  insightType: 'insightType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "48da3d85b5679d8b1ebd83110f061426e8ff869da8f31a553b6e05b76d84b645"
    },
    "7121b52ba3eb40636cf159c7aa6c16d74056ec9693c85bae1603ea0ce51bb4ba": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cloudtrail as cloudtrail\n\ncfn_trail_props = cloudtrail.CfnTrailProps(\n    is_logging=False,\n    s3_bucket_name=\"s3BucketName\",\n\n    # the properties below are optional\n    cloud_watch_logs_log_group_arn=\"cloudWatchLogsLogGroupArn\",\n    cloud_watch_logs_role_arn=\"cloudWatchLogsRoleArn\",\n    enable_log_file_validation=False,\n    event_selectors=[cloudtrail.CfnTrail.EventSelectorProperty(\n        data_resources=[cloudtrail.CfnTrail.DataResourceProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            values=[\"values\"]\n        )],\n        exclude_management_event_sources=[\"excludeManagementEventSources\"],\n        include_management_events=False,\n        read_write_type=\"readWriteType\"\n    )],\n    include_global_service_events=False,\n    insight_selectors=[cloudtrail.CfnTrail.InsightSelectorProperty(\n        insight_type=\"insightType\"\n    )],\n    is_multi_region_trail=False,\n    is_organization_trail=False,\n    kms_key_id=\"kmsKeyId\",\n    s3_key_prefix=\"s3KeyPrefix\",\n    sns_topic_name=\"snsTopicName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    trail_name=\"trailName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CloudTrail;\n\nCfnTrailProps cfnTrailProps = new CfnTrailProps {\n    IsLogging = false,\n    S3BucketName = \"s3BucketName\",\n\n    // the properties below are optional\n    CloudWatchLogsLogGroupArn = \"cloudWatchLogsLogGroupArn\",\n    CloudWatchLogsRoleArn = \"cloudWatchLogsRoleArn\",\n    EnableLogFileValidation = false,\n    EventSelectors = new [] { new EventSelectorProperty {\n        DataResources = new [] { new DataResourceProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            Values = new [] { \"values\" }\n        } },\n        ExcludeManagementEventSources = new [] { \"excludeManagementEventSources\" },\n        IncludeManagementEvents = false,\n        ReadWriteType = \"readWriteType\"\n    } },\n    IncludeGlobalServiceEvents = false,\n    InsightSelectors = new [] { new InsightSelectorProperty {\n        InsightType = \"insightType\"\n    } },\n    IsMultiRegionTrail = false,\n    IsOrganizationTrail = false,\n    KmsKeyId = \"kmsKeyId\",\n    S3KeyPrefix = \"s3KeyPrefix\",\n    SnsTopicName = \"snsTopicName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TrailName = \"trailName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cloudtrail.*;\n\nCfnTrailProps cfnTrailProps = CfnTrailProps.builder()\n        .isLogging(false)\n        .s3BucketName(\"s3BucketName\")\n\n        // the properties below are optional\n        .cloudWatchLogsLogGroupArn(\"cloudWatchLogsLogGroupArn\")\n        .cloudWatchLogsRoleArn(\"cloudWatchLogsRoleArn\")\n        .enableLogFileValidation(false)\n        .eventSelectors(List.of(EventSelectorProperty.builder()\n                .dataResources(List.of(DataResourceProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .values(List.of(\"values\"))\n                        .build()))\n                .excludeManagementEventSources(List.of(\"excludeManagementEventSources\"))\n                .includeManagementEvents(false)\n                .readWriteType(\"readWriteType\")\n                .build()))\n        .includeGlobalServiceEvents(false)\n        .insightSelectors(List.of(InsightSelectorProperty.builder()\n                .insightType(\"insightType\")\n                .build()))\n        .isMultiRegionTrail(false)\n        .isOrganizationTrail(false)\n        .kmsKeyId(\"kmsKeyId\")\n        .s3KeyPrefix(\"s3KeyPrefix\")\n        .snsTopicName(\"snsTopicName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .trailName(\"trailName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cloudtrail \"github.com/aws-samples/dummy/awscdkawscloudtrail\"\n\ncfnTrailProps := &cfnTrailProps{\n\tisLogging: jsii.Boolean(false),\n\ts3BucketName: jsii.String(\"s3BucketName\"),\n\n\t// the properties below are optional\n\tcloudWatchLogsLogGroupArn: jsii.String(\"cloudWatchLogsLogGroupArn\"),\n\tcloudWatchLogsRoleArn: jsii.String(\"cloudWatchLogsRoleArn\"),\n\tenableLogFileValidation: jsii.Boolean(false),\n\teventSelectors: []interface{}{\n\t\t&eventSelectorProperty{\n\t\t\tdataResources: []interface{}{\n\t\t\t\t&dataResourceProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tvalues: []*string{\n\t\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\texcludeManagementEventSources: []*string{\n\t\t\t\tjsii.String(\"excludeManagementEventSources\"),\n\t\t\t},\n\t\t\tincludeManagementEvents: jsii.Boolean(false),\n\t\t\treadWriteType: jsii.String(\"readWriteType\"),\n\t\t},\n\t},\n\tincludeGlobalServiceEvents: jsii.Boolean(false),\n\tinsightSelectors: []interface{}{\n\t\t&insightSelectorProperty{\n\t\t\tinsightType: jsii.String(\"insightType\"),\n\t\t},\n\t},\n\tisMultiRegionTrail: jsii.Boolean(false),\n\tisOrganizationTrail: jsii.Boolean(false),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\ts3KeyPrefix: jsii.String(\"s3KeyPrefix\"),\n\tsnsTopicName: jsii.String(\"snsTopicName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttrailName: jsii.String(\"trailName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nconst cfnTrailProps: cloudtrail.CfnTrailProps = {\n  isLogging: false,\n  s3BucketName: 's3BucketName',\n\n  // the properties below are optional\n  cloudWatchLogsLogGroupArn: 'cloudWatchLogsLogGroupArn',\n  cloudWatchLogsRoleArn: 'cloudWatchLogsRoleArn',\n  enableLogFileValidation: false,\n  eventSelectors: [{\n    dataResources: [{\n      type: 'type',\n\n      // the properties below are optional\n      values: ['values'],\n    }],\n    excludeManagementEventSources: ['excludeManagementEventSources'],\n    includeManagementEvents: false,\n    readWriteType: 'readWriteType',\n  }],\n  includeGlobalServiceEvents: false,\n  insightSelectors: [{\n    insightType: 'insightType',\n  }],\n  isMultiRegionTrail: false,\n  isOrganizationTrail: false,\n  kmsKeyId: 'kmsKeyId',\n  s3KeyPrefix: 's3KeyPrefix',\n  snsTopicName: 'snsTopicName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  trailName: 'trailName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.CfnTrailProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.CfnTrailProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTrailProps: cloudtrail.CfnTrailProps = {\n  isLogging: false,\n  s3BucketName: 's3BucketName',\n\n  // the properties below are optional\n  cloudWatchLogsLogGroupArn: 'cloudWatchLogsLogGroupArn',\n  cloudWatchLogsRoleArn: 'cloudWatchLogsRoleArn',\n  enableLogFileValidation: false,\n  eventSelectors: [{\n    dataResources: [{\n      type: 'type',\n\n      // the properties below are optional\n      values: ['values'],\n    }],\n    excludeManagementEventSources: ['excludeManagementEventSources'],\n    includeManagementEvents: false,\n    readWriteType: 'readWriteType',\n  }],\n  includeGlobalServiceEvents: false,\n  insightSelectors: [{\n    insightType: 'insightType',\n  }],\n  isMultiRegionTrail: false,\n  isOrganizationTrail: false,\n  kmsKeyId: 'kmsKeyId',\n  s3KeyPrefix: 's3KeyPrefix',\n  snsTopicName: 'snsTopicName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  trailName: 'trailName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 15,
        "75": 28,
        "91": 6,
        "153": 1,
        "169": 1,
        "192": 6,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 24,
        "290": 1
      },
      "fqnsFingerprint": "1ac1668348d0e177de0b0141bad69aa6a6cb3538dc37aa3e1a6fdef586930a0c"
    },
    "f82cf00ce7dfb9fb5de90f6377f1e5926e50e6253751b886ca8afb19b2a81ea6": {
      "translations": {
        "python": {
          "source": "trail = cloudtrail.Trail(self, \"CloudTrail\",\n    # ...\n    management_events=cloudtrail.ReadWriteType.READ_ONLY\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Trail trail = new Trail(this, \"CloudTrail\", new TrailProps {\n    // ...\n    ManagementEvents = ReadWriteType.READ_ONLY\n});",
          "version": "1"
        },
        "java": {
          "source": "Trail trail = Trail.Builder.create(this, \"CloudTrail\")\n        // ...\n        .managementEvents(ReadWriteType.READ_ONLY)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "trail := cloudtrail.NewTrail(this, jsii.String(\"CloudTrail\"), &trailProps{\n\t// ...\n\tmanagementEvents: cloudtrail.readWriteType_READ_ONLY,\n})",
          "version": "1"
        },
        "$": {
          "source": "const trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  // ...\n  managementEvents: cloudtrail.ReadWriteType.READ_ONLY,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.ReadWriteType"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.ReadWriteType",
        "@aws-cdk/aws-cloudtrail.ReadWriteType#READ_ONLY",
        "@aws-cdk/aws-cloudtrail.Trail",
        "@aws-cdk/aws-cloudtrail.TrailProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  // ...\n  managementEvents: cloudtrail.ReadWriteType.READ_ONLY,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "1d38871d80edf1c1327a405f102489f18c2b1208f78fadabcaeba64b854bbe86"
    },
    "744a1780aa44f202ca93446721eb3e144d101ff45f359be95e80f210277d537f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cloudtrail as cloudtrail\nimport aws_cdk.aws_s3 as s3\n\n# bucket: s3.Bucket\n\ns3_event_selector = cloudtrail.S3EventSelector(\n    bucket=bucket,\n\n    # the properties below are optional\n    object_prefix=\"objectPrefix\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CloudTrail;\nusing Amazon.CDK.AWS.S3;\n\nBucket bucket;\n\nS3EventSelector s3EventSelector = new S3EventSelector {\n    Bucket = bucket,\n\n    // the properties below are optional\n    ObjectPrefix = \"objectPrefix\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cloudtrail.*;\nimport software.amazon.awscdk.services.s3.*;\n\nBucket bucket;\n\nS3EventSelector s3EventSelector = S3EventSelector.builder()\n        .bucket(bucket)\n\n        // the properties below are optional\n        .objectPrefix(\"objectPrefix\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cloudtrail \"github.com/aws-samples/dummy/awscdkawscloudtrail\"\nimport s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar bucket bucket\n\ns3EventSelector := &s3EventSelector{\n\tbucket: bucket,\n\n\t// the properties below are optional\n\tobjectPrefix: jsii.String(\"objectPrefix\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\nconst s3EventSelector: cloudtrail.S3EventSelector = {\n  bucket: bucket,\n\n  // the properties below are optional\n  objectPrefix: 'objectPrefix',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.S3EventSelector"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.S3EventSelector",
        "@aws-cdk/aws-s3.IBucket"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3EventSelector: cloudtrail.S3EventSelector = {\n  bucket: bucket,\n\n  // the properties below are optional\n  objectPrefix: 'objectPrefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 11,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "ba29f2362d0def916d3bf5a2f481106e81a84f3c31bb65f3b031bb80ae6884cb"
    },
    "fc3c685d31bf1a592a5ff1105479a257da016bb35cdcc76142d5fbccfa516315": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_cloudtrail as cloudtrail\n\n\nmy_key_alias = kms.Alias.from_alias_name(self, \"myKey\", \"alias/aws/s3\")\ntrail = cloudtrail.Trail(self, \"myCloudTrail\",\n    send_to_cloud_watch_logs=True,\n    kms_key=my_key_alias\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.CloudTrail;\n\n\nIAlias myKeyAlias = Alias.FromAliasName(this, \"myKey\", \"alias/aws/s3\");\nTrail trail = new Trail(this, \"myCloudTrail\", new TrailProps {\n    SendToCloudWatchLogs = true,\n    KmsKey = myKeyAlias\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.cloudtrail.*;\n\n\nIAlias myKeyAlias = Alias.fromAliasName(this, \"myKey\", \"alias/aws/s3\");\nTrail trail = Trail.Builder.create(this, \"myCloudTrail\")\n        .sendToCloudWatchLogs(true)\n        .kmsKey(myKeyAlias)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloudtrail \"github.com/aws-samples/dummy/awscdkawscloudtrail\"\n\n\nmyKeyAlias := kms.alias.fromAliasName(this, jsii.String(\"myKey\"), jsii.String(\"alias/aws/s3\"))\ntrail := cloudtrail.NewTrail(this, jsii.String(\"myCloudTrail\"), &trailProps{\n\tsendToCloudWatchLogs: jsii.Boolean(true),\n\tkmsKey: myKeyAlias,\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n\nconst myKeyAlias = kms.Alias.fromAliasName(this, 'myKey', 'alias/aws/s3');\nconst trail = new cloudtrail.Trail(this, 'myCloudTrail', {\n  sendToCloudWatchLogs: true,\n  kmsKey: myKeyAlias,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.Trail"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.Trail",
        "@aws-cdk/aws-cloudtrail.TrailProps",
        "@aws-cdk/aws-kms.Alias",
        "@aws-cdk/aws-kms.Alias#fromAliasName",
        "@aws-cdk/aws-kms.IAlias",
        "@aws-cdk/aws-kms.IKey",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst myKeyAlias = kms.Alias.fromAliasName(this, 'myKey', 'alias/aws/s3');\nconst trail = new cloudtrail.Trail(this, 'myCloudTrail', {\n  sendToCloudWatchLogs: true,\n  kmsKey: myKeyAlias,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 11,
        "104": 2,
        "106": 1,
        "193": 1,
        "194": 3,
        "196": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "0c637c610d8ccb80e1f3a0d69646135080553889dfca624252cc612a911dc4d9"
    },
    "1a06039896e7baf61516d2ab66ccc093d080d98bc33a5c4a2eaf0b95d830252f": {
      "translations": {
        "python": {
          "source": "trail = cloudtrail.Trail(self, \"CloudTrail\",\n    # ...\n    management_events=cloudtrail.ReadWriteType.READ_ONLY\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Trail trail = new Trail(this, \"CloudTrail\", new TrailProps {\n    // ...\n    ManagementEvents = ReadWriteType.READ_ONLY\n});",
          "version": "1"
        },
        "java": {
          "source": "Trail trail = Trail.Builder.create(this, \"CloudTrail\")\n        // ...\n        .managementEvents(ReadWriteType.READ_ONLY)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "trail := cloudtrail.NewTrail(this, jsii.String(\"CloudTrail\"), &trailProps{\n\t// ...\n\tmanagementEvents: cloudtrail.readWriteType_READ_ONLY,\n})",
          "version": "1"
        },
        "$": {
          "source": "const trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  // ...\n  managementEvents: cloudtrail.ReadWriteType.READ_ONLY,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudtrail.TrailProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudtrail.ReadWriteType",
        "@aws-cdk/aws-cloudtrail.ReadWriteType#READ_ONLY",
        "@aws-cdk/aws-cloudtrail.Trail",
        "@aws-cdk/aws-cloudtrail.TrailProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst trail = new cloudtrail.Trail(this, 'CloudTrail', {\n  // ...\n  managementEvents: cloudtrail.ReadWriteType.READ_ONLY,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 1,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "1d38871d80edf1c1327a405f102489f18c2b1208f78fadabcaeba64b854bbe86"
    }
  }
}