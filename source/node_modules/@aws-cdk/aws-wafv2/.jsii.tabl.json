{
  "version": "2",
  "toolVersion": "1.63.2",
  "snippets": {
    "7d0c3b8dca8f40aa6396116f95f1f6c693224ad0a75bb58da536bc21a34b0b8c": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_wafv2 as wafv2",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.WAFv2;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.wafv2.*;",
          "version": "1"
        },
        "go": {
          "source": "import wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"",
          "version": "1"
        },
        "$": {
          "source": "import * as wafv2 from '@aws-cdk/aws-wafv2';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-wafv2"
        },
        "field": {
          "field": "markdown",
          "line": 18
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as wafv2 from '@aws-cdk/aws-wafv2';",
      "syntaxKindCounter": {
        "10": 1,
        "75": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "c305f957aae95ff6ea0fe6de44fc614102864d77532cb1513b7ebc89a2413c66": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncfn_iPSet = wafv2.CfnIPSet(self, \"MyCfnIPSet\",\n    addresses=[\"addresses\"],\n    ip_address_version=\"ipAddressVersion\",\n    scope=\"scope\",\n\n    # the properties below are optional\n    description=\"description\",\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCfnIPSet cfnIPSet = new CfnIPSet(this, \"MyCfnIPSet\", new CfnIPSetProps {\n    Addresses = new [] { \"addresses\" },\n    IpAddressVersion = \"ipAddressVersion\",\n    Scope = \"scope\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCfnIPSet cfnIPSet = CfnIPSet.Builder.create(this, \"MyCfnIPSet\")\n        .addresses(List.of(\"addresses\"))\n        .ipAddressVersion(\"ipAddressVersion\")\n        .scope(\"scope\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncfnIPSet := wafv2.NewCfnIPSet(this, jsii.String(\"MyCfnIPSet\"), &cfnIPSetProps{\n\taddresses: []*string{\n\t\tjsii.String(\"addresses\"),\n\t},\n\tipAddressVersion: jsii.String(\"ipAddressVersion\"),\n\tscope: jsii.String(\"scope\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst cfnIPSet = new wafv2.CfnIPSet(this, 'MyCfnIPSet', {\n  addresses: ['addresses'],\n  ipAddressVersion: 'ipAddressVersion',\n  scope: 'scope',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnIPSet"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnIPSet",
        "@aws-cdk/aws-wafv2.CfnIPSetProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnIPSet = new wafv2.CfnIPSet(this, 'MyCfnIPSet', {\n  addresses: ['addresses'],\n  ipAddressVersion: 'ipAddressVersion',\n  scope: 'scope',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 12,
        "104": 1,
        "192": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "42e7c5f4d28e7f0a3a1e4faabbeed9af1795fdd013db39c24810921498c79ee1"
    },
    "8ef54a3712fc2637c5cb0dc6f97504925f97f356cddcc908ed80ff3c879330e5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncfn_iPSet_props = wafv2.CfnIPSetProps(\n    addresses=[\"addresses\"],\n    ip_address_version=\"ipAddressVersion\",\n    scope=\"scope\",\n\n    # the properties below are optional\n    description=\"description\",\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCfnIPSetProps cfnIPSetProps = new CfnIPSetProps {\n    Addresses = new [] { \"addresses\" },\n    IpAddressVersion = \"ipAddressVersion\",\n    Scope = \"scope\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCfnIPSetProps cfnIPSetProps = CfnIPSetProps.builder()\n        .addresses(List.of(\"addresses\"))\n        .ipAddressVersion(\"ipAddressVersion\")\n        .scope(\"scope\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncfnIPSetProps := &cfnIPSetProps{\n\taddresses: []*string{\n\t\tjsii.String(\"addresses\"),\n\t},\n\tipAddressVersion: jsii.String(\"ipAddressVersion\"),\n\tscope: jsii.String(\"scope\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst cfnIPSetProps: wafv2.CfnIPSetProps = {\n  addresses: ['addresses'],\n  ipAddressVersion: 'ipAddressVersion',\n  scope: 'scope',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnIPSetProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnIPSetProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnIPSetProps: wafv2.CfnIPSetProps = {\n  addresses: ['addresses'],\n  ipAddressVersion: 'ipAddressVersion',\n  scope: 'scope',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 12,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "1ee9f1d44846f15da83e57ddb461bf15b6467ce2ce6113f23ae2bbecbf6369fc"
    },
    "e329a566759dc01397f89bd3e67772dcc5e9e71fa8933b000ff39ef494ebddf4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# json_body: Any\n# logging_filter: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# uri_path: Any\n\ncfn_logging_configuration = wafv2.CfnLoggingConfiguration(self, \"MyCfnLoggingConfiguration\",\n    log_destination_configs=[\"logDestinationConfigs\"],\n    resource_arn=\"resourceArn\",\n\n    # the properties below are optional\n    logging_filter=logging_filter,\n    redacted_fields=[wafv2.CfnLoggingConfiguration.FieldToMatchProperty(\n        json_body=json_body,\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        uri_path=uri_path\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar jsonBody;\nvar loggingFilter;\nvar method;\nvar queryString;\nvar singleHeader;\nvar uriPath;\n\nCfnLoggingConfiguration cfnLoggingConfiguration = new CfnLoggingConfiguration(this, \"MyCfnLoggingConfiguration\", new CfnLoggingConfigurationProps {\n    LogDestinationConfigs = new [] { \"logDestinationConfigs\" },\n    ResourceArn = \"resourceArn\",\n\n    // the properties below are optional\n    LoggingFilter = loggingFilter,\n    RedactedFields = new [] { new FieldToMatchProperty {\n        JsonBody = jsonBody,\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        UriPath = uriPath\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject jsonBody;\nObject loggingFilter;\nObject method;\nObject queryString;\nObject singleHeader;\nObject uriPath;\n\nCfnLoggingConfiguration cfnLoggingConfiguration = CfnLoggingConfiguration.Builder.create(this, \"MyCfnLoggingConfiguration\")\n        .logDestinationConfigs(List.of(\"logDestinationConfigs\"))\n        .resourceArn(\"resourceArn\")\n\n        // the properties below are optional\n        .loggingFilter(loggingFilter)\n        .redactedFields(List.of(FieldToMatchProperty.builder()\n                .jsonBody(jsonBody)\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .uriPath(uriPath)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar jsonBody interface{}\nvar loggingFilter interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar uriPath interface{}\n\ncfnLoggingConfiguration := wafv2.NewCfnLoggingConfiguration(this, jsii.String(\"MyCfnLoggingConfiguration\"), &cfnLoggingConfigurationProps{\n\tlogDestinationConfigs: []*string{\n\t\tjsii.String(\"logDestinationConfigs\"),\n\t},\n\tresourceArn: jsii.String(\"resourceArn\"),\n\n\t// the properties below are optional\n\tloggingFilter: loggingFilter,\n\tredactedFields: []interface{}{\n\t\t&fieldToMatchProperty{\n\t\t\tjsonBody: jsonBody,\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\turiPath: uriPath,\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const jsonBody: any;\ndeclare const loggingFilter: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const uriPath: any;\nconst cfnLoggingConfiguration = new wafv2.CfnLoggingConfiguration(this, 'MyCfnLoggingConfiguration', {\n  logDestinationConfigs: ['logDestinationConfigs'],\n  resourceArn: 'resourceArn',\n\n  // the properties below are optional\n  loggingFilter: loggingFilter,\n  redactedFields: [{\n    jsonBody: jsonBody,\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    uriPath: uriPath,\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnLoggingConfiguration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnLoggingConfiguration",
        "@aws-cdk/aws-wafv2.CfnLoggingConfigurationProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const jsonBody: any;\ndeclare const loggingFilter: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLoggingConfiguration = new wafv2.CfnLoggingConfiguration(this, 'MyCfnLoggingConfiguration', {\n  logDestinationConfigs: ['logDestinationConfigs'],\n  resourceArn: 'resourceArn',\n\n  // the properties below are optional\n  loggingFilter: loggingFilter,\n  redactedFields: [{\n    jsonBody: jsonBody,\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    uriPath: uriPath,\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 25,
        "104": 1,
        "125": 6,
        "130": 6,
        "192": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 7,
        "242": 7,
        "243": 7,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "7ad6111d04cd6fb4c1e0c32e64bea86193c518cec5bcde74d8615e93a5e8bac7"
    },
    "a982190e84466f5e360b012387fb33a950f859f852d079f012be458ed8537f2d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# json_body: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# uri_path: Any\n\nfield_to_match_property = wafv2.CfnLoggingConfiguration.FieldToMatchProperty(\n    json_body=json_body,\n    method=method,\n    query_string=query_string,\n    single_header=single_header,\n    uri_path=uri_path\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar jsonBody;\nvar method;\nvar queryString;\nvar singleHeader;\nvar uriPath;\n\nFieldToMatchProperty fieldToMatchProperty = new FieldToMatchProperty {\n    JsonBody = jsonBody,\n    Method = method,\n    QueryString = queryString,\n    SingleHeader = singleHeader,\n    UriPath = uriPath\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject jsonBody;\nObject method;\nObject queryString;\nObject singleHeader;\nObject uriPath;\n\nFieldToMatchProperty fieldToMatchProperty = FieldToMatchProperty.builder()\n        .jsonBody(jsonBody)\n        .method(method)\n        .queryString(queryString)\n        .singleHeader(singleHeader)\n        .uriPath(uriPath)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar jsonBody interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar uriPath interface{}\n\nfieldToMatchProperty := &fieldToMatchProperty{\n\tjsonBody: jsonBody,\n\tmethod: method,\n\tqueryString: queryString,\n\tsingleHeader: singleHeader,\n\turiPath: uriPath,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const jsonBody: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const uriPath: any;\nconst fieldToMatchProperty: wafv2.CfnLoggingConfiguration.FieldToMatchProperty = {\n  jsonBody: jsonBody,\n  method: method,\n  queryString: queryString,\n  singleHeader: singleHeader,\n  uriPath: uriPath,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnLoggingConfiguration.FieldToMatchProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnLoggingConfiguration.FieldToMatchProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const jsonBody: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst fieldToMatchProperty: wafv2.CfnLoggingConfiguration.FieldToMatchProperty = {\n  jsonBody: jsonBody,\n  method: method,\n  queryString: queryString,\n  singleHeader: singleHeader,\n  uriPath: uriPath,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 20,
        "125": 5,
        "130": 5,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 6,
        "242": 6,
        "243": 6,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "ead87033ba1fc181dfc04698a4497650884fdc9d14290f8c6f031ca1e43bb0d2"
    },
    "e08bea9ec859a4c3402a9392bb859600ca88406d5ea48991122855e68838ca4a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# json_body: Any\n# logging_filter: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# uri_path: Any\n\ncfn_logging_configuration_props = wafv2.CfnLoggingConfigurationProps(\n    log_destination_configs=[\"logDestinationConfigs\"],\n    resource_arn=\"resourceArn\",\n\n    # the properties below are optional\n    logging_filter=logging_filter,\n    redacted_fields=[wafv2.CfnLoggingConfiguration.FieldToMatchProperty(\n        json_body=json_body,\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        uri_path=uri_path\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar jsonBody;\nvar loggingFilter;\nvar method;\nvar queryString;\nvar singleHeader;\nvar uriPath;\n\nCfnLoggingConfigurationProps cfnLoggingConfigurationProps = new CfnLoggingConfigurationProps {\n    LogDestinationConfigs = new [] { \"logDestinationConfigs\" },\n    ResourceArn = \"resourceArn\",\n\n    // the properties below are optional\n    LoggingFilter = loggingFilter,\n    RedactedFields = new [] { new FieldToMatchProperty {\n        JsonBody = jsonBody,\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        UriPath = uriPath\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject jsonBody;\nObject loggingFilter;\nObject method;\nObject queryString;\nObject singleHeader;\nObject uriPath;\n\nCfnLoggingConfigurationProps cfnLoggingConfigurationProps = CfnLoggingConfigurationProps.builder()\n        .logDestinationConfigs(List.of(\"logDestinationConfigs\"))\n        .resourceArn(\"resourceArn\")\n\n        // the properties below are optional\n        .loggingFilter(loggingFilter)\n        .redactedFields(List.of(FieldToMatchProperty.builder()\n                .jsonBody(jsonBody)\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .uriPath(uriPath)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar jsonBody interface{}\nvar loggingFilter interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar uriPath interface{}\n\ncfnLoggingConfigurationProps := &cfnLoggingConfigurationProps{\n\tlogDestinationConfigs: []*string{\n\t\tjsii.String(\"logDestinationConfigs\"),\n\t},\n\tresourceArn: jsii.String(\"resourceArn\"),\n\n\t// the properties below are optional\n\tloggingFilter: loggingFilter,\n\tredactedFields: []interface{}{\n\t\t&fieldToMatchProperty{\n\t\t\tjsonBody: jsonBody,\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\turiPath: uriPath,\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const jsonBody: any;\ndeclare const loggingFilter: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const uriPath: any;\nconst cfnLoggingConfigurationProps: wafv2.CfnLoggingConfigurationProps = {\n  logDestinationConfigs: ['logDestinationConfigs'],\n  resourceArn: 'resourceArn',\n\n  // the properties below are optional\n  loggingFilter: loggingFilter,\n  redactedFields: [{\n    jsonBody: jsonBody,\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    uriPath: uriPath,\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnLoggingConfigurationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnLoggingConfigurationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const jsonBody: any;\ndeclare const loggingFilter: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLoggingConfigurationProps: wafv2.CfnLoggingConfigurationProps = {\n  logDestinationConfigs: ['logDestinationConfigs'],\n  resourceArn: 'resourceArn',\n\n  // the properties below are optional\n  loggingFilter: loggingFilter,\n  redactedFields: [{\n    jsonBody: jsonBody,\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    uriPath: uriPath,\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 25,
        "125": 6,
        "130": 6,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 7,
        "242": 7,
        "243": 7,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "f684ce996a9d3172db7e572384b7497b4a764b85a874ffc59b8e4392c497e409"
    },
    "db3f9d524334d5a213badd3216f23835709784696450010c11f1b496167da50d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncfn_regex_pattern_set = wafv2.CfnRegexPatternSet(self, \"MyCfnRegexPatternSet\",\n    regular_expression_list=[\"regularExpressionList\"],\n    scope=\"scope\",\n\n    # the properties below are optional\n    description=\"description\",\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCfnRegexPatternSet cfnRegexPatternSet = new CfnRegexPatternSet(this, \"MyCfnRegexPatternSet\", new CfnRegexPatternSetProps {\n    RegularExpressionList = new [] { \"regularExpressionList\" },\n    Scope = \"scope\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCfnRegexPatternSet cfnRegexPatternSet = CfnRegexPatternSet.Builder.create(this, \"MyCfnRegexPatternSet\")\n        .regularExpressionList(List.of(\"regularExpressionList\"))\n        .scope(\"scope\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncfnRegexPatternSet := wafv2.NewCfnRegexPatternSet(this, jsii.String(\"MyCfnRegexPatternSet\"), &cfnRegexPatternSetProps{\n\tregularExpressionList: []*string{\n\t\tjsii.String(\"regularExpressionList\"),\n\t},\n\tscope: jsii.String(\"scope\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst cfnRegexPatternSet = new wafv2.CfnRegexPatternSet(this, 'MyCfnRegexPatternSet', {\n  regularExpressionList: ['regularExpressionList'],\n  scope: 'scope',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRegexPatternSet"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRegexPatternSet",
        "@aws-cdk/aws-wafv2.CfnRegexPatternSetProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRegexPatternSet = new wafv2.CfnRegexPatternSet(this, 'MyCfnRegexPatternSet', {\n  regularExpressionList: ['regularExpressionList'],\n  scope: 'scope',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 11,
        "104": 1,
        "192": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "574f4645a9f6980b202af06b2ac5099462f9597165eb58db7db724fc447a9b76"
    },
    "55bc4656fb31b05d66d1ae85b82ff7a109b665668d62ebafe4e8697f77660b7e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncfn_regex_pattern_set_props = wafv2.CfnRegexPatternSetProps(\n    regular_expression_list=[\"regularExpressionList\"],\n    scope=\"scope\",\n\n    # the properties below are optional\n    description=\"description\",\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCfnRegexPatternSetProps cfnRegexPatternSetProps = new CfnRegexPatternSetProps {\n    RegularExpressionList = new [] { \"regularExpressionList\" },\n    Scope = \"scope\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCfnRegexPatternSetProps cfnRegexPatternSetProps = CfnRegexPatternSetProps.builder()\n        .regularExpressionList(List.of(\"regularExpressionList\"))\n        .scope(\"scope\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncfnRegexPatternSetProps := &cfnRegexPatternSetProps{\n\tregularExpressionList: []*string{\n\t\tjsii.String(\"regularExpressionList\"),\n\t},\n\tscope: jsii.String(\"scope\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst cfnRegexPatternSetProps: wafv2.CfnRegexPatternSetProps = {\n  regularExpressionList: ['regularExpressionList'],\n  scope: 'scope',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRegexPatternSetProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRegexPatternSetProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRegexPatternSetProps: wafv2.CfnRegexPatternSetProps = {\n  regularExpressionList: ['regularExpressionList'],\n  scope: 'scope',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 11,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "e3164429bcafd6600d328087c2753385c2eeb2d35c601b381256173ee28847d3"
    },
    "3513b9ae7f78a2c34a623254ebc8be9bd96805800074a5f1721d8927d3453b79": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# allow: Any\n# all_query_arguments: Any\n# block: Any\n# captcha: Any\n# count: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnRuleGroup.StatementProperty\n# uri_path: Any\n\ncfn_rule_group = wafv2.CfnRuleGroup(self, \"MyCfnRuleGroup\",\n    capacity=123,\n    scope=\"scope\",\n    visibility_config=wafv2.CfnRuleGroup.VisibilityConfigProperty(\n        cloud_watch_metrics_enabled=False,\n        metric_name=\"metricName\",\n        sampled_requests_enabled=False\n    ),\n\n    # the properties below are optional\n    custom_response_bodies={\n        \"custom_response_bodies_key\": wafv2.CfnRuleGroup.CustomResponseBodyProperty(\n            content=\"content\",\n            content_type=\"contentType\"\n        )\n    },\n    description=\"description\",\n    name=\"name\",\n    rules=[wafv2.CfnRuleGroup.RuleProperty(\n        name=\"name\",\n        priority=123,\n        statement=wafv2.CfnRuleGroup.StatementProperty(\n            and_statement=wafv2.CfnRuleGroup.AndStatementProperty(\n                statements=[statement_property_]\n            ),\n            byte_match_statement=wafv2.CfnRuleGroup.ByteMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                positional_constraint=\"positionalConstraint\",\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                search_string=\"searchString\",\n                search_string_base64=\"searchStringBase64\"\n            ),\n            geo_match_statement=wafv2.CfnRuleGroup.GeoMatchStatementProperty(\n                country_codes=[\"countryCodes\"],\n                forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                )\n            ),\n            ip_set_reference_statement={\n                \"arn\": \"arn\",\n\n                # the properties below are optional\n                \"ip_set_forwarded_ip_config\": {\n                    \"fallback_behavior\": \"fallbackBehavior\",\n                    \"header_name\": \"headerName\",\n                    \"position\": \"position\"\n                }\n            },\n            label_match_statement=wafv2.CfnRuleGroup.LabelMatchStatementProperty(\n                key=\"key\",\n                scope=\"scope\"\n            ),\n            not_statement=wafv2.CfnRuleGroup.NotStatementProperty(\n                statement=statement_property_\n            ),\n            or_statement=wafv2.CfnRuleGroup.OrStatementProperty(\n                statements=[statement_property_]\n            ),\n            rate_based_statement=wafv2.CfnRuleGroup.RateBasedStatementProperty(\n                aggregate_key_type=\"aggregateKeyType\",\n                limit=123,\n\n                # the properties below are optional\n                forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                ),\n                scope_down_statement=statement_property_\n            ),\n            regex_match_statement=wafv2.CfnRuleGroup.RegexMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                regex_string=\"regexString\",\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            regex_pattern_set_reference_statement=wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty(\n                arn=\"arn\",\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            size_constraint_statement=wafv2.CfnRuleGroup.SizeConstraintStatementProperty(\n                comparison_operator=\"comparisonOperator\",\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                size=123,\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            sqli_match_statement=wafv2.CfnRuleGroup.SqliMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                sensitivity_level=\"sensitivityLevel\"\n            ),\n            xss_match_statement=wafv2.CfnRuleGroup.XssMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            )\n        ),\n        visibility_config=wafv2.CfnRuleGroup.VisibilityConfigProperty(\n            cloud_watch_metrics_enabled=False,\n            metric_name=\"metricName\",\n            sampled_requests_enabled=False\n        ),\n\n        # the properties below are optional\n        action=wafv2.CfnRuleGroup.RuleActionProperty(\n            allow=allow,\n            block=block,\n            captcha=captcha,\n            count=count\n        ),\n        captcha_config=wafv2.CfnRuleGroup.CaptchaConfigProperty(\n            immunity_time_property=wafv2.CfnRuleGroup.ImmunityTimePropertyProperty(\n                immunity_time=123\n            )\n        ),\n        rule_labels=[wafv2.CfnRuleGroup.LabelProperty(\n            name=\"name\"\n        )]\n    )],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allow;\nvar allQueryArguments;\nvar block;\nvar captcha;\nvar count;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nCfnRuleGroup cfnRuleGroup = new CfnRuleGroup(this, \"MyCfnRuleGroup\", new CfnRuleGroupProps {\n    Capacity = 123,\n    Scope = \"scope\",\n    VisibilityConfig = new VisibilityConfigProperty {\n        CloudWatchMetricsEnabled = false,\n        MetricName = \"metricName\",\n        SampledRequestsEnabled = false\n    },\n\n    // the properties below are optional\n    CustomResponseBodies = new Dictionary<string, object> {\n        { \"customResponseBodiesKey\", new CustomResponseBodyProperty {\n            Content = \"content\",\n            ContentType = \"contentType\"\n        } }\n    },\n    Description = \"description\",\n    Name = \"name\",\n    Rules = new [] { new RuleProperty {\n        Name = \"name\",\n        Priority = 123,\n        Statement = new StatementProperty {\n            AndStatement = new AndStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            ByteMatchStatement = new ByteMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                PositionalConstraint = \"positionalConstraint\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SearchString = \"searchString\",\n                SearchStringBase64 = \"searchStringBase64\"\n            },\n            GeoMatchStatement = new GeoMatchStatementProperty {\n                CountryCodes = new [] { \"countryCodes\" },\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                }\n            },\n            IpSetReferenceStatement = new Dictionary<string, object> {\n                { \"arn\", \"arn\" },\n\n                // the properties below are optional\n                { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                    { \"fallbackBehavior\", \"fallbackBehavior\" },\n                    { \"headerName\", \"headerName\" },\n                    { \"position\", \"position\" }\n                } }\n            },\n            LabelMatchStatement = new LabelMatchStatementProperty {\n                Key = \"key\",\n                Scope = \"scope\"\n            },\n            NotStatement = new NotStatementProperty {\n                Statement = statementProperty_\n            },\n            OrStatement = new OrStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            RateBasedStatement = new RateBasedStatementProperty {\n                AggregateKeyType = \"aggregateKeyType\",\n                Limit = 123,\n\n                // the properties below are optional\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                },\n                ScopeDownStatement = statementProperty_\n            },\n            RegexMatchStatement = new RegexMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                RegexString = \"regexString\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n                Arn = \"arn\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SizeConstraintStatement = new SizeConstraintStatementProperty {\n                ComparisonOperator = \"comparisonOperator\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                Size = 123,\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SqliMatchStatement = new SqliMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SensitivityLevel = \"sensitivityLevel\"\n            },\n            XssMatchStatement = new XssMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            }\n        },\n        VisibilityConfig = new VisibilityConfigProperty {\n            CloudWatchMetricsEnabled = false,\n            MetricName = \"metricName\",\n            SampledRequestsEnabled = false\n        },\n\n        // the properties below are optional\n        Action = new RuleActionProperty {\n            Allow = allow,\n            Block = block,\n            Captcha = captcha,\n            Count = count\n        },\n        CaptchaConfig = new CaptchaConfigProperty {\n            ImmunityTimeProperty = new ImmunityTimePropertyProperty {\n                ImmunityTime = 123\n            }\n        },\n        RuleLabels = new [] { new LabelProperty {\n            Name = \"name\"\n        } }\n    } },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allow;\nObject allQueryArguments;\nObject block;\nObject captcha;\nObject count;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nCfnRuleGroup cfnRuleGroup = CfnRuleGroup.Builder.create(this, \"MyCfnRuleGroup\")\n        .capacity(123)\n        .scope(\"scope\")\n        .visibilityConfig(VisibilityConfigProperty.builder()\n                .cloudWatchMetricsEnabled(false)\n                .metricName(\"metricName\")\n                .sampledRequestsEnabled(false)\n                .build())\n\n        // the properties below are optional\n        .customResponseBodies(Map.of(\n                \"customResponseBodiesKey\", CustomResponseBodyProperty.builder()\n                        .content(\"content\")\n                        .contentType(\"contentType\")\n                        .build()))\n        .description(\"description\")\n        .name(\"name\")\n        .rules(List.of(RuleProperty.builder()\n                .name(\"name\")\n                .priority(123)\n                .statement(StatementProperty.builder()\n                        .andStatement(AndStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .positionalConstraint(\"positionalConstraint\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .searchString(\"searchString\")\n                                .searchStringBase64(\"searchStringBase64\")\n                                .build())\n                        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                                .countryCodes(List.of(\"countryCodes\"))\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .build())\n                        .ipSetReferenceStatement(Map.of(\n                                \"arn\", \"arn\",\n\n                                // the properties below are optional\n                                \"ipSetForwardedIpConfig\", Map.of(\n                                        \"fallbackBehavior\", \"fallbackBehavior\",\n                                        \"headerName\", \"headerName\",\n                                        \"position\", \"position\")))\n                        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                                .key(\"key\")\n                                .scope(\"scope\")\n                                .build())\n                        .notStatement(NotStatementProperty.builder()\n                                .statement(statementProperty_)\n                                .build())\n                        .orStatement(OrStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .rateBasedStatement(RateBasedStatementProperty.builder()\n                                .aggregateKeyType(\"aggregateKeyType\")\n                                .limit(123)\n\n                                // the properties below are optional\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .scopeDownStatement(statementProperty_)\n                                .build())\n                        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .regexString(\"regexString\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                                .comparisonOperator(\"comparisonOperator\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .size(123)\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .sensitivityLevel(\"sensitivityLevel\")\n                                .build())\n                        .xssMatchStatement(XssMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .build())\n                .visibilityConfig(VisibilityConfigProperty.builder()\n                        .cloudWatchMetricsEnabled(false)\n                        .metricName(\"metricName\")\n                        .sampledRequestsEnabled(false)\n                        .build())\n\n                // the properties below are optional\n                .action(RuleActionProperty.builder()\n                        .allow(allow)\n                        .block(block)\n                        .captcha(captcha)\n                        .count(count)\n                        .build())\n                .captchaConfig(CaptchaConfigProperty.builder()\n                        .immunityTimeProperty(ImmunityTimePropertyProperty.builder()\n                                .immunityTime(123)\n                                .build())\n                        .build())\n                .ruleLabels(List.of(LabelProperty.builder()\n                        .name(\"name\")\n                        .build()))\n                .build()))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allow interface{}\nvar allQueryArguments interface{}\nvar block interface{}\nvar captcha interface{}\nvar count interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\ncfnRuleGroup := wafv2.NewCfnRuleGroup(this, jsii.String(\"MyCfnRuleGroup\"), &cfnRuleGroupProps{\n\tcapacity: jsii.Number(123),\n\tscope: jsii.String(\"scope\"),\n\tvisibilityConfig: &visibilityConfigProperty{\n\t\tcloudWatchMetricsEnabled: jsii.Boolean(false),\n\t\tmetricName: jsii.String(\"metricName\"),\n\t\tsampledRequestsEnabled: jsii.Boolean(false),\n\t},\n\n\t// the properties below are optional\n\tcustomResponseBodies: map[string]interface{}{\n\t\t\"customResponseBodiesKey\": &CustomResponseBodyProperty{\n\t\t\t\"content\": jsii.String(\"content\"),\n\t\t\t\"contentType\": jsii.String(\"contentType\"),\n\t\t},\n\t},\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\trules: []interface{}{\n\t\t&ruleProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tpriority: jsii.Number(123),\n\t\t\tstatement: &statementProperty{\n\t\t\t\tandStatement: &andStatementProperty{\n\t\t\t\t\tstatements: []interface{}{\n\t\t\t\t\t\tstatementProperty_,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t\t},\n\t\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t\t},\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\t},\n\t\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\t\tstatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\torStatement: &orStatementProperty{\n\t\t\t\t\tstatements: []interface{}{\n\t\t\t\t\t\tstatementProperty_,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tsize: jsii.Number(123),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t\t},\n\t\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tvisibilityConfig: &visibilityConfigProperty{\n\t\t\t\tcloudWatchMetricsEnabled: jsii.Boolean(false),\n\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\tsampledRequestsEnabled: jsii.Boolean(false),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\taction: &ruleActionProperty{\n\t\t\t\tallow: allow,\n\t\t\t\tblock: block,\n\t\t\t\tcaptcha: captcha,\n\t\t\t\tcount: count,\n\t\t\t},\n\t\t\tcaptchaConfig: &captchaConfigProperty{\n\t\t\t\timmunityTimeProperty: &immunityTimePropertyProperty{\n\t\t\t\t\timmunityTime: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\truleLabels: []interface{}{\n\t\t\t\t&labelProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allow: any;\ndeclare const allQueryArguments: any;\ndeclare const block: any;\ndeclare const captcha: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst cfnRuleGroup = new wafv2.CfnRuleGroup(this, 'MyCfnRuleGroup', {\n  capacity: 123,\n  scope: 'scope',\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  customResponseBodies: {\n    customResponseBodiesKey: {\n      content: 'content',\n      contentType: 'contentType',\n    },\n  },\n  description: 'description',\n  name: 'name',\n  rules: [{\n    name: 'name',\n    priority: 123,\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    visibilityConfig: {\n      cloudWatchMetricsEnabled: false,\n      metricName: 'metricName',\n      sampledRequestsEnabled: false,\n    },\n\n    // the properties below are optional\n    action: {\n      allow: allow,\n      block: block,\n      captcha: captcha,\n      count: count,\n    },\n    captchaConfig: {\n      immunityTimeProperty: {\n        immunityTime: 123,\n      },\n    },\n    ruleLabels: [{\n      name: 'name',\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup",
        "@aws-cdk/aws-wafv2.CfnRuleGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allow: any;\ndeclare const allQueryArguments: any;\ndeclare const block: any;\ndeclare const captcha: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRuleGroup = new wafv2.CfnRuleGroup(this, 'MyCfnRuleGroup', {\n  capacity: 123,\n  scope: 'scope',\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  customResponseBodies: {\n    customResponseBodiesKey: {\n      content: 'content',\n      contentType: 'contentType',\n    },\n  },\n  description: 'description',\n  name: 'name',\n  rules: [{\n    name: 'name',\n    priority: 123,\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    visibilityConfig: {\n      cloudWatchMetricsEnabled: false,\n      metricName: 'metricName',\n      sampledRequestsEnabled: false,\n    },\n\n    // the properties below are optional\n    action: {\n      allow: allow,\n      block: block,\n      captcha: captcha,\n      count: count,\n    },\n    captchaConfig: {\n      immunityTimeProperty: {\n        immunityTime: 123,\n      },\n    },\n    ruleLabels: [{\n      name: 'name',\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 11,
        "10": 116,
        "75": 353,
        "91": 4,
        "104": 1,
        "125": 11,
        "130": 12,
        "153": 2,
        "169": 1,
        "192": 42,
        "193": 82,
        "194": 1,
        "197": 1,
        "225": 13,
        "242": 13,
        "243": 13,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 272,
        "290": 1
      },
      "fqnsFingerprint": "565a8205f6efc06c3139a9887c4b2b013908fef374c66cab345d5ac345b0672e"
    },
    "97e72a6742af71678e5fdffb4cff05e2a52214c98602da06a5cc04d108a13e0a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnRuleGroup.StatementProperty\n# uri_path: Any\n\nand_statement_property = wafv2.CfnRuleGroup.AndStatementProperty(\n    statements=[wafv2.CfnRuleGroup.StatementProperty(\n        and_statement=wafv2.CfnRuleGroup.AndStatementProperty(\n            statements=[statement_property_]\n        ),\n        byte_match_statement=wafv2.CfnRuleGroup.ByteMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            positional_constraint=\"positionalConstraint\",\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            search_string=\"searchString\",\n            search_string_base64=\"searchStringBase64\"\n        ),\n        geo_match_statement=wafv2.CfnRuleGroup.GeoMatchStatementProperty(\n            country_codes=[\"countryCodes\"],\n            forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            )\n        ),\n        ip_set_reference_statement={\n            \"arn\": \"arn\",\n\n            # the properties below are optional\n            \"ip_set_forwarded_ip_config\": {\n                \"fallback_behavior\": \"fallbackBehavior\",\n                \"header_name\": \"headerName\",\n                \"position\": \"position\"\n            }\n        },\n        label_match_statement=wafv2.CfnRuleGroup.LabelMatchStatementProperty(\n            key=\"key\",\n            scope=\"scope\"\n        ),\n        not_statement=wafv2.CfnRuleGroup.NotStatementProperty(\n            statement=statement_property_\n        ),\n        or_statement=wafv2.CfnRuleGroup.OrStatementProperty(\n            statements=[statement_property_]\n        ),\n        rate_based_statement=wafv2.CfnRuleGroup.RateBasedStatementProperty(\n            aggregate_key_type=\"aggregateKeyType\",\n            limit=123,\n\n            # the properties below are optional\n            forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            ),\n            scope_down_statement=statement_property_\n        ),\n        regex_match_statement=wafv2.CfnRuleGroup.RegexMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            regex_string=\"regexString\",\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        regex_pattern_set_reference_statement=wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty(\n            arn=\"arn\",\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        size_constraint_statement=wafv2.CfnRuleGroup.SizeConstraintStatementProperty(\n            comparison_operator=\"comparisonOperator\",\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            size=123,\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        sqli_match_statement=wafv2.CfnRuleGroup.SqliMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            sensitivity_level=\"sensitivityLevel\"\n        ),\n        xss_match_statement=wafv2.CfnRuleGroup.XssMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nAndStatementProperty andStatementProperty = new AndStatementProperty {\n    Statements = new [] { new StatementProperty {\n        AndStatement = new AndStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        ByteMatchStatement = new ByteMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            PositionalConstraint = \"positionalConstraint\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SearchString = \"searchString\",\n            SearchStringBase64 = \"searchStringBase64\"\n        },\n        GeoMatchStatement = new GeoMatchStatementProperty {\n            CountryCodes = new [] { \"countryCodes\" },\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            }\n        },\n        IpSetReferenceStatement = new Dictionary<string, object> {\n            { \"arn\", \"arn\" },\n\n            // the properties below are optional\n            { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                { \"fallbackBehavior\", \"fallbackBehavior\" },\n                { \"headerName\", \"headerName\" },\n                { \"position\", \"position\" }\n            } }\n        },\n        LabelMatchStatement = new LabelMatchStatementProperty {\n            Key = \"key\",\n            Scope = \"scope\"\n        },\n        NotStatement = new NotStatementProperty {\n            Statement = statementProperty_\n        },\n        OrStatement = new OrStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        RateBasedStatement = new RateBasedStatementProperty {\n            AggregateKeyType = \"aggregateKeyType\",\n            Limit = 123,\n\n            // the properties below are optional\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            },\n            ScopeDownStatement = statementProperty_\n        },\n        RegexMatchStatement = new RegexMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            RegexString = \"regexString\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n            Arn = \"arn\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SizeConstraintStatement = new SizeConstraintStatementProperty {\n            ComparisonOperator = \"comparisonOperator\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            Size = 123,\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SqliMatchStatement = new SqliMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SensitivityLevel = \"sensitivityLevel\"\n        },\n        XssMatchStatement = new XssMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nAndStatementProperty andStatementProperty = AndStatementProperty.builder()\n        .statements(List.of(StatementProperty.builder()\n                .andStatement(AndStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .byteMatchStatement(ByteMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .positionalConstraint(\"positionalConstraint\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .searchString(\"searchString\")\n                        .searchStringBase64(\"searchStringBase64\")\n                        .build())\n                .geoMatchStatement(GeoMatchStatementProperty.builder()\n                        .countryCodes(List.of(\"countryCodes\"))\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .build())\n                .ipSetReferenceStatement(Map.of(\n                        \"arn\", \"arn\",\n\n                        // the properties below are optional\n                        \"ipSetForwardedIpConfig\", Map.of(\n                                \"fallbackBehavior\", \"fallbackBehavior\",\n                                \"headerName\", \"headerName\",\n                                \"position\", \"position\")))\n                .labelMatchStatement(LabelMatchStatementProperty.builder()\n                        .key(\"key\")\n                        .scope(\"scope\")\n                        .build())\n                .notStatement(NotStatementProperty.builder()\n                        .statement(statementProperty_)\n                        .build())\n                .orStatement(OrStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .rateBasedStatement(RateBasedStatementProperty.builder()\n                        .aggregateKeyType(\"aggregateKeyType\")\n                        .limit(123)\n\n                        // the properties below are optional\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .scopeDownStatement(statementProperty_)\n                        .build())\n                .regexMatchStatement(RegexMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .regexString(\"regexString\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                        .comparisonOperator(\"comparisonOperator\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .size(123)\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .sensitivityLevel(\"sensitivityLevel\")\n                        .build())\n                .xssMatchStatement(XssMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\nandStatementProperty := &andStatementProperty{\n\tstatements: []interface{}{\n\t\t&statementProperty{\n\t\t\tandStatement: &andStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t},\n\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t},\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t},\n\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\tstatement: statementProperty_,\n\t\t\t},\n\t\t\torStatement: &orStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t},\n\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tsize: jsii.Number(123),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t},\n\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst andStatementProperty: wafv2.CfnRuleGroup.AndStatementProperty = {\n  statements: [{\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.AndStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.AndStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst andStatementProperty: wafv2.CfnRuleGroup.AndStatementProperty = {\n  statements: [{\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 8,
        "10": 104,
        "75": 314,
        "125": 7,
        "130": 8,
        "153": 4,
        "169": 2,
        "192": 40,
        "193": 72,
        "225": 9,
        "242": 9,
        "243": 9,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 240,
        "290": 1
      },
      "fqnsFingerprint": "824aa772fc7db910a113468cb789516376ee5ca792ac2f7ea9745658b2b5f14f"
    },
    "f13d81df73de535403aa1c844f9165fcc406118ed5753991597ec6899946350b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nbody_property = wafv2.CfnRuleGroup.BodyProperty(\n    oversize_handling=\"oversizeHandling\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nBodyProperty bodyProperty = new BodyProperty {\n    OversizeHandling = \"oversizeHandling\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nBodyProperty bodyProperty = BodyProperty.builder()\n        .oversizeHandling(\"oversizeHandling\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nbodyProperty := &bodyProperty{\n\toversizeHandling: jsii.String(\"oversizeHandling\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst bodyProperty: wafv2.CfnRuleGroup.BodyProperty = {\n  oversizeHandling: 'oversizeHandling',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.BodyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.BodyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst bodyProperty: wafv2.CfnRuleGroup.BodyProperty = {\n  oversizeHandling: 'oversizeHandling',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "b86e84a7522e61cc951bc7c2fe553f31286554b3fad244f7438d3d2ca03dfe14"
    },
    "2f462687db952bd652f5c772594343d3d579989de6d89c1fb85f6dc10577310f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nbyte_match_statement_property = wafv2.CfnRuleGroup.ByteMatchStatementProperty(\n    field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n        all_query_arguments=all_query_arguments,\n        body=wafv2.CfnRuleGroup.BodyProperty(\n            oversize_handling=\"oversizeHandling\"\n        ),\n        cookies=wafv2.CfnRuleGroup.CookiesProperty(\n            match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                all=all,\n                excluded_cookies=[\"excludedCookies\"],\n                included_cookies=[\"includedCookies\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        headers=wafv2.CfnRuleGroup.HeadersProperty(\n            match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                all=all,\n                excluded_headers=[\"excludedHeaders\"],\n                included_headers=[\"includedHeaders\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n            match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                all=all,\n                included_paths=[\"includedPaths\"]\n            ),\n            match_scope=\"matchScope\",\n\n            # the properties below are optional\n            invalid_fallback_behavior=\"invalidFallbackBehavior\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        single_query_argument=single_query_argument,\n        uri_path=uri_path\n    ),\n    positional_constraint=\"positionalConstraint\",\n    text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n        priority=123,\n        type=\"type\"\n    )],\n\n    # the properties below are optional\n    search_string=\"searchString\",\n    search_string_base64=\"searchStringBase64\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nByteMatchStatementProperty byteMatchStatementProperty = new ByteMatchStatementProperty {\n    FieldToMatch = new FieldToMatchProperty {\n        AllQueryArguments = allQueryArguments,\n        Body = new BodyProperty {\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Cookies = new CookiesProperty {\n            MatchPattern = new CookieMatchPatternProperty {\n                All = all,\n                ExcludedCookies = new [] { \"excludedCookies\" },\n                IncludedCookies = new [] { \"includedCookies\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Headers = new HeadersProperty {\n            MatchPattern = new HeaderMatchPatternProperty {\n                All = all,\n                ExcludedHeaders = new [] { \"excludedHeaders\" },\n                IncludedHeaders = new [] { \"includedHeaders\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        JsonBody = new JsonBodyProperty {\n            MatchPattern = new JsonMatchPatternProperty {\n                All = all,\n                IncludedPaths = new [] { \"includedPaths\" }\n            },\n            MatchScope = \"matchScope\",\n\n            // the properties below are optional\n            InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        SingleQueryArgument = singleQueryArgument,\n        UriPath = uriPath\n    },\n    PositionalConstraint = \"positionalConstraint\",\n    TextTransformations = new [] { new TextTransformationProperty {\n        Priority = 123,\n        Type = \"type\"\n    } },\n\n    // the properties below are optional\n    SearchString = \"searchString\",\n    SearchStringBase64 = \"searchStringBase64\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nByteMatchStatementProperty byteMatchStatementProperty = ByteMatchStatementProperty.builder()\n        .fieldToMatch(FieldToMatchProperty.builder()\n                .allQueryArguments(allQueryArguments)\n                .body(BodyProperty.builder()\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .cookies(CookiesProperty.builder()\n                        .matchPattern(CookieMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedCookies(List.of(\"excludedCookies\"))\n                                .includedCookies(List.of(\"includedCookies\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .headers(HeadersProperty.builder()\n                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                .includedHeaders(List.of(\"includedHeaders\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .jsonBody(JsonBodyProperty.builder()\n                        .matchPattern(JsonMatchPatternProperty.builder()\n                                .all(all)\n                                .includedPaths(List.of(\"includedPaths\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n\n                        // the properties below are optional\n                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .singleQueryArgument(singleQueryArgument)\n                .uriPath(uriPath)\n                .build())\n        .positionalConstraint(\"positionalConstraint\")\n        .textTransformations(List.of(TextTransformationProperty.builder()\n                .priority(123)\n                .type(\"type\")\n                .build()))\n\n        // the properties below are optional\n        .searchString(\"searchString\")\n        .searchStringBase64(\"searchStringBase64\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nbyteMatchStatementProperty := &byteMatchStatementProperty{\n\tfieldToMatch: &fieldToMatchProperty{\n\t\tallQueryArguments: allQueryArguments,\n\t\tbody: &bodyProperty{\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tcookies: &cookiesProperty{\n\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t},\n\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\theaders: &headersProperty{\n\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t},\n\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tjsonBody: &jsonBodyProperty{\n\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tmethod: method,\n\t\tqueryString: queryString,\n\t\tsingleHeader: singleHeader,\n\t\tsingleQueryArgument: singleQueryArgument,\n\t\turiPath: uriPath,\n\t},\n\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\ttextTransformations: []interface{}{\n\t\t&textTransformationProperty{\n\t\t\tpriority: jsii.Number(123),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tsearchString: jsii.String(\"searchString\"),\n\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst byteMatchStatementProperty: wafv2.CfnRuleGroup.ByteMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  positionalConstraint: 'positionalConstraint',\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n\n  // the properties below are optional\n  searchString: 'searchString',\n  searchStringBase64: 'searchStringBase64',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.ByteMatchStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.ByteMatchStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst byteMatchStatementProperty: wafv2.CfnRuleGroup.ByteMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  positionalConstraint: 'positionalConstraint',\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n\n  // the properties below are optional\n  searchString: 'searchString',\n  searchStringBase64: 'searchStringBase64',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 18,
        "75": 57,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 10,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 36,
        "290": 1
      },
      "fqnsFingerprint": "677247e3fe1de50c69dbd2f89a799c2db7e155c597e3996cd8cbb54afbb59d47"
    },
    "89b184f5c5082a34e1bb6b001d73b6457ea8ba69ca9090a7ae5cdba724ef06ee": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncaptcha_config_property = wafv2.CfnRuleGroup.CaptchaConfigProperty(\n    immunity_time_property=wafv2.CfnRuleGroup.ImmunityTimePropertyProperty(\n        immunity_time=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCaptchaConfigProperty captchaConfigProperty = new CaptchaConfigProperty {\n    ImmunityTimeProperty = new ImmunityTimePropertyProperty {\n        ImmunityTime = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCaptchaConfigProperty captchaConfigProperty = CaptchaConfigProperty.builder()\n        .immunityTimeProperty(ImmunityTimePropertyProperty.builder()\n                .immunityTime(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncaptchaConfigProperty := &captchaConfigProperty{\n\timmunityTimeProperty: &immunityTimePropertyProperty{\n\t\timmunityTime: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst captchaConfigProperty: wafv2.CfnRuleGroup.CaptchaConfigProperty = {\n  immunityTimeProperty: {\n    immunityTime: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.CaptchaConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.CaptchaConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst captchaConfigProperty: wafv2.CfnRuleGroup.CaptchaConfigProperty = {\n  immunityTimeProperty: {\n    immunityTime: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "6836c079d9aa61ec7eae0c05d6ed25fc208847c6e7db1f927a320b9b8375ed7a"
    },
    "b5fbedbcd9f5587fc1fd2c7e4c8b8b4c513bb10e9cc1b8d712e75843cf507315": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n\ncookie_match_pattern_property = wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n    all=all,\n    excluded_cookies=[\"excludedCookies\"],\n    included_cookies=[\"includedCookies\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\n\nCookieMatchPatternProperty cookieMatchPatternProperty = new CookieMatchPatternProperty {\n    All = all,\n    ExcludedCookies = new [] { \"excludedCookies\" },\n    IncludedCookies = new [] { \"includedCookies\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\n\nCookieMatchPatternProperty cookieMatchPatternProperty = CookieMatchPatternProperty.builder()\n        .all(all)\n        .excludedCookies(List.of(\"excludedCookies\"))\n        .includedCookies(List.of(\"includedCookies\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\n\ncookieMatchPatternProperty := &cookieMatchPatternProperty{\n\tall: all,\n\texcludedCookies: []*string{\n\t\tjsii.String(\"excludedCookies\"),\n\t},\n\tincludedCookies: []*string{\n\t\tjsii.String(\"includedCookies\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst cookieMatchPatternProperty: wafv2.CfnRuleGroup.CookieMatchPatternProperty = {\n  all: all,\n  excludedCookies: ['excludedCookies'],\n  includedCookies: ['includedCookies'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.CookieMatchPatternProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.CookieMatchPatternProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cookieMatchPatternProperty: wafv2.CfnRuleGroup.CookieMatchPatternProperty = {\n  all: all,\n  excludedCookies: ['excludedCookies'],\n  includedCookies: ['includedCookies'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "e6d112c144c8dd38fb6799dd0739334fd988b957f55f8ec152bd288565b79664"
    },
    "363df4daada49f74f017b24df7fc1600c16c639191908027b9233a8ec0642a62": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n\ncookies_property = wafv2.CfnRuleGroup.CookiesProperty(\n    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n        all=all,\n        excluded_cookies=[\"excludedCookies\"],\n        included_cookies=[\"includedCookies\"]\n    ),\n    match_scope=\"matchScope\",\n    oversize_handling=\"oversizeHandling\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\n\nCookiesProperty cookiesProperty = new CookiesProperty {\n    MatchPattern = new CookieMatchPatternProperty {\n        All = all,\n        ExcludedCookies = new [] { \"excludedCookies\" },\n        IncludedCookies = new [] { \"includedCookies\" }\n    },\n    MatchScope = \"matchScope\",\n    OversizeHandling = \"oversizeHandling\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\n\nCookiesProperty cookiesProperty = CookiesProperty.builder()\n        .matchPattern(CookieMatchPatternProperty.builder()\n                .all(all)\n                .excludedCookies(List.of(\"excludedCookies\"))\n                .includedCookies(List.of(\"includedCookies\"))\n                .build())\n        .matchScope(\"matchScope\")\n        .oversizeHandling(\"oversizeHandling\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\n\ncookiesProperty := &cookiesProperty{\n\tmatchPattern: &cookieMatchPatternProperty{\n\t\tall: all,\n\t\texcludedCookies: []*string{\n\t\t\tjsii.String(\"excludedCookies\"),\n\t\t},\n\t\tincludedCookies: []*string{\n\t\t\tjsii.String(\"includedCookies\"),\n\t\t},\n\t},\n\tmatchScope: jsii.String(\"matchScope\"),\n\toversizeHandling: jsii.String(\"oversizeHandling\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst cookiesProperty: wafv2.CfnRuleGroup.CookiesProperty = {\n  matchPattern: {\n    all: all,\n    excludedCookies: ['excludedCookies'],\n    includedCookies: ['includedCookies'],\n  },\n  matchScope: 'matchScope',\n  oversizeHandling: 'oversizeHandling',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.CookiesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.CookiesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cookiesProperty: wafv2.CfnRuleGroup.CookiesProperty = {\n  matchPattern: {\n    all: all,\n    excludedCookies: ['excludedCookies'],\n    includedCookies: ['includedCookies'],\n  },\n  matchScope: 'matchScope',\n  oversizeHandling: 'oversizeHandling',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 13,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "0b7c574e63e6918ae031565f39f6e1b367afdac6f2ec56bb5a81b963bb60c77a"
    },
    "045dc803163c4b2d5e93df1f67b5e42217e90dbb9eb6e5ff51a3d3354df9fdc4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncustom_response_body_property = wafv2.CfnRuleGroup.CustomResponseBodyProperty(\n    content=\"content\",\n    content_type=\"contentType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCustomResponseBodyProperty customResponseBodyProperty = new CustomResponseBodyProperty {\n    Content = \"content\",\n    ContentType = \"contentType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCustomResponseBodyProperty customResponseBodyProperty = CustomResponseBodyProperty.builder()\n        .content(\"content\")\n        .contentType(\"contentType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncustomResponseBodyProperty := &customResponseBodyProperty{\n\tcontent: jsii.String(\"content\"),\n\tcontentType: jsii.String(\"contentType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst customResponseBodyProperty: wafv2.CfnRuleGroup.CustomResponseBodyProperty = {\n  content: 'content',\n  contentType: 'contentType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.CustomResponseBodyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.CustomResponseBodyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customResponseBodyProperty: wafv2.CfnRuleGroup.CustomResponseBodyProperty = {\n  content: 'content',\n  contentType: 'contentType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "8190bc17c69798a41e5bd97058f599431fa2c40ec081c1ed86dd54e4629bbd0c"
    },
    "df2a93f642e506235dd8c859f595a2abbc580135adead26ce7f3b9479614ffaa": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nfield_to_match_property = wafv2.CfnRuleGroup.FieldToMatchProperty(\n    all_query_arguments=all_query_arguments,\n    body=wafv2.CfnRuleGroup.BodyProperty(\n        oversize_handling=\"oversizeHandling\"\n    ),\n    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n            all=all,\n            excluded_cookies=[\"excludedCookies\"],\n            included_cookies=[\"includedCookies\"]\n        ),\n        match_scope=\"matchScope\",\n        oversize_handling=\"oversizeHandling\"\n    ),\n    headers=wafv2.CfnRuleGroup.HeadersProperty(\n        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n            all=all,\n            excluded_headers=[\"excludedHeaders\"],\n            included_headers=[\"includedHeaders\"]\n        ),\n        match_scope=\"matchScope\",\n        oversize_handling=\"oversizeHandling\"\n    ),\n    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n            all=all,\n            included_paths=[\"includedPaths\"]\n        ),\n        match_scope=\"matchScope\",\n\n        # the properties below are optional\n        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n        oversize_handling=\"oversizeHandling\"\n    ),\n    method=method,\n    query_string=query_string,\n    single_header=single_header,\n    single_query_argument=single_query_argument,\n    uri_path=uri_path\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nFieldToMatchProperty fieldToMatchProperty = new FieldToMatchProperty {\n    AllQueryArguments = allQueryArguments,\n    Body = new BodyProperty {\n        OversizeHandling = \"oversizeHandling\"\n    },\n    Cookies = new CookiesProperty {\n        MatchPattern = new CookieMatchPatternProperty {\n            All = all,\n            ExcludedCookies = new [] { \"excludedCookies\" },\n            IncludedCookies = new [] { \"includedCookies\" }\n        },\n        MatchScope = \"matchScope\",\n        OversizeHandling = \"oversizeHandling\"\n    },\n    Headers = new HeadersProperty {\n        MatchPattern = new HeaderMatchPatternProperty {\n            All = all,\n            ExcludedHeaders = new [] { \"excludedHeaders\" },\n            IncludedHeaders = new [] { \"includedHeaders\" }\n        },\n        MatchScope = \"matchScope\",\n        OversizeHandling = \"oversizeHandling\"\n    },\n    JsonBody = new JsonBodyProperty {\n        MatchPattern = new JsonMatchPatternProperty {\n            All = all,\n            IncludedPaths = new [] { \"includedPaths\" }\n        },\n        MatchScope = \"matchScope\",\n\n        // the properties below are optional\n        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n        OversizeHandling = \"oversizeHandling\"\n    },\n    Method = method,\n    QueryString = queryString,\n    SingleHeader = singleHeader,\n    SingleQueryArgument = singleQueryArgument,\n    UriPath = uriPath\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nFieldToMatchProperty fieldToMatchProperty = FieldToMatchProperty.builder()\n        .allQueryArguments(allQueryArguments)\n        .body(BodyProperty.builder()\n                .oversizeHandling(\"oversizeHandling\")\n                .build())\n        .cookies(CookiesProperty.builder()\n                .matchPattern(CookieMatchPatternProperty.builder()\n                        .all(all)\n                        .excludedCookies(List.of(\"excludedCookies\"))\n                        .includedCookies(List.of(\"includedCookies\"))\n                        .build())\n                .matchScope(\"matchScope\")\n                .oversizeHandling(\"oversizeHandling\")\n                .build())\n        .headers(HeadersProperty.builder()\n                .matchPattern(HeaderMatchPatternProperty.builder()\n                        .all(all)\n                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                        .includedHeaders(List.of(\"includedHeaders\"))\n                        .build())\n                .matchScope(\"matchScope\")\n                .oversizeHandling(\"oversizeHandling\")\n                .build())\n        .jsonBody(JsonBodyProperty.builder()\n                .matchPattern(JsonMatchPatternProperty.builder()\n                        .all(all)\n                        .includedPaths(List.of(\"includedPaths\"))\n                        .build())\n                .matchScope(\"matchScope\")\n\n                // the properties below are optional\n                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                .oversizeHandling(\"oversizeHandling\")\n                .build())\n        .method(method)\n        .queryString(queryString)\n        .singleHeader(singleHeader)\n        .singleQueryArgument(singleQueryArgument)\n        .uriPath(uriPath)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nfieldToMatchProperty := &fieldToMatchProperty{\n\tallQueryArguments: allQueryArguments,\n\tbody: &bodyProperty{\n\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t},\n\tcookies: &cookiesProperty{\n\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\tall: all,\n\t\t\texcludedCookies: []*string{\n\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t},\n\t\t\tincludedCookies: []*string{\n\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t},\n\t\t},\n\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t},\n\theaders: &headersProperty{\n\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\tall: all,\n\t\t\texcludedHeaders: []*string{\n\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t},\n\t\t\tincludedHeaders: []*string{\n\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t},\n\t\t},\n\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t},\n\tjsonBody: &jsonBodyProperty{\n\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\tall: all,\n\t\t\tincludedPaths: []*string{\n\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t},\n\t\t},\n\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t// the properties below are optional\n\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t},\n\tmethod: method,\n\tqueryString: queryString,\n\tsingleHeader: singleHeader,\n\tsingleQueryArgument: singleQueryArgument,\n\turiPath: uriPath,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst fieldToMatchProperty: wafv2.CfnRuleGroup.FieldToMatchProperty = {\n  allQueryArguments: allQueryArguments,\n  body: {\n    oversizeHandling: 'oversizeHandling',\n  },\n  cookies: {\n    matchPattern: {\n      all: all,\n      excludedCookies: ['excludedCookies'],\n      includedCookies: ['includedCookies'],\n    },\n    matchScope: 'matchScope',\n    oversizeHandling: 'oversizeHandling',\n  },\n  headers: {\n    matchPattern: {\n      all: all,\n      excludedHeaders: ['excludedHeaders'],\n      includedHeaders: ['includedHeaders'],\n    },\n    matchScope: 'matchScope',\n    oversizeHandling: 'oversizeHandling',\n  },\n  jsonBody: {\n    matchPattern: {\n      all: all,\n      includedPaths: ['includedPaths'],\n    },\n    matchScope: 'matchScope',\n\n    // the properties below are optional\n    invalidFallbackBehavior: 'invalidFallbackBehavior',\n    oversizeHandling: 'oversizeHandling',\n  },\n  method: method,\n  queryString: queryString,\n  singleHeader: singleHeader,\n  singleQueryArgument: singleQueryArgument,\n  uriPath: uriPath,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.FieldToMatchProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.FieldToMatchProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst fieldToMatchProperty: wafv2.CfnRuleGroup.FieldToMatchProperty = {\n  allQueryArguments: allQueryArguments,\n  body: {\n    oversizeHandling: 'oversizeHandling',\n  },\n  cookies: {\n    matchPattern: {\n      all: all,\n      excludedCookies: ['excludedCookies'],\n      includedCookies: ['includedCookies'],\n    },\n    matchScope: 'matchScope',\n    oversizeHandling: 'oversizeHandling',\n  },\n  headers: {\n    matchPattern: {\n      all: all,\n      excludedHeaders: ['excludedHeaders'],\n      includedHeaders: ['includedHeaders'],\n    },\n    matchScope: 'matchScope',\n    oversizeHandling: 'oversizeHandling',\n  },\n  jsonBody: {\n    matchPattern: {\n      all: all,\n      includedPaths: ['includedPaths'],\n    },\n    matchScope: 'matchScope',\n\n    // the properties below are optional\n    invalidFallbackBehavior: 'invalidFallbackBehavior',\n    oversizeHandling: 'oversizeHandling',\n  },\n  method: method,\n  queryString: queryString,\n  singleHeader: singleHeader,\n  singleQueryArgument: singleQueryArgument,\n  uriPath: uriPath,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 14,
        "75": 50,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 5,
        "193": 8,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 29,
        "290": 1
      },
      "fqnsFingerprint": "eba48ea84815ca75cb1c5b208c8e1b6cfb543126b9529e0ee52ac8fa6995364c"
    },
    "7ae4ca651793eeae59afac2e9040577998d37668d22793b519847e24e02cccc4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nforwarded_iPConfiguration_property = wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n    fallback_behavior=\"fallbackBehavior\",\n    header_name=\"headerName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nForwardedIPConfigurationProperty forwardedIPConfigurationProperty = new ForwardedIPConfigurationProperty {\n    FallbackBehavior = \"fallbackBehavior\",\n    HeaderName = \"headerName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nForwardedIPConfigurationProperty forwardedIPConfigurationProperty = ForwardedIPConfigurationProperty.builder()\n        .fallbackBehavior(\"fallbackBehavior\")\n        .headerName(\"headerName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nforwardedIPConfigurationProperty := &forwardedIPConfigurationProperty{\n\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\theaderName: jsii.String(\"headerName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst forwardedIPConfigurationProperty: wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty = {\n  fallbackBehavior: 'fallbackBehavior',\n  headerName: 'headerName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst forwardedIPConfigurationProperty: wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty = {\n  fallbackBehavior: 'fallbackBehavior',\n  headerName: 'headerName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "a1f35fb1b11582feeb119c9cafee072a2d7e4d0e27a2305d91aba8a4da391ff1"
    },
    "25bbfcd1bcef34c16ed0609316fa00220eb1e2e7e3976431544176e8c59d6d05": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ngeo_match_statement_property = wafv2.CfnRuleGroup.GeoMatchStatementProperty(\n    country_codes=[\"countryCodes\"],\n    forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n        fallback_behavior=\"fallbackBehavior\",\n        header_name=\"headerName\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nGeoMatchStatementProperty geoMatchStatementProperty = new GeoMatchStatementProperty {\n    CountryCodes = new [] { \"countryCodes\" },\n    ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n        FallbackBehavior = \"fallbackBehavior\",\n        HeaderName = \"headerName\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nGeoMatchStatementProperty geoMatchStatementProperty = GeoMatchStatementProperty.builder()\n        .countryCodes(List.of(\"countryCodes\"))\n        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                .fallbackBehavior(\"fallbackBehavior\")\n                .headerName(\"headerName\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ngeoMatchStatementProperty := &geoMatchStatementProperty{\n\tcountryCodes: []*string{\n\t\tjsii.String(\"countryCodes\"),\n\t},\n\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\theaderName: jsii.String(\"headerName\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst geoMatchStatementProperty: wafv2.CfnRuleGroup.GeoMatchStatementProperty = {\n  countryCodes: ['countryCodes'],\n  forwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.GeoMatchStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.GeoMatchStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst geoMatchStatementProperty: wafv2.CfnRuleGroup.GeoMatchStatementProperty = {\n  countryCodes: ['countryCodes'],\n  forwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "b8a77749ced1a35eb6f78ec9cdfe557ad7debb47d598038f1a4fd6316f1fb6f2"
    },
    "4940c3d8e371c550f1af4b5cd1b01a2a9091eb84ee9146517cc3d7beee1ce532": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n\nheader_match_pattern_property = wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n    all=all,\n    excluded_headers=[\"excludedHeaders\"],\n    included_headers=[\"includedHeaders\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\n\nHeaderMatchPatternProperty headerMatchPatternProperty = new HeaderMatchPatternProperty {\n    All = all,\n    ExcludedHeaders = new [] { \"excludedHeaders\" },\n    IncludedHeaders = new [] { \"includedHeaders\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\n\nHeaderMatchPatternProperty headerMatchPatternProperty = HeaderMatchPatternProperty.builder()\n        .all(all)\n        .excludedHeaders(List.of(\"excludedHeaders\"))\n        .includedHeaders(List.of(\"includedHeaders\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\n\nheaderMatchPatternProperty := &headerMatchPatternProperty{\n\tall: all,\n\texcludedHeaders: []*string{\n\t\tjsii.String(\"excludedHeaders\"),\n\t},\n\tincludedHeaders: []*string{\n\t\tjsii.String(\"includedHeaders\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst headerMatchPatternProperty: wafv2.CfnRuleGroup.HeaderMatchPatternProperty = {\n  all: all,\n  excludedHeaders: ['excludedHeaders'],\n  includedHeaders: ['includedHeaders'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.HeaderMatchPatternProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.HeaderMatchPatternProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst headerMatchPatternProperty: wafv2.CfnRuleGroup.HeaderMatchPatternProperty = {\n  all: all,\n  excludedHeaders: ['excludedHeaders'],\n  includedHeaders: ['includedHeaders'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "c34bcabfc20b5257c7a64e7964cc3237df50e2d6f7f03abd649a4b8015d29a12"
    },
    "b23d4243b8eec4181064c4da13b75438df45560e1c80ca397582a8fde660750e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n\nheaders_property = wafv2.CfnRuleGroup.HeadersProperty(\n    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n        all=all,\n        excluded_headers=[\"excludedHeaders\"],\n        included_headers=[\"includedHeaders\"]\n    ),\n    match_scope=\"matchScope\",\n    oversize_handling=\"oversizeHandling\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\n\nHeadersProperty headersProperty = new HeadersProperty {\n    MatchPattern = new HeaderMatchPatternProperty {\n        All = all,\n        ExcludedHeaders = new [] { \"excludedHeaders\" },\n        IncludedHeaders = new [] { \"includedHeaders\" }\n    },\n    MatchScope = \"matchScope\",\n    OversizeHandling = \"oversizeHandling\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\n\nHeadersProperty headersProperty = HeadersProperty.builder()\n        .matchPattern(HeaderMatchPatternProperty.builder()\n                .all(all)\n                .excludedHeaders(List.of(\"excludedHeaders\"))\n                .includedHeaders(List.of(\"includedHeaders\"))\n                .build())\n        .matchScope(\"matchScope\")\n        .oversizeHandling(\"oversizeHandling\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\n\nheadersProperty := &headersProperty{\n\tmatchPattern: &headerMatchPatternProperty{\n\t\tall: all,\n\t\texcludedHeaders: []*string{\n\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t},\n\t\tincludedHeaders: []*string{\n\t\t\tjsii.String(\"includedHeaders\"),\n\t\t},\n\t},\n\tmatchScope: jsii.String(\"matchScope\"),\n\toversizeHandling: jsii.String(\"oversizeHandling\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst headersProperty: wafv2.CfnRuleGroup.HeadersProperty = {\n  matchPattern: {\n    all: all,\n    excludedHeaders: ['excludedHeaders'],\n    includedHeaders: ['includedHeaders'],\n  },\n  matchScope: 'matchScope',\n  oversizeHandling: 'oversizeHandling',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.HeadersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.HeadersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst headersProperty: wafv2.CfnRuleGroup.HeadersProperty = {\n  matchPattern: {\n    all: all,\n    excludedHeaders: ['excludedHeaders'],\n    includedHeaders: ['includedHeaders'],\n  },\n  matchScope: 'matchScope',\n  oversizeHandling: 'oversizeHandling',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 13,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "dae85b9b47ff97087a628190b4cbbb976ca5c8b3d584e28de758450e1b0cd3e0"
    },
    "80d212ffca5687440b16dddfec786f6f28bbe2aedd9e2193da1ea6bfec1ef951": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ni_pSet_forwarded_iPConfiguration_property = {\n    \"fallback_behavior\": \"fallbackBehavior\",\n    \"header_name\": \"headerName\",\n    \"position\": \"position\"\n}",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nIPSetForwardedIPConfigurationProperty iPSetForwardedIPConfigurationProperty = new Dictionary<string, string> {\n    { \"fallbackBehavior\", \"fallbackBehavior\" },\n    { \"headerName\", \"headerName\" },\n    { \"position\", \"position\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nIPSetForwardedIPConfigurationProperty iPSetForwardedIPConfigurationProperty = Map.of(\n        \"fallbackBehavior\", \"fallbackBehavior\",\n        \"headerName\", \"headerName\",\n        \"position\", \"position\");",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\niPSetForwardedIPConfigurationProperty := map[string]*string{\n\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\"headerName\": jsii.String(\"headerName\"),\n\t\"position\": jsii.String(\"position\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst iPSetForwardedIPConfigurationProperty: wafv2.CfnRuleGroup.IPSetForwardedIPConfigurationProperty = {\n  fallbackBehavior: 'fallbackBehavior',\n  headerName: 'headerName',\n  position: 'position',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.IPSetForwardedIPConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.IPSetForwardedIPConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst iPSetForwardedIPConfigurationProperty: wafv2.CfnRuleGroup.IPSetForwardedIPConfigurationProperty = {\n  fallbackBehavior: 'fallbackBehavior',\n  headerName: 'headerName',\n  position: 'position',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "9ecc9754a52a50b5e0072a0169221d12d3ed1d8b812699623bee6d08a9dd1f21"
    },
    "f5071bdc93d372700024721c95f527a708f8e62a9679db01e3491cf9a8485593": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ni_pSet_reference_statement_property = {\n    \"arn\": \"arn\",\n\n    # the properties below are optional\n    \"ip_set_forwarded_ip_config\": {\n        \"fallback_behavior\": \"fallbackBehavior\",\n        \"header_name\": \"headerName\",\n        \"position\": \"position\"\n    }\n}",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nIPSetReferenceStatementProperty iPSetReferenceStatementProperty = new Dictionary<string, object> {\n    { \"arn\", \"arn\" },\n\n    // the properties below are optional\n    { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n        { \"fallbackBehavior\", \"fallbackBehavior\" },\n        { \"headerName\", \"headerName\" },\n        { \"position\", \"position\" }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nIPSetReferenceStatementProperty iPSetReferenceStatementProperty = Map.of(\n        \"arn\", \"arn\",\n\n        // the properties below are optional\n        \"ipSetForwardedIpConfig\", Map.of(\n                \"fallbackBehavior\", \"fallbackBehavior\",\n                \"headerName\", \"headerName\",\n                \"position\", \"position\"));",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\niPSetReferenceStatementProperty := map[string]interface{}{\n\t\"arn\": jsii.String(\"arn\"),\n\n\t// the properties below are optional\n\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\"position\": jsii.String(\"position\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst iPSetReferenceStatementProperty: wafv2.CfnRuleGroup.IPSetReferenceStatementProperty = {\n  arn: 'arn',\n\n  // the properties below are optional\n  ipSetForwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n    position: 'position',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.IPSetReferenceStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.IPSetReferenceStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst iPSetReferenceStatementProperty: wafv2.CfnRuleGroup.IPSetReferenceStatementProperty = {\n  arn: 'arn',\n\n  // the properties below are optional\n  ipSetForwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n    position: 'position',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "af6d5b8780ebe26b1a1ef7c7c7e3466ebd097e6cfbafda8ca2eab655453d4938"
    },
    "6b82c93edfe83a7d5003e93f9c383153e06adf80a05bcbcb872e40ddf7e33884": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nimmunity_time_property_property = wafv2.CfnRuleGroup.ImmunityTimePropertyProperty(\n    immunity_time=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nImmunityTimePropertyProperty immunityTimePropertyProperty = new ImmunityTimePropertyProperty {\n    ImmunityTime = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nImmunityTimePropertyProperty immunityTimePropertyProperty = ImmunityTimePropertyProperty.builder()\n        .immunityTime(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nimmunityTimePropertyProperty := &immunityTimePropertyProperty{\n\timmunityTime: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst immunityTimePropertyProperty: wafv2.CfnRuleGroup.ImmunityTimePropertyProperty = {\n  immunityTime: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.ImmunityTimePropertyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.ImmunityTimePropertyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst immunityTimePropertyProperty: wafv2.CfnRuleGroup.ImmunityTimePropertyProperty = {\n  immunityTime: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "54856fbbce09261f170688a4e2def04b45c5249e2b98a915fefa5e58a1954dd0"
    },
    "af7f7b7e8442a13b380fd85d435e25ef3390857efabf001e030f431ec9bd6408": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n\njson_body_property = wafv2.CfnRuleGroup.JsonBodyProperty(\n    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n        all=all,\n        included_paths=[\"includedPaths\"]\n    ),\n    match_scope=\"matchScope\",\n\n    # the properties below are optional\n    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n    oversize_handling=\"oversizeHandling\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\n\nJsonBodyProperty jsonBodyProperty = new JsonBodyProperty {\n    MatchPattern = new JsonMatchPatternProperty {\n        All = all,\n        IncludedPaths = new [] { \"includedPaths\" }\n    },\n    MatchScope = \"matchScope\",\n\n    // the properties below are optional\n    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n    OversizeHandling = \"oversizeHandling\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\n\nJsonBodyProperty jsonBodyProperty = JsonBodyProperty.builder()\n        .matchPattern(JsonMatchPatternProperty.builder()\n                .all(all)\n                .includedPaths(List.of(\"includedPaths\"))\n                .build())\n        .matchScope(\"matchScope\")\n\n        // the properties below are optional\n        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n        .oversizeHandling(\"oversizeHandling\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\n\njsonBodyProperty := &jsonBodyProperty{\n\tmatchPattern: &jsonMatchPatternProperty{\n\t\tall: all,\n\t\tincludedPaths: []*string{\n\t\t\tjsii.String(\"includedPaths\"),\n\t\t},\n\t},\n\tmatchScope: jsii.String(\"matchScope\"),\n\n\t// the properties below are optional\n\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\toversizeHandling: jsii.String(\"oversizeHandling\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst jsonBodyProperty: wafv2.CfnRuleGroup.JsonBodyProperty = {\n  matchPattern: {\n    all: all,\n    includedPaths: ['includedPaths'],\n  },\n  matchScope: 'matchScope',\n\n  // the properties below are optional\n  invalidFallbackBehavior: 'invalidFallbackBehavior',\n  oversizeHandling: 'oversizeHandling',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.JsonBodyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.JsonBodyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jsonBodyProperty: wafv2.CfnRuleGroup.JsonBodyProperty = {\n  matchPattern: {\n    all: all,\n    includedPaths: ['includedPaths'],\n  },\n  matchScope: 'matchScope',\n\n  // the properties below are optional\n  invalidFallbackBehavior: 'invalidFallbackBehavior',\n  oversizeHandling: 'oversizeHandling',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 13,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "93b7e73b32924fb3718cb0459859ec2b54c8481569a3e718938ea1d5811b00ca"
    },
    "3d27d778e35ae993f0555eb4a4c3f1b2266c4b82b7311fe85078023498839c6f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n\njson_match_pattern_property = wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n    all=all,\n    included_paths=[\"includedPaths\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\n\nJsonMatchPatternProperty jsonMatchPatternProperty = new JsonMatchPatternProperty {\n    All = all,\n    IncludedPaths = new [] { \"includedPaths\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\n\nJsonMatchPatternProperty jsonMatchPatternProperty = JsonMatchPatternProperty.builder()\n        .all(all)\n        .includedPaths(List.of(\"includedPaths\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\n\njsonMatchPatternProperty := &jsonMatchPatternProperty{\n\tall: all,\n\tincludedPaths: []*string{\n\t\tjsii.String(\"includedPaths\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst jsonMatchPatternProperty: wafv2.CfnRuleGroup.JsonMatchPatternProperty = {\n  all: all,\n  includedPaths: ['includedPaths'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.JsonMatchPatternProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.JsonMatchPatternProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jsonMatchPatternProperty: wafv2.CfnRuleGroup.JsonMatchPatternProperty = {\n  all: all,\n  includedPaths: ['includedPaths'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "0006597280ae64a192eb7c255c1d2b99e9318f55bcae67ca37925a96f489ffa8"
    },
    "fb55939a5aebef5c4f8c84fa097985ceadeb57519b6bca6895ad739b7988a8b2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nlabel_match_statement_property = wafv2.CfnRuleGroup.LabelMatchStatementProperty(\n    key=\"key\",\n    scope=\"scope\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nLabelMatchStatementProperty labelMatchStatementProperty = new LabelMatchStatementProperty {\n    Key = \"key\",\n    Scope = \"scope\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nLabelMatchStatementProperty labelMatchStatementProperty = LabelMatchStatementProperty.builder()\n        .key(\"key\")\n        .scope(\"scope\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nlabelMatchStatementProperty := &labelMatchStatementProperty{\n\tkey: jsii.String(\"key\"),\n\tscope: jsii.String(\"scope\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst labelMatchStatementProperty: wafv2.CfnRuleGroup.LabelMatchStatementProperty = {\n  key: 'key',\n  scope: 'scope',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelMatchStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelMatchStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst labelMatchStatementProperty: wafv2.CfnRuleGroup.LabelMatchStatementProperty = {\n  key: 'key',\n  scope: 'scope',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "7c0c01e665a61df6f8da046b6cd5459874ecd2ecb1e02263d5e6f5b6d810a0a7"
    },
    "28f1b44cbd04d7907b23810b105af1aadad85c4dc3bfe23c49471947b3e5e77b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nlabel_property = wafv2.CfnRuleGroup.LabelProperty(\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nLabelProperty labelProperty = new LabelProperty {\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nLabelProperty labelProperty = LabelProperty.builder()\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nlabelProperty := &labelProperty{\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst labelProperty: wafv2.CfnRuleGroup.LabelProperty = {\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst labelProperty: wafv2.CfnRuleGroup.LabelProperty = {\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "5b11117ea6c678d7ade16794e10a54506d57099aba651e51fb69df936a8ef143"
    },
    "1f0f8f29900512bbb9e2479c5cadff2cd34a513e4b23c3b8f9b0f908ca647b25": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nlabel_summary_property = wafv2.CfnRuleGroup.LabelSummaryProperty(\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nLabelSummaryProperty labelSummaryProperty = new LabelSummaryProperty {\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nLabelSummaryProperty labelSummaryProperty = LabelSummaryProperty.builder()\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nlabelSummaryProperty := &labelSummaryProperty{\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst labelSummaryProperty: wafv2.CfnRuleGroup.LabelSummaryProperty = {\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelSummaryProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelSummaryProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst labelSummaryProperty: wafv2.CfnRuleGroup.LabelSummaryProperty = {\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "95ada8a94daa3eacc616e36667621a3c958ded940bb2b9c81f99220e3a19c354"
    },
    "9d548b41461253cda437e8c7e0d66fd30cdbca1eceb8b7d112f5b8dd212020e2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnRuleGroup.StatementProperty\n# uri_path: Any\n\nnot_statement_property = wafv2.CfnRuleGroup.NotStatementProperty(\n    statement=wafv2.CfnRuleGroup.StatementProperty(\n        and_statement=wafv2.CfnRuleGroup.AndStatementProperty(\n            statements=[statement_property_]\n        ),\n        byte_match_statement=wafv2.CfnRuleGroup.ByteMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            positional_constraint=\"positionalConstraint\",\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            search_string=\"searchString\",\n            search_string_base64=\"searchStringBase64\"\n        ),\n        geo_match_statement=wafv2.CfnRuleGroup.GeoMatchStatementProperty(\n            country_codes=[\"countryCodes\"],\n            forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            )\n        ),\n        ip_set_reference_statement={\n            \"arn\": \"arn\",\n\n            # the properties below are optional\n            \"ip_set_forwarded_ip_config\": {\n                \"fallback_behavior\": \"fallbackBehavior\",\n                \"header_name\": \"headerName\",\n                \"position\": \"position\"\n            }\n        },\n        label_match_statement=wafv2.CfnRuleGroup.LabelMatchStatementProperty(\n            key=\"key\",\n            scope=\"scope\"\n        ),\n        not_statement=wafv2.CfnRuleGroup.NotStatementProperty(\n            statement=statement_property_\n        ),\n        or_statement=wafv2.CfnRuleGroup.OrStatementProperty(\n            statements=[statement_property_]\n        ),\n        rate_based_statement=wafv2.CfnRuleGroup.RateBasedStatementProperty(\n            aggregate_key_type=\"aggregateKeyType\",\n            limit=123,\n\n            # the properties below are optional\n            forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            ),\n            scope_down_statement=statement_property_\n        ),\n        regex_match_statement=wafv2.CfnRuleGroup.RegexMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            regex_string=\"regexString\",\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        regex_pattern_set_reference_statement=wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty(\n            arn=\"arn\",\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        size_constraint_statement=wafv2.CfnRuleGroup.SizeConstraintStatementProperty(\n            comparison_operator=\"comparisonOperator\",\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            size=123,\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        sqli_match_statement=wafv2.CfnRuleGroup.SqliMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            sensitivity_level=\"sensitivityLevel\"\n        ),\n        xss_match_statement=wafv2.CfnRuleGroup.XssMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nNotStatementProperty notStatementProperty = new NotStatementProperty {\n    Statement = new StatementProperty {\n        AndStatement = new AndStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        ByteMatchStatement = new ByteMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            PositionalConstraint = \"positionalConstraint\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SearchString = \"searchString\",\n            SearchStringBase64 = \"searchStringBase64\"\n        },\n        GeoMatchStatement = new GeoMatchStatementProperty {\n            CountryCodes = new [] { \"countryCodes\" },\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            }\n        },\n        IpSetReferenceStatement = new Dictionary<string, object> {\n            { \"arn\", \"arn\" },\n\n            // the properties below are optional\n            { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                { \"fallbackBehavior\", \"fallbackBehavior\" },\n                { \"headerName\", \"headerName\" },\n                { \"position\", \"position\" }\n            } }\n        },\n        LabelMatchStatement = new LabelMatchStatementProperty {\n            Key = \"key\",\n            Scope = \"scope\"\n        },\n        NotStatement = new NotStatementProperty {\n            Statement = statementProperty_\n        },\n        OrStatement = new OrStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        RateBasedStatement = new RateBasedStatementProperty {\n            AggregateKeyType = \"aggregateKeyType\",\n            Limit = 123,\n\n            // the properties below are optional\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            },\n            ScopeDownStatement = statementProperty_\n        },\n        RegexMatchStatement = new RegexMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            RegexString = \"regexString\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n            Arn = \"arn\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SizeConstraintStatement = new SizeConstraintStatementProperty {\n            ComparisonOperator = \"comparisonOperator\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            Size = 123,\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SqliMatchStatement = new SqliMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SensitivityLevel = \"sensitivityLevel\"\n        },\n        XssMatchStatement = new XssMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nNotStatementProperty notStatementProperty = NotStatementProperty.builder()\n        .statement(StatementProperty.builder()\n                .andStatement(AndStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .byteMatchStatement(ByteMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .positionalConstraint(\"positionalConstraint\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .searchString(\"searchString\")\n                        .searchStringBase64(\"searchStringBase64\")\n                        .build())\n                .geoMatchStatement(GeoMatchStatementProperty.builder()\n                        .countryCodes(List.of(\"countryCodes\"))\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .build())\n                .ipSetReferenceStatement(Map.of(\n                        \"arn\", \"arn\",\n\n                        // the properties below are optional\n                        \"ipSetForwardedIpConfig\", Map.of(\n                                \"fallbackBehavior\", \"fallbackBehavior\",\n                                \"headerName\", \"headerName\",\n                                \"position\", \"position\")))\n                .labelMatchStatement(LabelMatchStatementProperty.builder()\n                        .key(\"key\")\n                        .scope(\"scope\")\n                        .build())\n                .notStatement(NotStatementProperty.builder()\n                        .statement(statementProperty_)\n                        .build())\n                .orStatement(OrStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .rateBasedStatement(RateBasedStatementProperty.builder()\n                        .aggregateKeyType(\"aggregateKeyType\")\n                        .limit(123)\n\n                        // the properties below are optional\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .scopeDownStatement(statementProperty_)\n                        .build())\n                .regexMatchStatement(RegexMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .regexString(\"regexString\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                        .comparisonOperator(\"comparisonOperator\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .size(123)\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .sensitivityLevel(\"sensitivityLevel\")\n                        .build())\n                .xssMatchStatement(XssMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\nnotStatementProperty := &notStatementProperty{\n\tstatement: &statementProperty{\n\t\tandStatement: &andStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t},\n\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\tcountryCodes: []*string{\n\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t},\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t},\n\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t// the properties below are optional\n\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t},\n\t\t},\n\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tscope: jsii.String(\"scope\"),\n\t\t},\n\t\tnotStatement: &notStatementProperty{\n\t\t\tstatement: statementProperty_,\n\t\t},\n\t\torStatement: &orStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\tlimit: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t\tscopeDownStatement: statementProperty_,\n\t\t},\n\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\tarn: jsii.String(\"arn\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tsize: jsii.Number(123),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t},\n\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst notStatementProperty: wafv2.CfnRuleGroup.NotStatementProperty = {\n  statement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.NotStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.NotStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notStatementProperty: wafv2.CfnRuleGroup.NotStatementProperty = {\n  statement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 8,
        "10": 104,
        "75": 314,
        "125": 7,
        "130": 8,
        "153": 4,
        "169": 2,
        "192": 39,
        "193": 72,
        "225": 9,
        "242": 9,
        "243": 9,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 240,
        "290": 1
      },
      "fqnsFingerprint": "5735826cc8cbae7eeaa3c2886076f8b8c8ea26225a98f95bc668c92dc04b76fd"
    },
    "cc19fb46ee32427b389233b6903437c4cb00b3fc057fe518a196091d913eb609": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnRuleGroup.StatementProperty\n# uri_path: Any\n\nor_statement_property = wafv2.CfnRuleGroup.OrStatementProperty(\n    statements=[wafv2.CfnRuleGroup.StatementProperty(\n        and_statement=wafv2.CfnRuleGroup.AndStatementProperty(\n            statements=[statement_property_]\n        ),\n        byte_match_statement=wafv2.CfnRuleGroup.ByteMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            positional_constraint=\"positionalConstraint\",\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            search_string=\"searchString\",\n            search_string_base64=\"searchStringBase64\"\n        ),\n        geo_match_statement=wafv2.CfnRuleGroup.GeoMatchStatementProperty(\n            country_codes=[\"countryCodes\"],\n            forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            )\n        ),\n        ip_set_reference_statement={\n            \"arn\": \"arn\",\n\n            # the properties below are optional\n            \"ip_set_forwarded_ip_config\": {\n                \"fallback_behavior\": \"fallbackBehavior\",\n                \"header_name\": \"headerName\",\n                \"position\": \"position\"\n            }\n        },\n        label_match_statement=wafv2.CfnRuleGroup.LabelMatchStatementProperty(\n            key=\"key\",\n            scope=\"scope\"\n        ),\n        not_statement=wafv2.CfnRuleGroup.NotStatementProperty(\n            statement=statement_property_\n        ),\n        or_statement=wafv2.CfnRuleGroup.OrStatementProperty(\n            statements=[statement_property_]\n        ),\n        rate_based_statement=wafv2.CfnRuleGroup.RateBasedStatementProperty(\n            aggregate_key_type=\"aggregateKeyType\",\n            limit=123,\n\n            # the properties below are optional\n            forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            ),\n            scope_down_statement=statement_property_\n        ),\n        regex_match_statement=wafv2.CfnRuleGroup.RegexMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            regex_string=\"regexString\",\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        regex_pattern_set_reference_statement=wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty(\n            arn=\"arn\",\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        size_constraint_statement=wafv2.CfnRuleGroup.SizeConstraintStatementProperty(\n            comparison_operator=\"comparisonOperator\",\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            size=123,\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        sqli_match_statement=wafv2.CfnRuleGroup.SqliMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            sensitivity_level=\"sensitivityLevel\"\n        ),\n        xss_match_statement=wafv2.CfnRuleGroup.XssMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nOrStatementProperty orStatementProperty = new OrStatementProperty {\n    Statements = new [] { new StatementProperty {\n        AndStatement = new AndStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        ByteMatchStatement = new ByteMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            PositionalConstraint = \"positionalConstraint\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SearchString = \"searchString\",\n            SearchStringBase64 = \"searchStringBase64\"\n        },\n        GeoMatchStatement = new GeoMatchStatementProperty {\n            CountryCodes = new [] { \"countryCodes\" },\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            }\n        },\n        IpSetReferenceStatement = new Dictionary<string, object> {\n            { \"arn\", \"arn\" },\n\n            // the properties below are optional\n            { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                { \"fallbackBehavior\", \"fallbackBehavior\" },\n                { \"headerName\", \"headerName\" },\n                { \"position\", \"position\" }\n            } }\n        },\n        LabelMatchStatement = new LabelMatchStatementProperty {\n            Key = \"key\",\n            Scope = \"scope\"\n        },\n        NotStatement = new NotStatementProperty {\n            Statement = statementProperty_\n        },\n        OrStatement = new OrStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        RateBasedStatement = new RateBasedStatementProperty {\n            AggregateKeyType = \"aggregateKeyType\",\n            Limit = 123,\n\n            // the properties below are optional\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            },\n            ScopeDownStatement = statementProperty_\n        },\n        RegexMatchStatement = new RegexMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            RegexString = \"regexString\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n            Arn = \"arn\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SizeConstraintStatement = new SizeConstraintStatementProperty {\n            ComparisonOperator = \"comparisonOperator\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            Size = 123,\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SqliMatchStatement = new SqliMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SensitivityLevel = \"sensitivityLevel\"\n        },\n        XssMatchStatement = new XssMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nOrStatementProperty orStatementProperty = OrStatementProperty.builder()\n        .statements(List.of(StatementProperty.builder()\n                .andStatement(AndStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .byteMatchStatement(ByteMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .positionalConstraint(\"positionalConstraint\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .searchString(\"searchString\")\n                        .searchStringBase64(\"searchStringBase64\")\n                        .build())\n                .geoMatchStatement(GeoMatchStatementProperty.builder()\n                        .countryCodes(List.of(\"countryCodes\"))\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .build())\n                .ipSetReferenceStatement(Map.of(\n                        \"arn\", \"arn\",\n\n                        // the properties below are optional\n                        \"ipSetForwardedIpConfig\", Map.of(\n                                \"fallbackBehavior\", \"fallbackBehavior\",\n                                \"headerName\", \"headerName\",\n                                \"position\", \"position\")))\n                .labelMatchStatement(LabelMatchStatementProperty.builder()\n                        .key(\"key\")\n                        .scope(\"scope\")\n                        .build())\n                .notStatement(NotStatementProperty.builder()\n                        .statement(statementProperty_)\n                        .build())\n                .orStatement(OrStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .rateBasedStatement(RateBasedStatementProperty.builder()\n                        .aggregateKeyType(\"aggregateKeyType\")\n                        .limit(123)\n\n                        // the properties below are optional\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .scopeDownStatement(statementProperty_)\n                        .build())\n                .regexMatchStatement(RegexMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .regexString(\"regexString\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                        .comparisonOperator(\"comparisonOperator\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .size(123)\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .sensitivityLevel(\"sensitivityLevel\")\n                        .build())\n                .xssMatchStatement(XssMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\norStatementProperty := &orStatementProperty{\n\tstatements: []interface{}{\n\t\t&statementProperty{\n\t\t\tandStatement: &andStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t},\n\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t},\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t},\n\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\tstatement: statementProperty_,\n\t\t\t},\n\t\t\torStatement: &orStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t},\n\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tsize: jsii.Number(123),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t},\n\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst orStatementProperty: wafv2.CfnRuleGroup.OrStatementProperty = {\n  statements: [{\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.OrStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.OrStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst orStatementProperty: wafv2.CfnRuleGroup.OrStatementProperty = {\n  statements: [{\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 8,
        "10": 104,
        "75": 314,
        "125": 7,
        "130": 8,
        "153": 4,
        "169": 2,
        "192": 40,
        "193": 72,
        "225": 9,
        "242": 9,
        "243": 9,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 240,
        "290": 1
      },
      "fqnsFingerprint": "1c251739e0f3dae595889b2442a3091be5ac70da935eff28351f1c715c208f6b"
    },
    "08db8fe2862feb4a47643a0f96081f1296dc7b3e8fc4ad9e36e99649e29cb59d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnRuleGroup.StatementProperty\n# uri_path: Any\n\nrate_based_statement_property = wafv2.CfnRuleGroup.RateBasedStatementProperty(\n    aggregate_key_type=\"aggregateKeyType\",\n    limit=123,\n\n    # the properties below are optional\n    forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n        fallback_behavior=\"fallbackBehavior\",\n        header_name=\"headerName\"\n    ),\n    scope_down_statement=wafv2.CfnRuleGroup.StatementProperty(\n        and_statement=wafv2.CfnRuleGroup.AndStatementProperty(\n            statements=[statement_property_]\n        ),\n        byte_match_statement=wafv2.CfnRuleGroup.ByteMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            positional_constraint=\"positionalConstraint\",\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            search_string=\"searchString\",\n            search_string_base64=\"searchStringBase64\"\n        ),\n        geo_match_statement=wafv2.CfnRuleGroup.GeoMatchStatementProperty(\n            country_codes=[\"countryCodes\"],\n            forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            )\n        ),\n        ip_set_reference_statement={\n            \"arn\": \"arn\",\n\n            # the properties below are optional\n            \"ip_set_forwarded_ip_config\": {\n                \"fallback_behavior\": \"fallbackBehavior\",\n                \"header_name\": \"headerName\",\n                \"position\": \"position\"\n            }\n        },\n        label_match_statement=wafv2.CfnRuleGroup.LabelMatchStatementProperty(\n            key=\"key\",\n            scope=\"scope\"\n        ),\n        not_statement=wafv2.CfnRuleGroup.NotStatementProperty(\n            statement=statement_property_\n        ),\n        or_statement=wafv2.CfnRuleGroup.OrStatementProperty(\n            statements=[statement_property_]\n        ),\n        rate_based_statement=wafv2.CfnRuleGroup.RateBasedStatementProperty(\n            aggregate_key_type=\"aggregateKeyType\",\n            limit=123,\n\n            # the properties below are optional\n            forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            ),\n            scope_down_statement=statement_property_\n        ),\n        regex_match_statement=wafv2.CfnRuleGroup.RegexMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            regex_string=\"regexString\",\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        regex_pattern_set_reference_statement=wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty(\n            arn=\"arn\",\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        size_constraint_statement=wafv2.CfnRuleGroup.SizeConstraintStatementProperty(\n            comparison_operator=\"comparisonOperator\",\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            size=123,\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        sqli_match_statement=wafv2.CfnRuleGroup.SqliMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            sensitivity_level=\"sensitivityLevel\"\n        ),\n        xss_match_statement=wafv2.CfnRuleGroup.XssMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nRateBasedStatementProperty rateBasedStatementProperty = new RateBasedStatementProperty {\n    AggregateKeyType = \"aggregateKeyType\",\n    Limit = 123,\n\n    // the properties below are optional\n    ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n        FallbackBehavior = \"fallbackBehavior\",\n        HeaderName = \"headerName\"\n    },\n    ScopeDownStatement = new StatementProperty {\n        AndStatement = new AndStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        ByteMatchStatement = new ByteMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            PositionalConstraint = \"positionalConstraint\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SearchString = \"searchString\",\n            SearchStringBase64 = \"searchStringBase64\"\n        },\n        GeoMatchStatement = new GeoMatchStatementProperty {\n            CountryCodes = new [] { \"countryCodes\" },\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            }\n        },\n        IpSetReferenceStatement = new Dictionary<string, object> {\n            { \"arn\", \"arn\" },\n\n            // the properties below are optional\n            { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                { \"fallbackBehavior\", \"fallbackBehavior\" },\n                { \"headerName\", \"headerName\" },\n                { \"position\", \"position\" }\n            } }\n        },\n        LabelMatchStatement = new LabelMatchStatementProperty {\n            Key = \"key\",\n            Scope = \"scope\"\n        },\n        NotStatement = new NotStatementProperty {\n            Statement = statementProperty_\n        },\n        OrStatement = new OrStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        RateBasedStatement = new RateBasedStatementProperty {\n            AggregateKeyType = \"aggregateKeyType\",\n            Limit = 123,\n\n            // the properties below are optional\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            },\n            ScopeDownStatement = statementProperty_\n        },\n        RegexMatchStatement = new RegexMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            RegexString = \"regexString\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n            Arn = \"arn\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SizeConstraintStatement = new SizeConstraintStatementProperty {\n            ComparisonOperator = \"comparisonOperator\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            Size = 123,\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SqliMatchStatement = new SqliMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SensitivityLevel = \"sensitivityLevel\"\n        },\n        XssMatchStatement = new XssMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nRateBasedStatementProperty rateBasedStatementProperty = RateBasedStatementProperty.builder()\n        .aggregateKeyType(\"aggregateKeyType\")\n        .limit(123)\n\n        // the properties below are optional\n        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                .fallbackBehavior(\"fallbackBehavior\")\n                .headerName(\"headerName\")\n                .build())\n        .scopeDownStatement(StatementProperty.builder()\n                .andStatement(AndStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .byteMatchStatement(ByteMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .positionalConstraint(\"positionalConstraint\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .searchString(\"searchString\")\n                        .searchStringBase64(\"searchStringBase64\")\n                        .build())\n                .geoMatchStatement(GeoMatchStatementProperty.builder()\n                        .countryCodes(List.of(\"countryCodes\"))\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .build())\n                .ipSetReferenceStatement(Map.of(\n                        \"arn\", \"arn\",\n\n                        // the properties below are optional\n                        \"ipSetForwardedIpConfig\", Map.of(\n                                \"fallbackBehavior\", \"fallbackBehavior\",\n                                \"headerName\", \"headerName\",\n                                \"position\", \"position\")))\n                .labelMatchStatement(LabelMatchStatementProperty.builder()\n                        .key(\"key\")\n                        .scope(\"scope\")\n                        .build())\n                .notStatement(NotStatementProperty.builder()\n                        .statement(statementProperty_)\n                        .build())\n                .orStatement(OrStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .rateBasedStatement(RateBasedStatementProperty.builder()\n                        .aggregateKeyType(\"aggregateKeyType\")\n                        .limit(123)\n\n                        // the properties below are optional\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .scopeDownStatement(statementProperty_)\n                        .build())\n                .regexMatchStatement(RegexMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .regexString(\"regexString\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                        .comparisonOperator(\"comparisonOperator\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .size(123)\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .sensitivityLevel(\"sensitivityLevel\")\n                        .build())\n                .xssMatchStatement(XssMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\nrateBasedStatementProperty := &rateBasedStatementProperty{\n\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\tlimit: jsii.Number(123),\n\n\t// the properties below are optional\n\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\theaderName: jsii.String(\"headerName\"),\n\t},\n\tscopeDownStatement: &statementProperty{\n\t\tandStatement: &andStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t},\n\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\tcountryCodes: []*string{\n\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t},\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t},\n\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t// the properties below are optional\n\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t},\n\t\t},\n\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tscope: jsii.String(\"scope\"),\n\t\t},\n\t\tnotStatement: &notStatementProperty{\n\t\t\tstatement: statementProperty_,\n\t\t},\n\t\torStatement: &orStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\tlimit: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t\tscopeDownStatement: statementProperty_,\n\t\t},\n\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\tarn: jsii.String(\"arn\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tsize: jsii.Number(123),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t},\n\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst rateBasedStatementProperty: wafv2.CfnRuleGroup.RateBasedStatementProperty = {\n  aggregateKeyType: 'aggregateKeyType',\n  limit: 123,\n\n  // the properties below are optional\n  forwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n  },\n  scopeDownStatement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RateBasedStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.RateBasedStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst rateBasedStatementProperty: wafv2.CfnRuleGroup.RateBasedStatementProperty = {\n  aggregateKeyType: 'aggregateKeyType',\n  limit: 123,\n\n  // the properties below are optional\n  forwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n  },\n  scopeDownStatement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 9,
        "10": 107,
        "75": 319,
        "125": 7,
        "130": 8,
        "153": 4,
        "169": 2,
        "192": 39,
        "193": 73,
        "225": 9,
        "242": 9,
        "243": 9,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 245,
        "290": 1
      },
      "fqnsFingerprint": "1736fb730b7f3b64716a27b923548d36ec9117a8fe419933d1c479482b8be077"
    },
    "078bfbae4a1897ed2cfb93e4bbd2976b9f8ea508a70887fde507b7da9998a3f5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nregex_match_statement_property = wafv2.CfnRuleGroup.RegexMatchStatementProperty(\n    field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n        all_query_arguments=all_query_arguments,\n        body=wafv2.CfnRuleGroup.BodyProperty(\n            oversize_handling=\"oversizeHandling\"\n        ),\n        cookies=wafv2.CfnRuleGroup.CookiesProperty(\n            match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                all=all,\n                excluded_cookies=[\"excludedCookies\"],\n                included_cookies=[\"includedCookies\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        headers=wafv2.CfnRuleGroup.HeadersProperty(\n            match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                all=all,\n                excluded_headers=[\"excludedHeaders\"],\n                included_headers=[\"includedHeaders\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n            match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                all=all,\n                included_paths=[\"includedPaths\"]\n            ),\n            match_scope=\"matchScope\",\n\n            # the properties below are optional\n            invalid_fallback_behavior=\"invalidFallbackBehavior\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        single_query_argument=single_query_argument,\n        uri_path=uri_path\n    ),\n    regex_string=\"regexString\",\n    text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n        priority=123,\n        type=\"type\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nRegexMatchStatementProperty regexMatchStatementProperty = new RegexMatchStatementProperty {\n    FieldToMatch = new FieldToMatchProperty {\n        AllQueryArguments = allQueryArguments,\n        Body = new BodyProperty {\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Cookies = new CookiesProperty {\n            MatchPattern = new CookieMatchPatternProperty {\n                All = all,\n                ExcludedCookies = new [] { \"excludedCookies\" },\n                IncludedCookies = new [] { \"includedCookies\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Headers = new HeadersProperty {\n            MatchPattern = new HeaderMatchPatternProperty {\n                All = all,\n                ExcludedHeaders = new [] { \"excludedHeaders\" },\n                IncludedHeaders = new [] { \"includedHeaders\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        JsonBody = new JsonBodyProperty {\n            MatchPattern = new JsonMatchPatternProperty {\n                All = all,\n                IncludedPaths = new [] { \"includedPaths\" }\n            },\n            MatchScope = \"matchScope\",\n\n            // the properties below are optional\n            InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        SingleQueryArgument = singleQueryArgument,\n        UriPath = uriPath\n    },\n    RegexString = \"regexString\",\n    TextTransformations = new [] { new TextTransformationProperty {\n        Priority = 123,\n        Type = \"type\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nRegexMatchStatementProperty regexMatchStatementProperty = RegexMatchStatementProperty.builder()\n        .fieldToMatch(FieldToMatchProperty.builder()\n                .allQueryArguments(allQueryArguments)\n                .body(BodyProperty.builder()\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .cookies(CookiesProperty.builder()\n                        .matchPattern(CookieMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedCookies(List.of(\"excludedCookies\"))\n                                .includedCookies(List.of(\"includedCookies\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .headers(HeadersProperty.builder()\n                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                .includedHeaders(List.of(\"includedHeaders\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .jsonBody(JsonBodyProperty.builder()\n                        .matchPattern(JsonMatchPatternProperty.builder()\n                                .all(all)\n                                .includedPaths(List.of(\"includedPaths\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n\n                        // the properties below are optional\n                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .singleQueryArgument(singleQueryArgument)\n                .uriPath(uriPath)\n                .build())\n        .regexString(\"regexString\")\n        .textTransformations(List.of(TextTransformationProperty.builder()\n                .priority(123)\n                .type(\"type\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nregexMatchStatementProperty := &regexMatchStatementProperty{\n\tfieldToMatch: &fieldToMatchProperty{\n\t\tallQueryArguments: allQueryArguments,\n\t\tbody: &bodyProperty{\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tcookies: &cookiesProperty{\n\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t},\n\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\theaders: &headersProperty{\n\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t},\n\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tjsonBody: &jsonBodyProperty{\n\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tmethod: method,\n\t\tqueryString: queryString,\n\t\tsingleHeader: singleHeader,\n\t\tsingleQueryArgument: singleQueryArgument,\n\t\turiPath: uriPath,\n\t},\n\tregexString: jsii.String(\"regexString\"),\n\ttextTransformations: []interface{}{\n\t\t&textTransformationProperty{\n\t\t\tpriority: jsii.Number(123),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst regexMatchStatementProperty: wafv2.CfnRuleGroup.RegexMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  regexString: 'regexString',\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RegexMatchStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.RegexMatchStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst regexMatchStatementProperty: wafv2.CfnRuleGroup.RegexMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  regexString: 'regexString',\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 16,
        "75": 55,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 10,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 34,
        "290": 1
      },
      "fqnsFingerprint": "c1b638147b527b18fb34008f4e9f5e70d96a605b357e355b2a9db2180dd0cd77"
    },
    "fa2195a5952d08f94448ddeb5759b333f2e7481aa097325736fb448588933630": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nregex_pattern_set_reference_statement_property = wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty(\n    arn=\"arn\",\n    field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n        all_query_arguments=all_query_arguments,\n        body=wafv2.CfnRuleGroup.BodyProperty(\n            oversize_handling=\"oversizeHandling\"\n        ),\n        cookies=wafv2.CfnRuleGroup.CookiesProperty(\n            match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                all=all,\n                excluded_cookies=[\"excludedCookies\"],\n                included_cookies=[\"includedCookies\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        headers=wafv2.CfnRuleGroup.HeadersProperty(\n            match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                all=all,\n                excluded_headers=[\"excludedHeaders\"],\n                included_headers=[\"includedHeaders\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n            match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                all=all,\n                included_paths=[\"includedPaths\"]\n            ),\n            match_scope=\"matchScope\",\n\n            # the properties below are optional\n            invalid_fallback_behavior=\"invalidFallbackBehavior\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        single_query_argument=single_query_argument,\n        uri_path=uri_path\n    ),\n    text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n        priority=123,\n        type=\"type\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nRegexPatternSetReferenceStatementProperty regexPatternSetReferenceStatementProperty = new RegexPatternSetReferenceStatementProperty {\n    Arn = \"arn\",\n    FieldToMatch = new FieldToMatchProperty {\n        AllQueryArguments = allQueryArguments,\n        Body = new BodyProperty {\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Cookies = new CookiesProperty {\n            MatchPattern = new CookieMatchPatternProperty {\n                All = all,\n                ExcludedCookies = new [] { \"excludedCookies\" },\n                IncludedCookies = new [] { \"includedCookies\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Headers = new HeadersProperty {\n            MatchPattern = new HeaderMatchPatternProperty {\n                All = all,\n                ExcludedHeaders = new [] { \"excludedHeaders\" },\n                IncludedHeaders = new [] { \"includedHeaders\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        JsonBody = new JsonBodyProperty {\n            MatchPattern = new JsonMatchPatternProperty {\n                All = all,\n                IncludedPaths = new [] { \"includedPaths\" }\n            },\n            MatchScope = \"matchScope\",\n\n            // the properties below are optional\n            InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        SingleQueryArgument = singleQueryArgument,\n        UriPath = uriPath\n    },\n    TextTransformations = new [] { new TextTransformationProperty {\n        Priority = 123,\n        Type = \"type\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nRegexPatternSetReferenceStatementProperty regexPatternSetReferenceStatementProperty = RegexPatternSetReferenceStatementProperty.builder()\n        .arn(\"arn\")\n        .fieldToMatch(FieldToMatchProperty.builder()\n                .allQueryArguments(allQueryArguments)\n                .body(BodyProperty.builder()\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .cookies(CookiesProperty.builder()\n                        .matchPattern(CookieMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedCookies(List.of(\"excludedCookies\"))\n                                .includedCookies(List.of(\"includedCookies\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .headers(HeadersProperty.builder()\n                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                .includedHeaders(List.of(\"includedHeaders\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .jsonBody(JsonBodyProperty.builder()\n                        .matchPattern(JsonMatchPatternProperty.builder()\n                                .all(all)\n                                .includedPaths(List.of(\"includedPaths\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n\n                        // the properties below are optional\n                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .singleQueryArgument(singleQueryArgument)\n                .uriPath(uriPath)\n                .build())\n        .textTransformations(List.of(TextTransformationProperty.builder()\n                .priority(123)\n                .type(\"type\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nregexPatternSetReferenceStatementProperty := &regexPatternSetReferenceStatementProperty{\n\tarn: jsii.String(\"arn\"),\n\tfieldToMatch: &fieldToMatchProperty{\n\t\tallQueryArguments: allQueryArguments,\n\t\tbody: &bodyProperty{\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tcookies: &cookiesProperty{\n\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t},\n\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\theaders: &headersProperty{\n\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t},\n\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tjsonBody: &jsonBodyProperty{\n\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tmethod: method,\n\t\tqueryString: queryString,\n\t\tsingleHeader: singleHeader,\n\t\tsingleQueryArgument: singleQueryArgument,\n\t\turiPath: uriPath,\n\t},\n\ttextTransformations: []interface{}{\n\t\t&textTransformationProperty{\n\t\t\tpriority: jsii.Number(123),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst regexPatternSetReferenceStatementProperty: wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty = {\n  arn: 'arn',\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst regexPatternSetReferenceStatementProperty: wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty = {\n  arn: 'arn',\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 16,
        "75": 55,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 10,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 34,
        "290": 1
      },
      "fqnsFingerprint": "2d31a89a6abac4c4cc9cac8d4abde42f5e95d8185729dff50c4b2131365780dc"
    },
    "332297db03cf8dd001efd28d4faf4d016eb735ecc2a5c4b37a20175132cf6864": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# allow: Any\n# block: Any\n# captcha: Any\n# count: Any\n\nrule_action_property = wafv2.CfnRuleGroup.RuleActionProperty(\n    allow=allow,\n    block=block,\n    captcha=captcha,\n    count=count\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar allow;\nvar block;\nvar captcha;\nvar count;\n\nRuleActionProperty ruleActionProperty = new RuleActionProperty {\n    Allow = allow,\n    Block = block,\n    Captcha = captcha,\n    Count = count\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject allow;\nObject block;\nObject captcha;\nObject count;\n\nRuleActionProperty ruleActionProperty = RuleActionProperty.builder()\n        .allow(allow)\n        .block(block)\n        .captcha(captcha)\n        .count(count)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar allow interface{}\nvar block interface{}\nvar captcha interface{}\nvar count interface{}\n\nruleActionProperty := &ruleActionProperty{\n\tallow: allow,\n\tblock: block,\n\tcaptcha: captcha,\n\tcount: count,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const allow: any;\ndeclare const block: any;\ndeclare const captcha: any;\ndeclare const count: any;\nconst ruleActionProperty: wafv2.CfnRuleGroup.RuleActionProperty = {\n  allow: allow,\n  block: block,\n  captcha: captcha,\n  count: count,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RuleActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.RuleActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const allow: any;\ndeclare const block: any;\ndeclare const captcha: any;\ndeclare const count: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ruleActionProperty: wafv2.CfnRuleGroup.RuleActionProperty = {\n  allow: allow,\n  block: block,\n  captcha: captcha,\n  count: count,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 17,
        "125": 4,
        "130": 4,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 5,
        "242": 5,
        "243": 5,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "755e11633eb5ff99ef0a46e7186fdbc78c2c9cacb3b6d6e754b77c787f803b18"
    },
    "2aae440587b854ea348f345f504804e89473e7abb1256d61ff982168c37ebd4e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# allow: Any\n# all_query_arguments: Any\n# block: Any\n# captcha: Any\n# count: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnRuleGroup.StatementProperty\n# uri_path: Any\n\nrule_property = wafv2.CfnRuleGroup.RuleProperty(\n    name=\"name\",\n    priority=123,\n    statement=wafv2.CfnRuleGroup.StatementProperty(\n        and_statement=wafv2.CfnRuleGroup.AndStatementProperty(\n            statements=[statement_property_]\n        ),\n        byte_match_statement=wafv2.CfnRuleGroup.ByteMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            positional_constraint=\"positionalConstraint\",\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            search_string=\"searchString\",\n            search_string_base64=\"searchStringBase64\"\n        ),\n        geo_match_statement=wafv2.CfnRuleGroup.GeoMatchStatementProperty(\n            country_codes=[\"countryCodes\"],\n            forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            )\n        ),\n        ip_set_reference_statement={\n            \"arn\": \"arn\",\n\n            # the properties below are optional\n            \"ip_set_forwarded_ip_config\": {\n                \"fallback_behavior\": \"fallbackBehavior\",\n                \"header_name\": \"headerName\",\n                \"position\": \"position\"\n            }\n        },\n        label_match_statement=wafv2.CfnRuleGroup.LabelMatchStatementProperty(\n            key=\"key\",\n            scope=\"scope\"\n        ),\n        not_statement=wafv2.CfnRuleGroup.NotStatementProperty(\n            statement=statement_property_\n        ),\n        or_statement=wafv2.CfnRuleGroup.OrStatementProperty(\n            statements=[statement_property_]\n        ),\n        rate_based_statement=wafv2.CfnRuleGroup.RateBasedStatementProperty(\n            aggregate_key_type=\"aggregateKeyType\",\n            limit=123,\n\n            # the properties below are optional\n            forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            ),\n            scope_down_statement=statement_property_\n        ),\n        regex_match_statement=wafv2.CfnRuleGroup.RegexMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            regex_string=\"regexString\",\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        regex_pattern_set_reference_statement=wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty(\n            arn=\"arn\",\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        size_constraint_statement=wafv2.CfnRuleGroup.SizeConstraintStatementProperty(\n            comparison_operator=\"comparisonOperator\",\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            size=123,\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        sqli_match_statement=wafv2.CfnRuleGroup.SqliMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            sensitivity_level=\"sensitivityLevel\"\n        ),\n        xss_match_statement=wafv2.CfnRuleGroup.XssMatchStatementProperty(\n            field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnRuleGroup.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                    match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnRuleGroup.HeadersProperty(\n                    match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                    match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        )\n    ),\n    visibility_config=wafv2.CfnRuleGroup.VisibilityConfigProperty(\n        cloud_watch_metrics_enabled=False,\n        metric_name=\"metricName\",\n        sampled_requests_enabled=False\n    ),\n\n    # the properties below are optional\n    action=wafv2.CfnRuleGroup.RuleActionProperty(\n        allow=allow,\n        block=block,\n        captcha=captcha,\n        count=count\n    ),\n    captcha_config=wafv2.CfnRuleGroup.CaptchaConfigProperty(\n        immunity_time_property=wafv2.CfnRuleGroup.ImmunityTimePropertyProperty(\n            immunity_time=123\n        )\n    ),\n    rule_labels=[wafv2.CfnRuleGroup.LabelProperty(\n        name=\"name\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allow;\nvar allQueryArguments;\nvar block;\nvar captcha;\nvar count;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nRuleProperty ruleProperty = new RuleProperty {\n    Name = \"name\",\n    Priority = 123,\n    Statement = new StatementProperty {\n        AndStatement = new AndStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        ByteMatchStatement = new ByteMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            PositionalConstraint = \"positionalConstraint\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SearchString = \"searchString\",\n            SearchStringBase64 = \"searchStringBase64\"\n        },\n        GeoMatchStatement = new GeoMatchStatementProperty {\n            CountryCodes = new [] { \"countryCodes\" },\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            }\n        },\n        IpSetReferenceStatement = new Dictionary<string, object> {\n            { \"arn\", \"arn\" },\n\n            // the properties below are optional\n            { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                { \"fallbackBehavior\", \"fallbackBehavior\" },\n                { \"headerName\", \"headerName\" },\n                { \"position\", \"position\" }\n            } }\n        },\n        LabelMatchStatement = new LabelMatchStatementProperty {\n            Key = \"key\",\n            Scope = \"scope\"\n        },\n        NotStatement = new NotStatementProperty {\n            Statement = statementProperty_\n        },\n        OrStatement = new OrStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        RateBasedStatement = new RateBasedStatementProperty {\n            AggregateKeyType = \"aggregateKeyType\",\n            Limit = 123,\n\n            // the properties below are optional\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            },\n            ScopeDownStatement = statementProperty_\n        },\n        RegexMatchStatement = new RegexMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            RegexString = \"regexString\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n            Arn = \"arn\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SizeConstraintStatement = new SizeConstraintStatementProperty {\n            ComparisonOperator = \"comparisonOperator\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            Size = 123,\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SqliMatchStatement = new SqliMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SensitivityLevel = \"sensitivityLevel\"\n        },\n        XssMatchStatement = new XssMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        }\n    },\n    VisibilityConfig = new VisibilityConfigProperty {\n        CloudWatchMetricsEnabled = false,\n        MetricName = \"metricName\",\n        SampledRequestsEnabled = false\n    },\n\n    // the properties below are optional\n    Action = new RuleActionProperty {\n        Allow = allow,\n        Block = block,\n        Captcha = captcha,\n        Count = count\n    },\n    CaptchaConfig = new CaptchaConfigProperty {\n        ImmunityTimeProperty = new ImmunityTimePropertyProperty {\n            ImmunityTime = 123\n        }\n    },\n    RuleLabels = new [] { new LabelProperty {\n        Name = \"name\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allow;\nObject allQueryArguments;\nObject block;\nObject captcha;\nObject count;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nRuleProperty ruleProperty = RuleProperty.builder()\n        .name(\"name\")\n        .priority(123)\n        .statement(StatementProperty.builder()\n                .andStatement(AndStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .byteMatchStatement(ByteMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .positionalConstraint(\"positionalConstraint\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .searchString(\"searchString\")\n                        .searchStringBase64(\"searchStringBase64\")\n                        .build())\n                .geoMatchStatement(GeoMatchStatementProperty.builder()\n                        .countryCodes(List.of(\"countryCodes\"))\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .build())\n                .ipSetReferenceStatement(Map.of(\n                        \"arn\", \"arn\",\n\n                        // the properties below are optional\n                        \"ipSetForwardedIpConfig\", Map.of(\n                                \"fallbackBehavior\", \"fallbackBehavior\",\n                                \"headerName\", \"headerName\",\n                                \"position\", \"position\")))\n                .labelMatchStatement(LabelMatchStatementProperty.builder()\n                        .key(\"key\")\n                        .scope(\"scope\")\n                        .build())\n                .notStatement(NotStatementProperty.builder()\n                        .statement(statementProperty_)\n                        .build())\n                .orStatement(OrStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .rateBasedStatement(RateBasedStatementProperty.builder()\n                        .aggregateKeyType(\"aggregateKeyType\")\n                        .limit(123)\n\n                        // the properties below are optional\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .scopeDownStatement(statementProperty_)\n                        .build())\n                .regexMatchStatement(RegexMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .regexString(\"regexString\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                        .comparisonOperator(\"comparisonOperator\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .size(123)\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .sensitivityLevel(\"sensitivityLevel\")\n                        .build())\n                .xssMatchStatement(XssMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .build())\n        .visibilityConfig(VisibilityConfigProperty.builder()\n                .cloudWatchMetricsEnabled(false)\n                .metricName(\"metricName\")\n                .sampledRequestsEnabled(false)\n                .build())\n\n        // the properties below are optional\n        .action(RuleActionProperty.builder()\n                .allow(allow)\n                .block(block)\n                .captcha(captcha)\n                .count(count)\n                .build())\n        .captchaConfig(CaptchaConfigProperty.builder()\n                .immunityTimeProperty(ImmunityTimePropertyProperty.builder()\n                        .immunityTime(123)\n                        .build())\n                .build())\n        .ruleLabels(List.of(LabelProperty.builder()\n                .name(\"name\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allow interface{}\nvar allQueryArguments interface{}\nvar block interface{}\nvar captcha interface{}\nvar count interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\nruleProperty := &ruleProperty{\n\tname: jsii.String(\"name\"),\n\tpriority: jsii.Number(123),\n\tstatement: &statementProperty{\n\t\tandStatement: &andStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t},\n\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\tcountryCodes: []*string{\n\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t},\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t},\n\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t// the properties below are optional\n\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t},\n\t\t},\n\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tscope: jsii.String(\"scope\"),\n\t\t},\n\t\tnotStatement: &notStatementProperty{\n\t\t\tstatement: statementProperty_,\n\t\t},\n\t\torStatement: &orStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\tlimit: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t\tscopeDownStatement: statementProperty_,\n\t\t},\n\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\tarn: jsii.String(\"arn\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tsize: jsii.Number(123),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t},\n\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tvisibilityConfig: &visibilityConfigProperty{\n\t\tcloudWatchMetricsEnabled: jsii.Boolean(false),\n\t\tmetricName: jsii.String(\"metricName\"),\n\t\tsampledRequestsEnabled: jsii.Boolean(false),\n\t},\n\n\t// the properties below are optional\n\taction: &ruleActionProperty{\n\t\tallow: allow,\n\t\tblock: block,\n\t\tcaptcha: captcha,\n\t\tcount: count,\n\t},\n\tcaptchaConfig: &captchaConfigProperty{\n\t\timmunityTimeProperty: &immunityTimePropertyProperty{\n\t\t\timmunityTime: jsii.Number(123),\n\t\t},\n\t},\n\truleLabels: []interface{}{\n\t\t&labelProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allow: any;\ndeclare const allQueryArguments: any;\ndeclare const block: any;\ndeclare const captcha: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst ruleProperty: wafv2.CfnRuleGroup.RuleProperty = {\n  name: 'name',\n  priority: 123,\n  statement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  action: {\n    allow: allow,\n    block: block,\n    captcha: captcha,\n    count: count,\n  },\n  captchaConfig: {\n    immunityTimeProperty: {\n      immunityTime: 123,\n    },\n  },\n  ruleLabels: [{\n    name: 'name',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.RuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allow: any;\ndeclare const allQueryArguments: any;\ndeclare const block: any;\ndeclare const captcha: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ruleProperty: wafv2.CfnRuleGroup.RuleProperty = {\n  name: 'name',\n  priority: 123,\n  statement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  action: {\n    allow: allow,\n    block: block,\n    captcha: captcha,\n    count: count,\n  },\n  captchaConfig: {\n    immunityTimeProperty: {\n      immunityTime: 123,\n    },\n  },\n  ruleLabels: [{\n    name: 'name',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 10,
        "10": 107,
        "75": 338,
        "91": 2,
        "125": 11,
        "130": 12,
        "153": 4,
        "169": 2,
        "192": 40,
        "193": 77,
        "225": 13,
        "242": 13,
        "243": 13,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 256,
        "290": 1
      },
      "fqnsFingerprint": "44d39408923b93888915007caffa1b907fc4275b858e929b8da990f5e0a1c034"
    },
    "3d0723b18fa5fe6af237f2d216d1762449048ed4e64f761b8463c5f973422e11": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nsize_constraint_statement_property = wafv2.CfnRuleGroup.SizeConstraintStatementProperty(\n    comparison_operator=\"comparisonOperator\",\n    field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n        all_query_arguments=all_query_arguments,\n        body=wafv2.CfnRuleGroup.BodyProperty(\n            oversize_handling=\"oversizeHandling\"\n        ),\n        cookies=wafv2.CfnRuleGroup.CookiesProperty(\n            match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                all=all,\n                excluded_cookies=[\"excludedCookies\"],\n                included_cookies=[\"includedCookies\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        headers=wafv2.CfnRuleGroup.HeadersProperty(\n            match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                all=all,\n                excluded_headers=[\"excludedHeaders\"],\n                included_headers=[\"includedHeaders\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n            match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                all=all,\n                included_paths=[\"includedPaths\"]\n            ),\n            match_scope=\"matchScope\",\n\n            # the properties below are optional\n            invalid_fallback_behavior=\"invalidFallbackBehavior\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        single_query_argument=single_query_argument,\n        uri_path=uri_path\n    ),\n    size=123,\n    text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n        priority=123,\n        type=\"type\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nSizeConstraintStatementProperty sizeConstraintStatementProperty = new SizeConstraintStatementProperty {\n    ComparisonOperator = \"comparisonOperator\",\n    FieldToMatch = new FieldToMatchProperty {\n        AllQueryArguments = allQueryArguments,\n        Body = new BodyProperty {\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Cookies = new CookiesProperty {\n            MatchPattern = new CookieMatchPatternProperty {\n                All = all,\n                ExcludedCookies = new [] { \"excludedCookies\" },\n                IncludedCookies = new [] { \"includedCookies\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Headers = new HeadersProperty {\n            MatchPattern = new HeaderMatchPatternProperty {\n                All = all,\n                ExcludedHeaders = new [] { \"excludedHeaders\" },\n                IncludedHeaders = new [] { \"includedHeaders\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        JsonBody = new JsonBodyProperty {\n            MatchPattern = new JsonMatchPatternProperty {\n                All = all,\n                IncludedPaths = new [] { \"includedPaths\" }\n            },\n            MatchScope = \"matchScope\",\n\n            // the properties below are optional\n            InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        SingleQueryArgument = singleQueryArgument,\n        UriPath = uriPath\n    },\n    Size = 123,\n    TextTransformations = new [] { new TextTransformationProperty {\n        Priority = 123,\n        Type = \"type\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nSizeConstraintStatementProperty sizeConstraintStatementProperty = SizeConstraintStatementProperty.builder()\n        .comparisonOperator(\"comparisonOperator\")\n        .fieldToMatch(FieldToMatchProperty.builder()\n                .allQueryArguments(allQueryArguments)\n                .body(BodyProperty.builder()\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .cookies(CookiesProperty.builder()\n                        .matchPattern(CookieMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedCookies(List.of(\"excludedCookies\"))\n                                .includedCookies(List.of(\"includedCookies\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .headers(HeadersProperty.builder()\n                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                .includedHeaders(List.of(\"includedHeaders\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .jsonBody(JsonBodyProperty.builder()\n                        .matchPattern(JsonMatchPatternProperty.builder()\n                                .all(all)\n                                .includedPaths(List.of(\"includedPaths\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n\n                        // the properties below are optional\n                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .singleQueryArgument(singleQueryArgument)\n                .uriPath(uriPath)\n                .build())\n        .size(123)\n        .textTransformations(List.of(TextTransformationProperty.builder()\n                .priority(123)\n                .type(\"type\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nsizeConstraintStatementProperty := &sizeConstraintStatementProperty{\n\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\tfieldToMatch: &fieldToMatchProperty{\n\t\tallQueryArguments: allQueryArguments,\n\t\tbody: &bodyProperty{\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tcookies: &cookiesProperty{\n\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t},\n\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\theaders: &headersProperty{\n\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t},\n\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tjsonBody: &jsonBodyProperty{\n\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tmethod: method,\n\t\tqueryString: queryString,\n\t\tsingleHeader: singleHeader,\n\t\tsingleQueryArgument: singleQueryArgument,\n\t\turiPath: uriPath,\n\t},\n\tsize: jsii.Number(123),\n\ttextTransformations: []interface{}{\n\t\t&textTransformationProperty{\n\t\t\tpriority: jsii.Number(123),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst sizeConstraintStatementProperty: wafv2.CfnRuleGroup.SizeConstraintStatementProperty = {\n  comparisonOperator: 'comparisonOperator',\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  size: 123,\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.SizeConstraintStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.SizeConstraintStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sizeConstraintStatementProperty: wafv2.CfnRuleGroup.SizeConstraintStatementProperty = {\n  comparisonOperator: 'comparisonOperator',\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  size: 123,\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 16,
        "75": 56,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 10,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 35,
        "290": 1
      },
      "fqnsFingerprint": "a589b91a2bfa84fa56d9089314aaeadd5c7c35a0201f4554246e69d5a530fca4"
    },
    "66a8c447c29d2097f94924d1fa86b86250ec1d17a21bcf260c7ed6d30f15f839": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nsqli_match_statement_property = wafv2.CfnRuleGroup.SqliMatchStatementProperty(\n    field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n        all_query_arguments=all_query_arguments,\n        body=wafv2.CfnRuleGroup.BodyProperty(\n            oversize_handling=\"oversizeHandling\"\n        ),\n        cookies=wafv2.CfnRuleGroup.CookiesProperty(\n            match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                all=all,\n                excluded_cookies=[\"excludedCookies\"],\n                included_cookies=[\"includedCookies\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        headers=wafv2.CfnRuleGroup.HeadersProperty(\n            match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                all=all,\n                excluded_headers=[\"excludedHeaders\"],\n                included_headers=[\"includedHeaders\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n            match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                all=all,\n                included_paths=[\"includedPaths\"]\n            ),\n            match_scope=\"matchScope\",\n\n            # the properties below are optional\n            invalid_fallback_behavior=\"invalidFallbackBehavior\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        single_query_argument=single_query_argument,\n        uri_path=uri_path\n    ),\n    text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n        priority=123,\n        type=\"type\"\n    )],\n\n    # the properties below are optional\n    sensitivity_level=\"sensitivityLevel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nSqliMatchStatementProperty sqliMatchStatementProperty = new SqliMatchStatementProperty {\n    FieldToMatch = new FieldToMatchProperty {\n        AllQueryArguments = allQueryArguments,\n        Body = new BodyProperty {\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Cookies = new CookiesProperty {\n            MatchPattern = new CookieMatchPatternProperty {\n                All = all,\n                ExcludedCookies = new [] { \"excludedCookies\" },\n                IncludedCookies = new [] { \"includedCookies\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Headers = new HeadersProperty {\n            MatchPattern = new HeaderMatchPatternProperty {\n                All = all,\n                ExcludedHeaders = new [] { \"excludedHeaders\" },\n                IncludedHeaders = new [] { \"includedHeaders\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        JsonBody = new JsonBodyProperty {\n            MatchPattern = new JsonMatchPatternProperty {\n                All = all,\n                IncludedPaths = new [] { \"includedPaths\" }\n            },\n            MatchScope = \"matchScope\",\n\n            // the properties below are optional\n            InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        SingleQueryArgument = singleQueryArgument,\n        UriPath = uriPath\n    },\n    TextTransformations = new [] { new TextTransformationProperty {\n        Priority = 123,\n        Type = \"type\"\n    } },\n\n    // the properties below are optional\n    SensitivityLevel = \"sensitivityLevel\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nSqliMatchStatementProperty sqliMatchStatementProperty = SqliMatchStatementProperty.builder()\n        .fieldToMatch(FieldToMatchProperty.builder()\n                .allQueryArguments(allQueryArguments)\n                .body(BodyProperty.builder()\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .cookies(CookiesProperty.builder()\n                        .matchPattern(CookieMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedCookies(List.of(\"excludedCookies\"))\n                                .includedCookies(List.of(\"includedCookies\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .headers(HeadersProperty.builder()\n                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                .includedHeaders(List.of(\"includedHeaders\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .jsonBody(JsonBodyProperty.builder()\n                        .matchPattern(JsonMatchPatternProperty.builder()\n                                .all(all)\n                                .includedPaths(List.of(\"includedPaths\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n\n                        // the properties below are optional\n                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .singleQueryArgument(singleQueryArgument)\n                .uriPath(uriPath)\n                .build())\n        .textTransformations(List.of(TextTransformationProperty.builder()\n                .priority(123)\n                .type(\"type\")\n                .build()))\n\n        // the properties below are optional\n        .sensitivityLevel(\"sensitivityLevel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nsqliMatchStatementProperty := &sqliMatchStatementProperty{\n\tfieldToMatch: &fieldToMatchProperty{\n\t\tallQueryArguments: allQueryArguments,\n\t\tbody: &bodyProperty{\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tcookies: &cookiesProperty{\n\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t},\n\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\theaders: &headersProperty{\n\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t},\n\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tjsonBody: &jsonBodyProperty{\n\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tmethod: method,\n\t\tqueryString: queryString,\n\t\tsingleHeader: singleHeader,\n\t\tsingleQueryArgument: singleQueryArgument,\n\t\turiPath: uriPath,\n\t},\n\ttextTransformations: []interface{}{\n\t\t&textTransformationProperty{\n\t\t\tpriority: jsii.Number(123),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst sqliMatchStatementProperty: wafv2.CfnRuleGroup.SqliMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n\n  // the properties below are optional\n  sensitivityLevel: 'sensitivityLevel',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.SqliMatchStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.SqliMatchStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sqliMatchStatementProperty: wafv2.CfnRuleGroup.SqliMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n\n  // the properties below are optional\n  sensitivityLevel: 'sensitivityLevel',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 16,
        "75": 55,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 10,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 34,
        "290": 1
      },
      "fqnsFingerprint": "8303bab1075d139e427149507db4f673b4dabb38ff794728c60d9ab1b73a19e3"
    },
    "1f4c8e79f961bf2e9f680696f7be639cd8eac2bd4088df988e24a56121bfef29": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# and_statement_property_: wafv2.CfnRuleGroup.AndStatementProperty\n# method: Any\n# not_statement_property_: wafv2.CfnRuleGroup.NotStatementProperty\n# or_statement_property_: wafv2.CfnRuleGroup.OrStatementProperty\n# query_string: Any\n# rate_based_statement_property_: wafv2.CfnRuleGroup.RateBasedStatementProperty\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnRuleGroup.StatementProperty\n# uri_path: Any\n\nstatement_property = wafv2.CfnRuleGroup.StatementProperty(\n    and_statement=wafv2.CfnRuleGroup.AndStatementProperty(\n        statements=[wafv2.CfnRuleGroup.StatementProperty(\n            and_statement=and_statement_property_,\n            byte_match_statement=wafv2.CfnRuleGroup.ByteMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                positional_constraint=\"positionalConstraint\",\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                search_string=\"searchString\",\n                search_string_base64=\"searchStringBase64\"\n            ),\n            geo_match_statement=wafv2.CfnRuleGroup.GeoMatchStatementProperty(\n                country_codes=[\"countryCodes\"],\n                forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                )\n            ),\n            ip_set_reference_statement={\n                \"arn\": \"arn\",\n\n                # the properties below are optional\n                \"ip_set_forwarded_ip_config\": {\n                    \"fallback_behavior\": \"fallbackBehavior\",\n                    \"header_name\": \"headerName\",\n                    \"position\": \"position\"\n                }\n            },\n            label_match_statement=wafv2.CfnRuleGroup.LabelMatchStatementProperty(\n                key=\"key\",\n                scope=\"scope\"\n            ),\n            not_statement=wafv2.CfnRuleGroup.NotStatementProperty(\n                statement=statement_property_\n            ),\n            or_statement=wafv2.CfnRuleGroup.OrStatementProperty(\n                statements=[statement_property_]\n            ),\n            rate_based_statement=wafv2.CfnRuleGroup.RateBasedStatementProperty(\n                aggregate_key_type=\"aggregateKeyType\",\n                limit=123,\n\n                # the properties below are optional\n                forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                ),\n                scope_down_statement=statement_property_\n            ),\n            regex_match_statement=wafv2.CfnRuleGroup.RegexMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                regex_string=\"regexString\",\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            regex_pattern_set_reference_statement=wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty(\n                arn=\"arn\",\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            size_constraint_statement=wafv2.CfnRuleGroup.SizeConstraintStatementProperty(\n                comparison_operator=\"comparisonOperator\",\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                size=123,\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            sqli_match_statement=wafv2.CfnRuleGroup.SqliMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                sensitivity_level=\"sensitivityLevel\"\n            ),\n            xss_match_statement=wafv2.CfnRuleGroup.XssMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            )\n        )]\n    ),\n    byte_match_statement=wafv2.CfnRuleGroup.ByteMatchStatementProperty(\n        field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n            all_query_arguments=all_query_arguments,\n            body=wafv2.CfnRuleGroup.BodyProperty(\n                oversize_handling=\"oversizeHandling\"\n            ),\n            cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                    all=all,\n                    excluded_cookies=[\"excludedCookies\"],\n                    included_cookies=[\"includedCookies\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            headers=wafv2.CfnRuleGroup.HeadersProperty(\n                match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                    all=all,\n                    excluded_headers=[\"excludedHeaders\"],\n                    included_headers=[\"includedHeaders\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                    all=all,\n                    included_paths=[\"includedPaths\"]\n                ),\n                match_scope=\"matchScope\",\n\n                # the properties below are optional\n                invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            method=method,\n            query_string=query_string,\n            single_header=single_header,\n            single_query_argument=single_query_argument,\n            uri_path=uri_path\n        ),\n        positional_constraint=\"positionalConstraint\",\n        text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n            priority=123,\n            type=\"type\"\n        )],\n\n        # the properties below are optional\n        search_string=\"searchString\",\n        search_string_base64=\"searchStringBase64\"\n    ),\n    geo_match_statement=wafv2.CfnRuleGroup.GeoMatchStatementProperty(\n        country_codes=[\"countryCodes\"],\n        forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n            fallback_behavior=\"fallbackBehavior\",\n            header_name=\"headerName\"\n        )\n    ),\n    ip_set_reference_statement={\n        \"arn\": \"arn\",\n\n        # the properties below are optional\n        \"ip_set_forwarded_ip_config\": {\n            \"fallback_behavior\": \"fallbackBehavior\",\n            \"header_name\": \"headerName\",\n            \"position\": \"position\"\n        }\n    },\n    label_match_statement=wafv2.CfnRuleGroup.LabelMatchStatementProperty(\n        key=\"key\",\n        scope=\"scope\"\n    ),\n    not_statement=wafv2.CfnRuleGroup.NotStatementProperty(\n        statement=wafv2.CfnRuleGroup.StatementProperty(\n            and_statement=wafv2.CfnRuleGroup.AndStatementProperty(\n                statements=[statement_property_]\n            ),\n            byte_match_statement=wafv2.CfnRuleGroup.ByteMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                positional_constraint=\"positionalConstraint\",\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                search_string=\"searchString\",\n                search_string_base64=\"searchStringBase64\"\n            ),\n            geo_match_statement=wafv2.CfnRuleGroup.GeoMatchStatementProperty(\n                country_codes=[\"countryCodes\"],\n                forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                )\n            ),\n            ip_set_reference_statement={\n                \"arn\": \"arn\",\n\n                # the properties below are optional\n                \"ip_set_forwarded_ip_config\": {\n                    \"fallback_behavior\": \"fallbackBehavior\",\n                    \"header_name\": \"headerName\",\n                    \"position\": \"position\"\n                }\n            },\n            label_match_statement=wafv2.CfnRuleGroup.LabelMatchStatementProperty(\n                key=\"key\",\n                scope=\"scope\"\n            ),\n            not_statement=not_statement_property_,\n            or_statement=wafv2.CfnRuleGroup.OrStatementProperty(\n                statements=[statement_property_]\n            ),\n            rate_based_statement=wafv2.CfnRuleGroup.RateBasedStatementProperty(\n                aggregate_key_type=\"aggregateKeyType\",\n                limit=123,\n\n                # the properties below are optional\n                forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                ),\n                scope_down_statement=statement_property_\n            ),\n            regex_match_statement=wafv2.CfnRuleGroup.RegexMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                regex_string=\"regexString\",\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            regex_pattern_set_reference_statement=wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty(\n                arn=\"arn\",\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            size_constraint_statement=wafv2.CfnRuleGroup.SizeConstraintStatementProperty(\n                comparison_operator=\"comparisonOperator\",\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                size=123,\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            sqli_match_statement=wafv2.CfnRuleGroup.SqliMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                sensitivity_level=\"sensitivityLevel\"\n            ),\n            xss_match_statement=wafv2.CfnRuleGroup.XssMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            )\n        )\n    ),\n    or_statement=wafv2.CfnRuleGroup.OrStatementProperty(\n        statements=[wafv2.CfnRuleGroup.StatementProperty(\n            and_statement=wafv2.CfnRuleGroup.AndStatementProperty(\n                statements=[statement_property_]\n            ),\n            byte_match_statement=wafv2.CfnRuleGroup.ByteMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                positional_constraint=\"positionalConstraint\",\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                search_string=\"searchString\",\n                search_string_base64=\"searchStringBase64\"\n            ),\n            geo_match_statement=wafv2.CfnRuleGroup.GeoMatchStatementProperty(\n                country_codes=[\"countryCodes\"],\n                forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                )\n            ),\n            ip_set_reference_statement={\n                \"arn\": \"arn\",\n\n                # the properties below are optional\n                \"ip_set_forwarded_ip_config\": {\n                    \"fallback_behavior\": \"fallbackBehavior\",\n                    \"header_name\": \"headerName\",\n                    \"position\": \"position\"\n                }\n            },\n            label_match_statement=wafv2.CfnRuleGroup.LabelMatchStatementProperty(\n                key=\"key\",\n                scope=\"scope\"\n            ),\n            not_statement=wafv2.CfnRuleGroup.NotStatementProperty(\n                statement=statement_property_\n            ),\n            or_statement=or_statement_property_,\n            rate_based_statement=wafv2.CfnRuleGroup.RateBasedStatementProperty(\n                aggregate_key_type=\"aggregateKeyType\",\n                limit=123,\n\n                # the properties below are optional\n                forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                ),\n                scope_down_statement=statement_property_\n            ),\n            regex_match_statement=wafv2.CfnRuleGroup.RegexMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                regex_string=\"regexString\",\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            regex_pattern_set_reference_statement=wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty(\n                arn=\"arn\",\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            size_constraint_statement=wafv2.CfnRuleGroup.SizeConstraintStatementProperty(\n                comparison_operator=\"comparisonOperator\",\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                size=123,\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            sqli_match_statement=wafv2.CfnRuleGroup.SqliMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                sensitivity_level=\"sensitivityLevel\"\n            ),\n            xss_match_statement=wafv2.CfnRuleGroup.XssMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            )\n        )]\n    ),\n    rate_based_statement=wafv2.CfnRuleGroup.RateBasedStatementProperty(\n        aggregate_key_type=\"aggregateKeyType\",\n        limit=123,\n\n        # the properties below are optional\n        forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n            fallback_behavior=\"fallbackBehavior\",\n            header_name=\"headerName\"\n        ),\n        scope_down_statement=wafv2.CfnRuleGroup.StatementProperty(\n            and_statement=wafv2.CfnRuleGroup.AndStatementProperty(\n                statements=[statement_property_]\n            ),\n            byte_match_statement=wafv2.CfnRuleGroup.ByteMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                positional_constraint=\"positionalConstraint\",\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                search_string=\"searchString\",\n                search_string_base64=\"searchStringBase64\"\n            ),\n            geo_match_statement=wafv2.CfnRuleGroup.GeoMatchStatementProperty(\n                country_codes=[\"countryCodes\"],\n                forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                )\n            ),\n            ip_set_reference_statement={\n                \"arn\": \"arn\",\n\n                # the properties below are optional\n                \"ip_set_forwarded_ip_config\": {\n                    \"fallback_behavior\": \"fallbackBehavior\",\n                    \"header_name\": \"headerName\",\n                    \"position\": \"position\"\n                }\n            },\n            label_match_statement=wafv2.CfnRuleGroup.LabelMatchStatementProperty(\n                key=\"key\",\n                scope=\"scope\"\n            ),\n            not_statement=wafv2.CfnRuleGroup.NotStatementProperty(\n                statement=statement_property_\n            ),\n            or_statement=wafv2.CfnRuleGroup.OrStatementProperty(\n                statements=[statement_property_]\n            ),\n            rate_based_statement=rate_based_statement_property_,\n            regex_match_statement=wafv2.CfnRuleGroup.RegexMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                regex_string=\"regexString\",\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            regex_pattern_set_reference_statement=wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty(\n                arn=\"arn\",\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            size_constraint_statement=wafv2.CfnRuleGroup.SizeConstraintStatementProperty(\n                comparison_operator=\"comparisonOperator\",\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                size=123,\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            sqli_match_statement=wafv2.CfnRuleGroup.SqliMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                sensitivity_level=\"sensitivityLevel\"\n            ),\n            xss_match_statement=wafv2.CfnRuleGroup.XssMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            )\n        )\n    ),\n    regex_match_statement=wafv2.CfnRuleGroup.RegexMatchStatementProperty(\n        field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n            all_query_arguments=all_query_arguments,\n            body=wafv2.CfnRuleGroup.BodyProperty(\n                oversize_handling=\"oversizeHandling\"\n            ),\n            cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                    all=all,\n                    excluded_cookies=[\"excludedCookies\"],\n                    included_cookies=[\"includedCookies\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            headers=wafv2.CfnRuleGroup.HeadersProperty(\n                match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                    all=all,\n                    excluded_headers=[\"excludedHeaders\"],\n                    included_headers=[\"includedHeaders\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                    all=all,\n                    included_paths=[\"includedPaths\"]\n                ),\n                match_scope=\"matchScope\",\n\n                # the properties below are optional\n                invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            method=method,\n            query_string=query_string,\n            single_header=single_header,\n            single_query_argument=single_query_argument,\n            uri_path=uri_path\n        ),\n        regex_string=\"regexString\",\n        text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n            priority=123,\n            type=\"type\"\n        )]\n    ),\n    regex_pattern_set_reference_statement=wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty(\n        arn=\"arn\",\n        field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n            all_query_arguments=all_query_arguments,\n            body=wafv2.CfnRuleGroup.BodyProperty(\n                oversize_handling=\"oversizeHandling\"\n            ),\n            cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                    all=all,\n                    excluded_cookies=[\"excludedCookies\"],\n                    included_cookies=[\"includedCookies\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            headers=wafv2.CfnRuleGroup.HeadersProperty(\n                match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                    all=all,\n                    excluded_headers=[\"excludedHeaders\"],\n                    included_headers=[\"includedHeaders\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                    all=all,\n                    included_paths=[\"includedPaths\"]\n                ),\n                match_scope=\"matchScope\",\n\n                # the properties below are optional\n                invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            method=method,\n            query_string=query_string,\n            single_header=single_header,\n            single_query_argument=single_query_argument,\n            uri_path=uri_path\n        ),\n        text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n            priority=123,\n            type=\"type\"\n        )]\n    ),\n    size_constraint_statement=wafv2.CfnRuleGroup.SizeConstraintStatementProperty(\n        comparison_operator=\"comparisonOperator\",\n        field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n            all_query_arguments=all_query_arguments,\n            body=wafv2.CfnRuleGroup.BodyProperty(\n                oversize_handling=\"oversizeHandling\"\n            ),\n            cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                    all=all,\n                    excluded_cookies=[\"excludedCookies\"],\n                    included_cookies=[\"includedCookies\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            headers=wafv2.CfnRuleGroup.HeadersProperty(\n                match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                    all=all,\n                    excluded_headers=[\"excludedHeaders\"],\n                    included_headers=[\"includedHeaders\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                    all=all,\n                    included_paths=[\"includedPaths\"]\n                ),\n                match_scope=\"matchScope\",\n\n                # the properties below are optional\n                invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            method=method,\n            query_string=query_string,\n            single_header=single_header,\n            single_query_argument=single_query_argument,\n            uri_path=uri_path\n        ),\n        size=123,\n        text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n            priority=123,\n            type=\"type\"\n        )]\n    ),\n    sqli_match_statement=wafv2.CfnRuleGroup.SqliMatchStatementProperty(\n        field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n            all_query_arguments=all_query_arguments,\n            body=wafv2.CfnRuleGroup.BodyProperty(\n                oversize_handling=\"oversizeHandling\"\n            ),\n            cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                    all=all,\n                    excluded_cookies=[\"excludedCookies\"],\n                    included_cookies=[\"includedCookies\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            headers=wafv2.CfnRuleGroup.HeadersProperty(\n                match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                    all=all,\n                    excluded_headers=[\"excludedHeaders\"],\n                    included_headers=[\"includedHeaders\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                    all=all,\n                    included_paths=[\"includedPaths\"]\n                ),\n                match_scope=\"matchScope\",\n\n                # the properties below are optional\n                invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            method=method,\n            query_string=query_string,\n            single_header=single_header,\n            single_query_argument=single_query_argument,\n            uri_path=uri_path\n        ),\n        text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n            priority=123,\n            type=\"type\"\n        )],\n\n        # the properties below are optional\n        sensitivity_level=\"sensitivityLevel\"\n    ),\n    xss_match_statement=wafv2.CfnRuleGroup.XssMatchStatementProperty(\n        field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n            all_query_arguments=all_query_arguments,\n            body=wafv2.CfnRuleGroup.BodyProperty(\n                oversize_handling=\"oversizeHandling\"\n            ),\n            cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                    all=all,\n                    excluded_cookies=[\"excludedCookies\"],\n                    included_cookies=[\"includedCookies\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            headers=wafv2.CfnRuleGroup.HeadersProperty(\n                match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                    all=all,\n                    excluded_headers=[\"excludedHeaders\"],\n                    included_headers=[\"includedHeaders\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                    all=all,\n                    included_paths=[\"includedPaths\"]\n                ),\n                match_scope=\"matchScope\",\n\n                # the properties below are optional\n                invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            method=method,\n            query_string=query_string,\n            single_header=single_header,\n            single_query_argument=single_query_argument,\n            uri_path=uri_path\n        ),\n        text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n            priority=123,\n            type=\"type\"\n        )]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nAndStatementProperty andStatementProperty_;\nvar method;\nNotStatementProperty notStatementProperty_;\nOrStatementProperty orStatementProperty_;\nvar queryString;\nRateBasedStatementProperty rateBasedStatementProperty_;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nStatementProperty statementProperty = new StatementProperty {\n    AndStatement = new AndStatementProperty {\n        Statements = new [] { new StatementProperty {\n            AndStatement = andStatementProperty_,\n            ByteMatchStatement = new ByteMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                PositionalConstraint = \"positionalConstraint\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SearchString = \"searchString\",\n                SearchStringBase64 = \"searchStringBase64\"\n            },\n            GeoMatchStatement = new GeoMatchStatementProperty {\n                CountryCodes = new [] { \"countryCodes\" },\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                }\n            },\n            IpSetReferenceStatement = new Dictionary<string, object> {\n                { \"arn\", \"arn\" },\n\n                // the properties below are optional\n                { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                    { \"fallbackBehavior\", \"fallbackBehavior\" },\n                    { \"headerName\", \"headerName\" },\n                    { \"position\", \"position\" }\n                } }\n            },\n            LabelMatchStatement = new LabelMatchStatementProperty {\n                Key = \"key\",\n                Scope = \"scope\"\n            },\n            NotStatement = new NotStatementProperty {\n                Statement = statementProperty_\n            },\n            OrStatement = new OrStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            RateBasedStatement = new RateBasedStatementProperty {\n                AggregateKeyType = \"aggregateKeyType\",\n                Limit = 123,\n\n                // the properties below are optional\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                },\n                ScopeDownStatement = statementProperty_\n            },\n            RegexMatchStatement = new RegexMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                RegexString = \"regexString\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n                Arn = \"arn\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SizeConstraintStatement = new SizeConstraintStatementProperty {\n                ComparisonOperator = \"comparisonOperator\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                Size = 123,\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SqliMatchStatement = new SqliMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SensitivityLevel = \"sensitivityLevel\"\n            },\n            XssMatchStatement = new XssMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            }\n        } }\n    },\n    ByteMatchStatement = new ByteMatchStatementProperty {\n        FieldToMatch = new FieldToMatchProperty {\n            AllQueryArguments = allQueryArguments,\n            Body = new BodyProperty {\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Cookies = new CookiesProperty {\n                MatchPattern = new CookieMatchPatternProperty {\n                    All = all,\n                    ExcludedCookies = new [] { \"excludedCookies\" },\n                    IncludedCookies = new [] { \"includedCookies\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Headers = new HeadersProperty {\n                MatchPattern = new HeaderMatchPatternProperty {\n                    All = all,\n                    ExcludedHeaders = new [] { \"excludedHeaders\" },\n                    IncludedHeaders = new [] { \"includedHeaders\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            JsonBody = new JsonBodyProperty {\n                MatchPattern = new JsonMatchPatternProperty {\n                    All = all,\n                    IncludedPaths = new [] { \"includedPaths\" }\n                },\n                MatchScope = \"matchScope\",\n\n                // the properties below are optional\n                InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Method = method,\n            QueryString = queryString,\n            SingleHeader = singleHeader,\n            SingleQueryArgument = singleQueryArgument,\n            UriPath = uriPath\n        },\n        PositionalConstraint = \"positionalConstraint\",\n        TextTransformations = new [] { new TextTransformationProperty {\n            Priority = 123,\n            Type = \"type\"\n        } },\n\n        // the properties below are optional\n        SearchString = \"searchString\",\n        SearchStringBase64 = \"searchStringBase64\"\n    },\n    GeoMatchStatement = new GeoMatchStatementProperty {\n        CountryCodes = new [] { \"countryCodes\" },\n        ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n            FallbackBehavior = \"fallbackBehavior\",\n            HeaderName = \"headerName\"\n        }\n    },\n    IpSetReferenceStatement = new Dictionary<string, object> {\n        { \"arn\", \"arn\" },\n\n        // the properties below are optional\n        { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n            { \"fallbackBehavior\", \"fallbackBehavior\" },\n            { \"headerName\", \"headerName\" },\n            { \"position\", \"position\" }\n        } }\n    },\n    LabelMatchStatement = new LabelMatchStatementProperty {\n        Key = \"key\",\n        Scope = \"scope\"\n    },\n    NotStatement = new NotStatementProperty {\n        Statement = new StatementProperty {\n            AndStatement = new AndStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            ByteMatchStatement = new ByteMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                PositionalConstraint = \"positionalConstraint\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SearchString = \"searchString\",\n                SearchStringBase64 = \"searchStringBase64\"\n            },\n            GeoMatchStatement = new GeoMatchStatementProperty {\n                CountryCodes = new [] { \"countryCodes\" },\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                }\n            },\n            IpSetReferenceStatement = new Dictionary<string, object> {\n                { \"arn\", \"arn\" },\n\n                // the properties below are optional\n                { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                    { \"fallbackBehavior\", \"fallbackBehavior\" },\n                    { \"headerName\", \"headerName\" },\n                    { \"position\", \"position\" }\n                } }\n            },\n            LabelMatchStatement = new LabelMatchStatementProperty {\n                Key = \"key\",\n                Scope = \"scope\"\n            },\n            NotStatement = notStatementProperty_,\n            OrStatement = new OrStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            RateBasedStatement = new RateBasedStatementProperty {\n                AggregateKeyType = \"aggregateKeyType\",\n                Limit = 123,\n\n                // the properties below are optional\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                },\n                ScopeDownStatement = statementProperty_\n            },\n            RegexMatchStatement = new RegexMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                RegexString = \"regexString\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n                Arn = \"arn\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SizeConstraintStatement = new SizeConstraintStatementProperty {\n                ComparisonOperator = \"comparisonOperator\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                Size = 123,\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SqliMatchStatement = new SqliMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SensitivityLevel = \"sensitivityLevel\"\n            },\n            XssMatchStatement = new XssMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            }\n        }\n    },\n    OrStatement = new OrStatementProperty {\n        Statements = new [] { new StatementProperty {\n            AndStatement = new AndStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            ByteMatchStatement = new ByteMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                PositionalConstraint = \"positionalConstraint\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SearchString = \"searchString\",\n                SearchStringBase64 = \"searchStringBase64\"\n            },\n            GeoMatchStatement = new GeoMatchStatementProperty {\n                CountryCodes = new [] { \"countryCodes\" },\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                }\n            },\n            IpSetReferenceStatement = new Dictionary<string, object> {\n                { \"arn\", \"arn\" },\n\n                // the properties below are optional\n                { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                    { \"fallbackBehavior\", \"fallbackBehavior\" },\n                    { \"headerName\", \"headerName\" },\n                    { \"position\", \"position\" }\n                } }\n            },\n            LabelMatchStatement = new LabelMatchStatementProperty {\n                Key = \"key\",\n                Scope = \"scope\"\n            },\n            NotStatement = new NotStatementProperty {\n                Statement = statementProperty_\n            },\n            OrStatement = orStatementProperty_,\n            RateBasedStatement = new RateBasedStatementProperty {\n                AggregateKeyType = \"aggregateKeyType\",\n                Limit = 123,\n\n                // the properties below are optional\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                },\n                ScopeDownStatement = statementProperty_\n            },\n            RegexMatchStatement = new RegexMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                RegexString = \"regexString\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n                Arn = \"arn\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SizeConstraintStatement = new SizeConstraintStatementProperty {\n                ComparisonOperator = \"comparisonOperator\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                Size = 123,\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SqliMatchStatement = new SqliMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SensitivityLevel = \"sensitivityLevel\"\n            },\n            XssMatchStatement = new XssMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            }\n        } }\n    },\n    RateBasedStatement = new RateBasedStatementProperty {\n        AggregateKeyType = \"aggregateKeyType\",\n        Limit = 123,\n\n        // the properties below are optional\n        ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n            FallbackBehavior = \"fallbackBehavior\",\n            HeaderName = \"headerName\"\n        },\n        ScopeDownStatement = new StatementProperty {\n            AndStatement = new AndStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            ByteMatchStatement = new ByteMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                PositionalConstraint = \"positionalConstraint\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SearchString = \"searchString\",\n                SearchStringBase64 = \"searchStringBase64\"\n            },\n            GeoMatchStatement = new GeoMatchStatementProperty {\n                CountryCodes = new [] { \"countryCodes\" },\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                }\n            },\n            IpSetReferenceStatement = new Dictionary<string, object> {\n                { \"arn\", \"arn\" },\n\n                // the properties below are optional\n                { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                    { \"fallbackBehavior\", \"fallbackBehavior\" },\n                    { \"headerName\", \"headerName\" },\n                    { \"position\", \"position\" }\n                } }\n            },\n            LabelMatchStatement = new LabelMatchStatementProperty {\n                Key = \"key\",\n                Scope = \"scope\"\n            },\n            NotStatement = new NotStatementProperty {\n                Statement = statementProperty_\n            },\n            OrStatement = new OrStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            RateBasedStatement = rateBasedStatementProperty_,\n            RegexMatchStatement = new RegexMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                RegexString = \"regexString\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n                Arn = \"arn\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SizeConstraintStatement = new SizeConstraintStatementProperty {\n                ComparisonOperator = \"comparisonOperator\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                Size = 123,\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SqliMatchStatement = new SqliMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SensitivityLevel = \"sensitivityLevel\"\n            },\n            XssMatchStatement = new XssMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            }\n        }\n    },\n    RegexMatchStatement = new RegexMatchStatementProperty {\n        FieldToMatch = new FieldToMatchProperty {\n            AllQueryArguments = allQueryArguments,\n            Body = new BodyProperty {\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Cookies = new CookiesProperty {\n                MatchPattern = new CookieMatchPatternProperty {\n                    All = all,\n                    ExcludedCookies = new [] { \"excludedCookies\" },\n                    IncludedCookies = new [] { \"includedCookies\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Headers = new HeadersProperty {\n                MatchPattern = new HeaderMatchPatternProperty {\n                    All = all,\n                    ExcludedHeaders = new [] { \"excludedHeaders\" },\n                    IncludedHeaders = new [] { \"includedHeaders\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            JsonBody = new JsonBodyProperty {\n                MatchPattern = new JsonMatchPatternProperty {\n                    All = all,\n                    IncludedPaths = new [] { \"includedPaths\" }\n                },\n                MatchScope = \"matchScope\",\n\n                // the properties below are optional\n                InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Method = method,\n            QueryString = queryString,\n            SingleHeader = singleHeader,\n            SingleQueryArgument = singleQueryArgument,\n            UriPath = uriPath\n        },\n        RegexString = \"regexString\",\n        TextTransformations = new [] { new TextTransformationProperty {\n            Priority = 123,\n            Type = \"type\"\n        } }\n    },\n    RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n        Arn = \"arn\",\n        FieldToMatch = new FieldToMatchProperty {\n            AllQueryArguments = allQueryArguments,\n            Body = new BodyProperty {\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Cookies = new CookiesProperty {\n                MatchPattern = new CookieMatchPatternProperty {\n                    All = all,\n                    ExcludedCookies = new [] { \"excludedCookies\" },\n                    IncludedCookies = new [] { \"includedCookies\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Headers = new HeadersProperty {\n                MatchPattern = new HeaderMatchPatternProperty {\n                    All = all,\n                    ExcludedHeaders = new [] { \"excludedHeaders\" },\n                    IncludedHeaders = new [] { \"includedHeaders\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            JsonBody = new JsonBodyProperty {\n                MatchPattern = new JsonMatchPatternProperty {\n                    All = all,\n                    IncludedPaths = new [] { \"includedPaths\" }\n                },\n                MatchScope = \"matchScope\",\n\n                // the properties below are optional\n                InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Method = method,\n            QueryString = queryString,\n            SingleHeader = singleHeader,\n            SingleQueryArgument = singleQueryArgument,\n            UriPath = uriPath\n        },\n        TextTransformations = new [] { new TextTransformationProperty {\n            Priority = 123,\n            Type = \"type\"\n        } }\n    },\n    SizeConstraintStatement = new SizeConstraintStatementProperty {\n        ComparisonOperator = \"comparisonOperator\",\n        FieldToMatch = new FieldToMatchProperty {\n            AllQueryArguments = allQueryArguments,\n            Body = new BodyProperty {\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Cookies = new CookiesProperty {\n                MatchPattern = new CookieMatchPatternProperty {\n                    All = all,\n                    ExcludedCookies = new [] { \"excludedCookies\" },\n                    IncludedCookies = new [] { \"includedCookies\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Headers = new HeadersProperty {\n                MatchPattern = new HeaderMatchPatternProperty {\n                    All = all,\n                    ExcludedHeaders = new [] { \"excludedHeaders\" },\n                    IncludedHeaders = new [] { \"includedHeaders\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            JsonBody = new JsonBodyProperty {\n                MatchPattern = new JsonMatchPatternProperty {\n                    All = all,\n                    IncludedPaths = new [] { \"includedPaths\" }\n                },\n                MatchScope = \"matchScope\",\n\n                // the properties below are optional\n                InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Method = method,\n            QueryString = queryString,\n            SingleHeader = singleHeader,\n            SingleQueryArgument = singleQueryArgument,\n            UriPath = uriPath\n        },\n        Size = 123,\n        TextTransformations = new [] { new TextTransformationProperty {\n            Priority = 123,\n            Type = \"type\"\n        } }\n    },\n    SqliMatchStatement = new SqliMatchStatementProperty {\n        FieldToMatch = new FieldToMatchProperty {\n            AllQueryArguments = allQueryArguments,\n            Body = new BodyProperty {\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Cookies = new CookiesProperty {\n                MatchPattern = new CookieMatchPatternProperty {\n                    All = all,\n                    ExcludedCookies = new [] { \"excludedCookies\" },\n                    IncludedCookies = new [] { \"includedCookies\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Headers = new HeadersProperty {\n                MatchPattern = new HeaderMatchPatternProperty {\n                    All = all,\n                    ExcludedHeaders = new [] { \"excludedHeaders\" },\n                    IncludedHeaders = new [] { \"includedHeaders\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            JsonBody = new JsonBodyProperty {\n                MatchPattern = new JsonMatchPatternProperty {\n                    All = all,\n                    IncludedPaths = new [] { \"includedPaths\" }\n                },\n                MatchScope = \"matchScope\",\n\n                // the properties below are optional\n                InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Method = method,\n            QueryString = queryString,\n            SingleHeader = singleHeader,\n            SingleQueryArgument = singleQueryArgument,\n            UriPath = uriPath\n        },\n        TextTransformations = new [] { new TextTransformationProperty {\n            Priority = 123,\n            Type = \"type\"\n        } },\n\n        // the properties below are optional\n        SensitivityLevel = \"sensitivityLevel\"\n    },\n    XssMatchStatement = new XssMatchStatementProperty {\n        FieldToMatch = new FieldToMatchProperty {\n            AllQueryArguments = allQueryArguments,\n            Body = new BodyProperty {\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Cookies = new CookiesProperty {\n                MatchPattern = new CookieMatchPatternProperty {\n                    All = all,\n                    ExcludedCookies = new [] { \"excludedCookies\" },\n                    IncludedCookies = new [] { \"includedCookies\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Headers = new HeadersProperty {\n                MatchPattern = new HeaderMatchPatternProperty {\n                    All = all,\n                    ExcludedHeaders = new [] { \"excludedHeaders\" },\n                    IncludedHeaders = new [] { \"includedHeaders\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            JsonBody = new JsonBodyProperty {\n                MatchPattern = new JsonMatchPatternProperty {\n                    All = all,\n                    IncludedPaths = new [] { \"includedPaths\" }\n                },\n                MatchScope = \"matchScope\",\n\n                // the properties below are optional\n                InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Method = method,\n            QueryString = queryString,\n            SingleHeader = singleHeader,\n            SingleQueryArgument = singleQueryArgument,\n            UriPath = uriPath\n        },\n        TextTransformations = new [] { new TextTransformationProperty {\n            Priority = 123,\n            Type = \"type\"\n        } }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nAndStatementProperty andStatementProperty_;\nObject method;\nNotStatementProperty notStatementProperty_;\nOrStatementProperty orStatementProperty_;\nObject queryString;\nRateBasedStatementProperty rateBasedStatementProperty_;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nStatementProperty statementProperty = StatementProperty.builder()\n        .andStatement(AndStatementProperty.builder()\n                .statements(List.of(StatementProperty.builder()\n                        .andStatement(andStatementProperty_)\n                        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .positionalConstraint(\"positionalConstraint\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .searchString(\"searchString\")\n                                .searchStringBase64(\"searchStringBase64\")\n                                .build())\n                        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                                .countryCodes(List.of(\"countryCodes\"))\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .build())\n                        .ipSetReferenceStatement(Map.of(\n                                \"arn\", \"arn\",\n\n                                // the properties below are optional\n                                \"ipSetForwardedIpConfig\", Map.of(\n                                        \"fallbackBehavior\", \"fallbackBehavior\",\n                                        \"headerName\", \"headerName\",\n                                        \"position\", \"position\")))\n                        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                                .key(\"key\")\n                                .scope(\"scope\")\n                                .build())\n                        .notStatement(NotStatementProperty.builder()\n                                .statement(statementProperty_)\n                                .build())\n                        .orStatement(OrStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .rateBasedStatement(RateBasedStatementProperty.builder()\n                                .aggregateKeyType(\"aggregateKeyType\")\n                                .limit(123)\n\n                                // the properties below are optional\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .scopeDownStatement(statementProperty_)\n                                .build())\n                        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .regexString(\"regexString\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                                .comparisonOperator(\"comparisonOperator\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .size(123)\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .sensitivityLevel(\"sensitivityLevel\")\n                                .build())\n                        .xssMatchStatement(XssMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .build()))\n                .build())\n        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                .fieldToMatch(FieldToMatchProperty.builder()\n                        .allQueryArguments(allQueryArguments)\n                        .body(BodyProperty.builder()\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .cookies(CookiesProperty.builder()\n                                .matchPattern(CookieMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                        .includedCookies(List.of(\"includedCookies\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .headers(HeadersProperty.builder()\n                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .jsonBody(JsonBodyProperty.builder()\n                                .matchPattern(JsonMatchPatternProperty.builder()\n                                        .all(all)\n                                        .includedPaths(List.of(\"includedPaths\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n\n                                // the properties below are optional\n                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .method(method)\n                        .queryString(queryString)\n                        .singleHeader(singleHeader)\n                        .singleQueryArgument(singleQueryArgument)\n                        .uriPath(uriPath)\n                        .build())\n                .positionalConstraint(\"positionalConstraint\")\n                .textTransformations(List.of(TextTransformationProperty.builder()\n                        .priority(123)\n                        .type(\"type\")\n                        .build()))\n\n                // the properties below are optional\n                .searchString(\"searchString\")\n                .searchStringBase64(\"searchStringBase64\")\n                .build())\n        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                .countryCodes(List.of(\"countryCodes\"))\n                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                        .fallbackBehavior(\"fallbackBehavior\")\n                        .headerName(\"headerName\")\n                        .build())\n                .build())\n        .ipSetReferenceStatement(Map.of(\n                \"arn\", \"arn\",\n\n                // the properties below are optional\n                \"ipSetForwardedIpConfig\", Map.of(\n                        \"fallbackBehavior\", \"fallbackBehavior\",\n                        \"headerName\", \"headerName\",\n                        \"position\", \"position\")))\n        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                .key(\"key\")\n                .scope(\"scope\")\n                .build())\n        .notStatement(NotStatementProperty.builder()\n                .statement(StatementProperty.builder()\n                        .andStatement(AndStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .positionalConstraint(\"positionalConstraint\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .searchString(\"searchString\")\n                                .searchStringBase64(\"searchStringBase64\")\n                                .build())\n                        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                                .countryCodes(List.of(\"countryCodes\"))\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .build())\n                        .ipSetReferenceStatement(Map.of(\n                                \"arn\", \"arn\",\n\n                                // the properties below are optional\n                                \"ipSetForwardedIpConfig\", Map.of(\n                                        \"fallbackBehavior\", \"fallbackBehavior\",\n                                        \"headerName\", \"headerName\",\n                                        \"position\", \"position\")))\n                        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                                .key(\"key\")\n                                .scope(\"scope\")\n                                .build())\n                        .notStatement(notStatementProperty_)\n                        .orStatement(OrStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .rateBasedStatement(RateBasedStatementProperty.builder()\n                                .aggregateKeyType(\"aggregateKeyType\")\n                                .limit(123)\n\n                                // the properties below are optional\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .scopeDownStatement(statementProperty_)\n                                .build())\n                        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .regexString(\"regexString\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                                .comparisonOperator(\"comparisonOperator\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .size(123)\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .sensitivityLevel(\"sensitivityLevel\")\n                                .build())\n                        .xssMatchStatement(XssMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .build())\n                .build())\n        .orStatement(OrStatementProperty.builder()\n                .statements(List.of(StatementProperty.builder()\n                        .andStatement(AndStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .positionalConstraint(\"positionalConstraint\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .searchString(\"searchString\")\n                                .searchStringBase64(\"searchStringBase64\")\n                                .build())\n                        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                                .countryCodes(List.of(\"countryCodes\"))\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .build())\n                        .ipSetReferenceStatement(Map.of(\n                                \"arn\", \"arn\",\n\n                                // the properties below are optional\n                                \"ipSetForwardedIpConfig\", Map.of(\n                                        \"fallbackBehavior\", \"fallbackBehavior\",\n                                        \"headerName\", \"headerName\",\n                                        \"position\", \"position\")))\n                        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                                .key(\"key\")\n                                .scope(\"scope\")\n                                .build())\n                        .notStatement(NotStatementProperty.builder()\n                                .statement(statementProperty_)\n                                .build())\n                        .orStatement(orStatementProperty_)\n                        .rateBasedStatement(RateBasedStatementProperty.builder()\n                                .aggregateKeyType(\"aggregateKeyType\")\n                                .limit(123)\n\n                                // the properties below are optional\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .scopeDownStatement(statementProperty_)\n                                .build())\n                        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .regexString(\"regexString\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                                .comparisonOperator(\"comparisonOperator\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .size(123)\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .sensitivityLevel(\"sensitivityLevel\")\n                                .build())\n                        .xssMatchStatement(XssMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .build()))\n                .build())\n        .rateBasedStatement(RateBasedStatementProperty.builder()\n                .aggregateKeyType(\"aggregateKeyType\")\n                .limit(123)\n\n                // the properties below are optional\n                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                        .fallbackBehavior(\"fallbackBehavior\")\n                        .headerName(\"headerName\")\n                        .build())\n                .scopeDownStatement(StatementProperty.builder()\n                        .andStatement(AndStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .positionalConstraint(\"positionalConstraint\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .searchString(\"searchString\")\n                                .searchStringBase64(\"searchStringBase64\")\n                                .build())\n                        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                                .countryCodes(List.of(\"countryCodes\"))\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .build())\n                        .ipSetReferenceStatement(Map.of(\n                                \"arn\", \"arn\",\n\n                                // the properties below are optional\n                                \"ipSetForwardedIpConfig\", Map.of(\n                                        \"fallbackBehavior\", \"fallbackBehavior\",\n                                        \"headerName\", \"headerName\",\n                                        \"position\", \"position\")))\n                        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                                .key(\"key\")\n                                .scope(\"scope\")\n                                .build())\n                        .notStatement(NotStatementProperty.builder()\n                                .statement(statementProperty_)\n                                .build())\n                        .orStatement(OrStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .rateBasedStatement(rateBasedStatementProperty_)\n                        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .regexString(\"regexString\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                                .comparisonOperator(\"comparisonOperator\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .size(123)\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .sensitivityLevel(\"sensitivityLevel\")\n                                .build())\n                        .xssMatchStatement(XssMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .build())\n                .build())\n        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                .fieldToMatch(FieldToMatchProperty.builder()\n                        .allQueryArguments(allQueryArguments)\n                        .body(BodyProperty.builder()\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .cookies(CookiesProperty.builder()\n                                .matchPattern(CookieMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                        .includedCookies(List.of(\"includedCookies\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .headers(HeadersProperty.builder()\n                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .jsonBody(JsonBodyProperty.builder()\n                                .matchPattern(JsonMatchPatternProperty.builder()\n                                        .all(all)\n                                        .includedPaths(List.of(\"includedPaths\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n\n                                // the properties below are optional\n                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .method(method)\n                        .queryString(queryString)\n                        .singleHeader(singleHeader)\n                        .singleQueryArgument(singleQueryArgument)\n                        .uriPath(uriPath)\n                        .build())\n                .regexString(\"regexString\")\n                .textTransformations(List.of(TextTransformationProperty.builder()\n                        .priority(123)\n                        .type(\"type\")\n                        .build()))\n                .build())\n        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                .arn(\"arn\")\n                .fieldToMatch(FieldToMatchProperty.builder()\n                        .allQueryArguments(allQueryArguments)\n                        .body(BodyProperty.builder()\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .cookies(CookiesProperty.builder()\n                                .matchPattern(CookieMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                        .includedCookies(List.of(\"includedCookies\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .headers(HeadersProperty.builder()\n                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .jsonBody(JsonBodyProperty.builder()\n                                .matchPattern(JsonMatchPatternProperty.builder()\n                                        .all(all)\n                                        .includedPaths(List.of(\"includedPaths\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n\n                                // the properties below are optional\n                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .method(method)\n                        .queryString(queryString)\n                        .singleHeader(singleHeader)\n                        .singleQueryArgument(singleQueryArgument)\n                        .uriPath(uriPath)\n                        .build())\n                .textTransformations(List.of(TextTransformationProperty.builder()\n                        .priority(123)\n                        .type(\"type\")\n                        .build()))\n                .build())\n        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                .comparisonOperator(\"comparisonOperator\")\n                .fieldToMatch(FieldToMatchProperty.builder()\n                        .allQueryArguments(allQueryArguments)\n                        .body(BodyProperty.builder()\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .cookies(CookiesProperty.builder()\n                                .matchPattern(CookieMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                        .includedCookies(List.of(\"includedCookies\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .headers(HeadersProperty.builder()\n                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .jsonBody(JsonBodyProperty.builder()\n                                .matchPattern(JsonMatchPatternProperty.builder()\n                                        .all(all)\n                                        .includedPaths(List.of(\"includedPaths\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n\n                                // the properties below are optional\n                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .method(method)\n                        .queryString(queryString)\n                        .singleHeader(singleHeader)\n                        .singleQueryArgument(singleQueryArgument)\n                        .uriPath(uriPath)\n                        .build())\n                .size(123)\n                .textTransformations(List.of(TextTransformationProperty.builder()\n                        .priority(123)\n                        .type(\"type\")\n                        .build()))\n                .build())\n        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                .fieldToMatch(FieldToMatchProperty.builder()\n                        .allQueryArguments(allQueryArguments)\n                        .body(BodyProperty.builder()\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .cookies(CookiesProperty.builder()\n                                .matchPattern(CookieMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                        .includedCookies(List.of(\"includedCookies\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .headers(HeadersProperty.builder()\n                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .jsonBody(JsonBodyProperty.builder()\n                                .matchPattern(JsonMatchPatternProperty.builder()\n                                        .all(all)\n                                        .includedPaths(List.of(\"includedPaths\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n\n                                // the properties below are optional\n                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .method(method)\n                        .queryString(queryString)\n                        .singleHeader(singleHeader)\n                        .singleQueryArgument(singleQueryArgument)\n                        .uriPath(uriPath)\n                        .build())\n                .textTransformations(List.of(TextTransformationProperty.builder()\n                        .priority(123)\n                        .type(\"type\")\n                        .build()))\n\n                // the properties below are optional\n                .sensitivityLevel(\"sensitivityLevel\")\n                .build())\n        .xssMatchStatement(XssMatchStatementProperty.builder()\n                .fieldToMatch(FieldToMatchProperty.builder()\n                        .allQueryArguments(allQueryArguments)\n                        .body(BodyProperty.builder()\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .cookies(CookiesProperty.builder()\n                                .matchPattern(CookieMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                        .includedCookies(List.of(\"includedCookies\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .headers(HeadersProperty.builder()\n                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .jsonBody(JsonBodyProperty.builder()\n                                .matchPattern(JsonMatchPatternProperty.builder()\n                                        .all(all)\n                                        .includedPaths(List.of(\"includedPaths\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n\n                                // the properties below are optional\n                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .method(method)\n                        .queryString(queryString)\n                        .singleHeader(singleHeader)\n                        .singleQueryArgument(singleQueryArgument)\n                        .uriPath(uriPath)\n                        .build())\n                .textTransformations(List.of(TextTransformationProperty.builder()\n                        .priority(123)\n                        .type(\"type\")\n                        .build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar andStatementProperty_ andStatementProperty\nvar method interface{}\nvar notStatementProperty_ notStatementProperty\nvar orStatementProperty_ orStatementProperty\nvar queryString interface{}\nvar rateBasedStatementProperty_ rateBasedStatementProperty\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\nstatementProperty := &statementProperty{\n\tandStatement: &andStatementProperty{\n\t\tstatements: []interface{}{\n\t\t\t&statementProperty{\n\t\t\t\tandStatement: andStatementProperty_,\n\t\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t\t},\n\t\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t\t},\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\t},\n\t\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\t\tstatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\torStatement: &orStatementProperty{\n\t\t\t\t\tstatements: []interface{}{\n\t\t\t\t\t\tstatementProperty_,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tsize: jsii.Number(123),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t\t},\n\t\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\tallQueryArguments: allQueryArguments,\n\t\t\tbody: &bodyProperty{\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tcookies: &cookiesProperty{\n\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\theaders: &headersProperty{\n\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\turiPath: uriPath,\n\t\t},\n\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\ttextTransformations: []interface{}{\n\t\t\t&textTransformationProperty{\n\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tsearchString: jsii.String(\"searchString\"),\n\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t},\n\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\tcountryCodes: []*string{\n\t\t\tjsii.String(\"countryCodes\"),\n\t\t},\n\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t},\n\t},\n\tipSetReferenceStatement: map[string]interface{}{\n\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t// the properties below are optional\n\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\"position\": jsii.String(\"position\"),\n\t\t},\n\t},\n\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\tkey: jsii.String(\"key\"),\n\t\tscope: jsii.String(\"scope\"),\n\t},\n\tnotStatement: &notStatementProperty{\n\t\tstatement: &statementProperty{\n\t\t\tandStatement: &andStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t},\n\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t},\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t},\n\t\t\tnotStatement: notStatementProperty_,\n\t\t\torStatement: &orStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t},\n\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tsize: jsii.Number(123),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t},\n\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\torStatement: &orStatementProperty{\n\t\tstatements: []interface{}{\n\t\t\t&statementProperty{\n\t\t\t\tandStatement: &andStatementProperty{\n\t\t\t\t\tstatements: []interface{}{\n\t\t\t\t\t\tstatementProperty_,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t\t},\n\t\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t\t},\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\t},\n\t\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\t\tstatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\torStatement: orStatementProperty_,\n\t\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tsize: jsii.Number(123),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t\t},\n\t\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\trateBasedStatement: &rateBasedStatementProperty{\n\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\tlimit: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t},\n\t\tscopeDownStatement: &statementProperty{\n\t\t\tandStatement: &andStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t},\n\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t},\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t},\n\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\tstatement: statementProperty_,\n\t\t\t},\n\t\t\torStatement: &orStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\trateBasedStatement: rateBasedStatementProperty_,\n\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tsize: jsii.Number(123),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t},\n\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tregexMatchStatement: &regexMatchStatementProperty{\n\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\tallQueryArguments: allQueryArguments,\n\t\t\tbody: &bodyProperty{\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tcookies: &cookiesProperty{\n\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\theaders: &headersProperty{\n\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\turiPath: uriPath,\n\t\t},\n\t\tregexString: jsii.String(\"regexString\"),\n\t\ttextTransformations: []interface{}{\n\t\t\t&textTransformationProperty{\n\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t},\n\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\tarn: jsii.String(\"arn\"),\n\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\tallQueryArguments: allQueryArguments,\n\t\t\tbody: &bodyProperty{\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tcookies: &cookiesProperty{\n\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\theaders: &headersProperty{\n\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\turiPath: uriPath,\n\t\t},\n\t\ttextTransformations: []interface{}{\n\t\t\t&textTransformationProperty{\n\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t},\n\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\tallQueryArguments: allQueryArguments,\n\t\t\tbody: &bodyProperty{\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tcookies: &cookiesProperty{\n\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\theaders: &headersProperty{\n\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\turiPath: uriPath,\n\t\t},\n\t\tsize: jsii.Number(123),\n\t\ttextTransformations: []interface{}{\n\t\t\t&textTransformationProperty{\n\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t},\n\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\tallQueryArguments: allQueryArguments,\n\t\t\tbody: &bodyProperty{\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tcookies: &cookiesProperty{\n\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\theaders: &headersProperty{\n\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\turiPath: uriPath,\n\t\t},\n\t\ttextTransformations: []interface{}{\n\t\t\t&textTransformationProperty{\n\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t},\n\txssMatchStatement: &xssMatchStatementProperty{\n\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\tallQueryArguments: allQueryArguments,\n\t\t\tbody: &bodyProperty{\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tcookies: &cookiesProperty{\n\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\theaders: &headersProperty{\n\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\turiPath: uriPath,\n\t\t},\n\t\ttextTransformations: []interface{}{\n\t\t\t&textTransformationProperty{\n\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const andStatementProperty_: wafv2.CfnRuleGroup.AndStatementProperty;\ndeclare const method: any;\ndeclare const notStatementProperty_: wafv2.CfnRuleGroup.NotStatementProperty;\ndeclare const orStatementProperty_: wafv2.CfnRuleGroup.OrStatementProperty;\ndeclare const queryString: any;\ndeclare const rateBasedStatementProperty_: wafv2.CfnRuleGroup.RateBasedStatementProperty;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst statementProperty: wafv2.CfnRuleGroup.StatementProperty = {\n  andStatement: {\n    statements: [{\n      andStatement: andStatementProperty_,\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    }],\n  },\n  byteMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    positionalConstraint: 'positionalConstraint',\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n\n    // the properties below are optional\n    searchString: 'searchString',\n    searchStringBase64: 'searchStringBase64',\n  },\n  geoMatchStatement: {\n    countryCodes: ['countryCodes'],\n    forwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n    },\n  },\n  ipSetReferenceStatement: {\n    arn: 'arn',\n\n    // the properties below are optional\n    ipSetForwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n      position: 'position',\n    },\n  },\n  labelMatchStatement: {\n    key: 'key',\n    scope: 'scope',\n  },\n  notStatement: {\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: notStatementProperty_,\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n  },\n  orStatement: {\n    statements: [{\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: orStatementProperty_,\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    }],\n  },\n  rateBasedStatement: {\n    aggregateKeyType: 'aggregateKeyType',\n    limit: 123,\n\n    // the properties below are optional\n    forwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n    },\n    scopeDownStatement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: rateBasedStatementProperty_,\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n  },\n  regexMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    regexString: 'regexString',\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  regexPatternSetReferenceStatement: {\n    arn: 'arn',\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  sizeConstraintStatement: {\n    comparisonOperator: 'comparisonOperator',\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    size: 123,\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  sqliMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n\n    // the properties below are optional\n    sensitivityLevel: 'sensitivityLevel',\n  },\n  xssMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.StatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.StatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const andStatementProperty_: wafv2.CfnRuleGroup.AndStatementProperty;\ndeclare const method: any;\ndeclare const notStatementProperty_: wafv2.CfnRuleGroup.NotStatementProperty;\ndeclare const orStatementProperty_: wafv2.CfnRuleGroup.OrStatementProperty;\ndeclare const queryString: any;\ndeclare const rateBasedStatementProperty_: wafv2.CfnRuleGroup.RateBasedStatementProperty;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst statementProperty: wafv2.CfnRuleGroup.StatementProperty = {\n  andStatement: {\n    statements: [{\n      andStatement: andStatementProperty_,\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    }],\n  },\n  byteMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    positionalConstraint: 'positionalConstraint',\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n\n    // the properties below are optional\n    searchString: 'searchString',\n    searchStringBase64: 'searchStringBase64',\n  },\n  geoMatchStatement: {\n    countryCodes: ['countryCodes'],\n    forwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n    },\n  },\n  ipSetReferenceStatement: {\n    arn: 'arn',\n\n    // the properties below are optional\n    ipSetForwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n      position: 'position',\n    },\n  },\n  labelMatchStatement: {\n    key: 'key',\n    scope: 'scope',\n  },\n  notStatement: {\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: notStatementProperty_,\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n  },\n  orStatement: {\n    statements: [{\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: orStatementProperty_,\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    }],\n  },\n  rateBasedStatement: {\n    aggregateKeyType: 'aggregateKeyType',\n    limit: 123,\n\n    // the properties below are optional\n    forwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n    },\n    scopeDownStatement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: rateBasedStatementProperty_,\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n  },\n  regexMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    regexString: 'regexString',\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  regexPatternSetReferenceStatement: {\n    arn: 'arn',\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  sizeConstraintStatement: {\n    comparisonOperator: 'comparisonOperator',\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    size: 123,\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  sqliMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n\n    // the properties below are optional\n    sensitivityLevel: 'sensitivityLevel',\n  },\n  xssMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 39,
        "10": 513,
        "75": 1504,
        "125": 7,
        "130": 12,
        "153": 12,
        "169": 6,
        "192": 193,
        "193": 350,
        "225": 13,
        "242": 13,
        "243": 13,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1186,
        "290": 1
      },
      "fqnsFingerprint": "fbe20461c673fe2cf64d7bc84bf77ce1e7d740c007739c6d40fa45b23ba4e07b"
    },
    "f0483ee07f0e91178e07558756f9e5990c495dade494827cc2d76b8837d5d337": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ntext_transformation_property = wafv2.CfnRuleGroup.TextTransformationProperty(\n    priority=123,\n    type=\"type\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nTextTransformationProperty textTransformationProperty = new TextTransformationProperty {\n    Priority = 123,\n    Type = \"type\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nTextTransformationProperty textTransformationProperty = TextTransformationProperty.builder()\n        .priority(123)\n        .type(\"type\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ntextTransformationProperty := &textTransformationProperty{\n\tpriority: jsii.Number(123),\n\ttype: jsii.String(\"type\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst textTransformationProperty: wafv2.CfnRuleGroup.TextTransformationProperty = {\n  priority: 123,\n  type: 'type',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.TextTransformationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.TextTransformationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst textTransformationProperty: wafv2.CfnRuleGroup.TextTransformationProperty = {\n  priority: 123,\n  type: 'type',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "aaa60214034e2b03fe147e506bd0cbbf893e4b7b98fff9691e82cfa2f75e46bf"
    },
    "55755cd94d5e5ba37a5986c98e57b5131d3fe8b478cf1986890f103223bbed77": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nvisibility_config_property = wafv2.CfnRuleGroup.VisibilityConfigProperty(\n    cloud_watch_metrics_enabled=False,\n    metric_name=\"metricName\",\n    sampled_requests_enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nVisibilityConfigProperty visibilityConfigProperty = new VisibilityConfigProperty {\n    CloudWatchMetricsEnabled = false,\n    MetricName = \"metricName\",\n    SampledRequestsEnabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nVisibilityConfigProperty visibilityConfigProperty = VisibilityConfigProperty.builder()\n        .cloudWatchMetricsEnabled(false)\n        .metricName(\"metricName\")\n        .sampledRequestsEnabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvisibilityConfigProperty := &visibilityConfigProperty{\n\tcloudWatchMetricsEnabled: jsii.Boolean(false),\n\tmetricName: jsii.String(\"metricName\"),\n\tsampledRequestsEnabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst visibilityConfigProperty: wafv2.CfnRuleGroup.VisibilityConfigProperty = {\n  cloudWatchMetricsEnabled: false,\n  metricName: 'metricName',\n  sampledRequestsEnabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.VisibilityConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.VisibilityConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst visibilityConfigProperty: wafv2.CfnRuleGroup.VisibilityConfigProperty = {\n  cloudWatchMetricsEnabled: false,\n  metricName: 'metricName',\n  sampledRequestsEnabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 8,
        "91": 2,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "e05c4d56fb5e3cb0ad616f9121a2a4b19b8e2666d8045dcf1901d0bb3ac1f951"
    },
    "cc2a88ee22b13eb2a37e73fcfd578254019f0b84795b76f24d9b96380a795fd3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nxss_match_statement_property = wafv2.CfnRuleGroup.XssMatchStatementProperty(\n    field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n        all_query_arguments=all_query_arguments,\n        body=wafv2.CfnRuleGroup.BodyProperty(\n            oversize_handling=\"oversizeHandling\"\n        ),\n        cookies=wafv2.CfnRuleGroup.CookiesProperty(\n            match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                all=all,\n                excluded_cookies=[\"excludedCookies\"],\n                included_cookies=[\"includedCookies\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        headers=wafv2.CfnRuleGroup.HeadersProperty(\n            match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                all=all,\n                excluded_headers=[\"excludedHeaders\"],\n                included_headers=[\"includedHeaders\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n            match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                all=all,\n                included_paths=[\"includedPaths\"]\n            ),\n            match_scope=\"matchScope\",\n\n            # the properties below are optional\n            invalid_fallback_behavior=\"invalidFallbackBehavior\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        single_query_argument=single_query_argument,\n        uri_path=uri_path\n    ),\n    text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n        priority=123,\n        type=\"type\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nXssMatchStatementProperty xssMatchStatementProperty = new XssMatchStatementProperty {\n    FieldToMatch = new FieldToMatchProperty {\n        AllQueryArguments = allQueryArguments,\n        Body = new BodyProperty {\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Cookies = new CookiesProperty {\n            MatchPattern = new CookieMatchPatternProperty {\n                All = all,\n                ExcludedCookies = new [] { \"excludedCookies\" },\n                IncludedCookies = new [] { \"includedCookies\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Headers = new HeadersProperty {\n            MatchPattern = new HeaderMatchPatternProperty {\n                All = all,\n                ExcludedHeaders = new [] { \"excludedHeaders\" },\n                IncludedHeaders = new [] { \"includedHeaders\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        JsonBody = new JsonBodyProperty {\n            MatchPattern = new JsonMatchPatternProperty {\n                All = all,\n                IncludedPaths = new [] { \"includedPaths\" }\n            },\n            MatchScope = \"matchScope\",\n\n            // the properties below are optional\n            InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        SingleQueryArgument = singleQueryArgument,\n        UriPath = uriPath\n    },\n    TextTransformations = new [] { new TextTransformationProperty {\n        Priority = 123,\n        Type = \"type\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nXssMatchStatementProperty xssMatchStatementProperty = XssMatchStatementProperty.builder()\n        .fieldToMatch(FieldToMatchProperty.builder()\n                .allQueryArguments(allQueryArguments)\n                .body(BodyProperty.builder()\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .cookies(CookiesProperty.builder()\n                        .matchPattern(CookieMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedCookies(List.of(\"excludedCookies\"))\n                                .includedCookies(List.of(\"includedCookies\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .headers(HeadersProperty.builder()\n                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                .includedHeaders(List.of(\"includedHeaders\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .jsonBody(JsonBodyProperty.builder()\n                        .matchPattern(JsonMatchPatternProperty.builder()\n                                .all(all)\n                                .includedPaths(List.of(\"includedPaths\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n\n                        // the properties below are optional\n                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .singleQueryArgument(singleQueryArgument)\n                .uriPath(uriPath)\n                .build())\n        .textTransformations(List.of(TextTransformationProperty.builder()\n                .priority(123)\n                .type(\"type\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nxssMatchStatementProperty := &xssMatchStatementProperty{\n\tfieldToMatch: &fieldToMatchProperty{\n\t\tallQueryArguments: allQueryArguments,\n\t\tbody: &bodyProperty{\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tcookies: &cookiesProperty{\n\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t},\n\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\theaders: &headersProperty{\n\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t},\n\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tjsonBody: &jsonBodyProperty{\n\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tmethod: method,\n\t\tqueryString: queryString,\n\t\tsingleHeader: singleHeader,\n\t\tsingleQueryArgument: singleQueryArgument,\n\t\turiPath: uriPath,\n\t},\n\ttextTransformations: []interface{}{\n\t\t&textTransformationProperty{\n\t\t\tpriority: jsii.Number(123),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst xssMatchStatementProperty: wafv2.CfnRuleGroup.XssMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.XssMatchStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroup.XssMatchStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst xssMatchStatementProperty: wafv2.CfnRuleGroup.XssMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 15,
        "75": 54,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 10,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 33,
        "290": 1
      },
      "fqnsFingerprint": "8ea4b94112fe0b2f8af9bbb8fae6a64b1fc130eed0b4ec73c5aca9368a839a84"
    },
    "51f0d9ba7dc2708b5b76b13a3f896a39e0d1888bae93b3be75adbd04cc8f708f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# allow: Any\n# all_query_arguments: Any\n# block: Any\n# captcha: Any\n# count: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnRuleGroup.StatementProperty\n# uri_path: Any\n\ncfn_rule_group_props = wafv2.CfnRuleGroupProps(\n    capacity=123,\n    scope=\"scope\",\n    visibility_config=wafv2.CfnRuleGroup.VisibilityConfigProperty(\n        cloud_watch_metrics_enabled=False,\n        metric_name=\"metricName\",\n        sampled_requests_enabled=False\n    ),\n\n    # the properties below are optional\n    custom_response_bodies={\n        \"custom_response_bodies_key\": wafv2.CfnRuleGroup.CustomResponseBodyProperty(\n            content=\"content\",\n            content_type=\"contentType\"\n        )\n    },\n    description=\"description\",\n    name=\"name\",\n    rules=[wafv2.CfnRuleGroup.RuleProperty(\n        name=\"name\",\n        priority=123,\n        statement=wafv2.CfnRuleGroup.StatementProperty(\n            and_statement=wafv2.CfnRuleGroup.AndStatementProperty(\n                statements=[statement_property_]\n            ),\n            byte_match_statement=wafv2.CfnRuleGroup.ByteMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                positional_constraint=\"positionalConstraint\",\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                search_string=\"searchString\",\n                search_string_base64=\"searchStringBase64\"\n            ),\n            geo_match_statement=wafv2.CfnRuleGroup.GeoMatchStatementProperty(\n                country_codes=[\"countryCodes\"],\n                forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                )\n            ),\n            ip_set_reference_statement={\n                \"arn\": \"arn\",\n\n                # the properties below are optional\n                \"ip_set_forwarded_ip_config\": {\n                    \"fallback_behavior\": \"fallbackBehavior\",\n                    \"header_name\": \"headerName\",\n                    \"position\": \"position\"\n                }\n            },\n            label_match_statement=wafv2.CfnRuleGroup.LabelMatchStatementProperty(\n                key=\"key\",\n                scope=\"scope\"\n            ),\n            not_statement=wafv2.CfnRuleGroup.NotStatementProperty(\n                statement=statement_property_\n            ),\n            or_statement=wafv2.CfnRuleGroup.OrStatementProperty(\n                statements=[statement_property_]\n            ),\n            rate_based_statement=wafv2.CfnRuleGroup.RateBasedStatementProperty(\n                aggregate_key_type=\"aggregateKeyType\",\n                limit=123,\n\n                # the properties below are optional\n                forwarded_ip_config=wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                ),\n                scope_down_statement=statement_property_\n            ),\n            regex_match_statement=wafv2.CfnRuleGroup.RegexMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                regex_string=\"regexString\",\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            regex_pattern_set_reference_statement=wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty(\n                arn=\"arn\",\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            size_constraint_statement=wafv2.CfnRuleGroup.SizeConstraintStatementProperty(\n                comparison_operator=\"comparisonOperator\",\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                size=123,\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            sqli_match_statement=wafv2.CfnRuleGroup.SqliMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                sensitivity_level=\"sensitivityLevel\"\n            ),\n            xss_match_statement=wafv2.CfnRuleGroup.XssMatchStatementProperty(\n                field_to_match=wafv2.CfnRuleGroup.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnRuleGroup.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnRuleGroup.CookiesProperty(\n                        match_pattern=wafv2.CfnRuleGroup.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnRuleGroup.HeadersProperty(\n                        match_pattern=wafv2.CfnRuleGroup.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnRuleGroup.JsonBodyProperty(\n                        match_pattern=wafv2.CfnRuleGroup.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnRuleGroup.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            )\n        ),\n        visibility_config=wafv2.CfnRuleGroup.VisibilityConfigProperty(\n            cloud_watch_metrics_enabled=False,\n            metric_name=\"metricName\",\n            sampled_requests_enabled=False\n        ),\n\n        # the properties below are optional\n        action=wafv2.CfnRuleGroup.RuleActionProperty(\n            allow=allow,\n            block=block,\n            captcha=captcha,\n            count=count\n        ),\n        captcha_config=wafv2.CfnRuleGroup.CaptchaConfigProperty(\n            immunity_time_property=wafv2.CfnRuleGroup.ImmunityTimePropertyProperty(\n                immunity_time=123\n            )\n        ),\n        rule_labels=[wafv2.CfnRuleGroup.LabelProperty(\n            name=\"name\"\n        )]\n    )],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allow;\nvar allQueryArguments;\nvar block;\nvar captcha;\nvar count;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nCfnRuleGroupProps cfnRuleGroupProps = new CfnRuleGroupProps {\n    Capacity = 123,\n    Scope = \"scope\",\n    VisibilityConfig = new VisibilityConfigProperty {\n        CloudWatchMetricsEnabled = false,\n        MetricName = \"metricName\",\n        SampledRequestsEnabled = false\n    },\n\n    // the properties below are optional\n    CustomResponseBodies = new Dictionary<string, object> {\n        { \"customResponseBodiesKey\", new CustomResponseBodyProperty {\n            Content = \"content\",\n            ContentType = \"contentType\"\n        } }\n    },\n    Description = \"description\",\n    Name = \"name\",\n    Rules = new [] { new RuleProperty {\n        Name = \"name\",\n        Priority = 123,\n        Statement = new StatementProperty {\n            AndStatement = new AndStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            ByteMatchStatement = new ByteMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                PositionalConstraint = \"positionalConstraint\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SearchString = \"searchString\",\n                SearchStringBase64 = \"searchStringBase64\"\n            },\n            GeoMatchStatement = new GeoMatchStatementProperty {\n                CountryCodes = new [] { \"countryCodes\" },\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                }\n            },\n            IpSetReferenceStatement = new Dictionary<string, object> {\n                { \"arn\", \"arn\" },\n\n                // the properties below are optional\n                { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                    { \"fallbackBehavior\", \"fallbackBehavior\" },\n                    { \"headerName\", \"headerName\" },\n                    { \"position\", \"position\" }\n                } }\n            },\n            LabelMatchStatement = new LabelMatchStatementProperty {\n                Key = \"key\",\n                Scope = \"scope\"\n            },\n            NotStatement = new NotStatementProperty {\n                Statement = statementProperty_\n            },\n            OrStatement = new OrStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            RateBasedStatement = new RateBasedStatementProperty {\n                AggregateKeyType = \"aggregateKeyType\",\n                Limit = 123,\n\n                // the properties below are optional\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                },\n                ScopeDownStatement = statementProperty_\n            },\n            RegexMatchStatement = new RegexMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                RegexString = \"regexString\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n                Arn = \"arn\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SizeConstraintStatement = new SizeConstraintStatementProperty {\n                ComparisonOperator = \"comparisonOperator\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                Size = 123,\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SqliMatchStatement = new SqliMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SensitivityLevel = \"sensitivityLevel\"\n            },\n            XssMatchStatement = new XssMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            }\n        },\n        VisibilityConfig = new VisibilityConfigProperty {\n            CloudWatchMetricsEnabled = false,\n            MetricName = \"metricName\",\n            SampledRequestsEnabled = false\n        },\n\n        // the properties below are optional\n        Action = new RuleActionProperty {\n            Allow = allow,\n            Block = block,\n            Captcha = captcha,\n            Count = count\n        },\n        CaptchaConfig = new CaptchaConfigProperty {\n            ImmunityTimeProperty = new ImmunityTimePropertyProperty {\n                ImmunityTime = 123\n            }\n        },\n        RuleLabels = new [] { new LabelProperty {\n            Name = \"name\"\n        } }\n    } },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allow;\nObject allQueryArguments;\nObject block;\nObject captcha;\nObject count;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nCfnRuleGroupProps cfnRuleGroupProps = CfnRuleGroupProps.builder()\n        .capacity(123)\n        .scope(\"scope\")\n        .visibilityConfig(VisibilityConfigProperty.builder()\n                .cloudWatchMetricsEnabled(false)\n                .metricName(\"metricName\")\n                .sampledRequestsEnabled(false)\n                .build())\n\n        // the properties below are optional\n        .customResponseBodies(Map.of(\n                \"customResponseBodiesKey\", CustomResponseBodyProperty.builder()\n                        .content(\"content\")\n                        .contentType(\"contentType\")\n                        .build()))\n        .description(\"description\")\n        .name(\"name\")\n        .rules(List.of(RuleProperty.builder()\n                .name(\"name\")\n                .priority(123)\n                .statement(StatementProperty.builder()\n                        .andStatement(AndStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .positionalConstraint(\"positionalConstraint\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .searchString(\"searchString\")\n                                .searchStringBase64(\"searchStringBase64\")\n                                .build())\n                        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                                .countryCodes(List.of(\"countryCodes\"))\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .build())\n                        .ipSetReferenceStatement(Map.of(\n                                \"arn\", \"arn\",\n\n                                // the properties below are optional\n                                \"ipSetForwardedIpConfig\", Map.of(\n                                        \"fallbackBehavior\", \"fallbackBehavior\",\n                                        \"headerName\", \"headerName\",\n                                        \"position\", \"position\")))\n                        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                                .key(\"key\")\n                                .scope(\"scope\")\n                                .build())\n                        .notStatement(NotStatementProperty.builder()\n                                .statement(statementProperty_)\n                                .build())\n                        .orStatement(OrStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .rateBasedStatement(RateBasedStatementProperty.builder()\n                                .aggregateKeyType(\"aggregateKeyType\")\n                                .limit(123)\n\n                                // the properties below are optional\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .scopeDownStatement(statementProperty_)\n                                .build())\n                        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .regexString(\"regexString\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                                .comparisonOperator(\"comparisonOperator\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .size(123)\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .sensitivityLevel(\"sensitivityLevel\")\n                                .build())\n                        .xssMatchStatement(XssMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .build())\n                .visibilityConfig(VisibilityConfigProperty.builder()\n                        .cloudWatchMetricsEnabled(false)\n                        .metricName(\"metricName\")\n                        .sampledRequestsEnabled(false)\n                        .build())\n\n                // the properties below are optional\n                .action(RuleActionProperty.builder()\n                        .allow(allow)\n                        .block(block)\n                        .captcha(captcha)\n                        .count(count)\n                        .build())\n                .captchaConfig(CaptchaConfigProperty.builder()\n                        .immunityTimeProperty(ImmunityTimePropertyProperty.builder()\n                                .immunityTime(123)\n                                .build())\n                        .build())\n                .ruleLabels(List.of(LabelProperty.builder()\n                        .name(\"name\")\n                        .build()))\n                .build()))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allow interface{}\nvar allQueryArguments interface{}\nvar block interface{}\nvar captcha interface{}\nvar count interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\ncfnRuleGroupProps := &cfnRuleGroupProps{\n\tcapacity: jsii.Number(123),\n\tscope: jsii.String(\"scope\"),\n\tvisibilityConfig: &visibilityConfigProperty{\n\t\tcloudWatchMetricsEnabled: jsii.Boolean(false),\n\t\tmetricName: jsii.String(\"metricName\"),\n\t\tsampledRequestsEnabled: jsii.Boolean(false),\n\t},\n\n\t// the properties below are optional\n\tcustomResponseBodies: map[string]interface{}{\n\t\t\"customResponseBodiesKey\": &CustomResponseBodyProperty{\n\t\t\t\"content\": jsii.String(\"content\"),\n\t\t\t\"contentType\": jsii.String(\"contentType\"),\n\t\t},\n\t},\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\trules: []interface{}{\n\t\t&ruleProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tpriority: jsii.Number(123),\n\t\t\tstatement: &statementProperty{\n\t\t\t\tandStatement: &andStatementProperty{\n\t\t\t\t\tstatements: []interface{}{\n\t\t\t\t\t\tstatementProperty_,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t\t},\n\t\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t\t},\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\t},\n\t\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\t\tstatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\torStatement: &orStatementProperty{\n\t\t\t\t\tstatements: []interface{}{\n\t\t\t\t\t\tstatementProperty_,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tsize: jsii.Number(123),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t\t},\n\t\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tvisibilityConfig: &visibilityConfigProperty{\n\t\t\t\tcloudWatchMetricsEnabled: jsii.Boolean(false),\n\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\tsampledRequestsEnabled: jsii.Boolean(false),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\taction: &ruleActionProperty{\n\t\t\t\tallow: allow,\n\t\t\t\tblock: block,\n\t\t\t\tcaptcha: captcha,\n\t\t\t\tcount: count,\n\t\t\t},\n\t\t\tcaptchaConfig: &captchaConfigProperty{\n\t\t\t\timmunityTimeProperty: &immunityTimePropertyProperty{\n\t\t\t\t\timmunityTime: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\truleLabels: []interface{}{\n\t\t\t\t&labelProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allow: any;\ndeclare const allQueryArguments: any;\ndeclare const block: any;\ndeclare const captcha: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst cfnRuleGroupProps: wafv2.CfnRuleGroupProps = {\n  capacity: 123,\n  scope: 'scope',\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  customResponseBodies: {\n    customResponseBodiesKey: {\n      content: 'content',\n      contentType: 'contentType',\n    },\n  },\n  description: 'description',\n  name: 'name',\n  rules: [{\n    name: 'name',\n    priority: 123,\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    visibilityConfig: {\n      cloudWatchMetricsEnabled: false,\n      metricName: 'metricName',\n      sampledRequestsEnabled: false,\n    },\n\n    // the properties below are optional\n    action: {\n      allow: allow,\n      block: block,\n      captcha: captcha,\n      count: count,\n    },\n    captchaConfig: {\n      immunityTimeProperty: {\n        immunityTime: 123,\n      },\n    },\n    ruleLabels: [{\n      name: 'name',\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnRuleGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allow: any;\ndeclare const allQueryArguments: any;\ndeclare const block: any;\ndeclare const captcha: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRuleGroupProps: wafv2.CfnRuleGroupProps = {\n  capacity: 123,\n  scope: 'scope',\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  customResponseBodies: {\n    customResponseBodiesKey: {\n      content: 'content',\n      contentType: 'contentType',\n    },\n  },\n  description: 'description',\n  name: 'name',\n  rules: [{\n    name: 'name',\n    priority: 123,\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    visibilityConfig: {\n      cloudWatchMetricsEnabled: false,\n      metricName: 'metricName',\n      sampledRequestsEnabled: false,\n    },\n\n    // the properties below are optional\n    action: {\n      allow: allow,\n      block: block,\n      captcha: captcha,\n      count: count,\n    },\n    captchaConfig: {\n      immunityTimeProperty: {\n        immunityTime: 123,\n      },\n    },\n    ruleLabels: [{\n      name: 'name',\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 11,
        "10": 115,
        "75": 353,
        "91": 4,
        "125": 11,
        "130": 12,
        "153": 3,
        "169": 2,
        "192": 42,
        "193": 82,
        "225": 13,
        "242": 13,
        "243": 13,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 272,
        "290": 1
      },
      "fqnsFingerprint": "1af1ca63b63f8f31508c8b75aea451348135cc0f24d0921d53817f3c69b9abbf"
    },
    "569e78bbc503fb2e3547a308e9e295183e4ff8d07f0f7371403ee3d191bdadd2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# count: Any\n# method: Any\n# none: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnWebACL.StatementProperty\n# uri_path: Any\n\ncfn_web_aCL = wafv2.CfnWebACL(self, \"MyCfnWebACL\",\n    default_action=wafv2.CfnWebACL.DefaultActionProperty(\n        allow=wafv2.CfnWebACL.AllowActionProperty(\n            custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n                insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            )\n        ),\n        block=wafv2.CfnWebACL.BlockActionProperty(\n            custom_response=wafv2.CfnWebACL.CustomResponseProperty(\n                response_code=123,\n\n                # the properties below are optional\n                custom_response_body_key=\"customResponseBodyKey\",\n                response_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            )\n        )\n    ),\n    scope=\"scope\",\n    visibility_config=wafv2.CfnWebACL.VisibilityConfigProperty(\n        cloud_watch_metrics_enabled=False,\n        metric_name=\"metricName\",\n        sampled_requests_enabled=False\n    ),\n\n    # the properties below are optional\n    captcha_config=wafv2.CfnWebACL.CaptchaConfigProperty(\n        immunity_time_property=wafv2.CfnWebACL.ImmunityTimePropertyProperty(\n            immunity_time=123\n        )\n    ),\n    custom_response_bodies={\n        \"custom_response_bodies_key\": wafv2.CfnWebACL.CustomResponseBodyProperty(\n            content=\"content\",\n            content_type=\"contentType\"\n        )\n    },\n    description=\"description\",\n    name=\"name\",\n    rules=[wafv2.CfnWebACL.RuleProperty(\n        name=\"name\",\n        priority=123,\n        statement=wafv2.CfnWebACL.StatementProperty(\n            and_statement=wafv2.CfnWebACL.AndStatementProperty(\n                statements=[statement_property_]\n            ),\n            byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                positional_constraint=\"positionalConstraint\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                search_string=\"searchString\",\n                search_string_base64=\"searchStringBase64\"\n            ),\n            geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n                country_codes=[\"countryCodes\"],\n                forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                )\n            ),\n            ip_set_reference_statement={\n                \"arn\": \"arn\",\n\n                # the properties below are optional\n                \"ip_set_forwarded_ip_config\": {\n                    \"fallback_behavior\": \"fallbackBehavior\",\n                    \"header_name\": \"headerName\",\n                    \"position\": \"position\"\n                }\n            },\n            label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n                key=\"key\",\n                scope=\"scope\"\n            ),\n            managed_rule_group_statement=wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n                name=\"name\",\n                vendor_name=\"vendorName\",\n\n                # the properties below are optional\n                excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                    name=\"name\"\n                )],\n                managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n                    login_path=\"loginPath\",\n                    password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                        identifier=\"identifier\"\n                    ),\n                    payload_type=\"payloadType\",\n                    username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                        identifier=\"identifier\"\n                    )\n                )],\n                scope_down_statement=statement_property_,\n                version=\"version\"\n            ),\n            not_statement=wafv2.CfnWebACL.NotStatementProperty(\n                statement=statement_property_\n            ),\n            or_statement=wafv2.CfnWebACL.OrStatementProperty(\n                statements=[statement_property_]\n            ),\n            rate_based_statement=wafv2.CfnWebACL.RateBasedStatementProperty(\n                aggregate_key_type=\"aggregateKeyType\",\n                limit=123,\n\n                # the properties below are optional\n                forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                ),\n                scope_down_statement=statement_property_\n            ),\n            regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                regex_string=\"regexString\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n                arn=\"arn\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n                arn=\"arn\",\n\n                # the properties below are optional\n                excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                    name=\"name\"\n                )]\n            ),\n            size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n                comparison_operator=\"comparisonOperator\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                size=123,\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                sensitivity_level=\"sensitivityLevel\"\n            ),\n            xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            )\n        ),\n        visibility_config=wafv2.CfnWebACL.VisibilityConfigProperty(\n            cloud_watch_metrics_enabled=False,\n            metric_name=\"metricName\",\n            sampled_requests_enabled=False\n        ),\n\n        # the properties below are optional\n        action=wafv2.CfnWebACL.RuleActionProperty(\n            allow=wafv2.CfnWebACL.AllowActionProperty(\n                custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n                    insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                        name=\"name\",\n                        value=\"value\"\n                    )]\n                )\n            ),\n            block=wafv2.CfnWebACL.BlockActionProperty(\n                custom_response=wafv2.CfnWebACL.CustomResponseProperty(\n                    response_code=123,\n\n                    # the properties below are optional\n                    custom_response_body_key=\"customResponseBodyKey\",\n                    response_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                        name=\"name\",\n                        value=\"value\"\n                    )]\n                )\n            ),\n            captcha=wafv2.CfnWebACL.CaptchaActionProperty(\n                custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n                    insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                        name=\"name\",\n                        value=\"value\"\n                    )]\n                )\n            ),\n            count=wafv2.CfnWebACL.CountActionProperty(\n                custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n                    insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                        name=\"name\",\n                        value=\"value\"\n                    )]\n                )\n            )\n        ),\n        captcha_config=wafv2.CfnWebACL.CaptchaConfigProperty(\n            immunity_time_property=wafv2.CfnWebACL.ImmunityTimePropertyProperty(\n                immunity_time=123\n            )\n        ),\n        override_action=wafv2.CfnWebACL.OverrideActionProperty(\n            count=count,\n            none=none\n        ),\n        rule_labels=[wafv2.CfnWebACL.LabelProperty(\n            name=\"name\"\n        )]\n    )],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar count;\nvar method;\nvar none;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nCfnWebACL cfnWebACL = new CfnWebACL(this, \"MyCfnWebACL\", new CfnWebACLProps {\n    DefaultAction = new DefaultActionProperty {\n        Allow = new AllowActionProperty {\n            CustomRequestHandling = new CustomRequestHandlingProperty {\n                InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            }\n        },\n        Block = new BlockActionProperty {\n            CustomResponse = new CustomResponseProperty {\n                ResponseCode = 123,\n\n                // the properties below are optional\n                CustomResponseBodyKey = \"customResponseBodyKey\",\n                ResponseHeaders = new [] { new CustomHTTPHeaderProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            }\n        }\n    },\n    Scope = \"scope\",\n    VisibilityConfig = new VisibilityConfigProperty {\n        CloudWatchMetricsEnabled = false,\n        MetricName = \"metricName\",\n        SampledRequestsEnabled = false\n    },\n\n    // the properties below are optional\n    CaptchaConfig = new CaptchaConfigProperty {\n        ImmunityTimeProperty = new ImmunityTimePropertyProperty {\n            ImmunityTime = 123\n        }\n    },\n    CustomResponseBodies = new Dictionary<string, object> {\n        { \"customResponseBodiesKey\", new CustomResponseBodyProperty {\n            Content = \"content\",\n            ContentType = \"contentType\"\n        } }\n    },\n    Description = \"description\",\n    Name = \"name\",\n    Rules = new [] { new RuleProperty {\n        Name = \"name\",\n        Priority = 123,\n        Statement = new StatementProperty {\n            AndStatement = new AndStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            ByteMatchStatement = new ByteMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                PositionalConstraint = \"positionalConstraint\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SearchString = \"searchString\",\n                SearchStringBase64 = \"searchStringBase64\"\n            },\n            GeoMatchStatement = new GeoMatchStatementProperty {\n                CountryCodes = new [] { \"countryCodes\" },\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                }\n            },\n            IpSetReferenceStatement = new Dictionary<string, object> {\n                { \"arn\", \"arn\" },\n\n                // the properties below are optional\n                { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                    { \"fallbackBehavior\", \"fallbackBehavior\" },\n                    { \"headerName\", \"headerName\" },\n                    { \"position\", \"position\" }\n                } }\n            },\n            LabelMatchStatement = new LabelMatchStatementProperty {\n                Key = \"key\",\n                Scope = \"scope\"\n            },\n            ManagedRuleGroupStatement = new ManagedRuleGroupStatementProperty {\n                Name = \"name\",\n                VendorName = \"vendorName\",\n\n                // the properties below are optional\n                ExcludedRules = new [] { new ExcludedRuleProperty {\n                    Name = \"name\"\n                } },\n                ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n                    LoginPath = \"loginPath\",\n                    PasswordField = new FieldIdentifierProperty {\n                        Identifier = \"identifier\"\n                    },\n                    PayloadType = \"payloadType\",\n                    UsernameField = new FieldIdentifierProperty {\n                        Identifier = \"identifier\"\n                    }\n                } },\n                ScopeDownStatement = statementProperty_,\n                Version = \"version\"\n            },\n            NotStatement = new NotStatementProperty {\n                Statement = statementProperty_\n            },\n            OrStatement = new OrStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            RateBasedStatement = new RateBasedStatementProperty {\n                AggregateKeyType = \"aggregateKeyType\",\n                Limit = 123,\n\n                // the properties below are optional\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                },\n                ScopeDownStatement = statementProperty_\n            },\n            RegexMatchStatement = new RegexMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                RegexString = \"regexString\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n                Arn = \"arn\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n                Arn = \"arn\",\n\n                // the properties below are optional\n                ExcludedRules = new [] { new ExcludedRuleProperty {\n                    Name = \"name\"\n                } }\n            },\n            SizeConstraintStatement = new SizeConstraintStatementProperty {\n                ComparisonOperator = \"comparisonOperator\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                Size = 123,\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SqliMatchStatement = new SqliMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SensitivityLevel = \"sensitivityLevel\"\n            },\n            XssMatchStatement = new XssMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            }\n        },\n        VisibilityConfig = new VisibilityConfigProperty {\n            CloudWatchMetricsEnabled = false,\n            MetricName = \"metricName\",\n            SampledRequestsEnabled = false\n        },\n\n        // the properties below are optional\n        Action = new RuleActionProperty {\n            Allow = new AllowActionProperty {\n                CustomRequestHandling = new CustomRequestHandlingProperty {\n                    InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                        Name = \"name\",\n                        Value = \"value\"\n                    } }\n                }\n            },\n            Block = new BlockActionProperty {\n                CustomResponse = new CustomResponseProperty {\n                    ResponseCode = 123,\n\n                    // the properties below are optional\n                    CustomResponseBodyKey = \"customResponseBodyKey\",\n                    ResponseHeaders = new [] { new CustomHTTPHeaderProperty {\n                        Name = \"name\",\n                        Value = \"value\"\n                    } }\n                }\n            },\n            Captcha = new CaptchaActionProperty {\n                CustomRequestHandling = new CustomRequestHandlingProperty {\n                    InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                        Name = \"name\",\n                        Value = \"value\"\n                    } }\n                }\n            },\n            Count = new CountActionProperty {\n                CustomRequestHandling = new CustomRequestHandlingProperty {\n                    InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                        Name = \"name\",\n                        Value = \"value\"\n                    } }\n                }\n            }\n        },\n        CaptchaConfig = new CaptchaConfigProperty {\n            ImmunityTimeProperty = new ImmunityTimePropertyProperty {\n                ImmunityTime = 123\n            }\n        },\n        OverrideAction = new OverrideActionProperty {\n            Count = count,\n            None = none\n        },\n        RuleLabels = new [] { new LabelProperty {\n            Name = \"name\"\n        } }\n    } },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject count;\nObject method;\nObject none;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nCfnWebACL cfnWebACL = CfnWebACL.Builder.create(this, \"MyCfnWebACL\")\n        .defaultAction(DefaultActionProperty.builder()\n                .allow(AllowActionProperty.builder()\n                        .customRequestHandling(CustomRequestHandlingProperty.builder()\n                                .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build())\n                .block(BlockActionProperty.builder()\n                        .customResponse(CustomResponseProperty.builder()\n                                .responseCode(123)\n\n                                // the properties below are optional\n                                .customResponseBodyKey(\"customResponseBodyKey\")\n                                .responseHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build())\n                .build())\n        .scope(\"scope\")\n        .visibilityConfig(VisibilityConfigProperty.builder()\n                .cloudWatchMetricsEnabled(false)\n                .metricName(\"metricName\")\n                .sampledRequestsEnabled(false)\n                .build())\n\n        // the properties below are optional\n        .captchaConfig(CaptchaConfigProperty.builder()\n                .immunityTimeProperty(ImmunityTimePropertyProperty.builder()\n                        .immunityTime(123)\n                        .build())\n                .build())\n        .customResponseBodies(Map.of(\n                \"customResponseBodiesKey\", CustomResponseBodyProperty.builder()\n                        .content(\"content\")\n                        .contentType(\"contentType\")\n                        .build()))\n        .description(\"description\")\n        .name(\"name\")\n        .rules(List.of(RuleProperty.builder()\n                .name(\"name\")\n                .priority(123)\n                .statement(StatementProperty.builder()\n                        .andStatement(AndStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .positionalConstraint(\"positionalConstraint\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .searchString(\"searchString\")\n                                .searchStringBase64(\"searchStringBase64\")\n                                .build())\n                        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                                .countryCodes(List.of(\"countryCodes\"))\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .build())\n                        .ipSetReferenceStatement(Map.of(\n                                \"arn\", \"arn\",\n\n                                // the properties below are optional\n                                \"ipSetForwardedIpConfig\", Map.of(\n                                        \"fallbackBehavior\", \"fallbackBehavior\",\n                                        \"headerName\", \"headerName\",\n                                        \"position\", \"position\")))\n                        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                                .key(\"key\")\n                                .scope(\"scope\")\n                                .build())\n                        .managedRuleGroupStatement(ManagedRuleGroupStatementProperty.builder()\n                                .name(\"name\")\n                                .vendorName(\"vendorName\")\n\n                                // the properties below are optional\n                                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                        .name(\"name\")\n                                        .build()))\n                                .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                                        .loginPath(\"loginPath\")\n                                        .passwordField(FieldIdentifierProperty.builder()\n                                                .identifier(\"identifier\")\n                                                .build())\n                                        .payloadType(\"payloadType\")\n                                        .usernameField(FieldIdentifierProperty.builder()\n                                                .identifier(\"identifier\")\n                                                .build())\n                                        .build()))\n                                .scopeDownStatement(statementProperty_)\n                                .version(\"version\")\n                                .build())\n                        .notStatement(NotStatementProperty.builder()\n                                .statement(statementProperty_)\n                                .build())\n                        .orStatement(OrStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .rateBasedStatement(RateBasedStatementProperty.builder()\n                                .aggregateKeyType(\"aggregateKeyType\")\n                                .limit(123)\n\n                                // the properties below are optional\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .scopeDownStatement(statementProperty_)\n                                .build())\n                        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .regexString(\"regexString\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n\n                                // the properties below are optional\n                                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                        .name(\"name\")\n                                        .build()))\n                                .build())\n                        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                                .comparisonOperator(\"comparisonOperator\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .size(123)\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .sensitivityLevel(\"sensitivityLevel\")\n                                .build())\n                        .xssMatchStatement(XssMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .build())\n                .visibilityConfig(VisibilityConfigProperty.builder()\n                        .cloudWatchMetricsEnabled(false)\n                        .metricName(\"metricName\")\n                        .sampledRequestsEnabled(false)\n                        .build())\n\n                // the properties below are optional\n                .action(RuleActionProperty.builder()\n                        .allow(AllowActionProperty.builder()\n                                .customRequestHandling(CustomRequestHandlingProperty.builder()\n                                        .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                                .name(\"name\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .build())\n                        .block(BlockActionProperty.builder()\n                                .customResponse(CustomResponseProperty.builder()\n                                        .responseCode(123)\n\n                                        // the properties below are optional\n                                        .customResponseBodyKey(\"customResponseBodyKey\")\n                                        .responseHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                                .name(\"name\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .build())\n                        .captcha(CaptchaActionProperty.builder()\n                                .customRequestHandling(CustomRequestHandlingProperty.builder()\n                                        .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                                .name(\"name\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .build())\n                        .count(CountActionProperty.builder()\n                                .customRequestHandling(CustomRequestHandlingProperty.builder()\n                                        .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                                .name(\"name\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .build())\n                        .build())\n                .captchaConfig(CaptchaConfigProperty.builder()\n                        .immunityTimeProperty(ImmunityTimePropertyProperty.builder()\n                                .immunityTime(123)\n                                .build())\n                        .build())\n                .overrideAction(OverrideActionProperty.builder()\n                        .count(count)\n                        .none(none)\n                        .build())\n                .ruleLabels(List.of(LabelProperty.builder()\n                        .name(\"name\")\n                        .build()))\n                .build()))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar count interface{}\nvar method interface{}\nvar none interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\ncfnWebACL := wafv2.NewCfnWebACL(this, jsii.String(\"MyCfnWebACL\"), &cfnWebACLProps{\n\tdefaultAction: &defaultActionProperty{\n\t\tallow: &allowActionProperty{\n\t\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tblock: &blockActionProperty{\n\t\t\tcustomResponse: &customResponseProperty{\n\t\t\t\tresponseCode: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcustomResponseBodyKey: jsii.String(\"customResponseBodyKey\"),\n\t\t\t\tresponseHeaders: []interface{}{\n\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tscope: jsii.String(\"scope\"),\n\tvisibilityConfig: &visibilityConfigProperty{\n\t\tcloudWatchMetricsEnabled: jsii.Boolean(false),\n\t\tmetricName: jsii.String(\"metricName\"),\n\t\tsampledRequestsEnabled: jsii.Boolean(false),\n\t},\n\n\t// the properties below are optional\n\tcaptchaConfig: &captchaConfigProperty{\n\t\timmunityTimeProperty: &immunityTimePropertyProperty{\n\t\t\timmunityTime: jsii.Number(123),\n\t\t},\n\t},\n\tcustomResponseBodies: map[string]interface{}{\n\t\t\"customResponseBodiesKey\": &CustomResponseBodyProperty{\n\t\t\t\"content\": jsii.String(\"content\"),\n\t\t\t\"contentType\": jsii.String(\"contentType\"),\n\t\t},\n\t},\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\trules: []interface{}{\n\t\t&ruleProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tpriority: jsii.Number(123),\n\t\t\tstatement: &statementProperty{\n\t\t\t\tandStatement: &andStatementProperty{\n\t\t\t\t\tstatements: []interface{}{\n\t\t\t\t\t\tstatementProperty_,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t\t},\n\t\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t\t},\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\t},\n\t\t\t\tmanagedRuleGroupStatement: &managedRuleGroupStatementProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvendorName: jsii.String(\"vendorName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmanagedRuleGroupConfigs: []interface{}{\n\t\t\t\t\t\t&managedRuleGroupConfigProperty{\n\t\t\t\t\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\t\t\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\t\t\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t\t},\n\t\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\t\tstatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\torStatement: &orStatementProperty{\n\t\t\t\t\tstatements: []interface{}{\n\t\t\t\t\t\tstatementProperty_,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\t\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tsize: jsii.Number(123),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t\t},\n\t\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tvisibilityConfig: &visibilityConfigProperty{\n\t\t\t\tcloudWatchMetricsEnabled: jsii.Boolean(false),\n\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\tsampledRequestsEnabled: jsii.Boolean(false),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\taction: &ruleActionProperty{\n\t\t\t\tallow: &allowActionProperty{\n\t\t\t\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\t\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tblock: &blockActionProperty{\n\t\t\t\t\tcustomResponse: &customResponseProperty{\n\t\t\t\t\t\tresponseCode: jsii.Number(123),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tcustomResponseBodyKey: jsii.String(\"customResponseBodyKey\"),\n\t\t\t\t\t\tresponseHeaders: []interface{}{\n\t\t\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcaptcha: &captchaActionProperty{\n\t\t\t\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\t\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcount: &countActionProperty{\n\t\t\t\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\t\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tcaptchaConfig: &captchaConfigProperty{\n\t\t\t\timmunityTimeProperty: &immunityTimePropertyProperty{\n\t\t\t\t\timmunityTime: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\toverrideAction: &overrideActionProperty{\n\t\t\t\tcount: count,\n\t\t\t\tnone: none,\n\t\t\t},\n\t\t\truleLabels: []interface{}{\n\t\t\t\t&labelProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const none: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst cfnWebACL = new wafv2.CfnWebACL(this, 'MyCfnWebACL', {\n  defaultAction: {\n    allow: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    block: {\n      customResponse: {\n        responseCode: 123,\n\n        // the properties below are optional\n        customResponseBodyKey: 'customResponseBodyKey',\n        responseHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  scope: 'scope',\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  captchaConfig: {\n    immunityTimeProperty: {\n      immunityTime: 123,\n    },\n  },\n  customResponseBodies: {\n    customResponseBodiesKey: {\n      content: 'content',\n      contentType: 'contentType',\n    },\n  },\n  description: 'description',\n  name: 'name',\n  rules: [{\n    name: 'name',\n    priority: 123,\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    visibilityConfig: {\n      cloudWatchMetricsEnabled: false,\n      metricName: 'metricName',\n      sampledRequestsEnabled: false,\n    },\n\n    // the properties below are optional\n    action: {\n      allow: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      block: {\n        customResponse: {\n          responseCode: 123,\n\n          // the properties below are optional\n          customResponseBodyKey: 'customResponseBodyKey',\n          responseHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      captcha: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      count: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n    },\n    captchaConfig: {\n      immunityTimeProperty: {\n        immunityTime: 123,\n      },\n    },\n    overrideAction: {\n      count: count,\n      none: none,\n    },\n    ruleLabels: [{\n      name: 'name',\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL",
        "@aws-cdk/aws-wafv2.CfnWebACLProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const none: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnWebACL = new wafv2.CfnWebACL(this, 'MyCfnWebACL', {\n  defaultAction: {\n    allow: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    block: {\n      customResponse: {\n        responseCode: 123,\n\n        // the properties below are optional\n        customResponseBodyKey: 'customResponseBodyKey',\n        responseHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  scope: 'scope',\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  captchaConfig: {\n    immunityTimeProperty: {\n      immunityTime: 123,\n    },\n  },\n  customResponseBodies: {\n    customResponseBodiesKey: {\n      content: 'content',\n      contentType: 'contentType',\n    },\n  },\n  description: 'description',\n  name: 'name',\n  rules: [{\n    name: 'name',\n    priority: 123,\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    visibilityConfig: {\n      cloudWatchMetricsEnabled: false,\n      metricName: 'metricName',\n      sampledRequestsEnabled: false,\n    },\n\n    // the properties below are optional\n    action: {\n      allow: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      block: {\n        customResponse: {\n          responseCode: 123,\n\n          // the properties below are optional\n          customResponseBodyKey: 'customResponseBodyKey',\n          responseHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      captcha: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      count: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n    },\n    captchaConfig: {\n      immunityTimeProperty: {\n        immunityTime: 123,\n      },\n    },\n    overrideAction: {\n      count: count,\n      none: none,\n    },\n    ruleLabels: [{\n      name: 'name',\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 13,
        "10": 140,
        "75": 404,
        "91": 4,
        "104": 1,
        "125": 9,
        "130": 10,
        "153": 2,
        "169": 1,
        "192": 51,
        "193": 111,
        "194": 1,
        "197": 1,
        "225": 11,
        "242": 11,
        "243": 11,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 326,
        "290": 1
      },
      "fqnsFingerprint": "1bc3001a5cbe6e64142241dee0feb70773b312108b30a0cf3724e96f118dab1a"
    },
    "5b525763a18940092c5ec096cf6f1dc4096de16a7f45758ab42fa9d38926ce28": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nallow_action_property = wafv2.CfnWebACL.AllowActionProperty(\n    custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n        insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n            name=\"name\",\n            value=\"value\"\n        )]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nAllowActionProperty allowActionProperty = new AllowActionProperty {\n    CustomRequestHandling = new CustomRequestHandlingProperty {\n        InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n            Name = \"name\",\n            Value = \"value\"\n        } }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nAllowActionProperty allowActionProperty = AllowActionProperty.builder()\n        .customRequestHandling(CustomRequestHandlingProperty.builder()\n                .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                        .name(\"name\")\n                        .value(\"value\")\n                        .build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nallowActionProperty := &allowActionProperty{\n\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\tinsertHeaders: []interface{}{\n\t\t\t&customHTTPHeaderProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst allowActionProperty: wafv2.CfnWebACL.AllowActionProperty = {\n  customRequestHandling: {\n    insertHeaders: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.AllowActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.AllowActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst allowActionProperty: wafv2.CfnWebACL.AllowActionProperty = {\n  customRequestHandling: {\n    insertHeaders: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "2b7f48434f8f11b3652071efd0544172d67f744e448fcda19e2c07318653d1ff"
    },
    "467a8650d2d1328a97b1bbf53d1f78ece5bcf6183d6b1f69ba3d312437b6d743": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnWebACL.StatementProperty\n# uri_path: Any\n\nand_statement_property = wafv2.CfnWebACL.AndStatementProperty(\n    statements=[wafv2.CfnWebACL.StatementProperty(\n        and_statement=wafv2.CfnWebACL.AndStatementProperty(\n            statements=[statement_property_]\n        ),\n        byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            positional_constraint=\"positionalConstraint\",\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            search_string=\"searchString\",\n            search_string_base64=\"searchStringBase64\"\n        ),\n        geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n            country_codes=[\"countryCodes\"],\n            forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            )\n        ),\n        ip_set_reference_statement={\n            \"arn\": \"arn\",\n\n            # the properties below are optional\n            \"ip_set_forwarded_ip_config\": {\n                \"fallback_behavior\": \"fallbackBehavior\",\n                \"header_name\": \"headerName\",\n                \"position\": \"position\"\n            }\n        },\n        label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n            key=\"key\",\n            scope=\"scope\"\n        ),\n        managed_rule_group_statement=wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n            name=\"name\",\n            vendor_name=\"vendorName\",\n\n            # the properties below are optional\n            excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                name=\"name\"\n            )],\n            managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n                login_path=\"loginPath\",\n                password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                    identifier=\"identifier\"\n                ),\n                payload_type=\"payloadType\",\n                username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                    identifier=\"identifier\"\n                )\n            )],\n            scope_down_statement=statement_property_,\n            version=\"version\"\n        ),\n        not_statement=wafv2.CfnWebACL.NotStatementProperty(\n            statement=statement_property_\n        ),\n        or_statement=wafv2.CfnWebACL.OrStatementProperty(\n            statements=[statement_property_]\n        ),\n        rate_based_statement=wafv2.CfnWebACL.RateBasedStatementProperty(\n            aggregate_key_type=\"aggregateKeyType\",\n            limit=123,\n\n            # the properties below are optional\n            forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            ),\n            scope_down_statement=statement_property_\n        ),\n        regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            regex_string=\"regexString\",\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n            arn=\"arn\",\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n            arn=\"arn\",\n\n            # the properties below are optional\n            excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                name=\"name\"\n            )]\n        ),\n        size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n            comparison_operator=\"comparisonOperator\",\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            size=123,\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            sensitivity_level=\"sensitivityLevel\"\n        ),\n        xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nAndStatementProperty andStatementProperty = new AndStatementProperty {\n    Statements = new [] { new StatementProperty {\n        AndStatement = new AndStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        ByteMatchStatement = new ByteMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            PositionalConstraint = \"positionalConstraint\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SearchString = \"searchString\",\n            SearchStringBase64 = \"searchStringBase64\"\n        },\n        GeoMatchStatement = new GeoMatchStatementProperty {\n            CountryCodes = new [] { \"countryCodes\" },\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            }\n        },\n        IpSetReferenceStatement = new Dictionary<string, object> {\n            { \"arn\", \"arn\" },\n\n            // the properties below are optional\n            { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                { \"fallbackBehavior\", \"fallbackBehavior\" },\n                { \"headerName\", \"headerName\" },\n                { \"position\", \"position\" }\n            } }\n        },\n        LabelMatchStatement = new LabelMatchStatementProperty {\n            Key = \"key\",\n            Scope = \"scope\"\n        },\n        ManagedRuleGroupStatement = new ManagedRuleGroupStatementProperty {\n            Name = \"name\",\n            VendorName = \"vendorName\",\n\n            // the properties below are optional\n            ExcludedRules = new [] { new ExcludedRuleProperty {\n                Name = \"name\"\n            } },\n            ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n                LoginPath = \"loginPath\",\n                PasswordField = new FieldIdentifierProperty {\n                    Identifier = \"identifier\"\n                },\n                PayloadType = \"payloadType\",\n                UsernameField = new FieldIdentifierProperty {\n                    Identifier = \"identifier\"\n                }\n            } },\n            ScopeDownStatement = statementProperty_,\n            Version = \"version\"\n        },\n        NotStatement = new NotStatementProperty {\n            Statement = statementProperty_\n        },\n        OrStatement = new OrStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        RateBasedStatement = new RateBasedStatementProperty {\n            AggregateKeyType = \"aggregateKeyType\",\n            Limit = 123,\n\n            // the properties below are optional\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            },\n            ScopeDownStatement = statementProperty_\n        },\n        RegexMatchStatement = new RegexMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            RegexString = \"regexString\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n            Arn = \"arn\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n            Arn = \"arn\",\n\n            // the properties below are optional\n            ExcludedRules = new [] { new ExcludedRuleProperty {\n                Name = \"name\"\n            } }\n        },\n        SizeConstraintStatement = new SizeConstraintStatementProperty {\n            ComparisonOperator = \"comparisonOperator\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            Size = 123,\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SqliMatchStatement = new SqliMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SensitivityLevel = \"sensitivityLevel\"\n        },\n        XssMatchStatement = new XssMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nAndStatementProperty andStatementProperty = AndStatementProperty.builder()\n        .statements(List.of(StatementProperty.builder()\n                .andStatement(AndStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .byteMatchStatement(ByteMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .positionalConstraint(\"positionalConstraint\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .searchString(\"searchString\")\n                        .searchStringBase64(\"searchStringBase64\")\n                        .build())\n                .geoMatchStatement(GeoMatchStatementProperty.builder()\n                        .countryCodes(List.of(\"countryCodes\"))\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .build())\n                .ipSetReferenceStatement(Map.of(\n                        \"arn\", \"arn\",\n\n                        // the properties below are optional\n                        \"ipSetForwardedIpConfig\", Map.of(\n                                \"fallbackBehavior\", \"fallbackBehavior\",\n                                \"headerName\", \"headerName\",\n                                \"position\", \"position\")))\n                .labelMatchStatement(LabelMatchStatementProperty.builder()\n                        .key(\"key\")\n                        .scope(\"scope\")\n                        .build())\n                .managedRuleGroupStatement(ManagedRuleGroupStatementProperty.builder()\n                        .name(\"name\")\n                        .vendorName(\"vendorName\")\n\n                        // the properties below are optional\n                        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                                .loginPath(\"loginPath\")\n                                .passwordField(FieldIdentifierProperty.builder()\n                                        .identifier(\"identifier\")\n                                        .build())\n                                .payloadType(\"payloadType\")\n                                .usernameField(FieldIdentifierProperty.builder()\n                                        .identifier(\"identifier\")\n                                        .build())\n                                .build()))\n                        .scopeDownStatement(statementProperty_)\n                        .version(\"version\")\n                        .build())\n                .notStatement(NotStatementProperty.builder()\n                        .statement(statementProperty_)\n                        .build())\n                .orStatement(OrStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .rateBasedStatement(RateBasedStatementProperty.builder()\n                        .aggregateKeyType(\"aggregateKeyType\")\n                        .limit(123)\n\n                        // the properties below are optional\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .scopeDownStatement(statementProperty_)\n                        .build())\n                .regexMatchStatement(RegexMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .regexString(\"regexString\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n\n                        // the properties below are optional\n                        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .build())\n                .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                        .comparisonOperator(\"comparisonOperator\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .size(123)\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .sensitivityLevel(\"sensitivityLevel\")\n                        .build())\n                .xssMatchStatement(XssMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\nandStatementProperty := &andStatementProperty{\n\tstatements: []interface{}{\n\t\t&statementProperty{\n\t\t\tandStatement: &andStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t},\n\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t},\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t},\n\t\t\tmanagedRuleGroupStatement: &managedRuleGroupStatementProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tvendorName: jsii.String(\"vendorName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmanagedRuleGroupConfigs: []interface{}{\n\t\t\t\t\t&managedRuleGroupConfigProperty{\n\t\t\t\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\t\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\t\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t},\n\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\tstatement: statementProperty_,\n\t\t\t},\n\t\t\torStatement: &orStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t},\n\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tsize: jsii.Number(123),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t},\n\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst andStatementProperty: wafv2.CfnWebACL.AndStatementProperty = {\n  statements: [{\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.AndStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.AndStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst andStatementProperty: wafv2.CfnWebACL.AndStatementProperty = {\n  statements: [{\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 8,
        "10": 114,
        "75": 333,
        "125": 7,
        "130": 8,
        "153": 4,
        "169": 2,
        "192": 43,
        "193": 79,
        "225": 9,
        "242": 9,
        "243": 9,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 258,
        "290": 1
      },
      "fqnsFingerprint": "f32d263c046efec07b3023d36894617ef76c337174f63fba1595799ced77c564"
    },
    "9e9dbf6fcfeac570adaba0b21dfbe8365ba4e3eb3598c8f0ba462c0e45dce73d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nblock_action_property = wafv2.CfnWebACL.BlockActionProperty(\n    custom_response=wafv2.CfnWebACL.CustomResponseProperty(\n        response_code=123,\n\n        # the properties below are optional\n        custom_response_body_key=\"customResponseBodyKey\",\n        response_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n            name=\"name\",\n            value=\"value\"\n        )]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nBlockActionProperty blockActionProperty = new BlockActionProperty {\n    CustomResponse = new CustomResponseProperty {\n        ResponseCode = 123,\n\n        // the properties below are optional\n        CustomResponseBodyKey = \"customResponseBodyKey\",\n        ResponseHeaders = new [] { new CustomHTTPHeaderProperty {\n            Name = \"name\",\n            Value = \"value\"\n        } }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nBlockActionProperty blockActionProperty = BlockActionProperty.builder()\n        .customResponse(CustomResponseProperty.builder()\n                .responseCode(123)\n\n                // the properties below are optional\n                .customResponseBodyKey(\"customResponseBodyKey\")\n                .responseHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                        .name(\"name\")\n                        .value(\"value\")\n                        .build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nblockActionProperty := &blockActionProperty{\n\tcustomResponse: &customResponseProperty{\n\t\tresponseCode: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tcustomResponseBodyKey: jsii.String(\"customResponseBodyKey\"),\n\t\tresponseHeaders: []interface{}{\n\t\t\t&customHTTPHeaderProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst blockActionProperty: wafv2.CfnWebACL.BlockActionProperty = {\n  customResponse: {\n    responseCode: 123,\n\n    // the properties below are optional\n    customResponseBodyKey: 'customResponseBodyKey',\n    responseHeaders: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.BlockActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.BlockActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst blockActionProperty: wafv2.CfnWebACL.BlockActionProperty = {\n  customResponse: {\n    responseCode: 123,\n\n    // the properties below are optional\n    customResponseBodyKey: 'customResponseBodyKey',\n    responseHeaders: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 11,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "97952cb382d7743456a8156a1554295776b7ee33b2eef33e4a537d98f644659a"
    },
    "66f48a35393e8c6c4d1f607fe1f954911c5308ee7534b76ba05526e4d9201833": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nbody_property = wafv2.CfnWebACL.BodyProperty(\n    oversize_handling=\"oversizeHandling\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nBodyProperty bodyProperty = new BodyProperty {\n    OversizeHandling = \"oversizeHandling\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nBodyProperty bodyProperty = BodyProperty.builder()\n        .oversizeHandling(\"oversizeHandling\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nbodyProperty := &bodyProperty{\n\toversizeHandling: jsii.String(\"oversizeHandling\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst bodyProperty: wafv2.CfnWebACL.BodyProperty = {\n  oversizeHandling: 'oversizeHandling',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.BodyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.BodyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst bodyProperty: wafv2.CfnWebACL.BodyProperty = {\n  oversizeHandling: 'oversizeHandling',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "e5e928b2a7187f1f862e1deb815a1ee679ede7edb95202c3a7e5a53f8a8684d8"
    },
    "90882364698c0080d865eeafffe22f74df8435f86e104e688e24459690d610e8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nbyte_match_statement_property = wafv2.CfnWebACL.ByteMatchStatementProperty(\n    field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n        all_query_arguments=all_query_arguments,\n        body=wafv2.CfnWebACL.BodyProperty(\n            oversize_handling=\"oversizeHandling\"\n        ),\n        cookies=wafv2.CfnWebACL.CookiesProperty(\n            match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                all=all,\n                excluded_cookies=[\"excludedCookies\"],\n                included_cookies=[\"includedCookies\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        headers=wafv2.CfnWebACL.HeadersProperty(\n            match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                all=all,\n                excluded_headers=[\"excludedHeaders\"],\n                included_headers=[\"includedHeaders\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        json_body=wafv2.CfnWebACL.JsonBodyProperty(\n            match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                all=all,\n                included_paths=[\"includedPaths\"]\n            ),\n            match_scope=\"matchScope\",\n\n            # the properties below are optional\n            invalid_fallback_behavior=\"invalidFallbackBehavior\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        single_query_argument=single_query_argument,\n        uri_path=uri_path\n    ),\n    positional_constraint=\"positionalConstraint\",\n    text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n        priority=123,\n        type=\"type\"\n    )],\n\n    # the properties below are optional\n    search_string=\"searchString\",\n    search_string_base64=\"searchStringBase64\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nByteMatchStatementProperty byteMatchStatementProperty = new ByteMatchStatementProperty {\n    FieldToMatch = new FieldToMatchProperty {\n        AllQueryArguments = allQueryArguments,\n        Body = new BodyProperty {\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Cookies = new CookiesProperty {\n            MatchPattern = new CookieMatchPatternProperty {\n                All = all,\n                ExcludedCookies = new [] { \"excludedCookies\" },\n                IncludedCookies = new [] { \"includedCookies\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Headers = new HeadersProperty {\n            MatchPattern = new HeaderMatchPatternProperty {\n                All = all,\n                ExcludedHeaders = new [] { \"excludedHeaders\" },\n                IncludedHeaders = new [] { \"includedHeaders\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        JsonBody = new JsonBodyProperty {\n            MatchPattern = new JsonMatchPatternProperty {\n                All = all,\n                IncludedPaths = new [] { \"includedPaths\" }\n            },\n            MatchScope = \"matchScope\",\n\n            // the properties below are optional\n            InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        SingleQueryArgument = singleQueryArgument,\n        UriPath = uriPath\n    },\n    PositionalConstraint = \"positionalConstraint\",\n    TextTransformations = new [] { new TextTransformationProperty {\n        Priority = 123,\n        Type = \"type\"\n    } },\n\n    // the properties below are optional\n    SearchString = \"searchString\",\n    SearchStringBase64 = \"searchStringBase64\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nByteMatchStatementProperty byteMatchStatementProperty = ByteMatchStatementProperty.builder()\n        .fieldToMatch(FieldToMatchProperty.builder()\n                .allQueryArguments(allQueryArguments)\n                .body(BodyProperty.builder()\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .cookies(CookiesProperty.builder()\n                        .matchPattern(CookieMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedCookies(List.of(\"excludedCookies\"))\n                                .includedCookies(List.of(\"includedCookies\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .headers(HeadersProperty.builder()\n                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                .includedHeaders(List.of(\"includedHeaders\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .jsonBody(JsonBodyProperty.builder()\n                        .matchPattern(JsonMatchPatternProperty.builder()\n                                .all(all)\n                                .includedPaths(List.of(\"includedPaths\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n\n                        // the properties below are optional\n                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .singleQueryArgument(singleQueryArgument)\n                .uriPath(uriPath)\n                .build())\n        .positionalConstraint(\"positionalConstraint\")\n        .textTransformations(List.of(TextTransformationProperty.builder()\n                .priority(123)\n                .type(\"type\")\n                .build()))\n\n        // the properties below are optional\n        .searchString(\"searchString\")\n        .searchStringBase64(\"searchStringBase64\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nbyteMatchStatementProperty := &byteMatchStatementProperty{\n\tfieldToMatch: &fieldToMatchProperty{\n\t\tallQueryArguments: allQueryArguments,\n\t\tbody: &bodyProperty{\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tcookies: &cookiesProperty{\n\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t},\n\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\theaders: &headersProperty{\n\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t},\n\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tjsonBody: &jsonBodyProperty{\n\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tmethod: method,\n\t\tqueryString: queryString,\n\t\tsingleHeader: singleHeader,\n\t\tsingleQueryArgument: singleQueryArgument,\n\t\turiPath: uriPath,\n\t},\n\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\ttextTransformations: []interface{}{\n\t\t&textTransformationProperty{\n\t\t\tpriority: jsii.Number(123),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tsearchString: jsii.String(\"searchString\"),\n\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst byteMatchStatementProperty: wafv2.CfnWebACL.ByteMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  positionalConstraint: 'positionalConstraint',\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n\n  // the properties below are optional\n  searchString: 'searchString',\n  searchStringBase64: 'searchStringBase64',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ByteMatchStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.ByteMatchStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst byteMatchStatementProperty: wafv2.CfnWebACL.ByteMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  positionalConstraint: 'positionalConstraint',\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n\n  // the properties below are optional\n  searchString: 'searchString',\n  searchStringBase64: 'searchStringBase64',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 18,
        "75": 57,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 10,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 36,
        "290": 1
      },
      "fqnsFingerprint": "a644d63ad086238c5a10349364aa69988d483376f5f410bbb1a6ff5aa494ee11"
    },
    "bfacdbc769c5422e00ea0292480e7dc9f19532c369a2995b474e4030ed2b4b51": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncaptcha_action_property = wafv2.CfnWebACL.CaptchaActionProperty(\n    custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n        insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n            name=\"name\",\n            value=\"value\"\n        )]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCaptchaActionProperty captchaActionProperty = new CaptchaActionProperty {\n    CustomRequestHandling = new CustomRequestHandlingProperty {\n        InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n            Name = \"name\",\n            Value = \"value\"\n        } }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCaptchaActionProperty captchaActionProperty = CaptchaActionProperty.builder()\n        .customRequestHandling(CustomRequestHandlingProperty.builder()\n                .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                        .name(\"name\")\n                        .value(\"value\")\n                        .build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncaptchaActionProperty := &captchaActionProperty{\n\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\tinsertHeaders: []interface{}{\n\t\t\t&customHTTPHeaderProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst captchaActionProperty: wafv2.CfnWebACL.CaptchaActionProperty = {\n  customRequestHandling: {\n    insertHeaders: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CaptchaActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.CaptchaActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst captchaActionProperty: wafv2.CfnWebACL.CaptchaActionProperty = {\n  customRequestHandling: {\n    insertHeaders: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "489537fc5ef67204f2321fd181dee04bcbef8348ffbc44c915f819d34d896793"
    },
    "8b1d9a305dec35e10e5ecc49dbb76d69b75d1b8eb6446826c2d2c67d2a25b946": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncaptcha_config_property = wafv2.CfnWebACL.CaptchaConfigProperty(\n    immunity_time_property=wafv2.CfnWebACL.ImmunityTimePropertyProperty(\n        immunity_time=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCaptchaConfigProperty captchaConfigProperty = new CaptchaConfigProperty {\n    ImmunityTimeProperty = new ImmunityTimePropertyProperty {\n        ImmunityTime = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCaptchaConfigProperty captchaConfigProperty = CaptchaConfigProperty.builder()\n        .immunityTimeProperty(ImmunityTimePropertyProperty.builder()\n                .immunityTime(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncaptchaConfigProperty := &captchaConfigProperty{\n\timmunityTimeProperty: &immunityTimePropertyProperty{\n\t\timmunityTime: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst captchaConfigProperty: wafv2.CfnWebACL.CaptchaConfigProperty = {\n  immunityTimeProperty: {\n    immunityTime: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CaptchaConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.CaptchaConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst captchaConfigProperty: wafv2.CfnWebACL.CaptchaConfigProperty = {\n  immunityTimeProperty: {\n    immunityTime: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "2bd2499332b8d453c23360d608ee8176716f7d249fcf54d79a44a5f0731c2c68"
    },
    "05d28d8068d5600392fcfb5dd8e1bbb1cc60f73cb65fbfc5ffc80d4936ae264c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n\ncookie_match_pattern_property = wafv2.CfnWebACL.CookieMatchPatternProperty(\n    all=all,\n    excluded_cookies=[\"excludedCookies\"],\n    included_cookies=[\"includedCookies\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\n\nCookieMatchPatternProperty cookieMatchPatternProperty = new CookieMatchPatternProperty {\n    All = all,\n    ExcludedCookies = new [] { \"excludedCookies\" },\n    IncludedCookies = new [] { \"includedCookies\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\n\nCookieMatchPatternProperty cookieMatchPatternProperty = CookieMatchPatternProperty.builder()\n        .all(all)\n        .excludedCookies(List.of(\"excludedCookies\"))\n        .includedCookies(List.of(\"includedCookies\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\n\ncookieMatchPatternProperty := &cookieMatchPatternProperty{\n\tall: all,\n\texcludedCookies: []*string{\n\t\tjsii.String(\"excludedCookies\"),\n\t},\n\tincludedCookies: []*string{\n\t\tjsii.String(\"includedCookies\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst cookieMatchPatternProperty: wafv2.CfnWebACL.CookieMatchPatternProperty = {\n  all: all,\n  excludedCookies: ['excludedCookies'],\n  includedCookies: ['includedCookies'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CookieMatchPatternProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.CookieMatchPatternProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cookieMatchPatternProperty: wafv2.CfnWebACL.CookieMatchPatternProperty = {\n  all: all,\n  excludedCookies: ['excludedCookies'],\n  includedCookies: ['includedCookies'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "aa2c30cecc9070e46950082991574cc07f5f18d225c581f8a0176dc3161e3f60"
    },
    "308352074206426694380707dd0b8a7381443122a751b6154d146d586afdcd01": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n\ncookies_property = wafv2.CfnWebACL.CookiesProperty(\n    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n        all=all,\n        excluded_cookies=[\"excludedCookies\"],\n        included_cookies=[\"includedCookies\"]\n    ),\n    match_scope=\"matchScope\",\n    oversize_handling=\"oversizeHandling\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\n\nCookiesProperty cookiesProperty = new CookiesProperty {\n    MatchPattern = new CookieMatchPatternProperty {\n        All = all,\n        ExcludedCookies = new [] { \"excludedCookies\" },\n        IncludedCookies = new [] { \"includedCookies\" }\n    },\n    MatchScope = \"matchScope\",\n    OversizeHandling = \"oversizeHandling\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\n\nCookiesProperty cookiesProperty = CookiesProperty.builder()\n        .matchPattern(CookieMatchPatternProperty.builder()\n                .all(all)\n                .excludedCookies(List.of(\"excludedCookies\"))\n                .includedCookies(List.of(\"includedCookies\"))\n                .build())\n        .matchScope(\"matchScope\")\n        .oversizeHandling(\"oversizeHandling\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\n\ncookiesProperty := &cookiesProperty{\n\tmatchPattern: &cookieMatchPatternProperty{\n\t\tall: all,\n\t\texcludedCookies: []*string{\n\t\t\tjsii.String(\"excludedCookies\"),\n\t\t},\n\t\tincludedCookies: []*string{\n\t\t\tjsii.String(\"includedCookies\"),\n\t\t},\n\t},\n\tmatchScope: jsii.String(\"matchScope\"),\n\toversizeHandling: jsii.String(\"oversizeHandling\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst cookiesProperty: wafv2.CfnWebACL.CookiesProperty = {\n  matchPattern: {\n    all: all,\n    excludedCookies: ['excludedCookies'],\n    includedCookies: ['includedCookies'],\n  },\n  matchScope: 'matchScope',\n  oversizeHandling: 'oversizeHandling',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CookiesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.CookiesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cookiesProperty: wafv2.CfnWebACL.CookiesProperty = {\n  matchPattern: {\n    all: all,\n    excludedCookies: ['excludedCookies'],\n    includedCookies: ['includedCookies'],\n  },\n  matchScope: 'matchScope',\n  oversizeHandling: 'oversizeHandling',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 13,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "6d31ac968d902f8a41890ac33c73981c50e9ec52e4edce5172ebc06aff5e7751"
    },
    "9dc0dcb795621d56a754d2ceed32af608baf7f66250f949102e60ff729eb09b0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncount_action_property = wafv2.CfnWebACL.CountActionProperty(\n    custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n        insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n            name=\"name\",\n            value=\"value\"\n        )]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCountActionProperty countActionProperty = new CountActionProperty {\n    CustomRequestHandling = new CustomRequestHandlingProperty {\n        InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n            Name = \"name\",\n            Value = \"value\"\n        } }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCountActionProperty countActionProperty = CountActionProperty.builder()\n        .customRequestHandling(CustomRequestHandlingProperty.builder()\n                .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                        .name(\"name\")\n                        .value(\"value\")\n                        .build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncountActionProperty := &countActionProperty{\n\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\tinsertHeaders: []interface{}{\n\t\t\t&customHTTPHeaderProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst countActionProperty: wafv2.CfnWebACL.CountActionProperty = {\n  customRequestHandling: {\n    insertHeaders: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CountActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.CountActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst countActionProperty: wafv2.CfnWebACL.CountActionProperty = {\n  customRequestHandling: {\n    insertHeaders: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "59557b0e62c2f495c2fde84cd05b794c2f1897e57e8741bcf8a984b6a148dca8"
    },
    "c506940dd3bf046df47ab8857e0d88463ec2c571b8408601e1efc104a8d2fe35": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncustom_hTTPHeader_property = wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n    name=\"name\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCustomHTTPHeaderProperty customHTTPHeaderProperty = new CustomHTTPHeaderProperty {\n    Name = \"name\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCustomHTTPHeaderProperty customHTTPHeaderProperty = CustomHTTPHeaderProperty.builder()\n        .name(\"name\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncustomHTTPHeaderProperty := &customHTTPHeaderProperty{\n\tname: jsii.String(\"name\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst customHTTPHeaderProperty: wafv2.CfnWebACL.CustomHTTPHeaderProperty = {\n  name: 'name',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomHTTPHeaderProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.CustomHTTPHeaderProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customHTTPHeaderProperty: wafv2.CfnWebACL.CustomHTTPHeaderProperty = {\n  name: 'name',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "26f481f9606b8f79171bef5ea9fb80c55c487e4aec4db954b70b2b7c8d529df3"
    },
    "83a9b271cf7da5be30d34a35c1ab20973c0c56ccd0f641f0e57f43702892fc87": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncustom_request_handling_property = wafv2.CfnWebACL.CustomRequestHandlingProperty(\n    insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n        name=\"name\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCustomRequestHandlingProperty customRequestHandlingProperty = new CustomRequestHandlingProperty {\n    InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCustomRequestHandlingProperty customRequestHandlingProperty = CustomRequestHandlingProperty.builder()\n        .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncustomRequestHandlingProperty := &customRequestHandlingProperty{\n\tinsertHeaders: []interface{}{\n\t\t&customHTTPHeaderProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst customRequestHandlingProperty: wafv2.CfnWebACL.CustomRequestHandlingProperty = {\n  insertHeaders: [{\n    name: 'name',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomRequestHandlingProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.CustomRequestHandlingProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customRequestHandlingProperty: wafv2.CfnWebACL.CustomRequestHandlingProperty = {\n  insertHeaders: [{\n    name: 'name',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "62b1de9d7966677525d61ccd09fdca7bc83fcbe17d0a5d3af08f0f2e44330897"
    },
    "bfea594a7522f55f45ec6ef55b813dca485f43c36849e14173e73fd234fea24c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncustom_response_body_property = wafv2.CfnWebACL.CustomResponseBodyProperty(\n    content=\"content\",\n    content_type=\"contentType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCustomResponseBodyProperty customResponseBodyProperty = new CustomResponseBodyProperty {\n    Content = \"content\",\n    ContentType = \"contentType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCustomResponseBodyProperty customResponseBodyProperty = CustomResponseBodyProperty.builder()\n        .content(\"content\")\n        .contentType(\"contentType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncustomResponseBodyProperty := &customResponseBodyProperty{\n\tcontent: jsii.String(\"content\"),\n\tcontentType: jsii.String(\"contentType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst customResponseBodyProperty: wafv2.CfnWebACL.CustomResponseBodyProperty = {\n  content: 'content',\n  contentType: 'contentType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomResponseBodyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.CustomResponseBodyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customResponseBodyProperty: wafv2.CfnWebACL.CustomResponseBodyProperty = {\n  content: 'content',\n  contentType: 'contentType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "4e542f2da1784eb4fc8ce88972894607a147577476c04dbba6f7070f1d5fca77"
    },
    "53ea5a3155764d94ad599a8f4c699b86f1fa4c4433ce83c4ac41c2e49abdc324": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncustom_response_property = wafv2.CfnWebACL.CustomResponseProperty(\n    response_code=123,\n\n    # the properties below are optional\n    custom_response_body_key=\"customResponseBodyKey\",\n    response_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n        name=\"name\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCustomResponseProperty customResponseProperty = new CustomResponseProperty {\n    ResponseCode = 123,\n\n    // the properties below are optional\n    CustomResponseBodyKey = \"customResponseBodyKey\",\n    ResponseHeaders = new [] { new CustomHTTPHeaderProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCustomResponseProperty customResponseProperty = CustomResponseProperty.builder()\n        .responseCode(123)\n\n        // the properties below are optional\n        .customResponseBodyKey(\"customResponseBodyKey\")\n        .responseHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncustomResponseProperty := &customResponseProperty{\n\tresponseCode: jsii.Number(123),\n\n\t// the properties below are optional\n\tcustomResponseBodyKey: jsii.String(\"customResponseBodyKey\"),\n\tresponseHeaders: []interface{}{\n\t\t&customHTTPHeaderProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst customResponseProperty: wafv2.CfnWebACL.CustomResponseProperty = {\n  responseCode: 123,\n\n  // the properties below are optional\n  customResponseBodyKey: 'customResponseBodyKey',\n  responseHeaders: [{\n    name: 'name',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomResponseProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.CustomResponseProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customResponseProperty: wafv2.CfnWebACL.CustomResponseProperty = {\n  responseCode: 123,\n\n  // the properties below are optional\n  customResponseBodyKey: 'customResponseBodyKey',\n  responseHeaders: [{\n    name: 'name',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 10,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "fc724ab0fbf7931aea953a2e1efe856eccb0cc591d3dd98117a33ec3734bad97"
    },
    "41a4db89cd99b619dbf81e42c3b78c7a893240e16d3371714f2d17cde15b9acf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ndefault_action_property = wafv2.CfnWebACL.DefaultActionProperty(\n    allow=wafv2.CfnWebACL.AllowActionProperty(\n        custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n            insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                name=\"name\",\n                value=\"value\"\n            )]\n        )\n    ),\n    block=wafv2.CfnWebACL.BlockActionProperty(\n        custom_response=wafv2.CfnWebACL.CustomResponseProperty(\n            response_code=123,\n\n            # the properties below are optional\n            custom_response_body_key=\"customResponseBodyKey\",\n            response_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                name=\"name\",\n                value=\"value\"\n            )]\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nDefaultActionProperty defaultActionProperty = new DefaultActionProperty {\n    Allow = new AllowActionProperty {\n        CustomRequestHandling = new CustomRequestHandlingProperty {\n            InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } }\n        }\n    },\n    Block = new BlockActionProperty {\n        CustomResponse = new CustomResponseProperty {\n            ResponseCode = 123,\n\n            // the properties below are optional\n            CustomResponseBodyKey = \"customResponseBodyKey\",\n            ResponseHeaders = new [] { new CustomHTTPHeaderProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } }\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nDefaultActionProperty defaultActionProperty = DefaultActionProperty.builder()\n        .allow(AllowActionProperty.builder()\n                .customRequestHandling(CustomRequestHandlingProperty.builder()\n                        .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .build())\n        .block(BlockActionProperty.builder()\n                .customResponse(CustomResponseProperty.builder()\n                        .responseCode(123)\n\n                        // the properties below are optional\n                        .customResponseBodyKey(\"customResponseBodyKey\")\n                        .responseHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ndefaultActionProperty := &defaultActionProperty{\n\tallow: &allowActionProperty{\n\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tblock: &blockActionProperty{\n\t\tcustomResponse: &customResponseProperty{\n\t\t\tresponseCode: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tcustomResponseBodyKey: jsii.String(\"customResponseBodyKey\"),\n\t\t\tresponseHeaders: []interface{}{\n\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst defaultActionProperty: wafv2.CfnWebACL.DefaultActionProperty = {\n  allow: {\n    customRequestHandling: {\n      insertHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n  block: {\n    customResponse: {\n      responseCode: 123,\n\n      // the properties below are optional\n      customResponseBodyKey: 'customResponseBodyKey',\n      responseHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.DefaultActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.DefaultActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst defaultActionProperty: wafv2.CfnWebACL.DefaultActionProperty = {\n  allow: {\n    customRequestHandling: {\n      insertHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n  block: {\n    customResponse: {\n      responseCode: 123,\n\n      // the properties below are optional\n      customResponseBodyKey: 'customResponseBodyKey',\n      responseHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 6,
        "75": 17,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 7,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "0896dd70e50793133bec146021ac41fd8c3b2ac5a6d7a26043823fa6b71f4109"
    },
    "9f997cda8eb23d9d8d27c6a7d6fcd0e284710f9ec55b391f1a9faf94c9134756": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nexcluded_rule_property = wafv2.CfnWebACL.ExcludedRuleProperty(\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nExcludedRuleProperty excludedRuleProperty = new ExcludedRuleProperty {\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nExcludedRuleProperty excludedRuleProperty = ExcludedRuleProperty.builder()\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nexcludedRuleProperty := &excludedRuleProperty{\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst excludedRuleProperty: wafv2.CfnWebACL.ExcludedRuleProperty = {\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ExcludedRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.ExcludedRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst excludedRuleProperty: wafv2.CfnWebACL.ExcludedRuleProperty = {\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "83882435aa6a20e78592ce3f57ca9f0afeeaf4df3cf6b22ee40e9e0aafadf570"
    },
    "220aa29ca9dd163a2d81c2908a0116598a1e243a1900076af7eba463b1b7b5f5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nfield_identifier_property = wafv2.CfnWebACL.FieldIdentifierProperty(\n    identifier=\"identifier\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nFieldIdentifierProperty fieldIdentifierProperty = new FieldIdentifierProperty {\n    Identifier = \"identifier\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nFieldIdentifierProperty fieldIdentifierProperty = FieldIdentifierProperty.builder()\n        .identifier(\"identifier\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nfieldIdentifierProperty := &fieldIdentifierProperty{\n\tidentifier: jsii.String(\"identifier\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst fieldIdentifierProperty: wafv2.CfnWebACL.FieldIdentifierProperty = {\n  identifier: 'identifier',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.FieldIdentifierProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.FieldIdentifierProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst fieldIdentifierProperty: wafv2.CfnWebACL.FieldIdentifierProperty = {\n  identifier: 'identifier',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "7e99b9884547220d965b766e5f271d70f366b1a6f9ef945c46d8023e45e859af"
    },
    "d406a05136663bae1d85b170529be8c745791cbeb7736b15a033461728a13d77": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nfield_to_match_property = wafv2.CfnWebACL.FieldToMatchProperty(\n    all_query_arguments=all_query_arguments,\n    body=wafv2.CfnWebACL.BodyProperty(\n        oversize_handling=\"oversizeHandling\"\n    ),\n    cookies=wafv2.CfnWebACL.CookiesProperty(\n        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n            all=all,\n            excluded_cookies=[\"excludedCookies\"],\n            included_cookies=[\"includedCookies\"]\n        ),\n        match_scope=\"matchScope\",\n        oversize_handling=\"oversizeHandling\"\n    ),\n    headers=wafv2.CfnWebACL.HeadersProperty(\n        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n            all=all,\n            excluded_headers=[\"excludedHeaders\"],\n            included_headers=[\"includedHeaders\"]\n        ),\n        match_scope=\"matchScope\",\n        oversize_handling=\"oversizeHandling\"\n    ),\n    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n            all=all,\n            included_paths=[\"includedPaths\"]\n        ),\n        match_scope=\"matchScope\",\n\n        # the properties below are optional\n        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n        oversize_handling=\"oversizeHandling\"\n    ),\n    method=method,\n    query_string=query_string,\n    single_header=single_header,\n    single_query_argument=single_query_argument,\n    uri_path=uri_path\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nFieldToMatchProperty fieldToMatchProperty = new FieldToMatchProperty {\n    AllQueryArguments = allQueryArguments,\n    Body = new BodyProperty {\n        OversizeHandling = \"oversizeHandling\"\n    },\n    Cookies = new CookiesProperty {\n        MatchPattern = new CookieMatchPatternProperty {\n            All = all,\n            ExcludedCookies = new [] { \"excludedCookies\" },\n            IncludedCookies = new [] { \"includedCookies\" }\n        },\n        MatchScope = \"matchScope\",\n        OversizeHandling = \"oversizeHandling\"\n    },\n    Headers = new HeadersProperty {\n        MatchPattern = new HeaderMatchPatternProperty {\n            All = all,\n            ExcludedHeaders = new [] { \"excludedHeaders\" },\n            IncludedHeaders = new [] { \"includedHeaders\" }\n        },\n        MatchScope = \"matchScope\",\n        OversizeHandling = \"oversizeHandling\"\n    },\n    JsonBody = new JsonBodyProperty {\n        MatchPattern = new JsonMatchPatternProperty {\n            All = all,\n            IncludedPaths = new [] { \"includedPaths\" }\n        },\n        MatchScope = \"matchScope\",\n\n        // the properties below are optional\n        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n        OversizeHandling = \"oversizeHandling\"\n    },\n    Method = method,\n    QueryString = queryString,\n    SingleHeader = singleHeader,\n    SingleQueryArgument = singleQueryArgument,\n    UriPath = uriPath\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nFieldToMatchProperty fieldToMatchProperty = FieldToMatchProperty.builder()\n        .allQueryArguments(allQueryArguments)\n        .body(BodyProperty.builder()\n                .oversizeHandling(\"oversizeHandling\")\n                .build())\n        .cookies(CookiesProperty.builder()\n                .matchPattern(CookieMatchPatternProperty.builder()\n                        .all(all)\n                        .excludedCookies(List.of(\"excludedCookies\"))\n                        .includedCookies(List.of(\"includedCookies\"))\n                        .build())\n                .matchScope(\"matchScope\")\n                .oversizeHandling(\"oversizeHandling\")\n                .build())\n        .headers(HeadersProperty.builder()\n                .matchPattern(HeaderMatchPatternProperty.builder()\n                        .all(all)\n                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                        .includedHeaders(List.of(\"includedHeaders\"))\n                        .build())\n                .matchScope(\"matchScope\")\n                .oversizeHandling(\"oversizeHandling\")\n                .build())\n        .jsonBody(JsonBodyProperty.builder()\n                .matchPattern(JsonMatchPatternProperty.builder()\n                        .all(all)\n                        .includedPaths(List.of(\"includedPaths\"))\n                        .build())\n                .matchScope(\"matchScope\")\n\n                // the properties below are optional\n                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                .oversizeHandling(\"oversizeHandling\")\n                .build())\n        .method(method)\n        .queryString(queryString)\n        .singleHeader(singleHeader)\n        .singleQueryArgument(singleQueryArgument)\n        .uriPath(uriPath)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nfieldToMatchProperty := &fieldToMatchProperty{\n\tallQueryArguments: allQueryArguments,\n\tbody: &bodyProperty{\n\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t},\n\tcookies: &cookiesProperty{\n\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\tall: all,\n\t\t\texcludedCookies: []*string{\n\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t},\n\t\t\tincludedCookies: []*string{\n\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t},\n\t\t},\n\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t},\n\theaders: &headersProperty{\n\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\tall: all,\n\t\t\texcludedHeaders: []*string{\n\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t},\n\t\t\tincludedHeaders: []*string{\n\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t},\n\t\t},\n\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t},\n\tjsonBody: &jsonBodyProperty{\n\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\tall: all,\n\t\t\tincludedPaths: []*string{\n\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t},\n\t\t},\n\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t// the properties below are optional\n\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t},\n\tmethod: method,\n\tqueryString: queryString,\n\tsingleHeader: singleHeader,\n\tsingleQueryArgument: singleQueryArgument,\n\turiPath: uriPath,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst fieldToMatchProperty: wafv2.CfnWebACL.FieldToMatchProperty = {\n  allQueryArguments: allQueryArguments,\n  body: {\n    oversizeHandling: 'oversizeHandling',\n  },\n  cookies: {\n    matchPattern: {\n      all: all,\n      excludedCookies: ['excludedCookies'],\n      includedCookies: ['includedCookies'],\n    },\n    matchScope: 'matchScope',\n    oversizeHandling: 'oversizeHandling',\n  },\n  headers: {\n    matchPattern: {\n      all: all,\n      excludedHeaders: ['excludedHeaders'],\n      includedHeaders: ['includedHeaders'],\n    },\n    matchScope: 'matchScope',\n    oversizeHandling: 'oversizeHandling',\n  },\n  jsonBody: {\n    matchPattern: {\n      all: all,\n      includedPaths: ['includedPaths'],\n    },\n    matchScope: 'matchScope',\n\n    // the properties below are optional\n    invalidFallbackBehavior: 'invalidFallbackBehavior',\n    oversizeHandling: 'oversizeHandling',\n  },\n  method: method,\n  queryString: queryString,\n  singleHeader: singleHeader,\n  singleQueryArgument: singleQueryArgument,\n  uriPath: uriPath,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.FieldToMatchProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.FieldToMatchProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst fieldToMatchProperty: wafv2.CfnWebACL.FieldToMatchProperty = {\n  allQueryArguments: allQueryArguments,\n  body: {\n    oversizeHandling: 'oversizeHandling',\n  },\n  cookies: {\n    matchPattern: {\n      all: all,\n      excludedCookies: ['excludedCookies'],\n      includedCookies: ['includedCookies'],\n    },\n    matchScope: 'matchScope',\n    oversizeHandling: 'oversizeHandling',\n  },\n  headers: {\n    matchPattern: {\n      all: all,\n      excludedHeaders: ['excludedHeaders'],\n      includedHeaders: ['includedHeaders'],\n    },\n    matchScope: 'matchScope',\n    oversizeHandling: 'oversizeHandling',\n  },\n  jsonBody: {\n    matchPattern: {\n      all: all,\n      includedPaths: ['includedPaths'],\n    },\n    matchScope: 'matchScope',\n\n    // the properties below are optional\n    invalidFallbackBehavior: 'invalidFallbackBehavior',\n    oversizeHandling: 'oversizeHandling',\n  },\n  method: method,\n  queryString: queryString,\n  singleHeader: singleHeader,\n  singleQueryArgument: singleQueryArgument,\n  uriPath: uriPath,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 14,
        "75": 50,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 5,
        "193": 8,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 29,
        "290": 1
      },
      "fqnsFingerprint": "5b559340c9adee8cbd54f5e3d9f3f7f4b84d98cc49087bd331580fb4e7c86e41"
    },
    "e45a94ce6c40e8b900b1490cb46fa25c2322c419526775dd75e94eaf34644859": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nforwarded_iPConfiguration_property = wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n    fallback_behavior=\"fallbackBehavior\",\n    header_name=\"headerName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nForwardedIPConfigurationProperty forwardedIPConfigurationProperty = new ForwardedIPConfigurationProperty {\n    FallbackBehavior = \"fallbackBehavior\",\n    HeaderName = \"headerName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nForwardedIPConfigurationProperty forwardedIPConfigurationProperty = ForwardedIPConfigurationProperty.builder()\n        .fallbackBehavior(\"fallbackBehavior\")\n        .headerName(\"headerName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nforwardedIPConfigurationProperty := &forwardedIPConfigurationProperty{\n\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\theaderName: jsii.String(\"headerName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst forwardedIPConfigurationProperty: wafv2.CfnWebACL.ForwardedIPConfigurationProperty = {\n  fallbackBehavior: 'fallbackBehavior',\n  headerName: 'headerName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ForwardedIPConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.ForwardedIPConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst forwardedIPConfigurationProperty: wafv2.CfnWebACL.ForwardedIPConfigurationProperty = {\n  fallbackBehavior: 'fallbackBehavior',\n  headerName: 'headerName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "05cad1ae9bf873b6d96a79692f731b3687d660b4f828103d28ba3056edc96f72"
    },
    "8fed23a604a0da431f8cd7033d8981ea056b3e5d93170c56de47e594134b9141": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ngeo_match_statement_property = wafv2.CfnWebACL.GeoMatchStatementProperty(\n    country_codes=[\"countryCodes\"],\n    forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n        fallback_behavior=\"fallbackBehavior\",\n        header_name=\"headerName\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nGeoMatchStatementProperty geoMatchStatementProperty = new GeoMatchStatementProperty {\n    CountryCodes = new [] { \"countryCodes\" },\n    ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n        FallbackBehavior = \"fallbackBehavior\",\n        HeaderName = \"headerName\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nGeoMatchStatementProperty geoMatchStatementProperty = GeoMatchStatementProperty.builder()\n        .countryCodes(List.of(\"countryCodes\"))\n        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                .fallbackBehavior(\"fallbackBehavior\")\n                .headerName(\"headerName\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ngeoMatchStatementProperty := &geoMatchStatementProperty{\n\tcountryCodes: []*string{\n\t\tjsii.String(\"countryCodes\"),\n\t},\n\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\theaderName: jsii.String(\"headerName\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst geoMatchStatementProperty: wafv2.CfnWebACL.GeoMatchStatementProperty = {\n  countryCodes: ['countryCodes'],\n  forwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.GeoMatchStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.GeoMatchStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst geoMatchStatementProperty: wafv2.CfnWebACL.GeoMatchStatementProperty = {\n  countryCodes: ['countryCodes'],\n  forwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "f82c706d731ed450cdcb1f8017a241f15a28bc593d5b9b2b82af56b5e84af857"
    },
    "7a4a9e1e95e5e21a8fc209d1736ea652679a0ee67e9de77e906a481863a4b150": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n\nheader_match_pattern_property = wafv2.CfnWebACL.HeaderMatchPatternProperty(\n    all=all,\n    excluded_headers=[\"excludedHeaders\"],\n    included_headers=[\"includedHeaders\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\n\nHeaderMatchPatternProperty headerMatchPatternProperty = new HeaderMatchPatternProperty {\n    All = all,\n    ExcludedHeaders = new [] { \"excludedHeaders\" },\n    IncludedHeaders = new [] { \"includedHeaders\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\n\nHeaderMatchPatternProperty headerMatchPatternProperty = HeaderMatchPatternProperty.builder()\n        .all(all)\n        .excludedHeaders(List.of(\"excludedHeaders\"))\n        .includedHeaders(List.of(\"includedHeaders\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\n\nheaderMatchPatternProperty := &headerMatchPatternProperty{\n\tall: all,\n\texcludedHeaders: []*string{\n\t\tjsii.String(\"excludedHeaders\"),\n\t},\n\tincludedHeaders: []*string{\n\t\tjsii.String(\"includedHeaders\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst headerMatchPatternProperty: wafv2.CfnWebACL.HeaderMatchPatternProperty = {\n  all: all,\n  excludedHeaders: ['excludedHeaders'],\n  includedHeaders: ['includedHeaders'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.HeaderMatchPatternProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.HeaderMatchPatternProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst headerMatchPatternProperty: wafv2.CfnWebACL.HeaderMatchPatternProperty = {\n  all: all,\n  excludedHeaders: ['excludedHeaders'],\n  includedHeaders: ['includedHeaders'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "34d613c95ebe528036cb79e3fd4afdd80c6c7a2fe615552df395cb2b7c343bdc"
    },
    "e4ddc3277bd3f6bbd3b630d95ac3837047d0ecaeafab6b94132f8aaa48e04b1a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n\nheaders_property = wafv2.CfnWebACL.HeadersProperty(\n    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n        all=all,\n        excluded_headers=[\"excludedHeaders\"],\n        included_headers=[\"includedHeaders\"]\n    ),\n    match_scope=\"matchScope\",\n    oversize_handling=\"oversizeHandling\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\n\nHeadersProperty headersProperty = new HeadersProperty {\n    MatchPattern = new HeaderMatchPatternProperty {\n        All = all,\n        ExcludedHeaders = new [] { \"excludedHeaders\" },\n        IncludedHeaders = new [] { \"includedHeaders\" }\n    },\n    MatchScope = \"matchScope\",\n    OversizeHandling = \"oversizeHandling\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\n\nHeadersProperty headersProperty = HeadersProperty.builder()\n        .matchPattern(HeaderMatchPatternProperty.builder()\n                .all(all)\n                .excludedHeaders(List.of(\"excludedHeaders\"))\n                .includedHeaders(List.of(\"includedHeaders\"))\n                .build())\n        .matchScope(\"matchScope\")\n        .oversizeHandling(\"oversizeHandling\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\n\nheadersProperty := &headersProperty{\n\tmatchPattern: &headerMatchPatternProperty{\n\t\tall: all,\n\t\texcludedHeaders: []*string{\n\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t},\n\t\tincludedHeaders: []*string{\n\t\t\tjsii.String(\"includedHeaders\"),\n\t\t},\n\t},\n\tmatchScope: jsii.String(\"matchScope\"),\n\toversizeHandling: jsii.String(\"oversizeHandling\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst headersProperty: wafv2.CfnWebACL.HeadersProperty = {\n  matchPattern: {\n    all: all,\n    excludedHeaders: ['excludedHeaders'],\n    includedHeaders: ['includedHeaders'],\n  },\n  matchScope: 'matchScope',\n  oversizeHandling: 'oversizeHandling',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.HeadersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.HeadersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst headersProperty: wafv2.CfnWebACL.HeadersProperty = {\n  matchPattern: {\n    all: all,\n    excludedHeaders: ['excludedHeaders'],\n    includedHeaders: ['includedHeaders'],\n  },\n  matchScope: 'matchScope',\n  oversizeHandling: 'oversizeHandling',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 13,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "97ee17eca0058bc41ec5a35e0cf36f809093b23e07fa027b9417efbb5ff2c6b3"
    },
    "b5e4a64ae5c04ce8334e2b0514a4ca669604adb8c5257bc3a85a09dc62ec011c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ni_pSet_forwarded_iPConfiguration_property = {\n    \"fallback_behavior\": \"fallbackBehavior\",\n    \"header_name\": \"headerName\",\n    \"position\": \"position\"\n}",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nIPSetForwardedIPConfigurationProperty iPSetForwardedIPConfigurationProperty = new Dictionary<string, string> {\n    { \"fallbackBehavior\", \"fallbackBehavior\" },\n    { \"headerName\", \"headerName\" },\n    { \"position\", \"position\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nIPSetForwardedIPConfigurationProperty iPSetForwardedIPConfigurationProperty = Map.of(\n        \"fallbackBehavior\", \"fallbackBehavior\",\n        \"headerName\", \"headerName\",\n        \"position\", \"position\");",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\niPSetForwardedIPConfigurationProperty := map[string]*string{\n\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\"headerName\": jsii.String(\"headerName\"),\n\t\"position\": jsii.String(\"position\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst iPSetForwardedIPConfigurationProperty: wafv2.CfnWebACL.IPSetForwardedIPConfigurationProperty = {\n  fallbackBehavior: 'fallbackBehavior',\n  headerName: 'headerName',\n  position: 'position',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.IPSetForwardedIPConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.IPSetForwardedIPConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst iPSetForwardedIPConfigurationProperty: wafv2.CfnWebACL.IPSetForwardedIPConfigurationProperty = {\n  fallbackBehavior: 'fallbackBehavior',\n  headerName: 'headerName',\n  position: 'position',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "24b92941b53104e98b2cf8e42ed28cc8ba5db06a23ddbc1bc39a5b31fdaf118d"
    },
    "d0a0ab4432e72a4f79039083db233fcf040e45327ca37773fa71dfa73876a8f9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ni_pSet_reference_statement_property = {\n    \"arn\": \"arn\",\n\n    # the properties below are optional\n    \"ip_set_forwarded_ip_config\": {\n        \"fallback_behavior\": \"fallbackBehavior\",\n        \"header_name\": \"headerName\",\n        \"position\": \"position\"\n    }\n}",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nIPSetReferenceStatementProperty iPSetReferenceStatementProperty = new Dictionary<string, object> {\n    { \"arn\", \"arn\" },\n\n    // the properties below are optional\n    { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n        { \"fallbackBehavior\", \"fallbackBehavior\" },\n        { \"headerName\", \"headerName\" },\n        { \"position\", \"position\" }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nIPSetReferenceStatementProperty iPSetReferenceStatementProperty = Map.of(\n        \"arn\", \"arn\",\n\n        // the properties below are optional\n        \"ipSetForwardedIpConfig\", Map.of(\n                \"fallbackBehavior\", \"fallbackBehavior\",\n                \"headerName\", \"headerName\",\n                \"position\", \"position\"));",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\niPSetReferenceStatementProperty := map[string]interface{}{\n\t\"arn\": jsii.String(\"arn\"),\n\n\t// the properties below are optional\n\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\"position\": jsii.String(\"position\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst iPSetReferenceStatementProperty: wafv2.CfnWebACL.IPSetReferenceStatementProperty = {\n  arn: 'arn',\n\n  // the properties below are optional\n  ipSetForwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n    position: 'position',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.IPSetReferenceStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.IPSetReferenceStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst iPSetReferenceStatementProperty: wafv2.CfnWebACL.IPSetReferenceStatementProperty = {\n  arn: 'arn',\n\n  // the properties below are optional\n  ipSetForwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n    position: 'position',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "ac5183bf9814e9b447729cd10c35298292216797ca2b3305855d44a33fafa8cc"
    },
    "f92a8e37b37e5985dc0156eec0a23fc93e13b6b3e51cfeb0f90fb958470549b2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nimmunity_time_property_property = wafv2.CfnWebACL.ImmunityTimePropertyProperty(\n    immunity_time=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nImmunityTimePropertyProperty immunityTimePropertyProperty = new ImmunityTimePropertyProperty {\n    ImmunityTime = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nImmunityTimePropertyProperty immunityTimePropertyProperty = ImmunityTimePropertyProperty.builder()\n        .immunityTime(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nimmunityTimePropertyProperty := &immunityTimePropertyProperty{\n\timmunityTime: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst immunityTimePropertyProperty: wafv2.CfnWebACL.ImmunityTimePropertyProperty = {\n  immunityTime: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ImmunityTimePropertyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.ImmunityTimePropertyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst immunityTimePropertyProperty: wafv2.CfnWebACL.ImmunityTimePropertyProperty = {\n  immunityTime: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "fc9fba7d892f8a79eafabda1d58eb2ac79c93193b9f5036073f3b60086012f86"
    },
    "0c12dc512f634a7ae1ece5fc5f63601da81cacd99011eddaca5dc7ef3eba8fd9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n\njson_body_property = wafv2.CfnWebACL.JsonBodyProperty(\n    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n        all=all,\n        included_paths=[\"includedPaths\"]\n    ),\n    match_scope=\"matchScope\",\n\n    # the properties below are optional\n    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n    oversize_handling=\"oversizeHandling\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\n\nJsonBodyProperty jsonBodyProperty = new JsonBodyProperty {\n    MatchPattern = new JsonMatchPatternProperty {\n        All = all,\n        IncludedPaths = new [] { \"includedPaths\" }\n    },\n    MatchScope = \"matchScope\",\n\n    // the properties below are optional\n    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n    OversizeHandling = \"oversizeHandling\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\n\nJsonBodyProperty jsonBodyProperty = JsonBodyProperty.builder()\n        .matchPattern(JsonMatchPatternProperty.builder()\n                .all(all)\n                .includedPaths(List.of(\"includedPaths\"))\n                .build())\n        .matchScope(\"matchScope\")\n\n        // the properties below are optional\n        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n        .oversizeHandling(\"oversizeHandling\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\n\njsonBodyProperty := &jsonBodyProperty{\n\tmatchPattern: &jsonMatchPatternProperty{\n\t\tall: all,\n\t\tincludedPaths: []*string{\n\t\t\tjsii.String(\"includedPaths\"),\n\t\t},\n\t},\n\tmatchScope: jsii.String(\"matchScope\"),\n\n\t// the properties below are optional\n\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\toversizeHandling: jsii.String(\"oversizeHandling\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst jsonBodyProperty: wafv2.CfnWebACL.JsonBodyProperty = {\n  matchPattern: {\n    all: all,\n    includedPaths: ['includedPaths'],\n  },\n  matchScope: 'matchScope',\n\n  // the properties below are optional\n  invalidFallbackBehavior: 'invalidFallbackBehavior',\n  oversizeHandling: 'oversizeHandling',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.JsonBodyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.JsonBodyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jsonBodyProperty: wafv2.CfnWebACL.JsonBodyProperty = {\n  matchPattern: {\n    all: all,\n    includedPaths: ['includedPaths'],\n  },\n  matchScope: 'matchScope',\n\n  // the properties below are optional\n  invalidFallbackBehavior: 'invalidFallbackBehavior',\n  oversizeHandling: 'oversizeHandling',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 13,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "35b4b360d16a20001d7f060a29a768096cd1d5d9a13fb2a7cfdddda7250027f8"
    },
    "0b0b95e42c91dd98e273340709dfe0443b8af3c178a78cacfcf481c672b36274": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n\njson_match_pattern_property = wafv2.CfnWebACL.JsonMatchPatternProperty(\n    all=all,\n    included_paths=[\"includedPaths\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\n\nJsonMatchPatternProperty jsonMatchPatternProperty = new JsonMatchPatternProperty {\n    All = all,\n    IncludedPaths = new [] { \"includedPaths\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\n\nJsonMatchPatternProperty jsonMatchPatternProperty = JsonMatchPatternProperty.builder()\n        .all(all)\n        .includedPaths(List.of(\"includedPaths\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\n\njsonMatchPatternProperty := &jsonMatchPatternProperty{\n\tall: all,\n\tincludedPaths: []*string{\n\t\tjsii.String(\"includedPaths\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst jsonMatchPatternProperty: wafv2.CfnWebACL.JsonMatchPatternProperty = {\n  all: all,\n  includedPaths: ['includedPaths'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.JsonMatchPatternProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.JsonMatchPatternProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jsonMatchPatternProperty: wafv2.CfnWebACL.JsonMatchPatternProperty = {\n  all: all,\n  includedPaths: ['includedPaths'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "20456a3383fb2ad2423704ed96429c192c0b376114c7c71971034ab45170135d"
    },
    "55b7060ad2314ba354564d024293cc03e65c2be95b7f3841d081df8e5fe2fe61": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nlabel_match_statement_property = wafv2.CfnWebACL.LabelMatchStatementProperty(\n    key=\"key\",\n    scope=\"scope\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nLabelMatchStatementProperty labelMatchStatementProperty = new LabelMatchStatementProperty {\n    Key = \"key\",\n    Scope = \"scope\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nLabelMatchStatementProperty labelMatchStatementProperty = LabelMatchStatementProperty.builder()\n        .key(\"key\")\n        .scope(\"scope\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nlabelMatchStatementProperty := &labelMatchStatementProperty{\n\tkey: jsii.String(\"key\"),\n\tscope: jsii.String(\"scope\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst labelMatchStatementProperty: wafv2.CfnWebACL.LabelMatchStatementProperty = {\n  key: 'key',\n  scope: 'scope',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.LabelMatchStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.LabelMatchStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst labelMatchStatementProperty: wafv2.CfnWebACL.LabelMatchStatementProperty = {\n  key: 'key',\n  scope: 'scope',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1dbc23518bfad6d1f866b0749df3d564c020e8032df1c276a7433222872e85b5"
    },
    "b6f7e9c1e24f3869012b0f95e8b75b9fd742e138b616f0525268b7bad153e3a4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nlabel_property = wafv2.CfnWebACL.LabelProperty(\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nLabelProperty labelProperty = new LabelProperty {\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nLabelProperty labelProperty = LabelProperty.builder()\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nlabelProperty := &labelProperty{\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst labelProperty: wafv2.CfnWebACL.LabelProperty = {\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.LabelProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.LabelProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst labelProperty: wafv2.CfnWebACL.LabelProperty = {\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "edf7a6daeb67cc3511be4c17e211e41d913165e1ba6158afcfe250e337ff454e"
    },
    "f4dcf68e617a2bfd2bf6fb55caf340242f26bff68b9b1b85b2911715424fde8f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nmanaged_rule_group_config_property = wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n    login_path=\"loginPath\",\n    password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n        identifier=\"identifier\"\n    ),\n    payload_type=\"payloadType\",\n    username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n        identifier=\"identifier\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nManagedRuleGroupConfigProperty managedRuleGroupConfigProperty = new ManagedRuleGroupConfigProperty {\n    LoginPath = \"loginPath\",\n    PasswordField = new FieldIdentifierProperty {\n        Identifier = \"identifier\"\n    },\n    PayloadType = \"payloadType\",\n    UsernameField = new FieldIdentifierProperty {\n        Identifier = \"identifier\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nManagedRuleGroupConfigProperty managedRuleGroupConfigProperty = ManagedRuleGroupConfigProperty.builder()\n        .loginPath(\"loginPath\")\n        .passwordField(FieldIdentifierProperty.builder()\n                .identifier(\"identifier\")\n                .build())\n        .payloadType(\"payloadType\")\n        .usernameField(FieldIdentifierProperty.builder()\n                .identifier(\"identifier\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nmanagedRuleGroupConfigProperty := &managedRuleGroupConfigProperty{\n\tloginPath: jsii.String(\"loginPath\"),\n\tpasswordField: &fieldIdentifierProperty{\n\t\tidentifier: jsii.String(\"identifier\"),\n\t},\n\tpayloadType: jsii.String(\"payloadType\"),\n\tusernameField: &fieldIdentifierProperty{\n\t\tidentifier: jsii.String(\"identifier\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst managedRuleGroupConfigProperty: wafv2.CfnWebACL.ManagedRuleGroupConfigProperty = {\n  loginPath: 'loginPath',\n  passwordField: {\n    identifier: 'identifier',\n  },\n  payloadType: 'payloadType',\n  usernameField: {\n    identifier: 'identifier',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ManagedRuleGroupConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.ManagedRuleGroupConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst managedRuleGroupConfigProperty: wafv2.CfnWebACL.ManagedRuleGroupConfigProperty = {\n  loginPath: 'loginPath',\n  passwordField: {\n    identifier: 'identifier',\n  },\n  payloadType: 'payloadType',\n  usernameField: {\n    identifier: 'identifier',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 11,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "8ec1ae1b33bbe67da08bc5c419d5d4d95205853e4ddef20ce2299330009581ec"
    },
    "9bacc21ad42bb69c11de90290ddbacbad3ac69d6d41744ce4c3e2f04198742ab": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnWebACL.StatementProperty\n# uri_path: Any\n\nmanaged_rule_group_statement_property = wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n    name=\"name\",\n    vendor_name=\"vendorName\",\n\n    # the properties below are optional\n    excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n        name=\"name\"\n    )],\n    managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n        login_path=\"loginPath\",\n        password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n            identifier=\"identifier\"\n        ),\n        payload_type=\"payloadType\",\n        username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n            identifier=\"identifier\"\n        )\n    )],\n    scope_down_statement=wafv2.CfnWebACL.StatementProperty(\n        and_statement=wafv2.CfnWebACL.AndStatementProperty(\n            statements=[statement_property_]\n        ),\n        byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            positional_constraint=\"positionalConstraint\",\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            search_string=\"searchString\",\n            search_string_base64=\"searchStringBase64\"\n        ),\n        geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n            country_codes=[\"countryCodes\"],\n            forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            )\n        ),\n        ip_set_reference_statement={\n            \"arn\": \"arn\",\n\n            # the properties below are optional\n            \"ip_set_forwarded_ip_config\": {\n                \"fallback_behavior\": \"fallbackBehavior\",\n                \"header_name\": \"headerName\",\n                \"position\": \"position\"\n            }\n        },\n        label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n            key=\"key\",\n            scope=\"scope\"\n        ),\n        managed_rule_group_statement=wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n            name=\"name\",\n            vendor_name=\"vendorName\",\n\n            # the properties below are optional\n            excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                name=\"name\"\n            )],\n            managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n                login_path=\"loginPath\",\n                password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                    identifier=\"identifier\"\n                ),\n                payload_type=\"payloadType\",\n                username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                    identifier=\"identifier\"\n                )\n            )],\n            scope_down_statement=statement_property_,\n            version=\"version\"\n        ),\n        not_statement=wafv2.CfnWebACL.NotStatementProperty(\n            statement=statement_property_\n        ),\n        or_statement=wafv2.CfnWebACL.OrStatementProperty(\n            statements=[statement_property_]\n        ),\n        rate_based_statement=wafv2.CfnWebACL.RateBasedStatementProperty(\n            aggregate_key_type=\"aggregateKeyType\",\n            limit=123,\n\n            # the properties below are optional\n            forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            ),\n            scope_down_statement=statement_property_\n        ),\n        regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            regex_string=\"regexString\",\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n            arn=\"arn\",\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n            arn=\"arn\",\n\n            # the properties below are optional\n            excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                name=\"name\"\n            )]\n        ),\n        size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n            comparison_operator=\"comparisonOperator\",\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            size=123,\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            sensitivity_level=\"sensitivityLevel\"\n        ),\n        xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        )\n    ),\n    version=\"version\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nManagedRuleGroupStatementProperty managedRuleGroupStatementProperty = new ManagedRuleGroupStatementProperty {\n    Name = \"name\",\n    VendorName = \"vendorName\",\n\n    // the properties below are optional\n    ExcludedRules = new [] { new ExcludedRuleProperty {\n        Name = \"name\"\n    } },\n    ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n        LoginPath = \"loginPath\",\n        PasswordField = new FieldIdentifierProperty {\n            Identifier = \"identifier\"\n        },\n        PayloadType = \"payloadType\",\n        UsernameField = new FieldIdentifierProperty {\n            Identifier = \"identifier\"\n        }\n    } },\n    ScopeDownStatement = new StatementProperty {\n        AndStatement = new AndStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        ByteMatchStatement = new ByteMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            PositionalConstraint = \"positionalConstraint\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SearchString = \"searchString\",\n            SearchStringBase64 = \"searchStringBase64\"\n        },\n        GeoMatchStatement = new GeoMatchStatementProperty {\n            CountryCodes = new [] { \"countryCodes\" },\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            }\n        },\n        IpSetReferenceStatement = new Dictionary<string, object> {\n            { \"arn\", \"arn\" },\n\n            // the properties below are optional\n            { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                { \"fallbackBehavior\", \"fallbackBehavior\" },\n                { \"headerName\", \"headerName\" },\n                { \"position\", \"position\" }\n            } }\n        },\n        LabelMatchStatement = new LabelMatchStatementProperty {\n            Key = \"key\",\n            Scope = \"scope\"\n        },\n        ManagedRuleGroupStatement = new ManagedRuleGroupStatementProperty {\n            Name = \"name\",\n            VendorName = \"vendorName\",\n\n            // the properties below are optional\n            ExcludedRules = new [] { new ExcludedRuleProperty {\n                Name = \"name\"\n            } },\n            ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n                LoginPath = \"loginPath\",\n                PasswordField = new FieldIdentifierProperty {\n                    Identifier = \"identifier\"\n                },\n                PayloadType = \"payloadType\",\n                UsernameField = new FieldIdentifierProperty {\n                    Identifier = \"identifier\"\n                }\n            } },\n            ScopeDownStatement = statementProperty_,\n            Version = \"version\"\n        },\n        NotStatement = new NotStatementProperty {\n            Statement = statementProperty_\n        },\n        OrStatement = new OrStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        RateBasedStatement = new RateBasedStatementProperty {\n            AggregateKeyType = \"aggregateKeyType\",\n            Limit = 123,\n\n            // the properties below are optional\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            },\n            ScopeDownStatement = statementProperty_\n        },\n        RegexMatchStatement = new RegexMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            RegexString = \"regexString\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n            Arn = \"arn\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n            Arn = \"arn\",\n\n            // the properties below are optional\n            ExcludedRules = new [] { new ExcludedRuleProperty {\n                Name = \"name\"\n            } }\n        },\n        SizeConstraintStatement = new SizeConstraintStatementProperty {\n            ComparisonOperator = \"comparisonOperator\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            Size = 123,\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SqliMatchStatement = new SqliMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SensitivityLevel = \"sensitivityLevel\"\n        },\n        XssMatchStatement = new XssMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        }\n    },\n    Version = \"version\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nManagedRuleGroupStatementProperty managedRuleGroupStatementProperty = ManagedRuleGroupStatementProperty.builder()\n        .name(\"name\")\n        .vendorName(\"vendorName\")\n\n        // the properties below are optional\n        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                .name(\"name\")\n                .build()))\n        .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                .loginPath(\"loginPath\")\n                .passwordField(FieldIdentifierProperty.builder()\n                        .identifier(\"identifier\")\n                        .build())\n                .payloadType(\"payloadType\")\n                .usernameField(FieldIdentifierProperty.builder()\n                        .identifier(\"identifier\")\n                        .build())\n                .build()))\n        .scopeDownStatement(StatementProperty.builder()\n                .andStatement(AndStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .byteMatchStatement(ByteMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .positionalConstraint(\"positionalConstraint\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .searchString(\"searchString\")\n                        .searchStringBase64(\"searchStringBase64\")\n                        .build())\n                .geoMatchStatement(GeoMatchStatementProperty.builder()\n                        .countryCodes(List.of(\"countryCodes\"))\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .build())\n                .ipSetReferenceStatement(Map.of(\n                        \"arn\", \"arn\",\n\n                        // the properties below are optional\n                        \"ipSetForwardedIpConfig\", Map.of(\n                                \"fallbackBehavior\", \"fallbackBehavior\",\n                                \"headerName\", \"headerName\",\n                                \"position\", \"position\")))\n                .labelMatchStatement(LabelMatchStatementProperty.builder()\n                        .key(\"key\")\n                        .scope(\"scope\")\n                        .build())\n                .managedRuleGroupStatement(ManagedRuleGroupStatementProperty.builder()\n                        .name(\"name\")\n                        .vendorName(\"vendorName\")\n\n                        // the properties below are optional\n                        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                                .loginPath(\"loginPath\")\n                                .passwordField(FieldIdentifierProperty.builder()\n                                        .identifier(\"identifier\")\n                                        .build())\n                                .payloadType(\"payloadType\")\n                                .usernameField(FieldIdentifierProperty.builder()\n                                        .identifier(\"identifier\")\n                                        .build())\n                                .build()))\n                        .scopeDownStatement(statementProperty_)\n                        .version(\"version\")\n                        .build())\n                .notStatement(NotStatementProperty.builder()\n                        .statement(statementProperty_)\n                        .build())\n                .orStatement(OrStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .rateBasedStatement(RateBasedStatementProperty.builder()\n                        .aggregateKeyType(\"aggregateKeyType\")\n                        .limit(123)\n\n                        // the properties below are optional\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .scopeDownStatement(statementProperty_)\n                        .build())\n                .regexMatchStatement(RegexMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .regexString(\"regexString\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n\n                        // the properties below are optional\n                        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .build())\n                .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                        .comparisonOperator(\"comparisonOperator\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .size(123)\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .sensitivityLevel(\"sensitivityLevel\")\n                        .build())\n                .xssMatchStatement(XssMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .build())\n        .version(\"version\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\nmanagedRuleGroupStatementProperty := &managedRuleGroupStatementProperty{\n\tname: jsii.String(\"name\"),\n\tvendorName: jsii.String(\"vendorName\"),\n\n\t// the properties below are optional\n\texcludedRules: []interface{}{\n\t\t&excludedRuleProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t},\n\tmanagedRuleGroupConfigs: []interface{}{\n\t\t&managedRuleGroupConfigProperty{\n\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t},\n\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t},\n\t\t},\n\t},\n\tscopeDownStatement: &statementProperty{\n\t\tandStatement: &andStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t},\n\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\tcountryCodes: []*string{\n\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t},\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t},\n\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t// the properties below are optional\n\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t},\n\t\t},\n\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tscope: jsii.String(\"scope\"),\n\t\t},\n\t\tmanagedRuleGroupStatement: &managedRuleGroupStatementProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tvendorName: jsii.String(\"vendorName\"),\n\n\t\t\t// the properties below are optional\n\t\t\texcludedRules: []interface{}{\n\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmanagedRuleGroupConfigs: []interface{}{\n\t\t\t\t&managedRuleGroupConfigProperty{\n\t\t\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t},\n\t\t\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tscopeDownStatement: statementProperty_,\n\t\t\tversion: jsii.String(\"version\"),\n\t\t},\n\t\tnotStatement: &notStatementProperty{\n\t\t\tstatement: statementProperty_,\n\t\t},\n\t\torStatement: &orStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\tlimit: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t\tscopeDownStatement: statementProperty_,\n\t\t},\n\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\tarn: jsii.String(\"arn\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t// the properties below are optional\n\t\t\texcludedRules: []interface{}{\n\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tsize: jsii.Number(123),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t},\n\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tversion: jsii.String(\"version\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst managedRuleGroupStatementProperty: wafv2.CfnWebACL.ManagedRuleGroupStatementProperty = {\n  name: 'name',\n  vendorName: 'vendorName',\n\n  // the properties below are optional\n  excludedRules: [{\n    name: 'name',\n  }],\n  managedRuleGroupConfigs: [{\n    loginPath: 'loginPath',\n    passwordField: {\n      identifier: 'identifier',\n    },\n    payloadType: 'payloadType',\n    usernameField: {\n      identifier: 'identifier',\n    },\n  }],\n  scopeDownStatement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n  version: 'version',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ManagedRuleGroupStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.ManagedRuleGroupStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst managedRuleGroupStatementProperty: wafv2.CfnWebACL.ManagedRuleGroupStatementProperty = {\n  name: 'name',\n  vendorName: 'vendorName',\n\n  // the properties below are optional\n  excludedRules: [{\n    name: 'name',\n  }],\n  managedRuleGroupConfigs: [{\n    loginPath: 'loginPath',\n    passwordField: {\n      identifier: 'identifier',\n    },\n    payloadType: 'payloadType',\n    usernameField: {\n      identifier: 'identifier',\n    },\n  }],\n  scopeDownStatement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n  version: 'version',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 8,
        "10": 122,
        "75": 345,
        "125": 7,
        "130": 8,
        "153": 4,
        "169": 2,
        "192": 44,
        "193": 83,
        "225": 9,
        "242": 9,
        "243": 9,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 270,
        "290": 1
      },
      "fqnsFingerprint": "354d13cade7cf0bcfbe28e60abb09a85a5e5b55a632dc38e4407f0054d3b6bae"
    },
    "3b4b17854d2cd885b41d5c258879a9e411b3d5576d9b2f3fb553b4df215c8c76": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnWebACL.StatementProperty\n# uri_path: Any\n\nnot_statement_property = wafv2.CfnWebACL.NotStatementProperty(\n    statement=wafv2.CfnWebACL.StatementProperty(\n        and_statement=wafv2.CfnWebACL.AndStatementProperty(\n            statements=[statement_property_]\n        ),\n        byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            positional_constraint=\"positionalConstraint\",\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            search_string=\"searchString\",\n            search_string_base64=\"searchStringBase64\"\n        ),\n        geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n            country_codes=[\"countryCodes\"],\n            forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            )\n        ),\n        ip_set_reference_statement={\n            \"arn\": \"arn\",\n\n            # the properties below are optional\n            \"ip_set_forwarded_ip_config\": {\n                \"fallback_behavior\": \"fallbackBehavior\",\n                \"header_name\": \"headerName\",\n                \"position\": \"position\"\n            }\n        },\n        label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n            key=\"key\",\n            scope=\"scope\"\n        ),\n        managed_rule_group_statement=wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n            name=\"name\",\n            vendor_name=\"vendorName\",\n\n            # the properties below are optional\n            excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                name=\"name\"\n            )],\n            managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n                login_path=\"loginPath\",\n                password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                    identifier=\"identifier\"\n                ),\n                payload_type=\"payloadType\",\n                username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                    identifier=\"identifier\"\n                )\n            )],\n            scope_down_statement=statement_property_,\n            version=\"version\"\n        ),\n        not_statement=wafv2.CfnWebACL.NotStatementProperty(\n            statement=statement_property_\n        ),\n        or_statement=wafv2.CfnWebACL.OrStatementProperty(\n            statements=[statement_property_]\n        ),\n        rate_based_statement=wafv2.CfnWebACL.RateBasedStatementProperty(\n            aggregate_key_type=\"aggregateKeyType\",\n            limit=123,\n\n            # the properties below are optional\n            forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            ),\n            scope_down_statement=statement_property_\n        ),\n        regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            regex_string=\"regexString\",\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n            arn=\"arn\",\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n            arn=\"arn\",\n\n            # the properties below are optional\n            excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                name=\"name\"\n            )]\n        ),\n        size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n            comparison_operator=\"comparisonOperator\",\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            size=123,\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            sensitivity_level=\"sensitivityLevel\"\n        ),\n        xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nNotStatementProperty notStatementProperty = new NotStatementProperty {\n    Statement = new StatementProperty {\n        AndStatement = new AndStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        ByteMatchStatement = new ByteMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            PositionalConstraint = \"positionalConstraint\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SearchString = \"searchString\",\n            SearchStringBase64 = \"searchStringBase64\"\n        },\n        GeoMatchStatement = new GeoMatchStatementProperty {\n            CountryCodes = new [] { \"countryCodes\" },\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            }\n        },\n        IpSetReferenceStatement = new Dictionary<string, object> {\n            { \"arn\", \"arn\" },\n\n            // the properties below are optional\n            { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                { \"fallbackBehavior\", \"fallbackBehavior\" },\n                { \"headerName\", \"headerName\" },\n                { \"position\", \"position\" }\n            } }\n        },\n        LabelMatchStatement = new LabelMatchStatementProperty {\n            Key = \"key\",\n            Scope = \"scope\"\n        },\n        ManagedRuleGroupStatement = new ManagedRuleGroupStatementProperty {\n            Name = \"name\",\n            VendorName = \"vendorName\",\n\n            // the properties below are optional\n            ExcludedRules = new [] { new ExcludedRuleProperty {\n                Name = \"name\"\n            } },\n            ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n                LoginPath = \"loginPath\",\n                PasswordField = new FieldIdentifierProperty {\n                    Identifier = \"identifier\"\n                },\n                PayloadType = \"payloadType\",\n                UsernameField = new FieldIdentifierProperty {\n                    Identifier = \"identifier\"\n                }\n            } },\n            ScopeDownStatement = statementProperty_,\n            Version = \"version\"\n        },\n        NotStatement = new NotStatementProperty {\n            Statement = statementProperty_\n        },\n        OrStatement = new OrStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        RateBasedStatement = new RateBasedStatementProperty {\n            AggregateKeyType = \"aggregateKeyType\",\n            Limit = 123,\n\n            // the properties below are optional\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            },\n            ScopeDownStatement = statementProperty_\n        },\n        RegexMatchStatement = new RegexMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            RegexString = \"regexString\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n            Arn = \"arn\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n            Arn = \"arn\",\n\n            // the properties below are optional\n            ExcludedRules = new [] { new ExcludedRuleProperty {\n                Name = \"name\"\n            } }\n        },\n        SizeConstraintStatement = new SizeConstraintStatementProperty {\n            ComparisonOperator = \"comparisonOperator\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            Size = 123,\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SqliMatchStatement = new SqliMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SensitivityLevel = \"sensitivityLevel\"\n        },\n        XssMatchStatement = new XssMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nNotStatementProperty notStatementProperty = NotStatementProperty.builder()\n        .statement(StatementProperty.builder()\n                .andStatement(AndStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .byteMatchStatement(ByteMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .positionalConstraint(\"positionalConstraint\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .searchString(\"searchString\")\n                        .searchStringBase64(\"searchStringBase64\")\n                        .build())\n                .geoMatchStatement(GeoMatchStatementProperty.builder()\n                        .countryCodes(List.of(\"countryCodes\"))\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .build())\n                .ipSetReferenceStatement(Map.of(\n                        \"arn\", \"arn\",\n\n                        // the properties below are optional\n                        \"ipSetForwardedIpConfig\", Map.of(\n                                \"fallbackBehavior\", \"fallbackBehavior\",\n                                \"headerName\", \"headerName\",\n                                \"position\", \"position\")))\n                .labelMatchStatement(LabelMatchStatementProperty.builder()\n                        .key(\"key\")\n                        .scope(\"scope\")\n                        .build())\n                .managedRuleGroupStatement(ManagedRuleGroupStatementProperty.builder()\n                        .name(\"name\")\n                        .vendorName(\"vendorName\")\n\n                        // the properties below are optional\n                        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                                .loginPath(\"loginPath\")\n                                .passwordField(FieldIdentifierProperty.builder()\n                                        .identifier(\"identifier\")\n                                        .build())\n                                .payloadType(\"payloadType\")\n                                .usernameField(FieldIdentifierProperty.builder()\n                                        .identifier(\"identifier\")\n                                        .build())\n                                .build()))\n                        .scopeDownStatement(statementProperty_)\n                        .version(\"version\")\n                        .build())\n                .notStatement(NotStatementProperty.builder()\n                        .statement(statementProperty_)\n                        .build())\n                .orStatement(OrStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .rateBasedStatement(RateBasedStatementProperty.builder()\n                        .aggregateKeyType(\"aggregateKeyType\")\n                        .limit(123)\n\n                        // the properties below are optional\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .scopeDownStatement(statementProperty_)\n                        .build())\n                .regexMatchStatement(RegexMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .regexString(\"regexString\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n\n                        // the properties below are optional\n                        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .build())\n                .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                        .comparisonOperator(\"comparisonOperator\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .size(123)\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .sensitivityLevel(\"sensitivityLevel\")\n                        .build())\n                .xssMatchStatement(XssMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\nnotStatementProperty := &notStatementProperty{\n\tstatement: &statementProperty{\n\t\tandStatement: &andStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t},\n\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\tcountryCodes: []*string{\n\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t},\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t},\n\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t// the properties below are optional\n\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t},\n\t\t},\n\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tscope: jsii.String(\"scope\"),\n\t\t},\n\t\tmanagedRuleGroupStatement: &managedRuleGroupStatementProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tvendorName: jsii.String(\"vendorName\"),\n\n\t\t\t// the properties below are optional\n\t\t\texcludedRules: []interface{}{\n\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmanagedRuleGroupConfigs: []interface{}{\n\t\t\t\t&managedRuleGroupConfigProperty{\n\t\t\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t},\n\t\t\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tscopeDownStatement: statementProperty_,\n\t\t\tversion: jsii.String(\"version\"),\n\t\t},\n\t\tnotStatement: &notStatementProperty{\n\t\t\tstatement: statementProperty_,\n\t\t},\n\t\torStatement: &orStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\tlimit: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t\tscopeDownStatement: statementProperty_,\n\t\t},\n\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\tarn: jsii.String(\"arn\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t// the properties below are optional\n\t\t\texcludedRules: []interface{}{\n\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tsize: jsii.Number(123),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t},\n\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst notStatementProperty: wafv2.CfnWebACL.NotStatementProperty = {\n  statement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.NotStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.NotStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notStatementProperty: wafv2.CfnWebACL.NotStatementProperty = {\n  statement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 8,
        "10": 114,
        "75": 333,
        "125": 7,
        "130": 8,
        "153": 4,
        "169": 2,
        "192": 42,
        "193": 79,
        "225": 9,
        "242": 9,
        "243": 9,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 258,
        "290": 1
      },
      "fqnsFingerprint": "08d4b83ff4d5f58425531c99c8515b92a1ef728e181b18a615340a20b42804f8"
    },
    "768c6b88f87dd1e73bfc2722e09b1dbd642b176f30c17059eaf73a199d89658f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnWebACL.StatementProperty\n# uri_path: Any\n\nor_statement_property = wafv2.CfnWebACL.OrStatementProperty(\n    statements=[wafv2.CfnWebACL.StatementProperty(\n        and_statement=wafv2.CfnWebACL.AndStatementProperty(\n            statements=[statement_property_]\n        ),\n        byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            positional_constraint=\"positionalConstraint\",\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            search_string=\"searchString\",\n            search_string_base64=\"searchStringBase64\"\n        ),\n        geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n            country_codes=[\"countryCodes\"],\n            forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            )\n        ),\n        ip_set_reference_statement={\n            \"arn\": \"arn\",\n\n            # the properties below are optional\n            \"ip_set_forwarded_ip_config\": {\n                \"fallback_behavior\": \"fallbackBehavior\",\n                \"header_name\": \"headerName\",\n                \"position\": \"position\"\n            }\n        },\n        label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n            key=\"key\",\n            scope=\"scope\"\n        ),\n        managed_rule_group_statement=wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n            name=\"name\",\n            vendor_name=\"vendorName\",\n\n            # the properties below are optional\n            excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                name=\"name\"\n            )],\n            managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n                login_path=\"loginPath\",\n                password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                    identifier=\"identifier\"\n                ),\n                payload_type=\"payloadType\",\n                username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                    identifier=\"identifier\"\n                )\n            )],\n            scope_down_statement=statement_property_,\n            version=\"version\"\n        ),\n        not_statement=wafv2.CfnWebACL.NotStatementProperty(\n            statement=statement_property_\n        ),\n        or_statement=wafv2.CfnWebACL.OrStatementProperty(\n            statements=[statement_property_]\n        ),\n        rate_based_statement=wafv2.CfnWebACL.RateBasedStatementProperty(\n            aggregate_key_type=\"aggregateKeyType\",\n            limit=123,\n\n            # the properties below are optional\n            forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            ),\n            scope_down_statement=statement_property_\n        ),\n        regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            regex_string=\"regexString\",\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n            arn=\"arn\",\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n            arn=\"arn\",\n\n            # the properties below are optional\n            excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                name=\"name\"\n            )]\n        ),\n        size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n            comparison_operator=\"comparisonOperator\",\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            size=123,\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            sensitivity_level=\"sensitivityLevel\"\n        ),\n        xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nOrStatementProperty orStatementProperty = new OrStatementProperty {\n    Statements = new [] { new StatementProperty {\n        AndStatement = new AndStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        ByteMatchStatement = new ByteMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            PositionalConstraint = \"positionalConstraint\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SearchString = \"searchString\",\n            SearchStringBase64 = \"searchStringBase64\"\n        },\n        GeoMatchStatement = new GeoMatchStatementProperty {\n            CountryCodes = new [] { \"countryCodes\" },\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            }\n        },\n        IpSetReferenceStatement = new Dictionary<string, object> {\n            { \"arn\", \"arn\" },\n\n            // the properties below are optional\n            { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                { \"fallbackBehavior\", \"fallbackBehavior\" },\n                { \"headerName\", \"headerName\" },\n                { \"position\", \"position\" }\n            } }\n        },\n        LabelMatchStatement = new LabelMatchStatementProperty {\n            Key = \"key\",\n            Scope = \"scope\"\n        },\n        ManagedRuleGroupStatement = new ManagedRuleGroupStatementProperty {\n            Name = \"name\",\n            VendorName = \"vendorName\",\n\n            // the properties below are optional\n            ExcludedRules = new [] { new ExcludedRuleProperty {\n                Name = \"name\"\n            } },\n            ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n                LoginPath = \"loginPath\",\n                PasswordField = new FieldIdentifierProperty {\n                    Identifier = \"identifier\"\n                },\n                PayloadType = \"payloadType\",\n                UsernameField = new FieldIdentifierProperty {\n                    Identifier = \"identifier\"\n                }\n            } },\n            ScopeDownStatement = statementProperty_,\n            Version = \"version\"\n        },\n        NotStatement = new NotStatementProperty {\n            Statement = statementProperty_\n        },\n        OrStatement = new OrStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        RateBasedStatement = new RateBasedStatementProperty {\n            AggregateKeyType = \"aggregateKeyType\",\n            Limit = 123,\n\n            // the properties below are optional\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            },\n            ScopeDownStatement = statementProperty_\n        },\n        RegexMatchStatement = new RegexMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            RegexString = \"regexString\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n            Arn = \"arn\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n            Arn = \"arn\",\n\n            // the properties below are optional\n            ExcludedRules = new [] { new ExcludedRuleProperty {\n                Name = \"name\"\n            } }\n        },\n        SizeConstraintStatement = new SizeConstraintStatementProperty {\n            ComparisonOperator = \"comparisonOperator\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            Size = 123,\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SqliMatchStatement = new SqliMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SensitivityLevel = \"sensitivityLevel\"\n        },\n        XssMatchStatement = new XssMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nOrStatementProperty orStatementProperty = OrStatementProperty.builder()\n        .statements(List.of(StatementProperty.builder()\n                .andStatement(AndStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .byteMatchStatement(ByteMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .positionalConstraint(\"positionalConstraint\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .searchString(\"searchString\")\n                        .searchStringBase64(\"searchStringBase64\")\n                        .build())\n                .geoMatchStatement(GeoMatchStatementProperty.builder()\n                        .countryCodes(List.of(\"countryCodes\"))\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .build())\n                .ipSetReferenceStatement(Map.of(\n                        \"arn\", \"arn\",\n\n                        // the properties below are optional\n                        \"ipSetForwardedIpConfig\", Map.of(\n                                \"fallbackBehavior\", \"fallbackBehavior\",\n                                \"headerName\", \"headerName\",\n                                \"position\", \"position\")))\n                .labelMatchStatement(LabelMatchStatementProperty.builder()\n                        .key(\"key\")\n                        .scope(\"scope\")\n                        .build())\n                .managedRuleGroupStatement(ManagedRuleGroupStatementProperty.builder()\n                        .name(\"name\")\n                        .vendorName(\"vendorName\")\n\n                        // the properties below are optional\n                        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                                .loginPath(\"loginPath\")\n                                .passwordField(FieldIdentifierProperty.builder()\n                                        .identifier(\"identifier\")\n                                        .build())\n                                .payloadType(\"payloadType\")\n                                .usernameField(FieldIdentifierProperty.builder()\n                                        .identifier(\"identifier\")\n                                        .build())\n                                .build()))\n                        .scopeDownStatement(statementProperty_)\n                        .version(\"version\")\n                        .build())\n                .notStatement(NotStatementProperty.builder()\n                        .statement(statementProperty_)\n                        .build())\n                .orStatement(OrStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .rateBasedStatement(RateBasedStatementProperty.builder()\n                        .aggregateKeyType(\"aggregateKeyType\")\n                        .limit(123)\n\n                        // the properties below are optional\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .scopeDownStatement(statementProperty_)\n                        .build())\n                .regexMatchStatement(RegexMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .regexString(\"regexString\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n\n                        // the properties below are optional\n                        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .build())\n                .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                        .comparisonOperator(\"comparisonOperator\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .size(123)\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .sensitivityLevel(\"sensitivityLevel\")\n                        .build())\n                .xssMatchStatement(XssMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\norStatementProperty := &orStatementProperty{\n\tstatements: []interface{}{\n\t\t&statementProperty{\n\t\t\tandStatement: &andStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t},\n\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t},\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t},\n\t\t\tmanagedRuleGroupStatement: &managedRuleGroupStatementProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tvendorName: jsii.String(\"vendorName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmanagedRuleGroupConfigs: []interface{}{\n\t\t\t\t\t&managedRuleGroupConfigProperty{\n\t\t\t\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\t\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\t\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t},\n\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\tstatement: statementProperty_,\n\t\t\t},\n\t\t\torStatement: &orStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t},\n\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tsize: jsii.Number(123),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t},\n\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst orStatementProperty: wafv2.CfnWebACL.OrStatementProperty = {\n  statements: [{\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.OrStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.OrStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst orStatementProperty: wafv2.CfnWebACL.OrStatementProperty = {\n  statements: [{\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 8,
        "10": 114,
        "75": 333,
        "125": 7,
        "130": 8,
        "153": 4,
        "169": 2,
        "192": 43,
        "193": 79,
        "225": 9,
        "242": 9,
        "243": 9,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 258,
        "290": 1
      },
      "fqnsFingerprint": "5e1d259ce0ac0ce34d394ab00aaece4d6d02b0ecbebf4635ee0cd70f2d7ea0d5"
    },
    "5c5877efc8996a845bb52737f0b7841832d22af31c877430c47667ee51791a06": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# count: Any\n# none: Any\n\noverride_action_property = wafv2.CfnWebACL.OverrideActionProperty(\n    count=count,\n    none=none\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar count;\nvar none;\n\nOverrideActionProperty overrideActionProperty = new OverrideActionProperty {\n    Count = count,\n    None = none\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject count;\nObject none;\n\nOverrideActionProperty overrideActionProperty = OverrideActionProperty.builder()\n        .count(count)\n        .none(none)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar count interface{}\nvar none interface{}\n\noverrideActionProperty := &overrideActionProperty{\n\tcount: count,\n\tnone: none,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const count: any;\ndeclare const none: any;\nconst overrideActionProperty: wafv2.CfnWebACL.OverrideActionProperty = {\n  count: count,\n  none: none,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.OverrideActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.OverrideActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const count: any;\ndeclare const none: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst overrideActionProperty: wafv2.CfnWebACL.OverrideActionProperty = {\n  count: count,\n  none: none,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 11,
        "125": 2,
        "130": 2,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "e6e1b155dfef4112d68c1b47fb2cfbbb9b4cf40978d9921542ab00442a312176"
    },
    "a6fc10dec34f9f7ef85d225f9ae58d0c8260117e6f669a10352ce637ddf744bf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnWebACL.StatementProperty\n# uri_path: Any\n\nrate_based_statement_property = wafv2.CfnWebACL.RateBasedStatementProperty(\n    aggregate_key_type=\"aggregateKeyType\",\n    limit=123,\n\n    # the properties below are optional\n    forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n        fallback_behavior=\"fallbackBehavior\",\n        header_name=\"headerName\"\n    ),\n    scope_down_statement=wafv2.CfnWebACL.StatementProperty(\n        and_statement=wafv2.CfnWebACL.AndStatementProperty(\n            statements=[statement_property_]\n        ),\n        byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            positional_constraint=\"positionalConstraint\",\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            search_string=\"searchString\",\n            search_string_base64=\"searchStringBase64\"\n        ),\n        geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n            country_codes=[\"countryCodes\"],\n            forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            )\n        ),\n        ip_set_reference_statement={\n            \"arn\": \"arn\",\n\n            # the properties below are optional\n            \"ip_set_forwarded_ip_config\": {\n                \"fallback_behavior\": \"fallbackBehavior\",\n                \"header_name\": \"headerName\",\n                \"position\": \"position\"\n            }\n        },\n        label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n            key=\"key\",\n            scope=\"scope\"\n        ),\n        managed_rule_group_statement=wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n            name=\"name\",\n            vendor_name=\"vendorName\",\n\n            # the properties below are optional\n            excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                name=\"name\"\n            )],\n            managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n                login_path=\"loginPath\",\n                password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                    identifier=\"identifier\"\n                ),\n                payload_type=\"payloadType\",\n                username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                    identifier=\"identifier\"\n                )\n            )],\n            scope_down_statement=statement_property_,\n            version=\"version\"\n        ),\n        not_statement=wafv2.CfnWebACL.NotStatementProperty(\n            statement=statement_property_\n        ),\n        or_statement=wafv2.CfnWebACL.OrStatementProperty(\n            statements=[statement_property_]\n        ),\n        rate_based_statement=wafv2.CfnWebACL.RateBasedStatementProperty(\n            aggregate_key_type=\"aggregateKeyType\",\n            limit=123,\n\n            # the properties below are optional\n            forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            ),\n            scope_down_statement=statement_property_\n        ),\n        regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            regex_string=\"regexString\",\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n            arn=\"arn\",\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n            arn=\"arn\",\n\n            # the properties below are optional\n            excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                name=\"name\"\n            )]\n        ),\n        size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n            comparison_operator=\"comparisonOperator\",\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            size=123,\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            sensitivity_level=\"sensitivityLevel\"\n        ),\n        xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nRateBasedStatementProperty rateBasedStatementProperty = new RateBasedStatementProperty {\n    AggregateKeyType = \"aggregateKeyType\",\n    Limit = 123,\n\n    // the properties below are optional\n    ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n        FallbackBehavior = \"fallbackBehavior\",\n        HeaderName = \"headerName\"\n    },\n    ScopeDownStatement = new StatementProperty {\n        AndStatement = new AndStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        ByteMatchStatement = new ByteMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            PositionalConstraint = \"positionalConstraint\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SearchString = \"searchString\",\n            SearchStringBase64 = \"searchStringBase64\"\n        },\n        GeoMatchStatement = new GeoMatchStatementProperty {\n            CountryCodes = new [] { \"countryCodes\" },\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            }\n        },\n        IpSetReferenceStatement = new Dictionary<string, object> {\n            { \"arn\", \"arn\" },\n\n            // the properties below are optional\n            { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                { \"fallbackBehavior\", \"fallbackBehavior\" },\n                { \"headerName\", \"headerName\" },\n                { \"position\", \"position\" }\n            } }\n        },\n        LabelMatchStatement = new LabelMatchStatementProperty {\n            Key = \"key\",\n            Scope = \"scope\"\n        },\n        ManagedRuleGroupStatement = new ManagedRuleGroupStatementProperty {\n            Name = \"name\",\n            VendorName = \"vendorName\",\n\n            // the properties below are optional\n            ExcludedRules = new [] { new ExcludedRuleProperty {\n                Name = \"name\"\n            } },\n            ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n                LoginPath = \"loginPath\",\n                PasswordField = new FieldIdentifierProperty {\n                    Identifier = \"identifier\"\n                },\n                PayloadType = \"payloadType\",\n                UsernameField = new FieldIdentifierProperty {\n                    Identifier = \"identifier\"\n                }\n            } },\n            ScopeDownStatement = statementProperty_,\n            Version = \"version\"\n        },\n        NotStatement = new NotStatementProperty {\n            Statement = statementProperty_\n        },\n        OrStatement = new OrStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        RateBasedStatement = new RateBasedStatementProperty {\n            AggregateKeyType = \"aggregateKeyType\",\n            Limit = 123,\n\n            // the properties below are optional\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            },\n            ScopeDownStatement = statementProperty_\n        },\n        RegexMatchStatement = new RegexMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            RegexString = \"regexString\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n            Arn = \"arn\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n            Arn = \"arn\",\n\n            // the properties below are optional\n            ExcludedRules = new [] { new ExcludedRuleProperty {\n                Name = \"name\"\n            } }\n        },\n        SizeConstraintStatement = new SizeConstraintStatementProperty {\n            ComparisonOperator = \"comparisonOperator\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            Size = 123,\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SqliMatchStatement = new SqliMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SensitivityLevel = \"sensitivityLevel\"\n        },\n        XssMatchStatement = new XssMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nRateBasedStatementProperty rateBasedStatementProperty = RateBasedStatementProperty.builder()\n        .aggregateKeyType(\"aggregateKeyType\")\n        .limit(123)\n\n        // the properties below are optional\n        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                .fallbackBehavior(\"fallbackBehavior\")\n                .headerName(\"headerName\")\n                .build())\n        .scopeDownStatement(StatementProperty.builder()\n                .andStatement(AndStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .byteMatchStatement(ByteMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .positionalConstraint(\"positionalConstraint\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .searchString(\"searchString\")\n                        .searchStringBase64(\"searchStringBase64\")\n                        .build())\n                .geoMatchStatement(GeoMatchStatementProperty.builder()\n                        .countryCodes(List.of(\"countryCodes\"))\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .build())\n                .ipSetReferenceStatement(Map.of(\n                        \"arn\", \"arn\",\n\n                        // the properties below are optional\n                        \"ipSetForwardedIpConfig\", Map.of(\n                                \"fallbackBehavior\", \"fallbackBehavior\",\n                                \"headerName\", \"headerName\",\n                                \"position\", \"position\")))\n                .labelMatchStatement(LabelMatchStatementProperty.builder()\n                        .key(\"key\")\n                        .scope(\"scope\")\n                        .build())\n                .managedRuleGroupStatement(ManagedRuleGroupStatementProperty.builder()\n                        .name(\"name\")\n                        .vendorName(\"vendorName\")\n\n                        // the properties below are optional\n                        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                                .loginPath(\"loginPath\")\n                                .passwordField(FieldIdentifierProperty.builder()\n                                        .identifier(\"identifier\")\n                                        .build())\n                                .payloadType(\"payloadType\")\n                                .usernameField(FieldIdentifierProperty.builder()\n                                        .identifier(\"identifier\")\n                                        .build())\n                                .build()))\n                        .scopeDownStatement(statementProperty_)\n                        .version(\"version\")\n                        .build())\n                .notStatement(NotStatementProperty.builder()\n                        .statement(statementProperty_)\n                        .build())\n                .orStatement(OrStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .rateBasedStatement(RateBasedStatementProperty.builder()\n                        .aggregateKeyType(\"aggregateKeyType\")\n                        .limit(123)\n\n                        // the properties below are optional\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .scopeDownStatement(statementProperty_)\n                        .build())\n                .regexMatchStatement(RegexMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .regexString(\"regexString\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n\n                        // the properties below are optional\n                        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .build())\n                .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                        .comparisonOperator(\"comparisonOperator\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .size(123)\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .sensitivityLevel(\"sensitivityLevel\")\n                        .build())\n                .xssMatchStatement(XssMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\nrateBasedStatementProperty := &rateBasedStatementProperty{\n\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\tlimit: jsii.Number(123),\n\n\t// the properties below are optional\n\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\theaderName: jsii.String(\"headerName\"),\n\t},\n\tscopeDownStatement: &statementProperty{\n\t\tandStatement: &andStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t},\n\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\tcountryCodes: []*string{\n\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t},\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t},\n\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t// the properties below are optional\n\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t},\n\t\t},\n\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tscope: jsii.String(\"scope\"),\n\t\t},\n\t\tmanagedRuleGroupStatement: &managedRuleGroupStatementProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tvendorName: jsii.String(\"vendorName\"),\n\n\t\t\t// the properties below are optional\n\t\t\texcludedRules: []interface{}{\n\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmanagedRuleGroupConfigs: []interface{}{\n\t\t\t\t&managedRuleGroupConfigProperty{\n\t\t\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t},\n\t\t\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tscopeDownStatement: statementProperty_,\n\t\t\tversion: jsii.String(\"version\"),\n\t\t},\n\t\tnotStatement: &notStatementProperty{\n\t\t\tstatement: statementProperty_,\n\t\t},\n\t\torStatement: &orStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\tlimit: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t\tscopeDownStatement: statementProperty_,\n\t\t},\n\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\tarn: jsii.String(\"arn\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t// the properties below are optional\n\t\t\texcludedRules: []interface{}{\n\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tsize: jsii.Number(123),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t},\n\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst rateBasedStatementProperty: wafv2.CfnWebACL.RateBasedStatementProperty = {\n  aggregateKeyType: 'aggregateKeyType',\n  limit: 123,\n\n  // the properties below are optional\n  forwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n  },\n  scopeDownStatement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RateBasedStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.RateBasedStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst rateBasedStatementProperty: wafv2.CfnWebACL.RateBasedStatementProperty = {\n  aggregateKeyType: 'aggregateKeyType',\n  limit: 123,\n\n  // the properties below are optional\n  forwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n  },\n  scopeDownStatement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 9,
        "10": 117,
        "75": 338,
        "125": 7,
        "130": 8,
        "153": 4,
        "169": 2,
        "192": 42,
        "193": 80,
        "225": 9,
        "242": 9,
        "243": 9,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 263,
        "290": 1
      },
      "fqnsFingerprint": "4b9d3bf08f93286c0efb954f3ba502fe4db748ff31d0e95be4cd0c3dbe7376fe"
    },
    "30e4ee2ba2825bd7e9d9c1b1858473595d75186a92ed60cd6dfdce0c981cdc83": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nregex_match_statement_property = wafv2.CfnWebACL.RegexMatchStatementProperty(\n    field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n        all_query_arguments=all_query_arguments,\n        body=wafv2.CfnWebACL.BodyProperty(\n            oversize_handling=\"oversizeHandling\"\n        ),\n        cookies=wafv2.CfnWebACL.CookiesProperty(\n            match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                all=all,\n                excluded_cookies=[\"excludedCookies\"],\n                included_cookies=[\"includedCookies\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        headers=wafv2.CfnWebACL.HeadersProperty(\n            match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                all=all,\n                excluded_headers=[\"excludedHeaders\"],\n                included_headers=[\"includedHeaders\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        json_body=wafv2.CfnWebACL.JsonBodyProperty(\n            match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                all=all,\n                included_paths=[\"includedPaths\"]\n            ),\n            match_scope=\"matchScope\",\n\n            # the properties below are optional\n            invalid_fallback_behavior=\"invalidFallbackBehavior\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        single_query_argument=single_query_argument,\n        uri_path=uri_path\n    ),\n    regex_string=\"regexString\",\n    text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n        priority=123,\n        type=\"type\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nRegexMatchStatementProperty regexMatchStatementProperty = new RegexMatchStatementProperty {\n    FieldToMatch = new FieldToMatchProperty {\n        AllQueryArguments = allQueryArguments,\n        Body = new BodyProperty {\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Cookies = new CookiesProperty {\n            MatchPattern = new CookieMatchPatternProperty {\n                All = all,\n                ExcludedCookies = new [] { \"excludedCookies\" },\n                IncludedCookies = new [] { \"includedCookies\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Headers = new HeadersProperty {\n            MatchPattern = new HeaderMatchPatternProperty {\n                All = all,\n                ExcludedHeaders = new [] { \"excludedHeaders\" },\n                IncludedHeaders = new [] { \"includedHeaders\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        JsonBody = new JsonBodyProperty {\n            MatchPattern = new JsonMatchPatternProperty {\n                All = all,\n                IncludedPaths = new [] { \"includedPaths\" }\n            },\n            MatchScope = \"matchScope\",\n\n            // the properties below are optional\n            InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        SingleQueryArgument = singleQueryArgument,\n        UriPath = uriPath\n    },\n    RegexString = \"regexString\",\n    TextTransformations = new [] { new TextTransformationProperty {\n        Priority = 123,\n        Type = \"type\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nRegexMatchStatementProperty regexMatchStatementProperty = RegexMatchStatementProperty.builder()\n        .fieldToMatch(FieldToMatchProperty.builder()\n                .allQueryArguments(allQueryArguments)\n                .body(BodyProperty.builder()\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .cookies(CookiesProperty.builder()\n                        .matchPattern(CookieMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedCookies(List.of(\"excludedCookies\"))\n                                .includedCookies(List.of(\"includedCookies\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .headers(HeadersProperty.builder()\n                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                .includedHeaders(List.of(\"includedHeaders\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .jsonBody(JsonBodyProperty.builder()\n                        .matchPattern(JsonMatchPatternProperty.builder()\n                                .all(all)\n                                .includedPaths(List.of(\"includedPaths\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n\n                        // the properties below are optional\n                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .singleQueryArgument(singleQueryArgument)\n                .uriPath(uriPath)\n                .build())\n        .regexString(\"regexString\")\n        .textTransformations(List.of(TextTransformationProperty.builder()\n                .priority(123)\n                .type(\"type\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nregexMatchStatementProperty := &regexMatchStatementProperty{\n\tfieldToMatch: &fieldToMatchProperty{\n\t\tallQueryArguments: allQueryArguments,\n\t\tbody: &bodyProperty{\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tcookies: &cookiesProperty{\n\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t},\n\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\theaders: &headersProperty{\n\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t},\n\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tjsonBody: &jsonBodyProperty{\n\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tmethod: method,\n\t\tqueryString: queryString,\n\t\tsingleHeader: singleHeader,\n\t\tsingleQueryArgument: singleQueryArgument,\n\t\turiPath: uriPath,\n\t},\n\tregexString: jsii.String(\"regexString\"),\n\ttextTransformations: []interface{}{\n\t\t&textTransformationProperty{\n\t\t\tpriority: jsii.Number(123),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst regexMatchStatementProperty: wafv2.CfnWebACL.RegexMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  regexString: 'regexString',\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RegexMatchStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.RegexMatchStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst regexMatchStatementProperty: wafv2.CfnWebACL.RegexMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  regexString: 'regexString',\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 16,
        "75": 55,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 10,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 34,
        "290": 1
      },
      "fqnsFingerprint": "8810ded56cf99ea0cd5ac89e2e50075ac6732e6e500f0e93212e69dfe74c9976"
    },
    "158d016ccf4aaed23b9a13945ae481272b5b5c1148ceef1d3df507e62787e3b5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nregex_pattern_set_reference_statement_property = wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n    arn=\"arn\",\n    field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n        all_query_arguments=all_query_arguments,\n        body=wafv2.CfnWebACL.BodyProperty(\n            oversize_handling=\"oversizeHandling\"\n        ),\n        cookies=wafv2.CfnWebACL.CookiesProperty(\n            match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                all=all,\n                excluded_cookies=[\"excludedCookies\"],\n                included_cookies=[\"includedCookies\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        headers=wafv2.CfnWebACL.HeadersProperty(\n            match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                all=all,\n                excluded_headers=[\"excludedHeaders\"],\n                included_headers=[\"includedHeaders\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        json_body=wafv2.CfnWebACL.JsonBodyProperty(\n            match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                all=all,\n                included_paths=[\"includedPaths\"]\n            ),\n            match_scope=\"matchScope\",\n\n            # the properties below are optional\n            invalid_fallback_behavior=\"invalidFallbackBehavior\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        single_query_argument=single_query_argument,\n        uri_path=uri_path\n    ),\n    text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n        priority=123,\n        type=\"type\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nRegexPatternSetReferenceStatementProperty regexPatternSetReferenceStatementProperty = new RegexPatternSetReferenceStatementProperty {\n    Arn = \"arn\",\n    FieldToMatch = new FieldToMatchProperty {\n        AllQueryArguments = allQueryArguments,\n        Body = new BodyProperty {\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Cookies = new CookiesProperty {\n            MatchPattern = new CookieMatchPatternProperty {\n                All = all,\n                ExcludedCookies = new [] { \"excludedCookies\" },\n                IncludedCookies = new [] { \"includedCookies\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Headers = new HeadersProperty {\n            MatchPattern = new HeaderMatchPatternProperty {\n                All = all,\n                ExcludedHeaders = new [] { \"excludedHeaders\" },\n                IncludedHeaders = new [] { \"includedHeaders\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        JsonBody = new JsonBodyProperty {\n            MatchPattern = new JsonMatchPatternProperty {\n                All = all,\n                IncludedPaths = new [] { \"includedPaths\" }\n            },\n            MatchScope = \"matchScope\",\n\n            // the properties below are optional\n            InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        SingleQueryArgument = singleQueryArgument,\n        UriPath = uriPath\n    },\n    TextTransformations = new [] { new TextTransformationProperty {\n        Priority = 123,\n        Type = \"type\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nRegexPatternSetReferenceStatementProperty regexPatternSetReferenceStatementProperty = RegexPatternSetReferenceStatementProperty.builder()\n        .arn(\"arn\")\n        .fieldToMatch(FieldToMatchProperty.builder()\n                .allQueryArguments(allQueryArguments)\n                .body(BodyProperty.builder()\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .cookies(CookiesProperty.builder()\n                        .matchPattern(CookieMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedCookies(List.of(\"excludedCookies\"))\n                                .includedCookies(List.of(\"includedCookies\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .headers(HeadersProperty.builder()\n                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                .includedHeaders(List.of(\"includedHeaders\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .jsonBody(JsonBodyProperty.builder()\n                        .matchPattern(JsonMatchPatternProperty.builder()\n                                .all(all)\n                                .includedPaths(List.of(\"includedPaths\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n\n                        // the properties below are optional\n                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .singleQueryArgument(singleQueryArgument)\n                .uriPath(uriPath)\n                .build())\n        .textTransformations(List.of(TextTransformationProperty.builder()\n                .priority(123)\n                .type(\"type\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nregexPatternSetReferenceStatementProperty := &regexPatternSetReferenceStatementProperty{\n\tarn: jsii.String(\"arn\"),\n\tfieldToMatch: &fieldToMatchProperty{\n\t\tallQueryArguments: allQueryArguments,\n\t\tbody: &bodyProperty{\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tcookies: &cookiesProperty{\n\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t},\n\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\theaders: &headersProperty{\n\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t},\n\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tjsonBody: &jsonBodyProperty{\n\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tmethod: method,\n\t\tqueryString: queryString,\n\t\tsingleHeader: singleHeader,\n\t\tsingleQueryArgument: singleQueryArgument,\n\t\turiPath: uriPath,\n\t},\n\ttextTransformations: []interface{}{\n\t\t&textTransformationProperty{\n\t\t\tpriority: jsii.Number(123),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst regexPatternSetReferenceStatementProperty: wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty = {\n  arn: 'arn',\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst regexPatternSetReferenceStatementProperty: wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty = {\n  arn: 'arn',\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 16,
        "75": 55,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 10,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 34,
        "290": 1
      },
      "fqnsFingerprint": "b5b64e6b0e69a39057fb85ef8a68582ac2d44a32708217c5811e87b2b39e1c68"
    },
    "547eaaabdec9b7d69c684725843e0e4ec1c08ef93568dc7d841db0c8c402623b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nrule_action_property = wafv2.CfnWebACL.RuleActionProperty(\n    allow=wafv2.CfnWebACL.AllowActionProperty(\n        custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n            insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                name=\"name\",\n                value=\"value\"\n            )]\n        )\n    ),\n    block=wafv2.CfnWebACL.BlockActionProperty(\n        custom_response=wafv2.CfnWebACL.CustomResponseProperty(\n            response_code=123,\n\n            # the properties below are optional\n            custom_response_body_key=\"customResponseBodyKey\",\n            response_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                name=\"name\",\n                value=\"value\"\n            )]\n        )\n    ),\n    captcha=wafv2.CfnWebACL.CaptchaActionProperty(\n        custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n            insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                name=\"name\",\n                value=\"value\"\n            )]\n        )\n    ),\n    count=wafv2.CfnWebACL.CountActionProperty(\n        custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n            insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                name=\"name\",\n                value=\"value\"\n            )]\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nRuleActionProperty ruleActionProperty = new RuleActionProperty {\n    Allow = new AllowActionProperty {\n        CustomRequestHandling = new CustomRequestHandlingProperty {\n            InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } }\n        }\n    },\n    Block = new BlockActionProperty {\n        CustomResponse = new CustomResponseProperty {\n            ResponseCode = 123,\n\n            // the properties below are optional\n            CustomResponseBodyKey = \"customResponseBodyKey\",\n            ResponseHeaders = new [] { new CustomHTTPHeaderProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } }\n        }\n    },\n    Captcha = new CaptchaActionProperty {\n        CustomRequestHandling = new CustomRequestHandlingProperty {\n            InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } }\n        }\n    },\n    Count = new CountActionProperty {\n        CustomRequestHandling = new CustomRequestHandlingProperty {\n            InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } }\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nRuleActionProperty ruleActionProperty = RuleActionProperty.builder()\n        .allow(AllowActionProperty.builder()\n                .customRequestHandling(CustomRequestHandlingProperty.builder()\n                        .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .build())\n        .block(BlockActionProperty.builder()\n                .customResponse(CustomResponseProperty.builder()\n                        .responseCode(123)\n\n                        // the properties below are optional\n                        .customResponseBodyKey(\"customResponseBodyKey\")\n                        .responseHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .build())\n        .captcha(CaptchaActionProperty.builder()\n                .customRequestHandling(CustomRequestHandlingProperty.builder()\n                        .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .build())\n        .count(CountActionProperty.builder()\n                .customRequestHandling(CustomRequestHandlingProperty.builder()\n                        .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nruleActionProperty := &ruleActionProperty{\n\tallow: &allowActionProperty{\n\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tblock: &blockActionProperty{\n\t\tcustomResponse: &customResponseProperty{\n\t\t\tresponseCode: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tcustomResponseBodyKey: jsii.String(\"customResponseBodyKey\"),\n\t\t\tresponseHeaders: []interface{}{\n\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tcaptcha: &captchaActionProperty{\n\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tcount: &countActionProperty{\n\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst ruleActionProperty: wafv2.CfnWebACL.RuleActionProperty = {\n  allow: {\n    customRequestHandling: {\n      insertHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n  block: {\n    customResponse: {\n      responseCode: 123,\n\n      // the properties below are optional\n      customResponseBodyKey: 'customResponseBodyKey',\n      responseHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n  captcha: {\n    customRequestHandling: {\n      insertHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n  count: {\n    customRequestHandling: {\n      insertHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RuleActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.RuleActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ruleActionProperty: wafv2.CfnWebACL.RuleActionProperty = {\n  allow: {\n    customRequestHandling: {\n      insertHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n  block: {\n    customResponse: {\n      responseCode: 123,\n\n      // the properties below are optional\n      customResponseBodyKey: 'customResponseBodyKey',\n      responseHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n  captcha: {\n    customRequestHandling: {\n      insertHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n  count: {\n    customRequestHandling: {\n      insertHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 10,
        "75": 27,
        "153": 2,
        "169": 1,
        "192": 4,
        "193": 13,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 22,
        "290": 1
      },
      "fqnsFingerprint": "0e6392855485519d27c93cfd2a95b81e2e9fcc7a59b9490e9c4445076453cc20"
    },
    "9aba83a3c45ad8fa2469e1d54bf2d70d193e9769e43d74970e6315034c1a85ef": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nrule_group_reference_statement_property = wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n    arn=\"arn\",\n\n    # the properties below are optional\n    excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n        name=\"name\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nRuleGroupReferenceStatementProperty ruleGroupReferenceStatementProperty = new RuleGroupReferenceStatementProperty {\n    Arn = \"arn\",\n\n    // the properties below are optional\n    ExcludedRules = new [] { new ExcludedRuleProperty {\n        Name = \"name\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nRuleGroupReferenceStatementProperty ruleGroupReferenceStatementProperty = RuleGroupReferenceStatementProperty.builder()\n        .arn(\"arn\")\n\n        // the properties below are optional\n        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                .name(\"name\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nruleGroupReferenceStatementProperty := &ruleGroupReferenceStatementProperty{\n\tarn: jsii.String(\"arn\"),\n\n\t// the properties below are optional\n\texcludedRules: []interface{}{\n\t\t&excludedRuleProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst ruleGroupReferenceStatementProperty: wafv2.CfnWebACL.RuleGroupReferenceStatementProperty = {\n  arn: 'arn',\n\n  // the properties below are optional\n  excludedRules: [{\n    name: 'name',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RuleGroupReferenceStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.RuleGroupReferenceStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ruleGroupReferenceStatementProperty: wafv2.CfnWebACL.RuleGroupReferenceStatementProperty = {\n  arn: 'arn',\n\n  // the properties below are optional\n  excludedRules: [{\n    name: 'name',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "f9f5f91d8dd6c26d58b3dabec382ee692b971508640355c0d48572b2ee79c390"
    },
    "1b808d0682e45a5743df2ff372b5c5b6fc003031bb2840bffce87b752fded469": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# count: Any\n# method: Any\n# none: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnWebACL.StatementProperty\n# uri_path: Any\n\nrule_property = wafv2.CfnWebACL.RuleProperty(\n    name=\"name\",\n    priority=123,\n    statement=wafv2.CfnWebACL.StatementProperty(\n        and_statement=wafv2.CfnWebACL.AndStatementProperty(\n            statements=[statement_property_]\n        ),\n        byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            positional_constraint=\"positionalConstraint\",\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            search_string=\"searchString\",\n            search_string_base64=\"searchStringBase64\"\n        ),\n        geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n            country_codes=[\"countryCodes\"],\n            forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            )\n        ),\n        ip_set_reference_statement={\n            \"arn\": \"arn\",\n\n            # the properties below are optional\n            \"ip_set_forwarded_ip_config\": {\n                \"fallback_behavior\": \"fallbackBehavior\",\n                \"header_name\": \"headerName\",\n                \"position\": \"position\"\n            }\n        },\n        label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n            key=\"key\",\n            scope=\"scope\"\n        ),\n        managed_rule_group_statement=wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n            name=\"name\",\n            vendor_name=\"vendorName\",\n\n            # the properties below are optional\n            excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                name=\"name\"\n            )],\n            managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n                login_path=\"loginPath\",\n                password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                    identifier=\"identifier\"\n                ),\n                payload_type=\"payloadType\",\n                username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                    identifier=\"identifier\"\n                )\n            )],\n            scope_down_statement=statement_property_,\n            version=\"version\"\n        ),\n        not_statement=wafv2.CfnWebACL.NotStatementProperty(\n            statement=statement_property_\n        ),\n        or_statement=wafv2.CfnWebACL.OrStatementProperty(\n            statements=[statement_property_]\n        ),\n        rate_based_statement=wafv2.CfnWebACL.RateBasedStatementProperty(\n            aggregate_key_type=\"aggregateKeyType\",\n            limit=123,\n\n            # the properties below are optional\n            forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                fallback_behavior=\"fallbackBehavior\",\n                header_name=\"headerName\"\n            ),\n            scope_down_statement=statement_property_\n        ),\n        regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            regex_string=\"regexString\",\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n            arn=\"arn\",\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n            arn=\"arn\",\n\n            # the properties below are optional\n            excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                name=\"name\"\n            )]\n        ),\n        size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n            comparison_operator=\"comparisonOperator\",\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            size=123,\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        ),\n        sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )],\n\n            # the properties below are optional\n            sensitivity_level=\"sensitivityLevel\"\n        ),\n        xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n            field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                all_query_arguments=all_query_arguments,\n                body=wafv2.CfnWebACL.BodyProperty(\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                cookies=wafv2.CfnWebACL.CookiesProperty(\n                    match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                        all=all,\n                        excluded_cookies=[\"excludedCookies\"],\n                        included_cookies=[\"includedCookies\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                headers=wafv2.CfnWebACL.HeadersProperty(\n                    match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                        all=all,\n                        excluded_headers=[\"excludedHeaders\"],\n                        included_headers=[\"includedHeaders\"]\n                    ),\n                    match_scope=\"matchScope\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                    match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                        all=all,\n                        included_paths=[\"includedPaths\"]\n                    ),\n                    match_scope=\"matchScope\",\n\n                    # the properties below are optional\n                    invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                    oversize_handling=\"oversizeHandling\"\n                ),\n                method=method,\n                query_string=query_string,\n                single_header=single_header,\n                single_query_argument=single_query_argument,\n                uri_path=uri_path\n            ),\n            text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                priority=123,\n                type=\"type\"\n            )]\n        )\n    ),\n    visibility_config=wafv2.CfnWebACL.VisibilityConfigProperty(\n        cloud_watch_metrics_enabled=False,\n        metric_name=\"metricName\",\n        sampled_requests_enabled=False\n    ),\n\n    # the properties below are optional\n    action=wafv2.CfnWebACL.RuleActionProperty(\n        allow=wafv2.CfnWebACL.AllowActionProperty(\n            custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n                insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            )\n        ),\n        block=wafv2.CfnWebACL.BlockActionProperty(\n            custom_response=wafv2.CfnWebACL.CustomResponseProperty(\n                response_code=123,\n\n                # the properties below are optional\n                custom_response_body_key=\"customResponseBodyKey\",\n                response_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            )\n        ),\n        captcha=wafv2.CfnWebACL.CaptchaActionProperty(\n            custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n                insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            )\n        ),\n        count=wafv2.CfnWebACL.CountActionProperty(\n            custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n                insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            )\n        )\n    ),\n    captcha_config=wafv2.CfnWebACL.CaptchaConfigProperty(\n        immunity_time_property=wafv2.CfnWebACL.ImmunityTimePropertyProperty(\n            immunity_time=123\n        )\n    ),\n    override_action=wafv2.CfnWebACL.OverrideActionProperty(\n        count=count,\n        none=none\n    ),\n    rule_labels=[wafv2.CfnWebACL.LabelProperty(\n        name=\"name\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar count;\nvar method;\nvar none;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nRuleProperty ruleProperty = new RuleProperty {\n    Name = \"name\",\n    Priority = 123,\n    Statement = new StatementProperty {\n        AndStatement = new AndStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        ByteMatchStatement = new ByteMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            PositionalConstraint = \"positionalConstraint\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SearchString = \"searchString\",\n            SearchStringBase64 = \"searchStringBase64\"\n        },\n        GeoMatchStatement = new GeoMatchStatementProperty {\n            CountryCodes = new [] { \"countryCodes\" },\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            }\n        },\n        IpSetReferenceStatement = new Dictionary<string, object> {\n            { \"arn\", \"arn\" },\n\n            // the properties below are optional\n            { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                { \"fallbackBehavior\", \"fallbackBehavior\" },\n                { \"headerName\", \"headerName\" },\n                { \"position\", \"position\" }\n            } }\n        },\n        LabelMatchStatement = new LabelMatchStatementProperty {\n            Key = \"key\",\n            Scope = \"scope\"\n        },\n        ManagedRuleGroupStatement = new ManagedRuleGroupStatementProperty {\n            Name = \"name\",\n            VendorName = \"vendorName\",\n\n            // the properties below are optional\n            ExcludedRules = new [] { new ExcludedRuleProperty {\n                Name = \"name\"\n            } },\n            ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n                LoginPath = \"loginPath\",\n                PasswordField = new FieldIdentifierProperty {\n                    Identifier = \"identifier\"\n                },\n                PayloadType = \"payloadType\",\n                UsernameField = new FieldIdentifierProperty {\n                    Identifier = \"identifier\"\n                }\n            } },\n            ScopeDownStatement = statementProperty_,\n            Version = \"version\"\n        },\n        NotStatement = new NotStatementProperty {\n            Statement = statementProperty_\n        },\n        OrStatement = new OrStatementProperty {\n            Statements = new [] { statementProperty_ }\n        },\n        RateBasedStatement = new RateBasedStatementProperty {\n            AggregateKeyType = \"aggregateKeyType\",\n            Limit = 123,\n\n            // the properties below are optional\n            ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                FallbackBehavior = \"fallbackBehavior\",\n                HeaderName = \"headerName\"\n            },\n            ScopeDownStatement = statementProperty_\n        },\n        RegexMatchStatement = new RegexMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            RegexString = \"regexString\",\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n            Arn = \"arn\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n            Arn = \"arn\",\n\n            // the properties below are optional\n            ExcludedRules = new [] { new ExcludedRuleProperty {\n                Name = \"name\"\n            } }\n        },\n        SizeConstraintStatement = new SizeConstraintStatementProperty {\n            ComparisonOperator = \"comparisonOperator\",\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            Size = 123,\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        },\n        SqliMatchStatement = new SqliMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } },\n\n            // the properties below are optional\n            SensitivityLevel = \"sensitivityLevel\"\n        },\n        XssMatchStatement = new XssMatchStatementProperty {\n            FieldToMatch = new FieldToMatchProperty {\n                AllQueryArguments = allQueryArguments,\n                Body = new BodyProperty {\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Cookies = new CookiesProperty {\n                    MatchPattern = new CookieMatchPatternProperty {\n                        All = all,\n                        ExcludedCookies = new [] { \"excludedCookies\" },\n                        IncludedCookies = new [] { \"includedCookies\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Headers = new HeadersProperty {\n                    MatchPattern = new HeaderMatchPatternProperty {\n                        All = all,\n                        ExcludedHeaders = new [] { \"excludedHeaders\" },\n                        IncludedHeaders = new [] { \"includedHeaders\" }\n                    },\n                    MatchScope = \"matchScope\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                JsonBody = new JsonBodyProperty {\n                    MatchPattern = new JsonMatchPatternProperty {\n                        All = all,\n                        IncludedPaths = new [] { \"includedPaths\" }\n                    },\n                    MatchScope = \"matchScope\",\n\n                    // the properties below are optional\n                    InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                    OversizeHandling = \"oversizeHandling\"\n                },\n                Method = method,\n                QueryString = queryString,\n                SingleHeader = singleHeader,\n                SingleQueryArgument = singleQueryArgument,\n                UriPath = uriPath\n            },\n            TextTransformations = new [] { new TextTransformationProperty {\n                Priority = 123,\n                Type = \"type\"\n            } }\n        }\n    },\n    VisibilityConfig = new VisibilityConfigProperty {\n        CloudWatchMetricsEnabled = false,\n        MetricName = \"metricName\",\n        SampledRequestsEnabled = false\n    },\n\n    // the properties below are optional\n    Action = new RuleActionProperty {\n        Allow = new AllowActionProperty {\n            CustomRequestHandling = new CustomRequestHandlingProperty {\n                InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            }\n        },\n        Block = new BlockActionProperty {\n            CustomResponse = new CustomResponseProperty {\n                ResponseCode = 123,\n\n                // the properties below are optional\n                CustomResponseBodyKey = \"customResponseBodyKey\",\n                ResponseHeaders = new [] { new CustomHTTPHeaderProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            }\n        },\n        Captcha = new CaptchaActionProperty {\n            CustomRequestHandling = new CustomRequestHandlingProperty {\n                InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            }\n        },\n        Count = new CountActionProperty {\n            CustomRequestHandling = new CustomRequestHandlingProperty {\n                InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            }\n        }\n    },\n    CaptchaConfig = new CaptchaConfigProperty {\n        ImmunityTimeProperty = new ImmunityTimePropertyProperty {\n            ImmunityTime = 123\n        }\n    },\n    OverrideAction = new OverrideActionProperty {\n        Count = count,\n        None = none\n    },\n    RuleLabels = new [] { new LabelProperty {\n        Name = \"name\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject count;\nObject method;\nObject none;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nRuleProperty ruleProperty = RuleProperty.builder()\n        .name(\"name\")\n        .priority(123)\n        .statement(StatementProperty.builder()\n                .andStatement(AndStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .byteMatchStatement(ByteMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .positionalConstraint(\"positionalConstraint\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .searchString(\"searchString\")\n                        .searchStringBase64(\"searchStringBase64\")\n                        .build())\n                .geoMatchStatement(GeoMatchStatementProperty.builder()\n                        .countryCodes(List.of(\"countryCodes\"))\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .build())\n                .ipSetReferenceStatement(Map.of(\n                        \"arn\", \"arn\",\n\n                        // the properties below are optional\n                        \"ipSetForwardedIpConfig\", Map.of(\n                                \"fallbackBehavior\", \"fallbackBehavior\",\n                                \"headerName\", \"headerName\",\n                                \"position\", \"position\")))\n                .labelMatchStatement(LabelMatchStatementProperty.builder()\n                        .key(\"key\")\n                        .scope(\"scope\")\n                        .build())\n                .managedRuleGroupStatement(ManagedRuleGroupStatementProperty.builder()\n                        .name(\"name\")\n                        .vendorName(\"vendorName\")\n\n                        // the properties below are optional\n                        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                                .loginPath(\"loginPath\")\n                                .passwordField(FieldIdentifierProperty.builder()\n                                        .identifier(\"identifier\")\n                                        .build())\n                                .payloadType(\"payloadType\")\n                                .usernameField(FieldIdentifierProperty.builder()\n                                        .identifier(\"identifier\")\n                                        .build())\n                                .build()))\n                        .scopeDownStatement(statementProperty_)\n                        .version(\"version\")\n                        .build())\n                .notStatement(NotStatementProperty.builder()\n                        .statement(statementProperty_)\n                        .build())\n                .orStatement(OrStatementProperty.builder()\n                        .statements(List.of(statementProperty_))\n                        .build())\n                .rateBasedStatement(RateBasedStatementProperty.builder()\n                        .aggregateKeyType(\"aggregateKeyType\")\n                        .limit(123)\n\n                        // the properties below are optional\n                        .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                .fallbackBehavior(\"fallbackBehavior\")\n                                .headerName(\"headerName\")\n                                .build())\n                        .scopeDownStatement(statementProperty_)\n                        .build())\n                .regexMatchStatement(RegexMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .regexString(\"regexString\")\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                        .arn(\"arn\")\n\n                        // the properties below are optional\n                        .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .build())\n                .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                        .comparisonOperator(\"comparisonOperator\")\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .size(123)\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n\n                        // the properties below are optional\n                        .sensitivityLevel(\"sensitivityLevel\")\n                        .build())\n                .xssMatchStatement(XssMatchStatementProperty.builder()\n                        .fieldToMatch(FieldToMatchProperty.builder()\n                                .allQueryArguments(allQueryArguments)\n                                .body(BodyProperty.builder()\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .cookies(CookiesProperty.builder()\n                                        .matchPattern(CookieMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedCookies(List.of(\"excludedCookies\"))\n                                                .includedCookies(List.of(\"includedCookies\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .headers(HeadersProperty.builder()\n                                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                                .all(all)\n                                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                .includedHeaders(List.of(\"includedHeaders\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .jsonBody(JsonBodyProperty.builder()\n                                        .matchPattern(JsonMatchPatternProperty.builder()\n                                                .all(all)\n                                                .includedPaths(List.of(\"includedPaths\"))\n                                                .build())\n                                        .matchScope(\"matchScope\")\n\n                                        // the properties below are optional\n                                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                        .oversizeHandling(\"oversizeHandling\")\n                                        .build())\n                                .method(method)\n                                .queryString(queryString)\n                                .singleHeader(singleHeader)\n                                .singleQueryArgument(singleQueryArgument)\n                                .uriPath(uriPath)\n                                .build())\n                        .textTransformations(List.of(TextTransformationProperty.builder()\n                                .priority(123)\n                                .type(\"type\")\n                                .build()))\n                        .build())\n                .build())\n        .visibilityConfig(VisibilityConfigProperty.builder()\n                .cloudWatchMetricsEnabled(false)\n                .metricName(\"metricName\")\n                .sampledRequestsEnabled(false)\n                .build())\n\n        // the properties below are optional\n        .action(RuleActionProperty.builder()\n                .allow(AllowActionProperty.builder()\n                        .customRequestHandling(CustomRequestHandlingProperty.builder()\n                                .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build())\n                .block(BlockActionProperty.builder()\n                        .customResponse(CustomResponseProperty.builder()\n                                .responseCode(123)\n\n                                // the properties below are optional\n                                .customResponseBodyKey(\"customResponseBodyKey\")\n                                .responseHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build())\n                .captcha(CaptchaActionProperty.builder()\n                        .customRequestHandling(CustomRequestHandlingProperty.builder()\n                                .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build())\n                .count(CountActionProperty.builder()\n                        .customRequestHandling(CustomRequestHandlingProperty.builder()\n                                .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build())\n                .build())\n        .captchaConfig(CaptchaConfigProperty.builder()\n                .immunityTimeProperty(ImmunityTimePropertyProperty.builder()\n                        .immunityTime(123)\n                        .build())\n                .build())\n        .overrideAction(OverrideActionProperty.builder()\n                .count(count)\n                .none(none)\n                .build())\n        .ruleLabels(List.of(LabelProperty.builder()\n                .name(\"name\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar count interface{}\nvar method interface{}\nvar none interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\nruleProperty := &ruleProperty{\n\tname: jsii.String(\"name\"),\n\tpriority: jsii.Number(123),\n\tstatement: &statementProperty{\n\t\tandStatement: &andStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t},\n\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\tcountryCodes: []*string{\n\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t},\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t},\n\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t// the properties below are optional\n\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t},\n\t\t},\n\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tscope: jsii.String(\"scope\"),\n\t\t},\n\t\tmanagedRuleGroupStatement: &managedRuleGroupStatementProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tvendorName: jsii.String(\"vendorName\"),\n\n\t\t\t// the properties below are optional\n\t\t\texcludedRules: []interface{}{\n\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmanagedRuleGroupConfigs: []interface{}{\n\t\t\t\t&managedRuleGroupConfigProperty{\n\t\t\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t},\n\t\t\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tscopeDownStatement: statementProperty_,\n\t\t\tversion: jsii.String(\"version\"),\n\t\t},\n\t\tnotStatement: &notStatementProperty{\n\t\t\tstatement: statementProperty_,\n\t\t},\n\t\torStatement: &orStatementProperty{\n\t\t\tstatements: []interface{}{\n\t\t\t\tstatementProperty_,\n\t\t\t},\n\t\t},\n\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\tlimit: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t},\n\t\t\tscopeDownStatement: statementProperty_,\n\t\t},\n\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\tarn: jsii.String(\"arn\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t// the properties below are optional\n\t\t\texcludedRules: []interface{}{\n\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\tsize: jsii.Number(123),\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t},\n\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\theaders: &headersProperty{\n\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\tall: all,\n\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t},\n\t\t\t\tmethod: method,\n\t\t\t\tqueryString: queryString,\n\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\turiPath: uriPath,\n\t\t\t},\n\t\t\ttextTransformations: []interface{}{\n\t\t\t\t&textTransformationProperty{\n\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tvisibilityConfig: &visibilityConfigProperty{\n\t\tcloudWatchMetricsEnabled: jsii.Boolean(false),\n\t\tmetricName: jsii.String(\"metricName\"),\n\t\tsampledRequestsEnabled: jsii.Boolean(false),\n\t},\n\n\t// the properties below are optional\n\taction: &ruleActionProperty{\n\t\tallow: &allowActionProperty{\n\t\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tblock: &blockActionProperty{\n\t\t\tcustomResponse: &customResponseProperty{\n\t\t\t\tresponseCode: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcustomResponseBodyKey: jsii.String(\"customResponseBodyKey\"),\n\t\t\t\tresponseHeaders: []interface{}{\n\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tcaptcha: &captchaActionProperty{\n\t\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tcount: &countActionProperty{\n\t\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tcaptchaConfig: &captchaConfigProperty{\n\t\timmunityTimeProperty: &immunityTimePropertyProperty{\n\t\t\timmunityTime: jsii.Number(123),\n\t\t},\n\t},\n\toverrideAction: &overrideActionProperty{\n\t\tcount: count,\n\t\tnone: none,\n\t},\n\truleLabels: []interface{}{\n\t\t&labelProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const none: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst ruleProperty: wafv2.CfnWebACL.RuleProperty = {\n  name: 'name',\n  priority: 123,\n  statement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  action: {\n    allow: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    block: {\n      customResponse: {\n        responseCode: 123,\n\n        // the properties below are optional\n        customResponseBodyKey: 'customResponseBodyKey',\n        responseHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    captcha: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    count: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  captchaConfig: {\n    immunityTimeProperty: {\n      immunityTime: 123,\n    },\n  },\n  overrideAction: {\n    count: count,\n    none: none,\n  },\n  ruleLabels: [{\n    name: 'name',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.RuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const none: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ruleProperty: wafv2.CfnWebACL.RuleProperty = {\n  name: 'name',\n  priority: 123,\n  statement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  action: {\n    allow: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    block: {\n      customResponse: {\n        responseCode: 123,\n\n        // the properties below are optional\n        customResponseBodyKey: 'customResponseBodyKey',\n        responseHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    captcha: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    count: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  captchaConfig: {\n    immunityTimeProperty: {\n      immunityTime: 123,\n    },\n  },\n  overrideAction: {\n    count: count,\n    none: none,\n  },\n  ruleLabels: [{\n    name: 'name',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 11,
        "10": 126,
        "75": 374,
        "91": 2,
        "125": 9,
        "130": 10,
        "153": 4,
        "169": 2,
        "192": 47,
        "193": 97,
        "225": 11,
        "242": 11,
        "243": 11,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 295,
        "290": 1
      },
      "fqnsFingerprint": "1349faea2534a2f2580fcd89cc3672cf6bbaa7a5ffe2b0c545318e18accba56d"
    },
    "a6e3493d7942650719cbccb790bbda5c61c7aaea1608295f19982bf212961d2f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nsize_constraint_statement_property = wafv2.CfnWebACL.SizeConstraintStatementProperty(\n    comparison_operator=\"comparisonOperator\",\n    field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n        all_query_arguments=all_query_arguments,\n        body=wafv2.CfnWebACL.BodyProperty(\n            oversize_handling=\"oversizeHandling\"\n        ),\n        cookies=wafv2.CfnWebACL.CookiesProperty(\n            match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                all=all,\n                excluded_cookies=[\"excludedCookies\"],\n                included_cookies=[\"includedCookies\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        headers=wafv2.CfnWebACL.HeadersProperty(\n            match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                all=all,\n                excluded_headers=[\"excludedHeaders\"],\n                included_headers=[\"includedHeaders\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        json_body=wafv2.CfnWebACL.JsonBodyProperty(\n            match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                all=all,\n                included_paths=[\"includedPaths\"]\n            ),\n            match_scope=\"matchScope\",\n\n            # the properties below are optional\n            invalid_fallback_behavior=\"invalidFallbackBehavior\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        single_query_argument=single_query_argument,\n        uri_path=uri_path\n    ),\n    size=123,\n    text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n        priority=123,\n        type=\"type\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nSizeConstraintStatementProperty sizeConstraintStatementProperty = new SizeConstraintStatementProperty {\n    ComparisonOperator = \"comparisonOperator\",\n    FieldToMatch = new FieldToMatchProperty {\n        AllQueryArguments = allQueryArguments,\n        Body = new BodyProperty {\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Cookies = new CookiesProperty {\n            MatchPattern = new CookieMatchPatternProperty {\n                All = all,\n                ExcludedCookies = new [] { \"excludedCookies\" },\n                IncludedCookies = new [] { \"includedCookies\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Headers = new HeadersProperty {\n            MatchPattern = new HeaderMatchPatternProperty {\n                All = all,\n                ExcludedHeaders = new [] { \"excludedHeaders\" },\n                IncludedHeaders = new [] { \"includedHeaders\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        JsonBody = new JsonBodyProperty {\n            MatchPattern = new JsonMatchPatternProperty {\n                All = all,\n                IncludedPaths = new [] { \"includedPaths\" }\n            },\n            MatchScope = \"matchScope\",\n\n            // the properties below are optional\n            InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        SingleQueryArgument = singleQueryArgument,\n        UriPath = uriPath\n    },\n    Size = 123,\n    TextTransformations = new [] { new TextTransformationProperty {\n        Priority = 123,\n        Type = \"type\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nSizeConstraintStatementProperty sizeConstraintStatementProperty = SizeConstraintStatementProperty.builder()\n        .comparisonOperator(\"comparisonOperator\")\n        .fieldToMatch(FieldToMatchProperty.builder()\n                .allQueryArguments(allQueryArguments)\n                .body(BodyProperty.builder()\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .cookies(CookiesProperty.builder()\n                        .matchPattern(CookieMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedCookies(List.of(\"excludedCookies\"))\n                                .includedCookies(List.of(\"includedCookies\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .headers(HeadersProperty.builder()\n                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                .includedHeaders(List.of(\"includedHeaders\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .jsonBody(JsonBodyProperty.builder()\n                        .matchPattern(JsonMatchPatternProperty.builder()\n                                .all(all)\n                                .includedPaths(List.of(\"includedPaths\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n\n                        // the properties below are optional\n                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .singleQueryArgument(singleQueryArgument)\n                .uriPath(uriPath)\n                .build())\n        .size(123)\n        .textTransformations(List.of(TextTransformationProperty.builder()\n                .priority(123)\n                .type(\"type\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nsizeConstraintStatementProperty := &sizeConstraintStatementProperty{\n\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\tfieldToMatch: &fieldToMatchProperty{\n\t\tallQueryArguments: allQueryArguments,\n\t\tbody: &bodyProperty{\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tcookies: &cookiesProperty{\n\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t},\n\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\theaders: &headersProperty{\n\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t},\n\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tjsonBody: &jsonBodyProperty{\n\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tmethod: method,\n\t\tqueryString: queryString,\n\t\tsingleHeader: singleHeader,\n\t\tsingleQueryArgument: singleQueryArgument,\n\t\turiPath: uriPath,\n\t},\n\tsize: jsii.Number(123),\n\ttextTransformations: []interface{}{\n\t\t&textTransformationProperty{\n\t\t\tpriority: jsii.Number(123),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst sizeConstraintStatementProperty: wafv2.CfnWebACL.SizeConstraintStatementProperty = {\n  comparisonOperator: 'comparisonOperator',\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  size: 123,\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.SizeConstraintStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.SizeConstraintStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sizeConstraintStatementProperty: wafv2.CfnWebACL.SizeConstraintStatementProperty = {\n  comparisonOperator: 'comparisonOperator',\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  size: 123,\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 16,
        "75": 56,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 10,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 35,
        "290": 1
      },
      "fqnsFingerprint": "63a1e6ef91da3a09ae853dcfb7c5472aaa2c5043a1c9a543e15b4a673603dbf6"
    },
    "fa9790d714dfbf31d963467a6aed71cbb89ea834a8d76925867cbf7363d5c2bf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nsqli_match_statement_property = wafv2.CfnWebACL.SqliMatchStatementProperty(\n    field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n        all_query_arguments=all_query_arguments,\n        body=wafv2.CfnWebACL.BodyProperty(\n            oversize_handling=\"oversizeHandling\"\n        ),\n        cookies=wafv2.CfnWebACL.CookiesProperty(\n            match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                all=all,\n                excluded_cookies=[\"excludedCookies\"],\n                included_cookies=[\"includedCookies\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        headers=wafv2.CfnWebACL.HeadersProperty(\n            match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                all=all,\n                excluded_headers=[\"excludedHeaders\"],\n                included_headers=[\"includedHeaders\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        json_body=wafv2.CfnWebACL.JsonBodyProperty(\n            match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                all=all,\n                included_paths=[\"includedPaths\"]\n            ),\n            match_scope=\"matchScope\",\n\n            # the properties below are optional\n            invalid_fallback_behavior=\"invalidFallbackBehavior\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        single_query_argument=single_query_argument,\n        uri_path=uri_path\n    ),\n    text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n        priority=123,\n        type=\"type\"\n    )],\n\n    # the properties below are optional\n    sensitivity_level=\"sensitivityLevel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nSqliMatchStatementProperty sqliMatchStatementProperty = new SqliMatchStatementProperty {\n    FieldToMatch = new FieldToMatchProperty {\n        AllQueryArguments = allQueryArguments,\n        Body = new BodyProperty {\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Cookies = new CookiesProperty {\n            MatchPattern = new CookieMatchPatternProperty {\n                All = all,\n                ExcludedCookies = new [] { \"excludedCookies\" },\n                IncludedCookies = new [] { \"includedCookies\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Headers = new HeadersProperty {\n            MatchPattern = new HeaderMatchPatternProperty {\n                All = all,\n                ExcludedHeaders = new [] { \"excludedHeaders\" },\n                IncludedHeaders = new [] { \"includedHeaders\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        JsonBody = new JsonBodyProperty {\n            MatchPattern = new JsonMatchPatternProperty {\n                All = all,\n                IncludedPaths = new [] { \"includedPaths\" }\n            },\n            MatchScope = \"matchScope\",\n\n            // the properties below are optional\n            InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        SingleQueryArgument = singleQueryArgument,\n        UriPath = uriPath\n    },\n    TextTransformations = new [] { new TextTransformationProperty {\n        Priority = 123,\n        Type = \"type\"\n    } },\n\n    // the properties below are optional\n    SensitivityLevel = \"sensitivityLevel\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nSqliMatchStatementProperty sqliMatchStatementProperty = SqliMatchStatementProperty.builder()\n        .fieldToMatch(FieldToMatchProperty.builder()\n                .allQueryArguments(allQueryArguments)\n                .body(BodyProperty.builder()\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .cookies(CookiesProperty.builder()\n                        .matchPattern(CookieMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedCookies(List.of(\"excludedCookies\"))\n                                .includedCookies(List.of(\"includedCookies\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .headers(HeadersProperty.builder()\n                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                .includedHeaders(List.of(\"includedHeaders\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .jsonBody(JsonBodyProperty.builder()\n                        .matchPattern(JsonMatchPatternProperty.builder()\n                                .all(all)\n                                .includedPaths(List.of(\"includedPaths\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n\n                        // the properties below are optional\n                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .singleQueryArgument(singleQueryArgument)\n                .uriPath(uriPath)\n                .build())\n        .textTransformations(List.of(TextTransformationProperty.builder()\n                .priority(123)\n                .type(\"type\")\n                .build()))\n\n        // the properties below are optional\n        .sensitivityLevel(\"sensitivityLevel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nsqliMatchStatementProperty := &sqliMatchStatementProperty{\n\tfieldToMatch: &fieldToMatchProperty{\n\t\tallQueryArguments: allQueryArguments,\n\t\tbody: &bodyProperty{\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tcookies: &cookiesProperty{\n\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t},\n\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\theaders: &headersProperty{\n\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t},\n\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tjsonBody: &jsonBodyProperty{\n\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tmethod: method,\n\t\tqueryString: queryString,\n\t\tsingleHeader: singleHeader,\n\t\tsingleQueryArgument: singleQueryArgument,\n\t\turiPath: uriPath,\n\t},\n\ttextTransformations: []interface{}{\n\t\t&textTransformationProperty{\n\t\t\tpriority: jsii.Number(123),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst sqliMatchStatementProperty: wafv2.CfnWebACL.SqliMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n\n  // the properties below are optional\n  sensitivityLevel: 'sensitivityLevel',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.SqliMatchStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.SqliMatchStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sqliMatchStatementProperty: wafv2.CfnWebACL.SqliMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n\n  // the properties below are optional\n  sensitivityLevel: 'sensitivityLevel',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 16,
        "75": 55,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 10,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 34,
        "290": 1
      },
      "fqnsFingerprint": "bebbb352f60ab26e3fa1aa05d64234c9bfbe13c0c964a682859a83cf313b1b25"
    },
    "5a1ce51e1e48deb7f0d6042c0f5904eed60e4302db51ad4c0315705c3bd8d0cd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# and_statement_property_: wafv2.CfnWebACL.AndStatementProperty\n# managed_rule_group_statement_property_: wafv2.CfnWebACL.ManagedRuleGroupStatementProperty\n# method: Any\n# not_statement_property_: wafv2.CfnWebACL.NotStatementProperty\n# or_statement_property_: wafv2.CfnWebACL.OrStatementProperty\n# query_string: Any\n# rate_based_statement_property_: wafv2.CfnWebACL.RateBasedStatementProperty\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnWebACL.StatementProperty\n# uri_path: Any\n\nstatement_property = wafv2.CfnWebACL.StatementProperty(\n    and_statement=wafv2.CfnWebACL.AndStatementProperty(\n        statements=[wafv2.CfnWebACL.StatementProperty(\n            and_statement=and_statement_property_,\n            byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                positional_constraint=\"positionalConstraint\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                search_string=\"searchString\",\n                search_string_base64=\"searchStringBase64\"\n            ),\n            geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n                country_codes=[\"countryCodes\"],\n                forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                )\n            ),\n            ip_set_reference_statement={\n                \"arn\": \"arn\",\n\n                # the properties below are optional\n                \"ip_set_forwarded_ip_config\": {\n                    \"fallback_behavior\": \"fallbackBehavior\",\n                    \"header_name\": \"headerName\",\n                    \"position\": \"position\"\n                }\n            },\n            label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n                key=\"key\",\n                scope=\"scope\"\n            ),\n            managed_rule_group_statement=wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n                name=\"name\",\n                vendor_name=\"vendorName\",\n\n                # the properties below are optional\n                excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                    name=\"name\"\n                )],\n                managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n                    login_path=\"loginPath\",\n                    password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                        identifier=\"identifier\"\n                    ),\n                    payload_type=\"payloadType\",\n                    username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                        identifier=\"identifier\"\n                    )\n                )],\n                scope_down_statement=statement_property_,\n                version=\"version\"\n            ),\n            not_statement=wafv2.CfnWebACL.NotStatementProperty(\n                statement=statement_property_\n            ),\n            or_statement=wafv2.CfnWebACL.OrStatementProperty(\n                statements=[statement_property_]\n            ),\n            rate_based_statement=wafv2.CfnWebACL.RateBasedStatementProperty(\n                aggregate_key_type=\"aggregateKeyType\",\n                limit=123,\n\n                # the properties below are optional\n                forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                ),\n                scope_down_statement=statement_property_\n            ),\n            regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                regex_string=\"regexString\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n                arn=\"arn\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n                arn=\"arn\",\n\n                # the properties below are optional\n                excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                    name=\"name\"\n                )]\n            ),\n            size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n                comparison_operator=\"comparisonOperator\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                size=123,\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                sensitivity_level=\"sensitivityLevel\"\n            ),\n            xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            )\n        )]\n    ),\n    byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n        field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n            all_query_arguments=all_query_arguments,\n            body=wafv2.CfnWebACL.BodyProperty(\n                oversize_handling=\"oversizeHandling\"\n            ),\n            cookies=wafv2.CfnWebACL.CookiesProperty(\n                match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                    all=all,\n                    excluded_cookies=[\"excludedCookies\"],\n                    included_cookies=[\"includedCookies\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            headers=wafv2.CfnWebACL.HeadersProperty(\n                match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                    all=all,\n                    excluded_headers=[\"excludedHeaders\"],\n                    included_headers=[\"includedHeaders\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                    all=all,\n                    included_paths=[\"includedPaths\"]\n                ),\n                match_scope=\"matchScope\",\n\n                # the properties below are optional\n                invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            method=method,\n            query_string=query_string,\n            single_header=single_header,\n            single_query_argument=single_query_argument,\n            uri_path=uri_path\n        ),\n        positional_constraint=\"positionalConstraint\",\n        text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n            priority=123,\n            type=\"type\"\n        )],\n\n        # the properties below are optional\n        search_string=\"searchString\",\n        search_string_base64=\"searchStringBase64\"\n    ),\n    geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n        country_codes=[\"countryCodes\"],\n        forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n            fallback_behavior=\"fallbackBehavior\",\n            header_name=\"headerName\"\n        )\n    ),\n    ip_set_reference_statement={\n        \"arn\": \"arn\",\n\n        # the properties below are optional\n        \"ip_set_forwarded_ip_config\": {\n            \"fallback_behavior\": \"fallbackBehavior\",\n            \"header_name\": \"headerName\",\n            \"position\": \"position\"\n        }\n    },\n    label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n        key=\"key\",\n        scope=\"scope\"\n    ),\n    managed_rule_group_statement=wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n        name=\"name\",\n        vendor_name=\"vendorName\",\n\n        # the properties below are optional\n        excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n            name=\"name\"\n        )],\n        managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n            login_path=\"loginPath\",\n            password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                identifier=\"identifier\"\n            ),\n            payload_type=\"payloadType\",\n            username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                identifier=\"identifier\"\n            )\n        )],\n        scope_down_statement=wafv2.CfnWebACL.StatementProperty(\n            and_statement=wafv2.CfnWebACL.AndStatementProperty(\n                statements=[statement_property_]\n            ),\n            byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                positional_constraint=\"positionalConstraint\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                search_string=\"searchString\",\n                search_string_base64=\"searchStringBase64\"\n            ),\n            geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n                country_codes=[\"countryCodes\"],\n                forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                )\n            ),\n            ip_set_reference_statement={\n                \"arn\": \"arn\",\n\n                # the properties below are optional\n                \"ip_set_forwarded_ip_config\": {\n                    \"fallback_behavior\": \"fallbackBehavior\",\n                    \"header_name\": \"headerName\",\n                    \"position\": \"position\"\n                }\n            },\n            label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n                key=\"key\",\n                scope=\"scope\"\n            ),\n            managed_rule_group_statement=managed_rule_group_statement_property_,\n            not_statement=wafv2.CfnWebACL.NotStatementProperty(\n                statement=statement_property_\n            ),\n            or_statement=wafv2.CfnWebACL.OrStatementProperty(\n                statements=[statement_property_]\n            ),\n            rate_based_statement=wafv2.CfnWebACL.RateBasedStatementProperty(\n                aggregate_key_type=\"aggregateKeyType\",\n                limit=123,\n\n                # the properties below are optional\n                forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                ),\n                scope_down_statement=statement_property_\n            ),\n            regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                regex_string=\"regexString\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n                arn=\"arn\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n                arn=\"arn\",\n\n                # the properties below are optional\n                excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                    name=\"name\"\n                )]\n            ),\n            size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n                comparison_operator=\"comparisonOperator\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                size=123,\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                sensitivity_level=\"sensitivityLevel\"\n            ),\n            xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            )\n        ),\n        version=\"version\"\n    ),\n    not_statement=wafv2.CfnWebACL.NotStatementProperty(\n        statement=wafv2.CfnWebACL.StatementProperty(\n            and_statement=wafv2.CfnWebACL.AndStatementProperty(\n                statements=[statement_property_]\n            ),\n            byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                positional_constraint=\"positionalConstraint\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                search_string=\"searchString\",\n                search_string_base64=\"searchStringBase64\"\n            ),\n            geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n                country_codes=[\"countryCodes\"],\n                forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                )\n            ),\n            ip_set_reference_statement={\n                \"arn\": \"arn\",\n\n                # the properties below are optional\n                \"ip_set_forwarded_ip_config\": {\n                    \"fallback_behavior\": \"fallbackBehavior\",\n                    \"header_name\": \"headerName\",\n                    \"position\": \"position\"\n                }\n            },\n            label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n                key=\"key\",\n                scope=\"scope\"\n            ),\n            managed_rule_group_statement=wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n                name=\"name\",\n                vendor_name=\"vendorName\",\n\n                # the properties below are optional\n                excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                    name=\"name\"\n                )],\n                managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n                    login_path=\"loginPath\",\n                    password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                        identifier=\"identifier\"\n                    ),\n                    payload_type=\"payloadType\",\n                    username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                        identifier=\"identifier\"\n                    )\n                )],\n                scope_down_statement=statement_property_,\n                version=\"version\"\n            ),\n            not_statement=not_statement_property_,\n            or_statement=wafv2.CfnWebACL.OrStatementProperty(\n                statements=[statement_property_]\n            ),\n            rate_based_statement=wafv2.CfnWebACL.RateBasedStatementProperty(\n                aggregate_key_type=\"aggregateKeyType\",\n                limit=123,\n\n                # the properties below are optional\n                forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                ),\n                scope_down_statement=statement_property_\n            ),\n            regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                regex_string=\"regexString\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n                arn=\"arn\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n                arn=\"arn\",\n\n                # the properties below are optional\n                excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                    name=\"name\"\n                )]\n            ),\n            size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n                comparison_operator=\"comparisonOperator\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                size=123,\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                sensitivity_level=\"sensitivityLevel\"\n            ),\n            xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            )\n        )\n    ),\n    or_statement=wafv2.CfnWebACL.OrStatementProperty(\n        statements=[wafv2.CfnWebACL.StatementProperty(\n            and_statement=wafv2.CfnWebACL.AndStatementProperty(\n                statements=[statement_property_]\n            ),\n            byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                positional_constraint=\"positionalConstraint\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                search_string=\"searchString\",\n                search_string_base64=\"searchStringBase64\"\n            ),\n            geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n                country_codes=[\"countryCodes\"],\n                forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                )\n            ),\n            ip_set_reference_statement={\n                \"arn\": \"arn\",\n\n                # the properties below are optional\n                \"ip_set_forwarded_ip_config\": {\n                    \"fallback_behavior\": \"fallbackBehavior\",\n                    \"header_name\": \"headerName\",\n                    \"position\": \"position\"\n                }\n            },\n            label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n                key=\"key\",\n                scope=\"scope\"\n            ),\n            managed_rule_group_statement=wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n                name=\"name\",\n                vendor_name=\"vendorName\",\n\n                # the properties below are optional\n                excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                    name=\"name\"\n                )],\n                managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n                    login_path=\"loginPath\",\n                    password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                        identifier=\"identifier\"\n                    ),\n                    payload_type=\"payloadType\",\n                    username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                        identifier=\"identifier\"\n                    )\n                )],\n                scope_down_statement=statement_property_,\n                version=\"version\"\n            ),\n            not_statement=wafv2.CfnWebACL.NotStatementProperty(\n                statement=statement_property_\n            ),\n            or_statement=or_statement_property_,\n            rate_based_statement=wafv2.CfnWebACL.RateBasedStatementProperty(\n                aggregate_key_type=\"aggregateKeyType\",\n                limit=123,\n\n                # the properties below are optional\n                forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                ),\n                scope_down_statement=statement_property_\n            ),\n            regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                regex_string=\"regexString\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n                arn=\"arn\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n                arn=\"arn\",\n\n                # the properties below are optional\n                excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                    name=\"name\"\n                )]\n            ),\n            size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n                comparison_operator=\"comparisonOperator\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                size=123,\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                sensitivity_level=\"sensitivityLevel\"\n            ),\n            xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            )\n        )]\n    ),\n    rate_based_statement=wafv2.CfnWebACL.RateBasedStatementProperty(\n        aggregate_key_type=\"aggregateKeyType\",\n        limit=123,\n\n        # the properties below are optional\n        forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n            fallback_behavior=\"fallbackBehavior\",\n            header_name=\"headerName\"\n        ),\n        scope_down_statement=wafv2.CfnWebACL.StatementProperty(\n            and_statement=wafv2.CfnWebACL.AndStatementProperty(\n                statements=[statement_property_]\n            ),\n            byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                positional_constraint=\"positionalConstraint\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                search_string=\"searchString\",\n                search_string_base64=\"searchStringBase64\"\n            ),\n            geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n                country_codes=[\"countryCodes\"],\n                forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                )\n            ),\n            ip_set_reference_statement={\n                \"arn\": \"arn\",\n\n                # the properties below are optional\n                \"ip_set_forwarded_ip_config\": {\n                    \"fallback_behavior\": \"fallbackBehavior\",\n                    \"header_name\": \"headerName\",\n                    \"position\": \"position\"\n                }\n            },\n            label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n                key=\"key\",\n                scope=\"scope\"\n            ),\n            managed_rule_group_statement=wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n                name=\"name\",\n                vendor_name=\"vendorName\",\n\n                # the properties below are optional\n                excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                    name=\"name\"\n                )],\n                managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n                    login_path=\"loginPath\",\n                    password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                        identifier=\"identifier\"\n                    ),\n                    payload_type=\"payloadType\",\n                    username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                        identifier=\"identifier\"\n                    )\n                )],\n                scope_down_statement=statement_property_,\n                version=\"version\"\n            ),\n            not_statement=wafv2.CfnWebACL.NotStatementProperty(\n                statement=statement_property_\n            ),\n            or_statement=wafv2.CfnWebACL.OrStatementProperty(\n                statements=[statement_property_]\n            ),\n            rate_based_statement=rate_based_statement_property_,\n            regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                regex_string=\"regexString\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n                arn=\"arn\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n                arn=\"arn\",\n\n                # the properties below are optional\n                excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                    name=\"name\"\n                )]\n            ),\n            size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n                comparison_operator=\"comparisonOperator\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                size=123,\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                sensitivity_level=\"sensitivityLevel\"\n            ),\n            xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            )\n        )\n    ),\n    regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n        field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n            all_query_arguments=all_query_arguments,\n            body=wafv2.CfnWebACL.BodyProperty(\n                oversize_handling=\"oversizeHandling\"\n            ),\n            cookies=wafv2.CfnWebACL.CookiesProperty(\n                match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                    all=all,\n                    excluded_cookies=[\"excludedCookies\"],\n                    included_cookies=[\"includedCookies\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            headers=wafv2.CfnWebACL.HeadersProperty(\n                match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                    all=all,\n                    excluded_headers=[\"excludedHeaders\"],\n                    included_headers=[\"includedHeaders\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                    all=all,\n                    included_paths=[\"includedPaths\"]\n                ),\n                match_scope=\"matchScope\",\n\n                # the properties below are optional\n                invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            method=method,\n            query_string=query_string,\n            single_header=single_header,\n            single_query_argument=single_query_argument,\n            uri_path=uri_path\n        ),\n        regex_string=\"regexString\",\n        text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n            priority=123,\n            type=\"type\"\n        )]\n    ),\n    regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n        arn=\"arn\",\n        field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n            all_query_arguments=all_query_arguments,\n            body=wafv2.CfnWebACL.BodyProperty(\n                oversize_handling=\"oversizeHandling\"\n            ),\n            cookies=wafv2.CfnWebACL.CookiesProperty(\n                match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                    all=all,\n                    excluded_cookies=[\"excludedCookies\"],\n                    included_cookies=[\"includedCookies\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            headers=wafv2.CfnWebACL.HeadersProperty(\n                match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                    all=all,\n                    excluded_headers=[\"excludedHeaders\"],\n                    included_headers=[\"includedHeaders\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                    all=all,\n                    included_paths=[\"includedPaths\"]\n                ),\n                match_scope=\"matchScope\",\n\n                # the properties below are optional\n                invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            method=method,\n            query_string=query_string,\n            single_header=single_header,\n            single_query_argument=single_query_argument,\n            uri_path=uri_path\n        ),\n        text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n            priority=123,\n            type=\"type\"\n        )]\n    ),\n    rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n        arn=\"arn\",\n\n        # the properties below are optional\n        excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n            name=\"name\"\n        )]\n    ),\n    size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n        comparison_operator=\"comparisonOperator\",\n        field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n            all_query_arguments=all_query_arguments,\n            body=wafv2.CfnWebACL.BodyProperty(\n                oversize_handling=\"oversizeHandling\"\n            ),\n            cookies=wafv2.CfnWebACL.CookiesProperty(\n                match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                    all=all,\n                    excluded_cookies=[\"excludedCookies\"],\n                    included_cookies=[\"includedCookies\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            headers=wafv2.CfnWebACL.HeadersProperty(\n                match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                    all=all,\n                    excluded_headers=[\"excludedHeaders\"],\n                    included_headers=[\"includedHeaders\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                    all=all,\n                    included_paths=[\"includedPaths\"]\n                ),\n                match_scope=\"matchScope\",\n\n                # the properties below are optional\n                invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            method=method,\n            query_string=query_string,\n            single_header=single_header,\n            single_query_argument=single_query_argument,\n            uri_path=uri_path\n        ),\n        size=123,\n        text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n            priority=123,\n            type=\"type\"\n        )]\n    ),\n    sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n        field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n            all_query_arguments=all_query_arguments,\n            body=wafv2.CfnWebACL.BodyProperty(\n                oversize_handling=\"oversizeHandling\"\n            ),\n            cookies=wafv2.CfnWebACL.CookiesProperty(\n                match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                    all=all,\n                    excluded_cookies=[\"excludedCookies\"],\n                    included_cookies=[\"includedCookies\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            headers=wafv2.CfnWebACL.HeadersProperty(\n                match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                    all=all,\n                    excluded_headers=[\"excludedHeaders\"],\n                    included_headers=[\"includedHeaders\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                    all=all,\n                    included_paths=[\"includedPaths\"]\n                ),\n                match_scope=\"matchScope\",\n\n                # the properties below are optional\n                invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            method=method,\n            query_string=query_string,\n            single_header=single_header,\n            single_query_argument=single_query_argument,\n            uri_path=uri_path\n        ),\n        text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n            priority=123,\n            type=\"type\"\n        )],\n\n        # the properties below are optional\n        sensitivity_level=\"sensitivityLevel\"\n    ),\n    xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n        field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n            all_query_arguments=all_query_arguments,\n            body=wafv2.CfnWebACL.BodyProperty(\n                oversize_handling=\"oversizeHandling\"\n            ),\n            cookies=wafv2.CfnWebACL.CookiesProperty(\n                match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                    all=all,\n                    excluded_cookies=[\"excludedCookies\"],\n                    included_cookies=[\"includedCookies\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            headers=wafv2.CfnWebACL.HeadersProperty(\n                match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                    all=all,\n                    excluded_headers=[\"excludedHeaders\"],\n                    included_headers=[\"includedHeaders\"]\n                ),\n                match_scope=\"matchScope\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                    all=all,\n                    included_paths=[\"includedPaths\"]\n                ),\n                match_scope=\"matchScope\",\n\n                # the properties below are optional\n                invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                oversize_handling=\"oversizeHandling\"\n            ),\n            method=method,\n            query_string=query_string,\n            single_header=single_header,\n            single_query_argument=single_query_argument,\n            uri_path=uri_path\n        ),\n        text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n            priority=123,\n            type=\"type\"\n        )]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nAndStatementProperty andStatementProperty_;\nManagedRuleGroupStatementProperty managedRuleGroupStatementProperty_;\nvar method;\nNotStatementProperty notStatementProperty_;\nOrStatementProperty orStatementProperty_;\nvar queryString;\nRateBasedStatementProperty rateBasedStatementProperty_;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nStatementProperty statementProperty = new StatementProperty {\n    AndStatement = new AndStatementProperty {\n        Statements = new [] { new StatementProperty {\n            AndStatement = andStatementProperty_,\n            ByteMatchStatement = new ByteMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                PositionalConstraint = \"positionalConstraint\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SearchString = \"searchString\",\n                SearchStringBase64 = \"searchStringBase64\"\n            },\n            GeoMatchStatement = new GeoMatchStatementProperty {\n                CountryCodes = new [] { \"countryCodes\" },\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                }\n            },\n            IpSetReferenceStatement = new Dictionary<string, object> {\n                { \"arn\", \"arn\" },\n\n                // the properties below are optional\n                { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                    { \"fallbackBehavior\", \"fallbackBehavior\" },\n                    { \"headerName\", \"headerName\" },\n                    { \"position\", \"position\" }\n                } }\n            },\n            LabelMatchStatement = new LabelMatchStatementProperty {\n                Key = \"key\",\n                Scope = \"scope\"\n            },\n            ManagedRuleGroupStatement = new ManagedRuleGroupStatementProperty {\n                Name = \"name\",\n                VendorName = \"vendorName\",\n\n                // the properties below are optional\n                ExcludedRules = new [] { new ExcludedRuleProperty {\n                    Name = \"name\"\n                } },\n                ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n                    LoginPath = \"loginPath\",\n                    PasswordField = new FieldIdentifierProperty {\n                        Identifier = \"identifier\"\n                    },\n                    PayloadType = \"payloadType\",\n                    UsernameField = new FieldIdentifierProperty {\n                        Identifier = \"identifier\"\n                    }\n                } },\n                ScopeDownStatement = statementProperty_,\n                Version = \"version\"\n            },\n            NotStatement = new NotStatementProperty {\n                Statement = statementProperty_\n            },\n            OrStatement = new OrStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            RateBasedStatement = new RateBasedStatementProperty {\n                AggregateKeyType = \"aggregateKeyType\",\n                Limit = 123,\n\n                // the properties below are optional\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                },\n                ScopeDownStatement = statementProperty_\n            },\n            RegexMatchStatement = new RegexMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                RegexString = \"regexString\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n                Arn = \"arn\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n                Arn = \"arn\",\n\n                // the properties below are optional\n                ExcludedRules = new [] { new ExcludedRuleProperty {\n                    Name = \"name\"\n                } }\n            },\n            SizeConstraintStatement = new SizeConstraintStatementProperty {\n                ComparisonOperator = \"comparisonOperator\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                Size = 123,\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SqliMatchStatement = new SqliMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SensitivityLevel = \"sensitivityLevel\"\n            },\n            XssMatchStatement = new XssMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            }\n        } }\n    },\n    ByteMatchStatement = new ByteMatchStatementProperty {\n        FieldToMatch = new FieldToMatchProperty {\n            AllQueryArguments = allQueryArguments,\n            Body = new BodyProperty {\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Cookies = new CookiesProperty {\n                MatchPattern = new CookieMatchPatternProperty {\n                    All = all,\n                    ExcludedCookies = new [] { \"excludedCookies\" },\n                    IncludedCookies = new [] { \"includedCookies\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Headers = new HeadersProperty {\n                MatchPattern = new HeaderMatchPatternProperty {\n                    All = all,\n                    ExcludedHeaders = new [] { \"excludedHeaders\" },\n                    IncludedHeaders = new [] { \"includedHeaders\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            JsonBody = new JsonBodyProperty {\n                MatchPattern = new JsonMatchPatternProperty {\n                    All = all,\n                    IncludedPaths = new [] { \"includedPaths\" }\n                },\n                MatchScope = \"matchScope\",\n\n                // the properties below are optional\n                InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Method = method,\n            QueryString = queryString,\n            SingleHeader = singleHeader,\n            SingleQueryArgument = singleQueryArgument,\n            UriPath = uriPath\n        },\n        PositionalConstraint = \"positionalConstraint\",\n        TextTransformations = new [] { new TextTransformationProperty {\n            Priority = 123,\n            Type = \"type\"\n        } },\n\n        // the properties below are optional\n        SearchString = \"searchString\",\n        SearchStringBase64 = \"searchStringBase64\"\n    },\n    GeoMatchStatement = new GeoMatchStatementProperty {\n        CountryCodes = new [] { \"countryCodes\" },\n        ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n            FallbackBehavior = \"fallbackBehavior\",\n            HeaderName = \"headerName\"\n        }\n    },\n    IpSetReferenceStatement = new Dictionary<string, object> {\n        { \"arn\", \"arn\" },\n\n        // the properties below are optional\n        { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n            { \"fallbackBehavior\", \"fallbackBehavior\" },\n            { \"headerName\", \"headerName\" },\n            { \"position\", \"position\" }\n        } }\n    },\n    LabelMatchStatement = new LabelMatchStatementProperty {\n        Key = \"key\",\n        Scope = \"scope\"\n    },\n    ManagedRuleGroupStatement = new ManagedRuleGroupStatementProperty {\n        Name = \"name\",\n        VendorName = \"vendorName\",\n\n        // the properties below are optional\n        ExcludedRules = new [] { new ExcludedRuleProperty {\n            Name = \"name\"\n        } },\n        ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n            LoginPath = \"loginPath\",\n            PasswordField = new FieldIdentifierProperty {\n                Identifier = \"identifier\"\n            },\n            PayloadType = \"payloadType\",\n            UsernameField = new FieldIdentifierProperty {\n                Identifier = \"identifier\"\n            }\n        } },\n        ScopeDownStatement = new StatementProperty {\n            AndStatement = new AndStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            ByteMatchStatement = new ByteMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                PositionalConstraint = \"positionalConstraint\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SearchString = \"searchString\",\n                SearchStringBase64 = \"searchStringBase64\"\n            },\n            GeoMatchStatement = new GeoMatchStatementProperty {\n                CountryCodes = new [] { \"countryCodes\" },\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                }\n            },\n            IpSetReferenceStatement = new Dictionary<string, object> {\n                { \"arn\", \"arn\" },\n\n                // the properties below are optional\n                { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                    { \"fallbackBehavior\", \"fallbackBehavior\" },\n                    { \"headerName\", \"headerName\" },\n                    { \"position\", \"position\" }\n                } }\n            },\n            LabelMatchStatement = new LabelMatchStatementProperty {\n                Key = \"key\",\n                Scope = \"scope\"\n            },\n            ManagedRuleGroupStatement = managedRuleGroupStatementProperty_,\n            NotStatement = new NotStatementProperty {\n                Statement = statementProperty_\n            },\n            OrStatement = new OrStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            RateBasedStatement = new RateBasedStatementProperty {\n                AggregateKeyType = \"aggregateKeyType\",\n                Limit = 123,\n\n                // the properties below are optional\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                },\n                ScopeDownStatement = statementProperty_\n            },\n            RegexMatchStatement = new RegexMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                RegexString = \"regexString\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n                Arn = \"arn\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n                Arn = \"arn\",\n\n                // the properties below are optional\n                ExcludedRules = new [] { new ExcludedRuleProperty {\n                    Name = \"name\"\n                } }\n            },\n            SizeConstraintStatement = new SizeConstraintStatementProperty {\n                ComparisonOperator = \"comparisonOperator\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                Size = 123,\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SqliMatchStatement = new SqliMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SensitivityLevel = \"sensitivityLevel\"\n            },\n            XssMatchStatement = new XssMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            }\n        },\n        Version = \"version\"\n    },\n    NotStatement = new NotStatementProperty {\n        Statement = new StatementProperty {\n            AndStatement = new AndStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            ByteMatchStatement = new ByteMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                PositionalConstraint = \"positionalConstraint\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SearchString = \"searchString\",\n                SearchStringBase64 = \"searchStringBase64\"\n            },\n            GeoMatchStatement = new GeoMatchStatementProperty {\n                CountryCodes = new [] { \"countryCodes\" },\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                }\n            },\n            IpSetReferenceStatement = new Dictionary<string, object> {\n                { \"arn\", \"arn\" },\n\n                // the properties below are optional\n                { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                    { \"fallbackBehavior\", \"fallbackBehavior\" },\n                    { \"headerName\", \"headerName\" },\n                    { \"position\", \"position\" }\n                } }\n            },\n            LabelMatchStatement = new LabelMatchStatementProperty {\n                Key = \"key\",\n                Scope = \"scope\"\n            },\n            ManagedRuleGroupStatement = new ManagedRuleGroupStatementProperty {\n                Name = \"name\",\n                VendorName = \"vendorName\",\n\n                // the properties below are optional\n                ExcludedRules = new [] { new ExcludedRuleProperty {\n                    Name = \"name\"\n                } },\n                ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n                    LoginPath = \"loginPath\",\n                    PasswordField = new FieldIdentifierProperty {\n                        Identifier = \"identifier\"\n                    },\n                    PayloadType = \"payloadType\",\n                    UsernameField = new FieldIdentifierProperty {\n                        Identifier = \"identifier\"\n                    }\n                } },\n                ScopeDownStatement = statementProperty_,\n                Version = \"version\"\n            },\n            NotStatement = notStatementProperty_,\n            OrStatement = new OrStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            RateBasedStatement = new RateBasedStatementProperty {\n                AggregateKeyType = \"aggregateKeyType\",\n                Limit = 123,\n\n                // the properties below are optional\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                },\n                ScopeDownStatement = statementProperty_\n            },\n            RegexMatchStatement = new RegexMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                RegexString = \"regexString\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n                Arn = \"arn\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n                Arn = \"arn\",\n\n                // the properties below are optional\n                ExcludedRules = new [] { new ExcludedRuleProperty {\n                    Name = \"name\"\n                } }\n            },\n            SizeConstraintStatement = new SizeConstraintStatementProperty {\n                ComparisonOperator = \"comparisonOperator\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                Size = 123,\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SqliMatchStatement = new SqliMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SensitivityLevel = \"sensitivityLevel\"\n            },\n            XssMatchStatement = new XssMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            }\n        }\n    },\n    OrStatement = new OrStatementProperty {\n        Statements = new [] { new StatementProperty {\n            AndStatement = new AndStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            ByteMatchStatement = new ByteMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                PositionalConstraint = \"positionalConstraint\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SearchString = \"searchString\",\n                SearchStringBase64 = \"searchStringBase64\"\n            },\n            GeoMatchStatement = new GeoMatchStatementProperty {\n                CountryCodes = new [] { \"countryCodes\" },\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                }\n            },\n            IpSetReferenceStatement = new Dictionary<string, object> {\n                { \"arn\", \"arn\" },\n\n                // the properties below are optional\n                { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                    { \"fallbackBehavior\", \"fallbackBehavior\" },\n                    { \"headerName\", \"headerName\" },\n                    { \"position\", \"position\" }\n                } }\n            },\n            LabelMatchStatement = new LabelMatchStatementProperty {\n                Key = \"key\",\n                Scope = \"scope\"\n            },\n            ManagedRuleGroupStatement = new ManagedRuleGroupStatementProperty {\n                Name = \"name\",\n                VendorName = \"vendorName\",\n\n                // the properties below are optional\n                ExcludedRules = new [] { new ExcludedRuleProperty {\n                    Name = \"name\"\n                } },\n                ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n                    LoginPath = \"loginPath\",\n                    PasswordField = new FieldIdentifierProperty {\n                        Identifier = \"identifier\"\n                    },\n                    PayloadType = \"payloadType\",\n                    UsernameField = new FieldIdentifierProperty {\n                        Identifier = \"identifier\"\n                    }\n                } },\n                ScopeDownStatement = statementProperty_,\n                Version = \"version\"\n            },\n            NotStatement = new NotStatementProperty {\n                Statement = statementProperty_\n            },\n            OrStatement = orStatementProperty_,\n            RateBasedStatement = new RateBasedStatementProperty {\n                AggregateKeyType = \"aggregateKeyType\",\n                Limit = 123,\n\n                // the properties below are optional\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                },\n                ScopeDownStatement = statementProperty_\n            },\n            RegexMatchStatement = new RegexMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                RegexString = \"regexString\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n                Arn = \"arn\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n                Arn = \"arn\",\n\n                // the properties below are optional\n                ExcludedRules = new [] { new ExcludedRuleProperty {\n                    Name = \"name\"\n                } }\n            },\n            SizeConstraintStatement = new SizeConstraintStatementProperty {\n                ComparisonOperator = \"comparisonOperator\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                Size = 123,\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SqliMatchStatement = new SqliMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SensitivityLevel = \"sensitivityLevel\"\n            },\n            XssMatchStatement = new XssMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            }\n        } }\n    },\n    RateBasedStatement = new RateBasedStatementProperty {\n        AggregateKeyType = \"aggregateKeyType\",\n        Limit = 123,\n\n        // the properties below are optional\n        ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n            FallbackBehavior = \"fallbackBehavior\",\n            HeaderName = \"headerName\"\n        },\n        ScopeDownStatement = new StatementProperty {\n            AndStatement = new AndStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            ByteMatchStatement = new ByteMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                PositionalConstraint = \"positionalConstraint\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SearchString = \"searchString\",\n                SearchStringBase64 = \"searchStringBase64\"\n            },\n            GeoMatchStatement = new GeoMatchStatementProperty {\n                CountryCodes = new [] { \"countryCodes\" },\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                }\n            },\n            IpSetReferenceStatement = new Dictionary<string, object> {\n                { \"arn\", \"arn\" },\n\n                // the properties below are optional\n                { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                    { \"fallbackBehavior\", \"fallbackBehavior\" },\n                    { \"headerName\", \"headerName\" },\n                    { \"position\", \"position\" }\n                } }\n            },\n            LabelMatchStatement = new LabelMatchStatementProperty {\n                Key = \"key\",\n                Scope = \"scope\"\n            },\n            ManagedRuleGroupStatement = new ManagedRuleGroupStatementProperty {\n                Name = \"name\",\n                VendorName = \"vendorName\",\n\n                // the properties below are optional\n                ExcludedRules = new [] { new ExcludedRuleProperty {\n                    Name = \"name\"\n                } },\n                ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n                    LoginPath = \"loginPath\",\n                    PasswordField = new FieldIdentifierProperty {\n                        Identifier = \"identifier\"\n                    },\n                    PayloadType = \"payloadType\",\n                    UsernameField = new FieldIdentifierProperty {\n                        Identifier = \"identifier\"\n                    }\n                } },\n                ScopeDownStatement = statementProperty_,\n                Version = \"version\"\n            },\n            NotStatement = new NotStatementProperty {\n                Statement = statementProperty_\n            },\n            OrStatement = new OrStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            RateBasedStatement = rateBasedStatementProperty_,\n            RegexMatchStatement = new RegexMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                RegexString = \"regexString\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n                Arn = \"arn\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n                Arn = \"arn\",\n\n                // the properties below are optional\n                ExcludedRules = new [] { new ExcludedRuleProperty {\n                    Name = \"name\"\n                } }\n            },\n            SizeConstraintStatement = new SizeConstraintStatementProperty {\n                ComparisonOperator = \"comparisonOperator\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                Size = 123,\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SqliMatchStatement = new SqliMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SensitivityLevel = \"sensitivityLevel\"\n            },\n            XssMatchStatement = new XssMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            }\n        }\n    },\n    RegexMatchStatement = new RegexMatchStatementProperty {\n        FieldToMatch = new FieldToMatchProperty {\n            AllQueryArguments = allQueryArguments,\n            Body = new BodyProperty {\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Cookies = new CookiesProperty {\n                MatchPattern = new CookieMatchPatternProperty {\n                    All = all,\n                    ExcludedCookies = new [] { \"excludedCookies\" },\n                    IncludedCookies = new [] { \"includedCookies\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Headers = new HeadersProperty {\n                MatchPattern = new HeaderMatchPatternProperty {\n                    All = all,\n                    ExcludedHeaders = new [] { \"excludedHeaders\" },\n                    IncludedHeaders = new [] { \"includedHeaders\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            JsonBody = new JsonBodyProperty {\n                MatchPattern = new JsonMatchPatternProperty {\n                    All = all,\n                    IncludedPaths = new [] { \"includedPaths\" }\n                },\n                MatchScope = \"matchScope\",\n\n                // the properties below are optional\n                InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Method = method,\n            QueryString = queryString,\n            SingleHeader = singleHeader,\n            SingleQueryArgument = singleQueryArgument,\n            UriPath = uriPath\n        },\n        RegexString = \"regexString\",\n        TextTransformations = new [] { new TextTransformationProperty {\n            Priority = 123,\n            Type = \"type\"\n        } }\n    },\n    RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n        Arn = \"arn\",\n        FieldToMatch = new FieldToMatchProperty {\n            AllQueryArguments = allQueryArguments,\n            Body = new BodyProperty {\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Cookies = new CookiesProperty {\n                MatchPattern = new CookieMatchPatternProperty {\n                    All = all,\n                    ExcludedCookies = new [] { \"excludedCookies\" },\n                    IncludedCookies = new [] { \"includedCookies\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Headers = new HeadersProperty {\n                MatchPattern = new HeaderMatchPatternProperty {\n                    All = all,\n                    ExcludedHeaders = new [] { \"excludedHeaders\" },\n                    IncludedHeaders = new [] { \"includedHeaders\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            JsonBody = new JsonBodyProperty {\n                MatchPattern = new JsonMatchPatternProperty {\n                    All = all,\n                    IncludedPaths = new [] { \"includedPaths\" }\n                },\n                MatchScope = \"matchScope\",\n\n                // the properties below are optional\n                InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Method = method,\n            QueryString = queryString,\n            SingleHeader = singleHeader,\n            SingleQueryArgument = singleQueryArgument,\n            UriPath = uriPath\n        },\n        TextTransformations = new [] { new TextTransformationProperty {\n            Priority = 123,\n            Type = \"type\"\n        } }\n    },\n    RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n        Arn = \"arn\",\n\n        // the properties below are optional\n        ExcludedRules = new [] { new ExcludedRuleProperty {\n            Name = \"name\"\n        } }\n    },\n    SizeConstraintStatement = new SizeConstraintStatementProperty {\n        ComparisonOperator = \"comparisonOperator\",\n        FieldToMatch = new FieldToMatchProperty {\n            AllQueryArguments = allQueryArguments,\n            Body = new BodyProperty {\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Cookies = new CookiesProperty {\n                MatchPattern = new CookieMatchPatternProperty {\n                    All = all,\n                    ExcludedCookies = new [] { \"excludedCookies\" },\n                    IncludedCookies = new [] { \"includedCookies\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Headers = new HeadersProperty {\n                MatchPattern = new HeaderMatchPatternProperty {\n                    All = all,\n                    ExcludedHeaders = new [] { \"excludedHeaders\" },\n                    IncludedHeaders = new [] { \"includedHeaders\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            JsonBody = new JsonBodyProperty {\n                MatchPattern = new JsonMatchPatternProperty {\n                    All = all,\n                    IncludedPaths = new [] { \"includedPaths\" }\n                },\n                MatchScope = \"matchScope\",\n\n                // the properties below are optional\n                InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Method = method,\n            QueryString = queryString,\n            SingleHeader = singleHeader,\n            SingleQueryArgument = singleQueryArgument,\n            UriPath = uriPath\n        },\n        Size = 123,\n        TextTransformations = new [] { new TextTransformationProperty {\n            Priority = 123,\n            Type = \"type\"\n        } }\n    },\n    SqliMatchStatement = new SqliMatchStatementProperty {\n        FieldToMatch = new FieldToMatchProperty {\n            AllQueryArguments = allQueryArguments,\n            Body = new BodyProperty {\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Cookies = new CookiesProperty {\n                MatchPattern = new CookieMatchPatternProperty {\n                    All = all,\n                    ExcludedCookies = new [] { \"excludedCookies\" },\n                    IncludedCookies = new [] { \"includedCookies\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Headers = new HeadersProperty {\n                MatchPattern = new HeaderMatchPatternProperty {\n                    All = all,\n                    ExcludedHeaders = new [] { \"excludedHeaders\" },\n                    IncludedHeaders = new [] { \"includedHeaders\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            JsonBody = new JsonBodyProperty {\n                MatchPattern = new JsonMatchPatternProperty {\n                    All = all,\n                    IncludedPaths = new [] { \"includedPaths\" }\n                },\n                MatchScope = \"matchScope\",\n\n                // the properties below are optional\n                InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Method = method,\n            QueryString = queryString,\n            SingleHeader = singleHeader,\n            SingleQueryArgument = singleQueryArgument,\n            UriPath = uriPath\n        },\n        TextTransformations = new [] { new TextTransformationProperty {\n            Priority = 123,\n            Type = \"type\"\n        } },\n\n        // the properties below are optional\n        SensitivityLevel = \"sensitivityLevel\"\n    },\n    XssMatchStatement = new XssMatchStatementProperty {\n        FieldToMatch = new FieldToMatchProperty {\n            AllQueryArguments = allQueryArguments,\n            Body = new BodyProperty {\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Cookies = new CookiesProperty {\n                MatchPattern = new CookieMatchPatternProperty {\n                    All = all,\n                    ExcludedCookies = new [] { \"excludedCookies\" },\n                    IncludedCookies = new [] { \"includedCookies\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Headers = new HeadersProperty {\n                MatchPattern = new HeaderMatchPatternProperty {\n                    All = all,\n                    ExcludedHeaders = new [] { \"excludedHeaders\" },\n                    IncludedHeaders = new [] { \"includedHeaders\" }\n                },\n                MatchScope = \"matchScope\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            JsonBody = new JsonBodyProperty {\n                MatchPattern = new JsonMatchPatternProperty {\n                    All = all,\n                    IncludedPaths = new [] { \"includedPaths\" }\n                },\n                MatchScope = \"matchScope\",\n\n                // the properties below are optional\n                InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                OversizeHandling = \"oversizeHandling\"\n            },\n            Method = method,\n            QueryString = queryString,\n            SingleHeader = singleHeader,\n            SingleQueryArgument = singleQueryArgument,\n            UriPath = uriPath\n        },\n        TextTransformations = new [] { new TextTransformationProperty {\n            Priority = 123,\n            Type = \"type\"\n        } }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nAndStatementProperty andStatementProperty_;\nManagedRuleGroupStatementProperty managedRuleGroupStatementProperty_;\nObject method;\nNotStatementProperty notStatementProperty_;\nOrStatementProperty orStatementProperty_;\nObject queryString;\nRateBasedStatementProperty rateBasedStatementProperty_;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nStatementProperty statementProperty = StatementProperty.builder()\n        .andStatement(AndStatementProperty.builder()\n                .statements(List.of(StatementProperty.builder()\n                        .andStatement(andStatementProperty_)\n                        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .positionalConstraint(\"positionalConstraint\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .searchString(\"searchString\")\n                                .searchStringBase64(\"searchStringBase64\")\n                                .build())\n                        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                                .countryCodes(List.of(\"countryCodes\"))\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .build())\n                        .ipSetReferenceStatement(Map.of(\n                                \"arn\", \"arn\",\n\n                                // the properties below are optional\n                                \"ipSetForwardedIpConfig\", Map.of(\n                                        \"fallbackBehavior\", \"fallbackBehavior\",\n                                        \"headerName\", \"headerName\",\n                                        \"position\", \"position\")))\n                        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                                .key(\"key\")\n                                .scope(\"scope\")\n                                .build())\n                        .managedRuleGroupStatement(ManagedRuleGroupStatementProperty.builder()\n                                .name(\"name\")\n                                .vendorName(\"vendorName\")\n\n                                // the properties below are optional\n                                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                        .name(\"name\")\n                                        .build()))\n                                .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                                        .loginPath(\"loginPath\")\n                                        .passwordField(FieldIdentifierProperty.builder()\n                                                .identifier(\"identifier\")\n                                                .build())\n                                        .payloadType(\"payloadType\")\n                                        .usernameField(FieldIdentifierProperty.builder()\n                                                .identifier(\"identifier\")\n                                                .build())\n                                        .build()))\n                                .scopeDownStatement(statementProperty_)\n                                .version(\"version\")\n                                .build())\n                        .notStatement(NotStatementProperty.builder()\n                                .statement(statementProperty_)\n                                .build())\n                        .orStatement(OrStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .rateBasedStatement(RateBasedStatementProperty.builder()\n                                .aggregateKeyType(\"aggregateKeyType\")\n                                .limit(123)\n\n                                // the properties below are optional\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .scopeDownStatement(statementProperty_)\n                                .build())\n                        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .regexString(\"regexString\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n\n                                // the properties below are optional\n                                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                        .name(\"name\")\n                                        .build()))\n                                .build())\n                        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                                .comparisonOperator(\"comparisonOperator\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .size(123)\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .sensitivityLevel(\"sensitivityLevel\")\n                                .build())\n                        .xssMatchStatement(XssMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .build()))\n                .build())\n        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                .fieldToMatch(FieldToMatchProperty.builder()\n                        .allQueryArguments(allQueryArguments)\n                        .body(BodyProperty.builder()\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .cookies(CookiesProperty.builder()\n                                .matchPattern(CookieMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                        .includedCookies(List.of(\"includedCookies\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .headers(HeadersProperty.builder()\n                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .jsonBody(JsonBodyProperty.builder()\n                                .matchPattern(JsonMatchPatternProperty.builder()\n                                        .all(all)\n                                        .includedPaths(List.of(\"includedPaths\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n\n                                // the properties below are optional\n                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .method(method)\n                        .queryString(queryString)\n                        .singleHeader(singleHeader)\n                        .singleQueryArgument(singleQueryArgument)\n                        .uriPath(uriPath)\n                        .build())\n                .positionalConstraint(\"positionalConstraint\")\n                .textTransformations(List.of(TextTransformationProperty.builder()\n                        .priority(123)\n                        .type(\"type\")\n                        .build()))\n\n                // the properties below are optional\n                .searchString(\"searchString\")\n                .searchStringBase64(\"searchStringBase64\")\n                .build())\n        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                .countryCodes(List.of(\"countryCodes\"))\n                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                        .fallbackBehavior(\"fallbackBehavior\")\n                        .headerName(\"headerName\")\n                        .build())\n                .build())\n        .ipSetReferenceStatement(Map.of(\n                \"arn\", \"arn\",\n\n                // the properties below are optional\n                \"ipSetForwardedIpConfig\", Map.of(\n                        \"fallbackBehavior\", \"fallbackBehavior\",\n                        \"headerName\", \"headerName\",\n                        \"position\", \"position\")))\n        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                .key(\"key\")\n                .scope(\"scope\")\n                .build())\n        .managedRuleGroupStatement(ManagedRuleGroupStatementProperty.builder()\n                .name(\"name\")\n                .vendorName(\"vendorName\")\n\n                // the properties below are optional\n                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                        .name(\"name\")\n                        .build()))\n                .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                        .loginPath(\"loginPath\")\n                        .passwordField(FieldIdentifierProperty.builder()\n                                .identifier(\"identifier\")\n                                .build())\n                        .payloadType(\"payloadType\")\n                        .usernameField(FieldIdentifierProperty.builder()\n                                .identifier(\"identifier\")\n                                .build())\n                        .build()))\n                .scopeDownStatement(StatementProperty.builder()\n                        .andStatement(AndStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .positionalConstraint(\"positionalConstraint\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .searchString(\"searchString\")\n                                .searchStringBase64(\"searchStringBase64\")\n                                .build())\n                        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                                .countryCodes(List.of(\"countryCodes\"))\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .build())\n                        .ipSetReferenceStatement(Map.of(\n                                \"arn\", \"arn\",\n\n                                // the properties below are optional\n                                \"ipSetForwardedIpConfig\", Map.of(\n                                        \"fallbackBehavior\", \"fallbackBehavior\",\n                                        \"headerName\", \"headerName\",\n                                        \"position\", \"position\")))\n                        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                                .key(\"key\")\n                                .scope(\"scope\")\n                                .build())\n                        .managedRuleGroupStatement(managedRuleGroupStatementProperty_)\n                        .notStatement(NotStatementProperty.builder()\n                                .statement(statementProperty_)\n                                .build())\n                        .orStatement(OrStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .rateBasedStatement(RateBasedStatementProperty.builder()\n                                .aggregateKeyType(\"aggregateKeyType\")\n                                .limit(123)\n\n                                // the properties below are optional\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .scopeDownStatement(statementProperty_)\n                                .build())\n                        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .regexString(\"regexString\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n\n                                // the properties below are optional\n                                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                        .name(\"name\")\n                                        .build()))\n                                .build())\n                        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                                .comparisonOperator(\"comparisonOperator\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .size(123)\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .sensitivityLevel(\"sensitivityLevel\")\n                                .build())\n                        .xssMatchStatement(XssMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .build())\n                .version(\"version\")\n                .build())\n        .notStatement(NotStatementProperty.builder()\n                .statement(StatementProperty.builder()\n                        .andStatement(AndStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .positionalConstraint(\"positionalConstraint\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .searchString(\"searchString\")\n                                .searchStringBase64(\"searchStringBase64\")\n                                .build())\n                        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                                .countryCodes(List.of(\"countryCodes\"))\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .build())\n                        .ipSetReferenceStatement(Map.of(\n                                \"arn\", \"arn\",\n\n                                // the properties below are optional\n                                \"ipSetForwardedIpConfig\", Map.of(\n                                        \"fallbackBehavior\", \"fallbackBehavior\",\n                                        \"headerName\", \"headerName\",\n                                        \"position\", \"position\")))\n                        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                                .key(\"key\")\n                                .scope(\"scope\")\n                                .build())\n                        .managedRuleGroupStatement(ManagedRuleGroupStatementProperty.builder()\n                                .name(\"name\")\n                                .vendorName(\"vendorName\")\n\n                                // the properties below are optional\n                                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                        .name(\"name\")\n                                        .build()))\n                                .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                                        .loginPath(\"loginPath\")\n                                        .passwordField(FieldIdentifierProperty.builder()\n                                                .identifier(\"identifier\")\n                                                .build())\n                                        .payloadType(\"payloadType\")\n                                        .usernameField(FieldIdentifierProperty.builder()\n                                                .identifier(\"identifier\")\n                                                .build())\n                                        .build()))\n                                .scopeDownStatement(statementProperty_)\n                                .version(\"version\")\n                                .build())\n                        .notStatement(notStatementProperty_)\n                        .orStatement(OrStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .rateBasedStatement(RateBasedStatementProperty.builder()\n                                .aggregateKeyType(\"aggregateKeyType\")\n                                .limit(123)\n\n                                // the properties below are optional\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .scopeDownStatement(statementProperty_)\n                                .build())\n                        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .regexString(\"regexString\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n\n                                // the properties below are optional\n                                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                        .name(\"name\")\n                                        .build()))\n                                .build())\n                        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                                .comparisonOperator(\"comparisonOperator\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .size(123)\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .sensitivityLevel(\"sensitivityLevel\")\n                                .build())\n                        .xssMatchStatement(XssMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .build())\n                .build())\n        .orStatement(OrStatementProperty.builder()\n                .statements(List.of(StatementProperty.builder()\n                        .andStatement(AndStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .positionalConstraint(\"positionalConstraint\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .searchString(\"searchString\")\n                                .searchStringBase64(\"searchStringBase64\")\n                                .build())\n                        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                                .countryCodes(List.of(\"countryCodes\"))\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .build())\n                        .ipSetReferenceStatement(Map.of(\n                                \"arn\", \"arn\",\n\n                                // the properties below are optional\n                                \"ipSetForwardedIpConfig\", Map.of(\n                                        \"fallbackBehavior\", \"fallbackBehavior\",\n                                        \"headerName\", \"headerName\",\n                                        \"position\", \"position\")))\n                        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                                .key(\"key\")\n                                .scope(\"scope\")\n                                .build())\n                        .managedRuleGroupStatement(ManagedRuleGroupStatementProperty.builder()\n                                .name(\"name\")\n                                .vendorName(\"vendorName\")\n\n                                // the properties below are optional\n                                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                        .name(\"name\")\n                                        .build()))\n                                .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                                        .loginPath(\"loginPath\")\n                                        .passwordField(FieldIdentifierProperty.builder()\n                                                .identifier(\"identifier\")\n                                                .build())\n                                        .payloadType(\"payloadType\")\n                                        .usernameField(FieldIdentifierProperty.builder()\n                                                .identifier(\"identifier\")\n                                                .build())\n                                        .build()))\n                                .scopeDownStatement(statementProperty_)\n                                .version(\"version\")\n                                .build())\n                        .notStatement(NotStatementProperty.builder()\n                                .statement(statementProperty_)\n                                .build())\n                        .orStatement(orStatementProperty_)\n                        .rateBasedStatement(RateBasedStatementProperty.builder()\n                                .aggregateKeyType(\"aggregateKeyType\")\n                                .limit(123)\n\n                                // the properties below are optional\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .scopeDownStatement(statementProperty_)\n                                .build())\n                        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .regexString(\"regexString\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n\n                                // the properties below are optional\n                                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                        .name(\"name\")\n                                        .build()))\n                                .build())\n                        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                                .comparisonOperator(\"comparisonOperator\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .size(123)\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .sensitivityLevel(\"sensitivityLevel\")\n                                .build())\n                        .xssMatchStatement(XssMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .build()))\n                .build())\n        .rateBasedStatement(RateBasedStatementProperty.builder()\n                .aggregateKeyType(\"aggregateKeyType\")\n                .limit(123)\n\n                // the properties below are optional\n                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                        .fallbackBehavior(\"fallbackBehavior\")\n                        .headerName(\"headerName\")\n                        .build())\n                .scopeDownStatement(StatementProperty.builder()\n                        .andStatement(AndStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .positionalConstraint(\"positionalConstraint\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .searchString(\"searchString\")\n                                .searchStringBase64(\"searchStringBase64\")\n                                .build())\n                        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                                .countryCodes(List.of(\"countryCodes\"))\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .build())\n                        .ipSetReferenceStatement(Map.of(\n                                \"arn\", \"arn\",\n\n                                // the properties below are optional\n                                \"ipSetForwardedIpConfig\", Map.of(\n                                        \"fallbackBehavior\", \"fallbackBehavior\",\n                                        \"headerName\", \"headerName\",\n                                        \"position\", \"position\")))\n                        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                                .key(\"key\")\n                                .scope(\"scope\")\n                                .build())\n                        .managedRuleGroupStatement(ManagedRuleGroupStatementProperty.builder()\n                                .name(\"name\")\n                                .vendorName(\"vendorName\")\n\n                                // the properties below are optional\n                                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                        .name(\"name\")\n                                        .build()))\n                                .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                                        .loginPath(\"loginPath\")\n                                        .passwordField(FieldIdentifierProperty.builder()\n                                                .identifier(\"identifier\")\n                                                .build())\n                                        .payloadType(\"payloadType\")\n                                        .usernameField(FieldIdentifierProperty.builder()\n                                                .identifier(\"identifier\")\n                                                .build())\n                                        .build()))\n                                .scopeDownStatement(statementProperty_)\n                                .version(\"version\")\n                                .build())\n                        .notStatement(NotStatementProperty.builder()\n                                .statement(statementProperty_)\n                                .build())\n                        .orStatement(OrStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .rateBasedStatement(rateBasedStatementProperty_)\n                        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .regexString(\"regexString\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n\n                                // the properties below are optional\n                                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                        .name(\"name\")\n                                        .build()))\n                                .build())\n                        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                                .comparisonOperator(\"comparisonOperator\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .size(123)\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .sensitivityLevel(\"sensitivityLevel\")\n                                .build())\n                        .xssMatchStatement(XssMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .build())\n                .build())\n        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                .fieldToMatch(FieldToMatchProperty.builder()\n                        .allQueryArguments(allQueryArguments)\n                        .body(BodyProperty.builder()\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .cookies(CookiesProperty.builder()\n                                .matchPattern(CookieMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                        .includedCookies(List.of(\"includedCookies\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .headers(HeadersProperty.builder()\n                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .jsonBody(JsonBodyProperty.builder()\n                                .matchPattern(JsonMatchPatternProperty.builder()\n                                        .all(all)\n                                        .includedPaths(List.of(\"includedPaths\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n\n                                // the properties below are optional\n                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .method(method)\n                        .queryString(queryString)\n                        .singleHeader(singleHeader)\n                        .singleQueryArgument(singleQueryArgument)\n                        .uriPath(uriPath)\n                        .build())\n                .regexString(\"regexString\")\n                .textTransformations(List.of(TextTransformationProperty.builder()\n                        .priority(123)\n                        .type(\"type\")\n                        .build()))\n                .build())\n        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                .arn(\"arn\")\n                .fieldToMatch(FieldToMatchProperty.builder()\n                        .allQueryArguments(allQueryArguments)\n                        .body(BodyProperty.builder()\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .cookies(CookiesProperty.builder()\n                                .matchPattern(CookieMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                        .includedCookies(List.of(\"includedCookies\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .headers(HeadersProperty.builder()\n                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .jsonBody(JsonBodyProperty.builder()\n                                .matchPattern(JsonMatchPatternProperty.builder()\n                                        .all(all)\n                                        .includedPaths(List.of(\"includedPaths\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n\n                                // the properties below are optional\n                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .method(method)\n                        .queryString(queryString)\n                        .singleHeader(singleHeader)\n                        .singleQueryArgument(singleQueryArgument)\n                        .uriPath(uriPath)\n                        .build())\n                .textTransformations(List.of(TextTransformationProperty.builder()\n                        .priority(123)\n                        .type(\"type\")\n                        .build()))\n                .build())\n        .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                .arn(\"arn\")\n\n                // the properties below are optional\n                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                        .name(\"name\")\n                        .build()))\n                .build())\n        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                .comparisonOperator(\"comparisonOperator\")\n                .fieldToMatch(FieldToMatchProperty.builder()\n                        .allQueryArguments(allQueryArguments)\n                        .body(BodyProperty.builder()\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .cookies(CookiesProperty.builder()\n                                .matchPattern(CookieMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                        .includedCookies(List.of(\"includedCookies\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .headers(HeadersProperty.builder()\n                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .jsonBody(JsonBodyProperty.builder()\n                                .matchPattern(JsonMatchPatternProperty.builder()\n                                        .all(all)\n                                        .includedPaths(List.of(\"includedPaths\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n\n                                // the properties below are optional\n                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .method(method)\n                        .queryString(queryString)\n                        .singleHeader(singleHeader)\n                        .singleQueryArgument(singleQueryArgument)\n                        .uriPath(uriPath)\n                        .build())\n                .size(123)\n                .textTransformations(List.of(TextTransformationProperty.builder()\n                        .priority(123)\n                        .type(\"type\")\n                        .build()))\n                .build())\n        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                .fieldToMatch(FieldToMatchProperty.builder()\n                        .allQueryArguments(allQueryArguments)\n                        .body(BodyProperty.builder()\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .cookies(CookiesProperty.builder()\n                                .matchPattern(CookieMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                        .includedCookies(List.of(\"includedCookies\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .headers(HeadersProperty.builder()\n                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .jsonBody(JsonBodyProperty.builder()\n                                .matchPattern(JsonMatchPatternProperty.builder()\n                                        .all(all)\n                                        .includedPaths(List.of(\"includedPaths\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n\n                                // the properties below are optional\n                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .method(method)\n                        .queryString(queryString)\n                        .singleHeader(singleHeader)\n                        .singleQueryArgument(singleQueryArgument)\n                        .uriPath(uriPath)\n                        .build())\n                .textTransformations(List.of(TextTransformationProperty.builder()\n                        .priority(123)\n                        .type(\"type\")\n                        .build()))\n\n                // the properties below are optional\n                .sensitivityLevel(\"sensitivityLevel\")\n                .build())\n        .xssMatchStatement(XssMatchStatementProperty.builder()\n                .fieldToMatch(FieldToMatchProperty.builder()\n                        .allQueryArguments(allQueryArguments)\n                        .body(BodyProperty.builder()\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .cookies(CookiesProperty.builder()\n                                .matchPattern(CookieMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                        .includedCookies(List.of(\"includedCookies\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .headers(HeadersProperty.builder()\n                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                        .all(all)\n                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .jsonBody(JsonBodyProperty.builder()\n                                .matchPattern(JsonMatchPatternProperty.builder()\n                                        .all(all)\n                                        .includedPaths(List.of(\"includedPaths\"))\n                                        .build())\n                                .matchScope(\"matchScope\")\n\n                                // the properties below are optional\n                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                .oversizeHandling(\"oversizeHandling\")\n                                .build())\n                        .method(method)\n                        .queryString(queryString)\n                        .singleHeader(singleHeader)\n                        .singleQueryArgument(singleQueryArgument)\n                        .uriPath(uriPath)\n                        .build())\n                .textTransformations(List.of(TextTransformationProperty.builder()\n                        .priority(123)\n                        .type(\"type\")\n                        .build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar andStatementProperty_ andStatementProperty\nvar managedRuleGroupStatementProperty_ managedRuleGroupStatementProperty\nvar method interface{}\nvar notStatementProperty_ notStatementProperty\nvar orStatementProperty_ orStatementProperty\nvar queryString interface{}\nvar rateBasedStatementProperty_ rateBasedStatementProperty\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\nstatementProperty := &statementProperty{\n\tandStatement: &andStatementProperty{\n\t\tstatements: []interface{}{\n\t\t\t&statementProperty{\n\t\t\t\tandStatement: andStatementProperty_,\n\t\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t\t},\n\t\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t\t},\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\t},\n\t\t\t\tmanagedRuleGroupStatement: &managedRuleGroupStatementProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvendorName: jsii.String(\"vendorName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmanagedRuleGroupConfigs: []interface{}{\n\t\t\t\t\t\t&managedRuleGroupConfigProperty{\n\t\t\t\t\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\t\t\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\t\t\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t\t},\n\t\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\t\tstatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\torStatement: &orStatementProperty{\n\t\t\t\t\tstatements: []interface{}{\n\t\t\t\t\t\tstatementProperty_,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\t\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tsize: jsii.Number(123),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t\t},\n\t\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\tallQueryArguments: allQueryArguments,\n\t\t\tbody: &bodyProperty{\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tcookies: &cookiesProperty{\n\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\theaders: &headersProperty{\n\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\turiPath: uriPath,\n\t\t},\n\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\ttextTransformations: []interface{}{\n\t\t\t&textTransformationProperty{\n\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tsearchString: jsii.String(\"searchString\"),\n\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t},\n\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\tcountryCodes: []*string{\n\t\t\tjsii.String(\"countryCodes\"),\n\t\t},\n\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t},\n\t},\n\tipSetReferenceStatement: map[string]interface{}{\n\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t// the properties below are optional\n\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\"position\": jsii.String(\"position\"),\n\t\t},\n\t},\n\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\tkey: jsii.String(\"key\"),\n\t\tscope: jsii.String(\"scope\"),\n\t},\n\tmanagedRuleGroupStatement: &managedRuleGroupStatementProperty{\n\t\tname: jsii.String(\"name\"),\n\t\tvendorName: jsii.String(\"vendorName\"),\n\n\t\t// the properties below are optional\n\t\texcludedRules: []interface{}{\n\t\t\t&excludedRuleProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t},\n\t\t},\n\t\tmanagedRuleGroupConfigs: []interface{}{\n\t\t\t&managedRuleGroupConfigProperty{\n\t\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t},\n\t\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tscopeDownStatement: &statementProperty{\n\t\t\tandStatement: &andStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t},\n\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t},\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t},\n\t\t\tmanagedRuleGroupStatement: managedRuleGroupStatementProperty_,\n\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\tstatement: statementProperty_,\n\t\t\t},\n\t\t\torStatement: &orStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t},\n\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tsize: jsii.Number(123),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t},\n\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tversion: jsii.String(\"version\"),\n\t},\n\tnotStatement: &notStatementProperty{\n\t\tstatement: &statementProperty{\n\t\t\tandStatement: &andStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t},\n\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t},\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t},\n\t\t\tmanagedRuleGroupStatement: &managedRuleGroupStatementProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tvendorName: jsii.String(\"vendorName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmanagedRuleGroupConfigs: []interface{}{\n\t\t\t\t\t&managedRuleGroupConfigProperty{\n\t\t\t\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\t\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\t\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t},\n\t\t\tnotStatement: notStatementProperty_,\n\t\t\torStatement: &orStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t},\n\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tsize: jsii.Number(123),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t},\n\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\torStatement: &orStatementProperty{\n\t\tstatements: []interface{}{\n\t\t\t&statementProperty{\n\t\t\t\tandStatement: &andStatementProperty{\n\t\t\t\t\tstatements: []interface{}{\n\t\t\t\t\t\tstatementProperty_,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t\t},\n\t\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t\t},\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\t},\n\t\t\t\tmanagedRuleGroupStatement: &managedRuleGroupStatementProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvendorName: jsii.String(\"vendorName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmanagedRuleGroupConfigs: []interface{}{\n\t\t\t\t\t\t&managedRuleGroupConfigProperty{\n\t\t\t\t\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\t\t\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\t\t\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t\t},\n\t\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\t\tstatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\torStatement: orStatementProperty_,\n\t\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\t\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tsize: jsii.Number(123),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t\t},\n\t\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\trateBasedStatement: &rateBasedStatementProperty{\n\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\tlimit: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t},\n\t\tscopeDownStatement: &statementProperty{\n\t\t\tandStatement: &andStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t},\n\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t},\n\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t},\n\t\t\tmanagedRuleGroupStatement: &managedRuleGroupStatementProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tvendorName: jsii.String(\"vendorName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmanagedRuleGroupConfigs: []interface{}{\n\t\t\t\t\t&managedRuleGroupConfigProperty{\n\t\t\t\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\t\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\t\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t},\n\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\tstatement: statementProperty_,\n\t\t\t},\n\t\t\torStatement: &orStatementProperty{\n\t\t\t\tstatements: []interface{}{\n\t\t\t\t\tstatementProperty_,\n\t\t\t\t},\n\t\t\t},\n\t\t\trateBasedStatement: rateBasedStatementProperty_,\n\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\tsize: jsii.Number(123),\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t},\n\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t},\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\turiPath: uriPath,\n\t\t\t\t},\n\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tregexMatchStatement: &regexMatchStatementProperty{\n\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\tallQueryArguments: allQueryArguments,\n\t\t\tbody: &bodyProperty{\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tcookies: &cookiesProperty{\n\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\theaders: &headersProperty{\n\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\turiPath: uriPath,\n\t\t},\n\t\tregexString: jsii.String(\"regexString\"),\n\t\ttextTransformations: []interface{}{\n\t\t\t&textTransformationProperty{\n\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t},\n\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\tarn: jsii.String(\"arn\"),\n\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\tallQueryArguments: allQueryArguments,\n\t\t\tbody: &bodyProperty{\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tcookies: &cookiesProperty{\n\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\theaders: &headersProperty{\n\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\turiPath: uriPath,\n\t\t},\n\t\ttextTransformations: []interface{}{\n\t\t\t&textTransformationProperty{\n\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t},\n\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\tarn: jsii.String(\"arn\"),\n\n\t\t// the properties below are optional\n\t\texcludedRules: []interface{}{\n\t\t\t&excludedRuleProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t},\n\t\t},\n\t},\n\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\tallQueryArguments: allQueryArguments,\n\t\t\tbody: &bodyProperty{\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tcookies: &cookiesProperty{\n\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\theaders: &headersProperty{\n\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\turiPath: uriPath,\n\t\t},\n\t\tsize: jsii.Number(123),\n\t\ttextTransformations: []interface{}{\n\t\t\t&textTransformationProperty{\n\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t},\n\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\tallQueryArguments: allQueryArguments,\n\t\t\tbody: &bodyProperty{\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tcookies: &cookiesProperty{\n\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\theaders: &headersProperty{\n\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\turiPath: uriPath,\n\t\t},\n\t\ttextTransformations: []interface{}{\n\t\t\t&textTransformationProperty{\n\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t},\n\txssMatchStatement: &xssMatchStatementProperty{\n\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\tallQueryArguments: allQueryArguments,\n\t\t\tbody: &bodyProperty{\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tcookies: &cookiesProperty{\n\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\theaders: &headersProperty{\n\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\tall: all,\n\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t},\n\t\t\tmethod: method,\n\t\t\tqueryString: queryString,\n\t\t\tsingleHeader: singleHeader,\n\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\turiPath: uriPath,\n\t\t},\n\t\ttextTransformations: []interface{}{\n\t\t\t&textTransformationProperty{\n\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const andStatementProperty_: wafv2.CfnWebACL.AndStatementProperty;\ndeclare const managedRuleGroupStatementProperty_: wafv2.CfnWebACL.ManagedRuleGroupStatementProperty;\ndeclare const method: any;\ndeclare const notStatementProperty_: wafv2.CfnWebACL.NotStatementProperty;\ndeclare const orStatementProperty_: wafv2.CfnWebACL.OrStatementProperty;\ndeclare const queryString: any;\ndeclare const rateBasedStatementProperty_: wafv2.CfnWebACL.RateBasedStatementProperty;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst statementProperty: wafv2.CfnWebACL.StatementProperty = {\n  andStatement: {\n    statements: [{\n      andStatement: andStatementProperty_,\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    }],\n  },\n  byteMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    positionalConstraint: 'positionalConstraint',\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n\n    // the properties below are optional\n    searchString: 'searchString',\n    searchStringBase64: 'searchStringBase64',\n  },\n  geoMatchStatement: {\n    countryCodes: ['countryCodes'],\n    forwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n    },\n  },\n  ipSetReferenceStatement: {\n    arn: 'arn',\n\n    // the properties below are optional\n    ipSetForwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n      position: 'position',\n    },\n  },\n  labelMatchStatement: {\n    key: 'key',\n    scope: 'scope',\n  },\n  managedRuleGroupStatement: {\n    name: 'name',\n    vendorName: 'vendorName',\n\n    // the properties below are optional\n    excludedRules: [{\n      name: 'name',\n    }],\n    managedRuleGroupConfigs: [{\n      loginPath: 'loginPath',\n      passwordField: {\n        identifier: 'identifier',\n      },\n      payloadType: 'payloadType',\n      usernameField: {\n        identifier: 'identifier',\n      },\n    }],\n    scopeDownStatement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: managedRuleGroupStatementProperty_,\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    version: 'version',\n  },\n  notStatement: {\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: notStatementProperty_,\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n  },\n  orStatement: {\n    statements: [{\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: orStatementProperty_,\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    }],\n  },\n  rateBasedStatement: {\n    aggregateKeyType: 'aggregateKeyType',\n    limit: 123,\n\n    // the properties below are optional\n    forwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n    },\n    scopeDownStatement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: rateBasedStatementProperty_,\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n  },\n  regexMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    regexString: 'regexString',\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  regexPatternSetReferenceStatement: {\n    arn: 'arn',\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  ruleGroupReferenceStatement: {\n    arn: 'arn',\n\n    // the properties below are optional\n    excludedRules: [{\n      name: 'name',\n    }],\n  },\n  sizeConstraintStatement: {\n    comparisonOperator: 'comparisonOperator',\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    size: 123,\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  sqliMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n\n    // the properties below are optional\n    sensitivityLevel: 'sensitivityLevel',\n  },\n  xssMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.StatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.StatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const andStatementProperty_: wafv2.CfnWebACL.AndStatementProperty;\ndeclare const managedRuleGroupStatementProperty_: wafv2.CfnWebACL.ManagedRuleGroupStatementProperty;\ndeclare const method: any;\ndeclare const notStatementProperty_: wafv2.CfnWebACL.NotStatementProperty;\ndeclare const orStatementProperty_: wafv2.CfnWebACL.OrStatementProperty;\ndeclare const queryString: any;\ndeclare const rateBasedStatementProperty_: wafv2.CfnWebACL.RateBasedStatementProperty;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst statementProperty: wafv2.CfnWebACL.StatementProperty = {\n  andStatement: {\n    statements: [{\n      andStatement: andStatementProperty_,\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    }],\n  },\n  byteMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    positionalConstraint: 'positionalConstraint',\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n\n    // the properties below are optional\n    searchString: 'searchString',\n    searchStringBase64: 'searchStringBase64',\n  },\n  geoMatchStatement: {\n    countryCodes: ['countryCodes'],\n    forwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n    },\n  },\n  ipSetReferenceStatement: {\n    arn: 'arn',\n\n    // the properties below are optional\n    ipSetForwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n      position: 'position',\n    },\n  },\n  labelMatchStatement: {\n    key: 'key',\n    scope: 'scope',\n  },\n  managedRuleGroupStatement: {\n    name: 'name',\n    vendorName: 'vendorName',\n\n    // the properties below are optional\n    excludedRules: [{\n      name: 'name',\n    }],\n    managedRuleGroupConfigs: [{\n      loginPath: 'loginPath',\n      passwordField: {\n        identifier: 'identifier',\n      },\n      payloadType: 'payloadType',\n      usernameField: {\n        identifier: 'identifier',\n      },\n    }],\n    scopeDownStatement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: managedRuleGroupStatementProperty_,\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    version: 'version',\n  },\n  notStatement: {\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: notStatementProperty_,\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n  },\n  orStatement: {\n    statements: [{\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: orStatementProperty_,\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    }],\n  },\n  rateBasedStatement: {\n    aggregateKeyType: 'aggregateKeyType',\n    limit: 123,\n\n    // the properties below are optional\n    forwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n    },\n    scopeDownStatement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: rateBasedStatementProperty_,\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n  },\n  regexMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    regexString: 'regexString',\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  regexPatternSetReferenceStatement: {\n    arn: 'arn',\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  ruleGroupReferenceStatement: {\n    arn: 'arn',\n\n    // the properties below are optional\n    excludedRules: [{\n      name: 'name',\n    }],\n  },\n  sizeConstraintStatement: {\n    comparisonOperator: 'comparisonOperator',\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    size: 123,\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  sqliMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n\n    // the properties below are optional\n    sensitivityLevel: 'sensitivityLevel',\n  },\n  xssMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 47,
        "10": 668,
        "75": 1905,
        "125": 7,
        "130": 13,
        "153": 14,
        "169": 7,
        "192": 248,
        "193": 458,
        "225": 14,
        "242": 14,
        "243": 14,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1520,
        "290": 1
      },
      "fqnsFingerprint": "3c635d8f8871b2d42909f3a0795fb562d5f042a8bceb92c167e7a471dc787668"
    },
    "7e7154d23b3492e2d6e1bdfd9a2da0f69ddd5602eea2079ef4b1155b2efd1705": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ntext_transformation_property = wafv2.CfnWebACL.TextTransformationProperty(\n    priority=123,\n    type=\"type\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nTextTransformationProperty textTransformationProperty = new TextTransformationProperty {\n    Priority = 123,\n    Type = \"type\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nTextTransformationProperty textTransformationProperty = TextTransformationProperty.builder()\n        .priority(123)\n        .type(\"type\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ntextTransformationProperty := &textTransformationProperty{\n\tpriority: jsii.Number(123),\n\ttype: jsii.String(\"type\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst textTransformationProperty: wafv2.CfnWebACL.TextTransformationProperty = {\n  priority: 123,\n  type: 'type',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.TextTransformationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.TextTransformationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst textTransformationProperty: wafv2.CfnWebACL.TextTransformationProperty = {\n  priority: 123,\n  type: 'type',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "c385487b64bba4f68124e64e67f31dc92b7d13eb51b5f5e53d1df7fbdee2b656"
    },
    "5b9363708e048513d01f763ba65c6eb4e10312ce915b408c5f358f054057ecd2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\nvisibility_config_property = wafv2.CfnWebACL.VisibilityConfigProperty(\n    cloud_watch_metrics_enabled=False,\n    metric_name=\"metricName\",\n    sampled_requests_enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nVisibilityConfigProperty visibilityConfigProperty = new VisibilityConfigProperty {\n    CloudWatchMetricsEnabled = false,\n    MetricName = \"metricName\",\n    SampledRequestsEnabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nVisibilityConfigProperty visibilityConfigProperty = VisibilityConfigProperty.builder()\n        .cloudWatchMetricsEnabled(false)\n        .metricName(\"metricName\")\n        .sampledRequestsEnabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvisibilityConfigProperty := &visibilityConfigProperty{\n\tcloudWatchMetricsEnabled: jsii.Boolean(false),\n\tmetricName: jsii.String(\"metricName\"),\n\tsampledRequestsEnabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst visibilityConfigProperty: wafv2.CfnWebACL.VisibilityConfigProperty = {\n  cloudWatchMetricsEnabled: false,\n  metricName: 'metricName',\n  sampledRequestsEnabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.VisibilityConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.VisibilityConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst visibilityConfigProperty: wafv2.CfnWebACL.VisibilityConfigProperty = {\n  cloudWatchMetricsEnabled: false,\n  metricName: 'metricName',\n  sampledRequestsEnabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 8,
        "91": 2,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "bf22d2a9aaae6c7a1acc896d481089c3a75e0ac3957685908e56e31bedeffd49"
    },
    "1c2368c8780302320cbc029f70f95f6bd0732ce1c8546d5fb31f7fa702563a84": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# method: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# uri_path: Any\n\nxss_match_statement_property = wafv2.CfnWebACL.XssMatchStatementProperty(\n    field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n        all_query_arguments=all_query_arguments,\n        body=wafv2.CfnWebACL.BodyProperty(\n            oversize_handling=\"oversizeHandling\"\n        ),\n        cookies=wafv2.CfnWebACL.CookiesProperty(\n            match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                all=all,\n                excluded_cookies=[\"excludedCookies\"],\n                included_cookies=[\"includedCookies\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        headers=wafv2.CfnWebACL.HeadersProperty(\n            match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                all=all,\n                excluded_headers=[\"excludedHeaders\"],\n                included_headers=[\"includedHeaders\"]\n            ),\n            match_scope=\"matchScope\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        json_body=wafv2.CfnWebACL.JsonBodyProperty(\n            match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                all=all,\n                included_paths=[\"includedPaths\"]\n            ),\n            match_scope=\"matchScope\",\n\n            # the properties below are optional\n            invalid_fallback_behavior=\"invalidFallbackBehavior\",\n            oversize_handling=\"oversizeHandling\"\n        ),\n        method=method,\n        query_string=query_string,\n        single_header=single_header,\n        single_query_argument=single_query_argument,\n        uri_path=uri_path\n    ),\n    text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n        priority=123,\n        type=\"type\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar method;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nvar uriPath;\n\nXssMatchStatementProperty xssMatchStatementProperty = new XssMatchStatementProperty {\n    FieldToMatch = new FieldToMatchProperty {\n        AllQueryArguments = allQueryArguments,\n        Body = new BodyProperty {\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Cookies = new CookiesProperty {\n            MatchPattern = new CookieMatchPatternProperty {\n                All = all,\n                ExcludedCookies = new [] { \"excludedCookies\" },\n                IncludedCookies = new [] { \"includedCookies\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Headers = new HeadersProperty {\n            MatchPattern = new HeaderMatchPatternProperty {\n                All = all,\n                ExcludedHeaders = new [] { \"excludedHeaders\" },\n                IncludedHeaders = new [] { \"includedHeaders\" }\n            },\n            MatchScope = \"matchScope\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        JsonBody = new JsonBodyProperty {\n            MatchPattern = new JsonMatchPatternProperty {\n                All = all,\n                IncludedPaths = new [] { \"includedPaths\" }\n            },\n            MatchScope = \"matchScope\",\n\n            // the properties below are optional\n            InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n            OversizeHandling = \"oversizeHandling\"\n        },\n        Method = method,\n        QueryString = queryString,\n        SingleHeader = singleHeader,\n        SingleQueryArgument = singleQueryArgument,\n        UriPath = uriPath\n    },\n    TextTransformations = new [] { new TextTransformationProperty {\n        Priority = 123,\n        Type = \"type\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject method;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nObject uriPath;\n\nXssMatchStatementProperty xssMatchStatementProperty = XssMatchStatementProperty.builder()\n        .fieldToMatch(FieldToMatchProperty.builder()\n                .allQueryArguments(allQueryArguments)\n                .body(BodyProperty.builder()\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .cookies(CookiesProperty.builder()\n                        .matchPattern(CookieMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedCookies(List.of(\"excludedCookies\"))\n                                .includedCookies(List.of(\"includedCookies\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .headers(HeadersProperty.builder()\n                        .matchPattern(HeaderMatchPatternProperty.builder()\n                                .all(all)\n                                .excludedHeaders(List.of(\"excludedHeaders\"))\n                                .includedHeaders(List.of(\"includedHeaders\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .jsonBody(JsonBodyProperty.builder()\n                        .matchPattern(JsonMatchPatternProperty.builder()\n                                .all(all)\n                                .includedPaths(List.of(\"includedPaths\"))\n                                .build())\n                        .matchScope(\"matchScope\")\n\n                        // the properties below are optional\n                        .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                        .oversizeHandling(\"oversizeHandling\")\n                        .build())\n                .method(method)\n                .queryString(queryString)\n                .singleHeader(singleHeader)\n                .singleQueryArgument(singleQueryArgument)\n                .uriPath(uriPath)\n                .build())\n        .textTransformations(List.of(TextTransformationProperty.builder()\n                .priority(123)\n                .type(\"type\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar method interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar uriPath interface{}\n\nxssMatchStatementProperty := &xssMatchStatementProperty{\n\tfieldToMatch: &fieldToMatchProperty{\n\t\tallQueryArguments: allQueryArguments,\n\t\tbody: &bodyProperty{\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tcookies: &cookiesProperty{\n\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t},\n\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\theaders: &headersProperty{\n\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t},\n\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tjsonBody: &jsonBodyProperty{\n\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\tall: all,\n\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t// the properties below are optional\n\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t},\n\t\tmethod: method,\n\t\tqueryString: queryString,\n\t\tsingleHeader: singleHeader,\n\t\tsingleQueryArgument: singleQueryArgument,\n\t\turiPath: uriPath,\n\t},\n\ttextTransformations: []interface{}{\n\t\t&textTransformationProperty{\n\t\t\tpriority: jsii.Number(123),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst xssMatchStatementProperty: wafv2.CfnWebACL.XssMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.XssMatchStatementProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACL.XssMatchStatementProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst xssMatchStatementProperty: wafv2.CfnWebACL.XssMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 15,
        "75": 54,
        "125": 7,
        "130": 7,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 10,
        "225": 8,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 33,
        "290": 1
      },
      "fqnsFingerprint": "3f8b700aaf3995106704f38465d82db5530cc0ba644519d6e05685983df6fa37"
    },
    "f9a9d3c5c6df84bb88c415f6d30fca37ba2f10033a46aac8cb8ba625334cf10e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncfn_web_aCLAssociation = wafv2.CfnWebACLAssociation(self, \"MyCfnWebACLAssociation\",\n    resource_arn=\"resourceArn\",\n    web_acl_arn=\"webAclArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCfnWebACLAssociation cfnWebACLAssociation = new CfnWebACLAssociation(this, \"MyCfnWebACLAssociation\", new CfnWebACLAssociationProps {\n    ResourceArn = \"resourceArn\",\n    WebAclArn = \"webAclArn\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCfnWebACLAssociation cfnWebACLAssociation = CfnWebACLAssociation.Builder.create(this, \"MyCfnWebACLAssociation\")\n        .resourceArn(\"resourceArn\")\n        .webAclArn(\"webAclArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncfnWebACLAssociation := wafv2.NewCfnWebACLAssociation(this, jsii.String(\"MyCfnWebACLAssociation\"), &cfnWebACLAssociationProps{\n\tresourceArn: jsii.String(\"resourceArn\"),\n\twebAclArn: jsii.String(\"webAclArn\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst cfnWebACLAssociation = new wafv2.CfnWebACLAssociation(this, 'MyCfnWebACLAssociation', {\n  resourceArn: 'resourceArn',\n  webAclArn: 'webAclArn',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACLAssociation"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACLAssociation",
        "@aws-cdk/aws-wafv2.CfnWebACLAssociationProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnWebACLAssociation = new wafv2.CfnWebACLAssociation(this, 'MyCfnWebACLAssociation', {\n  resourceArn: 'resourceArn',\n  webAclArn: 'webAclArn',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "c321747a9ee38da914b4cd8469504793805cb2955aba7e55884d68363d8e861d"
    },
    "70babd838d4b58e0a653a9efd61a31dc6fbbc09d35c277107a67db9fe2f2955a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\ncfn_web_aCLAssociation_props = wafv2.CfnWebACLAssociationProps(\n    resource_arn=\"resourceArn\",\n    web_acl_arn=\"webAclArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nCfnWebACLAssociationProps cfnWebACLAssociationProps = new CfnWebACLAssociationProps {\n    ResourceArn = \"resourceArn\",\n    WebAclArn = \"webAclArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nCfnWebACLAssociationProps cfnWebACLAssociationProps = CfnWebACLAssociationProps.builder()\n        .resourceArn(\"resourceArn\")\n        .webAclArn(\"webAclArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\ncfnWebACLAssociationProps := &cfnWebACLAssociationProps{\n\tresourceArn: jsii.String(\"resourceArn\"),\n\twebAclArn: jsii.String(\"webAclArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst cfnWebACLAssociationProps: wafv2.CfnWebACLAssociationProps = {\n  resourceArn: 'resourceArn',\n  webAclArn: 'webAclArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACLAssociationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACLAssociationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnWebACLAssociationProps: wafv2.CfnWebACLAssociationProps = {\n  resourceArn: 'resourceArn',\n  webAclArn: 'webAclArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "3d98fc8879c4c6c34b8f3b693c0189bbf90114b9f09d58284068b9dc3df82959"
    },
    "6d80ec93440cd999c0cd220932b124cd392d00e3b64cd4705150b1ed6d20fd5e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_wafv2 as wafv2\n\n# all: Any\n# all_query_arguments: Any\n# count: Any\n# method: Any\n# none: Any\n# query_string: Any\n# single_header: Any\n# single_query_argument: Any\n# statement_property_: wafv2.CfnWebACL.StatementProperty\n# uri_path: Any\n\ncfn_web_aCLProps = wafv2.CfnWebACLProps(\n    default_action=wafv2.CfnWebACL.DefaultActionProperty(\n        allow=wafv2.CfnWebACL.AllowActionProperty(\n            custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n                insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            )\n        ),\n        block=wafv2.CfnWebACL.BlockActionProperty(\n            custom_response=wafv2.CfnWebACL.CustomResponseProperty(\n                response_code=123,\n\n                # the properties below are optional\n                custom_response_body_key=\"customResponseBodyKey\",\n                response_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            )\n        )\n    ),\n    scope=\"scope\",\n    visibility_config=wafv2.CfnWebACL.VisibilityConfigProperty(\n        cloud_watch_metrics_enabled=False,\n        metric_name=\"metricName\",\n        sampled_requests_enabled=False\n    ),\n\n    # the properties below are optional\n    captcha_config=wafv2.CfnWebACL.CaptchaConfigProperty(\n        immunity_time_property=wafv2.CfnWebACL.ImmunityTimePropertyProperty(\n            immunity_time=123\n        )\n    ),\n    custom_response_bodies={\n        \"custom_response_bodies_key\": wafv2.CfnWebACL.CustomResponseBodyProperty(\n            content=\"content\",\n            content_type=\"contentType\"\n        )\n    },\n    description=\"description\",\n    name=\"name\",\n    rules=[wafv2.CfnWebACL.RuleProperty(\n        name=\"name\",\n        priority=123,\n        statement=wafv2.CfnWebACL.StatementProperty(\n            and_statement=wafv2.CfnWebACL.AndStatementProperty(\n                statements=[statement_property_]\n            ),\n            byte_match_statement=wafv2.CfnWebACL.ByteMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                positional_constraint=\"positionalConstraint\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                search_string=\"searchString\",\n                search_string_base64=\"searchStringBase64\"\n            ),\n            geo_match_statement=wafv2.CfnWebACL.GeoMatchStatementProperty(\n                country_codes=[\"countryCodes\"],\n                forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                )\n            ),\n            ip_set_reference_statement={\n                \"arn\": \"arn\",\n\n                # the properties below are optional\n                \"ip_set_forwarded_ip_config\": {\n                    \"fallback_behavior\": \"fallbackBehavior\",\n                    \"header_name\": \"headerName\",\n                    \"position\": \"position\"\n                }\n            },\n            label_match_statement=wafv2.CfnWebACL.LabelMatchStatementProperty(\n                key=\"key\",\n                scope=\"scope\"\n            ),\n            managed_rule_group_statement=wafv2.CfnWebACL.ManagedRuleGroupStatementProperty(\n                name=\"name\",\n                vendor_name=\"vendorName\",\n\n                # the properties below are optional\n                excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                    name=\"name\"\n                )],\n                managed_rule_group_configs=[wafv2.CfnWebACL.ManagedRuleGroupConfigProperty(\n                    login_path=\"loginPath\",\n                    password_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                        identifier=\"identifier\"\n                    ),\n                    payload_type=\"payloadType\",\n                    username_field=wafv2.CfnWebACL.FieldIdentifierProperty(\n                        identifier=\"identifier\"\n                    )\n                )],\n                scope_down_statement=statement_property_,\n                version=\"version\"\n            ),\n            not_statement=wafv2.CfnWebACL.NotStatementProperty(\n                statement=statement_property_\n            ),\n            or_statement=wafv2.CfnWebACL.OrStatementProperty(\n                statements=[statement_property_]\n            ),\n            rate_based_statement=wafv2.CfnWebACL.RateBasedStatementProperty(\n                aggregate_key_type=\"aggregateKeyType\",\n                limit=123,\n\n                # the properties below are optional\n                forwarded_ip_config=wafv2.CfnWebACL.ForwardedIPConfigurationProperty(\n                    fallback_behavior=\"fallbackBehavior\",\n                    header_name=\"headerName\"\n                ),\n                scope_down_statement=statement_property_\n            ),\n            regex_match_statement=wafv2.CfnWebACL.RegexMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                regex_string=\"regexString\",\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            regex_pattern_set_reference_statement=wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty(\n                arn=\"arn\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            rule_group_reference_statement=wafv2.CfnWebACL.RuleGroupReferenceStatementProperty(\n                arn=\"arn\",\n\n                # the properties below are optional\n                excluded_rules=[wafv2.CfnWebACL.ExcludedRuleProperty(\n                    name=\"name\"\n                )]\n            ),\n            size_constraint_statement=wafv2.CfnWebACL.SizeConstraintStatementProperty(\n                comparison_operator=\"comparisonOperator\",\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                size=123,\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            ),\n            sqli_match_statement=wafv2.CfnWebACL.SqliMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )],\n\n                # the properties below are optional\n                sensitivity_level=\"sensitivityLevel\"\n            ),\n            xss_match_statement=wafv2.CfnWebACL.XssMatchStatementProperty(\n                field_to_match=wafv2.CfnWebACL.FieldToMatchProperty(\n                    all_query_arguments=all_query_arguments,\n                    body=wafv2.CfnWebACL.BodyProperty(\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    cookies=wafv2.CfnWebACL.CookiesProperty(\n                        match_pattern=wafv2.CfnWebACL.CookieMatchPatternProperty(\n                            all=all,\n                            excluded_cookies=[\"excludedCookies\"],\n                            included_cookies=[\"includedCookies\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    headers=wafv2.CfnWebACL.HeadersProperty(\n                        match_pattern=wafv2.CfnWebACL.HeaderMatchPatternProperty(\n                            all=all,\n                            excluded_headers=[\"excludedHeaders\"],\n                            included_headers=[\"includedHeaders\"]\n                        ),\n                        match_scope=\"matchScope\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    json_body=wafv2.CfnWebACL.JsonBodyProperty(\n                        match_pattern=wafv2.CfnWebACL.JsonMatchPatternProperty(\n                            all=all,\n                            included_paths=[\"includedPaths\"]\n                        ),\n                        match_scope=\"matchScope\",\n\n                        # the properties below are optional\n                        invalid_fallback_behavior=\"invalidFallbackBehavior\",\n                        oversize_handling=\"oversizeHandling\"\n                    ),\n                    method=method,\n                    query_string=query_string,\n                    single_header=single_header,\n                    single_query_argument=single_query_argument,\n                    uri_path=uri_path\n                ),\n                text_transformations=[wafv2.CfnWebACL.TextTransformationProperty(\n                    priority=123,\n                    type=\"type\"\n                )]\n            )\n        ),\n        visibility_config=wafv2.CfnWebACL.VisibilityConfigProperty(\n            cloud_watch_metrics_enabled=False,\n            metric_name=\"metricName\",\n            sampled_requests_enabled=False\n        ),\n\n        # the properties below are optional\n        action=wafv2.CfnWebACL.RuleActionProperty(\n            allow=wafv2.CfnWebACL.AllowActionProperty(\n                custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n                    insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                        name=\"name\",\n                        value=\"value\"\n                    )]\n                )\n            ),\n            block=wafv2.CfnWebACL.BlockActionProperty(\n                custom_response=wafv2.CfnWebACL.CustomResponseProperty(\n                    response_code=123,\n\n                    # the properties below are optional\n                    custom_response_body_key=\"customResponseBodyKey\",\n                    response_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                        name=\"name\",\n                        value=\"value\"\n                    )]\n                )\n            ),\n            captcha=wafv2.CfnWebACL.CaptchaActionProperty(\n                custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n                    insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                        name=\"name\",\n                        value=\"value\"\n                    )]\n                )\n            ),\n            count=wafv2.CfnWebACL.CountActionProperty(\n                custom_request_handling=wafv2.CfnWebACL.CustomRequestHandlingProperty(\n                    insert_headers=[wafv2.CfnWebACL.CustomHTTPHeaderProperty(\n                        name=\"name\",\n                        value=\"value\"\n                    )]\n                )\n            )\n        ),\n        captcha_config=wafv2.CfnWebACL.CaptchaConfigProperty(\n            immunity_time_property=wafv2.CfnWebACL.ImmunityTimePropertyProperty(\n                immunity_time=123\n            )\n        ),\n        override_action=wafv2.CfnWebACL.OverrideActionProperty(\n            count=count,\n            none=none\n        ),\n        rule_labels=[wafv2.CfnWebACL.LabelProperty(\n            name=\"name\"\n        )]\n    )],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.WAFv2;\n\nvar all;\nvar allQueryArguments;\nvar count;\nvar method;\nvar none;\nvar queryString;\nvar singleHeader;\nvar singleQueryArgument;\nStatementProperty statementProperty_;\nvar uriPath;\n\nCfnWebACLProps cfnWebACLProps = new CfnWebACLProps {\n    DefaultAction = new DefaultActionProperty {\n        Allow = new AllowActionProperty {\n            CustomRequestHandling = new CustomRequestHandlingProperty {\n                InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            }\n        },\n        Block = new BlockActionProperty {\n            CustomResponse = new CustomResponseProperty {\n                ResponseCode = 123,\n\n                // the properties below are optional\n                CustomResponseBodyKey = \"customResponseBodyKey\",\n                ResponseHeaders = new [] { new CustomHTTPHeaderProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            }\n        }\n    },\n    Scope = \"scope\",\n    VisibilityConfig = new VisibilityConfigProperty {\n        CloudWatchMetricsEnabled = false,\n        MetricName = \"metricName\",\n        SampledRequestsEnabled = false\n    },\n\n    // the properties below are optional\n    CaptchaConfig = new CaptchaConfigProperty {\n        ImmunityTimeProperty = new ImmunityTimePropertyProperty {\n            ImmunityTime = 123\n        }\n    },\n    CustomResponseBodies = new Dictionary<string, object> {\n        { \"customResponseBodiesKey\", new CustomResponseBodyProperty {\n            Content = \"content\",\n            ContentType = \"contentType\"\n        } }\n    },\n    Description = \"description\",\n    Name = \"name\",\n    Rules = new [] { new RuleProperty {\n        Name = \"name\",\n        Priority = 123,\n        Statement = new StatementProperty {\n            AndStatement = new AndStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            ByteMatchStatement = new ByteMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                PositionalConstraint = \"positionalConstraint\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SearchString = \"searchString\",\n                SearchStringBase64 = \"searchStringBase64\"\n            },\n            GeoMatchStatement = new GeoMatchStatementProperty {\n                CountryCodes = new [] { \"countryCodes\" },\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                }\n            },\n            IpSetReferenceStatement = new Dictionary<string, object> {\n                { \"arn\", \"arn\" },\n\n                // the properties below are optional\n                { \"ipSetForwardedIpConfig\", new Dictionary<string, string> {\n                    { \"fallbackBehavior\", \"fallbackBehavior\" },\n                    { \"headerName\", \"headerName\" },\n                    { \"position\", \"position\" }\n                } }\n            },\n            LabelMatchStatement = new LabelMatchStatementProperty {\n                Key = \"key\",\n                Scope = \"scope\"\n            },\n            ManagedRuleGroupStatement = new ManagedRuleGroupStatementProperty {\n                Name = \"name\",\n                VendorName = \"vendorName\",\n\n                // the properties below are optional\n                ExcludedRules = new [] { new ExcludedRuleProperty {\n                    Name = \"name\"\n                } },\n                ManagedRuleGroupConfigs = new [] { new ManagedRuleGroupConfigProperty {\n                    LoginPath = \"loginPath\",\n                    PasswordField = new FieldIdentifierProperty {\n                        Identifier = \"identifier\"\n                    },\n                    PayloadType = \"payloadType\",\n                    UsernameField = new FieldIdentifierProperty {\n                        Identifier = \"identifier\"\n                    }\n                } },\n                ScopeDownStatement = statementProperty_,\n                Version = \"version\"\n            },\n            NotStatement = new NotStatementProperty {\n                Statement = statementProperty_\n            },\n            OrStatement = new OrStatementProperty {\n                Statements = new [] { statementProperty_ }\n            },\n            RateBasedStatement = new RateBasedStatementProperty {\n                AggregateKeyType = \"aggregateKeyType\",\n                Limit = 123,\n\n                // the properties below are optional\n                ForwardedIpConfig = new ForwardedIPConfigurationProperty {\n                    FallbackBehavior = \"fallbackBehavior\",\n                    HeaderName = \"headerName\"\n                },\n                ScopeDownStatement = statementProperty_\n            },\n            RegexMatchStatement = new RegexMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                RegexString = \"regexString\",\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RegexPatternSetReferenceStatement = new RegexPatternSetReferenceStatementProperty {\n                Arn = \"arn\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            RuleGroupReferenceStatement = new RuleGroupReferenceStatementProperty {\n                Arn = \"arn\",\n\n                // the properties below are optional\n                ExcludedRules = new [] { new ExcludedRuleProperty {\n                    Name = \"name\"\n                } }\n            },\n            SizeConstraintStatement = new SizeConstraintStatementProperty {\n                ComparisonOperator = \"comparisonOperator\",\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                Size = 123,\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            },\n            SqliMatchStatement = new SqliMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } },\n\n                // the properties below are optional\n                SensitivityLevel = \"sensitivityLevel\"\n            },\n            XssMatchStatement = new XssMatchStatementProperty {\n                FieldToMatch = new FieldToMatchProperty {\n                    AllQueryArguments = allQueryArguments,\n                    Body = new BodyProperty {\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Cookies = new CookiesProperty {\n                        MatchPattern = new CookieMatchPatternProperty {\n                            All = all,\n                            ExcludedCookies = new [] { \"excludedCookies\" },\n                            IncludedCookies = new [] { \"includedCookies\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Headers = new HeadersProperty {\n                        MatchPattern = new HeaderMatchPatternProperty {\n                            All = all,\n                            ExcludedHeaders = new [] { \"excludedHeaders\" },\n                            IncludedHeaders = new [] { \"includedHeaders\" }\n                        },\n                        MatchScope = \"matchScope\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    JsonBody = new JsonBodyProperty {\n                        MatchPattern = new JsonMatchPatternProperty {\n                            All = all,\n                            IncludedPaths = new [] { \"includedPaths\" }\n                        },\n                        MatchScope = \"matchScope\",\n\n                        // the properties below are optional\n                        InvalidFallbackBehavior = \"invalidFallbackBehavior\",\n                        OversizeHandling = \"oversizeHandling\"\n                    },\n                    Method = method,\n                    QueryString = queryString,\n                    SingleHeader = singleHeader,\n                    SingleQueryArgument = singleQueryArgument,\n                    UriPath = uriPath\n                },\n                TextTransformations = new [] { new TextTransformationProperty {\n                    Priority = 123,\n                    Type = \"type\"\n                } }\n            }\n        },\n        VisibilityConfig = new VisibilityConfigProperty {\n            CloudWatchMetricsEnabled = false,\n            MetricName = \"metricName\",\n            SampledRequestsEnabled = false\n        },\n\n        // the properties below are optional\n        Action = new RuleActionProperty {\n            Allow = new AllowActionProperty {\n                CustomRequestHandling = new CustomRequestHandlingProperty {\n                    InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                        Name = \"name\",\n                        Value = \"value\"\n                    } }\n                }\n            },\n            Block = new BlockActionProperty {\n                CustomResponse = new CustomResponseProperty {\n                    ResponseCode = 123,\n\n                    // the properties below are optional\n                    CustomResponseBodyKey = \"customResponseBodyKey\",\n                    ResponseHeaders = new [] { new CustomHTTPHeaderProperty {\n                        Name = \"name\",\n                        Value = \"value\"\n                    } }\n                }\n            },\n            Captcha = new CaptchaActionProperty {\n                CustomRequestHandling = new CustomRequestHandlingProperty {\n                    InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                        Name = \"name\",\n                        Value = \"value\"\n                    } }\n                }\n            },\n            Count = new CountActionProperty {\n                CustomRequestHandling = new CustomRequestHandlingProperty {\n                    InsertHeaders = new [] { new CustomHTTPHeaderProperty {\n                        Name = \"name\",\n                        Value = \"value\"\n                    } }\n                }\n            }\n        },\n        CaptchaConfig = new CaptchaConfigProperty {\n            ImmunityTimeProperty = new ImmunityTimePropertyProperty {\n                ImmunityTime = 123\n            }\n        },\n        OverrideAction = new OverrideActionProperty {\n            Count = count,\n            None = none\n        },\n        RuleLabels = new [] { new LabelProperty {\n            Name = \"name\"\n        } }\n    } },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.wafv2.*;\n\nObject all;\nObject allQueryArguments;\nObject count;\nObject method;\nObject none;\nObject queryString;\nObject singleHeader;\nObject singleQueryArgument;\nStatementProperty statementProperty_;\nObject uriPath;\n\nCfnWebACLProps cfnWebACLProps = CfnWebACLProps.builder()\n        .defaultAction(DefaultActionProperty.builder()\n                .allow(AllowActionProperty.builder()\n                        .customRequestHandling(CustomRequestHandlingProperty.builder()\n                                .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build())\n                .block(BlockActionProperty.builder()\n                        .customResponse(CustomResponseProperty.builder()\n                                .responseCode(123)\n\n                                // the properties below are optional\n                                .customResponseBodyKey(\"customResponseBodyKey\")\n                                .responseHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build())\n                .build())\n        .scope(\"scope\")\n        .visibilityConfig(VisibilityConfigProperty.builder()\n                .cloudWatchMetricsEnabled(false)\n                .metricName(\"metricName\")\n                .sampledRequestsEnabled(false)\n                .build())\n\n        // the properties below are optional\n        .captchaConfig(CaptchaConfigProperty.builder()\n                .immunityTimeProperty(ImmunityTimePropertyProperty.builder()\n                        .immunityTime(123)\n                        .build())\n                .build())\n        .customResponseBodies(Map.of(\n                \"customResponseBodiesKey\", CustomResponseBodyProperty.builder()\n                        .content(\"content\")\n                        .contentType(\"contentType\")\n                        .build()))\n        .description(\"description\")\n        .name(\"name\")\n        .rules(List.of(RuleProperty.builder()\n                .name(\"name\")\n                .priority(123)\n                .statement(StatementProperty.builder()\n                        .andStatement(AndStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .byteMatchStatement(ByteMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .positionalConstraint(\"positionalConstraint\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .searchString(\"searchString\")\n                                .searchStringBase64(\"searchStringBase64\")\n                                .build())\n                        .geoMatchStatement(GeoMatchStatementProperty.builder()\n                                .countryCodes(List.of(\"countryCodes\"))\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .build())\n                        .ipSetReferenceStatement(Map.of(\n                                \"arn\", \"arn\",\n\n                                // the properties below are optional\n                                \"ipSetForwardedIpConfig\", Map.of(\n                                        \"fallbackBehavior\", \"fallbackBehavior\",\n                                        \"headerName\", \"headerName\",\n                                        \"position\", \"position\")))\n                        .labelMatchStatement(LabelMatchStatementProperty.builder()\n                                .key(\"key\")\n                                .scope(\"scope\")\n                                .build())\n                        .managedRuleGroupStatement(ManagedRuleGroupStatementProperty.builder()\n                                .name(\"name\")\n                                .vendorName(\"vendorName\")\n\n                                // the properties below are optional\n                                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                        .name(\"name\")\n                                        .build()))\n                                .managedRuleGroupConfigs(List.of(ManagedRuleGroupConfigProperty.builder()\n                                        .loginPath(\"loginPath\")\n                                        .passwordField(FieldIdentifierProperty.builder()\n                                                .identifier(\"identifier\")\n                                                .build())\n                                        .payloadType(\"payloadType\")\n                                        .usernameField(FieldIdentifierProperty.builder()\n                                                .identifier(\"identifier\")\n                                                .build())\n                                        .build()))\n                                .scopeDownStatement(statementProperty_)\n                                .version(\"version\")\n                                .build())\n                        .notStatement(NotStatementProperty.builder()\n                                .statement(statementProperty_)\n                                .build())\n                        .orStatement(OrStatementProperty.builder()\n                                .statements(List.of(statementProperty_))\n                                .build())\n                        .rateBasedStatement(RateBasedStatementProperty.builder()\n                                .aggregateKeyType(\"aggregateKeyType\")\n                                .limit(123)\n\n                                // the properties below are optional\n                                .forwardedIpConfig(ForwardedIPConfigurationProperty.builder()\n                                        .fallbackBehavior(\"fallbackBehavior\")\n                                        .headerName(\"headerName\")\n                                        .build())\n                                .scopeDownStatement(statementProperty_)\n                                .build())\n                        .regexMatchStatement(RegexMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .regexString(\"regexString\")\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .regexPatternSetReferenceStatement(RegexPatternSetReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .ruleGroupReferenceStatement(RuleGroupReferenceStatementProperty.builder()\n                                .arn(\"arn\")\n\n                                // the properties below are optional\n                                .excludedRules(List.of(ExcludedRuleProperty.builder()\n                                        .name(\"name\")\n                                        .build()))\n                                .build())\n                        .sizeConstraintStatement(SizeConstraintStatementProperty.builder()\n                                .comparisonOperator(\"comparisonOperator\")\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .size(123)\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .sqliMatchStatement(SqliMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .sensitivityLevel(\"sensitivityLevel\")\n                                .build())\n                        .xssMatchStatement(XssMatchStatementProperty.builder()\n                                .fieldToMatch(FieldToMatchProperty.builder()\n                                        .allQueryArguments(allQueryArguments)\n                                        .body(BodyProperty.builder()\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .cookies(CookiesProperty.builder()\n                                                .matchPattern(CookieMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedCookies(List.of(\"excludedCookies\"))\n                                                        .includedCookies(List.of(\"includedCookies\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .headers(HeadersProperty.builder()\n                                                .matchPattern(HeaderMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .excludedHeaders(List.of(\"excludedHeaders\"))\n                                                        .includedHeaders(List.of(\"includedHeaders\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .jsonBody(JsonBodyProperty.builder()\n                                                .matchPattern(JsonMatchPatternProperty.builder()\n                                                        .all(all)\n                                                        .includedPaths(List.of(\"includedPaths\"))\n                                                        .build())\n                                                .matchScope(\"matchScope\")\n\n                                                // the properties below are optional\n                                                .invalidFallbackBehavior(\"invalidFallbackBehavior\")\n                                                .oversizeHandling(\"oversizeHandling\")\n                                                .build())\n                                        .method(method)\n                                        .queryString(queryString)\n                                        .singleHeader(singleHeader)\n                                        .singleQueryArgument(singleQueryArgument)\n                                        .uriPath(uriPath)\n                                        .build())\n                                .textTransformations(List.of(TextTransformationProperty.builder()\n                                        .priority(123)\n                                        .type(\"type\")\n                                        .build()))\n                                .build())\n                        .build())\n                .visibilityConfig(VisibilityConfigProperty.builder()\n                        .cloudWatchMetricsEnabled(false)\n                        .metricName(\"metricName\")\n                        .sampledRequestsEnabled(false)\n                        .build())\n\n                // the properties below are optional\n                .action(RuleActionProperty.builder()\n                        .allow(AllowActionProperty.builder()\n                                .customRequestHandling(CustomRequestHandlingProperty.builder()\n                                        .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                                .name(\"name\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .build())\n                        .block(BlockActionProperty.builder()\n                                .customResponse(CustomResponseProperty.builder()\n                                        .responseCode(123)\n\n                                        // the properties below are optional\n                                        .customResponseBodyKey(\"customResponseBodyKey\")\n                                        .responseHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                                .name(\"name\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .build())\n                        .captcha(CaptchaActionProperty.builder()\n                                .customRequestHandling(CustomRequestHandlingProperty.builder()\n                                        .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                                .name(\"name\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .build())\n                        .count(CountActionProperty.builder()\n                                .customRequestHandling(CustomRequestHandlingProperty.builder()\n                                        .insertHeaders(List.of(CustomHTTPHeaderProperty.builder()\n                                                .name(\"name\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .build())\n                        .build())\n                .captchaConfig(CaptchaConfigProperty.builder()\n                        .immunityTimeProperty(ImmunityTimePropertyProperty.builder()\n                                .immunityTime(123)\n                                .build())\n                        .build())\n                .overrideAction(OverrideActionProperty.builder()\n                        .count(count)\n                        .none(none)\n                        .build())\n                .ruleLabels(List.of(LabelProperty.builder()\n                        .name(\"name\")\n                        .build()))\n                .build()))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport wafv2 \"github.com/aws-samples/dummy/awscdkawswafv2\"\n\nvar all interface{}\nvar allQueryArguments interface{}\nvar count interface{}\nvar method interface{}\nvar none interface{}\nvar queryString interface{}\nvar singleHeader interface{}\nvar singleQueryArgument interface{}\nvar statementProperty_ statementProperty\nvar uriPath interface{}\n\ncfnWebACLProps := &cfnWebACLProps{\n\tdefaultAction: &defaultActionProperty{\n\t\tallow: &allowActionProperty{\n\t\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tblock: &blockActionProperty{\n\t\t\tcustomResponse: &customResponseProperty{\n\t\t\t\tresponseCode: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcustomResponseBodyKey: jsii.String(\"customResponseBodyKey\"),\n\t\t\t\tresponseHeaders: []interface{}{\n\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tscope: jsii.String(\"scope\"),\n\tvisibilityConfig: &visibilityConfigProperty{\n\t\tcloudWatchMetricsEnabled: jsii.Boolean(false),\n\t\tmetricName: jsii.String(\"metricName\"),\n\t\tsampledRequestsEnabled: jsii.Boolean(false),\n\t},\n\n\t// the properties below are optional\n\tcaptchaConfig: &captchaConfigProperty{\n\t\timmunityTimeProperty: &immunityTimePropertyProperty{\n\t\t\timmunityTime: jsii.Number(123),\n\t\t},\n\t},\n\tcustomResponseBodies: map[string]interface{}{\n\t\t\"customResponseBodiesKey\": &CustomResponseBodyProperty{\n\t\t\t\"content\": jsii.String(\"content\"),\n\t\t\t\"contentType\": jsii.String(\"contentType\"),\n\t\t},\n\t},\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\trules: []interface{}{\n\t\t&ruleProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tpriority: jsii.Number(123),\n\t\t\tstatement: &statementProperty{\n\t\t\t\tandStatement: &andStatementProperty{\n\t\t\t\t\tstatements: []interface{}{\n\t\t\t\t\t\tstatementProperty_,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tbyteMatchStatement: &byteMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tpositionalConstraint: jsii.String(\"positionalConstraint\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsearchString: jsii.String(\"searchString\"),\n\t\t\t\t\tsearchStringBase64: jsii.String(\"searchStringBase64\"),\n\t\t\t\t},\n\t\t\t\tgeoMatchStatement: &geoMatchStatementProperty{\n\t\t\t\t\tcountryCodes: []*string{\n\t\t\t\t\t\tjsii.String(\"countryCodes\"),\n\t\t\t\t\t},\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tipSetReferenceStatement: map[string]interface{}{\n\t\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\"ipSetForwardedIpConfig\": map[string]*string{\n\t\t\t\t\t\t\"fallbackBehavior\": jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\t\"headerName\": jsii.String(\"headerName\"),\n\t\t\t\t\t\t\"position\": jsii.String(\"position\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlabelMatchStatement: &labelMatchStatementProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tscope: jsii.String(\"scope\"),\n\t\t\t\t},\n\t\t\t\tmanagedRuleGroupStatement: &managedRuleGroupStatementProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvendorName: jsii.String(\"vendorName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmanagedRuleGroupConfigs: []interface{}{\n\t\t\t\t\t\t&managedRuleGroupConfigProperty{\n\t\t\t\t\t\t\tloginPath: jsii.String(\"loginPath\"),\n\t\t\t\t\t\t\tpasswordField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpayloadType: jsii.String(\"payloadType\"),\n\t\t\t\t\t\t\tusernameField: &fieldIdentifierProperty{\n\t\t\t\t\t\t\t\tidentifier: jsii.String(\"identifier\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t\t},\n\t\t\t\tnotStatement: &notStatementProperty{\n\t\t\t\t\tstatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\torStatement: &orStatementProperty{\n\t\t\t\t\tstatements: []interface{}{\n\t\t\t\t\t\tstatementProperty_,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trateBasedStatement: &rateBasedStatementProperty{\n\t\t\t\t\taggregateKeyType: jsii.String(\"aggregateKeyType\"),\n\t\t\t\t\tlimit: jsii.Number(123),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tforwardedIpConfig: &forwardedIPConfigurationProperty{\n\t\t\t\t\t\tfallbackBehavior: jsii.String(\"fallbackBehavior\"),\n\t\t\t\t\t\theaderName: jsii.String(\"headerName\"),\n\t\t\t\t\t},\n\t\t\t\t\tscopeDownStatement: statementProperty_,\n\t\t\t\t},\n\t\t\t\tregexMatchStatement: &regexMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tregexString: jsii.String(\"regexString\"),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tregexPatternSetReferenceStatement: &regexPatternSetReferenceStatementProperty{\n\t\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\truleGroupReferenceStatement: &ruleGroupReferenceStatementProperty{\n\t\t\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\texcludedRules: []interface{}{\n\t\t\t\t\t\t&excludedRuleProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsizeConstraintStatement: &sizeConstraintStatementProperty{\n\t\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\tsize: jsii.Number(123),\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsqliMatchStatement: &sqliMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsensitivityLevel: jsii.String(\"sensitivityLevel\"),\n\t\t\t\t},\n\t\t\t\txssMatchStatement: &xssMatchStatementProperty{\n\t\t\t\t\tfieldToMatch: &fieldToMatchProperty{\n\t\t\t\t\t\tallQueryArguments: allQueryArguments,\n\t\t\t\t\t\tbody: &bodyProperty{\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcookies: &cookiesProperty{\n\t\t\t\t\t\t\tmatchPattern: &cookieMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedCookies: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedCookies\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: &headersProperty{\n\t\t\t\t\t\t\tmatchPattern: &headerMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\texcludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"excludedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tincludedHeaders: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedHeaders\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjsonBody: &jsonBodyProperty{\n\t\t\t\t\t\t\tmatchPattern: &jsonMatchPatternProperty{\n\t\t\t\t\t\t\t\tall: all,\n\t\t\t\t\t\t\t\tincludedPaths: []*string{\n\t\t\t\t\t\t\t\t\tjsii.String(\"includedPaths\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmatchScope: jsii.String(\"matchScope\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tinvalidFallbackBehavior: jsii.String(\"invalidFallbackBehavior\"),\n\t\t\t\t\t\t\toversizeHandling: jsii.String(\"oversizeHandling\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tqueryString: queryString,\n\t\t\t\t\t\tsingleHeader: singleHeader,\n\t\t\t\t\t\tsingleQueryArgument: singleQueryArgument,\n\t\t\t\t\t\turiPath: uriPath,\n\t\t\t\t\t},\n\t\t\t\t\ttextTransformations: []interface{}{\n\t\t\t\t\t\t&textTransformationProperty{\n\t\t\t\t\t\t\tpriority: jsii.Number(123),\n\t\t\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tvisibilityConfig: &visibilityConfigProperty{\n\t\t\t\tcloudWatchMetricsEnabled: jsii.Boolean(false),\n\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\tsampledRequestsEnabled: jsii.Boolean(false),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\taction: &ruleActionProperty{\n\t\t\t\tallow: &allowActionProperty{\n\t\t\t\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\t\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tblock: &blockActionProperty{\n\t\t\t\t\tcustomResponse: &customResponseProperty{\n\t\t\t\t\t\tresponseCode: jsii.Number(123),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tcustomResponseBodyKey: jsii.String(\"customResponseBodyKey\"),\n\t\t\t\t\t\tresponseHeaders: []interface{}{\n\t\t\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcaptcha: &captchaActionProperty{\n\t\t\t\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\t\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcount: &countActionProperty{\n\t\t\t\t\tcustomRequestHandling: &customRequestHandlingProperty{\n\t\t\t\t\t\tinsertHeaders: []interface{}{\n\t\t\t\t\t\t\t&customHTTPHeaderProperty{\n\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tcaptchaConfig: &captchaConfigProperty{\n\t\t\t\timmunityTimeProperty: &immunityTimePropertyProperty{\n\t\t\t\t\timmunityTime: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\toverrideAction: &overrideActionProperty{\n\t\t\t\tcount: count,\n\t\t\t\tnone: none,\n\t\t\t},\n\t\t\truleLabels: []interface{}{\n\t\t\t\t&labelProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const none: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst cfnWebACLProps: wafv2.CfnWebACLProps = {\n  defaultAction: {\n    allow: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    block: {\n      customResponse: {\n        responseCode: 123,\n\n        // the properties below are optional\n        customResponseBodyKey: 'customResponseBodyKey',\n        responseHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  scope: 'scope',\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  captchaConfig: {\n    immunityTimeProperty: {\n      immunityTime: 123,\n    },\n  },\n  customResponseBodies: {\n    customResponseBodiesKey: {\n      content: 'content',\n      contentType: 'contentType',\n    },\n  },\n  description: 'description',\n  name: 'name',\n  rules: [{\n    name: 'name',\n    priority: 123,\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    visibilityConfig: {\n      cloudWatchMetricsEnabled: false,\n      metricName: 'metricName',\n      sampledRequestsEnabled: false,\n    },\n\n    // the properties below are optional\n    action: {\n      allow: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      block: {\n        customResponse: {\n          responseCode: 123,\n\n          // the properties below are optional\n          customResponseBodyKey: 'customResponseBodyKey',\n          responseHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      captcha: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      count: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n    },\n    captchaConfig: {\n      immunityTimeProperty: {\n        immunityTime: 123,\n      },\n    },\n    overrideAction: {\n      count: count,\n      none: none,\n    },\n    ruleLabels: [{\n      name: 'name',\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-wafv2.CfnWebACLProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-wafv2.CfnWebACLProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const none: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnWebACLProps: wafv2.CfnWebACLProps = {\n  defaultAction: {\n    allow: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    block: {\n      customResponse: {\n        responseCode: 123,\n\n        // the properties below are optional\n        customResponseBodyKey: 'customResponseBodyKey',\n        responseHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  scope: 'scope',\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  captchaConfig: {\n    immunityTimeProperty: {\n      immunityTime: 123,\n    },\n  },\n  customResponseBodies: {\n    customResponseBodiesKey: {\n      content: 'content',\n      contentType: 'contentType',\n    },\n  },\n  description: 'description',\n  name: 'name',\n  rules: [{\n    name: 'name',\n    priority: 123,\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    visibilityConfig: {\n      cloudWatchMetricsEnabled: false,\n      metricName: 'metricName',\n      sampledRequestsEnabled: false,\n    },\n\n    // the properties below are optional\n    action: {\n      allow: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      block: {\n        customResponse: {\n          responseCode: 123,\n\n          // the properties below are optional\n          customResponseBodyKey: 'customResponseBodyKey',\n          responseHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      captcha: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      count: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n    },\n    captchaConfig: {\n      immunityTimeProperty: {\n        immunityTime: 123,\n      },\n    },\n    overrideAction: {\n      count: count,\n      none: none,\n    },\n    ruleLabels: [{\n      name: 'name',\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 13,
        "10": 139,
        "75": 404,
        "91": 4,
        "125": 9,
        "130": 10,
        "153": 3,
        "169": 2,
        "192": 51,
        "193": 111,
        "225": 11,
        "242": 11,
        "243": 11,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 326,
        "290": 1
      },
      "fqnsFingerprint": "4b27aef71e9fe41362b6bd146d21cc628a62ed4a67715ff9fbc6067bfebdffcf"
    }
  }
}