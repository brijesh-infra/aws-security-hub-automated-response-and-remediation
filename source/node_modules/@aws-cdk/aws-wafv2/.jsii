{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/core": "1.169.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::WAFv2",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.63.2 (build a8a8833)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "AWS::WAFv2",
    "aws-wafv2"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-wafv2",
  "readme": {
    "markdown": "# AWS::WAFv2 Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n> All classes with the `Cfn` prefix in this module ([CFN Resources]) are always stable and safe to use.\n>\n> [CFN Resources]: https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n```ts nofixture\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n```\n\n<!--BEGIN CFNONLY DISCLAIMER-->\n\nThere are no official hand-written ([L2](https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib)) constructs for this service yet. Here are some suggestions on how to proceed:\n\n- Search [Construct Hub for WAFv2 construct libraries](https://constructs.dev/search?q=wafv2)\n- Use the automatically generated [L1](https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_l1_using) constructs, in the same way you would use [the CloudFormation AWS::WAFv2 resources](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/AWS_WAFv2.html) directly.\n\n\n<!--BEGIN CFNONLY DISCLAIMER-->\n\nThere are no hand-written ([L2](https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib)) constructs for this service yet.\nHowever, you can still use the automatically generated [L1](https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_l1_using) constructs, and use this service exactly as you would using CloudFormation directly.\n\nFor more information on the resources and properties available for this service, see the [CloudFormation documentation for AWS::WAFv2](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/AWS_WAFv2.html).\n\n(Read the [CDK Contributing Guide](https://github.com/aws/aws-cdk/blob/master/CONTRIBUTING.md) and submit an RFC if you are interested in contributing to this construct library.)\n\n<!--END CFNONLY DISCLAIMER-->\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-wafv2",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.WAFv2",
      "packageId": "Amazon.CDK.AWS.WAFv2"
    },
    "java": {
      "maven": {
        "artifactId": "wafv2",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.wafv2"
    },
    "js": {
      "npm": "@aws-cdk/aws-wafv2"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-wafv2",
      "module": "aws_cdk.aws_wafv2"
    }
  },
  "types": {
    "@aws-cdk/aws-wafv2.CfnIPSet": {
      "assembly": "@aws-cdk/aws-wafv2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::WAFv2::IPSet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> This is the latest version of *AWS WAF* , named AWS WAF V2, released in November, 2019. For information, including how to migrate your AWS WAF resources from the prior release, see the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .\n\nUse an `IPSet` to identify web requests that originate from specific IP addresses or ranges of IP addresses. For example, if you're receiving a lot of requests from a ranges of IP addresses, you can configure AWS WAF to block them using an IP set that lists those IP addresses.\n\nYou use an IP set by providing its Amazon Resource Name (ARN) to the rule statement `IPSetReferenceStatement` , when you add a rule to a rule group or web ACL.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::WAFv2::IPSet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst cfnIPSet = new wafv2.CfnIPSet(this, 'MyCfnIPSet', {\n  addresses: ['addresses'],\n  ipAddressVersion: 'ipAddressVersion',\n  scope: 'scope',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnIPSet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::WAFv2::IPSet`."
        },
        "locationInModule": {
          "filename": "lib/wafv2.generated.ts",
          "line": 267
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-wafv2.CfnIPSetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 161
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 289
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 305
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnIPSet",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 165
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the IP set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 190
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the IP set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 196
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 294
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-tags"
            },
            "remarks": "The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each AWS resource.\n\n> To modify tags on existing resources, use the AWS WAF APIs or command line interface. With AWS CloudFormation , you can only add tags to AWS WAF resources during resource creation.",
            "stability": "external",
            "summary": "Key:value pairs associated with an AWS resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 258
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-addresses"
            },
            "remarks": "AWS WAF supports all IPv4 and IPv6 CIDR ranges except for /0.\n\nExample address strings:\n\n- To configure AWS WAF to allow, block, or count requests that originated from the IP address 192.0.2.44, specify `192.0.2.44/32` .\n- To configure AWS WAF to allow, block, or count requests that originated from IP addresses from 192.0.2.0 to 192.0.2.255, specify `192.0.2.0/24` .\n- To configure AWS WAF to allow, block, or count requests that originated from the IP address 1111:0000:0000:0000:0000:0000:0000:0111, specify `1111:0000:0000:0000:0000:0000:0000:0111/128` .\n- To configure AWS WAF to allow, block, or count requests that originated from IP addresses 1111:0000:0000:0000:0000:0000:0000:0000 to 1111:0000:0000:0000:ffff:ffff:ffff:ffff, specify `1111:0000:0000:0000:0000:0000:0000:0000/64` .\n\nFor more information about CIDR notation, see the Wikipedia entry [Classless Inter-Domain Routing](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) .\n\nExample JSON `Addresses` specifications:\n\n- Empty array: `\"Addresses\": []`\n- Array with one address: `\"Addresses\": [\"192.0.2.44/32\"]`\n- Array with three addresses: `\"Addresses\": [\"192.0.2.44/32\", \"192.0.2.0/24\", \"192.0.0.0/16\"]`\n- INVALID specification: `\"Addresses\": [\"\"]` INVALID",
            "stability": "external",
            "summary": "Contains an array of strings that specifies zero or more IP addresses or blocks of IP addresses in Classless Inter-Domain Routing (CIDR) notation."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 219
          },
          "name": "addresses",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-ipaddressversion"
            },
            "stability": "external",
            "summary": "The version of the IP addresses, either `IPV4` or `IPV6` ."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 226
          },
          "name": "ipAddressVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-scope"
            },
            "remarks": "A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, or an AWS AppSync GraphQL API. Valid Values are `CLOUDFRONT` and `REGIONAL` .\n\n> For `CLOUDFRONT` , you must create your WAFv2 resources in the US East (N. Virginia) Region, `us-east-1` .",
            "stability": "external",
            "summary": "Specifies whether this is for an Amazon CloudFront distribution or for a regional application."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 235
          },
          "name": "scope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-description"
            },
            "stability": "external",
            "summary": "A description of the IP set that helps with identification."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 242
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-name"
            },
            "remarks": "You cannot change the name of an `IPSet` after you create it.",
            "stability": "external",
            "summary": "The name of the IP set."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 249
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnIPSet"
    },
    "@aws-cdk/aws-wafv2.CfnIPSetProps": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnIPSet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst cfnIPSetProps: wafv2.CfnIPSetProps = {\n  addresses: ['addresses'],\n  ipAddressVersion: 'ipAddressVersion',\n  scope: 'scope',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnIPSetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 19
      },
      "name": "CfnIPSetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-addresses"
            },
            "remarks": "AWS WAF supports all IPv4 and IPv6 CIDR ranges except for /0.\n\nExample address strings:\n\n- To configure AWS WAF to allow, block, or count requests that originated from the IP address 192.0.2.44, specify `192.0.2.44/32` .\n- To configure AWS WAF to allow, block, or count requests that originated from IP addresses from 192.0.2.0 to 192.0.2.255, specify `192.0.2.0/24` .\n- To configure AWS WAF to allow, block, or count requests that originated from the IP address 1111:0000:0000:0000:0000:0000:0000:0111, specify `1111:0000:0000:0000:0000:0000:0000:0111/128` .\n- To configure AWS WAF to allow, block, or count requests that originated from IP addresses 1111:0000:0000:0000:0000:0000:0000:0000 to 1111:0000:0000:0000:ffff:ffff:ffff:ffff, specify `1111:0000:0000:0000:0000:0000:0000:0000/64` .\n\nFor more information about CIDR notation, see the Wikipedia entry [Classless Inter-Domain Routing](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) .\n\nExample JSON `Addresses` specifications:\n\n- Empty array: `\"Addresses\": []`\n- Array with one address: `\"Addresses\": [\"192.0.2.44/32\"]`\n- Array with three addresses: `\"Addresses\": [\"192.0.2.44/32\", \"192.0.2.0/24\", \"192.0.0.0/16\"]`\n- INVALID specification: `\"Addresses\": [\"\"]` INVALID",
            "stability": "external",
            "summary": "Contains an array of strings that specifies zero or more IP addresses or blocks of IP addresses in Classless Inter-Domain Routing (CIDR) notation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 42
          },
          "name": "addresses",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-ipaddressversion"
            },
            "stability": "external",
            "summary": "The version of the IP addresses, either `IPV4` or `IPV6` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 49
          },
          "name": "ipAddressVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-scope"
            },
            "remarks": "A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, or an AWS AppSync GraphQL API. Valid Values are `CLOUDFRONT` and `REGIONAL` .\n\n> For `CLOUDFRONT` , you must create your WAFv2 resources in the US East (N. Virginia) Region, `us-east-1` .",
            "stability": "external",
            "summary": "Specifies whether this is for an Amazon CloudFront distribution or for a regional application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 58
          },
          "name": "scope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-description"
            },
            "stability": "external",
            "summary": "A description of the IP set that helps with identification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 65
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-name"
            },
            "remarks": "You cannot change the name of an `IPSet` after you create it.",
            "stability": "external",
            "summary": "The name of the IP set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 72
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-tags"
            },
            "remarks": "The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each AWS resource.\n\n> To modify tags on existing resources, use the AWS WAF APIs or command line interface. With AWS CloudFormation , you can only add tags to AWS WAF resources during resource creation.",
            "stability": "external",
            "summary": "Key:value pairs associated with an AWS resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 81
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnIPSetProps"
    },
    "@aws-cdk/aws-wafv2.CfnLoggingConfiguration": {
      "assembly": "@aws-cdk/aws-wafv2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::WAFv2::LoggingConfiguration",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Defines an association between logging destinations and a web ACL resource, for logging from AWS WAF . As part of the association, you can specify parts of the standard logging fields to keep out of the logs and you can specify filters so that you log only a subset of the logging records.\n\n> You can define one logging destination per web ACL.\n\nYou can access information about the traffic that AWS WAF inspects using the following steps:\n\n- Create your logging destination. You can use an Amazon CloudWatch Logs log group, an Amazon Simple Storage Service (Amazon S3) bucket, or an Amazon Kinesis Data Firehose. For information about configuring logging destinations and the permissions that are required for each, see [Logging web ACL traffic information](https://docs.aws.amazon.com/waf/latest/developerguide/logging.html) in the *AWS WAF Developer Guide* .\n- Associate your logging destination to your web ACL using a `PutLoggingConfiguration` request.\n\nWhen you successfully enable logging using a `PutLoggingConfiguration` request, AWS WAF creates an additional role or policy that is required to write logs to the logging destination. For an Amazon CloudWatch Logs log group, AWS WAF creates a resource policy on the log group. For an Amazon S3 bucket, AWS WAF creates a bucket policy. For an Amazon Kinesis Data Firehose, AWS WAF creates a service-linked role.\n\nFor additional information about web ACL logging, see [Logging web ACL traffic information](https://docs.aws.amazon.com/waf/latest/developerguide/logging.html) in the *AWS WAF Developer Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::WAFv2::LoggingConfiguration`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const jsonBody: any;\ndeclare const loggingFilter: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const uriPath: any;\nconst cfnLoggingConfiguration = new wafv2.CfnLoggingConfiguration(this, 'MyCfnLoggingConfiguration', {\n  logDestinationConfigs: ['logDestinationConfigs'],\n  resourceArn: 'resourceArn',\n\n  // the properties below are optional\n  loggingFilter: loggingFilter,\n  redactedFields: [{\n    jsonBody: jsonBody,\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    uriPath: uriPath,\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnLoggingConfiguration",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::WAFv2::LoggingConfiguration`."
        },
        "locationInModule": {
          "filename": "lib/wafv2.generated.ts",
          "line": 500
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-wafv2.CfnLoggingConfigurationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 430
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 518
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 532
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLoggingConfiguration",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 434
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ManagedByFirewallManager"
            },
            "remarks": "If true, only Firewall Manager can modify or delete the configuration.",
            "stability": "external",
            "summary": "Indicates whether the logging configuration was created by AWS Firewall Manager , as part of an AWS WAF policy configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 459
          },
          "name": "attrManagedByFirewallManager",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 523
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html#cfn-wafv2-loggingconfiguration-logdestinationconfigs"
            },
            "remarks": "> You can associate one logging destination to a web ACL.",
            "stability": "external",
            "summary": "The logging destination configuration that you want to associate with the web ACL."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 468
          },
          "name": "logDestinationConfigs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html#cfn-wafv2-loggingconfiguration-loggingfilter"
            },
            "remarks": "You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.",
            "stability": "external",
            "summary": "Filtering that specifies which web requests are kept in the logs and which are dropped."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 482
          },
          "name": "loggingFilter",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html#cfn-wafv2-loggingconfiguration-resourcearn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the web ACL that you want to associate with `LogDestinationConfigs` ."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 475
          },
          "name": "resourceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html#cfn-wafv2-loggingconfiguration-redactedfields"
            },
            "remarks": "For example, if you redact the `SingleHeader` field, the `HEADER` field in the logs will be `xxx` .\n\n> You can specify only the following fields for redaction: `UriPath` , `QueryString` , `SingleHeader` , `Method` , and `JsonBody` .",
            "stability": "external",
            "summary": "The parts of the request that you want to keep out of the logs."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 491
          },
          "name": "redactedFields",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnLoggingConfiguration.FieldToMatchProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnLoggingConfiguration"
    },
    "@aws-cdk/aws-wafv2.CfnLoggingConfiguration.FieldToMatchProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-loggingconfiguration-fieldtomatch.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Include the single `FieldToMatch` type that you want to inspect, with additional specifications as needed, according to the type. You specify a single request component in `FieldToMatch` for each rule statement that requires it. To inspect more than one component of the web request, create a separate rule statement for each component.\n\nExample JSON for a `QueryString` field to match:\n\n`\"FieldToMatch\": { \"QueryString\": {} }`\n\nExample JSON for a `Method` field to match specification:\n\n`\"FieldToMatch\": { \"Method\": { \"Name\": \"DELETE\" } }`",
        "stability": "external",
        "summary": "The part of the web request that you want AWS WAF to inspect.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const jsonBody: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const uriPath: any;\nconst fieldToMatchProperty: wafv2.CfnLoggingConfiguration.FieldToMatchProperty = {\n  jsonBody: jsonBody,\n  method: method,\n  queryString: queryString,\n  singleHeader: singleHeader,\n  uriPath: uriPath,\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnLoggingConfiguration.FieldToMatchProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 554
      },
      "name": "FieldToMatchProperty",
      "namespace": "CfnLoggingConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-loggingconfiguration-fieldtomatch.html#cfn-wafv2-loggingconfiguration-fieldtomatch-jsonbody"
            },
            "remarks": "The request body immediately follows the request headers. This is the part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form.\n\nOnly the first 8 KB (8192 bytes) of the request body are forwarded to AWS WAF for inspection by the underlying host service. For information about how to handle oversized request bodies, see the `JsonBody` object configuration.",
            "stability": "external",
            "summary": "Inspect the request body as JSON."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 562
          },
          "name": "jsonBody",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-loggingconfiguration-fieldtomatch.html#cfn-wafv2-loggingconfiguration-fieldtomatch-method"
            },
            "remarks": "The method indicates the type of operation that the request is asking the origin to perform.",
            "stability": "external",
            "summary": "Inspect the HTTP method."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 568
          },
          "name": "method",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-loggingconfiguration-fieldtomatch.html#cfn-wafv2-loggingconfiguration-fieldtomatch-querystring"
            },
            "remarks": "This is the part of a URL that appears after a `?` character, if any.",
            "stability": "external",
            "summary": "Inspect the query string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 574
          },
          "name": "queryString",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-loggingconfiguration-fieldtomatch.html#cfn-wafv2-loggingconfiguration-fieldtomatch-singleheader"
            },
            "remarks": "Provide the name of the header to inspect, for example, `User-Agent` or `Referer` . This setting isn't case sensitive.\n\nExample JSON: `\"SingleHeader\": { \"Name\": \"haystack\" }`\n\nAlternately, you can filter and inspect all headers with the `Headers` `FieldToMatch` setting.",
            "stability": "external",
            "summary": "Inspect a single header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 584
          },
          "name": "singleHeader",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-loggingconfiguration-fieldtomatch.html#cfn-wafv2-loggingconfiguration-fieldtomatch-uripath"
            },
            "remarks": "This is the part of the web request that identifies a resource, for example, `/images/daily-ad.jpg` .",
            "stability": "external",
            "summary": "Inspect the request URI path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 590
          },
          "name": "uriPath",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnLoggingConfiguration.FieldToMatchProperty"
    },
    "@aws-cdk/aws-wafv2.CfnLoggingConfigurationProps": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnLoggingConfiguration`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const jsonBody: any;\ndeclare const loggingFilter: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const uriPath: any;\nconst cfnLoggingConfigurationProps: wafv2.CfnLoggingConfigurationProps = {\n  logDestinationConfigs: ['logDestinationConfigs'],\n  resourceArn: 'resourceArn',\n\n  // the properties below are optional\n  loggingFilter: loggingFilter,\n  redactedFields: [{\n    jsonBody: jsonBody,\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    uriPath: uriPath,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnLoggingConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 318
      },
      "name": "CfnLoggingConfigurationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html#cfn-wafv2-loggingconfiguration-logdestinationconfigs"
            },
            "remarks": "> You can associate one logging destination to a web ACL.",
            "stability": "external",
            "summary": "The logging destination configuration that you want to associate with the web ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 327
          },
          "name": "logDestinationConfigs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html#cfn-wafv2-loggingconfiguration-resourcearn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the web ACL that you want to associate with `LogDestinationConfigs` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 334
          },
          "name": "resourceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html#cfn-wafv2-loggingconfiguration-loggingfilter"
            },
            "remarks": "You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.",
            "stability": "external",
            "summary": "Filtering that specifies which web requests are kept in the logs and which are dropped."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 341
          },
          "name": "loggingFilter",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html#cfn-wafv2-loggingconfiguration-redactedfields"
            },
            "remarks": "For example, if you redact the `SingleHeader` field, the `HEADER` field in the logs will be `xxx` .\n\n> You can specify only the following fields for redaction: `UriPath` , `QueryString` , `SingleHeader` , `Method` , and `JsonBody` .",
            "stability": "external",
            "summary": "The parts of the request that you want to keep out of the logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 350
          },
          "name": "redactedFields",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnLoggingConfiguration.FieldToMatchProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnLoggingConfigurationProps"
    },
    "@aws-cdk/aws-wafv2.CfnRegexPatternSet": {
      "assembly": "@aws-cdk/aws-wafv2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::WAFv2::RegexPatternSet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> This is the latest version of *AWS WAF* , named AWS WAF V2, released in November, 2019. For information, including how to migrate your AWS WAF resources from the prior release, see the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .\n\nUse an `RegexPatternSet` to have AWS WAF inspect a web request component for a specific set of regular expression patterns.\n\nYou use a regex pattern set by providing its Amazon Resource Name (ARN) to the rule statement `RegexPatternSetReferenceStatement` , when you add a rule to a rule group or web ACL.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::WAFv2::RegexPatternSet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst cfnRegexPatternSet = new wafv2.CfnRegexPatternSet(this, 'MyCfnRegexPatternSet', {\n  regularExpressionList: ['regularExpressionList'],\n  scope: 'scope',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRegexPatternSet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::WAFv2::RegexPatternSet`."
        },
        "locationInModule": {
          "filename": "lib/wafv2.generated.ts",
          "line": 860
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-wafv2.CfnRegexPatternSetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 777
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 880
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 895
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRegexPatternSet",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 781
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the regex pattern set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 806
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the regex pattern set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 812
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 885
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-tags"
            },
            "remarks": "The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each AWS resource.\n\n> To modify tags on existing resources, use the AWS WAF APIs or command line interface. With AWS CloudFormation , you can only add tags to AWS WAF resources during resource creation.",
            "stability": "external",
            "summary": "Key:value pairs associated with an AWS resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 851
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-regularexpressionlist"
            },
            "stability": "external",
            "summary": "The regular expression patterns in the set."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 819
          },
          "name": "regularExpressionList",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-scope"
            },
            "remarks": "A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, or an AWS AppSync GraphQL API. Valid Values are `CLOUDFRONT` and `REGIONAL` .\n\n> For `CLOUDFRONT` , you must create your WAFv2 resources in the US East (N. Virginia) Region, `us-east-1` .",
            "stability": "external",
            "summary": "Specifies whether this is for an Amazon CloudFront distribution or for a regional application."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 828
          },
          "name": "scope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-description"
            },
            "stability": "external",
            "summary": "A description of the set that helps with identification."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 835
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-name"
            },
            "remarks": "You cannot change the name after you create the set.",
            "stability": "external",
            "summary": "The name of the set."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 842
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRegexPatternSet"
    },
    "@aws-cdk/aws-wafv2.CfnRegexPatternSetProps": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnRegexPatternSet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst cfnRegexPatternSetProps: wafv2.CfnRegexPatternSetProps = {\n  regularExpressionList: ['regularExpressionList'],\n  scope: 'scope',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRegexPatternSetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 662
      },
      "name": "CfnRegexPatternSetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-regularexpressionlist"
            },
            "stability": "external",
            "summary": "The regular expression patterns in the set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 669
          },
          "name": "regularExpressionList",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-scope"
            },
            "remarks": "A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, or an AWS AppSync GraphQL API. Valid Values are `CLOUDFRONT` and `REGIONAL` .\n\n> For `CLOUDFRONT` , you must create your WAFv2 resources in the US East (N. Virginia) Region, `us-east-1` .",
            "stability": "external",
            "summary": "Specifies whether this is for an Amazon CloudFront distribution or for a regional application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 678
          },
          "name": "scope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-description"
            },
            "stability": "external",
            "summary": "A description of the set that helps with identification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 685
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-name"
            },
            "remarks": "You cannot change the name after you create the set.",
            "stability": "external",
            "summary": "The name of the set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 692
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-tags"
            },
            "remarks": "The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each AWS resource.\n\n> To modify tags on existing resources, use the AWS WAF APIs or command line interface. With AWS CloudFormation , you can only add tags to AWS WAF resources during resource creation.",
            "stability": "external",
            "summary": "Key:value pairs associated with an AWS resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 701
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRegexPatternSetProps"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup": {
      "assembly": "@aws-cdk/aws-wafv2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::WAFv2::RuleGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> This is the latest version of *AWS WAF* , named AWS WAF V2, released in November, 2019. For information, including how to migrate your AWS WAF resources from the prior release, see the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .\n\nUse an `RuleGroup` to define a collection of rules for inspecting and controlling web requests. You use a rule group in an `WebACL` by providing its Amazon Resource Name (ARN) to the rule statement `RuleGroupReferenceStatement` , when you add rules to the web ACL.\n\nWhen you create a rule group, you define an immutable capacity limit. If you update a rule group, you must stay within the capacity. This allows others to reuse the rule group with confidence in its capacity requirements.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::WAFv2::RuleGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allow: any;\ndeclare const allQueryArguments: any;\ndeclare const block: any;\ndeclare const captcha: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst cfnRuleGroup = new wafv2.CfnRuleGroup(this, 'MyCfnRuleGroup', {\n  capacity: 123,\n  scope: 'scope',\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  customResponseBodies: {\n    customResponseBodiesKey: {\n      content: 'content',\n      contentType: 'contentType',\n    },\n  },\n  description: 'description',\n  name: 'name',\n  rules: [{\n    name: 'name',\n    priority: 123,\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    visibilityConfig: {\n      cloudWatchMetricsEnabled: false,\n      metricName: 'metricName',\n      sampledRequestsEnabled: false,\n    },\n\n    // the properties below are optional\n    action: {\n      allow: allow,\n      block: block,\n      captcha: captcha,\n      count: count,\n    },\n    captchaConfig: {\n      immunityTimeProperty: {\n        immunityTime: 123,\n      },\n    },\n    ruleLabels: [{\n      name: 'name',\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::WAFv2::RuleGroup`."
        },
        "locationInModule": {
          "filename": "lib/wafv2.generated.ts",
          "line": 1196
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 1062
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1223
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1241
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRuleGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1066
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1091
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AvailableLabels"
            },
            "remarks": "These labels are defined in the `RuleLabels` for a `Rule` .",
            "stability": "external",
            "summary": "Labels that rules in this rule group add to matching requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1097
          },
          "name": "attrAvailableLabels",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ConsumedLabels"
            },
            "remarks": "Each of these labels is defined in a `LabelMatchStatement` specification, in the rule statement.",
            "stability": "external",
            "summary": "Labels that rules in this rule group match against."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1103
          },
          "name": "attrConsumedLabels",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1109
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LabelNamespace"
            },
            "remarks": "All labels added by rules in this rule group have this prefix.\n\nThe syntax for the label namespace prefix for a rule group is the following: `awswaf:<account ID>:rule group:<rule group name>:`\n\nWhen a rule with a label matches a web request, AWS WAF adds the fully qualified label to the request. A fully qualified label is made up of the label namespace from the rule group or web ACL where the rule is defined and the label from the rule, separated by a colon.",
            "stability": "external",
            "summary": "The label namespace prefix for this rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1119
          },
          "name": "attrLabelNamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1228
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-tags"
            },
            "remarks": "The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each AWS resource.\n\n> To modify tags on existing resources, use the AWS WAF APIs or command line interface. With AWS CloudFormation , you can only add tags to AWS WAF resources during resource creation.",
            "stability": "external",
            "summary": "Key:value pairs associated with an AWS resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1187
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-capacity"
            },
            "remarks": "When you create your own rule group, you define this, and you cannot change it after creation. When you add or modify the rules in a rule group, AWS WAF enforces this limit.\n\nAWS WAF uses WCUs to calculate and control the operating resources that are used to run your rules, rule groups, and web ACLs. AWS WAF calculates capacity differently for each rule type, to reflect the relative cost of each rule. Simple rules that cost little to run use fewer WCUs than more complex rules that use more processing power. Rule group capacity is fixed at creation, which helps users plan their web ACL WCU usage when they use a rule group. The WCU limit for web ACLs is 1,500.",
            "stability": "external",
            "summary": "The web ACL capacity units (WCUs) required for this rule group."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1130
          },
          "name": "capacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-scope"
            },
            "remarks": "A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, or an AWS AppSync GraphQL API. Valid Values are `CLOUDFRONT` and `REGIONAL` .\n\n> For `CLOUDFRONT` , you must create your WAFv2 resources in the US East (N. Virginia) Region, `us-east-1` .",
            "stability": "external",
            "summary": "Specifies whether this is for an Amazon CloudFront distribution or for a regional application."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1139
          },
          "name": "scope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-visibilityconfig"
            },
            "stability": "external",
            "summary": "Defines and enables Amazon CloudWatch metrics and web request sample collection."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1146
          },
          "name": "visibilityConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.VisibilityConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-customresponsebodies"
            },
            "remarks": "When you create a rule with a block action, you can send a custom response to the web request. You define these for the rule group, and then use them in the rules that you define in the rule group.\n\nFor information about customizing web requests and responses, see [Customizing web requests and responses in AWS WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .\n\nFor information about the limits on count and size for custom request and response settings, see [AWS WAF quotas](https://docs.aws.amazon.com/waf/latest/developerguide/limits.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
            "stability": "external",
            "summary": "A map of custom response keys and content bodies."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1157
          },
          "name": "customResponseBodies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.CustomResponseBodyProperty"
                          }
                        ]
                      }
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-description"
            },
            "stability": "external",
            "summary": "A description of the rule group that helps with identification."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1164
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-name"
            },
            "remarks": "You cannot change the name of a rule group after you create it.",
            "stability": "external",
            "summary": "The name of the rule group."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1171
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-rules"
            },
            "remarks": "Each rule includes one top-level statement that AWS WAF uses to identify matching web requests, and parameters that govern how AWS WAF handles them.",
            "stability": "external",
            "summary": "The rule statements used to identify the web requests that you want to allow, block, or count."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1178
          },
          "name": "rules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.AndStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-andstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You provide more than one `Statement` within the `AndStatement` .",
        "stability": "external",
        "summary": "A logical rule statement used to combine other rule statements with AND logic.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst andStatementProperty: wafv2.CfnRuleGroup.AndStatementProperty = {\n  statements: [{\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.AndStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 1255
      },
      "name": "AndStatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-andstatement.html#cfn-wafv2-rulegroup-andstatement-statements"
            },
            "remarks": "You can use any statements that can be nested.",
            "stability": "external",
            "summary": "The statements to combine with AND logic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1261
          },
          "name": "statements",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.StatementProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.AndStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.BodyProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-body.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is used to indicate the web request component to inspect, in the `FieldToMatch` specification.",
        "stability": "external",
        "summary": "Inspect the body of the web request. The body immediately follows the request headers.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst bodyProperty: wafv2.CfnRuleGroup.BodyProperty = {\n  oversizeHandling: 'oversizeHandling',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.BodyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 1325
      },
      "name": "BodyProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-body.html#cfn-wafv2-rulegroup-body-oversizehandling"
            },
            "remarks": "AWS WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to AWS WAF by the underlying host service.\n\nThe options for oversize handling are the following:\n\n- `CONTINUE` - Inspect the body normally, according to the rule inspection criteria.\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.\n\nYou can combine the `MATCH` or `NO_MATCH` settings for oversize handling with your rule and web ACL action settings, so that you block any request whose body is over 8 KB.\n\nDefault: `CONTINUE`",
            "stability": "external",
            "summary": "What AWS WAF should do if the body is larger than AWS WAF can inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1341
          },
          "name": "oversizeHandling",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.BodyProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.ByteMatchStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-bytematchstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The byte match statement provides the bytes to search for, the location in requests that you want AWS WAF to search, and other settings. The bytes to search for are typically a string that corresponds with ASCII characters. In the AWS WAF console and the developer guide, this is called a string match statement.",
        "stability": "external",
        "summary": "A rule statement that defines a string match search for AWS WAF to apply to web requests.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst byteMatchStatementProperty: wafv2.CfnRuleGroup.ByteMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  positionalConstraint: 'positionalConstraint',\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n\n  // the properties below are optional\n  searchString: 'searchString',\n  searchStringBase64: 'searchStringBase64',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.ByteMatchStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 1402
      },
      "name": "ByteMatchStatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-bytematchstatement.html#cfn-wafv2-rulegroup-bytematchstatement-fieldtomatch"
            },
            "stability": "external",
            "summary": "The part of the web request that you want AWS WAF to inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1408
          },
          "name": "fieldToMatch",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.FieldToMatchProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-bytematchstatement.html#cfn-wafv2-rulegroup-bytematchstatement-positionalconstraint"
            },
            "remarks": "Valid values include the following:\n\n*CONTAINS*\n\nThe specified part of the web request must include the value of `SearchString` , but the location doesn't matter.\n\n*CONTAINS_WORD*\n\nThe specified part of the web request must include the value of `SearchString` , and `SearchString` must contain only alphanumeric characters or underscore (A-Z, a-z, 0-9, or _). In addition, `SearchString` must be a word, which means that both of the following are true:\n\n- `SearchString` is at the beginning of the specified part of the web request or is preceded by a character other than an alphanumeric character or underscore (_). Examples include the value of a header and `;BadBot` .\n- `SearchString` is at the end of the specified part of the web request or is followed by a character other than an alphanumeric character or underscore (_), for example, `BadBot;` and `-BadBot;` .\n\n*EXACTLY*\n\nThe value of the specified part of the web request must exactly match the value of `SearchString` .\n\n*STARTS_WITH*\n\nThe value of `SearchString` must appear at the beginning of the specified part of the web request.\n\n*ENDS_WITH*\n\nThe value of `SearchString` must appear at the end of the specified part of the web request.",
            "stability": "external",
            "summary": "The area within the portion of the web request that you want AWS WAF to search for `SearchString` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1437
          },
          "name": "positionalConstraint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-bytematchstatement.html#cfn-wafv2-rulegroup-bytematchstatement-texttransformations"
            },
            "remarks": "If you specify one or more transformations in a rule statement, AWS WAF performs all transformations on the content of the request component identified by `FieldToMatch` , starting from the lowest priority setting, before inspecting the content for a match.",
            "stability": "external",
            "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1463
          },
          "name": "textTransformations",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.TextTransformationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-bytematchstatement.html#cfn-wafv2-rulegroup-bytematchstatement-searchstring"
            },
            "remarks": "AWS WAF searches only in the part of web requests that you designate for inspection in `FieldToMatch` . The maximum length of the value is 50 bytes. For alphabetic characters A-Z and a-z, the value is case sensitive.\n\nDon't encode this string. Provide the value that you want AWS WAF to search for. AWS CloudFormation automatically base64 encodes the value for you.\n\nFor example, suppose the value of `Type` is `HEADER` and the value of `Data` is `User-Agent` . If you want to search the `User-Agent` header for the value `BadBot` , you provide the string `BadBot` in the value of `SearchString` .\n\nYou must specify either `SearchString` or `SearchStringBase64` in a `ByteMatchStatement` .",
            "stability": "external",
            "summary": "A string value that you want AWS WAF to search for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1449
          },
          "name": "searchString",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-bytematchstatement.html#cfn-wafv2-rulegroup-bytematchstatement-searchstringbase64"
            },
            "remarks": "If you don't want to encode the string, specify the unencoded value in `SearchString` instead.\n\nYou must specify either `SearchString` or `SearchStringBase64` in a `ByteMatchStatement` .",
            "stability": "external",
            "summary": "String to search for in a web request component, base64-encoded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1457
          },
          "name": "searchStringBase64",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.ByteMatchStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.CaptchaConfigProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-captchaconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is available at the web ACL level and in each rule.",
        "stability": "external",
        "summary": "Specifies how AWS WAF should handle `CAPTCHA` evaluations.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst captchaConfigProperty: wafv2.CfnRuleGroup.CaptchaConfigProperty = {\n  immunityTimeProperty: {\n    immunityTime: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.CaptchaConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 1539
      },
      "name": "CaptchaConfigProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-captchaconfig.html#cfn-wafv2-rulegroup-captchaconfig-immunitytimeproperty"
            },
            "stability": "external",
            "summary": "Determines how long a `CAPTCHA` token remains valid after the client successfully solves a `CAPTCHA` puzzle."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1545
          },
          "name": "immunityTimeProperty",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.ImmunityTimePropertyProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.CaptchaConfigProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.CookieMatchPatternProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-cookiematchpattern.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You must specify exactly one setting: either `All` , `IncludedCookies` , or `ExcludedCookies` .\n\nExample JSON: `\"MatchPattern\": { \"IncludedCookies\": {\"KeyToInclude1\", \"KeyToInclude2\", \"KeyToInclude3\"} }`",
        "stability": "external",
        "summary": "The filter to use to identify the subset of cookies to inspect in a web request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst cookieMatchPatternProperty: wafv2.CfnRuleGroup.CookieMatchPatternProperty = {\n  all: all,\n  excludedCookies: ['excludedCookies'],\n  includedCookies: ['includedCookies'],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.CookieMatchPatternProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 1610
      },
      "name": "CookieMatchPatternProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-cookiematchpattern.html#cfn-wafv2-rulegroup-cookiematchpattern-all"
            },
            "stability": "external",
            "summary": "Inspect all cookies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1616
          },
          "name": "all",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-cookiematchpattern.html#cfn-wafv2-rulegroup-cookiematchpattern-excludedcookies"
            },
            "stability": "external",
            "summary": "Inspect only the cookies whose keys don't match any of the strings specified here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1622
          },
          "name": "excludedCookies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-cookiematchpattern.html#cfn-wafv2-rulegroup-cookiematchpattern-includedcookies"
            },
            "stability": "external",
            "summary": "Inspect only the cookies that have a key that matches one of the strings specified here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1628
          },
          "name": "includedCookies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.CookieMatchPatternProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.CookiesProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-cookies.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can specify the parts of the cookies to inspect and you can narrow the set of cookies to inspect by including or excluding specific keys.\n\nThis is used to indicate the web request component to inspect, in the `FieldToMatch` specification.\n\nExample JSON: `\"Cookies\": { \"MatchPattern\": { \"All\": {} }, \"MatchScope\": \"KEY\", \"OversizeHandling\": \"MATCH\" }`",
        "stability": "external",
        "summary": "Inspect the cookies in the web request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst cookiesProperty: wafv2.CfnRuleGroup.CookiesProperty = {\n  matchPattern: {\n    all: all,\n    excludedCookies: ['excludedCookies'],\n    includedCookies: ['includedCookies'],\n  },\n  matchScope: 'matchScope',\n  oversizeHandling: 'oversizeHandling',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.CookiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 1699
      },
      "name": "CookiesProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-cookies.html#cfn-wafv2-rulegroup-cookies-matchpattern"
            },
            "remarks": "You must specify exactly one setting: either `All` , `IncludedCookies` , or `ExcludedCookies` .\n\nExample JSON: `\"MatchPattern\": { \"IncludedCookies\": {\"KeyToInclude1\", \"KeyToInclude2\", \"KeyToInclude3\"} }`",
            "stability": "external",
            "summary": "The filter to use to identify the subset of cookies to inspect in a web request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1709
          },
          "name": "matchPattern",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.CookieMatchPatternProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-cookies.html#cfn-wafv2-rulegroup-cookies-matchscope"
            },
            "remarks": "If you specify `All` , AWS WAF inspects both keys and values.",
            "stability": "external",
            "summary": "The parts of the cookies to inspect with the rule inspection criteria."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1715
          },
          "name": "matchScope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-cookies.html#cfn-wafv2-rulegroup-cookies-oversizehandling"
            },
            "remarks": "AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF .\n\nThe options for oversize handling are the following:\n\n- `CONTINUE` - Inspect the cookies normally, according to the rule inspection criteria.\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.",
            "stability": "external",
            "summary": "What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1727
          },
          "name": "oversizeHandling",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.CookiesProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.CustomResponseBodyProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-customresponsebody.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is referenced by key from `CustomResponse` `CustomResponseBodyKey` .",
        "stability": "external",
        "summary": "The response body to use in a custom response to a web request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst customResponseBodyProperty: wafv2.CfnRuleGroup.CustomResponseBodyProperty = {\n  content: 'content',\n  contentType: 'contentType',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.CustomResponseBodyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 1797
      },
      "name": "CustomResponseBodyProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-customresponsebody.html#cfn-wafv2-rulegroup-customresponsebody-content"
            },
            "remarks": "You can use JSON escape strings in JSON content. To do this, you must specify JSON content in the `ContentType` setting.\n\nFor information about the limits on count and size for custom request and response settings, see [AWS WAF quotas](https://docs.aws.amazon.com/waf/latest/developerguide/limits.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
            "stability": "external",
            "summary": "The payload of the custom response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1807
          },
          "name": "content",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-customresponsebody.html#cfn-wafv2-rulegroup-customresponsebody-contenttype"
            },
            "stability": "external",
            "summary": "The type of content in the payload that you are defining in the `Content` string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1813
          },
          "name": "contentType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.CustomResponseBodyProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.FieldToMatchProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-fieldtomatch.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Include the single `FieldToMatch` type that you want to inspect, with additional specifications as needed, according to the type. You specify a single request component in `FieldToMatch` for each rule statement that requires it. To inspect more than one component of the web request, create a separate rule statement for each component.\n\nExample JSON for a `QueryString` field to match:\n\n`\"FieldToMatch\": { \"QueryString\": {} }`\n\nExample JSON for a `Method` field to match specification:\n\n`\"FieldToMatch\": { \"Method\": { \"Name\": \"DELETE\" } }`",
        "stability": "external",
        "summary": "The part of the web request that you want AWS WAF to inspect.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst fieldToMatchProperty: wafv2.CfnRuleGroup.FieldToMatchProperty = {\n  allQueryArguments: allQueryArguments,\n  body: {\n    oversizeHandling: 'oversizeHandling',\n  },\n  cookies: {\n    matchPattern: {\n      all: all,\n      excludedCookies: ['excludedCookies'],\n      includedCookies: ['includedCookies'],\n    },\n    matchScope: 'matchScope',\n    oversizeHandling: 'oversizeHandling',\n  },\n  headers: {\n    matchPattern: {\n      all: all,\n      excludedHeaders: ['excludedHeaders'],\n      includedHeaders: ['includedHeaders'],\n    },\n    matchScope: 'matchScope',\n    oversizeHandling: 'oversizeHandling',\n  },\n  jsonBody: {\n    matchPattern: {\n      all: all,\n      includedPaths: ['includedPaths'],\n    },\n    matchScope: 'matchScope',\n\n    // the properties below are optional\n    invalidFallbackBehavior: 'invalidFallbackBehavior',\n    oversizeHandling: 'oversizeHandling',\n  },\n  method: method,\n  queryString: queryString,\n  singleHeader: singleHeader,\n  singleQueryArgument: singleQueryArgument,\n  uriPath: uriPath,\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.FieldToMatchProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 1887
      },
      "name": "FieldToMatchProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-fieldtomatch.html#cfn-wafv2-rulegroup-fieldtomatch-allqueryarguments"
            },
            "stability": "external",
            "summary": "Inspect all query arguments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1893
          },
          "name": "allQueryArguments",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-fieldtomatch.html#cfn-wafv2-rulegroup-fieldtomatch-body"
            },
            "remarks": "The request body immediately follows the request headers. This is the part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form.\n\nOnly the first 8 KB (8192 bytes) of the request body are forwarded to AWS WAF for inspection by the underlying host service. For information about how to handle oversized request bodies, see the `Body` object configuration.",
            "stability": "external",
            "summary": "Inspect the request body as plain text."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1901
          },
          "name": "body",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.BodyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-fieldtomatch.html#cfn-wafv2-rulegroup-fieldtomatch-cookies"
            },
            "remarks": "You must configure scope and pattern matching filters in the `Cookies` object, to define the set of cookies and the parts of the cookies that AWS WAF inspects.\n\nOnly the first 8 KB (8192 bytes) of a request's cookies and only the first 200 cookies are forwarded to AWS WAF for inspection by the underlying host service. You must configure how to handle any oversize cookie content in the `Cookies` object. AWS WAF applies the pattern matching filters to the cookies that it receives from the underlying host service.",
            "stability": "external",
            "summary": "Inspect the request cookies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1909
          },
          "name": "cookies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.CookiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-fieldtomatch.html#cfn-wafv2-rulegroup-fieldtomatch-headers"
            },
            "remarks": "You must configure scope and pattern matching filters in the `Headers` object, to define the set of headers to and the parts of the headers that AWS WAF inspects.\n\nOnly the first 8 KB (8192 bytes) of a request's headers and only the first 200 headers are forwarded to AWS WAF for inspection by the underlying host service. You must configure how to handle any oversize header content in the `Headers` object. AWS WAF applies the pattern matching filters to the headers that it receives from the underlying host service.",
            "stability": "external",
            "summary": "Inspect the request headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1917
          },
          "name": "headers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.HeadersProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-fieldtomatch.html#cfn-wafv2-rulegroup-fieldtomatch-jsonbody"
            },
            "remarks": "The request body immediately follows the request headers. This is the part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form.\n\nOnly the first 8 KB (8192 bytes) of the request body are forwarded to AWS WAF for inspection by the underlying host service. For information about how to handle oversized request bodies, see the `JsonBody` object configuration.",
            "stability": "external",
            "summary": "Inspect the request body as JSON."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1925
          },
          "name": "jsonBody",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.JsonBodyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-fieldtomatch.html#cfn-wafv2-rulegroup-fieldtomatch-method"
            },
            "remarks": "The method indicates the type of operation that the request is asking the origin to perform.",
            "stability": "external",
            "summary": "Inspect the HTTP method."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1931
          },
          "name": "method",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-fieldtomatch.html#cfn-wafv2-rulegroup-fieldtomatch-querystring"
            },
            "remarks": "This is the part of a URL that appears after a `?` character, if any.",
            "stability": "external",
            "summary": "Inspect the query string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1937
          },
          "name": "queryString",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-fieldtomatch.html#cfn-wafv2-rulegroup-fieldtomatch-singleheader"
            },
            "remarks": "Provide the name of the header to inspect, for example, `User-Agent` or `Referer` . This setting isn't case sensitive.\n\nExample JSON: `\"SingleHeader\": { \"Name\": \"haystack\" }`\n\nAlternately, you can filter and inspect all headers with the `Headers` `FieldToMatch` setting.",
            "stability": "external",
            "summary": "Inspect a single header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1947
          },
          "name": "singleHeader",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-fieldtomatch.html#cfn-wafv2-rulegroup-fieldtomatch-singlequeryargument"
            },
            "remarks": "Provide the name of the query argument to inspect, such as *UserName* or *SalesRegion* . The name can be up to 30 characters long and isn't case sensitive.\n\nExample JSON: `\"SingleQueryArgument\": { \"Name\": \"myArgument\" }`",
            "stability": "external",
            "summary": "Inspect a single query argument."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1955
          },
          "name": "singleQueryArgument",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-fieldtomatch.html#cfn-wafv2-rulegroup-fieldtomatch-uripath"
            },
            "remarks": "This is the part of the web request that identifies a resource, for example, `/images/daily-ad.jpg` .",
            "stability": "external",
            "summary": "Inspect the request URI path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 1961
          },
          "name": "uriPath",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.FieldToMatchProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-forwardedipconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.\n\nThis configuration is used for `GeoMatchStatement` and `RateBasedStatement` . For `IPSetReferenceStatement` , use `IPSetForwardedIPConfig` instead.\n\nAWS WAF only evaluates the first IP address found in the specified HTTP header.",
        "stability": "external",
        "summary": "The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst forwardedIPConfigurationProperty: wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty = {\n  fallbackBehavior: 'fallbackBehavior',\n  headerName: 'headerName',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 2055
      },
      "name": "ForwardedIPConfigurationProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-forwardedipconfiguration.html#cfn-wafv2-rulegroup-forwardedipconfiguration-fallbackbehavior"
            },
            "remarks": "> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.\n\nYou can specify the following fallback behaviors:\n\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.",
            "stability": "external",
            "summary": "The match status to assign to the web request if the request doesn't have a valid IP address in the specified position."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2068
          },
          "name": "fallbackBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-forwardedipconfiguration.html#cfn-wafv2-rulegroup-forwardedipconfiguration-headername"
            },
            "remarks": "For example, to use the X-Forwarded-For (XFF) header, set this to `X-Forwarded-For` .\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.",
            "stability": "external",
            "summary": "The name of the HTTP header to use for the IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2076
          },
          "name": "headerName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.ForwardedIPConfigurationProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.GeoMatchStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-geomatchstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A rule statement used to identify web requests based on country of origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst geoMatchStatementProperty: wafv2.CfnRuleGroup.GeoMatchStatementProperty = {\n  countryCodes: ['countryCodes'],\n  forwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.GeoMatchStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 2142
      },
      "name": "GeoMatchStatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-geomatchstatement.html#cfn-wafv2-rulegroup-geomatchstatement-countrycodes"
            },
            "stability": "external",
            "summary": "An array of two-character country codes, for example, `[ \"US\", \"CN\" ]` , from the alpha-2 country ISO codes of the ISO 3166 international standard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2148
          },
          "name": "countryCodes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-geomatchstatement.html#cfn-wafv2-rulegroup-geomatchstatement-forwardedipconfig"
            },
            "remarks": "Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.",
            "stability": "external",
            "summary": "The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2156
          },
          "name": "forwardedIpConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.GeoMatchStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.HeaderMatchPatternProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-headermatchpattern.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You must specify exactly one setting: either `All` , `IncludedHeaders` , or `ExcludedHeaders` .\n\nExample JSON: `\"MatchPattern\": { \"ExcludedHeaders\": {\"KeyToExclude1\", \"KeyToExclude2\"} }`",
        "stability": "external",
        "summary": "The filter to use to identify the subset of headers to inspect in a web request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst headerMatchPatternProperty: wafv2.CfnRuleGroup.HeaderMatchPatternProperty = {\n  all: all,\n  excludedHeaders: ['excludedHeaders'],\n  includedHeaders: ['includedHeaders'],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.HeaderMatchPatternProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 2224
      },
      "name": "HeaderMatchPatternProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-headermatchpattern.html#cfn-wafv2-rulegroup-headermatchpattern-all"
            },
            "stability": "external",
            "summary": "Inspect all headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2230
          },
          "name": "all",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-headermatchpattern.html#cfn-wafv2-rulegroup-headermatchpattern-excludedheaders"
            },
            "stability": "external",
            "summary": "Inspect only the headers whose keys don't match any of the strings specified here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2236
          },
          "name": "excludedHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-headermatchpattern.html#cfn-wafv2-rulegroup-headermatchpattern-includedheaders"
            },
            "stability": "external",
            "summary": "Inspect only the headers that have a key that matches one of the strings specified here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2242
          },
          "name": "includedHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.HeaderMatchPatternProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.HeadersProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-headers.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can specify the parts of the headers to inspect and you can narrow the set of headers to inspect by including or excluding specific keys.\n\nThis is used to indicate the web request component to inspect, in the `FieldToMatch` specification.\n\nIf you want to inspect just the value of a single header, use the `SingleHeader` `FieldToMatch` setting instead.\n\nExample JSON: `\"Headers\": { \"MatchPattern\": { \"All\": {} }, \"MatchScope\": \"KEY\", \"OversizeHandling\": \"MATCH\" }`",
        "stability": "external",
        "summary": "Inspect all headers in the web request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst headersProperty: wafv2.CfnRuleGroup.HeadersProperty = {\n  matchPattern: {\n    all: all,\n    excludedHeaders: ['excludedHeaders'],\n    includedHeaders: ['includedHeaders'],\n  },\n  matchScope: 'matchScope',\n  oversizeHandling: 'oversizeHandling',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.HeadersProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 2315
      },
      "name": "HeadersProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-headers.html#cfn-wafv2-rulegroup-headers-matchpattern"
            },
            "remarks": "You must specify exactly one setting: either `All` , `IncludedHeaders` , or `ExcludedHeaders` .\n\nExample JSON: `\"MatchPattern\": { \"ExcludedHeaders\": {\"KeyToExclude1\", \"KeyToExclude2\"} }`",
            "stability": "external",
            "summary": "The filter to use to identify the subset of headers to inspect in a web request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2325
          },
          "name": "matchPattern",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.HeaderMatchPatternProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-headers.html#cfn-wafv2-rulegroup-headers-matchscope"
            },
            "remarks": "If you specify `All` , AWS WAF inspects both keys and values.",
            "stability": "external",
            "summary": "The parts of the headers to match with the rule inspection criteria."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2331
          },
          "name": "matchScope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-headers.html#cfn-wafv2-rulegroup-headers-oversizehandling"
            },
            "remarks": "AWS WAF does not support inspecting the entire contents of request headers when they exceed 8 KB (8192 bytes) or 200 total headers. The underlying host service forwards a maximum of 200 headers and at most 8 KB of header contents to AWS WAF .\n\nThe options for oversize handling are the following:\n\n- `CONTINUE` - Inspect the headers normally, according to the rule inspection criteria.\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.",
            "stability": "external",
            "summary": "What AWS WAF should do if the headers of the request are larger than AWS WAF can inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2343
          },
          "name": "oversizeHandling",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.HeadersProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.IPSetForwardedIPConfigurationProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ipsetforwardedipconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.\n\nThis configuration is used only for `IPSetReferenceStatement` . For `GeoMatchStatement` and `RateBasedStatement` , use `ForwardedIPConfig` instead.",
        "stability": "external",
        "summary": "The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst iPSetForwardedIPConfigurationProperty: wafv2.CfnRuleGroup.IPSetForwardedIPConfigurationProperty = {\n  fallbackBehavior: 'fallbackBehavior',\n  headerName: 'headerName',\n  position: 'position',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.IPSetForwardedIPConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 2417
      },
      "name": "IPSetForwardedIPConfigurationProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ipsetforwardedipconfiguration.html#cfn-wafv2-rulegroup-ipsetforwardedipconfiguration-fallbackbehavior"
            },
            "remarks": "> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.\n\nYou can specify the following fallback behaviors:\n\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.",
            "stability": "external",
            "summary": "The match status to assign to the web request if the request doesn't have a valid IP address in the specified position."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2430
          },
          "name": "fallbackBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ipsetforwardedipconfiguration.html#cfn-wafv2-rulegroup-ipsetforwardedipconfiguration-headername"
            },
            "remarks": "For example, to use the X-Forwarded-For (XFF) header, set this to `X-Forwarded-For` .\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.",
            "stability": "external",
            "summary": "The name of the HTTP header to use for the IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2438
          },
          "name": "headerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ipsetforwardedipconfiguration.html#cfn-wafv2-rulegroup-ipsetforwardedipconfiguration-position"
            },
            "remarks": "The header can contain IP addresses of the original client and also of proxies. For example, the header value could be `10.1.1.1, 127.0.0.0, 10.10.10.10` where the first IP address identifies the original client and the rest identify proxies that the request went through.\n\nThe options for this setting are the following:\n\n- FIRST - Inspect the first IP address in the list of IP addresses in the header. This is usually the client's original IP.\n- LAST - Inspect the last IP address in the list of IP addresses in the header.\n- ANY - Inspect all IP addresses in the header for a match. If the header contains more than 10 IP addresses, AWS WAF inspects the last 10.",
            "stability": "external",
            "summary": "The position in the header to search for the IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2450
          },
          "name": "position",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.IPSetForwardedIPConfigurationProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.IPSetReferenceStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ipsetreferencestatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "To use this, create an `IPSet` that specifies the addresses you want to detect, then use the ARN of that set in this statement.\n\nEach IP set rule statement references an IP set. You create and maintain the set independent of your rules. This allows you to use the single set in multiple rules. When you update the referenced set, AWS WAF automatically updates all rules that reference it.",
        "stability": "external",
        "summary": "A rule statement used to detect web requests coming from particular IP addresses or address ranges.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst iPSetReferenceStatementProperty: wafv2.CfnRuleGroup.IPSetReferenceStatementProperty = {\n  arn: 'arn',\n\n  // the properties below are optional\n  ipSetForwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n    position: 'position',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.IPSetReferenceStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 2522
      },
      "name": "IPSetReferenceStatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ipsetreferencestatement.html#cfn-wafv2-rulegroup-ipsetreferencestatement-arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the `IPSet` that this statement references."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2528
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ipsetreferencestatement.html#cfn-wafv2-rulegroup-ipsetreferencestatement-ipsetforwardedipconfig"
            },
            "remarks": "Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.",
            "stability": "external",
            "summary": "The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2536
          },
          "name": "ipSetForwardedIpConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.IPSetForwardedIPConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.IPSetReferenceStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.ImmunityTimePropertyProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-immunitytimeproperty.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Determines how long a `CAPTCHA` token remains valid after the client successfully solves a `CAPTCHA` puzzle.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst immunityTimePropertyProperty: wafv2.CfnRuleGroup.ImmunityTimePropertyProperty = {\n  immunityTime: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.ImmunityTimePropertyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 2601
      },
      "name": "ImmunityTimePropertyProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-immunitytimeproperty.html#cfn-wafv2-rulegroup-immunitytimeproperty-immunitytime"
            },
            "remarks": "The default setting is 300.",
            "stability": "external",
            "summary": "The amount of time, in seconds, that a `CAPTCHA` token is valid."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2607
          },
          "name": "immunityTime",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.ImmunityTimePropertyProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.JsonBodyProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-jsonbody.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is used to indicate the web request component to inspect, in the `FieldToMatch` specification.\n\nUse the specifications in this object to indicate which parts of the JSON body to inspect using the rule's inspection criteria. AWS WAF inspects only the parts of the JSON that result from the matches that you indicate.\n\nExample JSON: `\"JsonBody\": { \"MatchPattern\": { \"All\": {} }, \"MatchScope\": \"ALL\" }`",
        "stability": "external",
        "summary": "Inspect the body of the web request as JSON. The body immediately follows the request headers.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst jsonBodyProperty: wafv2.CfnRuleGroup.JsonBodyProperty = {\n  matchPattern: {\n    all: all,\n    includedPaths: ['includedPaths'],\n  },\n  matchScope: 'matchScope',\n\n  // the properties below are optional\n  invalidFallbackBehavior: 'invalidFallbackBehavior',\n  oversizeHandling: 'oversizeHandling',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.JsonBodyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 2675
      },
      "name": "JsonBodyProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-jsonbody.html#cfn-wafv2-rulegroup-jsonbody-matchpattern"
            },
            "remarks": "AWS WAF inspects the results of these pattern matches against the rule inspection criteria.",
            "stability": "external",
            "summary": "The patterns to look for in the JSON body."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2701
          },
          "name": "matchPattern",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.JsonMatchPatternProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-jsonbody.html#cfn-wafv2-rulegroup-jsonbody-matchscope"
            },
            "remarks": "If you specify `All` , AWS WAF matches against keys and values.",
            "stability": "external",
            "summary": "The parts of the JSON to match against using the `MatchPattern` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2707
          },
          "name": "matchScope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-jsonbody.html#cfn-wafv2-rulegroup-jsonbody-invalidfallbackbehavior"
            },
            "remarks": "- `EVALUATE_AS_STRING` - Inspect the body as plain text. AWS WAF applies the text transformations and inspection criteria that you defined for the JSON inspection to the body text string.\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.\n\nIf you don't provide this setting, AWS WAF parses and evaluates the content only up to the first parsing failure that it encounters.\n\nAWS WAF does its best to parse the entire JSON body, but might be forced to stop for reasons such as invalid characters, duplicate keys, truncation, and any content whose root node isn't an object or an array.\n\nAWS WAF parses the JSON in the following examples as two valid key, value pairs:\n\n- Missing comma: `{\"key1\":\"value1\"\"key2\":\"value2\"}`\n- Missing colon: `{\"key1\":\"value1\",\"key2\"\"value2\"}`\n- Extra colons: `{\"key1\"::\"value1\",\"key2\"\"value2\"}`",
            "stability": "external",
            "summary": "What AWS WAF should do if it fails to completely parse the JSON body. The options are the following:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2695
          },
          "name": "invalidFallbackBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-jsonbody.html#cfn-wafv2-rulegroup-jsonbody-oversizehandling"
            },
            "remarks": "AWS WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to AWS WAF by the underlying host service.\n\nThe options for oversize handling are the following:\n\n- `CONTINUE` - Inspect the body normally, according to the rule inspection criteria.\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.\n\nYou can combine the `MATCH` or `NO_MATCH` settings for oversize handling with your rule and web ACL action settings, so that you block any request whose body is over 8 KB.\n\nDefault: `CONTINUE`",
            "stability": "external",
            "summary": "What AWS WAF should do if the body is larger than AWS WAF can inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2723
          },
          "name": "oversizeHandling",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.JsonBodyProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.JsonMatchPatternProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-jsonmatchpattern.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "AWS WAF inspects the results of these pattern matches against the rule inspection criteria. This is used with the `FieldToMatch` option `JsonBody` .",
        "stability": "external",
        "summary": "The patterns to look for in the JSON body.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst jsonMatchPatternProperty: wafv2.CfnRuleGroup.JsonMatchPatternProperty = {\n  all: all,\n  includedPaths: ['includedPaths'],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.JsonMatchPatternProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 2795
      },
      "name": "JsonMatchPatternProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-jsonmatchpattern.html#cfn-wafv2-rulegroup-jsonmatchpattern-all"
            },
            "remarks": "You must specify either this setting or the `IncludedPaths` setting, but not both.",
            "stability": "external",
            "summary": "Match all of the elements. See also `MatchScope` in the `JsonBody` `FieldToMatch` specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2803
          },
          "name": "all",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-jsonmatchpattern.html#cfn-wafv2-rulegroup-jsonmatchpattern-includedpaths"
            },
            "remarks": "Provide the include paths using JSON Pointer syntax. For example, `\"IncludedPaths\": [\"/dogs/0/name\", \"/dogs/1/name\"]` . For information about this syntax, see the Internet Engineering Task Force (IETF) documentation [JavaScript Object Notation (JSON) Pointer](https://docs.aws.amazon.com/https://tools.ietf.org/html/rfc6901) .\n\nYou must specify either this setting or the `All` setting, but not both.\n\n> Don't use this option to include all paths. Instead, use the `All` setting.",
            "stability": "external",
            "summary": "Match only the specified include paths. See also `MatchScope` in the `JsonBody` `FieldToMatch` specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2815
          },
          "name": "includedPaths",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.JsonMatchPatternProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelMatchStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-labelmatchstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The label match statement provides the label or namespace string to search for. The label string can represent a part or all of the fully qualified label name that had been added to the web request. Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web ACL context of the rule that added the label. If you do not provide the fully qualified name in your label match string, AWS WAF performs the search for labels that were added in the same context as the label match statement.",
        "stability": "external",
        "summary": "A rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst labelMatchStatementProperty: wafv2.CfnRuleGroup.LabelMatchStatementProperty = {\n  key: 'key',\n  scope: 'scope',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelMatchStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 2949
      },
      "name": "LabelMatchStatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-labelmatchstatement.html#cfn-wafv2-rulegroup-labelmatchstatement-key"
            },
            "remarks": "- If the `Scope` indicates `LABEL` , then this specification must include the name and can include any number of preceding namespace specifications and prefix up to providing the fully qualified label name.\n- If the `Scope` indicates `NAMESPACE` , then this specification can include any number of contiguous namespace strings, and can include the entire label namespace prefix from the rule group or web ACL where the label originates.\n\nLabels are case sensitive and components of a label must be separated by colon, for example `NS1:NS2:name` .",
            "stability": "external",
            "summary": "The string to match against. The setting you provide for this depends on the match statement's `Scope` setting:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2960
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-labelmatchstatement.html#cfn-wafv2-rulegroup-labelmatchstatement-scope"
            },
            "stability": "external",
            "summary": "Specify whether you want to match using the label name or just the namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2966
          },
          "name": "scope",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.LabelMatchStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-label.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is used as an element of a label array in `RuleLabels` inside a rule.",
        "stability": "external",
        "summary": "A single label container.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst labelProperty: wafv2.CfnRuleGroup.LabelProperty = {\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 2879
      },
      "name": "LabelProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-label.html#cfn-wafv2-rulegroup-label-name"
            },
            "stability": "external",
            "summary": "The label string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 2885
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.LabelProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelSummaryProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-labelsummary.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This summary object is used for the following rule group lists:\n\n- `AvailableLabels` - Labels that rules add to matching requests. These labels are defined in the `RuleLabels` for a rule.\n- `ConsumedLabels` - Labels that rules match against. These labels are defined in a `LabelMatchStatement` specification, in the `Statement` definition of a rule.",
        "stability": "external",
        "summary": "List of labels used by one or more of the rules of a `RuleGroup` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst labelSummaryProperty: wafv2.CfnRuleGroup.LabelSummaryProperty = {\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelSummaryProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 3035
      },
      "name": "LabelSummaryProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-labelsummary.html#cfn-wafv2-rulegroup-labelsummary-name"
            },
            "stability": "external",
            "summary": "An individual label specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3041
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.LabelSummaryProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.NotStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-notstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You provide one `Statement` within the `NotStatement` .",
        "stability": "external",
        "summary": "A logical rule statement used to negate the results of another rule statement.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst notStatementProperty: wafv2.CfnRuleGroup.NotStatementProperty = {\n  statement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.NotStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 3102
      },
      "name": "NotStatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-notstatement.html#cfn-wafv2-rulegroup-notstatement-statement"
            },
            "remarks": "You can use any statement that can be nested.",
            "stability": "external",
            "summary": "The statement to negate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3108
          },
          "name": "statement",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.StatementProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.NotStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.OrStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-orstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You provide more than one `Statement` within the `OrStatement` .",
        "stability": "external",
        "summary": "A logical rule statement used to combine other rule statements with OR logic.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst orStatementProperty: wafv2.CfnRuleGroup.OrStatementProperty = {\n  statements: [{\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.OrStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 3170
      },
      "name": "OrStatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-orstatement.html#cfn-wafv2-rulegroup-orstatement-statements"
            },
            "remarks": "You can use any statements that can be nested.",
            "stability": "external",
            "summary": "The statements to combine with OR logic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3176
          },
          "name": "statements",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.StatementProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.OrStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.RateBasedStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ratebasedstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can use this to put a temporary block on requests from an IP address that is sending excessive requests.\n\nAWS WAF tracks and manages web requests separately for each instance of a rate-based rule that you use. For example, if you provide the same rate-based rule settings in two web ACLs, each of the two rule statements represents a separate instance of the rate-based rule and gets its own tracking and management by AWS WAF . If you define a rate-based rule inside a rule group, and then use that rule group in multiple places, each use creates a separate instance of the rate-based rule that gets its own tracking and management by AWS WAF .\n\nWhen the rule action triggers, AWS WAF blocks additional requests from the IP address until the request rate falls below the limit.\n\nYou can optionally nest another statement inside the rate-based statement, to narrow the scope of the rule so that it only counts requests that match the nested statement. For example, based on recent requests that you have seen from an attacker, you might create a rate-based rule with a nested AND rule statement that contains the following nested statements:\n\n- An IP match statement with an IP set that specified the address 192.0.2.44.\n- A string match statement that searches in the User-Agent header for the string BadBot.\n\nIn this rate-based rule, you also define a rate limit. For this example, the rate limit is 1,000. Requests that meet the criteria of both of the nested statements are counted. If the count exceeds 1,000 requests per five minutes, the rule action triggers. Requests that do not meet the criteria of both of the nested statements are not counted towards the rate limit and are not affected by this rule.\n\nYou cannot nest a `RateBasedStatement` inside another statement, for example inside a `NotStatement` or `OrStatement` . You can define a `RateBasedStatement` inside a web ACL and inside a rule group.",
        "stability": "external",
        "summary": "A rate-based rule tracks the rate of requests for each originating IP address, and triggers the rule action when the rate exceeds a limit that you specify on the number of requests in any 5-minute time span.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst rateBasedStatementProperty: wafv2.CfnRuleGroup.RateBasedStatementProperty = {\n  aggregateKeyType: 'aggregateKeyType',\n  limit: 123,\n\n  // the properties below are optional\n  forwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n  },\n  scopeDownStatement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RateBasedStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 3251
      },
      "name": "RateBasedStatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ratebasedstatement.html#cfn-wafv2-rulegroup-ratebasedstatement-aggregatekeytype"
            },
            "remarks": "- IP - Aggregate the request counts on the IP address from the web request origin.\n- FORWARDED_IP - Aggregate the request counts on the first IP address in an HTTP header. If you use this, configure the `ForwardedIPConfig` , to specify the header to use.",
            "stability": "external",
            "summary": "Setting that indicates how to aggregate the request counts. The options are the following:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3260
          },
          "name": "aggregateKeyType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ratebasedstatement.html#cfn-wafv2-rulegroup-ratebasedstatement-limit"
            },
            "remarks": "If the statement includes a `ScopeDownStatement` , this limit is applied only to the requests that match the statement.",
            "stability": "external",
            "summary": "The limit on requests per 5-minute period for a single originating IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3276
          },
          "name": "limit",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ratebasedstatement.html#cfn-wafv2-rulegroup-ratebasedstatement-forwardedipconfig"
            },
            "remarks": "Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.\n\nThis is required if `AggregateKeyType` is set to `FORWARDED_IP` .",
            "stability": "external",
            "summary": "The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3270
          },
          "name": "forwardedIpConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.ForwardedIPConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ratebasedstatement.html#cfn-wafv2-rulegroup-ratebasedstatement-scopedownstatement"
            },
            "remarks": "Requests are only tracked by the rate-based statement if they match the scope-down statement. You can use any nestable `Statement` in the scope-down statement, and you can nest statements at any level, the same as you can for a rule statement.",
            "stability": "external",
            "summary": "An optional nested statement that narrows the scope of the web requests that are evaluated by the rate-based statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3282
          },
          "name": "scopeDownStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.StatementProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.RateBasedStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.RegexMatchStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-regexmatchstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A rule statement used to search web request components for a match against a single regular expression.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst regexMatchStatementProperty: wafv2.CfnRuleGroup.RegexMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  regexString: 'regexString',\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RegexMatchStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 3354
      },
      "name": "RegexMatchStatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-regexmatchstatement.html#cfn-wafv2-rulegroup-regexmatchstatement-fieldtomatch"
            },
            "stability": "external",
            "summary": "The part of the web request that you want AWS WAF to inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3360
          },
          "name": "fieldToMatch",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.FieldToMatchProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-regexmatchstatement.html#cfn-wafv2-rulegroup-regexmatchstatement-regexstring"
            },
            "stability": "external",
            "summary": "The string representing the regular expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3366
          },
          "name": "regexString",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-regexmatchstatement.html#cfn-wafv2-rulegroup-regexmatchstatement-texttransformations"
            },
            "remarks": "If you specify one or more transformations in a rule statement, AWS WAF performs all transformations on the content of the request component identified by `FieldToMatch` , starting from the lowest priority setting, before inspecting the content for a match.",
            "stability": "external",
            "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3372
          },
          "name": "textTransformations",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.TextTransformationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.RegexMatchStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-regexpatternsetreferencestatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "To use this, create a `RegexPatternSet` that specifies the expressions that you want to detect, then use the ARN of that set in this statement. A web request matches the pattern set rule statement if the request component matches any of the patterns in the set.\n\nEach regex pattern set rule statement references a regex pattern set. You create and maintain the set independent of your rules. This allows you to use the single set in multiple rules. When you update the referenced set, AWS WAF automatically updates all rules that reference it.",
        "stability": "external",
        "summary": "A rule statement used to search web request components for matches with regular expressions.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst regexPatternSetReferenceStatementProperty: wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty = {\n  arn: 'arn',\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 3444
      },
      "name": "RegexPatternSetReferenceStatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-regexpatternsetreferencestatement.html#cfn-wafv2-rulegroup-regexpatternsetreferencestatement-arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the `RegexPatternSet` that this statement references."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3450
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-regexpatternsetreferencestatement.html#cfn-wafv2-rulegroup-regexpatternsetreferencestatement-fieldtomatch"
            },
            "stability": "external",
            "summary": "The part of the web request that you want AWS WAF to inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3456
          },
          "name": "fieldToMatch",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.FieldToMatchProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-regexpatternsetreferencestatement.html#cfn-wafv2-rulegroup-regexpatternsetreferencestatement-texttransformations"
            },
            "remarks": "If you specify one or more transformations in a rule statement, AWS WAF performs all transformations on the content of the request component identified by `FieldToMatch` , starting from the lowest priority setting, before inspecting the content for a match.",
            "stability": "external",
            "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3462
          },
          "name": "textTransformations",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.TextTransformationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.RegexPatternSetReferenceStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.RuleActionProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ruleaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Settings at the web ACL level can override the rule action setting.",
        "stability": "external",
        "summary": "The action that AWS WAF should take on a web request when it matches a rule's statement.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const allow: any;\ndeclare const block: any;\ndeclare const captcha: any;\ndeclare const count: any;\nconst ruleActionProperty: wafv2.CfnRuleGroup.RuleActionProperty = {\n  allow: allow,\n  block: block,\n  captcha: captcha,\n  count: count,\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RuleActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 3668
      },
      "name": "RuleActionProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ruleaction.html#cfn-wafv2-rulegroup-ruleaction-allow"
            },
            "stability": "external",
            "summary": "Instructs AWS WAF to allow the web request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3674
          },
          "name": "allow",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ruleaction.html#cfn-wafv2-rulegroup-ruleaction-block"
            },
            "stability": "external",
            "summary": "Instructs AWS WAF to block the web request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3680
          },
          "name": "block",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ruleaction.html#cfn-wafv2-rulegroup-ruleaction-captcha"
            },
            "remarks": "- If the request includes a valid, unexpired `CAPTCHA` token, AWS WAF allows the web request inspection to proceed to the next rule, similar to a `CountAction` .\n- If the request doesn't include a valid, unexpired `CAPTCHA` token, AWS WAF discontinues the web ACL evaluation of the request and blocks it from going to its intended destination.\n\nAWS WAF generates a response that it sends back to the client, which includes the following:\n\n- The header `x-amzn-waf-action` with a value of `captcha` .\n- The HTTP status code `405 Method Not Allowed` .\n- If the request contains an `Accept` header with a value of `text/html` , the response includes a `CAPTCHA` challenge.\n\nYou can configure the expiration time in the `CaptchaConfig` `ImmunityTimeProperty` setting at the rule and web ACL level. The rule setting overrides the web ACL setting.\n\nThis action option is available for rules. It isn't available for web ACL default actions.",
            "stability": "external",
            "summary": "Specifies that AWS WAF should run a `CAPTCHA` check against the request:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3699
          },
          "name": "captcha",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-ruleaction.html#cfn-wafv2-rulegroup-ruleaction-count"
            },
            "stability": "external",
            "summary": "Instructs AWS WAF to count the web request and allow it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3705
          },
          "name": "count",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.RuleActionProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.RuleProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-rule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Each rule includes one top-level `Statement` that AWS WAF uses to identify matching web requests, and parameters that govern how AWS WAF handles them.",
        "stability": "external",
        "summary": "A single rule, which you can use in a `WebACL` or `RuleGroup` to identify web requests that you want to allow, block, or count.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allow: any;\ndeclare const allQueryArguments: any;\ndeclare const block: any;\ndeclare const captcha: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst ruleProperty: wafv2.CfnRuleGroup.RuleProperty = {\n  name: 'name',\n  priority: 123,\n  statement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  action: {\n    allow: allow,\n    block: block,\n    captcha: captcha,\n    count: count,\n  },\n  captchaConfig: {\n    immunityTimeProperty: {\n      immunityTime: 123,\n    },\n  },\n  ruleLabels: [{\n    name: 'name',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 3532
      },
      "name": "RuleProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-rule.html#cfn-wafv2-rulegroup-rule-name"
            },
            "remarks": "You can't change the name of a `Rule` after you create it.",
            "stability": "external",
            "summary": "The name of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3550
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-rule.html#cfn-wafv2-rulegroup-rule-priority"
            },
            "remarks": "AWS WAF processes rules with lower priority first. The priorities don't need to be consecutive, but they must all be different.",
            "stability": "external",
            "summary": "If you define more than one `Rule` in a `WebACL` , AWS WAF evaluates each request against the `Rules` in order based on the value of `Priority` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3556
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-rule.html#cfn-wafv2-rulegroup-rule-statement"
            },
            "stability": "external",
            "summary": "The AWS WAF processing statement for the rule, for example `ByteMatchStatement` or `SizeConstraintStatement` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3579
          },
          "name": "statement",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.StatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-rule.html#cfn-wafv2-rulegroup-rule-visibilityconfig"
            },
            "stability": "external",
            "summary": "Defines and enables Amazon CloudWatch metrics and web request sample collection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3585
          },
          "name": "visibilityConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.VisibilityConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-rule.html#cfn-wafv2-rulegroup-rule-action"
            },
            "remarks": "Settings at the web ACL level can override the rule action setting.",
            "stability": "external",
            "summary": "The action that AWS WAF should take on a web request when it matches the rule statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3538
          },
          "name": "action",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RuleActionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-rule.html#cfn-wafv2-rulegroup-rule-captchaconfig"
            },
            "remarks": "If you don't specify this, AWS WAF uses the `CAPTCHA` configuration that's defined for the web ACL.",
            "stability": "external",
            "summary": "Specifies how AWS WAF should handle `CAPTCHA` evaluations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3544
          },
          "name": "captchaConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.CaptchaConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-rule.html#cfn-wafv2-rulegroup-rule-rulelabels"
            },
            "remarks": "AWS WAF applies fully qualified labels to matching web requests. A fully qualified label is the concatenation of a label namespace and a rule label. The rule's rule group or web ACL defines the label namespace.\n\nRules that run after this rule in the web ACL can match against these labels using a `LabelMatchStatement` .\n\nFor each label, provide a case-sensitive string containing optional namespaces and a label name, according to the following guidelines:\n\n- Separate each component of the label with a colon.\n- Each namespace or name can have up to 128 characters.\n- You can specify up to 5 namespaces in a label.\n- Don't use the following reserved words in your label specification: `aws` , `waf` , `managed` , `rulegroup` , `webacl` , `regexpatternset` , or `ipset` .\n\nFor example, `myLabelName` or `nameSpace1:nameSpace2:myLabelName` .",
            "stability": "external",
            "summary": "Labels to apply to web requests that match the rule match statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3573
          },
          "name": "ruleLabels",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.RuleProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.SizeConstraintStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-sizeconstraintstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For example, you can use a size constraint statement to look for query strings that are longer than 100 bytes.\n\nIf you configure AWS WAF to inspect the request body, AWS WAF inspects only the first 8192 bytes (8 KB). If the request body for your web requests never exceeds 8192 bytes, you could use a size constraint statement to block requests that have a request body greater than 8192 bytes.\n\nIf you choose URI for the value of Part of the request to filter on, the slash (/) in the URI counts as one character. For example, the URI `/logo.jpg` is nine characters long.",
        "stability": "external",
        "summary": "A rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<).",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst sizeConstraintStatementProperty: wafv2.CfnRuleGroup.SizeConstraintStatementProperty = {\n  comparisonOperator: 'comparisonOperator',\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  size: 123,\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.SizeConstraintStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 3779
      },
      "name": "SizeConstraintStatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-sizeconstraintstatement.html#cfn-wafv2-rulegroup-sizeconstraintstatement-comparisonoperator"
            },
            "stability": "external",
            "summary": "The operator to use to compare the request part to the size setting."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3785
          },
          "name": "comparisonOperator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-sizeconstraintstatement.html#cfn-wafv2-rulegroup-sizeconstraintstatement-fieldtomatch"
            },
            "stability": "external",
            "summary": "The part of the web request that you want AWS WAF to inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3791
          },
          "name": "fieldToMatch",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.FieldToMatchProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-sizeconstraintstatement.html#cfn-wafv2-rulegroup-sizeconstraintstatement-size"
            },
            "stability": "external",
            "summary": "The size, in byte, to compare to the request part, after any transformations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3797
          },
          "name": "size",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-sizeconstraintstatement.html#cfn-wafv2-rulegroup-sizeconstraintstatement-texttransformations"
            },
            "remarks": "If you specify one or more transformations in a rule statement, AWS WAF performs all transformations on the content of the request component identified by `FieldToMatch` , starting from the lowest priority setting, before inspecting the content for a match.",
            "stability": "external",
            "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3803
          },
          "name": "textTransformations",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.TextTransformationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.SizeConstraintStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.SqliMatchStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-sqlimatchstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Attackers insert malicious SQL code into web requests to do things like modify your database or extract data from it.",
        "stability": "external",
        "summary": "A rule statement that inspects for malicious SQL code.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst sqliMatchStatementProperty: wafv2.CfnRuleGroup.SqliMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n\n  // the properties below are optional\n  sensitivityLevel: 'sensitivityLevel',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.SqliMatchStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 3877
      },
      "name": "SqliMatchStatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-sqlimatchstatement.html#cfn-wafv2-rulegroup-sqlimatchstatement-fieldtomatch"
            },
            "stability": "external",
            "summary": "The part of the web request that you want AWS WAF to inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3883
          },
          "name": "fieldToMatch",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.FieldToMatchProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-sqlimatchstatement.html#cfn-wafv2-rulegroup-sqlimatchstatement-texttransformations"
            },
            "remarks": "If you specify one or more transformations in a rule statement, AWS WAF performs all transformations on the content of the request component identified by `FieldToMatch` , starting from the lowest priority setting, before inspecting the content for a match.",
            "stability": "external",
            "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3895
          },
          "name": "textTransformations",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.TextTransformationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-sqlimatchstatement.html#cfn-wafv2-rulegroup-sqlimatchstatement-sensitivitylevel"
            },
            "stability": "external",
            "summary": "`CfnRuleGroup.SqliMatchStatementProperty.SensitivityLevel`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3889
          },
          "name": "sensitivityLevel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.SqliMatchStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.StatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The processing guidance for a rule, used by AWS WAF to determine whether a web request matches the rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const andStatementProperty_: wafv2.CfnRuleGroup.AndStatementProperty;\ndeclare const method: any;\ndeclare const notStatementProperty_: wafv2.CfnRuleGroup.NotStatementProperty;\ndeclare const orStatementProperty_: wafv2.CfnRuleGroup.OrStatementProperty;\ndeclare const queryString: any;\ndeclare const rateBasedStatementProperty_: wafv2.CfnRuleGroup.RateBasedStatementProperty;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst statementProperty: wafv2.CfnRuleGroup.StatementProperty = {\n  andStatement: {\n    statements: [{\n      andStatement: andStatementProperty_,\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    }],\n  },\n  byteMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    positionalConstraint: 'positionalConstraint',\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n\n    // the properties below are optional\n    searchString: 'searchString',\n    searchStringBase64: 'searchStringBase64',\n  },\n  geoMatchStatement: {\n    countryCodes: ['countryCodes'],\n    forwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n    },\n  },\n  ipSetReferenceStatement: {\n    arn: 'arn',\n\n    // the properties below are optional\n    ipSetForwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n      position: 'position',\n    },\n  },\n  labelMatchStatement: {\n    key: 'key',\n    scope: 'scope',\n  },\n  notStatement: {\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: notStatementProperty_,\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n  },\n  orStatement: {\n    statements: [{\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: orStatementProperty_,\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    }],\n  },\n  rateBasedStatement: {\n    aggregateKeyType: 'aggregateKeyType',\n    limit: 123,\n\n    // the properties below are optional\n    forwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n    },\n    scopeDownStatement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: rateBasedStatementProperty_,\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n  },\n  regexMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    regexString: 'regexString',\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  regexPatternSetReferenceStatement: {\n    arn: 'arn',\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  sizeConstraintStatement: {\n    comparisonOperator: 'comparisonOperator',\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    size: 123,\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  sqliMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n\n    // the properties below are optional\n    sensitivityLevel: 'sensitivityLevel',\n  },\n  xssMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.StatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 3964
      },
      "name": "StatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html#cfn-wafv2-rulegroup-statement-andstatement"
            },
            "remarks": "You provide more than one `Statement` within the `AndStatement` .",
            "stability": "external",
            "summary": "A logical rule statement used to combine other rule statements with AND logic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3970
          },
          "name": "andStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.AndStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html#cfn-wafv2-rulegroup-statement-bytematchstatement"
            },
            "remarks": "The byte match statement provides the bytes to search for, the location in requests that you want AWS WAF to search, and other settings. The bytes to search for are typically a string that corresponds with ASCII characters. In the AWS WAF console and the developer guide, this is called a string match statement.",
            "stability": "external",
            "summary": "A rule statement that defines a string match search for AWS WAF to apply to web requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3976
          },
          "name": "byteMatchStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.ByteMatchStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html#cfn-wafv2-rulegroup-statement-geomatchstatement"
            },
            "stability": "external",
            "summary": "A rule statement used to identify web requests based on country of origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3982
          },
          "name": "geoMatchStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.GeoMatchStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html#cfn-wafv2-rulegroup-statement-ipsetreferencestatement"
            },
            "remarks": "To use this, create an `IPSet` that specifies the addresses you want to detect, then use the ARN of that set in this statement.\n\nEach IP set rule statement references an IP set. You create and maintain the set independent of your rules. This allows you to use the single set in multiple rules. When you update the referenced set, AWS WAF automatically updates all rules that reference it.",
            "stability": "external",
            "summary": "A rule statement used to detect web requests coming from particular IP addresses or address ranges."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3990
          },
          "name": "ipSetReferenceStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.IPSetReferenceStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html#cfn-wafv2-rulegroup-statement-labelmatchstatement"
            },
            "remarks": "The label match statement provides the label or namespace string to search for. The label string can represent a part or all of the fully qualified label name that had been added to the web request. Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web ACL context of the rule that added the label. If you do not provide the fully qualified name in your label match string, AWS WAF performs the search for labels that were added in the same context as the label match statement.",
            "stability": "external",
            "summary": "A rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 3998
          },
          "name": "labelMatchStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.LabelMatchStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html#cfn-wafv2-rulegroup-statement-notstatement"
            },
            "remarks": "You provide one `Statement` within the `NotStatement` .",
            "stability": "external",
            "summary": "A logical rule statement used to negate the results of another rule statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4004
          },
          "name": "notStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.NotStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html#cfn-wafv2-rulegroup-statement-orstatement"
            },
            "remarks": "You provide more than one `Statement` within the `OrStatement` .",
            "stability": "external",
            "summary": "A logical rule statement used to combine other rule statements with OR logic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4010
          },
          "name": "orStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.OrStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html#cfn-wafv2-rulegroup-statement-ratebasedstatement"
            },
            "remarks": "You can use this to put a temporary block on requests from an IP address that is sending excessive requests.\n\nAWS WAF tracks and manages web requests separately for each instance of a rate-based rule that you use. For example, if you provide the same rate-based rule settings in two web ACLs, each of the two rule statements represents a separate instance of the rate-based rule and gets its own tracking and management by AWS WAF . If you define a rate-based rule inside a rule group, and then use that rule group in multiple places, each use creates a separate instance of the rate-based rule that gets its own tracking and management by AWS WAF .\n\nWhen the rule action triggers, AWS WAF blocks additional requests from the IP address until the request rate falls below the limit.\n\nYou can optionally nest another statement inside the rate-based statement, to narrow the scope of the rule so that it only counts requests that match the nested statement. For example, based on recent requests that you have seen from an attacker, you might create a rate-based rule with a nested AND rule statement that contains the following nested statements:\n\n- An IP match statement with an IP set that specified the address 192.0.2.44.\n- A string match statement that searches in the User-Agent header for the string BadBot.\n\nIn this rate-based rule, you also define a rate limit. For this example, the rate limit is 1,000. Requests that meet the criteria of both of the nested statements are counted. If the count exceeds 1,000 requests per five minutes, the rule action triggers. Requests that do not meet the criteria of both of the nested statements are not counted towards the rate limit and are not affected by this rule.\n\nYou cannot nest a `RateBasedStatement` inside another statement, for example inside a `NotStatement` or `OrStatement` . You can define a `RateBasedStatement` inside a web ACL and inside a rule group.",
            "stability": "external",
            "summary": "A rate-based rule tracks the rate of requests for each originating IP address, and triggers the rule action when the rate exceeds a limit that you specify on the number of requests in any 5-minute time span."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4029
          },
          "name": "rateBasedStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RateBasedStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html#cfn-wafv2-rulegroup-statement-regexmatchstatement"
            },
            "stability": "external",
            "summary": "A rule statement used to search web request components for a match against a single regular expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4035
          },
          "name": "regexMatchStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RegexMatchStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html#cfn-wafv2-rulegroup-statement-regexpatternsetreferencestatement"
            },
            "remarks": "To use this, create a `RegexPatternSet` that specifies the expressions that you want to detect, then use the ARN of that set in this statement. A web request matches the pattern set rule statement if the request component matches any of the patterns in the set.\n\nEach regex pattern set rule statement references a regex pattern set. You create and maintain the set independent of your rules. This allows you to use the single set in multiple rules. When you update the referenced set, AWS WAF automatically updates all rules that reference it.",
            "stability": "external",
            "summary": "A rule statement used to search web request components for matches with regular expressions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4043
          },
          "name": "regexPatternSetReferenceStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RegexPatternSetReferenceStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html#cfn-wafv2-rulegroup-statement-sizeconstraintstatement"
            },
            "remarks": "For example, you can use a size constraint statement to look for query strings that are longer than 100 bytes.\n\nIf you configure AWS WAF to inspect the request body, AWS WAF inspects only the first 8192 bytes (8 KB). If the request body for your web requests never exceeds 8192 bytes, you could use a size constraint statement to block requests that have a request body greater than 8192 bytes.\n\nIf you choose URI for the value of Part of the request to filter on, the slash (/) in the URI counts as one character. For example, the URI `/logo.jpg` is nine characters long.",
            "stability": "external",
            "summary": "A rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4053
          },
          "name": "sizeConstraintStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.SizeConstraintStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html#cfn-wafv2-rulegroup-statement-sqlimatchstatement"
            },
            "remarks": "Attackers insert malicious SQL code into web requests to do things like modify your database or extract data from it.",
            "stability": "external",
            "summary": "A rule statement that inspects for malicious SQL code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4059
          },
          "name": "sqliMatchStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.SqliMatchStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-statement.html#cfn-wafv2-rulegroup-statement-xssmatchstatement"
            },
            "remarks": "In XSS attacks, the attacker uses vulnerabilities in a benign website as a vehicle to inject malicious client-site scripts into other legitimate web browsers.",
            "stability": "external",
            "summary": "A rule statement that inspects for cross-site scripting (XSS) attacks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4065
          },
          "name": "xssMatchStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.XssMatchStatementProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.StatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.TextTransformationProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-texttransformation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst textTransformationProperty: wafv2.CfnRuleGroup.TextTransformationProperty = {\n  priority: 123,\n  type: 'type',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.TextTransformationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 4162
      },
      "name": "TextTransformationProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-texttransformation.html#cfn-wafv2-rulegroup-texttransformation-priority"
            },
            "remarks": "AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content. The priorities don't need to be consecutive, but they must all be different.",
            "stability": "external",
            "summary": "Sets the relative processing order for multiple transformations that are defined for a rule statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4168
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-texttransformation.html#cfn-wafv2-rulegroup-texttransformation-type"
            },
            "remarks": "*BASE64_DECODE* - Decode a `Base64` -encoded string.\n\n*BASE64_DECODE_EXT* - Decode a `Base64` -encoded string, but use a forgiving implementation that ignores characters that aren't valid.\n\n*CMD_LINE* - Command-line transformations. These are helpful in reducing effectiveness of attackers who inject an operating system command-line command and use unusual formatting to disguise some or all of the command.\n\n- Delete the following characters: `\\ \" ' ^`\n- Delete spaces before the following characters: `/ (`\n- Replace the following characters with a space: `, ;`\n- Replace multiple spaces with one space\n- Convert uppercase letters (A-Z) to lowercase (a-z)\n\n*COMPRESS_WHITE_SPACE* - Replace these characters with a space character (decimal 32):\n\n- `\\f` , formfeed, decimal 12\n- `\\t` , tab, decimal 9\n- `\\n` , newline, decimal 10\n- `\\r` , carriage return, decimal 13\n- `\\v` , vertical tab, decimal 11\n- Non-breaking space, decimal 160\n\n`COMPRESS_WHITE_SPACE` also replaces multiple spaces with one space.\n\n*CSS_DECODE* - Decode characters that were encoded using CSS 2.x escape rules `syndata.html#characters` . This function uses up to two bytes in the decoding process, so it can help to uncover ASCII characters that were encoded using CSS encoding that wouldn’t typically be encoded. It's also useful in countering evasion, which is a combination of a backslash and non-hexadecimal characters. For example, `ja\\vascript` for javascript.\n\n*ESCAPE_SEQ_DECODE* - Decode the following ANSI C escape sequences: `\\a` , `\\b` , `\\f` , `\\n` , `\\r` , `\\t` , `\\v` , `\\\\` , `\\?` , `\\'` , `\\\"` , `\\xHH` (hexadecimal), `\\0OOO` (octal). Encodings that aren't valid remain in the output.\n\n*HEX_DECODE* - Decode a string of hexadecimal characters into a binary.\n\n*HTML_ENTITY_DECODE* - Replace HTML-encoded characters with unencoded characters. `HTML_ENTITY_DECODE` performs these operations:\n\n- Replaces `(ampersand)quot;` with `\"`\n- Replaces `(ampersand)nbsp;` with a non-breaking space, decimal 160\n- Replaces `(ampersand)lt;` with a \"less than\" symbol\n- Replaces `(ampersand)gt;` with `>`\n- Replaces characters that are represented in hexadecimal format, `(ampersand)#xhhhh;` , with the corresponding characters\n- Replaces characters that are represented in decimal format, `(ampersand)#nnnn;` , with the corresponding characters\n\n*JS_DECODE* - Decode JavaScript escape sequences. If a `\\` `u` `HHHH` code is in the full-width ASCII code range of `FF01-FF5E` , then the higher byte is used to detect and adjust the lower byte. If not, only the lower byte is used and the higher byte is zeroed, causing a possible loss of information.\n\n*LOWERCASE* - Convert uppercase letters (A-Z) to lowercase (a-z).\n\n*MD5* - Calculate an MD5 hash from the data in the input. The computed hash is in a raw binary form.\n\n*NONE* - Specify `NONE` if you don't want any text transformations.\n\n*NORMALIZE_PATH* - Remove multiple slashes, directory self-references, and directory back-references that are not at the beginning of the input from an input string.\n\n*NORMALIZE_PATH_WIN* - This is the same as `NORMALIZE_PATH` , but first converts backslash characters to forward slashes.\n\n*REMOVE_NULLS* - Remove all `NULL` bytes from the input.\n\n*REPLACE_COMMENTS* - Replace each occurrence of a C-style comment ( `/* ... * /` ) with a single space. Multiple consecutive occurrences are not compressed. Unterminated comments are also replaced with a space (ASCII 0x20). However, a standalone termination of a comment ( `* /` ) is not acted upon.\n\n*REPLACE_NULLS* - Replace NULL bytes in the input with space characters (ASCII `0x20` ).\n\n*SQL_HEX_DECODE* - Decode SQL hex data. Example ( `0x414243` ) will be decoded to ( `ABC` ).\n\n*URL_DECODE* - Decode a URL-encoded value.\n\n*URL_DECODE_UNI* - Like `URL_DECODE` , but with support for Microsoft-specific `%u` encoding. If the code is in the full-width ASCII code range of `FF01-FF5E` , the higher byte is used to detect and adjust the lower byte. Otherwise, only the lower byte is used and the higher byte is zeroed.\n\n*UTF8_TO_UNICODE* - Convert all UTF-8 character sequences to Unicode. This helps input normalization, and minimizing false-positives and false-negatives for non-English languages.",
            "stability": "external",
            "summary": "You can specify the following transformation types:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4238
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.TextTransformationProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.VisibilityConfigProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-visibilityconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Defines and enables Amazon CloudWatch metrics and web request sample collection.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst visibilityConfigProperty: wafv2.CfnRuleGroup.VisibilityConfigProperty = {\n  cloudWatchMetricsEnabled: false,\n  metricName: 'metricName',\n  sampledRequestsEnabled: false,\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.VisibilityConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 4304
      },
      "name": "VisibilityConfigProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-visibilityconfig.html#cfn-wafv2-rulegroup-visibilityconfig-cloudwatchmetricsenabled"
            },
            "remarks": "For the list of available metrics, see [AWS WAF Metrics](https://docs.aws.amazon.com/waf/latest/developerguide/monitoring-cloudwatch.html#waf-metrics) .",
            "stability": "external",
            "summary": "A boolean indicating whether the associated resource sends metrics to Amazon CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4310
          },
          "name": "cloudWatchMetricsEnabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-visibilityconfig.html#cfn-wafv2-rulegroup-visibilityconfig-metricname"
            },
            "remarks": "The name can contain only the characters: A-Z, a-z, 0-9, - (hyphen), and _ (underscore). The name can be from one to 128 characters long. It can't contain whitespace or metric names reserved for AWS WAF , for example \"All\" and \"Default_Action.\"",
            "stability": "external",
            "summary": "A name of the Amazon CloudWatch metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4316
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-visibilityconfig.html#cfn-wafv2-rulegroup-visibilityconfig-sampledrequestsenabled"
            },
            "remarks": "You can view the sampled requests through the AWS WAF console.",
            "stability": "external",
            "summary": "A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4322
          },
          "name": "sampledRequestsEnabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.VisibilityConfigProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroup.XssMatchStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-xssmatchstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "In XSS attacks, the attacker uses vulnerabilities in a benign website as a vehicle to inject malicious client-site scripts into other legitimate web browsers.",
        "stability": "external",
        "summary": "A rule statement that inspects for cross-site scripting (XSS) attacks.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst xssMatchStatementProperty: wafv2.CfnRuleGroup.XssMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.XssMatchStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 4392
      },
      "name": "XssMatchStatementProperty",
      "namespace": "CfnRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-xssmatchstatement.html#cfn-wafv2-rulegroup-xssmatchstatement-fieldtomatch"
            },
            "stability": "external",
            "summary": "The part of the web request that you want AWS WAF to inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4398
          },
          "name": "fieldToMatch",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.FieldToMatchProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-xssmatchstatement.html#cfn-wafv2-rulegroup-xssmatchstatement-texttransformations"
            },
            "remarks": "If you specify one or more transformations in a rule statement, AWS WAF performs all transformations on the content of the request component identified by `FieldToMatch` , starting from the lowest priority setting, before inspecting the content for a match.",
            "stability": "external",
            "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4404
          },
          "name": "textTransformations",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.TextTransformationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroup.XssMatchStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnRuleGroupProps": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnRuleGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allow: any;\ndeclare const allQueryArguments: any;\ndeclare const block: any;\ndeclare const captcha: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnRuleGroup.StatementProperty;\ndeclare const uriPath: any;\nconst cfnRuleGroupProps: wafv2.CfnRuleGroupProps = {\n  capacity: 123,\n  scope: 'scope',\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  customResponseBodies: {\n    customResponseBodiesKey: {\n      content: 'content',\n      contentType: 'contentType',\n    },\n  },\n  description: 'description',\n  name: 'name',\n  rules: [{\n    name: 'name',\n    priority: 123,\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    visibilityConfig: {\n      cloudWatchMetricsEnabled: false,\n      metricName: 'metricName',\n      sampledRequestsEnabled: false,\n    },\n\n    // the properties below are optional\n    action: {\n      allow: allow,\n      block: block,\n      captcha: captcha,\n      count: count,\n    },\n    captchaConfig: {\n      immunityTimeProperty: {\n        immunityTime: 123,\n      },\n    },\n    ruleLabels: [{\n      name: 'name',\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 908
      },
      "name": "CfnRuleGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-capacity"
            },
            "remarks": "When you create your own rule group, you define this, and you cannot change it after creation. When you add or modify the rules in a rule group, AWS WAF enforces this limit.\n\nAWS WAF uses WCUs to calculate and control the operating resources that are used to run your rules, rule groups, and web ACLs. AWS WAF calculates capacity differently for each rule type, to reflect the relative cost of each rule. Simple rules that cost little to run use fewer WCUs than more complex rules that use more processing power. Rule group capacity is fixed at creation, which helps users plan their web ACL WCU usage when they use a rule group. The WCU limit for web ACLs is 1,500.",
            "stability": "external",
            "summary": "The web ACL capacity units (WCUs) required for this rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 919
          },
          "name": "capacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-scope"
            },
            "remarks": "A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, or an AWS AppSync GraphQL API. Valid Values are `CLOUDFRONT` and `REGIONAL` .\n\n> For `CLOUDFRONT` , you must create your WAFv2 resources in the US East (N. Virginia) Region, `us-east-1` .",
            "stability": "external",
            "summary": "Specifies whether this is for an Amazon CloudFront distribution or for a regional application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 928
          },
          "name": "scope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-visibilityconfig"
            },
            "stability": "external",
            "summary": "Defines and enables Amazon CloudWatch metrics and web request sample collection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 935
          },
          "name": "visibilityConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.VisibilityConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-customresponsebodies"
            },
            "remarks": "When you create a rule with a block action, you can send a custom response to the web request. You define these for the rule group, and then use them in the rules that you define in the rule group.\n\nFor information about customizing web requests and responses, see [Customizing web requests and responses in AWS WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .\n\nFor information about the limits on count and size for custom request and response settings, see [AWS WAF quotas](https://docs.aws.amazon.com/waf/latest/developerguide/limits.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
            "stability": "external",
            "summary": "A map of custom response keys and content bodies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 946
          },
          "name": "customResponseBodies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.CustomResponseBodyProperty"
                          }
                        ]
                      }
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-description"
            },
            "stability": "external",
            "summary": "A description of the rule group that helps with identification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 953
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-name"
            },
            "remarks": "You cannot change the name of a rule group after you create it.",
            "stability": "external",
            "summary": "The name of the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 960
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-rules"
            },
            "remarks": "Each rule includes one top-level statement that AWS WAF uses to identify matching web requests, and parameters that govern how AWS WAF handles them.",
            "stability": "external",
            "summary": "The rule statements used to identify the web requests that you want to allow, block, or count."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 967
          },
          "name": "rules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnRuleGroup.RuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-tags"
            },
            "remarks": "The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each AWS resource.\n\n> To modify tags on existing resources, use the AWS WAF APIs or command line interface. With AWS CloudFormation , you can only add tags to AWS WAF resources during resource creation.",
            "stability": "external",
            "summary": "Key:value pairs associated with an AWS resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 976
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnRuleGroupProps"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL": {
      "assembly": "@aws-cdk/aws-wafv2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::WAFv2::WebACL",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> This is the latest version of *AWS WAF* , named AWS WAF V2, released in November, 2019. For information, including how to migrate your AWS WAF resources from the prior release, see the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .\n\nUse an `WebACL` to define a collection of rules to use to inspect and control web requests. Each rule has an action defined (allow, block, or count) for requests that match the statement of the rule. In the web ACL, you assign a default action to take (allow, block) for any request that does not match any of the rules. The rules in a web ACL can contain rule statements that you define explicitly and rule statements that reference rule groups and managed rule groups. You can associate a web ACL with one or more AWS resources to protect. The resources can be an Amazon CloudFront distribution, an Amazon API Gateway REST API, an Application Load Balancer , or an AWS AppSync GraphQL API.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::WAFv2::WebACL`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const none: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst cfnWebACL = new wafv2.CfnWebACL(this, 'MyCfnWebACL', {\n  defaultAction: {\n    allow: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    block: {\n      customResponse: {\n        responseCode: 123,\n\n        // the properties below are optional\n        customResponseBodyKey: 'customResponseBodyKey',\n        responseHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  scope: 'scope',\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  captchaConfig: {\n    immunityTimeProperty: {\n      immunityTime: 123,\n    },\n  },\n  customResponseBodies: {\n    customResponseBodiesKey: {\n      content: 'content',\n      contentType: 'contentType',\n    },\n  },\n  description: 'description',\n  name: 'name',\n  rules: [{\n    name: 'name',\n    priority: 123,\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    visibilityConfig: {\n      cloudWatchMetricsEnabled: false,\n      metricName: 'metricName',\n      sampledRequestsEnabled: false,\n    },\n\n    // the properties below are optional\n    action: {\n      allow: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      block: {\n        customResponse: {\n          responseCode: 123,\n\n          // the properties below are optional\n          customResponseBodyKey: 'customResponseBodyKey',\n          responseHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      captcha: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      count: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n    },\n    captchaConfig: {\n      immunityTimeProperty: {\n        immunityTime: 123,\n      },\n    },\n    overrideAction: {\n      count: count,\n      none: none,\n    },\n    ruleLabels: [{\n      name: 'name',\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::WAFv2::WebACL`."
        },
        "locationInModule": {
          "filename": "lib/wafv2.generated.ts",
          "line": 4764
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-wafv2.CfnWebACLProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 4629
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4791
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4810
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnWebACL",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4633
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the web ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4658
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Capacity"
            },
            "remarks": "AWS WAF uses WCUs to calculate and control the operating resources that are used to run your rules, rule groups, and web ACLs. AWS WAF calculates capacity differently for each rule type, to reflect the relative cost of each rule. Simple rules that cost little to run use fewer WCUs than more complex rules that use more processing power. Rule group capacity is fixed at creation, which helps users plan their web ACL WCU usage when they use a rule group. The WCU limit for web ACLs is 1,500.",
            "stability": "external",
            "summary": "The web ACL capacity units (WCUs) currently being used by this web ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4666
          },
          "name": "attrCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the web ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4672
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LabelNamespace"
            },
            "remarks": "All labels added by rules in this web ACL have this prefix.\n\nThe syntax for the label namespace prefix for a web ACL is the following: `awswaf:<account ID>:webacl:<web ACL name>:`\n\nWhen a rule with a label matches a web request, AWS WAF adds the fully qualified label to the request. A fully qualified label is made up of the label namespace from the rule group or web ACL where the rule is defined and the label from the rule, separated by a colon.",
            "stability": "external",
            "summary": "The label namespace prefix for this web ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4682
          },
          "name": "attrLabelNamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4796
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-tags"
            },
            "remarks": "The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each AWS resource.\n\n> To modify tags on existing resources, use the AWS WAF APIs or command line interface. With AWS CloudFormation , you can only add tags to AWS WAF resources during resource creation.",
            "stability": "external",
            "summary": "Key:value pairs associated with an AWS resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4755
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-defaultaction"
            },
            "stability": "external",
            "summary": "The action to perform if none of the `Rules` contained in the `WebACL` match."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4689
          },
          "name": "defaultAction",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.DefaultActionProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-scope"
            },
            "remarks": "A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, or an AWS AppSync GraphQL API. Valid Values are `CLOUDFRONT` and `REGIONAL` .\n\n> For `CLOUDFRONT` , you must create your WAFv2 resources in the US East (N. Virginia) Region, `us-east-1` .\n\nFor information about how to define the association of the web ACL with your resource, see `WebACLAssociation` .",
            "stability": "external",
            "summary": "Specifies whether this is for an Amazon CloudFront distribution or for a regional application."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4700
          },
          "name": "scope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-visibilityconfig"
            },
            "stability": "external",
            "summary": "Defines and enables Amazon CloudWatch metrics and web request sample collection."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4707
          },
          "name": "visibilityConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.VisibilityConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-captchaconfig"
            },
            "remarks": "If you don't specify this, AWS WAF uses its default settings for `CaptchaConfig` .",
            "stability": "external",
            "summary": "Specifies how AWS WAF should handle `CAPTCHA` evaluations for rules that don't have their own `CaptchaConfig` settings."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4714
          },
          "name": "captchaConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CaptchaConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-customresponsebodies"
            },
            "remarks": "When you create a rule with a block action, you can send a custom response to the web request. You define these for the web ACL, and then use them in the rules and default actions that you define in the web ACL.\n\nFor information about customizing web requests and responses, see [Customizing web requests and responses in AWS WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .\n\nFor information about the limits on count and size for custom request and response settings, see [AWS WAF quotas](https://docs.aws.amazon.com/waf/latest/developerguide/limits.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
            "stability": "external",
            "summary": "A map of custom response keys and content bodies."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4725
          },
          "name": "customResponseBodies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomResponseBodyProperty"
                          }
                        ]
                      }
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-description"
            },
            "stability": "external",
            "summary": "A description of the web ACL that helps with identification."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4732
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-name"
            },
            "remarks": "You cannot change the name of a web ACL after you create it.",
            "stability": "external",
            "summary": "The name of the web ACL."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4739
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-rules"
            },
            "remarks": "Each rule includes one top-level statement that AWS WAF uses to identify matching web requests, and parameters that govern how AWS WAF handles them.",
            "stability": "external",
            "summary": "The rule statements used to identify the web requests that you want to allow, block, or count."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4746
          },
          "name": "rules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.AllowActionProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-allowaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is used in the context of other settings, for example to specify values for a rule action or a web ACL default action.",
        "stability": "external",
        "summary": "Specifies that AWS WAF should allow the request and optionally defines additional custom handling for the request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst allowActionProperty: wafv2.CfnWebACL.AllowActionProperty = {\n  customRequestHandling: {\n    insertHeaders: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.AllowActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 4826
      },
      "name": "AllowActionProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-allowaction.html#cfn-wafv2-webacl-allowaction-customrequesthandling"
            },
            "remarks": "For information about customizing web requests and responses, see [Customizing web requests and responses in AWS WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
            "stability": "external",
            "summary": "Defines custom handling for the web request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4834
          },
          "name": "customRequestHandling",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomRequestHandlingProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.AllowActionProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.AndStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-andstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You provide more than one `Statement` within the `AndStatement` .",
        "stability": "external",
        "summary": "A logical rule statement used to combine other rule statements with AND logic.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst andStatementProperty: wafv2.CfnWebACL.AndStatementProperty = {\n  statements: [{\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.AndStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 4895
      },
      "name": "AndStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-andstatement.html#cfn-wafv2-webacl-andstatement-statements"
            },
            "remarks": "You can use any statements that can be nested.",
            "stability": "external",
            "summary": "The statements to combine with AND logic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4901
          },
          "name": "statements",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.StatementProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.AndStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.BlockActionProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-blockaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is used in the context of other settings, for example to specify values for a rule action or a web ACL default action.",
        "stability": "external",
        "summary": "Specifies that AWS WAF should block the request and optionally defines additional custom handling for the response to the web request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst blockActionProperty: wafv2.CfnWebACL.BlockActionProperty = {\n  customResponse: {\n    responseCode: 123,\n\n    // the properties below are optional\n    customResponseBodyKey: 'customResponseBodyKey',\n    responseHeaders: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.BlockActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 4965
      },
      "name": "BlockActionProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-blockaction.html#cfn-wafv2-webacl-blockaction-customresponse"
            },
            "remarks": "For information about customizing web requests and responses, see [Customizing web requests and responses in AWS WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
            "stability": "external",
            "summary": "Defines a custom response for the web request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4973
          },
          "name": "customResponse",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomResponseProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.BlockActionProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.BodyProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-body.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is used to indicate the web request component to inspect, in the `FieldToMatch` specification.",
        "stability": "external",
        "summary": "Inspect the body of the web request. The body immediately follows the request headers.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst bodyProperty: wafv2.CfnWebACL.BodyProperty = {\n  oversizeHandling: 'oversizeHandling',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.BodyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 5036
      },
      "name": "BodyProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-body.html#cfn-wafv2-webacl-body-oversizehandling"
            },
            "remarks": "AWS WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to AWS WAF by the underlying host service.\n\nThe options for oversize handling are the following:\n\n- `CONTINUE` - Inspect the body normally, according to the rule inspection criteria.\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.\n\nYou can combine the `MATCH` or `NO_MATCH` settings for oversize handling with your rule and web ACL action settings, so that you block any request whose body is over 8 KB.\n\nDefault: `CONTINUE`",
            "stability": "external",
            "summary": "What AWS WAF should do if the body is larger than AWS WAF can inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5052
          },
          "name": "oversizeHandling",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.BodyProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.ByteMatchStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-bytematchstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The byte match statement provides the bytes to search for, the location in requests that you want AWS WAF to search, and other settings. The bytes to search for are typically a string that corresponds with ASCII characters. In the AWS WAF console and the developer guide, this is called a string match statement.",
        "stability": "external",
        "summary": "A rule statement that defines a string match search for AWS WAF to apply to web requests.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst byteMatchStatementProperty: wafv2.CfnWebACL.ByteMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  positionalConstraint: 'positionalConstraint',\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n\n  // the properties below are optional\n  searchString: 'searchString',\n  searchStringBase64: 'searchStringBase64',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ByteMatchStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 5113
      },
      "name": "ByteMatchStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-bytematchstatement.html#cfn-wafv2-webacl-bytematchstatement-fieldtomatch"
            },
            "stability": "external",
            "summary": "The part of the web request that you want AWS WAF to inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5119
          },
          "name": "fieldToMatch",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.FieldToMatchProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-bytematchstatement.html#cfn-wafv2-webacl-bytematchstatement-positionalconstraint"
            },
            "remarks": "Valid values include the following:\n\n*CONTAINS*\n\nThe specified part of the web request must include the value of `SearchString` , but the location doesn't matter.\n\n*CONTAINS_WORD*\n\nThe specified part of the web request must include the value of `SearchString` , and `SearchString` must contain only alphanumeric characters or underscore (A-Z, a-z, 0-9, or _). In addition, `SearchString` must be a word, which means that both of the following are true:\n\n- `SearchString` is at the beginning of the specified part of the web request or is preceded by a character other than an alphanumeric character or underscore (_). Examples include the value of a header and `;BadBot` .\n- `SearchString` is at the end of the specified part of the web request or is followed by a character other than an alphanumeric character or underscore (_), for example, `BadBot;` and `-BadBot;` .\n\n*EXACTLY*\n\nThe value of the specified part of the web request must exactly match the value of `SearchString` .\n\n*STARTS_WITH*\n\nThe value of `SearchString` must appear at the beginning of the specified part of the web request.\n\n*ENDS_WITH*\n\nThe value of `SearchString` must appear at the end of the specified part of the web request.",
            "stability": "external",
            "summary": "The area within the portion of the web request that you want AWS WAF to search for `SearchString` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5148
          },
          "name": "positionalConstraint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-bytematchstatement.html#cfn-wafv2-webacl-bytematchstatement-texttransformations"
            },
            "remarks": "If you specify one or more transformations in a rule statement, AWS WAF performs all transformations on the content of the request component identified by `FieldToMatch` , starting from the lowest priority setting, before inspecting the content for a match.",
            "stability": "external",
            "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5174
          },
          "name": "textTransformations",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.TextTransformationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-bytematchstatement.html#cfn-wafv2-webacl-bytematchstatement-searchstring"
            },
            "remarks": "AWS WAF searches only in the part of web requests that you designate for inspection in `FieldToMatch` . The maximum length of the value is 50 bytes. For alphabetic characters A-Z and a-z, the value is case sensitive.\n\nDon't encode this string. Provide the value that you want AWS WAF to search for. AWS CloudFormation automatically base64 encodes the value for you.\n\nFor example, suppose the value of `Type` is `HEADER` and the value of `Data` is `User-Agent` . If you want to search the `User-Agent` header for the value `BadBot` , you provide the string `BadBot` in the value of `SearchString` .\n\nYou must specify either `SearchString` or `SearchStringBase64` in a `ByteMatchStatement` .",
            "stability": "external",
            "summary": "A string value that you want AWS WAF to search for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5160
          },
          "name": "searchString",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-bytematchstatement.html#cfn-wafv2-webacl-bytematchstatement-searchstringbase64"
            },
            "remarks": "If you don't want to encode the string, specify the unencoded value in `SearchString` instead.\n\nYou must specify either `SearchString` or `SearchStringBase64` in a `ByteMatchStatement` .",
            "stability": "external",
            "summary": "String to search for in a web request component, base64-encoded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5168
          },
          "name": "searchStringBase64",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.ByteMatchStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.CaptchaActionProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-captchaaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "- If the request includes a valid, unexpired `CAPTCHA` token, AWS WAF allows the web request inspection to proceed to the next rule, similar to a `CountAction` .\n- If the request doesn't include a valid, unexpired `CAPTCHA` token, AWS WAF discontinues the web ACL evaluation of the request and blocks it from going to its intended destination.\n\nAWS WAF generates a response that it sends back to the client, which includes the following:\n\n- The header `x-amzn-waf-action` with a value of `captcha` .\n- The HTTP status code `405 Method Not Allowed` .\n- If the request contains an `Accept` header with a value of `text/html` , the response includes a `CAPTCHA` challenge.\n\nYou can configure the expiration time in the `CaptchaConfig` `ImmunityTimeProperty` setting at the rule and web ACL level. The rule setting overrides the web ACL setting.\n\nThis action option is available for rules. It isn't available for web ACL default actions.",
        "stability": "external",
        "summary": "Specifies that AWS WAF should run a `CAPTCHA` check against the request:.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst captchaActionProperty: wafv2.CfnWebACL.CaptchaActionProperty = {\n  customRequestHandling: {\n    insertHeaders: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CaptchaActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 5263
      },
      "name": "CaptchaActionProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-captchaaction.html#cfn-wafv2-webacl-captchaaction-customrequesthandling"
            },
            "remarks": "For information about customizing web requests and responses, see [Customizing web requests and responses in AWS WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
            "stability": "external",
            "summary": "Defines custom handling for the web request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5271
          },
          "name": "customRequestHandling",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomRequestHandlingProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.CaptchaActionProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.CaptchaConfigProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-captchaconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "If you don't specify this, AWS WAF uses its default settings for `CaptchaConfig` .",
        "stability": "external",
        "summary": "Specifies how AWS WAF should handle `CAPTCHA` evaluations for rules that don't have their own `CaptchaConfig` settings.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst captchaConfigProperty: wafv2.CfnWebACL.CaptchaConfigProperty = {\n  immunityTimeProperty: {\n    immunityTime: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CaptchaConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 5332
      },
      "name": "CaptchaConfigProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-captchaconfig.html#cfn-wafv2-webacl-captchaconfig-immunitytimeproperty"
            },
            "stability": "external",
            "summary": "Determines how long a `CAPTCHA` token remains valid after the client successfully solves a `CAPTCHA` puzzle."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5338
          },
          "name": "immunityTimeProperty",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ImmunityTimePropertyProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.CaptchaConfigProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.CookieMatchPatternProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-cookiematchpattern.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You must specify exactly one setting: either `All` , `IncludedCookies` , or `ExcludedCookies` .\n\nExample JSON: `\"MatchPattern\": { \"IncludedCookies\": {\"KeyToInclude1\", \"KeyToInclude2\", \"KeyToInclude3\"} }`",
        "stability": "external",
        "summary": "The filter to use to identify the subset of cookies to inspect in a web request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst cookieMatchPatternProperty: wafv2.CfnWebACL.CookieMatchPatternProperty = {\n  all: all,\n  excludedCookies: ['excludedCookies'],\n  includedCookies: ['includedCookies'],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CookieMatchPatternProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 5403
      },
      "name": "CookieMatchPatternProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-cookiematchpattern.html#cfn-wafv2-webacl-cookiematchpattern-all"
            },
            "stability": "external",
            "summary": "Inspect all cookies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5409
          },
          "name": "all",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-cookiematchpattern.html#cfn-wafv2-webacl-cookiematchpattern-excludedcookies"
            },
            "stability": "external",
            "summary": "Inspect only the cookies whose keys don't match any of the strings specified here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5415
          },
          "name": "excludedCookies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-cookiematchpattern.html#cfn-wafv2-webacl-cookiematchpattern-includedcookies"
            },
            "stability": "external",
            "summary": "Inspect only the cookies that have a key that matches one of the strings specified here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5421
          },
          "name": "includedCookies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.CookieMatchPatternProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.CookiesProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-cookies.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can specify the parts of the cookies to inspect and you can narrow the set of cookies to inspect by including or excluding specific keys.\n\nThis is used to indicate the web request component to inspect, in the `FieldToMatch` specification.\n\nExample JSON: `\"Cookies\": { \"MatchPattern\": { \"All\": {} }, \"MatchScope\": \"KEY\", \"OversizeHandling\": \"MATCH\" }`",
        "stability": "external",
        "summary": "Inspect the cookies in the web request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst cookiesProperty: wafv2.CfnWebACL.CookiesProperty = {\n  matchPattern: {\n    all: all,\n    excludedCookies: ['excludedCookies'],\n    includedCookies: ['includedCookies'],\n  },\n  matchScope: 'matchScope',\n  oversizeHandling: 'oversizeHandling',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CookiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 5492
      },
      "name": "CookiesProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-cookies.html#cfn-wafv2-webacl-cookies-matchpattern"
            },
            "remarks": "You must specify exactly one setting: either `All` , `IncludedCookies` , or `ExcludedCookies` .\n\nExample JSON: `\"MatchPattern\": { \"IncludedCookies\": {\"KeyToInclude1\", \"KeyToInclude2\", \"KeyToInclude3\"} }`",
            "stability": "external",
            "summary": "The filter to use to identify the subset of cookies to inspect in a web request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5502
          },
          "name": "matchPattern",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CookieMatchPatternProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-cookies.html#cfn-wafv2-webacl-cookies-matchscope"
            },
            "remarks": "If you specify `All` , AWS WAF inspects both keys and values.",
            "stability": "external",
            "summary": "The parts of the cookies to inspect with the rule inspection criteria."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5508
          },
          "name": "matchScope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-cookies.html#cfn-wafv2-webacl-cookies-oversizehandling"
            },
            "remarks": "AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF .\n\nThe options for oversize handling are the following:\n\n- `CONTINUE` - Inspect the cookies normally, according to the rule inspection criteria.\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.",
            "stability": "external",
            "summary": "What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5520
          },
          "name": "oversizeHandling",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.CookiesProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.CountActionProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-countaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is used in the context of other settings, for example to specify values for a rule action or a web ACL default action.",
        "stability": "external",
        "summary": "Specifies that AWS WAF should count the request. Optionally defines additional custom handling for the request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst countActionProperty: wafv2.CfnWebACL.CountActionProperty = {\n  customRequestHandling: {\n    insertHeaders: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CountActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 5592
      },
      "name": "CountActionProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-countaction.html#cfn-wafv2-webacl-countaction-customrequesthandling"
            },
            "remarks": "For information about customizing web requests and responses, see [Customizing web requests and responses in AWS WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
            "stability": "external",
            "summary": "Defines custom handling for the web request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5600
          },
          "name": "customRequestHandling",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomRequestHandlingProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.CountActionProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.CustomHTTPHeaderProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-customhttpheader.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is used in `CustomResponse` and `CustomRequestHandling` .",
        "stability": "external",
        "summary": "A custom header for custom request and response handling.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst customHTTPHeaderProperty: wafv2.CfnWebACL.CustomHTTPHeaderProperty = {\n  name: 'name',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomHTTPHeaderProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 5661
      },
      "name": "CustomHTTPHeaderProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-customhttpheader.html#cfn-wafv2-webacl-customhttpheader-name"
            },
            "remarks": "For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-` , to avoid confusion with the headers that are already in the request. For example, for the header name `sample` , AWS WAF inserts the header `x-amzn-waf-sample` .",
            "stability": "external",
            "summary": "The name of the custom header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5669
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-customhttpheader.html#cfn-wafv2-webacl-customhttpheader-value"
            },
            "stability": "external",
            "summary": "The value of the custom header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5675
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.CustomHTTPHeaderProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.CustomRequestHandlingProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-customrequesthandling.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can add custom request handling for the rule actions allow and count.\n\nFor information about customizing web requests and responses, see [Customizing web requests and responses in AWS WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
        "stability": "external",
        "summary": "Custom request handling behavior that inserts custom headers into a web request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst customRequestHandlingProperty: wafv2.CfnWebACL.CustomRequestHandlingProperty = {\n  insertHeaders: [{\n    name: 'name',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomRequestHandlingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 5743
      },
      "name": "CustomRequestHandlingProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-customrequesthandling.html#cfn-wafv2-webacl-customrequesthandling-insertheaders"
            },
            "remarks": "For information about the limits on count and size for custom request and response settings, see [AWS WAF quotas](https://docs.aws.amazon.com/waf/latest/developerguide/limits.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
            "stability": "external",
            "summary": "The HTTP headers to insert into the request. Duplicate header names are not allowed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5751
          },
          "name": "insertHeaders",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomHTTPHeaderProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.CustomRequestHandlingProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.CustomResponseBodyProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-customresponsebody.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is referenced by key from `CustomResponse` `CustomResponseBodyKey` .",
        "stability": "external",
        "summary": "The response body to use in a custom response to a web request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst customResponseBodyProperty: wafv2.CfnWebACL.CustomResponseBodyProperty = {\n  content: 'content',\n  contentType: 'contentType',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomResponseBodyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 5905
      },
      "name": "CustomResponseBodyProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-customresponsebody.html#cfn-wafv2-webacl-customresponsebody-content"
            },
            "remarks": "You can use JSON escape strings in JSON content. To do this, you must specify JSON content in the `ContentType` setting.\n\nFor information about the limits on count and size for custom request and response settings, see [AWS WAF quotas](https://docs.aws.amazon.com/waf/latest/developerguide/limits.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
            "stability": "external",
            "summary": "The payload of the custom response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5915
          },
          "name": "content",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-customresponsebody.html#cfn-wafv2-webacl-customresponsebody-contenttype"
            },
            "stability": "external",
            "summary": "The type of content in the payload that you are defining in the `Content` string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5921
          },
          "name": "contentType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.CustomResponseBodyProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.CustomResponseProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-customresponse.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can define a custom response for rule actions and default web ACL actions that are set to the block action.\n\nFor information about customizing web requests and responses, see [Customizing web requests and responses in AWS WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
        "stability": "external",
        "summary": "A custom response to send to the client.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst customResponseProperty: wafv2.CfnWebACL.CustomResponseProperty = {\n  responseCode: 123,\n\n  // the properties below are optional\n  customResponseBodyKey: 'customResponseBodyKey',\n  responseHeaders: [{\n    name: 'name',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomResponseProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 5815
      },
      "name": "CustomResponseProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-customresponse.html#cfn-wafv2-webacl-customresponse-responsecode"
            },
            "remarks": "For a list of status codes that you can use in your custom reqponses, see [Supported status codes for custom response](https://docs.aws.amazon.com/waf/latest/developerguide/customizing-the-response-status-codes.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
            "stability": "external",
            "summary": "The HTTP status code to return to the client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5829
          },
          "name": "responseCode",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-customresponse.html#cfn-wafv2-webacl-customresponse-customresponsebodykey"
            },
            "remarks": "You can define a custom response for a rule action or a default web ACL action that is set to block. To do this, you first define the response body key and value in the `CustomResponseBodies` setting for the `WebACL` or `RuleGroup` where you want to use it. Then, in the rule action or web ACL default action `BlockAction` setting, you reference the response body using this key.",
            "stability": "external",
            "summary": "References the response body that you want AWS WAF to return to the web request client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5821
          },
          "name": "customResponseBodyKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-customresponse.html#cfn-wafv2-webacl-customresponse-responseheaders"
            },
            "remarks": "For information about the limits on count and size for custom request and response settings, see [AWS WAF quotas](https://docs.aws.amazon.com/waf/latest/developerguide/limits.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
            "stability": "external",
            "summary": "The HTTP headers to use in the response. Duplicate header names are not allowed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5837
          },
          "name": "responseHeaders",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomHTTPHeaderProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.CustomResponseProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.DefaultActionProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-defaultaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The default action must be a terminating action, so you can't use count.",
        "stability": "external",
        "summary": "In a `WebACL` , this is the action that you want AWS WAF to perform when a web request doesn't match any of the rules in the `WebACL` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst defaultActionProperty: wafv2.CfnWebACL.DefaultActionProperty = {\n  allow: {\n    customRequestHandling: {\n      insertHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n  block: {\n    customResponse: {\n      responseCode: 123,\n\n      // the properties below are optional\n      customResponseBodyKey: 'customResponseBodyKey',\n      responseHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.DefaultActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 5987
      },
      "name": "DefaultActionProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-defaultaction.html#cfn-wafv2-webacl-defaultaction-allow"
            },
            "stability": "external",
            "summary": "Specifies that AWS WAF should allow requests by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5993
          },
          "name": "allow",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.AllowActionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-defaultaction.html#cfn-wafv2-webacl-defaultaction-block"
            },
            "stability": "external",
            "summary": "Specifies that AWS WAF should block requests by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 5999
          },
          "name": "block",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.BlockActionProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.DefaultActionProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.ExcludedRuleProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-excludedrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "When you exclude a rule, AWS WAF evaluates it exactly as it would if the rule action setting were `Count` . This is a useful option for testing the rules in a rule group without modifying how they handle your web traffic.",
        "stability": "external",
        "summary": "Specifies a single rule in a rule group whose action you want to override to `Count` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst excludedRuleProperty: wafv2.CfnWebACL.ExcludedRuleProperty = {\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ExcludedRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 6063
      },
      "name": "ExcludedRuleProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-excludedrule.html#cfn-wafv2-webacl-excludedrule-name"
            },
            "stability": "external",
            "summary": "The name of the rule whose action you want to override to `Count` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6069
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.ExcludedRuleProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.FieldIdentifierProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-fieldidentifier.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The identifier of the username or password field, used in the `ManagedRuleGroupConfig` settings.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst fieldIdentifierProperty: wafv2.CfnWebACL.FieldIdentifierProperty = {\n  identifier: 'identifier',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.FieldIdentifierProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 6131
      },
      "name": "FieldIdentifierProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-fieldidentifier.html#cfn-wafv2-webacl-fieldidentifier-identifier"
            },
            "remarks": "When the `PayloadType` is `JSON` , the identifier must be in JSON pointer syntax. For example `/form/username` . For information about the JSON Pointer syntax, see the Internet Engineering Task Force (IETF) documentation [JavaScript Object Notation (JSON) Pointer](https://docs.aws.amazon.com/https://tools.ietf.org/html/rfc6901) .\n\nWhen the `PayloadType` is `FORM_ENCODED` , use the HTML form names. For example, `username` .",
            "stability": "external",
            "summary": "The name of the username or password field, used in the `ManagedRuleGroupConfig` settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6141
          },
          "name": "identifier",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.FieldIdentifierProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.FieldToMatchProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-fieldtomatch.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Include the single `FieldToMatch` type that you want to inspect, with additional specifications as needed, according to the type. You specify a single request component in `FieldToMatch` for each rule statement that requires it. To inspect more than one component of the web request, create a separate rule statement for each component.\n\nExample JSON for a `QueryString` field to match:\n\n`\"FieldToMatch\": { \"QueryString\": {} }`\n\nExample JSON for a `Method` field to match specification:\n\n`\"FieldToMatch\": { \"Method\": { \"Name\": \"DELETE\" } }`",
        "stability": "external",
        "summary": "The part of the web request that you want AWS WAF to inspect.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst fieldToMatchProperty: wafv2.CfnWebACL.FieldToMatchProperty = {\n  allQueryArguments: allQueryArguments,\n  body: {\n    oversizeHandling: 'oversizeHandling',\n  },\n  cookies: {\n    matchPattern: {\n      all: all,\n      excludedCookies: ['excludedCookies'],\n      includedCookies: ['includedCookies'],\n    },\n    matchScope: 'matchScope',\n    oversizeHandling: 'oversizeHandling',\n  },\n  headers: {\n    matchPattern: {\n      all: all,\n      excludedHeaders: ['excludedHeaders'],\n      includedHeaders: ['includedHeaders'],\n    },\n    matchScope: 'matchScope',\n    oversizeHandling: 'oversizeHandling',\n  },\n  jsonBody: {\n    matchPattern: {\n      all: all,\n      includedPaths: ['includedPaths'],\n    },\n    matchScope: 'matchScope',\n\n    // the properties below are optional\n    invalidFallbackBehavior: 'invalidFallbackBehavior',\n    oversizeHandling: 'oversizeHandling',\n  },\n  method: method,\n  queryString: queryString,\n  singleHeader: singleHeader,\n  singleQueryArgument: singleQueryArgument,\n  uriPath: uriPath,\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.FieldToMatchProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 6211
      },
      "name": "FieldToMatchProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-fieldtomatch.html#cfn-wafv2-webacl-fieldtomatch-allqueryarguments"
            },
            "stability": "external",
            "summary": "Inspect all query arguments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6217
          },
          "name": "allQueryArguments",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-fieldtomatch.html#cfn-wafv2-webacl-fieldtomatch-body"
            },
            "remarks": "The request body immediately follows the request headers. This is the part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form.\n\nOnly the first 8 KB (8192 bytes) of the request body are forwarded to AWS WAF for inspection by the underlying host service. For information about how to handle oversized request bodies, see the `Body` object configuration.",
            "stability": "external",
            "summary": "Inspect the request body as plain text."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6225
          },
          "name": "body",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.BodyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-fieldtomatch.html#cfn-wafv2-webacl-fieldtomatch-cookies"
            },
            "remarks": "You must configure scope and pattern matching filters in the `Cookies` object, to define the set of cookies and the parts of the cookies that AWS WAF inspects.\n\nOnly the first 8 KB (8192 bytes) of a request's cookies and only the first 200 cookies are forwarded to AWS WAF for inspection by the underlying host service. You must configure how to handle any oversize cookie content in the `Cookies` object. AWS WAF applies the pattern matching filters to the cookies that it receives from the underlying host service.",
            "stability": "external",
            "summary": "Inspect the request cookies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6233
          },
          "name": "cookies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CookiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-fieldtomatch.html#cfn-wafv2-webacl-fieldtomatch-headers"
            },
            "remarks": "You must configure scope and pattern matching filters in the `Headers` object, to define the set of headers to and the parts of the headers that AWS WAF inspects.\n\nOnly the first 8 KB (8192 bytes) of a request's headers and only the first 200 headers are forwarded to AWS WAF for inspection by the underlying host service. You must configure how to handle any oversize header content in the `Headers` object. AWS WAF applies the pattern matching filters to the headers that it receives from the underlying host service.",
            "stability": "external",
            "summary": "Inspect the request headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6241
          },
          "name": "headers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.HeadersProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-fieldtomatch.html#cfn-wafv2-webacl-fieldtomatch-jsonbody"
            },
            "remarks": "The request body immediately follows the request headers. This is the part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form.\n\nOnly the first 8 KB (8192 bytes) of the request body are forwarded to AWS WAF for inspection by the underlying host service. For information about how to handle oversized request bodies, see the `JsonBody` object configuration.",
            "stability": "external",
            "summary": "Inspect the request body as JSON."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6249
          },
          "name": "jsonBody",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.JsonBodyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-fieldtomatch.html#cfn-wafv2-webacl-fieldtomatch-method"
            },
            "remarks": "The method indicates the type of operation that the request is asking the origin to perform.",
            "stability": "external",
            "summary": "Inspect the HTTP method."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6255
          },
          "name": "method",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-fieldtomatch.html#cfn-wafv2-webacl-fieldtomatch-querystring"
            },
            "remarks": "This is the part of a URL that appears after a `?` character, if any.",
            "stability": "external",
            "summary": "Inspect the query string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6261
          },
          "name": "queryString",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-fieldtomatch.html#cfn-wafv2-webacl-fieldtomatch-singleheader"
            },
            "remarks": "Provide the name of the header to inspect, for example, `User-Agent` or `Referer` . This setting isn't case sensitive.\n\nExample JSON: `\"SingleHeader\": { \"Name\": \"haystack\" }`\n\nAlternately, you can filter and inspect all headers with the `Headers` `FieldToMatch` setting.",
            "stability": "external",
            "summary": "Inspect a single header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6271
          },
          "name": "singleHeader",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-fieldtomatch.html#cfn-wafv2-webacl-fieldtomatch-singlequeryargument"
            },
            "remarks": "Provide the name of the query argument to inspect, such as *UserName* or *SalesRegion* . The name can be up to 30 characters long and isn't case sensitive.\n\nExample JSON: `\"SingleQueryArgument\": { \"Name\": \"myArgument\" }`",
            "stability": "external",
            "summary": "Inspect a single query argument."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6279
          },
          "name": "singleQueryArgument",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-fieldtomatch.html#cfn-wafv2-webacl-fieldtomatch-uripath"
            },
            "remarks": "This is the part of the web request that identifies a resource, for example, `/images/daily-ad.jpg` .",
            "stability": "external",
            "summary": "Inspect the request URI path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6285
          },
          "name": "uriPath",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.FieldToMatchProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.ForwardedIPConfigurationProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-forwardedipconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.\n\nThis configuration is used for `GeoMatchStatement` and `RateBasedStatement` . For `IPSetReferenceStatement` , use `IPSetForwardedIPConfig` instead.\n\nAWS WAF only evaluates the first IP address found in the specified HTTP header.",
        "stability": "external",
        "summary": "The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst forwardedIPConfigurationProperty: wafv2.CfnWebACL.ForwardedIPConfigurationProperty = {\n  fallbackBehavior: 'fallbackBehavior',\n  headerName: 'headerName',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ForwardedIPConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 6379
      },
      "name": "ForwardedIPConfigurationProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-forwardedipconfiguration.html#cfn-wafv2-webacl-forwardedipconfiguration-fallbackbehavior"
            },
            "remarks": "> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.\n\nYou can specify the following fallback behaviors:\n\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.",
            "stability": "external",
            "summary": "The match status to assign to the web request if the request doesn't have a valid IP address in the specified position."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6392
          },
          "name": "fallbackBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-forwardedipconfiguration.html#cfn-wafv2-webacl-forwardedipconfiguration-headername"
            },
            "remarks": "For example, to use the X-Forwarded-For (XFF) header, set this to `X-Forwarded-For` .\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.",
            "stability": "external",
            "summary": "The name of the HTTP header to use for the IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6400
          },
          "name": "headerName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.ForwardedIPConfigurationProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.GeoMatchStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-geomatchstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A rule statement used to identify web requests based on country of origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst geoMatchStatementProperty: wafv2.CfnWebACL.GeoMatchStatementProperty = {\n  countryCodes: ['countryCodes'],\n  forwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.GeoMatchStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 6466
      },
      "name": "GeoMatchStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-geomatchstatement.html#cfn-wafv2-webacl-geomatchstatement-countrycodes"
            },
            "stability": "external",
            "summary": "An array of two-character country codes, for example, `[ \"US\", \"CN\" ]` , from the alpha-2 country ISO codes of the ISO 3166 international standard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6472
          },
          "name": "countryCodes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-geomatchstatement.html#cfn-wafv2-webacl-geomatchstatement-forwardedipconfig"
            },
            "remarks": "Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.",
            "stability": "external",
            "summary": "The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6480
          },
          "name": "forwardedIpConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ForwardedIPConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.GeoMatchStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.HeaderMatchPatternProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-headermatchpattern.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You must specify exactly one setting: either `All` , `IncludedHeaders` , or `ExcludedHeaders` .\n\nExample JSON: `\"MatchPattern\": { \"ExcludedHeaders\": {\"KeyToExclude1\", \"KeyToExclude2\"} }`",
        "stability": "external",
        "summary": "The filter to use to identify the subset of headers to inspect in a web request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst headerMatchPatternProperty: wafv2.CfnWebACL.HeaderMatchPatternProperty = {\n  all: all,\n  excludedHeaders: ['excludedHeaders'],\n  includedHeaders: ['includedHeaders'],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.HeaderMatchPatternProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 6548
      },
      "name": "HeaderMatchPatternProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-headermatchpattern.html#cfn-wafv2-webacl-headermatchpattern-all"
            },
            "stability": "external",
            "summary": "Inspect all headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6554
          },
          "name": "all",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-headermatchpattern.html#cfn-wafv2-webacl-headermatchpattern-excludedheaders"
            },
            "stability": "external",
            "summary": "Inspect only the headers whose keys don't match any of the strings specified here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6560
          },
          "name": "excludedHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-headermatchpattern.html#cfn-wafv2-webacl-headermatchpattern-includedheaders"
            },
            "stability": "external",
            "summary": "Inspect only the headers that have a key that matches one of the strings specified here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6566
          },
          "name": "includedHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.HeaderMatchPatternProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.HeadersProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-headers.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can specify the parts of the headers to inspect and you can narrow the set of headers to inspect by including or excluding specific keys.\n\nThis is used to indicate the web request component to inspect, in the `FieldToMatch` specification.\n\nIf you want to inspect just the value of a single header, use the `SingleHeader` `FieldToMatch` setting instead.\n\nExample JSON: `\"Headers\": { \"MatchPattern\": { \"All\": {} }, \"MatchScope\": \"KEY\", \"OversizeHandling\": \"MATCH\" }`",
        "stability": "external",
        "summary": "Inspect all headers in the web request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst headersProperty: wafv2.CfnWebACL.HeadersProperty = {\n  matchPattern: {\n    all: all,\n    excludedHeaders: ['excludedHeaders'],\n    includedHeaders: ['includedHeaders'],\n  },\n  matchScope: 'matchScope',\n  oversizeHandling: 'oversizeHandling',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.HeadersProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 6639
      },
      "name": "HeadersProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-headers.html#cfn-wafv2-webacl-headers-matchpattern"
            },
            "remarks": "You must specify exactly one setting: either `All` , `IncludedHeaders` , or `ExcludedHeaders` .\n\nExample JSON: `\"MatchPattern\": { \"ExcludedHeaders\": {\"KeyToExclude1\", \"KeyToExclude2\"} }`",
            "stability": "external",
            "summary": "The filter to use to identify the subset of headers to inspect in a web request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6649
          },
          "name": "matchPattern",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.HeaderMatchPatternProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-headers.html#cfn-wafv2-webacl-headers-matchscope"
            },
            "remarks": "If you specify `All` , AWS WAF inspects both keys and values.",
            "stability": "external",
            "summary": "The parts of the headers to match with the rule inspection criteria."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6655
          },
          "name": "matchScope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-headers.html#cfn-wafv2-webacl-headers-oversizehandling"
            },
            "remarks": "AWS WAF does not support inspecting the entire contents of request headers when they exceed 8 KB (8192 bytes) or 200 total headers. The underlying host service forwards a maximum of 200 headers and at most 8 KB of header contents to AWS WAF .\n\nThe options for oversize handling are the following:\n\n- `CONTINUE` - Inspect the headers normally, according to the rule inspection criteria.\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.",
            "stability": "external",
            "summary": "What AWS WAF should do if the headers of the request are larger than AWS WAF can inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6667
          },
          "name": "oversizeHandling",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.HeadersProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.IPSetForwardedIPConfigurationProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ipsetforwardedipconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.\n\nThis configuration is used only for `IPSetReferenceStatement` . For `GeoMatchStatement` and `RateBasedStatement` , use `ForwardedIPConfig` instead.",
        "stability": "external",
        "summary": "The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst iPSetForwardedIPConfigurationProperty: wafv2.CfnWebACL.IPSetForwardedIPConfigurationProperty = {\n  fallbackBehavior: 'fallbackBehavior',\n  headerName: 'headerName',\n  position: 'position',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.IPSetForwardedIPConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 6741
      },
      "name": "IPSetForwardedIPConfigurationProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ipsetforwardedipconfiguration.html#cfn-wafv2-webacl-ipsetforwardedipconfiguration-fallbackbehavior"
            },
            "remarks": "> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.\n\nYou can specify the following fallback behaviors:\n\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.",
            "stability": "external",
            "summary": "The match status to assign to the web request if the request doesn't have a valid IP address in the specified position."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6754
          },
          "name": "fallbackBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ipsetforwardedipconfiguration.html#cfn-wafv2-webacl-ipsetforwardedipconfiguration-headername"
            },
            "remarks": "For example, to use the X-Forwarded-For (XFF) header, set this to `X-Forwarded-For` .\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.",
            "stability": "external",
            "summary": "The name of the HTTP header to use for the IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6762
          },
          "name": "headerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ipsetforwardedipconfiguration.html#cfn-wafv2-webacl-ipsetforwardedipconfiguration-position"
            },
            "remarks": "The header can contain IP addresses of the original client and also of proxies. For example, the header value could be `10.1.1.1, 127.0.0.0, 10.10.10.10` where the first IP address identifies the original client and the rest identify proxies that the request went through.\n\nThe options for this setting are the following:\n\n- FIRST - Inspect the first IP address in the list of IP addresses in the header. This is usually the client's original IP.\n- LAST - Inspect the last IP address in the list of IP addresses in the header.\n- ANY - Inspect all IP addresses in the header for a match. If the header contains more than 10 IP addresses, AWS WAF inspects the last 10.",
            "stability": "external",
            "summary": "The position in the header to search for the IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6774
          },
          "name": "position",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.IPSetForwardedIPConfigurationProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.IPSetReferenceStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ipsetreferencestatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "To use this, create an `IPSet` that specifies the addresses you want to detect, then use the ARN of that set in this statement.\n\nEach IP set rule statement references an IP set. You create and maintain the set independent of your rules. This allows you to use the single set in multiple rules. When you update the referenced set, AWS WAF automatically updates all rules that reference it.",
        "stability": "external",
        "summary": "A rule statement used to detect web requests coming from particular IP addresses or address ranges.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst iPSetReferenceStatementProperty: wafv2.CfnWebACL.IPSetReferenceStatementProperty = {\n  arn: 'arn',\n\n  // the properties below are optional\n  ipSetForwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n    position: 'position',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.IPSetReferenceStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 6846
      },
      "name": "IPSetReferenceStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ipsetreferencestatement.html#cfn-wafv2-webacl-ipsetreferencestatement-arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the `IPSet` that this statement references."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6852
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ipsetreferencestatement.html#cfn-wafv2-webacl-ipsetreferencestatement-ipsetforwardedipconfig"
            },
            "remarks": "Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.",
            "stability": "external",
            "summary": "The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6860
          },
          "name": "ipSetForwardedIpConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.IPSetForwardedIPConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.IPSetReferenceStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.ImmunityTimePropertyProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-immunitytimeproperty.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Determines how long a `CAPTCHA` token remains valid after the client successfully solves a `CAPTCHA` puzzle.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst immunityTimePropertyProperty: wafv2.CfnWebACL.ImmunityTimePropertyProperty = {\n  immunityTime: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ImmunityTimePropertyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 6925
      },
      "name": "ImmunityTimePropertyProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-immunitytimeproperty.html#cfn-wafv2-webacl-immunitytimeproperty-immunitytime"
            },
            "remarks": "The default setting is 300.",
            "stability": "external",
            "summary": "The amount of time, in seconds, that a `CAPTCHA` token is valid."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 6931
          },
          "name": "immunityTime",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.ImmunityTimePropertyProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.JsonBodyProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-jsonbody.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is used to indicate the web request component to inspect, in the `FieldToMatch` specification.\n\nUse the specifications in this object to indicate which parts of the JSON body to inspect using the rule's inspection criteria. AWS WAF inspects only the parts of the JSON that result from the matches that you indicate.\n\nExample JSON: `\"JsonBody\": { \"MatchPattern\": { \"All\": {} }, \"MatchScope\": \"ALL\" }`",
        "stability": "external",
        "summary": "Inspect the body of the web request as JSON. The body immediately follows the request headers.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst jsonBodyProperty: wafv2.CfnWebACL.JsonBodyProperty = {\n  matchPattern: {\n    all: all,\n    includedPaths: ['includedPaths'],\n  },\n  matchScope: 'matchScope',\n\n  // the properties below are optional\n  invalidFallbackBehavior: 'invalidFallbackBehavior',\n  oversizeHandling: 'oversizeHandling',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.JsonBodyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 6999
      },
      "name": "JsonBodyProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-jsonbody.html#cfn-wafv2-webacl-jsonbody-matchpattern"
            },
            "remarks": "AWS WAF inspects the results of these pattern matches against the rule inspection criteria.",
            "stability": "external",
            "summary": "The patterns to look for in the JSON body."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7025
          },
          "name": "matchPattern",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.JsonMatchPatternProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-jsonbody.html#cfn-wafv2-webacl-jsonbody-matchscope"
            },
            "remarks": "If you specify `All` , AWS WAF matches against keys and values.",
            "stability": "external",
            "summary": "The parts of the JSON to match against using the `MatchPattern` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7031
          },
          "name": "matchScope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-jsonbody.html#cfn-wafv2-webacl-jsonbody-invalidfallbackbehavior"
            },
            "remarks": "- `EVALUATE_AS_STRING` - Inspect the body as plain text. AWS WAF applies the text transformations and inspection criteria that you defined for the JSON inspection to the body text string.\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.\n\nIf you don't provide this setting, AWS WAF parses and evaluates the content only up to the first parsing failure that it encounters.\n\nAWS WAF does its best to parse the entire JSON body, but might be forced to stop for reasons such as invalid characters, duplicate keys, truncation, and any content whose root node isn't an object or an array.\n\nAWS WAF parses the JSON in the following examples as two valid key, value pairs:\n\n- Missing comma: `{\"key1\":\"value1\"\"key2\":\"value2\"}`\n- Missing colon: `{\"key1\":\"value1\",\"key2\"\"value2\"}`\n- Extra colons: `{\"key1\"::\"value1\",\"key2\"\"value2\"}`",
            "stability": "external",
            "summary": "What AWS WAF should do if it fails to completely parse the JSON body. The options are the following:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7019
          },
          "name": "invalidFallbackBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-jsonbody.html#cfn-wafv2-webacl-jsonbody-oversizehandling"
            },
            "remarks": "AWS WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to AWS WAF by the underlying host service.\n\nThe options for oversize handling are the following:\n\n- `CONTINUE` - Inspect the body normally, according to the rule inspection criteria.\n- `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.\n- `NO_MATCH` - Treat the web request as not matching the rule statement.\n\nYou can combine the `MATCH` or `NO_MATCH` settings for oversize handling with your rule and web ACL action settings, so that you block any request whose body is over 8 KB.\n\nDefault: `CONTINUE`",
            "stability": "external",
            "summary": "What AWS WAF should do if the body is larger than AWS WAF can inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7047
          },
          "name": "oversizeHandling",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.JsonBodyProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.JsonMatchPatternProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-jsonmatchpattern.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "AWS WAF inspects the results of these pattern matches against the rule inspection criteria. This is used with the `FieldToMatch` option `JsonBody` .",
        "stability": "external",
        "summary": "The patterns to look for in the JSON body.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\nconst jsonMatchPatternProperty: wafv2.CfnWebACL.JsonMatchPatternProperty = {\n  all: all,\n  includedPaths: ['includedPaths'],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.JsonMatchPatternProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 7119
      },
      "name": "JsonMatchPatternProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-jsonmatchpattern.html#cfn-wafv2-webacl-jsonmatchpattern-all"
            },
            "remarks": "You must specify either this setting or the `IncludedPaths` setting, but not both.",
            "stability": "external",
            "summary": "Match all of the elements. See also `MatchScope` in the `JsonBody` `FieldToMatch` specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7127
          },
          "name": "all",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-jsonmatchpattern.html#cfn-wafv2-webacl-jsonmatchpattern-includedpaths"
            },
            "remarks": "Provide the include paths using JSON Pointer syntax. For example, `\"IncludedPaths\": [\"/dogs/0/name\", \"/dogs/1/name\"]` . For information about this syntax, see the Internet Engineering Task Force (IETF) documentation [JavaScript Object Notation (JSON) Pointer](https://docs.aws.amazon.com/https://tools.ietf.org/html/rfc6901) .\n\nYou must specify either this setting or the `All` setting, but not both.\n\n> Don't use this option to include all paths. Instead, use the `All` setting.",
            "stability": "external",
            "summary": "Match only the specified include paths. See also `MatchScope` in the `JsonBody` `FieldToMatch` specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7139
          },
          "name": "includedPaths",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.JsonMatchPatternProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.LabelMatchStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-labelmatchstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The label match statement provides the label or namespace string to search for. The label string can represent a part or all of the fully qualified label name that had been added to the web request. Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web ACL context of the rule that added the label. If you do not provide the fully qualified name in your label match string, AWS WAF performs the search for labels that were added in the same context as the label match statement.",
        "stability": "external",
        "summary": "A rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst labelMatchStatementProperty: wafv2.CfnWebACL.LabelMatchStatementProperty = {\n  key: 'key',\n  scope: 'scope',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.LabelMatchStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 7273
      },
      "name": "LabelMatchStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-labelmatchstatement.html#cfn-wafv2-webacl-labelmatchstatement-key"
            },
            "remarks": "- If the `Scope` indicates `LABEL` , then this specification must include the name and can include any number of preceding namespace specifications and prefix up to providing the fully qualified label name.\n- If the `Scope` indicates `NAMESPACE` , then this specification can include any number of contiguous namespace strings, and can include the entire label namespace prefix from the rule group or web ACL where the label originates.\n\nLabels are case sensitive and components of a label must be separated by colon, for example `NS1:NS2:name` .",
            "stability": "external",
            "summary": "The string to match against. The setting you provide for this depends on the match statement's `Scope` setting:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7284
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-labelmatchstatement.html#cfn-wafv2-webacl-labelmatchstatement-scope"
            },
            "stability": "external",
            "summary": "Specify whether you want to match using the label name or just the namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7290
          },
          "name": "scope",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.LabelMatchStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.LabelProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-label.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This is used as an element of a label array in `RuleLabels` inside a rule.",
        "stability": "external",
        "summary": "A single label container.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst labelProperty: wafv2.CfnWebACL.LabelProperty = {\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.LabelProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 7203
      },
      "name": "LabelProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-label.html#cfn-wafv2-webacl-label-name"
            },
            "stability": "external",
            "summary": "The label string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7209
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.LabelProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.ManagedRuleGroupConfigProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Use this for the account takeover prevention managed rule group `AWSManagedRulesATPRuleSet` , to provide information about the sign-in page of your application.\n\nYou can provide multiple individual `ManagedRuleGroupConfig` objects for any rule group configuration, for example `UsernameField` and `PasswordField` . The configuration that you provide depends on the needs of the managed rule group. For the ATP managed rule group, you provide the following individual configuration objects: `LoginPath` , `PasswordField` , `PayloadType` and `UsernameField` .",
        "stability": "external",
        "summary": "Additional information that's used by a managed rule group. Most managed rule groups don't require this.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst managedRuleGroupConfigProperty: wafv2.CfnWebACL.ManagedRuleGroupConfigProperty = {\n  loginPath: 'loginPath',\n  passwordField: {\n    identifier: 'identifier',\n  },\n  payloadType: 'payloadType',\n  usernameField: {\n    identifier: 'identifier',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ManagedRuleGroupConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 7360
      },
      "name": "ManagedRuleGroupConfigProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupconfig.html#cfn-wafv2-webacl-managedrulegroupconfig-loginpath"
            },
            "remarks": "For example, for the URL `https://example.com/web/login` , you would provide the path `/web/login` .",
            "stability": "external",
            "summary": "The path of the login endpoint for your application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7366
          },
          "name": "loginPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupconfig.html#cfn-wafv2-webacl-managedrulegroupconfig-passwordfield"
            },
            "stability": "external",
            "summary": "Details about your login page password field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7372
          },
          "name": "passwordField",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.FieldIdentifierProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupconfig.html#cfn-wafv2-webacl-managedrulegroupconfig-payloadtype"
            },
            "stability": "external",
            "summary": "The payload type for your login endpoint, either JSON or form encoded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7378
          },
          "name": "payloadType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupconfig.html#cfn-wafv2-webacl-managedrulegroupconfig-usernamefield"
            },
            "stability": "external",
            "summary": "Details about your login page username field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7384
          },
          "name": "usernameField",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.FieldIdentifierProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.ManagedRuleGroupConfigProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.ManagedRuleGroupStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "To use this, provide the vendor name and the name of the rule group in this statement.\n\nYou cannot nest a `ManagedRuleGroupStatement` , for example for use inside a `NotStatement` or `OrStatement` . It can only be referenced as a top-level statement within a rule.",
        "stability": "external",
        "summary": "A rule statement used to run the rules that are defined in a managed rule group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst managedRuleGroupStatementProperty: wafv2.CfnWebACL.ManagedRuleGroupStatementProperty = {\n  name: 'name',\n  vendorName: 'vendorName',\n\n  // the properties below are optional\n  excludedRules: [{\n    name: 'name',\n  }],\n  managedRuleGroupConfigs: [{\n    loginPath: 'loginPath',\n    passwordField: {\n      identifier: 'identifier',\n    },\n    payloadType: 'payloadType',\n    usernameField: {\n      identifier: 'identifier',\n    },\n  }],\n  scopeDownStatement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n  version: 'version',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ManagedRuleGroupStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 7456
      },
      "name": "ManagedRuleGroupStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupstatement.html#cfn-wafv2-webacl-managedrulegroupstatement-name"
            },
            "remarks": "You use this, along with the vendor name, to identify the rule group.",
            "stability": "external",
            "summary": "The name of the managed rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7478
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupstatement.html#cfn-wafv2-webacl-managedrulegroupstatement-vendorname"
            },
            "remarks": "You use this, along with the rule group name, to identify the rule group.",
            "stability": "external",
            "summary": "The name of the managed rule group vendor."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7490
          },
          "name": "vendorName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupstatement.html#cfn-wafv2-webacl-managedrulegroupstatement-excludedrules"
            },
            "remarks": "When you exclude a rule, AWS WAF evaluates it exactly as it would if the rule action setting were `Count` . This is a useful option for testing the rules in a rule group without modifying how they handle your web traffic.",
            "stability": "external",
            "summary": "The rules in the referenced rule group whose actions are set to `Count` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7462
          },
          "name": "excludedRules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ExcludedRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupstatement.html#cfn-wafv2-webacl-managedrulegroupstatement-managedrulegroupconfigs"
            },
            "remarks": "Use this for the account takeover prevention managed rule group `AWSManagedRulesATPRuleSet` , to provide information about the sign-in page of your application.\n\nYou can provide multiple individual `ManagedRuleGroupConfig` objects for any rule group configuration, for example `UsernameField` and `PasswordField` . The configuration that you provide depends on the needs of the managed rule group. For the ATP managed rule group, you provide the following individual configuration objects: `LoginPath` , `PasswordField` , `PayloadType` and `UsernameField` .",
            "stability": "external",
            "summary": "Additional information that's used by a managed rule group. Most managed rule groups don't require this."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7472
          },
          "name": "managedRuleGroupConfigs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ManagedRuleGroupConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupstatement.html#cfn-wafv2-webacl-managedrulegroupstatement-scopedownstatement"
            },
            "remarks": "Requests are only evaluated by the rule group if they match the scope-down statement. You can use any nestable `Statement` in the scope-down statement, and you can nest statements at any level, the same as you can for a rule statement.",
            "stability": "external",
            "summary": "An optional nested statement that narrows the scope of the web requests that are evaluated by the managed rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7484
          },
          "name": "scopeDownStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.StatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupstatement.html#cfn-wafv2-webacl-managedrulegroupstatement-version"
            },
            "remarks": "If you specify this, the version setting is fixed until you change it. If you don't specify this, AWS WAF uses the vendor's default version, and then keeps the version at the vendor's default when the vendor updates the managed rule group settings.",
            "stability": "external",
            "summary": "The version of the managed rule group to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7496
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.ManagedRuleGroupStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.NotStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-notstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You provide one `Statement` within the `NotStatement` .",
        "stability": "external",
        "summary": "A logical rule statement used to negate the results of another rule statement.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst notStatementProperty: wafv2.CfnWebACL.NotStatementProperty = {\n  statement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.NotStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 7574
      },
      "name": "NotStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-notstatement.html#cfn-wafv2-webacl-notstatement-statement"
            },
            "remarks": "You can use any statement that can be nested.",
            "stability": "external",
            "summary": "The statement to negate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7580
          },
          "name": "statement",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.StatementProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.NotStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.OrStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-orstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You provide more than one `Statement` within the `OrStatement` .",
        "stability": "external",
        "summary": "A logical rule statement used to combine other rule statements with OR logic.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst orStatementProperty: wafv2.CfnWebACL.OrStatementProperty = {\n  statements: [{\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.OrStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 7642
      },
      "name": "OrStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-orstatement.html#cfn-wafv2-webacl-orstatement-statements"
            },
            "remarks": "You can use any statements that can be nested.",
            "stability": "external",
            "summary": "The statements to combine with OR logic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7648
          },
          "name": "statements",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.StatementProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.OrStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.OverrideActionProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-overrideaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Set the override action to none to leave the result of the rule group alone. Set it to count to override the result to count only.\n\nYou can only use this for rule statements that reference a rule group, like `RuleGroupReferenceStatement` and `ManagedRuleGroupStatement` .\n\n> This option is usually set to none. It does not affect how the rules in the rule group are evaluated. If you want the rules in the rule group to only count matches, do not use this and instead exclude those rules in your rule group reference statement settings.",
        "stability": "external",
        "summary": "The action to use in the place of the action that results from the rule group evaluation.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const count: any;\ndeclare const none: any;\nconst overrideActionProperty: wafv2.CfnWebACL.OverrideActionProperty = {\n  count: count,\n  none: none,\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.OverrideActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 7714
      },
      "name": "OverrideActionProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-overrideaction.html#cfn-wafv2-webacl-overrideaction-count"
            },
            "remarks": "> This option is usually set to none. It does not affect how the rules in the rule group are evaluated. If you want the rules in the rule group to only count matches, do not use this and instead exclude those rules in your rule group reference statement settings.",
            "stability": "external",
            "summary": "Override the rule group evaluation result to count only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7722
          },
          "name": "count",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-overrideaction.html#cfn-wafv2-webacl-overrideaction-none"
            },
            "remarks": "This is the most common setting.",
            "stability": "external",
            "summary": "Don't override the rule group evaluation result."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7728
          },
          "name": "none",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.OverrideActionProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.RateBasedStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ratebasedstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can use this to put a temporary block on requests from an IP address that is sending excessive requests.\n\nAWS WAF tracks and manages web requests separately for each instance of a rate-based rule that you use. For example, if you provide the same rate-based rule settings in two web ACLs, each of the two rule statements represents a separate instance of the rate-based rule and gets its own tracking and management by AWS WAF . If you define a rate-based rule inside a rule group, and then use that rule group in multiple places, each use creates a separate instance of the rate-based rule that gets its own tracking and management by AWS WAF .\n\nWhen the rule action triggers, AWS WAF blocks additional requests from the IP address until the request rate falls below the limit.\n\nYou can optionally nest another statement inside the rate-based statement, to narrow the scope of the rule so that it only counts requests that match the nested statement. For example, based on recent requests that you have seen from an attacker, you might create a rate-based rule with a nested AND rule statement that contains the following nested statements:\n\n- An IP match statement with an IP set that specified the address 192.0.2.44.\n- A string match statement that searches in the User-Agent header for the string BadBot.\n\nIn this rate-based rule, you also define a rate limit. For this example, the rate limit is 1,000. Requests that meet the criteria of both of the nested statements are counted. If the count exceeds 1,000 requests per five minutes, the rule action triggers. Requests that do not meet the criteria of both of the nested statements are not counted towards the rate limit and are not affected by this rule.\n\nYou cannot nest a `RateBasedStatement` inside another statement, for example inside a `NotStatement` or `OrStatement` . You can define a `RateBasedStatement` inside a web ACL and inside a rule group.",
        "stability": "external",
        "summary": "A rate-based rule tracks the rate of requests for each originating IP address, and triggers the rule action when the rate exceeds a limit that you specify on the number of requests in any 5-minute time span.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst rateBasedStatementProperty: wafv2.CfnWebACL.RateBasedStatementProperty = {\n  aggregateKeyType: 'aggregateKeyType',\n  limit: 123,\n\n  // the properties below are optional\n  forwardedIpConfig: {\n    fallbackBehavior: 'fallbackBehavior',\n    headerName: 'headerName',\n  },\n  scopeDownStatement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RateBasedStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 7805
      },
      "name": "RateBasedStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ratebasedstatement.html#cfn-wafv2-webacl-ratebasedstatement-aggregatekeytype"
            },
            "remarks": "- IP - Aggregate the request counts on the IP address from the web request origin.\n- FORWARDED_IP - Aggregate the request counts on the first IP address in an HTTP header. If you use this, configure the `ForwardedIPConfig` , to specify the header to use.",
            "stability": "external",
            "summary": "Setting that indicates how to aggregate the request counts. The options are the following:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7814
          },
          "name": "aggregateKeyType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ratebasedstatement.html#cfn-wafv2-webacl-ratebasedstatement-limit"
            },
            "remarks": "If the statement includes a `ScopeDownStatement` , this limit is applied only to the requests that match the statement.",
            "stability": "external",
            "summary": "The limit on requests per 5-minute period for a single originating IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7830
          },
          "name": "limit",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ratebasedstatement.html#cfn-wafv2-webacl-ratebasedstatement-forwardedipconfig"
            },
            "remarks": "Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.\n\n> If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.\n\nThis is required if `AggregateKeyType` is set to `FORWARDED_IP` .",
            "stability": "external",
            "summary": "The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7824
          },
          "name": "forwardedIpConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ForwardedIPConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ratebasedstatement.html#cfn-wafv2-webacl-ratebasedstatement-scopedownstatement"
            },
            "remarks": "Requests are only tracked by the rate-based statement if they match the scope-down statement. You can use any nestable `Statement` in the scope-down statement, and you can nest statements at any level, the same as you can for a rule statement.",
            "stability": "external",
            "summary": "An optional nested statement that narrows the scope of the web requests that are evaluated by the rate-based statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7836
          },
          "name": "scopeDownStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.StatementProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.RateBasedStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.RegexMatchStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-regexmatchstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A rule statement used to search web request components for a match against a single regular expression.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst regexMatchStatementProperty: wafv2.CfnWebACL.RegexMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  regexString: 'regexString',\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RegexMatchStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 7908
      },
      "name": "RegexMatchStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-regexmatchstatement.html#cfn-wafv2-webacl-regexmatchstatement-fieldtomatch"
            },
            "stability": "external",
            "summary": "The part of the web request that you want AWS WAF to inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7914
          },
          "name": "fieldToMatch",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.FieldToMatchProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-regexmatchstatement.html#cfn-wafv2-webacl-regexmatchstatement-regexstring"
            },
            "stability": "external",
            "summary": "The string representing the regular expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7920
          },
          "name": "regexString",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-regexmatchstatement.html#cfn-wafv2-webacl-regexmatchstatement-texttransformations"
            },
            "remarks": "If you specify one or more transformations in a rule statement, AWS WAF performs all transformations on the content of the request component identified by `FieldToMatch` , starting from the lowest priority setting, before inspecting the content for a match.",
            "stability": "external",
            "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 7926
          },
          "name": "textTransformations",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.TextTransformationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.RegexMatchStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-regexpatternsetreferencestatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "To use this, create a `RegexPatternSet` that specifies the expressions that you want to detect, then use that set in this statement. A web request matches the pattern set rule statement if the request component matches any of the patterns in the set.\n\nEach regex pattern set rule statement references a regex pattern set. You create and maintain the set independent of your rules. This allows you to use the single set in multiple rules. When you update the referenced set, AWS WAF automatically updates all rules that reference it.",
        "stability": "external",
        "summary": "A rule statement used to search web request components for matches with regular expressions.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst regexPatternSetReferenceStatementProperty: wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty = {\n  arn: 'arn',\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 7998
      },
      "name": "RegexPatternSetReferenceStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-regexpatternsetreferencestatement.html#cfn-wafv2-webacl-regexpatternsetreferencestatement-arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the `RegexPatternSet` that this statement references."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8004
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-regexpatternsetreferencestatement.html#cfn-wafv2-webacl-regexpatternsetreferencestatement-fieldtomatch"
            },
            "stability": "external",
            "summary": "The part of the web request that you want AWS WAF to inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8010
          },
          "name": "fieldToMatch",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.FieldToMatchProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-regexpatternsetreferencestatement.html#cfn-wafv2-webacl-regexpatternsetreferencestatement-texttransformations"
            },
            "remarks": "If you specify one or more transformations in a rule statement, AWS WAF performs all transformations on the content of the request component identified by `FieldToMatch` , starting from the lowest priority setting, before inspecting the content for a match.",
            "stability": "external",
            "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8016
          },
          "name": "textTransformations",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.TextTransformationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.RegexPatternSetReferenceStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.RuleActionProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ruleaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Settings at the web ACL level can override the rule action setting.",
        "stability": "external",
        "summary": "The action that AWS WAF should take on a web request when it matches a rule's statement.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst ruleActionProperty: wafv2.CfnWebACL.RuleActionProperty = {\n  allow: {\n    customRequestHandling: {\n      insertHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n  block: {\n    customResponse: {\n      responseCode: 123,\n\n      // the properties below are optional\n      customResponseBodyKey: 'customResponseBodyKey',\n      responseHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n  captcha: {\n    customRequestHandling: {\n      insertHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n  count: {\n    customRequestHandling: {\n      insertHeaders: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RuleActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 8245
      },
      "name": "RuleActionProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ruleaction.html#cfn-wafv2-webacl-ruleaction-allow"
            },
            "stability": "external",
            "summary": "Instructs AWS WAF to allow the web request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8251
          },
          "name": "allow",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.AllowActionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ruleaction.html#cfn-wafv2-webacl-ruleaction-block"
            },
            "stability": "external",
            "summary": "Instructs AWS WAF to block the web request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8257
          },
          "name": "block",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.BlockActionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ruleaction.html#cfn-wafv2-webacl-ruleaction-captcha"
            },
            "remarks": "- If the request includes a valid, unexpired `CAPTCHA` token, AWS WAF allows the web request inspection to proceed to the next rule, similar to a `CountAction` .\n- If the request doesn't include a valid, unexpired `CAPTCHA` token, AWS WAF discontinues the web ACL evaluation of the request and blocks it from going to its intended destination.\n\nAWS WAF generates a response that it sends back to the client, which includes the following:\n\n- The header `x-amzn-waf-action` with a value of `captcha` .\n- The HTTP status code `405 Method Not Allowed` .\n- If the request contains an `Accept` header with a value of `text/html` , the response includes a `CAPTCHA` challenge.\n\nYou can configure the expiration time in the `CaptchaConfig` `ImmunityTimeProperty` setting at the rule and web ACL level. The rule setting overrides the web ACL setting.\n\nThis action option is available for rules. It isn't available for web ACL default actions.",
            "stability": "external",
            "summary": "Specifies that AWS WAF should run a `CAPTCHA` check against the request:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8276
          },
          "name": "captcha",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CaptchaActionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-ruleaction.html#cfn-wafv2-webacl-ruleaction-count"
            },
            "stability": "external",
            "summary": "Instructs AWS WAF to count the web request and allow it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8282
          },
          "name": "count",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CountActionProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.RuleActionProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.RuleGroupReferenceStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-rulegroupreferencestatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "To use this, create a rule group with your rules, then provide the ARN of the rule group in this statement.\n\nYou cannot nest a `RuleGroupReferenceStatement` , for example for use inside a `NotStatement` or `OrStatement` . You can only use a rule group reference statement at the top level inside a web ACL.",
        "stability": "external",
        "summary": "A rule statement used to run the rules that are defined in a `RuleGroup` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst ruleGroupReferenceStatementProperty: wafv2.CfnWebACL.RuleGroupReferenceStatementProperty = {\n  arn: 'arn',\n\n  // the properties below are optional\n  excludedRules: [{\n    name: 'name',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RuleGroupReferenceStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 8354
      },
      "name": "RuleGroupReferenceStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-rulegroupreferencestatement.html#cfn-wafv2-webacl-rulegroupreferencestatement-arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the entity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8360
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-rulegroupreferencestatement.html#cfn-wafv2-webacl-rulegroupreferencestatement-excludedrules"
            },
            "remarks": "When you exclude a rule, AWS WAF evaluates it exactly as it would if the rule action setting were `Count` . This is a useful option for testing the rules in a rule group without modifying how they handle your web traffic.",
            "stability": "external",
            "summary": "The rules in the referenced rule group whose actions are set to `Count` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8366
          },
          "name": "excludedRules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ExcludedRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.RuleGroupReferenceStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.RuleProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-rule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Each rule includes one top-level `Statement` that AWS WAF uses to identify matching web requests, and parameters that govern how AWS WAF handles them.",
        "stability": "external",
        "summary": "A single rule, which you can use in a `WebACL` or `RuleGroup` to identify web requests that you want to allow, block, or count.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const none: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst ruleProperty: wafv2.CfnWebACL.RuleProperty = {\n  name: 'name',\n  priority: 123,\n  statement: {\n    andStatement: {\n      statements: [statementProperty_],\n    },\n    byteMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      positionalConstraint: 'positionalConstraint',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      searchString: 'searchString',\n      searchStringBase64: 'searchStringBase64',\n    },\n    geoMatchStatement: {\n      countryCodes: ['countryCodes'],\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n    },\n    ipSetReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      ipSetForwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n        position: 'position',\n      },\n    },\n    labelMatchStatement: {\n      key: 'key',\n      scope: 'scope',\n    },\n    managedRuleGroupStatement: {\n      name: 'name',\n      vendorName: 'vendorName',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n      managedRuleGroupConfigs: [{\n        loginPath: 'loginPath',\n        passwordField: {\n          identifier: 'identifier',\n        },\n        payloadType: 'payloadType',\n        usernameField: {\n          identifier: 'identifier',\n        },\n      }],\n      scopeDownStatement: statementProperty_,\n      version: 'version',\n    },\n    notStatement: {\n      statement: statementProperty_,\n    },\n    orStatement: {\n      statements: [statementProperty_],\n    },\n    rateBasedStatement: {\n      aggregateKeyType: 'aggregateKeyType',\n      limit: 123,\n\n      // the properties below are optional\n      forwardedIpConfig: {\n        fallbackBehavior: 'fallbackBehavior',\n        headerName: 'headerName',\n      },\n      scopeDownStatement: statementProperty_,\n    },\n    regexMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      regexString: 'regexString',\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    regexPatternSetReferenceStatement: {\n      arn: 'arn',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    ruleGroupReferenceStatement: {\n      arn: 'arn',\n\n      // the properties below are optional\n      excludedRules: [{\n        name: 'name',\n      }],\n    },\n    sizeConstraintStatement: {\n      comparisonOperator: 'comparisonOperator',\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      size: 123,\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n    sqliMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n\n      // the properties below are optional\n      sensitivityLevel: 'sensitivityLevel',\n    },\n    xssMatchStatement: {\n      fieldToMatch: {\n        allQueryArguments: allQueryArguments,\n        body: {\n          oversizeHandling: 'oversizeHandling',\n        },\n        cookies: {\n          matchPattern: {\n            all: all,\n            excludedCookies: ['excludedCookies'],\n            includedCookies: ['includedCookies'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        headers: {\n          matchPattern: {\n            all: all,\n            excludedHeaders: ['excludedHeaders'],\n            includedHeaders: ['includedHeaders'],\n          },\n          matchScope: 'matchScope',\n          oversizeHandling: 'oversizeHandling',\n        },\n        jsonBody: {\n          matchPattern: {\n            all: all,\n            includedPaths: ['includedPaths'],\n          },\n          matchScope: 'matchScope',\n\n          // the properties below are optional\n          invalidFallbackBehavior: 'invalidFallbackBehavior',\n          oversizeHandling: 'oversizeHandling',\n        },\n        method: method,\n        queryString: queryString,\n        singleHeader: singleHeader,\n        singleQueryArgument: singleQueryArgument,\n        uriPath: uriPath,\n      },\n      textTransformations: [{\n        priority: 123,\n        type: 'type',\n      }],\n    },\n  },\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  action: {\n    allow: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    block: {\n      customResponse: {\n        responseCode: 123,\n\n        // the properties below are optional\n        customResponseBodyKey: 'customResponseBodyKey',\n        responseHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    captcha: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    count: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  captchaConfig: {\n    immunityTimeProperty: {\n      immunityTime: 123,\n    },\n  },\n  overrideAction: {\n    count: count,\n    none: none,\n  },\n  ruleLabels: [{\n    name: 'name',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 8086
      },
      "name": "RuleProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-rule.html#cfn-wafv2-webacl-rule-name"
            },
            "remarks": "You can't change the name of a `Rule` after you create it.",
            "stability": "external",
            "summary": "The name of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8111
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-rule.html#cfn-wafv2-webacl-rule-priority"
            },
            "remarks": "AWS WAF processes rules with lower priority first. The priorities don't need to be consecutive, but they must all be different.",
            "stability": "external",
            "summary": "If you define more than one `Rule` in a `WebACL` , AWS WAF evaluates each request against the `Rules` in order based on the value of `Priority` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8130
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-rule.html#cfn-wafv2-webacl-rule-statement"
            },
            "stability": "external",
            "summary": "The AWS WAF processing statement for the rule, for example `ByteMatchStatement` or `SizeConstraintStatement` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8153
          },
          "name": "statement",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.StatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-rule.html#cfn-wafv2-webacl-rule-visibilityconfig"
            },
            "stability": "external",
            "summary": "Defines and enables Amazon CloudWatch metrics and web request sample collection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8159
          },
          "name": "visibilityConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.VisibilityConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-rule.html#cfn-wafv2-webacl-rule-action"
            },
            "remarks": "Settings at the web ACL level can override the rule action setting.\n\nThis is used only for rules whose statements don't reference a rule group. Rule statements that reference a rule group are `RuleGroupReferenceStatement` and `ManagedRuleGroupStatement` .\n\nYou must set either this `Action` setting or the rule's `OverrideAction` , but not both:\n\n- If the rule statement doesn't reference a rule group, you must set this rule action setting and you must not set the rule's override action setting.\n- If the rule statement references a rule group, you must not set this action setting, because the actions are already set on the rules inside the rule group. You must set the rule's override action setting to indicate specifically whether to override the actions that are set on the rules in the rule group.",
            "stability": "external",
            "summary": "The action that AWS WAF should take on a web request when it matches the rule's statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8099
          },
          "name": "action",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RuleActionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-rule.html#cfn-wafv2-webacl-rule-captchaconfig"
            },
            "remarks": "If you don't specify this, AWS WAF uses the `CAPTCHA` configuration that's defined for the web ACL.",
            "stability": "external",
            "summary": "Specifies how AWS WAF should handle `CAPTCHA` evaluations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8105
          },
          "name": "captchaConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CaptchaConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-rule.html#cfn-wafv2-webacl-rule-overrideaction"
            },
            "remarks": "This is used only for rules whose statements reference a rule group. Rule statements that reference a rule group are `RuleGroupReferenceStatement` and `ManagedRuleGroupStatement` .\n\nSet the override action to none to leave the rule group rule actions in effect. Set it to count to only count matches, regardless of the rule action settings.\n\nYou must set either this `OverrideAction` setting or the `Action` setting, but not both:\n\n- If the rule statement references a rule group, you must set this override action setting and you must not set the rule's action setting.\n- If the rule statement doesn't reference a rule group, you must set the rule action setting and you must not set the rule's override action setting.",
            "stability": "external",
            "summary": "The override action to apply to the rules in a rule group, instead of the individual rule action settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8124
          },
          "name": "overrideAction",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.OverrideActionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-rule.html#cfn-wafv2-webacl-rule-rulelabels"
            },
            "remarks": "AWS WAF applies fully qualified labels to matching web requests. A fully qualified label is the concatenation of a label namespace and a rule label. The rule's rule group or web ACL defines the label namespace.\n\nRules that run after this rule in the web ACL can match against these labels using a `LabelMatchStatement` .\n\nFor each label, provide a case-sensitive string containing optional namespaces and a label name, according to the following guidelines:\n\n- Separate each component of the label with a colon.\n- Each namespace or name can have up to 128 characters.\n- You can specify up to 5 namespaces in a label.\n- Don't use the following reserved words in your label specification: `aws` , `waf` , `managed` , `rulegroup` , `webacl` , `regexpatternset` , or `ipset` .\n\nFor example, `myLabelName` or `nameSpace1:nameSpace2:myLabelName` .",
            "stability": "external",
            "summary": "Labels to apply to web requests that match the rule match statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8147
          },
          "name": "ruleLabels",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.LabelProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.RuleProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.SizeConstraintStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-sizeconstraintstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For example, you can use a size constraint statement to look for query strings that are longer than 100 bytes.\n\nIf you configure AWS WAF to inspect the request body, AWS WAF inspects only the first 8192 bytes (8 KB). If the request body for your web requests never exceeds 8192 bytes, you could use a size constraint statement to block requests that have a request body greater than 8192 bytes.\n\nIf you choose URI for the value of Part of the request to filter on, the slash (/) in the URI counts as one character. For example, the URI `/logo.jpg` is nine characters long.",
        "stability": "external",
        "summary": "A rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<).",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst sizeConstraintStatementProperty: wafv2.CfnWebACL.SizeConstraintStatementProperty = {\n  comparisonOperator: 'comparisonOperator',\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  size: 123,\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.SizeConstraintStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 8435
      },
      "name": "SizeConstraintStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-sizeconstraintstatement.html#cfn-wafv2-webacl-sizeconstraintstatement-comparisonoperator"
            },
            "stability": "external",
            "summary": "The operator to use to compare the request part to the size setting."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8441
          },
          "name": "comparisonOperator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-sizeconstraintstatement.html#cfn-wafv2-webacl-sizeconstraintstatement-fieldtomatch"
            },
            "stability": "external",
            "summary": "The part of the web request that you want AWS WAF to inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8447
          },
          "name": "fieldToMatch",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.FieldToMatchProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-sizeconstraintstatement.html#cfn-wafv2-webacl-sizeconstraintstatement-size"
            },
            "stability": "external",
            "summary": "The size, in byte, to compare to the request part, after any transformations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8453
          },
          "name": "size",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-sizeconstraintstatement.html#cfn-wafv2-webacl-sizeconstraintstatement-texttransformations"
            },
            "remarks": "If you specify one or more transformations in a rule statement, AWS WAF performs all transformations on the content of the request component identified by `FieldToMatch` , starting from the lowest priority setting, before inspecting the content for a match.",
            "stability": "external",
            "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8459
          },
          "name": "textTransformations",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.TextTransformationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.SizeConstraintStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.SqliMatchStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-sqlimatchstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Attackers insert malicious SQL code into web requests to do things like modify your database or extract data from it.",
        "stability": "external",
        "summary": "A rule statement that inspects for malicious SQL code.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst sqliMatchStatementProperty: wafv2.CfnWebACL.SqliMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n\n  // the properties below are optional\n  sensitivityLevel: 'sensitivityLevel',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.SqliMatchStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 8533
      },
      "name": "SqliMatchStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-sqlimatchstatement.html#cfn-wafv2-webacl-sqlimatchstatement-fieldtomatch"
            },
            "stability": "external",
            "summary": "The part of the web request that you want AWS WAF to inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8539
          },
          "name": "fieldToMatch",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.FieldToMatchProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-sqlimatchstatement.html#cfn-wafv2-webacl-sqlimatchstatement-texttransformations"
            },
            "remarks": "If you specify one or more transformations in a rule statement, AWS WAF performs all transformations on the content of the request component identified by `FieldToMatch` , starting from the lowest priority setting, before inspecting the content for a match.",
            "stability": "external",
            "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8551
          },
          "name": "textTransformations",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.TextTransformationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-sqlimatchstatement.html#cfn-wafv2-webacl-sqlimatchstatement-sensitivitylevel"
            },
            "stability": "external",
            "summary": "`CfnWebACL.SqliMatchStatementProperty.SensitivityLevel`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8545
          },
          "name": "sensitivityLevel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.SqliMatchStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.StatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The processing guidance for a rule, used by AWS WAF to determine whether a web request matches the rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const andStatementProperty_: wafv2.CfnWebACL.AndStatementProperty;\ndeclare const managedRuleGroupStatementProperty_: wafv2.CfnWebACL.ManagedRuleGroupStatementProperty;\ndeclare const method: any;\ndeclare const notStatementProperty_: wafv2.CfnWebACL.NotStatementProperty;\ndeclare const orStatementProperty_: wafv2.CfnWebACL.OrStatementProperty;\ndeclare const queryString: any;\ndeclare const rateBasedStatementProperty_: wafv2.CfnWebACL.RateBasedStatementProperty;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst statementProperty: wafv2.CfnWebACL.StatementProperty = {\n  andStatement: {\n    statements: [{\n      andStatement: andStatementProperty_,\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    }],\n  },\n  byteMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    positionalConstraint: 'positionalConstraint',\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n\n    // the properties below are optional\n    searchString: 'searchString',\n    searchStringBase64: 'searchStringBase64',\n  },\n  geoMatchStatement: {\n    countryCodes: ['countryCodes'],\n    forwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n    },\n  },\n  ipSetReferenceStatement: {\n    arn: 'arn',\n\n    // the properties below are optional\n    ipSetForwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n      position: 'position',\n    },\n  },\n  labelMatchStatement: {\n    key: 'key',\n    scope: 'scope',\n  },\n  managedRuleGroupStatement: {\n    name: 'name',\n    vendorName: 'vendorName',\n\n    // the properties below are optional\n    excludedRules: [{\n      name: 'name',\n    }],\n    managedRuleGroupConfigs: [{\n      loginPath: 'loginPath',\n      passwordField: {\n        identifier: 'identifier',\n      },\n      payloadType: 'payloadType',\n      usernameField: {\n        identifier: 'identifier',\n      },\n    }],\n    scopeDownStatement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: managedRuleGroupStatementProperty_,\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    version: 'version',\n  },\n  notStatement: {\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: notStatementProperty_,\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n  },\n  orStatement: {\n    statements: [{\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: orStatementProperty_,\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    }],\n  },\n  rateBasedStatement: {\n    aggregateKeyType: 'aggregateKeyType',\n    limit: 123,\n\n    // the properties below are optional\n    forwardedIpConfig: {\n      fallbackBehavior: 'fallbackBehavior',\n      headerName: 'headerName',\n    },\n    scopeDownStatement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: rateBasedStatementProperty_,\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n  },\n  regexMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    regexString: 'regexString',\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  regexPatternSetReferenceStatement: {\n    arn: 'arn',\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  ruleGroupReferenceStatement: {\n    arn: 'arn',\n\n    // the properties below are optional\n    excludedRules: [{\n      name: 'name',\n    }],\n  },\n  sizeConstraintStatement: {\n    comparisonOperator: 'comparisonOperator',\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    size: 123,\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n  sqliMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n\n    // the properties below are optional\n    sensitivityLevel: 'sensitivityLevel',\n  },\n  xssMatchStatement: {\n    fieldToMatch: {\n      allQueryArguments: allQueryArguments,\n      body: {\n        oversizeHandling: 'oversizeHandling',\n      },\n      cookies: {\n        matchPattern: {\n          all: all,\n          excludedCookies: ['excludedCookies'],\n          includedCookies: ['includedCookies'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      headers: {\n        matchPattern: {\n          all: all,\n          excludedHeaders: ['excludedHeaders'],\n          includedHeaders: ['includedHeaders'],\n        },\n        matchScope: 'matchScope',\n        oversizeHandling: 'oversizeHandling',\n      },\n      jsonBody: {\n        matchPattern: {\n          all: all,\n          includedPaths: ['includedPaths'],\n        },\n        matchScope: 'matchScope',\n\n        // the properties below are optional\n        invalidFallbackBehavior: 'invalidFallbackBehavior',\n        oversizeHandling: 'oversizeHandling',\n      },\n      method: method,\n      queryString: queryString,\n      singleHeader: singleHeader,\n      singleQueryArgument: singleQueryArgument,\n      uriPath: uriPath,\n    },\n    textTransformations: [{\n      priority: 123,\n      type: 'type',\n    }],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.StatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 8620
      },
      "name": "StatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-andstatement"
            },
            "remarks": "You provide more than one `Statement` within the `AndStatement` .",
            "stability": "external",
            "summary": "A logical rule statement used to combine other rule statements with AND logic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8626
          },
          "name": "andStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.AndStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-bytematchstatement"
            },
            "remarks": "The byte match statement provides the bytes to search for, the location in requests that you want AWS WAF to search, and other settings. The bytes to search for are typically a string that corresponds with ASCII characters. In the AWS WAF console and the developer guide, this is called a string match statement.",
            "stability": "external",
            "summary": "A rule statement that defines a string match search for AWS WAF to apply to web requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8632
          },
          "name": "byteMatchStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ByteMatchStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-geomatchstatement"
            },
            "stability": "external",
            "summary": "A rule statement used to identify web requests based on country of origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8638
          },
          "name": "geoMatchStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.GeoMatchStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-ipsetreferencestatement"
            },
            "remarks": "To use this, create an `IPSet` that specifies the addresses you want to detect, then use the ARN of that set in this statement.\n\nEach IP set rule statement references an IP set. You create and maintain the set independent of your rules. This allows you to use the single set in multiple rules. When you update the referenced set, AWS WAF automatically updates all rules that reference it.",
            "stability": "external",
            "summary": "A rule statement used to detect web requests coming from particular IP addresses or address ranges."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8646
          },
          "name": "ipSetReferenceStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.IPSetReferenceStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-labelmatchstatement"
            },
            "remarks": "The label match statement provides the label or namespace string to search for. The label string can represent a part or all of the fully qualified label name that had been added to the web request. Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web ACL context of the rule that added the label. If you do not provide the fully qualified name in your label match string, AWS WAF performs the search for labels that were added in the same context as the label match statement.",
            "stability": "external",
            "summary": "A rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8654
          },
          "name": "labelMatchStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.LabelMatchStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-managedrulegroupstatement"
            },
            "remarks": "To use this, provide the vendor name and the name of the rule group in this statement.\n\nYou cannot nest a `ManagedRuleGroupStatement` , for example for use inside a `NotStatement` or `OrStatement` . It can only be referenced as a top-level statement within a rule.",
            "stability": "external",
            "summary": "A rule statement used to run the rules that are defined in a managed rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8662
          },
          "name": "managedRuleGroupStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.ManagedRuleGroupStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-notstatement"
            },
            "remarks": "You provide one `Statement` within the `NotStatement` .",
            "stability": "external",
            "summary": "A logical rule statement used to negate the results of another rule statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8668
          },
          "name": "notStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.NotStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-orstatement"
            },
            "remarks": "You provide more than one `Statement` within the `OrStatement` .",
            "stability": "external",
            "summary": "A logical rule statement used to combine other rule statements with OR logic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8674
          },
          "name": "orStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.OrStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-ratebasedstatement"
            },
            "remarks": "You can use this to put a temporary block on requests from an IP address that is sending excessive requests.\n\nAWS WAF tracks and manages web requests separately for each instance of a rate-based rule that you use. For example, if you provide the same rate-based rule settings in two web ACLs, each of the two rule statements represents a separate instance of the rate-based rule and gets its own tracking and management by AWS WAF . If you define a rate-based rule inside a rule group, and then use that rule group in multiple places, each use creates a separate instance of the rate-based rule that gets its own tracking and management by AWS WAF .\n\nWhen the rule action triggers, AWS WAF blocks additional requests from the IP address until the request rate falls below the limit.\n\nYou can optionally nest another statement inside the rate-based statement, to narrow the scope of the rule so that it only counts requests that match the nested statement. For example, based on recent requests that you have seen from an attacker, you might create a rate-based rule with a nested AND rule statement that contains the following nested statements:\n\n- An IP match statement with an IP set that specified the address 192.0.2.44.\n- A string match statement that searches in the User-Agent header for the string BadBot.\n\nIn this rate-based rule, you also define a rate limit. For this example, the rate limit is 1,000. Requests that meet the criteria of both of the nested statements are counted. If the count exceeds 1,000 requests per five minutes, the rule action triggers. Requests that do not meet the criteria of both of the nested statements are not counted towards the rate limit and are not affected by this rule.\n\nYou cannot nest a `RateBasedStatement` inside another statement, for example inside a `NotStatement` or `OrStatement` . You can define a `RateBasedStatement` inside a web ACL and inside a rule group.",
            "stability": "external",
            "summary": "A rate-based rule tracks the rate of requests for each originating IP address, and triggers the rule action when the rate exceeds a limit that you specify on the number of requests in any 5-minute time span."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8693
          },
          "name": "rateBasedStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RateBasedStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-regexmatchstatement"
            },
            "stability": "external",
            "summary": "A rule statement used to search web request components for a match against a single regular expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8699
          },
          "name": "regexMatchStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RegexMatchStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-regexpatternsetreferencestatement"
            },
            "remarks": "To use this, create a `RegexPatternSet` that specifies the expressions that you want to detect, then use the ARN of that set in this statement. A web request matches the pattern set rule statement if the request component matches any of the patterns in the set.\n\nEach regex pattern set rule statement references a regex pattern set. You create and maintain the set independent of your rules. This allows you to use the single set in multiple rules. When you update the referenced set, AWS WAF automatically updates all rules that reference it.",
            "stability": "external",
            "summary": "A rule statement used to search web request components for matches with regular expressions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8707
          },
          "name": "regexPatternSetReferenceStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RegexPatternSetReferenceStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-rulegroupreferencestatement"
            },
            "remarks": "To use this, create a rule group with your rules, then provide the ARN of the rule group in this statement.\n\nYou cannot nest a `RuleGroupReferenceStatement` , for example for use inside a `NotStatement` or `OrStatement` . You can only use a rule group reference statement at the top level inside a web ACL.",
            "stability": "external",
            "summary": "A rule statement used to run the rules that are defined in a `RuleGroup` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8715
          },
          "name": "ruleGroupReferenceStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RuleGroupReferenceStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-sizeconstraintstatement"
            },
            "remarks": "For example, you can use a size constraint statement to look for query strings that are longer than 100 bytes.\n\nIf you configure AWS WAF to inspect the request body, AWS WAF inspects only the first 8192 bytes (8 KB). If the request body for your web requests never exceeds 8192 bytes, you could use a size constraint statement to block requests that have a request body greater than 8192 bytes.\n\nIf you choose URI for the value of Part of the request to filter on, the slash (/) in the URI counts as one character. For example, the URI `/logo.jpg` is nine characters long.",
            "stability": "external",
            "summary": "A rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8725
          },
          "name": "sizeConstraintStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.SizeConstraintStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-sqlimatchstatement"
            },
            "remarks": "Attackers insert malicious SQL code into web requests to do things like modify your database or extract data from it.",
            "stability": "external",
            "summary": "A rule statement that inspects for malicious SQL code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8731
          },
          "name": "sqliMatchStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.SqliMatchStatementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-statement.html#cfn-wafv2-webacl-statement-xssmatchstatement"
            },
            "remarks": "In XSS attacks, the attacker uses vulnerabilities in a benign website as a vehicle to inject malicious client-site scripts into other legitimate web browsers.",
            "stability": "external",
            "summary": "A rule statement that inspects for cross-site scripting (XSS) attacks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8737
          },
          "name": "xssMatchStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.XssMatchStatementProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.StatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.TextTransformationProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-texttransformation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst textTransformationProperty: wafv2.CfnWebACL.TextTransformationProperty = {\n  priority: 123,\n  type: 'type',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.TextTransformationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 8840
      },
      "name": "TextTransformationProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-texttransformation.html#cfn-wafv2-webacl-texttransformation-priority"
            },
            "remarks": "AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content. The priorities don't need to be consecutive, but they must all be different.",
            "stability": "external",
            "summary": "Sets the relative processing order for multiple transformations that are defined for a rule statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8846
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-texttransformation.html#cfn-wafv2-webacl-texttransformation-type"
            },
            "remarks": "*BASE64_DECODE* - Decode a `Base64` -encoded string.\n\n*BASE64_DECODE_EXT* - Decode a `Base64` -encoded string, but use a forgiving implementation that ignores characters that aren't valid.\n\n*CMD_LINE* - Command-line transformations. These are helpful in reducing effectiveness of attackers who inject an operating system command-line command and use unusual formatting to disguise some or all of the command.\n\n- Delete the following characters: `\\ \" ' ^`\n- Delete spaces before the following characters: `/ (`\n- Replace the following characters with a space: `, ;`\n- Replace multiple spaces with one space\n- Convert uppercase letters (A-Z) to lowercase (a-z)\n\n*COMPRESS_WHITE_SPACE* - Replace these characters with a space character (decimal 32):\n\n- `\\f` , formfeed, decimal 12\n- `\\t` , tab, decimal 9\n- `\\n` , newline, decimal 10\n- `\\r` , carriage return, decimal 13\n- `\\v` , vertical tab, decimal 11\n- Non-breaking space, decimal 160\n\n`COMPRESS_WHITE_SPACE` also replaces multiple spaces with one space.\n\n*CSS_DECODE* - Decode characters that were encoded using CSS 2.x escape rules `syndata.html#characters` . This function uses up to two bytes in the decoding process, so it can help to uncover ASCII characters that were encoded using CSS encoding that wouldn’t typically be encoded. It's also useful in countering evasion, which is a combination of a backslash and non-hexadecimal characters. For example, `ja\\vascript` for javascript.\n\n*ESCAPE_SEQ_DECODE* - Decode the following ANSI C escape sequences: `\\a` , `\\b` , `\\f` , `\\n` , `\\r` , `\\t` , `\\v` , `\\\\` , `\\?` , `\\'` , `\\\"` , `\\xHH` (hexadecimal), `\\0OOO` (octal). Encodings that aren't valid remain in the output.\n\n*HEX_DECODE* - Decode a string of hexadecimal characters into a binary.\n\n*HTML_ENTITY_DECODE* - Replace HTML-encoded characters with unencoded characters. `HTML_ENTITY_DECODE` performs these operations:\n\n- Replaces `(ampersand)quot;` with `\"`\n- Replaces `(ampersand)nbsp;` with a non-breaking space, decimal 160\n- Replaces `(ampersand)lt;` with a \"less than\" symbol\n- Replaces `(ampersand)gt;` with `>`\n- Replaces characters that are represented in hexadecimal format, `(ampersand)#xhhhh;` , with the corresponding characters\n- Replaces characters that are represented in decimal format, `(ampersand)#nnnn;` , with the corresponding characters\n\n*JS_DECODE* - Decode JavaScript escape sequences. If a `\\` `u` `HHHH` code is in the full-width ASCII code range of `FF01-FF5E` , then the higher byte is used to detect and adjust the lower byte. If not, only the lower byte is used and the higher byte is zeroed, causing a possible loss of information.\n\n*LOWERCASE* - Convert uppercase letters (A-Z) to lowercase (a-z).\n\n*MD5* - Calculate an MD5 hash from the data in the input. The computed hash is in a raw binary form.\n\n*NONE* - Specify `NONE` if you don't want any text transformations.\n\n*NORMALIZE_PATH* - Remove multiple slashes, directory self-references, and directory back-references that are not at the beginning of the input from an input string.\n\n*NORMALIZE_PATH_WIN* - This is the same as `NORMALIZE_PATH` , but first converts backslash characters to forward slashes.\n\n*REMOVE_NULLS* - Remove all `NULL` bytes from the input.\n\n*REPLACE_COMMENTS* - Replace each occurrence of a C-style comment ( `/* ... * /` ) with a single space. Multiple consecutive occurrences are not compressed. Unterminated comments are also replaced with a space (ASCII 0x20). However, a standalone termination of a comment ( `* /` ) is not acted upon.\n\n*REPLACE_NULLS* - Replace NULL bytes in the input with space characters (ASCII `0x20` ).\n\n*SQL_HEX_DECODE* - Decode SQL hex data. Example ( `0x414243` ) will be decoded to ( `ABC` ).\n\n*URL_DECODE* - Decode a URL-encoded value.\n\n*URL_DECODE_UNI* - Like `URL_DECODE` , but with support for Microsoft-specific `%u` encoding. If the code is in the full-width ASCII code range of `FF01-FF5E` , the higher byte is used to detect and adjust the lower byte. Otherwise, only the lower byte is used and the higher byte is zeroed.\n\n*UTF8_TO_UNICODE* - Convert all UTF-8 character sequences to Unicode. This helps input normalization, and minimizing false-positives and false-negatives for non-English languages.",
            "stability": "external",
            "summary": "You can specify the following transformation types:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8916
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.TextTransformationProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.VisibilityConfigProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-visibilityconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Defines and enables Amazon CloudWatch metrics and web request sample collection.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst visibilityConfigProperty: wafv2.CfnWebACL.VisibilityConfigProperty = {\n  cloudWatchMetricsEnabled: false,\n  metricName: 'metricName',\n  sampledRequestsEnabled: false,\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.VisibilityConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 8982
      },
      "name": "VisibilityConfigProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-visibilityconfig.html#cfn-wafv2-webacl-visibilityconfig-cloudwatchmetricsenabled"
            },
            "remarks": "For the list of available metrics, see [AWS WAF Metrics](https://docs.aws.amazon.com/waf/latest/developerguide/monitoring-cloudwatch.html#waf-metrics) .",
            "stability": "external",
            "summary": "A boolean indicating whether the associated resource sends metrics to Amazon CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8988
          },
          "name": "cloudWatchMetricsEnabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-visibilityconfig.html#cfn-wafv2-webacl-visibilityconfig-metricname"
            },
            "remarks": "The name can contain only the characters: A-Z, a-z, 0-9, - (hyphen), and _ (underscore). The name can be from one to 128 characters long. It can't contain whitespace or metric names reserved for AWS WAF , for example \"All\" and \"Default_Action.\"",
            "stability": "external",
            "summary": "A name of the Amazon CloudWatch metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 8994
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-visibilityconfig.html#cfn-wafv2-webacl-visibilityconfig-sampledrequestsenabled"
            },
            "remarks": "You can view the sampled requests through the AWS WAF console.",
            "stability": "external",
            "summary": "A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 9000
          },
          "name": "sampledRequestsEnabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.VisibilityConfigProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACL.XssMatchStatementProperty": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-xssmatchstatement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "In XSS attacks, the attacker uses vulnerabilities in a benign website as a vehicle to inject malicious client-site scripts into other legitimate web browsers.",
        "stability": "external",
        "summary": "A rule statement that inspects for cross-site scripting (XSS) attacks.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const method: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const uriPath: any;\nconst xssMatchStatementProperty: wafv2.CfnWebACL.XssMatchStatementProperty = {\n  fieldToMatch: {\n    allQueryArguments: allQueryArguments,\n    body: {\n      oversizeHandling: 'oversizeHandling',\n    },\n    cookies: {\n      matchPattern: {\n        all: all,\n        excludedCookies: ['excludedCookies'],\n        includedCookies: ['includedCookies'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    headers: {\n      matchPattern: {\n        all: all,\n        excludedHeaders: ['excludedHeaders'],\n        includedHeaders: ['includedHeaders'],\n      },\n      matchScope: 'matchScope',\n      oversizeHandling: 'oversizeHandling',\n    },\n    jsonBody: {\n      matchPattern: {\n        all: all,\n        includedPaths: ['includedPaths'],\n      },\n      matchScope: 'matchScope',\n\n      // the properties below are optional\n      invalidFallbackBehavior: 'invalidFallbackBehavior',\n      oversizeHandling: 'oversizeHandling',\n    },\n    method: method,\n    queryString: queryString,\n    singleHeader: singleHeader,\n    singleQueryArgument: singleQueryArgument,\n    uriPath: uriPath,\n  },\n  textTransformations: [{\n    priority: 123,\n    type: 'type',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.XssMatchStatementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 9070
      },
      "name": "XssMatchStatementProperty",
      "namespace": "CfnWebACL",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-xssmatchstatement.html#cfn-wafv2-webacl-xssmatchstatement-fieldtomatch"
            },
            "stability": "external",
            "summary": "The part of the web request that you want AWS WAF to inspect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 9076
          },
          "name": "fieldToMatch",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.FieldToMatchProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-xssmatchstatement.html#cfn-wafv2-webacl-xssmatchstatement-texttransformations"
            },
            "remarks": "If you specify one or more transformations in a rule statement, AWS WAF performs all transformations on the content of the request component identified by `FieldToMatch` , starting from the lowest priority setting, before inspecting the content for a match.",
            "stability": "external",
            "summary": "Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 9082
          },
          "name": "textTransformations",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.TextTransformationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACL.XssMatchStatementProperty"
    },
    "@aws-cdk/aws-wafv2.CfnWebACLAssociation": {
      "assembly": "@aws-cdk/aws-wafv2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::WAFv2::WebACLAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> This is the latest version of *AWS WAF* , named AWS WAF V2, released in November, 2019. For information, including how to migrate your AWS WAF resources from the prior release, see the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .\n\nUse a web ACL association to define an association between a web ACL and a regional application resource, to protect the resource. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, or an AWS AppSync GraphQL API.\n\nFor Amazon CloudFront , don't use this resource. Instead, use your CloudFront distribution configuration. To associate a web ACL with a distribution, provide the Amazon Resource Name (ARN) of the `WebACL` to your CloudFront distribution configuration. To disassociate a web ACL, provide an empty ARN. For information, see [AWS::CloudFront::Distribution](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::WAFv2::WebACLAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst cfnWebACLAssociation = new wafv2.CfnWebACLAssociation(this, 'MyCfnWebACLAssociation', {\n  resourceArn: 'resourceArn',\n  webAclArn: 'webAclArn',\n});"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACLAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::WAFv2::WebACLAssociation`."
        },
        "locationInModule": {
          "filename": "lib/wafv2.generated.ts",
          "line": 9286
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-wafv2.CfnWebACLAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 9234
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 9301
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 9313
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnWebACLAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 9238
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 9306
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html#cfn-wafv2-webaclassociation-resourcearn"
            },
            "remarks": "The ARN must be in one of the following formats:\n\n- For an Application Load Balancer: `arn:aws:elasticloadbalancing: *region* : *account-id* :loadbalancer/app/ *load-balancer-name* / *load-balancer-id*`\n- For an Amazon API Gateway REST API: `arn:aws:apigateway: *region* ::/restapis/ *api-id* /stages/ *stage-name*`\n- For an AWS AppSync GraphQL API: `arn:aws:appsync: *region* : *account-id* :apis/ *GraphQLApiId*`",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the resource to associate with the web ACL."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 9270
          },
          "name": "resourceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html#cfn-wafv2-webaclassociation-webaclarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the web ACL that you want to associate with the resource."
          },
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 9277
          },
          "name": "webAclArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACLAssociation"
    },
    "@aws-cdk/aws-wafv2.CfnWebACLAssociationProps": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnWebACLAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\nconst cfnWebACLAssociationProps: wafv2.CfnWebACLAssociationProps = {\n  resourceArn: 'resourceArn',\n  webAclArn: 'webAclArn',\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACLAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 9147
      },
      "name": "CfnWebACLAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html#cfn-wafv2-webaclassociation-resourcearn"
            },
            "remarks": "The ARN must be in one of the following formats:\n\n- For an Application Load Balancer: `arn:aws:elasticloadbalancing: *region* : *account-id* :loadbalancer/app/ *load-balancer-name* / *load-balancer-id*`\n- For an Amazon API Gateway REST API: `arn:aws:apigateway: *region* ::/restapis/ *api-id* /stages/ *stage-name*`\n- For an AWS AppSync GraphQL API: `arn:aws:appsync: *region* : *account-id* :apis/ *GraphQLApiId*`",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the resource to associate with the web ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 9160
          },
          "name": "resourceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html#cfn-wafv2-webaclassociation-webaclarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the web ACL that you want to associate with the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 9167
          },
          "name": "webAclArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACLAssociationProps"
    },
    "@aws-cdk/aws-wafv2.CfnWebACLProps": {
      "assembly": "@aws-cdk/aws-wafv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnWebACL`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as wafv2 from '@aws-cdk/aws-wafv2';\n\ndeclare const all: any;\ndeclare const allQueryArguments: any;\ndeclare const count: any;\ndeclare const method: any;\ndeclare const none: any;\ndeclare const queryString: any;\ndeclare const singleHeader: any;\ndeclare const singleQueryArgument: any;\ndeclare const statementProperty_: wafv2.CfnWebACL.StatementProperty;\ndeclare const uriPath: any;\nconst cfnWebACLProps: wafv2.CfnWebACLProps = {\n  defaultAction: {\n    allow: {\n      customRequestHandling: {\n        insertHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n    block: {\n      customResponse: {\n        responseCode: 123,\n\n        // the properties below are optional\n        customResponseBodyKey: 'customResponseBodyKey',\n        responseHeaders: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  scope: 'scope',\n  visibilityConfig: {\n    cloudWatchMetricsEnabled: false,\n    metricName: 'metricName',\n    sampledRequestsEnabled: false,\n  },\n\n  // the properties below are optional\n  captchaConfig: {\n    immunityTimeProperty: {\n      immunityTime: 123,\n    },\n  },\n  customResponseBodies: {\n    customResponseBodiesKey: {\n      content: 'content',\n      contentType: 'contentType',\n    },\n  },\n  description: 'description',\n  name: 'name',\n  rules: [{\n    name: 'name',\n    priority: 123,\n    statement: {\n      andStatement: {\n        statements: [statementProperty_],\n      },\n      byteMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        positionalConstraint: 'positionalConstraint',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        searchString: 'searchString',\n        searchStringBase64: 'searchStringBase64',\n      },\n      geoMatchStatement: {\n        countryCodes: ['countryCodes'],\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n      },\n      ipSetReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        ipSetForwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n          position: 'position',\n        },\n      },\n      labelMatchStatement: {\n        key: 'key',\n        scope: 'scope',\n      },\n      managedRuleGroupStatement: {\n        name: 'name',\n        vendorName: 'vendorName',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n        managedRuleGroupConfigs: [{\n          loginPath: 'loginPath',\n          passwordField: {\n            identifier: 'identifier',\n          },\n          payloadType: 'payloadType',\n          usernameField: {\n            identifier: 'identifier',\n          },\n        }],\n        scopeDownStatement: statementProperty_,\n        version: 'version',\n      },\n      notStatement: {\n        statement: statementProperty_,\n      },\n      orStatement: {\n        statements: [statementProperty_],\n      },\n      rateBasedStatement: {\n        aggregateKeyType: 'aggregateKeyType',\n        limit: 123,\n\n        // the properties below are optional\n        forwardedIpConfig: {\n          fallbackBehavior: 'fallbackBehavior',\n          headerName: 'headerName',\n        },\n        scopeDownStatement: statementProperty_,\n      },\n      regexMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        regexString: 'regexString',\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      regexPatternSetReferenceStatement: {\n        arn: 'arn',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      ruleGroupReferenceStatement: {\n        arn: 'arn',\n\n        // the properties below are optional\n        excludedRules: [{\n          name: 'name',\n        }],\n      },\n      sizeConstraintStatement: {\n        comparisonOperator: 'comparisonOperator',\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        size: 123,\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n      sqliMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n\n        // the properties below are optional\n        sensitivityLevel: 'sensitivityLevel',\n      },\n      xssMatchStatement: {\n        fieldToMatch: {\n          allQueryArguments: allQueryArguments,\n          body: {\n            oversizeHandling: 'oversizeHandling',\n          },\n          cookies: {\n            matchPattern: {\n              all: all,\n              excludedCookies: ['excludedCookies'],\n              includedCookies: ['includedCookies'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          headers: {\n            matchPattern: {\n              all: all,\n              excludedHeaders: ['excludedHeaders'],\n              includedHeaders: ['includedHeaders'],\n            },\n            matchScope: 'matchScope',\n            oversizeHandling: 'oversizeHandling',\n          },\n          jsonBody: {\n            matchPattern: {\n              all: all,\n              includedPaths: ['includedPaths'],\n            },\n            matchScope: 'matchScope',\n\n            // the properties below are optional\n            invalidFallbackBehavior: 'invalidFallbackBehavior',\n            oversizeHandling: 'oversizeHandling',\n          },\n          method: method,\n          queryString: queryString,\n          singleHeader: singleHeader,\n          singleQueryArgument: singleQueryArgument,\n          uriPath: uriPath,\n        },\n        textTransformations: [{\n          priority: 123,\n          type: 'type',\n        }],\n      },\n    },\n    visibilityConfig: {\n      cloudWatchMetricsEnabled: false,\n      metricName: 'metricName',\n      sampledRequestsEnabled: false,\n    },\n\n    // the properties below are optional\n    action: {\n      allow: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      block: {\n        customResponse: {\n          responseCode: 123,\n\n          // the properties below are optional\n          customResponseBodyKey: 'customResponseBodyKey',\n          responseHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      captcha: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n      count: {\n        customRequestHandling: {\n          insertHeaders: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n      },\n    },\n    captchaConfig: {\n      immunityTimeProperty: {\n        immunityTime: 123,\n      },\n    },\n    overrideAction: {\n      count: count,\n      none: none,\n    },\n    ruleLabels: [{\n      name: 'name',\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-wafv2.CfnWebACLProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/wafv2.generated.ts",
        "line": 4469
      },
      "name": "CfnWebACLProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-defaultaction"
            },
            "stability": "external",
            "summary": "The action to perform if none of the `Rules` contained in the `WebACL` match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4476
          },
          "name": "defaultAction",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.DefaultActionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-scope"
            },
            "remarks": "A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, or an AWS AppSync GraphQL API. Valid Values are `CLOUDFRONT` and `REGIONAL` .\n\n> For `CLOUDFRONT` , you must create your WAFv2 resources in the US East (N. Virginia) Region, `us-east-1` .\n\nFor information about how to define the association of the web ACL with your resource, see `WebACLAssociation` .",
            "stability": "external",
            "summary": "Specifies whether this is for an Amazon CloudFront distribution or for a regional application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4487
          },
          "name": "scope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-visibilityconfig"
            },
            "stability": "external",
            "summary": "Defines and enables Amazon CloudWatch metrics and web request sample collection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4494
          },
          "name": "visibilityConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.VisibilityConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-captchaconfig"
            },
            "remarks": "If you don't specify this, AWS WAF uses its default settings for `CaptchaConfig` .",
            "stability": "external",
            "summary": "Specifies how AWS WAF should handle `CAPTCHA` evaluations for rules that don't have their own `CaptchaConfig` settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4501
          },
          "name": "captchaConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CaptchaConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-customresponsebodies"
            },
            "remarks": "When you create a rule with a block action, you can send a custom response to the web request. You define these for the web ACL, and then use them in the rules and default actions that you define in the web ACL.\n\nFor information about customizing web requests and responses, see [Customizing web requests and responses in AWS WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .\n\nFor information about the limits on count and size for custom request and response settings, see [AWS WAF quotas](https://docs.aws.amazon.com/waf/latest/developerguide/limits.html) in the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) .",
            "stability": "external",
            "summary": "A map of custom response keys and content bodies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4512
          },
          "name": "customResponseBodies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.CustomResponseBodyProperty"
                          }
                        ]
                      }
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-description"
            },
            "stability": "external",
            "summary": "A description of the web ACL that helps with identification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4519
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-name"
            },
            "remarks": "You cannot change the name of a web ACL after you create it.",
            "stability": "external",
            "summary": "The name of the web ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4526
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-rules"
            },
            "remarks": "Each rule includes one top-level statement that AWS WAF uses to identify matching web requests, and parameters that govern how AWS WAF handles them.",
            "stability": "external",
            "summary": "The rule statements used to identify the web requests that you want to allow, block, or count."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4533
          },
          "name": "rules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-wafv2.CfnWebACL.RuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-tags"
            },
            "remarks": "The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each AWS resource.\n\n> To modify tags on existing resources, use the AWS WAF APIs or command line interface. With AWS CloudFormation , you can only add tags to AWS WAF resources during resource creation.",
            "stability": "external",
            "summary": "Key:value pairs associated with an AWS resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/wafv2.generated.ts",
            "line": 4542
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/wafv2.generated:CfnWebACLProps"
    }
  },
  "version": "1.169.0",
  "fingerprint": "**********"
}