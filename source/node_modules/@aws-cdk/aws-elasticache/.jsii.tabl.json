{
  "version": "2",
  "toolVersion": "1.63.2",
  "snippets": {
    "027e5e6d07d4662f3e848f8d122b81202aad42e781720f996523718462179989": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_elasticache as elasticache",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.ElastiCache;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.elasticache.*;",
          "version": "1"
        },
        "go": {
          "source": "import elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"",
          "version": "1"
        },
        "$": {
          "source": "import * as elasticache from '@aws-cdk/aws-elasticache';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticache"
        },
        "field": {
          "field": "markdown",
          "line": 18
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as elasticache from '@aws-cdk/aws-elasticache';",
      "syntaxKindCounter": {
        "10": 1,
        "75": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "ebcbf25f123f69f8878b66ea5478c263c8dcba937d26bdc7ce4b4a9e55c1ad83": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_cache_cluster = elasticache.CfnCacheCluster(self, \"MyCfnCacheCluster\",\n    cache_node_type=\"cacheNodeType\",\n    engine=\"engine\",\n    num_cache_nodes=123,\n\n    # the properties below are optional\n    auto_minor_version_upgrade=False,\n    az_mode=\"azMode\",\n    cache_parameter_group_name=\"cacheParameterGroupName\",\n    cache_security_group_names=[\"cacheSecurityGroupNames\"],\n    cache_subnet_group_name=\"cacheSubnetGroupName\",\n    cluster_name=\"clusterName\",\n    engine_version=\"engineVersion\",\n    log_delivery_configurations=[elasticache.CfnCacheCluster.LogDeliveryConfigurationRequestProperty(\n        destination_details=elasticache.CfnCacheCluster.DestinationDetailsProperty(\n            cloud_watch_logs_details=elasticache.CfnCacheCluster.CloudWatchLogsDestinationDetailsProperty(\n                log_group=\"logGroup\"\n            ),\n            kinesis_firehose_details=elasticache.CfnCacheCluster.KinesisFirehoseDestinationDetailsProperty(\n                delivery_stream=\"deliveryStream\"\n            )\n        ),\n        destination_type=\"destinationType\",\n        log_format=\"logFormat\",\n        log_type=\"logType\"\n    )],\n    notification_topic_arn=\"notificationTopicArn\",\n    port=123,\n    preferred_availability_zone=\"preferredAvailabilityZone\",\n    preferred_availability_zones=[\"preferredAvailabilityZones\"],\n    preferred_maintenance_window=\"preferredMaintenanceWindow\",\n    snapshot_arns=[\"snapshotArns\"],\n    snapshot_name=\"snapshotName\",\n    snapshot_retention_limit=123,\n    snapshot_window=\"snapshotWindow\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    vpc_security_group_ids=[\"vpcSecurityGroupIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnCacheCluster cfnCacheCluster = new CfnCacheCluster(this, \"MyCfnCacheCluster\", new CfnCacheClusterProps {\n    CacheNodeType = \"cacheNodeType\",\n    Engine = \"engine\",\n    NumCacheNodes = 123,\n\n    // the properties below are optional\n    AutoMinorVersionUpgrade = false,\n    AzMode = \"azMode\",\n    CacheParameterGroupName = \"cacheParameterGroupName\",\n    CacheSecurityGroupNames = new [] { \"cacheSecurityGroupNames\" },\n    CacheSubnetGroupName = \"cacheSubnetGroupName\",\n    ClusterName = \"clusterName\",\n    EngineVersion = \"engineVersion\",\n    LogDeliveryConfigurations = new [] { new LogDeliveryConfigurationRequestProperty {\n        DestinationDetails = new DestinationDetailsProperty {\n            CloudWatchLogsDetails = new CloudWatchLogsDestinationDetailsProperty {\n                LogGroup = \"logGroup\"\n            },\n            KinesisFirehoseDetails = new KinesisFirehoseDestinationDetailsProperty {\n                DeliveryStream = \"deliveryStream\"\n            }\n        },\n        DestinationType = \"destinationType\",\n        LogFormat = \"logFormat\",\n        LogType = \"logType\"\n    } },\n    NotificationTopicArn = \"notificationTopicArn\",\n    Port = 123,\n    PreferredAvailabilityZone = \"preferredAvailabilityZone\",\n    PreferredAvailabilityZones = new [] { \"preferredAvailabilityZones\" },\n    PreferredMaintenanceWindow = \"preferredMaintenanceWindow\",\n    SnapshotArns = new [] { \"snapshotArns\" },\n    SnapshotName = \"snapshotName\",\n    SnapshotRetentionLimit = 123,\n    SnapshotWindow = \"snapshotWindow\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VpcSecurityGroupIds = new [] { \"vpcSecurityGroupIds\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnCacheCluster cfnCacheCluster = CfnCacheCluster.Builder.create(this, \"MyCfnCacheCluster\")\n        .cacheNodeType(\"cacheNodeType\")\n        .engine(\"engine\")\n        .numCacheNodes(123)\n\n        // the properties below are optional\n        .autoMinorVersionUpgrade(false)\n        .azMode(\"azMode\")\n        .cacheParameterGroupName(\"cacheParameterGroupName\")\n        .cacheSecurityGroupNames(List.of(\"cacheSecurityGroupNames\"))\n        .cacheSubnetGroupName(\"cacheSubnetGroupName\")\n        .clusterName(\"clusterName\")\n        .engineVersion(\"engineVersion\")\n        .logDeliveryConfigurations(List.of(LogDeliveryConfigurationRequestProperty.builder()\n                .destinationDetails(DestinationDetailsProperty.builder()\n                        .cloudWatchLogsDetails(CloudWatchLogsDestinationDetailsProperty.builder()\n                                .logGroup(\"logGroup\")\n                                .build())\n                        .kinesisFirehoseDetails(KinesisFirehoseDestinationDetailsProperty.builder()\n                                .deliveryStream(\"deliveryStream\")\n                                .build())\n                        .build())\n                .destinationType(\"destinationType\")\n                .logFormat(\"logFormat\")\n                .logType(\"logType\")\n                .build()))\n        .notificationTopicArn(\"notificationTopicArn\")\n        .port(123)\n        .preferredAvailabilityZone(\"preferredAvailabilityZone\")\n        .preferredAvailabilityZones(List.of(\"preferredAvailabilityZones\"))\n        .preferredMaintenanceWindow(\"preferredMaintenanceWindow\")\n        .snapshotArns(List.of(\"snapshotArns\"))\n        .snapshotName(\"snapshotName\")\n        .snapshotRetentionLimit(123)\n        .snapshotWindow(\"snapshotWindow\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .vpcSecurityGroupIds(List.of(\"vpcSecurityGroupIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnCacheCluster := elasticache.NewCfnCacheCluster(this, jsii.String(\"MyCfnCacheCluster\"), &cfnCacheClusterProps{\n\tcacheNodeType: jsii.String(\"cacheNodeType\"),\n\tengine: jsii.String(\"engine\"),\n\tnumCacheNodes: jsii.Number(123),\n\n\t// the properties below are optional\n\tautoMinorVersionUpgrade: jsii.Boolean(false),\n\tazMode: jsii.String(\"azMode\"),\n\tcacheParameterGroupName: jsii.String(\"cacheParameterGroupName\"),\n\tcacheSecurityGroupNames: []*string{\n\t\tjsii.String(\"cacheSecurityGroupNames\"),\n\t},\n\tcacheSubnetGroupName: jsii.String(\"cacheSubnetGroupName\"),\n\tclusterName: jsii.String(\"clusterName\"),\n\tengineVersion: jsii.String(\"engineVersion\"),\n\tlogDeliveryConfigurations: []interface{}{\n\t\t&logDeliveryConfigurationRequestProperty{\n\t\t\tdestinationDetails: &destinationDetailsProperty{\n\t\t\t\tcloudWatchLogsDetails: &cloudWatchLogsDestinationDetailsProperty{\n\t\t\t\t\tlogGroup: jsii.String(\"logGroup\"),\n\t\t\t\t},\n\t\t\t\tkinesisFirehoseDetails: &kinesisFirehoseDestinationDetailsProperty{\n\t\t\t\t\tdeliveryStream: jsii.String(\"deliveryStream\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tdestinationType: jsii.String(\"destinationType\"),\n\t\t\tlogFormat: jsii.String(\"logFormat\"),\n\t\t\tlogType: jsii.String(\"logType\"),\n\t\t},\n\t},\n\tnotificationTopicArn: jsii.String(\"notificationTopicArn\"),\n\tport: jsii.Number(123),\n\tpreferredAvailabilityZone: jsii.String(\"preferredAvailabilityZone\"),\n\tpreferredAvailabilityZones: []*string{\n\t\tjsii.String(\"preferredAvailabilityZones\"),\n\t},\n\tpreferredMaintenanceWindow: jsii.String(\"preferredMaintenanceWindow\"),\n\tsnapshotArns: []*string{\n\t\tjsii.String(\"snapshotArns\"),\n\t},\n\tsnapshotName: jsii.String(\"snapshotName\"),\n\tsnapshotRetentionLimit: jsii.Number(123),\n\tsnapshotWindow: jsii.String(\"snapshotWindow\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tvpcSecurityGroupIds: []*string{\n\t\tjsii.String(\"vpcSecurityGroupIds\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnCacheCluster = new elasticache.CfnCacheCluster(this, 'MyCfnCacheCluster', {\n  cacheNodeType: 'cacheNodeType',\n  engine: 'engine',\n  numCacheNodes: 123,\n\n  // the properties below are optional\n  autoMinorVersionUpgrade: false,\n  azMode: 'azMode',\n  cacheParameterGroupName: 'cacheParameterGroupName',\n  cacheSecurityGroupNames: ['cacheSecurityGroupNames'],\n  cacheSubnetGroupName: 'cacheSubnetGroupName',\n  clusterName: 'clusterName',\n  engineVersion: 'engineVersion',\n  logDeliveryConfigurations: [{\n    destinationDetails: {\n      cloudWatchLogsDetails: {\n        logGroup: 'logGroup',\n      },\n      kinesisFirehoseDetails: {\n        deliveryStream: 'deliveryStream',\n      },\n    },\n    destinationType: 'destinationType',\n    logFormat: 'logFormat',\n    logType: 'logType',\n  }],\n  notificationTopicArn: 'notificationTopicArn',\n  port: 123,\n  preferredAvailabilityZone: 'preferredAvailabilityZone',\n  preferredAvailabilityZones: ['preferredAvailabilityZones'],\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  snapshotArns: ['snapshotArns'],\n  snapshotName: 'snapshotName',\n  snapshotRetentionLimit: 123,\n  snapshotWindow: 'snapshotWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnCacheCluster"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnCacheCluster",
        "@aws-cdk/aws-elasticache.CfnCacheClusterProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCacheCluster = new elasticache.CfnCacheCluster(this, 'MyCfnCacheCluster', {\n  cacheNodeType: 'cacheNodeType',\n  engine: 'engine',\n  numCacheNodes: 123,\n\n  // the properties below are optional\n  autoMinorVersionUpgrade: false,\n  azMode: 'azMode',\n  cacheParameterGroupName: 'cacheParameterGroupName',\n  cacheSecurityGroupNames: ['cacheSecurityGroupNames'],\n  cacheSubnetGroupName: 'cacheSubnetGroupName',\n  clusterName: 'clusterName',\n  engineVersion: 'engineVersion',\n  logDeliveryConfigurations: [{\n    destinationDetails: {\n      cloudWatchLogsDetails: {\n        logGroup: 'logGroup',\n      },\n      kinesisFirehoseDetails: {\n        deliveryStream: 'deliveryStream',\n      },\n    },\n    destinationType: 'destinationType',\n    logFormat: 'logFormat',\n    logType: 'logType',\n  }],\n  notificationTopicArn: 'notificationTopicArn',\n  port: 123,\n  preferredAvailabilityZone: 'preferredAvailabilityZone',\n  preferredAvailabilityZones: ['preferredAvailabilityZones'],\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  snapshotArns: ['snapshotArns'],\n  snapshotName: 'snapshotName',\n  snapshotRetentionLimit: 123,\n  snapshotWindow: 'snapshotWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 25,
        "75": 36,
        "91": 1,
        "104": 1,
        "192": 6,
        "193": 6,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 32,
        "290": 1
      },
      "fqnsFingerprint": "313e63f0d2b304fa3384b5f18e4624a6b09e1c2b3da86d4648978897eeafbb0c"
    },
    "29f3e02220c99f6cc750ea5bd3fcae84caa6195bae312eb60d10622d66bcbca1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncloud_watch_logs_destination_details_property = elasticache.CfnCacheCluster.CloudWatchLogsDestinationDetailsProperty(\n    log_group=\"logGroup\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCloudWatchLogsDestinationDetailsProperty cloudWatchLogsDestinationDetailsProperty = new CloudWatchLogsDestinationDetailsProperty {\n    LogGroup = \"logGroup\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCloudWatchLogsDestinationDetailsProperty cloudWatchLogsDestinationDetailsProperty = CloudWatchLogsDestinationDetailsProperty.builder()\n        .logGroup(\"logGroup\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncloudWatchLogsDestinationDetailsProperty := &cloudWatchLogsDestinationDetailsProperty{\n\tlogGroup: jsii.String(\"logGroup\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cloudWatchLogsDestinationDetailsProperty: elasticache.CfnCacheCluster.CloudWatchLogsDestinationDetailsProperty = {\n  logGroup: 'logGroup',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnCacheCluster.CloudWatchLogsDestinationDetailsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnCacheCluster.CloudWatchLogsDestinationDetailsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cloudWatchLogsDestinationDetailsProperty: elasticache.CfnCacheCluster.CloudWatchLogsDestinationDetailsProperty = {\n  logGroup: 'logGroup',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "e06154c950190c6e236276aba12bec6b862d4f462de3d821ca3e6c98ed5727ce"
    },
    "1d8286e03e3dcf34291f37d80d1d66a74dd35c593b92c7d0cf4ed98c130280c9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ndestination_details_property = elasticache.CfnCacheCluster.DestinationDetailsProperty(\n    cloud_watch_logs_details=elasticache.CfnCacheCluster.CloudWatchLogsDestinationDetailsProperty(\n        log_group=\"logGroup\"\n    ),\n    kinesis_firehose_details=elasticache.CfnCacheCluster.KinesisFirehoseDestinationDetailsProperty(\n        delivery_stream=\"deliveryStream\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nDestinationDetailsProperty destinationDetailsProperty = new DestinationDetailsProperty {\n    CloudWatchLogsDetails = new CloudWatchLogsDestinationDetailsProperty {\n        LogGroup = \"logGroup\"\n    },\n    KinesisFirehoseDetails = new KinesisFirehoseDestinationDetailsProperty {\n        DeliveryStream = \"deliveryStream\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nDestinationDetailsProperty destinationDetailsProperty = DestinationDetailsProperty.builder()\n        .cloudWatchLogsDetails(CloudWatchLogsDestinationDetailsProperty.builder()\n                .logGroup(\"logGroup\")\n                .build())\n        .kinesisFirehoseDetails(KinesisFirehoseDestinationDetailsProperty.builder()\n                .deliveryStream(\"deliveryStream\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ndestinationDetailsProperty := &destinationDetailsProperty{\n\tcloudWatchLogsDetails: &cloudWatchLogsDestinationDetailsProperty{\n\t\tlogGroup: jsii.String(\"logGroup\"),\n\t},\n\tkinesisFirehoseDetails: &kinesisFirehoseDestinationDetailsProperty{\n\t\tdeliveryStream: jsii.String(\"deliveryStream\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst destinationDetailsProperty: elasticache.CfnCacheCluster.DestinationDetailsProperty = {\n  cloudWatchLogsDetails: {\n    logGroup: 'logGroup',\n  },\n  kinesisFirehoseDetails: {\n    deliveryStream: 'deliveryStream',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnCacheCluster.DestinationDetailsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnCacheCluster.DestinationDetailsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst destinationDetailsProperty: elasticache.CfnCacheCluster.DestinationDetailsProperty = {\n  cloudWatchLogsDetails: {\n    logGroup: 'logGroup',\n  },\n  kinesisFirehoseDetails: {\n    deliveryStream: 'deliveryStream',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "5cd5bea781013fc29c068c9544d2e78e9e359462e60a8e5778dc30370e39a05d"
    },
    "fc897bc8869f5beb8e2110056b48c203a1e89dc778907dfaabbd87b7c018610e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\nkinesis_firehose_destination_details_property = elasticache.CfnCacheCluster.KinesisFirehoseDestinationDetailsProperty(\n    delivery_stream=\"deliveryStream\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nKinesisFirehoseDestinationDetailsProperty kinesisFirehoseDestinationDetailsProperty = new KinesisFirehoseDestinationDetailsProperty {\n    DeliveryStream = \"deliveryStream\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nKinesisFirehoseDestinationDetailsProperty kinesisFirehoseDestinationDetailsProperty = KinesisFirehoseDestinationDetailsProperty.builder()\n        .deliveryStream(\"deliveryStream\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\nkinesisFirehoseDestinationDetailsProperty := &kinesisFirehoseDestinationDetailsProperty{\n\tdeliveryStream: jsii.String(\"deliveryStream\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst kinesisFirehoseDestinationDetailsProperty: elasticache.CfnCacheCluster.KinesisFirehoseDestinationDetailsProperty = {\n  deliveryStream: 'deliveryStream',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnCacheCluster.KinesisFirehoseDestinationDetailsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnCacheCluster.KinesisFirehoseDestinationDetailsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisFirehoseDestinationDetailsProperty: elasticache.CfnCacheCluster.KinesisFirehoseDestinationDetailsProperty = {\n  deliveryStream: 'deliveryStream',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "2e81af618ece7714c61431b0c10ec10f0acded6d3d887992dddd1d7abbc6f7ab"
    },
    "8b2e3c5e29b8d573c6d3c2164b2a532cf9d37997f75abc681358d602d8ccecaa": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\nlog_delivery_configuration_request_property = elasticache.CfnCacheCluster.LogDeliveryConfigurationRequestProperty(\n    destination_details=elasticache.CfnCacheCluster.DestinationDetailsProperty(\n        cloud_watch_logs_details=elasticache.CfnCacheCluster.CloudWatchLogsDestinationDetailsProperty(\n            log_group=\"logGroup\"\n        ),\n        kinesis_firehose_details=elasticache.CfnCacheCluster.KinesisFirehoseDestinationDetailsProperty(\n            delivery_stream=\"deliveryStream\"\n        )\n    ),\n    destination_type=\"destinationType\",\n    log_format=\"logFormat\",\n    log_type=\"logType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nLogDeliveryConfigurationRequestProperty logDeliveryConfigurationRequestProperty = new LogDeliveryConfigurationRequestProperty {\n    DestinationDetails = new DestinationDetailsProperty {\n        CloudWatchLogsDetails = new CloudWatchLogsDestinationDetailsProperty {\n            LogGroup = \"logGroup\"\n        },\n        KinesisFirehoseDetails = new KinesisFirehoseDestinationDetailsProperty {\n            DeliveryStream = \"deliveryStream\"\n        }\n    },\n    DestinationType = \"destinationType\",\n    LogFormat = \"logFormat\",\n    LogType = \"logType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nLogDeliveryConfigurationRequestProperty logDeliveryConfigurationRequestProperty = LogDeliveryConfigurationRequestProperty.builder()\n        .destinationDetails(DestinationDetailsProperty.builder()\n                .cloudWatchLogsDetails(CloudWatchLogsDestinationDetailsProperty.builder()\n                        .logGroup(\"logGroup\")\n                        .build())\n                .kinesisFirehoseDetails(KinesisFirehoseDestinationDetailsProperty.builder()\n                        .deliveryStream(\"deliveryStream\")\n                        .build())\n                .build())\n        .destinationType(\"destinationType\")\n        .logFormat(\"logFormat\")\n        .logType(\"logType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\nlogDeliveryConfigurationRequestProperty := &logDeliveryConfigurationRequestProperty{\n\tdestinationDetails: &destinationDetailsProperty{\n\t\tcloudWatchLogsDetails: &cloudWatchLogsDestinationDetailsProperty{\n\t\t\tlogGroup: jsii.String(\"logGroup\"),\n\t\t},\n\t\tkinesisFirehoseDetails: &kinesisFirehoseDestinationDetailsProperty{\n\t\t\tdeliveryStream: jsii.String(\"deliveryStream\"),\n\t\t},\n\t},\n\tdestinationType: jsii.String(\"destinationType\"),\n\tlogFormat: jsii.String(\"logFormat\"),\n\tlogType: jsii.String(\"logType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst logDeliveryConfigurationRequestProperty: elasticache.CfnCacheCluster.LogDeliveryConfigurationRequestProperty = {\n  destinationDetails: {\n    cloudWatchLogsDetails: {\n      logGroup: 'logGroup',\n    },\n    kinesisFirehoseDetails: {\n      deliveryStream: 'deliveryStream',\n    },\n  },\n  destinationType: 'destinationType',\n  logFormat: 'logFormat',\n  logType: 'logType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnCacheCluster.LogDeliveryConfigurationRequestProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnCacheCluster.LogDeliveryConfigurationRequestProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst logDeliveryConfigurationRequestProperty: elasticache.CfnCacheCluster.LogDeliveryConfigurationRequestProperty = {\n  destinationDetails: {\n    cloudWatchLogsDetails: {\n      logGroup: 'logGroup',\n    },\n    kinesisFirehoseDetails: {\n      deliveryStream: 'deliveryStream',\n    },\n  },\n  destinationType: 'destinationType',\n  logFormat: 'logFormat',\n  logType: 'logType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 13,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "be1079e2fe0d96a80769b0b0f3228d835b13415e683e7bc80d85e593655f81bb"
    },
    "af7fa7ec4dc8bfc437ece8f6a243acdf481e7ebfbfd4422ab4754bc49f0b9c0f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_cache_cluster_props = elasticache.CfnCacheClusterProps(\n    cache_node_type=\"cacheNodeType\",\n    engine=\"engine\",\n    num_cache_nodes=123,\n\n    # the properties below are optional\n    auto_minor_version_upgrade=False,\n    az_mode=\"azMode\",\n    cache_parameter_group_name=\"cacheParameterGroupName\",\n    cache_security_group_names=[\"cacheSecurityGroupNames\"],\n    cache_subnet_group_name=\"cacheSubnetGroupName\",\n    cluster_name=\"clusterName\",\n    engine_version=\"engineVersion\",\n    log_delivery_configurations=[elasticache.CfnCacheCluster.LogDeliveryConfigurationRequestProperty(\n        destination_details=elasticache.CfnCacheCluster.DestinationDetailsProperty(\n            cloud_watch_logs_details=elasticache.CfnCacheCluster.CloudWatchLogsDestinationDetailsProperty(\n                log_group=\"logGroup\"\n            ),\n            kinesis_firehose_details=elasticache.CfnCacheCluster.KinesisFirehoseDestinationDetailsProperty(\n                delivery_stream=\"deliveryStream\"\n            )\n        ),\n        destination_type=\"destinationType\",\n        log_format=\"logFormat\",\n        log_type=\"logType\"\n    )],\n    notification_topic_arn=\"notificationTopicArn\",\n    port=123,\n    preferred_availability_zone=\"preferredAvailabilityZone\",\n    preferred_availability_zones=[\"preferredAvailabilityZones\"],\n    preferred_maintenance_window=\"preferredMaintenanceWindow\",\n    snapshot_arns=[\"snapshotArns\"],\n    snapshot_name=\"snapshotName\",\n    snapshot_retention_limit=123,\n    snapshot_window=\"snapshotWindow\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    vpc_security_group_ids=[\"vpcSecurityGroupIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnCacheClusterProps cfnCacheClusterProps = new CfnCacheClusterProps {\n    CacheNodeType = \"cacheNodeType\",\n    Engine = \"engine\",\n    NumCacheNodes = 123,\n\n    // the properties below are optional\n    AutoMinorVersionUpgrade = false,\n    AzMode = \"azMode\",\n    CacheParameterGroupName = \"cacheParameterGroupName\",\n    CacheSecurityGroupNames = new [] { \"cacheSecurityGroupNames\" },\n    CacheSubnetGroupName = \"cacheSubnetGroupName\",\n    ClusterName = \"clusterName\",\n    EngineVersion = \"engineVersion\",\n    LogDeliveryConfigurations = new [] { new LogDeliveryConfigurationRequestProperty {\n        DestinationDetails = new DestinationDetailsProperty {\n            CloudWatchLogsDetails = new CloudWatchLogsDestinationDetailsProperty {\n                LogGroup = \"logGroup\"\n            },\n            KinesisFirehoseDetails = new KinesisFirehoseDestinationDetailsProperty {\n                DeliveryStream = \"deliveryStream\"\n            }\n        },\n        DestinationType = \"destinationType\",\n        LogFormat = \"logFormat\",\n        LogType = \"logType\"\n    } },\n    NotificationTopicArn = \"notificationTopicArn\",\n    Port = 123,\n    PreferredAvailabilityZone = \"preferredAvailabilityZone\",\n    PreferredAvailabilityZones = new [] { \"preferredAvailabilityZones\" },\n    PreferredMaintenanceWindow = \"preferredMaintenanceWindow\",\n    SnapshotArns = new [] { \"snapshotArns\" },\n    SnapshotName = \"snapshotName\",\n    SnapshotRetentionLimit = 123,\n    SnapshotWindow = \"snapshotWindow\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VpcSecurityGroupIds = new [] { \"vpcSecurityGroupIds\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnCacheClusterProps cfnCacheClusterProps = CfnCacheClusterProps.builder()\n        .cacheNodeType(\"cacheNodeType\")\n        .engine(\"engine\")\n        .numCacheNodes(123)\n\n        // the properties below are optional\n        .autoMinorVersionUpgrade(false)\n        .azMode(\"azMode\")\n        .cacheParameterGroupName(\"cacheParameterGroupName\")\n        .cacheSecurityGroupNames(List.of(\"cacheSecurityGroupNames\"))\n        .cacheSubnetGroupName(\"cacheSubnetGroupName\")\n        .clusterName(\"clusterName\")\n        .engineVersion(\"engineVersion\")\n        .logDeliveryConfigurations(List.of(LogDeliveryConfigurationRequestProperty.builder()\n                .destinationDetails(DestinationDetailsProperty.builder()\n                        .cloudWatchLogsDetails(CloudWatchLogsDestinationDetailsProperty.builder()\n                                .logGroup(\"logGroup\")\n                                .build())\n                        .kinesisFirehoseDetails(KinesisFirehoseDestinationDetailsProperty.builder()\n                                .deliveryStream(\"deliveryStream\")\n                                .build())\n                        .build())\n                .destinationType(\"destinationType\")\n                .logFormat(\"logFormat\")\n                .logType(\"logType\")\n                .build()))\n        .notificationTopicArn(\"notificationTopicArn\")\n        .port(123)\n        .preferredAvailabilityZone(\"preferredAvailabilityZone\")\n        .preferredAvailabilityZones(List.of(\"preferredAvailabilityZones\"))\n        .preferredMaintenanceWindow(\"preferredMaintenanceWindow\")\n        .snapshotArns(List.of(\"snapshotArns\"))\n        .snapshotName(\"snapshotName\")\n        .snapshotRetentionLimit(123)\n        .snapshotWindow(\"snapshotWindow\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .vpcSecurityGroupIds(List.of(\"vpcSecurityGroupIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnCacheClusterProps := &cfnCacheClusterProps{\n\tcacheNodeType: jsii.String(\"cacheNodeType\"),\n\tengine: jsii.String(\"engine\"),\n\tnumCacheNodes: jsii.Number(123),\n\n\t// the properties below are optional\n\tautoMinorVersionUpgrade: jsii.Boolean(false),\n\tazMode: jsii.String(\"azMode\"),\n\tcacheParameterGroupName: jsii.String(\"cacheParameterGroupName\"),\n\tcacheSecurityGroupNames: []*string{\n\t\tjsii.String(\"cacheSecurityGroupNames\"),\n\t},\n\tcacheSubnetGroupName: jsii.String(\"cacheSubnetGroupName\"),\n\tclusterName: jsii.String(\"clusterName\"),\n\tengineVersion: jsii.String(\"engineVersion\"),\n\tlogDeliveryConfigurations: []interface{}{\n\t\t&logDeliveryConfigurationRequestProperty{\n\t\t\tdestinationDetails: &destinationDetailsProperty{\n\t\t\t\tcloudWatchLogsDetails: &cloudWatchLogsDestinationDetailsProperty{\n\t\t\t\t\tlogGroup: jsii.String(\"logGroup\"),\n\t\t\t\t},\n\t\t\t\tkinesisFirehoseDetails: &kinesisFirehoseDestinationDetailsProperty{\n\t\t\t\t\tdeliveryStream: jsii.String(\"deliveryStream\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tdestinationType: jsii.String(\"destinationType\"),\n\t\t\tlogFormat: jsii.String(\"logFormat\"),\n\t\t\tlogType: jsii.String(\"logType\"),\n\t\t},\n\t},\n\tnotificationTopicArn: jsii.String(\"notificationTopicArn\"),\n\tport: jsii.Number(123),\n\tpreferredAvailabilityZone: jsii.String(\"preferredAvailabilityZone\"),\n\tpreferredAvailabilityZones: []*string{\n\t\tjsii.String(\"preferredAvailabilityZones\"),\n\t},\n\tpreferredMaintenanceWindow: jsii.String(\"preferredMaintenanceWindow\"),\n\tsnapshotArns: []*string{\n\t\tjsii.String(\"snapshotArns\"),\n\t},\n\tsnapshotName: jsii.String(\"snapshotName\"),\n\tsnapshotRetentionLimit: jsii.Number(123),\n\tsnapshotWindow: jsii.String(\"snapshotWindow\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tvpcSecurityGroupIds: []*string{\n\t\tjsii.String(\"vpcSecurityGroupIds\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnCacheClusterProps: elasticache.CfnCacheClusterProps = {\n  cacheNodeType: 'cacheNodeType',\n  engine: 'engine',\n  numCacheNodes: 123,\n\n  // the properties below are optional\n  autoMinorVersionUpgrade: false,\n  azMode: 'azMode',\n  cacheParameterGroupName: 'cacheParameterGroupName',\n  cacheSecurityGroupNames: ['cacheSecurityGroupNames'],\n  cacheSubnetGroupName: 'cacheSubnetGroupName',\n  clusterName: 'clusterName',\n  engineVersion: 'engineVersion',\n  logDeliveryConfigurations: [{\n    destinationDetails: {\n      cloudWatchLogsDetails: {\n        logGroup: 'logGroup',\n      },\n      kinesisFirehoseDetails: {\n        deliveryStream: 'deliveryStream',\n      },\n    },\n    destinationType: 'destinationType',\n    logFormat: 'logFormat',\n    logType: 'logType',\n  }],\n  notificationTopicArn: 'notificationTopicArn',\n  port: 123,\n  preferredAvailabilityZone: 'preferredAvailabilityZone',\n  preferredAvailabilityZones: ['preferredAvailabilityZones'],\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  snapshotArns: ['snapshotArns'],\n  snapshotName: 'snapshotName',\n  snapshotRetentionLimit: 123,\n  snapshotWindow: 'snapshotWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnCacheClusterProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnCacheClusterProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCacheClusterProps: elasticache.CfnCacheClusterProps = {\n  cacheNodeType: 'cacheNodeType',\n  engine: 'engine',\n  numCacheNodes: 123,\n\n  // the properties below are optional\n  autoMinorVersionUpgrade: false,\n  azMode: 'azMode',\n  cacheParameterGroupName: 'cacheParameterGroupName',\n  cacheSecurityGroupNames: ['cacheSecurityGroupNames'],\n  cacheSubnetGroupName: 'cacheSubnetGroupName',\n  clusterName: 'clusterName',\n  engineVersion: 'engineVersion',\n  logDeliveryConfigurations: [{\n    destinationDetails: {\n      cloudWatchLogsDetails: {\n        logGroup: 'logGroup',\n      },\n      kinesisFirehoseDetails: {\n        deliveryStream: 'deliveryStream',\n      },\n    },\n    destinationType: 'destinationType',\n    logFormat: 'logFormat',\n    logType: 'logType',\n  }],\n  notificationTopicArn: 'notificationTopicArn',\n  port: 123,\n  preferredAvailabilityZone: 'preferredAvailabilityZone',\n  preferredAvailabilityZones: ['preferredAvailabilityZones'],\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  snapshotArns: ['snapshotArns'],\n  snapshotName: 'snapshotName',\n  snapshotRetentionLimit: 123,\n  snapshotWindow: 'snapshotWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcSecurityGroupIds: ['vpcSecurityGroupIds'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 24,
        "75": 36,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 6,
        "193": 6,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 32,
        "290": 1
      },
      "fqnsFingerprint": "027db3566e302dff50ef82b24b57b4241103de58309c529641c46802d14699c6"
    },
    "16be7c4c506c66b8891979d01cc1f6aafcb958382833b686f5ddc20552feaa27": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_global_replication_group = elasticache.CfnGlobalReplicationGroup(self, \"MyCfnGlobalReplicationGroup\",\n    members=[elasticache.CfnGlobalReplicationGroup.GlobalReplicationGroupMemberProperty(\n        replication_group_id=\"replicationGroupId\",\n        replication_group_region=\"replicationGroupRegion\",\n        role=\"role\"\n    )],\n\n    # the properties below are optional\n    automatic_failover_enabled=False,\n    cache_node_type=\"cacheNodeType\",\n    cache_parameter_group_name=\"cacheParameterGroupName\",\n    engine_version=\"engineVersion\",\n    global_node_group_count=123,\n    global_replication_group_description=\"globalReplicationGroupDescription\",\n    global_replication_group_id_suffix=\"globalReplicationGroupIdSuffix\",\n    regional_configurations=[elasticache.CfnGlobalReplicationGroup.RegionalConfigurationProperty(\n        replication_group_id=\"replicationGroupId\",\n        replication_group_region=\"replicationGroupRegion\",\n        resharding_configurations=[elasticache.CfnGlobalReplicationGroup.ReshardingConfigurationProperty(\n            node_group_id=\"nodeGroupId\",\n            preferred_availability_zones=[\"preferredAvailabilityZones\"]\n        )]\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnGlobalReplicationGroup cfnGlobalReplicationGroup = new CfnGlobalReplicationGroup(this, \"MyCfnGlobalReplicationGroup\", new CfnGlobalReplicationGroupProps {\n    Members = new [] { new GlobalReplicationGroupMemberProperty {\n        ReplicationGroupId = \"replicationGroupId\",\n        ReplicationGroupRegion = \"replicationGroupRegion\",\n        Role = \"role\"\n    } },\n\n    // the properties below are optional\n    AutomaticFailoverEnabled = false,\n    CacheNodeType = \"cacheNodeType\",\n    CacheParameterGroupName = \"cacheParameterGroupName\",\n    EngineVersion = \"engineVersion\",\n    GlobalNodeGroupCount = 123,\n    GlobalReplicationGroupDescription = \"globalReplicationGroupDescription\",\n    GlobalReplicationGroupIdSuffix = \"globalReplicationGroupIdSuffix\",\n    RegionalConfigurations = new [] { new RegionalConfigurationProperty {\n        ReplicationGroupId = \"replicationGroupId\",\n        ReplicationGroupRegion = \"replicationGroupRegion\",\n        ReshardingConfigurations = new [] { new ReshardingConfigurationProperty {\n            NodeGroupId = \"nodeGroupId\",\n            PreferredAvailabilityZones = new [] { \"preferredAvailabilityZones\" }\n        } }\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnGlobalReplicationGroup cfnGlobalReplicationGroup = CfnGlobalReplicationGroup.Builder.create(this, \"MyCfnGlobalReplicationGroup\")\n        .members(List.of(GlobalReplicationGroupMemberProperty.builder()\n                .replicationGroupId(\"replicationGroupId\")\n                .replicationGroupRegion(\"replicationGroupRegion\")\n                .role(\"role\")\n                .build()))\n\n        // the properties below are optional\n        .automaticFailoverEnabled(false)\n        .cacheNodeType(\"cacheNodeType\")\n        .cacheParameterGroupName(\"cacheParameterGroupName\")\n        .engineVersion(\"engineVersion\")\n        .globalNodeGroupCount(123)\n        .globalReplicationGroupDescription(\"globalReplicationGroupDescription\")\n        .globalReplicationGroupIdSuffix(\"globalReplicationGroupIdSuffix\")\n        .regionalConfigurations(List.of(RegionalConfigurationProperty.builder()\n                .replicationGroupId(\"replicationGroupId\")\n                .replicationGroupRegion(\"replicationGroupRegion\")\n                .reshardingConfigurations(List.of(ReshardingConfigurationProperty.builder()\n                        .nodeGroupId(\"nodeGroupId\")\n                        .preferredAvailabilityZones(List.of(\"preferredAvailabilityZones\"))\n                        .build()))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnGlobalReplicationGroup := elasticache.NewCfnGlobalReplicationGroup(this, jsii.String(\"MyCfnGlobalReplicationGroup\"), &cfnGlobalReplicationGroupProps{\n\tmembers: []interface{}{\n\t\t&globalReplicationGroupMemberProperty{\n\t\t\treplicationGroupId: jsii.String(\"replicationGroupId\"),\n\t\t\treplicationGroupRegion: jsii.String(\"replicationGroupRegion\"),\n\t\t\trole: jsii.String(\"role\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tautomaticFailoverEnabled: jsii.Boolean(false),\n\tcacheNodeType: jsii.String(\"cacheNodeType\"),\n\tcacheParameterGroupName: jsii.String(\"cacheParameterGroupName\"),\n\tengineVersion: jsii.String(\"engineVersion\"),\n\tglobalNodeGroupCount: jsii.Number(123),\n\tglobalReplicationGroupDescription: jsii.String(\"globalReplicationGroupDescription\"),\n\tglobalReplicationGroupIdSuffix: jsii.String(\"globalReplicationGroupIdSuffix\"),\n\tregionalConfigurations: []interface{}{\n\t\t&regionalConfigurationProperty{\n\t\t\treplicationGroupId: jsii.String(\"replicationGroupId\"),\n\t\t\treplicationGroupRegion: jsii.String(\"replicationGroupRegion\"),\n\t\t\treshardingConfigurations: []interface{}{\n\t\t\t\t&reshardingConfigurationProperty{\n\t\t\t\t\tnodeGroupId: jsii.String(\"nodeGroupId\"),\n\t\t\t\t\tpreferredAvailabilityZones: []*string{\n\t\t\t\t\t\tjsii.String(\"preferredAvailabilityZones\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnGlobalReplicationGroup = new elasticache.CfnGlobalReplicationGroup(this, 'MyCfnGlobalReplicationGroup', {\n  members: [{\n    replicationGroupId: 'replicationGroupId',\n    replicationGroupRegion: 'replicationGroupRegion',\n    role: 'role',\n  }],\n\n  // the properties below are optional\n  automaticFailoverEnabled: false,\n  cacheNodeType: 'cacheNodeType',\n  cacheParameterGroupName: 'cacheParameterGroupName',\n  engineVersion: 'engineVersion',\n  globalNodeGroupCount: 123,\n  globalReplicationGroupDescription: 'globalReplicationGroupDescription',\n  globalReplicationGroupIdSuffix: 'globalReplicationGroupIdSuffix',\n  regionalConfigurations: [{\n    replicationGroupId: 'replicationGroupId',\n    replicationGroupRegion: 'replicationGroupRegion',\n    reshardingConfigurations: [{\n      nodeGroupId: 'nodeGroupId',\n      preferredAvailabilityZones: ['preferredAvailabilityZones'],\n    }],\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnGlobalReplicationGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnGlobalReplicationGroup",
        "@aws-cdk/aws-elasticache.CfnGlobalReplicationGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnGlobalReplicationGroup = new elasticache.CfnGlobalReplicationGroup(this, 'MyCfnGlobalReplicationGroup', {\n  members: [{\n    replicationGroupId: 'replicationGroupId',\n    replicationGroupRegion: 'replicationGroupRegion',\n    role: 'role',\n  }],\n\n  // the properties below are optional\n  automaticFailoverEnabled: false,\n  cacheNodeType: 'cacheNodeType',\n  cacheParameterGroupName: 'cacheParameterGroupName',\n  engineVersion: 'engineVersion',\n  globalNodeGroupCount: 123,\n  globalReplicationGroupDescription: 'globalReplicationGroupDescription',\n  globalReplicationGroupIdSuffix: 'globalReplicationGroupIdSuffix',\n  regionalConfigurations: [{\n    replicationGroupId: 'replicationGroupId',\n    replicationGroupRegion: 'replicationGroupRegion',\n    reshardingConfigurations: [{\n      nodeGroupId: 'nodeGroupId',\n      preferredAvailabilityZones: ['preferredAvailabilityZones'],\n    }],\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 14,
        "75": 21,
        "91": 1,
        "104": 1,
        "192": 4,
        "193": 4,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 17,
        "290": 1
      },
      "fqnsFingerprint": "15a52c651718cc93b6a08c5e3667b729b8c475f007f104be662f0caa1172d6c2"
    },
    "77922c2adad4dad96229f3fc11ccc59e32c5da4d906e4438b085654f7e287d5d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\nglobal_replication_group_member_property = elasticache.CfnGlobalReplicationGroup.GlobalReplicationGroupMemberProperty(\n    replication_group_id=\"replicationGroupId\",\n    replication_group_region=\"replicationGroupRegion\",\n    role=\"role\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nGlobalReplicationGroupMemberProperty globalReplicationGroupMemberProperty = new GlobalReplicationGroupMemberProperty {\n    ReplicationGroupId = \"replicationGroupId\",\n    ReplicationGroupRegion = \"replicationGroupRegion\",\n    Role = \"role\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nGlobalReplicationGroupMemberProperty globalReplicationGroupMemberProperty = GlobalReplicationGroupMemberProperty.builder()\n        .replicationGroupId(\"replicationGroupId\")\n        .replicationGroupRegion(\"replicationGroupRegion\")\n        .role(\"role\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\nglobalReplicationGroupMemberProperty := &globalReplicationGroupMemberProperty{\n\treplicationGroupId: jsii.String(\"replicationGroupId\"),\n\treplicationGroupRegion: jsii.String(\"replicationGroupRegion\"),\n\trole: jsii.String(\"role\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst globalReplicationGroupMemberProperty: elasticache.CfnGlobalReplicationGroup.GlobalReplicationGroupMemberProperty = {\n  replicationGroupId: 'replicationGroupId',\n  replicationGroupRegion: 'replicationGroupRegion',\n  role: 'role',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnGlobalReplicationGroup.GlobalReplicationGroupMemberProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnGlobalReplicationGroup.GlobalReplicationGroupMemberProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst globalReplicationGroupMemberProperty: elasticache.CfnGlobalReplicationGroup.GlobalReplicationGroupMemberProperty = {\n  replicationGroupId: 'replicationGroupId',\n  replicationGroupRegion: 'replicationGroupRegion',\n  role: 'role',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "f65982448132a4a20a5bb1b4df1c18a5c62171da01e28c46ed3e08f8a749d590"
    },
    "eee81f331d3a3fba8af7e448830932ac4774b1461e2b4b05d1b32133161ff25b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\nregional_configuration_property = elasticache.CfnGlobalReplicationGroup.RegionalConfigurationProperty(\n    replication_group_id=\"replicationGroupId\",\n    replication_group_region=\"replicationGroupRegion\",\n    resharding_configurations=[elasticache.CfnGlobalReplicationGroup.ReshardingConfigurationProperty(\n        node_group_id=\"nodeGroupId\",\n        preferred_availability_zones=[\"preferredAvailabilityZones\"]\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nRegionalConfigurationProperty regionalConfigurationProperty = new RegionalConfigurationProperty {\n    ReplicationGroupId = \"replicationGroupId\",\n    ReplicationGroupRegion = \"replicationGroupRegion\",\n    ReshardingConfigurations = new [] { new ReshardingConfigurationProperty {\n        NodeGroupId = \"nodeGroupId\",\n        PreferredAvailabilityZones = new [] { \"preferredAvailabilityZones\" }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nRegionalConfigurationProperty regionalConfigurationProperty = RegionalConfigurationProperty.builder()\n        .replicationGroupId(\"replicationGroupId\")\n        .replicationGroupRegion(\"replicationGroupRegion\")\n        .reshardingConfigurations(List.of(ReshardingConfigurationProperty.builder()\n                .nodeGroupId(\"nodeGroupId\")\n                .preferredAvailabilityZones(List.of(\"preferredAvailabilityZones\"))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\nregionalConfigurationProperty := &regionalConfigurationProperty{\n\treplicationGroupId: jsii.String(\"replicationGroupId\"),\n\treplicationGroupRegion: jsii.String(\"replicationGroupRegion\"),\n\treshardingConfigurations: []interface{}{\n\t\t&reshardingConfigurationProperty{\n\t\t\tnodeGroupId: jsii.String(\"nodeGroupId\"),\n\t\t\tpreferredAvailabilityZones: []*string{\n\t\t\t\tjsii.String(\"preferredAvailabilityZones\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst regionalConfigurationProperty: elasticache.CfnGlobalReplicationGroup.RegionalConfigurationProperty = {\n  replicationGroupId: 'replicationGroupId',\n  replicationGroupRegion: 'replicationGroupRegion',\n  reshardingConfigurations: [{\n    nodeGroupId: 'nodeGroupId',\n    preferredAvailabilityZones: ['preferredAvailabilityZones'],\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnGlobalReplicationGroup.RegionalConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnGlobalReplicationGroup.RegionalConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst regionalConfigurationProperty: elasticache.CfnGlobalReplicationGroup.RegionalConfigurationProperty = {\n  replicationGroupId: 'replicationGroupId',\n  replicationGroupRegion: 'replicationGroupRegion',\n  reshardingConfigurations: [{\n    nodeGroupId: 'nodeGroupId',\n    preferredAvailabilityZones: ['preferredAvailabilityZones'],\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "3db004ac66b9cf3aec8765a5dfde970be9bdb605a22dc3917d11fdfba4e8262e"
    },
    "bc5de1765f6ef2f6593ec8a7660f9a905c9f7f23754d72090b9ef106fadebf8a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\nresharding_configuration_property = elasticache.CfnGlobalReplicationGroup.ReshardingConfigurationProperty(\n    node_group_id=\"nodeGroupId\",\n    preferred_availability_zones=[\"preferredAvailabilityZones\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nReshardingConfigurationProperty reshardingConfigurationProperty = new ReshardingConfigurationProperty {\n    NodeGroupId = \"nodeGroupId\",\n    PreferredAvailabilityZones = new [] { \"preferredAvailabilityZones\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nReshardingConfigurationProperty reshardingConfigurationProperty = ReshardingConfigurationProperty.builder()\n        .nodeGroupId(\"nodeGroupId\")\n        .preferredAvailabilityZones(List.of(\"preferredAvailabilityZones\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\nreshardingConfigurationProperty := &reshardingConfigurationProperty{\n\tnodeGroupId: jsii.String(\"nodeGroupId\"),\n\tpreferredAvailabilityZones: []*string{\n\t\tjsii.String(\"preferredAvailabilityZones\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst reshardingConfigurationProperty: elasticache.CfnGlobalReplicationGroup.ReshardingConfigurationProperty = {\n  nodeGroupId: 'nodeGroupId',\n  preferredAvailabilityZones: ['preferredAvailabilityZones'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnGlobalReplicationGroup.ReshardingConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnGlobalReplicationGroup.ReshardingConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst reshardingConfigurationProperty: elasticache.CfnGlobalReplicationGroup.ReshardingConfigurationProperty = {\n  nodeGroupId: 'nodeGroupId',\n  preferredAvailabilityZones: ['preferredAvailabilityZones'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "ce6704dee96d12327f5bce9f1cbb69a80d1d8b97e66ae634a45f9f367c225167"
    },
    "afb5a7b0059c44ae984dc592c035fba37da564267bb05e1f6f1f620b0bb9bf08": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_global_replication_group_props = elasticache.CfnGlobalReplicationGroupProps(\n    members=[elasticache.CfnGlobalReplicationGroup.GlobalReplicationGroupMemberProperty(\n        replication_group_id=\"replicationGroupId\",\n        replication_group_region=\"replicationGroupRegion\",\n        role=\"role\"\n    )],\n\n    # the properties below are optional\n    automatic_failover_enabled=False,\n    cache_node_type=\"cacheNodeType\",\n    cache_parameter_group_name=\"cacheParameterGroupName\",\n    engine_version=\"engineVersion\",\n    global_node_group_count=123,\n    global_replication_group_description=\"globalReplicationGroupDescription\",\n    global_replication_group_id_suffix=\"globalReplicationGroupIdSuffix\",\n    regional_configurations=[elasticache.CfnGlobalReplicationGroup.RegionalConfigurationProperty(\n        replication_group_id=\"replicationGroupId\",\n        replication_group_region=\"replicationGroupRegion\",\n        resharding_configurations=[elasticache.CfnGlobalReplicationGroup.ReshardingConfigurationProperty(\n            node_group_id=\"nodeGroupId\",\n            preferred_availability_zones=[\"preferredAvailabilityZones\"]\n        )]\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnGlobalReplicationGroupProps cfnGlobalReplicationGroupProps = new CfnGlobalReplicationGroupProps {\n    Members = new [] { new GlobalReplicationGroupMemberProperty {\n        ReplicationGroupId = \"replicationGroupId\",\n        ReplicationGroupRegion = \"replicationGroupRegion\",\n        Role = \"role\"\n    } },\n\n    // the properties below are optional\n    AutomaticFailoverEnabled = false,\n    CacheNodeType = \"cacheNodeType\",\n    CacheParameterGroupName = \"cacheParameterGroupName\",\n    EngineVersion = \"engineVersion\",\n    GlobalNodeGroupCount = 123,\n    GlobalReplicationGroupDescription = \"globalReplicationGroupDescription\",\n    GlobalReplicationGroupIdSuffix = \"globalReplicationGroupIdSuffix\",\n    RegionalConfigurations = new [] { new RegionalConfigurationProperty {\n        ReplicationGroupId = \"replicationGroupId\",\n        ReplicationGroupRegion = \"replicationGroupRegion\",\n        ReshardingConfigurations = new [] { new ReshardingConfigurationProperty {\n            NodeGroupId = \"nodeGroupId\",\n            PreferredAvailabilityZones = new [] { \"preferredAvailabilityZones\" }\n        } }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnGlobalReplicationGroupProps cfnGlobalReplicationGroupProps = CfnGlobalReplicationGroupProps.builder()\n        .members(List.of(GlobalReplicationGroupMemberProperty.builder()\n                .replicationGroupId(\"replicationGroupId\")\n                .replicationGroupRegion(\"replicationGroupRegion\")\n                .role(\"role\")\n                .build()))\n\n        // the properties below are optional\n        .automaticFailoverEnabled(false)\n        .cacheNodeType(\"cacheNodeType\")\n        .cacheParameterGroupName(\"cacheParameterGroupName\")\n        .engineVersion(\"engineVersion\")\n        .globalNodeGroupCount(123)\n        .globalReplicationGroupDescription(\"globalReplicationGroupDescription\")\n        .globalReplicationGroupIdSuffix(\"globalReplicationGroupIdSuffix\")\n        .regionalConfigurations(List.of(RegionalConfigurationProperty.builder()\n                .replicationGroupId(\"replicationGroupId\")\n                .replicationGroupRegion(\"replicationGroupRegion\")\n                .reshardingConfigurations(List.of(ReshardingConfigurationProperty.builder()\n                        .nodeGroupId(\"nodeGroupId\")\n                        .preferredAvailabilityZones(List.of(\"preferredAvailabilityZones\"))\n                        .build()))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnGlobalReplicationGroupProps := &cfnGlobalReplicationGroupProps{\n\tmembers: []interface{}{\n\t\t&globalReplicationGroupMemberProperty{\n\t\t\treplicationGroupId: jsii.String(\"replicationGroupId\"),\n\t\t\treplicationGroupRegion: jsii.String(\"replicationGroupRegion\"),\n\t\t\trole: jsii.String(\"role\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tautomaticFailoverEnabled: jsii.Boolean(false),\n\tcacheNodeType: jsii.String(\"cacheNodeType\"),\n\tcacheParameterGroupName: jsii.String(\"cacheParameterGroupName\"),\n\tengineVersion: jsii.String(\"engineVersion\"),\n\tglobalNodeGroupCount: jsii.Number(123),\n\tglobalReplicationGroupDescription: jsii.String(\"globalReplicationGroupDescription\"),\n\tglobalReplicationGroupIdSuffix: jsii.String(\"globalReplicationGroupIdSuffix\"),\n\tregionalConfigurations: []interface{}{\n\t\t&regionalConfigurationProperty{\n\t\t\treplicationGroupId: jsii.String(\"replicationGroupId\"),\n\t\t\treplicationGroupRegion: jsii.String(\"replicationGroupRegion\"),\n\t\t\treshardingConfigurations: []interface{}{\n\t\t\t\t&reshardingConfigurationProperty{\n\t\t\t\t\tnodeGroupId: jsii.String(\"nodeGroupId\"),\n\t\t\t\t\tpreferredAvailabilityZones: []*string{\n\t\t\t\t\t\tjsii.String(\"preferredAvailabilityZones\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnGlobalReplicationGroupProps: elasticache.CfnGlobalReplicationGroupProps = {\n  members: [{\n    replicationGroupId: 'replicationGroupId',\n    replicationGroupRegion: 'replicationGroupRegion',\n    role: 'role',\n  }],\n\n  // the properties below are optional\n  automaticFailoverEnabled: false,\n  cacheNodeType: 'cacheNodeType',\n  cacheParameterGroupName: 'cacheParameterGroupName',\n  engineVersion: 'engineVersion',\n  globalNodeGroupCount: 123,\n  globalReplicationGroupDescription: 'globalReplicationGroupDescription',\n  globalReplicationGroupIdSuffix: 'globalReplicationGroupIdSuffix',\n  regionalConfigurations: [{\n    replicationGroupId: 'replicationGroupId',\n    replicationGroupRegion: 'replicationGroupRegion',\n    reshardingConfigurations: [{\n      nodeGroupId: 'nodeGroupId',\n      preferredAvailabilityZones: ['preferredAvailabilityZones'],\n    }],\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnGlobalReplicationGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnGlobalReplicationGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnGlobalReplicationGroupProps: elasticache.CfnGlobalReplicationGroupProps = {\n  members: [{\n    replicationGroupId: 'replicationGroupId',\n    replicationGroupRegion: 'replicationGroupRegion',\n    role: 'role',\n  }],\n\n  // the properties below are optional\n  automaticFailoverEnabled: false,\n  cacheNodeType: 'cacheNodeType',\n  cacheParameterGroupName: 'cacheParameterGroupName',\n  engineVersion: 'engineVersion',\n  globalNodeGroupCount: 123,\n  globalReplicationGroupDescription: 'globalReplicationGroupDescription',\n  globalReplicationGroupIdSuffix: 'globalReplicationGroupIdSuffix',\n  regionalConfigurations: [{\n    replicationGroupId: 'replicationGroupId',\n    replicationGroupRegion: 'replicationGroupRegion',\n    reshardingConfigurations: [{\n      nodeGroupId: 'nodeGroupId',\n      preferredAvailabilityZones: ['preferredAvailabilityZones'],\n    }],\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 13,
        "75": 21,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 4,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 17,
        "290": 1
      },
      "fqnsFingerprint": "d36c16a2d85d6af3c54ae39fb08f339b6be5eb9a6312829cdd218106f49cfd13"
    },
    "f2366f6c1a9a1d7c2314617b607a037aab3691265fa205d03ab4b93d084ed172": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_parameter_group = elasticache.CfnParameterGroup(self, \"MyCfnParameterGroup\",\n    cache_parameter_group_family=\"cacheParameterGroupFamily\",\n    description=\"description\",\n\n    # the properties below are optional\n    properties={\n        \"properties_key\": \"properties\"\n    },\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnParameterGroup cfnParameterGroup = new CfnParameterGroup(this, \"MyCfnParameterGroup\", new CfnParameterGroupProps {\n    CacheParameterGroupFamily = \"cacheParameterGroupFamily\",\n    Description = \"description\",\n\n    // the properties below are optional\n    Properties = new Dictionary<string, string> {\n        { \"propertiesKey\", \"properties\" }\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnParameterGroup cfnParameterGroup = CfnParameterGroup.Builder.create(this, \"MyCfnParameterGroup\")\n        .cacheParameterGroupFamily(\"cacheParameterGroupFamily\")\n        .description(\"description\")\n\n        // the properties below are optional\n        .properties(Map.of(\n                \"propertiesKey\", \"properties\"))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnParameterGroup := elasticache.NewCfnParameterGroup(this, jsii.String(\"MyCfnParameterGroup\"), &cfnParameterGroupProps{\n\tcacheParameterGroupFamily: jsii.String(\"cacheParameterGroupFamily\"),\n\tdescription: jsii.String(\"description\"),\n\n\t// the properties below are optional\n\tproperties: map[string]*string{\n\t\t\"propertiesKey\": jsii.String(\"properties\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnParameterGroup = new elasticache.CfnParameterGroup(this, 'MyCfnParameterGroup', {\n  cacheParameterGroupFamily: 'cacheParameterGroupFamily',\n  description: 'description',\n\n  // the properties below are optional\n  properties: {\n    propertiesKey: 'properties',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnParameterGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnParameterGroup",
        "@aws-cdk/aws-elasticache.CfnParameterGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnParameterGroup = new elasticache.CfnParameterGroup(this, 'MyCfnParameterGroup', {\n  cacheParameterGroupFamily: 'cacheParameterGroupFamily',\n  description: 'description',\n\n  // the properties below are optional\n  properties: {\n    propertiesKey: 'properties',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 11,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "8097a53a5275ca79655d16854449a332352148174863224be43f0bcc1a3784c2"
    },
    "bfc61c6bf21809db7cfa9450f35e13178ada373d14cc01606e8e1df6ee240770": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_parameter_group_props = elasticache.CfnParameterGroupProps(\n    cache_parameter_group_family=\"cacheParameterGroupFamily\",\n    description=\"description\",\n\n    # the properties below are optional\n    properties={\n        \"properties_key\": \"properties\"\n    },\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnParameterGroupProps cfnParameterGroupProps = new CfnParameterGroupProps {\n    CacheParameterGroupFamily = \"cacheParameterGroupFamily\",\n    Description = \"description\",\n\n    // the properties below are optional\n    Properties = new Dictionary<string, string> {\n        { \"propertiesKey\", \"properties\" }\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnParameterGroupProps cfnParameterGroupProps = CfnParameterGroupProps.builder()\n        .cacheParameterGroupFamily(\"cacheParameterGroupFamily\")\n        .description(\"description\")\n\n        // the properties below are optional\n        .properties(Map.of(\n                \"propertiesKey\", \"properties\"))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnParameterGroupProps := &cfnParameterGroupProps{\n\tcacheParameterGroupFamily: jsii.String(\"cacheParameterGroupFamily\"),\n\tdescription: jsii.String(\"description\"),\n\n\t// the properties below are optional\n\tproperties: map[string]*string{\n\t\t\"propertiesKey\": jsii.String(\"properties\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnParameterGroupProps: elasticache.CfnParameterGroupProps = {\n  cacheParameterGroupFamily: 'cacheParameterGroupFamily',\n  description: 'description',\n\n  // the properties below are optional\n  properties: {\n    propertiesKey: 'properties',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnParameterGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnParameterGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnParameterGroupProps: elasticache.CfnParameterGroupProps = {\n  cacheParameterGroupFamily: 'cacheParameterGroupFamily',\n  description: 'description',\n\n  // the properties below are optional\n  properties: {\n    propertiesKey: 'properties',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 11,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "a063420fa9ff63ed96138c49c6b26419e50e7819ab368028dbde5dfc74846fd8"
    },
    "ea1b4567f8da16a31db0ad69a72223f49c12f8f0c977b077ee1368dba4b4a306": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_replication_group = elasticache.CfnReplicationGroup(self, \"MyCfnReplicationGroup\",\n    replication_group_description=\"replicationGroupDescription\",\n\n    # the properties below are optional\n    at_rest_encryption_enabled=False,\n    auth_token=\"authToken\",\n    automatic_failover_enabled=False,\n    auto_minor_version_upgrade=False,\n    cache_node_type=\"cacheNodeType\",\n    cache_parameter_group_name=\"cacheParameterGroupName\",\n    cache_security_group_names=[\"cacheSecurityGroupNames\"],\n    cache_subnet_group_name=\"cacheSubnetGroupName\",\n    data_tiering_enabled=False,\n    engine=\"engine\",\n    engine_version=\"engineVersion\",\n    global_replication_group_id=\"globalReplicationGroupId\",\n    kms_key_id=\"kmsKeyId\",\n    log_delivery_configurations=[elasticache.CfnReplicationGroup.LogDeliveryConfigurationRequestProperty(\n        destination_details=elasticache.CfnReplicationGroup.DestinationDetailsProperty(\n            cloud_watch_logs_details=elasticache.CfnReplicationGroup.CloudWatchLogsDestinationDetailsProperty(\n                log_group=\"logGroup\"\n            ),\n            kinesis_firehose_details=elasticache.CfnReplicationGroup.KinesisFirehoseDestinationDetailsProperty(\n                delivery_stream=\"deliveryStream\"\n            )\n        ),\n        destination_type=\"destinationType\",\n        log_format=\"logFormat\",\n        log_type=\"logType\"\n    )],\n    multi_az_enabled=False,\n    node_group_configuration=[elasticache.CfnReplicationGroup.NodeGroupConfigurationProperty(\n        node_group_id=\"nodeGroupId\",\n        primary_availability_zone=\"primaryAvailabilityZone\",\n        replica_availability_zones=[\"replicaAvailabilityZones\"],\n        replica_count=123,\n        slots=\"slots\"\n    )],\n    notification_topic_arn=\"notificationTopicArn\",\n    num_cache_clusters=123,\n    num_node_groups=123,\n    port=123,\n    preferred_cache_cluster_aZs=[\"preferredCacheClusterAZs\"],\n    preferred_maintenance_window=\"preferredMaintenanceWindow\",\n    primary_cluster_id=\"primaryClusterId\",\n    replicas_per_node_group=123,\n    replication_group_id=\"replicationGroupId\",\n    security_group_ids=[\"securityGroupIds\"],\n    snapshot_arns=[\"snapshotArns\"],\n    snapshot_name=\"snapshotName\",\n    snapshot_retention_limit=123,\n    snapshotting_cluster_id=\"snapshottingClusterId\",\n    snapshot_window=\"snapshotWindow\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    transit_encryption_enabled=False,\n    user_group_ids=[\"userGroupIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnReplicationGroup cfnReplicationGroup = new CfnReplicationGroup(this, \"MyCfnReplicationGroup\", new CfnReplicationGroupProps {\n    ReplicationGroupDescription = \"replicationGroupDescription\",\n\n    // the properties below are optional\n    AtRestEncryptionEnabled = false,\n    AuthToken = \"authToken\",\n    AutomaticFailoverEnabled = false,\n    AutoMinorVersionUpgrade = false,\n    CacheNodeType = \"cacheNodeType\",\n    CacheParameterGroupName = \"cacheParameterGroupName\",\n    CacheSecurityGroupNames = new [] { \"cacheSecurityGroupNames\" },\n    CacheSubnetGroupName = \"cacheSubnetGroupName\",\n    DataTieringEnabled = false,\n    Engine = \"engine\",\n    EngineVersion = \"engineVersion\",\n    GlobalReplicationGroupId = \"globalReplicationGroupId\",\n    KmsKeyId = \"kmsKeyId\",\n    LogDeliveryConfigurations = new [] { new LogDeliveryConfigurationRequestProperty {\n        DestinationDetails = new DestinationDetailsProperty {\n            CloudWatchLogsDetails = new CloudWatchLogsDestinationDetailsProperty {\n                LogGroup = \"logGroup\"\n            },\n            KinesisFirehoseDetails = new KinesisFirehoseDestinationDetailsProperty {\n                DeliveryStream = \"deliveryStream\"\n            }\n        },\n        DestinationType = \"destinationType\",\n        LogFormat = \"logFormat\",\n        LogType = \"logType\"\n    } },\n    MultiAzEnabled = false,\n    NodeGroupConfiguration = new [] { new NodeGroupConfigurationProperty {\n        NodeGroupId = \"nodeGroupId\",\n        PrimaryAvailabilityZone = \"primaryAvailabilityZone\",\n        ReplicaAvailabilityZones = new [] { \"replicaAvailabilityZones\" },\n        ReplicaCount = 123,\n        Slots = \"slots\"\n    } },\n    NotificationTopicArn = \"notificationTopicArn\",\n    NumCacheClusters = 123,\n    NumNodeGroups = 123,\n    Port = 123,\n    PreferredCacheClusterAZs = new [] { \"preferredCacheClusterAZs\" },\n    PreferredMaintenanceWindow = \"preferredMaintenanceWindow\",\n    PrimaryClusterId = \"primaryClusterId\",\n    ReplicasPerNodeGroup = 123,\n    ReplicationGroupId = \"replicationGroupId\",\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    SnapshotArns = new [] { \"snapshotArns\" },\n    SnapshotName = \"snapshotName\",\n    SnapshotRetentionLimit = 123,\n    SnapshottingClusterId = \"snapshottingClusterId\",\n    SnapshotWindow = \"snapshotWindow\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TransitEncryptionEnabled = false,\n    UserGroupIds = new [] { \"userGroupIds\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnReplicationGroup cfnReplicationGroup = CfnReplicationGroup.Builder.create(this, \"MyCfnReplicationGroup\")\n        .replicationGroupDescription(\"replicationGroupDescription\")\n\n        // the properties below are optional\n        .atRestEncryptionEnabled(false)\n        .authToken(\"authToken\")\n        .automaticFailoverEnabled(false)\n        .autoMinorVersionUpgrade(false)\n        .cacheNodeType(\"cacheNodeType\")\n        .cacheParameterGroupName(\"cacheParameterGroupName\")\n        .cacheSecurityGroupNames(List.of(\"cacheSecurityGroupNames\"))\n        .cacheSubnetGroupName(\"cacheSubnetGroupName\")\n        .dataTieringEnabled(false)\n        .engine(\"engine\")\n        .engineVersion(\"engineVersion\")\n        .globalReplicationGroupId(\"globalReplicationGroupId\")\n        .kmsKeyId(\"kmsKeyId\")\n        .logDeliveryConfigurations(List.of(LogDeliveryConfigurationRequestProperty.builder()\n                .destinationDetails(DestinationDetailsProperty.builder()\n                        .cloudWatchLogsDetails(CloudWatchLogsDestinationDetailsProperty.builder()\n                                .logGroup(\"logGroup\")\n                                .build())\n                        .kinesisFirehoseDetails(KinesisFirehoseDestinationDetailsProperty.builder()\n                                .deliveryStream(\"deliveryStream\")\n                                .build())\n                        .build())\n                .destinationType(\"destinationType\")\n                .logFormat(\"logFormat\")\n                .logType(\"logType\")\n                .build()))\n        .multiAzEnabled(false)\n        .nodeGroupConfiguration(List.of(NodeGroupConfigurationProperty.builder()\n                .nodeGroupId(\"nodeGroupId\")\n                .primaryAvailabilityZone(\"primaryAvailabilityZone\")\n                .replicaAvailabilityZones(List.of(\"replicaAvailabilityZones\"))\n                .replicaCount(123)\n                .slots(\"slots\")\n                .build()))\n        .notificationTopicArn(\"notificationTopicArn\")\n        .numCacheClusters(123)\n        .numNodeGroups(123)\n        .port(123)\n        .preferredCacheClusterAZs(List.of(\"preferredCacheClusterAZs\"))\n        .preferredMaintenanceWindow(\"preferredMaintenanceWindow\")\n        .primaryClusterId(\"primaryClusterId\")\n        .replicasPerNodeGroup(123)\n        .replicationGroupId(\"replicationGroupId\")\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .snapshotArns(List.of(\"snapshotArns\"))\n        .snapshotName(\"snapshotName\")\n        .snapshotRetentionLimit(123)\n        .snapshottingClusterId(\"snapshottingClusterId\")\n        .snapshotWindow(\"snapshotWindow\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .transitEncryptionEnabled(false)\n        .userGroupIds(List.of(\"userGroupIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnReplicationGroup := elasticache.NewCfnReplicationGroup(this, jsii.String(\"MyCfnReplicationGroup\"), &cfnReplicationGroupProps{\n\treplicationGroupDescription: jsii.String(\"replicationGroupDescription\"),\n\n\t// the properties below are optional\n\tatRestEncryptionEnabled: jsii.Boolean(false),\n\tauthToken: jsii.String(\"authToken\"),\n\tautomaticFailoverEnabled: jsii.Boolean(false),\n\tautoMinorVersionUpgrade: jsii.Boolean(false),\n\tcacheNodeType: jsii.String(\"cacheNodeType\"),\n\tcacheParameterGroupName: jsii.String(\"cacheParameterGroupName\"),\n\tcacheSecurityGroupNames: []*string{\n\t\tjsii.String(\"cacheSecurityGroupNames\"),\n\t},\n\tcacheSubnetGroupName: jsii.String(\"cacheSubnetGroupName\"),\n\tdataTieringEnabled: jsii.Boolean(false),\n\tengine: jsii.String(\"engine\"),\n\tengineVersion: jsii.String(\"engineVersion\"),\n\tglobalReplicationGroupId: jsii.String(\"globalReplicationGroupId\"),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\tlogDeliveryConfigurations: []interface{}{\n\t\t&logDeliveryConfigurationRequestProperty{\n\t\t\tdestinationDetails: &destinationDetailsProperty{\n\t\t\t\tcloudWatchLogsDetails: &cloudWatchLogsDestinationDetailsProperty{\n\t\t\t\t\tlogGroup: jsii.String(\"logGroup\"),\n\t\t\t\t},\n\t\t\t\tkinesisFirehoseDetails: &kinesisFirehoseDestinationDetailsProperty{\n\t\t\t\t\tdeliveryStream: jsii.String(\"deliveryStream\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tdestinationType: jsii.String(\"destinationType\"),\n\t\t\tlogFormat: jsii.String(\"logFormat\"),\n\t\t\tlogType: jsii.String(\"logType\"),\n\t\t},\n\t},\n\tmultiAzEnabled: jsii.Boolean(false),\n\tnodeGroupConfiguration: []interface{}{\n\t\t&nodeGroupConfigurationProperty{\n\t\t\tnodeGroupId: jsii.String(\"nodeGroupId\"),\n\t\t\tprimaryAvailabilityZone: jsii.String(\"primaryAvailabilityZone\"),\n\t\t\treplicaAvailabilityZones: []*string{\n\t\t\t\tjsii.String(\"replicaAvailabilityZones\"),\n\t\t\t},\n\t\t\treplicaCount: jsii.Number(123),\n\t\t\tslots: jsii.String(\"slots\"),\n\t\t},\n\t},\n\tnotificationTopicArn: jsii.String(\"notificationTopicArn\"),\n\tnumCacheClusters: jsii.Number(123),\n\tnumNodeGroups: jsii.Number(123),\n\tport: jsii.Number(123),\n\tpreferredCacheClusterAZs: []*string{\n\t\tjsii.String(\"preferredCacheClusterAZs\"),\n\t},\n\tpreferredMaintenanceWindow: jsii.String(\"preferredMaintenanceWindow\"),\n\tprimaryClusterId: jsii.String(\"primaryClusterId\"),\n\treplicasPerNodeGroup: jsii.Number(123),\n\treplicationGroupId: jsii.String(\"replicationGroupId\"),\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsnapshotArns: []*string{\n\t\tjsii.String(\"snapshotArns\"),\n\t},\n\tsnapshotName: jsii.String(\"snapshotName\"),\n\tsnapshotRetentionLimit: jsii.Number(123),\n\tsnapshottingClusterId: jsii.String(\"snapshottingClusterId\"),\n\tsnapshotWindow: jsii.String(\"snapshotWindow\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttransitEncryptionEnabled: jsii.Boolean(false),\n\tuserGroupIds: []*string{\n\t\tjsii.String(\"userGroupIds\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnReplicationGroup = new elasticache.CfnReplicationGroup(this, 'MyCfnReplicationGroup', {\n  replicationGroupDescription: 'replicationGroupDescription',\n\n  // the properties below are optional\n  atRestEncryptionEnabled: false,\n  authToken: 'authToken',\n  automaticFailoverEnabled: false,\n  autoMinorVersionUpgrade: false,\n  cacheNodeType: 'cacheNodeType',\n  cacheParameterGroupName: 'cacheParameterGroupName',\n  cacheSecurityGroupNames: ['cacheSecurityGroupNames'],\n  cacheSubnetGroupName: 'cacheSubnetGroupName',\n  dataTieringEnabled: false,\n  engine: 'engine',\n  engineVersion: 'engineVersion',\n  globalReplicationGroupId: 'globalReplicationGroupId',\n  kmsKeyId: 'kmsKeyId',\n  logDeliveryConfigurations: [{\n    destinationDetails: {\n      cloudWatchLogsDetails: {\n        logGroup: 'logGroup',\n      },\n      kinesisFirehoseDetails: {\n        deliveryStream: 'deliveryStream',\n      },\n    },\n    destinationType: 'destinationType',\n    logFormat: 'logFormat',\n    logType: 'logType',\n  }],\n  multiAzEnabled: false,\n  nodeGroupConfiguration: [{\n    nodeGroupId: 'nodeGroupId',\n    primaryAvailabilityZone: 'primaryAvailabilityZone',\n    replicaAvailabilityZones: ['replicaAvailabilityZones'],\n    replicaCount: 123,\n    slots: 'slots',\n  }],\n  notificationTopicArn: 'notificationTopicArn',\n  numCacheClusters: 123,\n  numNodeGroups: 123,\n  port: 123,\n  preferredCacheClusterAZs: ['preferredCacheClusterAZs'],\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  primaryClusterId: 'primaryClusterId',\n  replicasPerNodeGroup: 123,\n  replicationGroupId: 'replicationGroupId',\n  securityGroupIds: ['securityGroupIds'],\n  snapshotArns: ['snapshotArns'],\n  snapshotName: 'snapshotName',\n  snapshotRetentionLimit: 123,\n  snapshottingClusterId: 'snapshottingClusterId',\n  snapshotWindow: 'snapshotWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitEncryptionEnabled: false,\n  userGroupIds: ['userGroupIds'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnReplicationGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnReplicationGroup",
        "@aws-cdk/aws-elasticache.CfnReplicationGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnReplicationGroup = new elasticache.CfnReplicationGroup(this, 'MyCfnReplicationGroup', {\n  replicationGroupDescription: 'replicationGroupDescription',\n\n  // the properties below are optional\n  atRestEncryptionEnabled: false,\n  authToken: 'authToken',\n  automaticFailoverEnabled: false,\n  autoMinorVersionUpgrade: false,\n  cacheNodeType: 'cacheNodeType',\n  cacheParameterGroupName: 'cacheParameterGroupName',\n  cacheSecurityGroupNames: ['cacheSecurityGroupNames'],\n  cacheSubnetGroupName: 'cacheSubnetGroupName',\n  dataTieringEnabled: false,\n  engine: 'engine',\n  engineVersion: 'engineVersion',\n  globalReplicationGroupId: 'globalReplicationGroupId',\n  kmsKeyId: 'kmsKeyId',\n  logDeliveryConfigurations: [{\n    destinationDetails: {\n      cloudWatchLogsDetails: {\n        logGroup: 'logGroup',\n      },\n      kinesisFirehoseDetails: {\n        deliveryStream: 'deliveryStream',\n      },\n    },\n    destinationType: 'destinationType',\n    logFormat: 'logFormat',\n    logType: 'logType',\n  }],\n  multiAzEnabled: false,\n  nodeGroupConfiguration: [{\n    nodeGroupId: 'nodeGroupId',\n    primaryAvailabilityZone: 'primaryAvailabilityZone',\n    replicaAvailabilityZones: ['replicaAvailabilityZones'],\n    replicaCount: 123,\n    slots: 'slots',\n  }],\n  notificationTopicArn: 'notificationTopicArn',\n  numCacheClusters: 123,\n  numNodeGroups: 123,\n  port: 123,\n  preferredCacheClusterAZs: ['preferredCacheClusterAZs'],\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  primaryClusterId: 'primaryClusterId',\n  replicasPerNodeGroup: 123,\n  replicationGroupId: 'replicationGroupId',\n  securityGroupIds: ['securityGroupIds'],\n  snapshotArns: ['snapshotArns'],\n  snapshotName: 'snapshotName',\n  snapshotRetentionLimit: 123,\n  snapshottingClusterId: 'snapshottingClusterId',\n  snapshotWindow: 'snapshotWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitEncryptionEnabled: false,\n  userGroupIds: ['userGroupIds'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 34,
        "75": 54,
        "91": 6,
        "104": 1,
        "192": 9,
        "193": 7,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 50,
        "290": 1
      },
      "fqnsFingerprint": "6de2a702204e432ad52d591f81bbc20dc2fe1f61d8bbeda9aeab30f80bc856fc"
    },
    "a4d141bb98f132a61c2f6821e656de326da343c89c75dff819e7b2df32dae435": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncloud_watch_logs_destination_details_property = elasticache.CfnReplicationGroup.CloudWatchLogsDestinationDetailsProperty(\n    log_group=\"logGroup\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCloudWatchLogsDestinationDetailsProperty cloudWatchLogsDestinationDetailsProperty = new CloudWatchLogsDestinationDetailsProperty {\n    LogGroup = \"logGroup\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCloudWatchLogsDestinationDetailsProperty cloudWatchLogsDestinationDetailsProperty = CloudWatchLogsDestinationDetailsProperty.builder()\n        .logGroup(\"logGroup\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncloudWatchLogsDestinationDetailsProperty := &cloudWatchLogsDestinationDetailsProperty{\n\tlogGroup: jsii.String(\"logGroup\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cloudWatchLogsDestinationDetailsProperty: elasticache.CfnReplicationGroup.CloudWatchLogsDestinationDetailsProperty = {\n  logGroup: 'logGroup',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnReplicationGroup.CloudWatchLogsDestinationDetailsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnReplicationGroup.CloudWatchLogsDestinationDetailsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cloudWatchLogsDestinationDetailsProperty: elasticache.CfnReplicationGroup.CloudWatchLogsDestinationDetailsProperty = {\n  logGroup: 'logGroup',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "8826b8a2fb421931199f3225e3cd7ac7b3827042fbb71504595d98928a857335"
    },
    "bdacc1902f0d83fe766abc35830d633a29ce810655b97305637e1b539a2043c4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ndestination_details_property = elasticache.CfnReplicationGroup.DestinationDetailsProperty(\n    cloud_watch_logs_details=elasticache.CfnReplicationGroup.CloudWatchLogsDestinationDetailsProperty(\n        log_group=\"logGroup\"\n    ),\n    kinesis_firehose_details=elasticache.CfnReplicationGroup.KinesisFirehoseDestinationDetailsProperty(\n        delivery_stream=\"deliveryStream\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nDestinationDetailsProperty destinationDetailsProperty = new DestinationDetailsProperty {\n    CloudWatchLogsDetails = new CloudWatchLogsDestinationDetailsProperty {\n        LogGroup = \"logGroup\"\n    },\n    KinesisFirehoseDetails = new KinesisFirehoseDestinationDetailsProperty {\n        DeliveryStream = \"deliveryStream\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nDestinationDetailsProperty destinationDetailsProperty = DestinationDetailsProperty.builder()\n        .cloudWatchLogsDetails(CloudWatchLogsDestinationDetailsProperty.builder()\n                .logGroup(\"logGroup\")\n                .build())\n        .kinesisFirehoseDetails(KinesisFirehoseDestinationDetailsProperty.builder()\n                .deliveryStream(\"deliveryStream\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ndestinationDetailsProperty := &destinationDetailsProperty{\n\tcloudWatchLogsDetails: &cloudWatchLogsDestinationDetailsProperty{\n\t\tlogGroup: jsii.String(\"logGroup\"),\n\t},\n\tkinesisFirehoseDetails: &kinesisFirehoseDestinationDetailsProperty{\n\t\tdeliveryStream: jsii.String(\"deliveryStream\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst destinationDetailsProperty: elasticache.CfnReplicationGroup.DestinationDetailsProperty = {\n  cloudWatchLogsDetails: {\n    logGroup: 'logGroup',\n  },\n  kinesisFirehoseDetails: {\n    deliveryStream: 'deliveryStream',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnReplicationGroup.DestinationDetailsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnReplicationGroup.DestinationDetailsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst destinationDetailsProperty: elasticache.CfnReplicationGroup.DestinationDetailsProperty = {\n  cloudWatchLogsDetails: {\n    logGroup: 'logGroup',\n  },\n  kinesisFirehoseDetails: {\n    deliveryStream: 'deliveryStream',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "59fc6f0ad97339ee3c91b539494babecc49dbb3fc882b1cb7bee4799b778a82c"
    },
    "7893c8516247c716f000c1f35c5947e6e32293fd0e128c80db8ca3164a84e1f6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\nkinesis_firehose_destination_details_property = elasticache.CfnReplicationGroup.KinesisFirehoseDestinationDetailsProperty(\n    delivery_stream=\"deliveryStream\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nKinesisFirehoseDestinationDetailsProperty kinesisFirehoseDestinationDetailsProperty = new KinesisFirehoseDestinationDetailsProperty {\n    DeliveryStream = \"deliveryStream\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nKinesisFirehoseDestinationDetailsProperty kinesisFirehoseDestinationDetailsProperty = KinesisFirehoseDestinationDetailsProperty.builder()\n        .deliveryStream(\"deliveryStream\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\nkinesisFirehoseDestinationDetailsProperty := &kinesisFirehoseDestinationDetailsProperty{\n\tdeliveryStream: jsii.String(\"deliveryStream\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst kinesisFirehoseDestinationDetailsProperty: elasticache.CfnReplicationGroup.KinesisFirehoseDestinationDetailsProperty = {\n  deliveryStream: 'deliveryStream',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnReplicationGroup.KinesisFirehoseDestinationDetailsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnReplicationGroup.KinesisFirehoseDestinationDetailsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisFirehoseDestinationDetailsProperty: elasticache.CfnReplicationGroup.KinesisFirehoseDestinationDetailsProperty = {\n  deliveryStream: 'deliveryStream',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "06f94198cb2d2ba8f08d5d59c318e2d4e3616166afd541e7f4e5c39b0b630cad"
    },
    "85d5af20a54763c44261eb05fe3b63f7fa107a01d5ae8727289e07905210af51": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\nlog_delivery_configuration_request_property = elasticache.CfnReplicationGroup.LogDeliveryConfigurationRequestProperty(\n    destination_details=elasticache.CfnReplicationGroup.DestinationDetailsProperty(\n        cloud_watch_logs_details=elasticache.CfnReplicationGroup.CloudWatchLogsDestinationDetailsProperty(\n            log_group=\"logGroup\"\n        ),\n        kinesis_firehose_details=elasticache.CfnReplicationGroup.KinesisFirehoseDestinationDetailsProperty(\n            delivery_stream=\"deliveryStream\"\n        )\n    ),\n    destination_type=\"destinationType\",\n    log_format=\"logFormat\",\n    log_type=\"logType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nLogDeliveryConfigurationRequestProperty logDeliveryConfigurationRequestProperty = new LogDeliveryConfigurationRequestProperty {\n    DestinationDetails = new DestinationDetailsProperty {\n        CloudWatchLogsDetails = new CloudWatchLogsDestinationDetailsProperty {\n            LogGroup = \"logGroup\"\n        },\n        KinesisFirehoseDetails = new KinesisFirehoseDestinationDetailsProperty {\n            DeliveryStream = \"deliveryStream\"\n        }\n    },\n    DestinationType = \"destinationType\",\n    LogFormat = \"logFormat\",\n    LogType = \"logType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nLogDeliveryConfigurationRequestProperty logDeliveryConfigurationRequestProperty = LogDeliveryConfigurationRequestProperty.builder()\n        .destinationDetails(DestinationDetailsProperty.builder()\n                .cloudWatchLogsDetails(CloudWatchLogsDestinationDetailsProperty.builder()\n                        .logGroup(\"logGroup\")\n                        .build())\n                .kinesisFirehoseDetails(KinesisFirehoseDestinationDetailsProperty.builder()\n                        .deliveryStream(\"deliveryStream\")\n                        .build())\n                .build())\n        .destinationType(\"destinationType\")\n        .logFormat(\"logFormat\")\n        .logType(\"logType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\nlogDeliveryConfigurationRequestProperty := &logDeliveryConfigurationRequestProperty{\n\tdestinationDetails: &destinationDetailsProperty{\n\t\tcloudWatchLogsDetails: &cloudWatchLogsDestinationDetailsProperty{\n\t\t\tlogGroup: jsii.String(\"logGroup\"),\n\t\t},\n\t\tkinesisFirehoseDetails: &kinesisFirehoseDestinationDetailsProperty{\n\t\t\tdeliveryStream: jsii.String(\"deliveryStream\"),\n\t\t},\n\t},\n\tdestinationType: jsii.String(\"destinationType\"),\n\tlogFormat: jsii.String(\"logFormat\"),\n\tlogType: jsii.String(\"logType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst logDeliveryConfigurationRequestProperty: elasticache.CfnReplicationGroup.LogDeliveryConfigurationRequestProperty = {\n  destinationDetails: {\n    cloudWatchLogsDetails: {\n      logGroup: 'logGroup',\n    },\n    kinesisFirehoseDetails: {\n      deliveryStream: 'deliveryStream',\n    },\n  },\n  destinationType: 'destinationType',\n  logFormat: 'logFormat',\n  logType: 'logType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnReplicationGroup.LogDeliveryConfigurationRequestProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnReplicationGroup.LogDeliveryConfigurationRequestProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst logDeliveryConfigurationRequestProperty: elasticache.CfnReplicationGroup.LogDeliveryConfigurationRequestProperty = {\n  destinationDetails: {\n    cloudWatchLogsDetails: {\n      logGroup: 'logGroup',\n    },\n    kinesisFirehoseDetails: {\n      deliveryStream: 'deliveryStream',\n    },\n  },\n  destinationType: 'destinationType',\n  logFormat: 'logFormat',\n  logType: 'logType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 13,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "93a67bbb94acdc027868c074101f835cce1e56d0d957052406a2c0192ef54777"
    },
    "6419a2c20ba4e5f0cab794dc1b011292fd031e81f86205f8c866a72591d8ece3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\nnode_group_configuration_property = elasticache.CfnReplicationGroup.NodeGroupConfigurationProperty(\n    node_group_id=\"nodeGroupId\",\n    primary_availability_zone=\"primaryAvailabilityZone\",\n    replica_availability_zones=[\"replicaAvailabilityZones\"],\n    replica_count=123,\n    slots=\"slots\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nNodeGroupConfigurationProperty nodeGroupConfigurationProperty = new NodeGroupConfigurationProperty {\n    NodeGroupId = \"nodeGroupId\",\n    PrimaryAvailabilityZone = \"primaryAvailabilityZone\",\n    ReplicaAvailabilityZones = new [] { \"replicaAvailabilityZones\" },\n    ReplicaCount = 123,\n    Slots = \"slots\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nNodeGroupConfigurationProperty nodeGroupConfigurationProperty = NodeGroupConfigurationProperty.builder()\n        .nodeGroupId(\"nodeGroupId\")\n        .primaryAvailabilityZone(\"primaryAvailabilityZone\")\n        .replicaAvailabilityZones(List.of(\"replicaAvailabilityZones\"))\n        .replicaCount(123)\n        .slots(\"slots\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\nnodeGroupConfigurationProperty := &nodeGroupConfigurationProperty{\n\tnodeGroupId: jsii.String(\"nodeGroupId\"),\n\tprimaryAvailabilityZone: jsii.String(\"primaryAvailabilityZone\"),\n\treplicaAvailabilityZones: []*string{\n\t\tjsii.String(\"replicaAvailabilityZones\"),\n\t},\n\treplicaCount: jsii.Number(123),\n\tslots: jsii.String(\"slots\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst nodeGroupConfigurationProperty: elasticache.CfnReplicationGroup.NodeGroupConfigurationProperty = {\n  nodeGroupId: 'nodeGroupId',\n  primaryAvailabilityZone: 'primaryAvailabilityZone',\n  replicaAvailabilityZones: ['replicaAvailabilityZones'],\n  replicaCount: 123,\n  slots: 'slots',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnReplicationGroup.NodeGroupConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnReplicationGroup.NodeGroupConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst nodeGroupConfigurationProperty: elasticache.CfnReplicationGroup.NodeGroupConfigurationProperty = {\n  nodeGroupId: 'nodeGroupId',\n  primaryAvailabilityZone: 'primaryAvailabilityZone',\n  replicaAvailabilityZones: ['replicaAvailabilityZones'],\n  replicaCount: 123,\n  slots: 'slots',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 10,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "a976be3188e7787244c239b74d5dd067f59c0ba78dc280d8a61b7eee35ca2cd9"
    },
    "1c42f0aae8bf6d3595740a3a23e66a4b569e20ca620d25371e6e9764de5234de": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_replication_group_props = elasticache.CfnReplicationGroupProps(\n    replication_group_description=\"replicationGroupDescription\",\n\n    # the properties below are optional\n    at_rest_encryption_enabled=False,\n    auth_token=\"authToken\",\n    automatic_failover_enabled=False,\n    auto_minor_version_upgrade=False,\n    cache_node_type=\"cacheNodeType\",\n    cache_parameter_group_name=\"cacheParameterGroupName\",\n    cache_security_group_names=[\"cacheSecurityGroupNames\"],\n    cache_subnet_group_name=\"cacheSubnetGroupName\",\n    data_tiering_enabled=False,\n    engine=\"engine\",\n    engine_version=\"engineVersion\",\n    global_replication_group_id=\"globalReplicationGroupId\",\n    kms_key_id=\"kmsKeyId\",\n    log_delivery_configurations=[elasticache.CfnReplicationGroup.LogDeliveryConfigurationRequestProperty(\n        destination_details=elasticache.CfnReplicationGroup.DestinationDetailsProperty(\n            cloud_watch_logs_details=elasticache.CfnReplicationGroup.CloudWatchLogsDestinationDetailsProperty(\n                log_group=\"logGroup\"\n            ),\n            kinesis_firehose_details=elasticache.CfnReplicationGroup.KinesisFirehoseDestinationDetailsProperty(\n                delivery_stream=\"deliveryStream\"\n            )\n        ),\n        destination_type=\"destinationType\",\n        log_format=\"logFormat\",\n        log_type=\"logType\"\n    )],\n    multi_az_enabled=False,\n    node_group_configuration=[elasticache.CfnReplicationGroup.NodeGroupConfigurationProperty(\n        node_group_id=\"nodeGroupId\",\n        primary_availability_zone=\"primaryAvailabilityZone\",\n        replica_availability_zones=[\"replicaAvailabilityZones\"],\n        replica_count=123,\n        slots=\"slots\"\n    )],\n    notification_topic_arn=\"notificationTopicArn\",\n    num_cache_clusters=123,\n    num_node_groups=123,\n    port=123,\n    preferred_cache_cluster_aZs=[\"preferredCacheClusterAZs\"],\n    preferred_maintenance_window=\"preferredMaintenanceWindow\",\n    primary_cluster_id=\"primaryClusterId\",\n    replicas_per_node_group=123,\n    replication_group_id=\"replicationGroupId\",\n    security_group_ids=[\"securityGroupIds\"],\n    snapshot_arns=[\"snapshotArns\"],\n    snapshot_name=\"snapshotName\",\n    snapshot_retention_limit=123,\n    snapshotting_cluster_id=\"snapshottingClusterId\",\n    snapshot_window=\"snapshotWindow\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    transit_encryption_enabled=False,\n    user_group_ids=[\"userGroupIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnReplicationGroupProps cfnReplicationGroupProps = new CfnReplicationGroupProps {\n    ReplicationGroupDescription = \"replicationGroupDescription\",\n\n    // the properties below are optional\n    AtRestEncryptionEnabled = false,\n    AuthToken = \"authToken\",\n    AutomaticFailoverEnabled = false,\n    AutoMinorVersionUpgrade = false,\n    CacheNodeType = \"cacheNodeType\",\n    CacheParameterGroupName = \"cacheParameterGroupName\",\n    CacheSecurityGroupNames = new [] { \"cacheSecurityGroupNames\" },\n    CacheSubnetGroupName = \"cacheSubnetGroupName\",\n    DataTieringEnabled = false,\n    Engine = \"engine\",\n    EngineVersion = \"engineVersion\",\n    GlobalReplicationGroupId = \"globalReplicationGroupId\",\n    KmsKeyId = \"kmsKeyId\",\n    LogDeliveryConfigurations = new [] { new LogDeliveryConfigurationRequestProperty {\n        DestinationDetails = new DestinationDetailsProperty {\n            CloudWatchLogsDetails = new CloudWatchLogsDestinationDetailsProperty {\n                LogGroup = \"logGroup\"\n            },\n            KinesisFirehoseDetails = new KinesisFirehoseDestinationDetailsProperty {\n                DeliveryStream = \"deliveryStream\"\n            }\n        },\n        DestinationType = \"destinationType\",\n        LogFormat = \"logFormat\",\n        LogType = \"logType\"\n    } },\n    MultiAzEnabled = false,\n    NodeGroupConfiguration = new [] { new NodeGroupConfigurationProperty {\n        NodeGroupId = \"nodeGroupId\",\n        PrimaryAvailabilityZone = \"primaryAvailabilityZone\",\n        ReplicaAvailabilityZones = new [] { \"replicaAvailabilityZones\" },\n        ReplicaCount = 123,\n        Slots = \"slots\"\n    } },\n    NotificationTopicArn = \"notificationTopicArn\",\n    NumCacheClusters = 123,\n    NumNodeGroups = 123,\n    Port = 123,\n    PreferredCacheClusterAZs = new [] { \"preferredCacheClusterAZs\" },\n    PreferredMaintenanceWindow = \"preferredMaintenanceWindow\",\n    PrimaryClusterId = \"primaryClusterId\",\n    ReplicasPerNodeGroup = 123,\n    ReplicationGroupId = \"replicationGroupId\",\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    SnapshotArns = new [] { \"snapshotArns\" },\n    SnapshotName = \"snapshotName\",\n    SnapshotRetentionLimit = 123,\n    SnapshottingClusterId = \"snapshottingClusterId\",\n    SnapshotWindow = \"snapshotWindow\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TransitEncryptionEnabled = false,\n    UserGroupIds = new [] { \"userGroupIds\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnReplicationGroupProps cfnReplicationGroupProps = CfnReplicationGroupProps.builder()\n        .replicationGroupDescription(\"replicationGroupDescription\")\n\n        // the properties below are optional\n        .atRestEncryptionEnabled(false)\n        .authToken(\"authToken\")\n        .automaticFailoverEnabled(false)\n        .autoMinorVersionUpgrade(false)\n        .cacheNodeType(\"cacheNodeType\")\n        .cacheParameterGroupName(\"cacheParameterGroupName\")\n        .cacheSecurityGroupNames(List.of(\"cacheSecurityGroupNames\"))\n        .cacheSubnetGroupName(\"cacheSubnetGroupName\")\n        .dataTieringEnabled(false)\n        .engine(\"engine\")\n        .engineVersion(\"engineVersion\")\n        .globalReplicationGroupId(\"globalReplicationGroupId\")\n        .kmsKeyId(\"kmsKeyId\")\n        .logDeliveryConfigurations(List.of(LogDeliveryConfigurationRequestProperty.builder()\n                .destinationDetails(DestinationDetailsProperty.builder()\n                        .cloudWatchLogsDetails(CloudWatchLogsDestinationDetailsProperty.builder()\n                                .logGroup(\"logGroup\")\n                                .build())\n                        .kinesisFirehoseDetails(KinesisFirehoseDestinationDetailsProperty.builder()\n                                .deliveryStream(\"deliveryStream\")\n                                .build())\n                        .build())\n                .destinationType(\"destinationType\")\n                .logFormat(\"logFormat\")\n                .logType(\"logType\")\n                .build()))\n        .multiAzEnabled(false)\n        .nodeGroupConfiguration(List.of(NodeGroupConfigurationProperty.builder()\n                .nodeGroupId(\"nodeGroupId\")\n                .primaryAvailabilityZone(\"primaryAvailabilityZone\")\n                .replicaAvailabilityZones(List.of(\"replicaAvailabilityZones\"))\n                .replicaCount(123)\n                .slots(\"slots\")\n                .build()))\n        .notificationTopicArn(\"notificationTopicArn\")\n        .numCacheClusters(123)\n        .numNodeGroups(123)\n        .port(123)\n        .preferredCacheClusterAZs(List.of(\"preferredCacheClusterAZs\"))\n        .preferredMaintenanceWindow(\"preferredMaintenanceWindow\")\n        .primaryClusterId(\"primaryClusterId\")\n        .replicasPerNodeGroup(123)\n        .replicationGroupId(\"replicationGroupId\")\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .snapshotArns(List.of(\"snapshotArns\"))\n        .snapshotName(\"snapshotName\")\n        .snapshotRetentionLimit(123)\n        .snapshottingClusterId(\"snapshottingClusterId\")\n        .snapshotWindow(\"snapshotWindow\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .transitEncryptionEnabled(false)\n        .userGroupIds(List.of(\"userGroupIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnReplicationGroupProps := &cfnReplicationGroupProps{\n\treplicationGroupDescription: jsii.String(\"replicationGroupDescription\"),\n\n\t// the properties below are optional\n\tatRestEncryptionEnabled: jsii.Boolean(false),\n\tauthToken: jsii.String(\"authToken\"),\n\tautomaticFailoverEnabled: jsii.Boolean(false),\n\tautoMinorVersionUpgrade: jsii.Boolean(false),\n\tcacheNodeType: jsii.String(\"cacheNodeType\"),\n\tcacheParameterGroupName: jsii.String(\"cacheParameterGroupName\"),\n\tcacheSecurityGroupNames: []*string{\n\t\tjsii.String(\"cacheSecurityGroupNames\"),\n\t},\n\tcacheSubnetGroupName: jsii.String(\"cacheSubnetGroupName\"),\n\tdataTieringEnabled: jsii.Boolean(false),\n\tengine: jsii.String(\"engine\"),\n\tengineVersion: jsii.String(\"engineVersion\"),\n\tglobalReplicationGroupId: jsii.String(\"globalReplicationGroupId\"),\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\tlogDeliveryConfigurations: []interface{}{\n\t\t&logDeliveryConfigurationRequestProperty{\n\t\t\tdestinationDetails: &destinationDetailsProperty{\n\t\t\t\tcloudWatchLogsDetails: &cloudWatchLogsDestinationDetailsProperty{\n\t\t\t\t\tlogGroup: jsii.String(\"logGroup\"),\n\t\t\t\t},\n\t\t\t\tkinesisFirehoseDetails: &kinesisFirehoseDestinationDetailsProperty{\n\t\t\t\t\tdeliveryStream: jsii.String(\"deliveryStream\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tdestinationType: jsii.String(\"destinationType\"),\n\t\t\tlogFormat: jsii.String(\"logFormat\"),\n\t\t\tlogType: jsii.String(\"logType\"),\n\t\t},\n\t},\n\tmultiAzEnabled: jsii.Boolean(false),\n\tnodeGroupConfiguration: []interface{}{\n\t\t&nodeGroupConfigurationProperty{\n\t\t\tnodeGroupId: jsii.String(\"nodeGroupId\"),\n\t\t\tprimaryAvailabilityZone: jsii.String(\"primaryAvailabilityZone\"),\n\t\t\treplicaAvailabilityZones: []*string{\n\t\t\t\tjsii.String(\"replicaAvailabilityZones\"),\n\t\t\t},\n\t\t\treplicaCount: jsii.Number(123),\n\t\t\tslots: jsii.String(\"slots\"),\n\t\t},\n\t},\n\tnotificationTopicArn: jsii.String(\"notificationTopicArn\"),\n\tnumCacheClusters: jsii.Number(123),\n\tnumNodeGroups: jsii.Number(123),\n\tport: jsii.Number(123),\n\tpreferredCacheClusterAZs: []*string{\n\t\tjsii.String(\"preferredCacheClusterAZs\"),\n\t},\n\tpreferredMaintenanceWindow: jsii.String(\"preferredMaintenanceWindow\"),\n\tprimaryClusterId: jsii.String(\"primaryClusterId\"),\n\treplicasPerNodeGroup: jsii.Number(123),\n\treplicationGroupId: jsii.String(\"replicationGroupId\"),\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsnapshotArns: []*string{\n\t\tjsii.String(\"snapshotArns\"),\n\t},\n\tsnapshotName: jsii.String(\"snapshotName\"),\n\tsnapshotRetentionLimit: jsii.Number(123),\n\tsnapshottingClusterId: jsii.String(\"snapshottingClusterId\"),\n\tsnapshotWindow: jsii.String(\"snapshotWindow\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttransitEncryptionEnabled: jsii.Boolean(false),\n\tuserGroupIds: []*string{\n\t\tjsii.String(\"userGroupIds\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnReplicationGroupProps: elasticache.CfnReplicationGroupProps = {\n  replicationGroupDescription: 'replicationGroupDescription',\n\n  // the properties below are optional\n  atRestEncryptionEnabled: false,\n  authToken: 'authToken',\n  automaticFailoverEnabled: false,\n  autoMinorVersionUpgrade: false,\n  cacheNodeType: 'cacheNodeType',\n  cacheParameterGroupName: 'cacheParameterGroupName',\n  cacheSecurityGroupNames: ['cacheSecurityGroupNames'],\n  cacheSubnetGroupName: 'cacheSubnetGroupName',\n  dataTieringEnabled: false,\n  engine: 'engine',\n  engineVersion: 'engineVersion',\n  globalReplicationGroupId: 'globalReplicationGroupId',\n  kmsKeyId: 'kmsKeyId',\n  logDeliveryConfigurations: [{\n    destinationDetails: {\n      cloudWatchLogsDetails: {\n        logGroup: 'logGroup',\n      },\n      kinesisFirehoseDetails: {\n        deliveryStream: 'deliveryStream',\n      },\n    },\n    destinationType: 'destinationType',\n    logFormat: 'logFormat',\n    logType: 'logType',\n  }],\n  multiAzEnabled: false,\n  nodeGroupConfiguration: [{\n    nodeGroupId: 'nodeGroupId',\n    primaryAvailabilityZone: 'primaryAvailabilityZone',\n    replicaAvailabilityZones: ['replicaAvailabilityZones'],\n    replicaCount: 123,\n    slots: 'slots',\n  }],\n  notificationTopicArn: 'notificationTopicArn',\n  numCacheClusters: 123,\n  numNodeGroups: 123,\n  port: 123,\n  preferredCacheClusterAZs: ['preferredCacheClusterAZs'],\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  primaryClusterId: 'primaryClusterId',\n  replicasPerNodeGroup: 123,\n  replicationGroupId: 'replicationGroupId',\n  securityGroupIds: ['securityGroupIds'],\n  snapshotArns: ['snapshotArns'],\n  snapshotName: 'snapshotName',\n  snapshotRetentionLimit: 123,\n  snapshottingClusterId: 'snapshottingClusterId',\n  snapshotWindow: 'snapshotWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitEncryptionEnabled: false,\n  userGroupIds: ['userGroupIds'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnReplicationGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnReplicationGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnReplicationGroupProps: elasticache.CfnReplicationGroupProps = {\n  replicationGroupDescription: 'replicationGroupDescription',\n\n  // the properties below are optional\n  atRestEncryptionEnabled: false,\n  authToken: 'authToken',\n  automaticFailoverEnabled: false,\n  autoMinorVersionUpgrade: false,\n  cacheNodeType: 'cacheNodeType',\n  cacheParameterGroupName: 'cacheParameterGroupName',\n  cacheSecurityGroupNames: ['cacheSecurityGroupNames'],\n  cacheSubnetGroupName: 'cacheSubnetGroupName',\n  dataTieringEnabled: false,\n  engine: 'engine',\n  engineVersion: 'engineVersion',\n  globalReplicationGroupId: 'globalReplicationGroupId',\n  kmsKeyId: 'kmsKeyId',\n  logDeliveryConfigurations: [{\n    destinationDetails: {\n      cloudWatchLogsDetails: {\n        logGroup: 'logGroup',\n      },\n      kinesisFirehoseDetails: {\n        deliveryStream: 'deliveryStream',\n      },\n    },\n    destinationType: 'destinationType',\n    logFormat: 'logFormat',\n    logType: 'logType',\n  }],\n  multiAzEnabled: false,\n  nodeGroupConfiguration: [{\n    nodeGroupId: 'nodeGroupId',\n    primaryAvailabilityZone: 'primaryAvailabilityZone',\n    replicaAvailabilityZones: ['replicaAvailabilityZones'],\n    replicaCount: 123,\n    slots: 'slots',\n  }],\n  notificationTopicArn: 'notificationTopicArn',\n  numCacheClusters: 123,\n  numNodeGroups: 123,\n  port: 123,\n  preferredCacheClusterAZs: ['preferredCacheClusterAZs'],\n  preferredMaintenanceWindow: 'preferredMaintenanceWindow',\n  primaryClusterId: 'primaryClusterId',\n  replicasPerNodeGroup: 123,\n  replicationGroupId: 'replicationGroupId',\n  securityGroupIds: ['securityGroupIds'],\n  snapshotArns: ['snapshotArns'],\n  snapshotName: 'snapshotName',\n  snapshotRetentionLimit: 123,\n  snapshottingClusterId: 'snapshottingClusterId',\n  snapshotWindow: 'snapshotWindow',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitEncryptionEnabled: false,\n  userGroupIds: ['userGroupIds'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 33,
        "75": 54,
        "91": 6,
        "153": 1,
        "169": 1,
        "192": 9,
        "193": 7,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 50,
        "290": 1
      },
      "fqnsFingerprint": "46188392a0decb859803e02e358ac78fa0cce078d22cad5974cf619dbce8aabd"
    },
    "6545f85ae7c0e36c3119f825056793ffaef052f04d125917a319793efec69c68": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_security_group = elasticache.CfnSecurityGroup(self, \"MyCfnSecurityGroup\",\n    description=\"description\",\n\n    # the properties below are optional\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnSecurityGroup cfnSecurityGroup = new CfnSecurityGroup(this, \"MyCfnSecurityGroup\", new CfnSecurityGroupProps {\n    Description = \"description\",\n\n    // the properties below are optional\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnSecurityGroup cfnSecurityGroup = CfnSecurityGroup.Builder.create(this, \"MyCfnSecurityGroup\")\n        .description(\"description\")\n\n        // the properties below are optional\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnSecurityGroup := elasticache.NewCfnSecurityGroup(this, jsii.String(\"MyCfnSecurityGroup\"), &cfnSecurityGroupProps{\n\tdescription: jsii.String(\"description\"),\n\n\t// the properties below are optional\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnSecurityGroup = new elasticache.CfnSecurityGroup(this, 'MyCfnSecurityGroup', {\n  description: 'description',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnSecurityGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnSecurityGroup",
        "@aws-cdk/aws-elasticache.CfnSecurityGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSecurityGroup = new elasticache.CfnSecurityGroup(this, 'MyCfnSecurityGroup', {\n  description: 'description',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 8,
        "104": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "b60f400a27168990c05f2016511aa74f70bcb62e2c2e2102537087a1558b7559"
    },
    "f8360cfb1ab8e688e195a2bb6c581f70e2ab2b435ab186c02842a9e3fda2a4bb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_security_group_ingress = elasticache.CfnSecurityGroupIngress(self, \"MyCfnSecurityGroupIngress\",\n    cache_security_group_name=\"cacheSecurityGroupName\",\n    ec2_security_group_name=\"ec2SecurityGroupName\",\n\n    # the properties below are optional\n    ec2_security_group_owner_id=\"ec2SecurityGroupOwnerId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnSecurityGroupIngress cfnSecurityGroupIngress = new CfnSecurityGroupIngress(this, \"MyCfnSecurityGroupIngress\", new CfnSecurityGroupIngressProps {\n    CacheSecurityGroupName = \"cacheSecurityGroupName\",\n    Ec2SecurityGroupName = \"ec2SecurityGroupName\",\n\n    // the properties below are optional\n    Ec2SecurityGroupOwnerId = \"ec2SecurityGroupOwnerId\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnSecurityGroupIngress cfnSecurityGroupIngress = CfnSecurityGroupIngress.Builder.create(this, \"MyCfnSecurityGroupIngress\")\n        .cacheSecurityGroupName(\"cacheSecurityGroupName\")\n        .ec2SecurityGroupName(\"ec2SecurityGroupName\")\n\n        // the properties below are optional\n        .ec2SecurityGroupOwnerId(\"ec2SecurityGroupOwnerId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnSecurityGroupIngress := elasticache.NewCfnSecurityGroupIngress(this, jsii.String(\"MyCfnSecurityGroupIngress\"), &cfnSecurityGroupIngressProps{\n\tcacheSecurityGroupName: jsii.String(\"cacheSecurityGroupName\"),\n\tec2SecurityGroupName: jsii.String(\"ec2SecurityGroupName\"),\n\n\t// the properties below are optional\n\tec2SecurityGroupOwnerId: jsii.String(\"ec2SecurityGroupOwnerId\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnSecurityGroupIngress = new elasticache.CfnSecurityGroupIngress(this, 'MyCfnSecurityGroupIngress', {\n  cacheSecurityGroupName: 'cacheSecurityGroupName',\n  ec2SecurityGroupName: 'ec2SecurityGroupName',\n\n  // the properties below are optional\n  ec2SecurityGroupOwnerId: 'ec2SecurityGroupOwnerId',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnSecurityGroupIngress"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnSecurityGroupIngress",
        "@aws-cdk/aws-elasticache.CfnSecurityGroupIngressProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSecurityGroupIngress = new elasticache.CfnSecurityGroupIngress(this, 'MyCfnSecurityGroupIngress', {\n  cacheSecurityGroupName: 'cacheSecurityGroupName',\n  ec2SecurityGroupName: 'ec2SecurityGroupName',\n\n  // the properties below are optional\n  ec2SecurityGroupOwnerId: 'ec2SecurityGroupOwnerId',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "6f11ef2612b54252461341ccb689543749950cc996a0b6f1c1303f5b11cc1efd"
    },
    "05854128cddf1f593b42039bdcff41815ced3cd0bf59e9d983e2270b4faa1def": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_security_group_ingress_props = elasticache.CfnSecurityGroupIngressProps(\n    cache_security_group_name=\"cacheSecurityGroupName\",\n    ec2_security_group_name=\"ec2SecurityGroupName\",\n\n    # the properties below are optional\n    ec2_security_group_owner_id=\"ec2SecurityGroupOwnerId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnSecurityGroupIngressProps cfnSecurityGroupIngressProps = new CfnSecurityGroupIngressProps {\n    CacheSecurityGroupName = \"cacheSecurityGroupName\",\n    Ec2SecurityGroupName = \"ec2SecurityGroupName\",\n\n    // the properties below are optional\n    Ec2SecurityGroupOwnerId = \"ec2SecurityGroupOwnerId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnSecurityGroupIngressProps cfnSecurityGroupIngressProps = CfnSecurityGroupIngressProps.builder()\n        .cacheSecurityGroupName(\"cacheSecurityGroupName\")\n        .ec2SecurityGroupName(\"ec2SecurityGroupName\")\n\n        // the properties below are optional\n        .ec2SecurityGroupOwnerId(\"ec2SecurityGroupOwnerId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnSecurityGroupIngressProps := &cfnSecurityGroupIngressProps{\n\tcacheSecurityGroupName: jsii.String(\"cacheSecurityGroupName\"),\n\tec2SecurityGroupName: jsii.String(\"ec2SecurityGroupName\"),\n\n\t// the properties below are optional\n\tec2SecurityGroupOwnerId: jsii.String(\"ec2SecurityGroupOwnerId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnSecurityGroupIngressProps: elasticache.CfnSecurityGroupIngressProps = {\n  cacheSecurityGroupName: 'cacheSecurityGroupName',\n  ec2SecurityGroupName: 'ec2SecurityGroupName',\n\n  // the properties below are optional\n  ec2SecurityGroupOwnerId: 'ec2SecurityGroupOwnerId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnSecurityGroupIngressProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnSecurityGroupIngressProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSecurityGroupIngressProps: elasticache.CfnSecurityGroupIngressProps = {\n  cacheSecurityGroupName: 'cacheSecurityGroupName',\n  ec2SecurityGroupName: 'ec2SecurityGroupName',\n\n  // the properties below are optional\n  ec2SecurityGroupOwnerId: 'ec2SecurityGroupOwnerId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "aca001de78fecf99ec48f963974a9c48cf6435b155bf3c1927287d119a6c928a"
    },
    "3d6f6b95a84ecd2cc475a7ce0e44bbd8fc4b6943922ab2d2dd0b1e64c5ffb231": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_security_group_props = elasticache.CfnSecurityGroupProps(\n    description=\"description\",\n\n    # the properties below are optional\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnSecurityGroupProps cfnSecurityGroupProps = new CfnSecurityGroupProps {\n    Description = \"description\",\n\n    // the properties below are optional\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnSecurityGroupProps cfnSecurityGroupProps = CfnSecurityGroupProps.builder()\n        .description(\"description\")\n\n        // the properties below are optional\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnSecurityGroupProps := &cfnSecurityGroupProps{\n\tdescription: jsii.String(\"description\"),\n\n\t// the properties below are optional\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnSecurityGroupProps: elasticache.CfnSecurityGroupProps = {\n  description: 'description',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnSecurityGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnSecurityGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSecurityGroupProps: elasticache.CfnSecurityGroupProps = {\n  description: 'description',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "1c0d048964d766ca7f5e30cb3948225e51978cae28158c067d3e1a6cf6fad8c1"
    },
    "98c205bd0914ae9d270b1856a35107144be8724b3a4052ac56cc00af75fd84c8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_subnet_group = elasticache.CfnSubnetGroup(self, \"MyCfnSubnetGroup\",\n    description=\"description\",\n    subnet_ids=[\"subnetIds\"],\n\n    # the properties below are optional\n    cache_subnet_group_name=\"cacheSubnetGroupName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnSubnetGroup cfnSubnetGroup = new CfnSubnetGroup(this, \"MyCfnSubnetGroup\", new CfnSubnetGroupProps {\n    Description = \"description\",\n    SubnetIds = new [] { \"subnetIds\" },\n\n    // the properties below are optional\n    CacheSubnetGroupName = \"cacheSubnetGroupName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnSubnetGroup cfnSubnetGroup = CfnSubnetGroup.Builder.create(this, \"MyCfnSubnetGroup\")\n        .description(\"description\")\n        .subnetIds(List.of(\"subnetIds\"))\n\n        // the properties below are optional\n        .cacheSubnetGroupName(\"cacheSubnetGroupName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnSubnetGroup := elasticache.NewCfnSubnetGroup(this, jsii.String(\"MyCfnSubnetGroup\"), &cfnSubnetGroupProps{\n\tdescription: jsii.String(\"description\"),\n\tsubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n\n\t// the properties below are optional\n\tcacheSubnetGroupName: jsii.String(\"cacheSubnetGroupName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnSubnetGroup = new elasticache.CfnSubnetGroup(this, 'MyCfnSubnetGroup', {\n  description: 'description',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  cacheSubnetGroupName: 'cacheSubnetGroupName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnSubnetGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnSubnetGroup",
        "@aws-cdk/aws-elasticache.CfnSubnetGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSubnetGroup = new elasticache.CfnSubnetGroup(this, 'MyCfnSubnetGroup', {\n  description: 'description',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  cacheSubnetGroupName: 'cacheSubnetGroupName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 10,
        "104": 1,
        "192": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "22e218403188186767c01307d0e8d11cdddc55e653680ed1c54031ed6f6ef590"
    },
    "f969929c3f61fc36f3f840a2708d93297e5809a5f581154dc62de9f538edfcb7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_subnet_group_props = elasticache.CfnSubnetGroupProps(\n    description=\"description\",\n    subnet_ids=[\"subnetIds\"],\n\n    # the properties below are optional\n    cache_subnet_group_name=\"cacheSubnetGroupName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnSubnetGroupProps cfnSubnetGroupProps = new CfnSubnetGroupProps {\n    Description = \"description\",\n    SubnetIds = new [] { \"subnetIds\" },\n\n    // the properties below are optional\n    CacheSubnetGroupName = \"cacheSubnetGroupName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnSubnetGroupProps cfnSubnetGroupProps = CfnSubnetGroupProps.builder()\n        .description(\"description\")\n        .subnetIds(List.of(\"subnetIds\"))\n\n        // the properties below are optional\n        .cacheSubnetGroupName(\"cacheSubnetGroupName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnSubnetGroupProps := &cfnSubnetGroupProps{\n\tdescription: jsii.String(\"description\"),\n\tsubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n\n\t// the properties below are optional\n\tcacheSubnetGroupName: jsii.String(\"cacheSubnetGroupName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnSubnetGroupProps: elasticache.CfnSubnetGroupProps = {\n  description: 'description',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  cacheSubnetGroupName: 'cacheSubnetGroupName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnSubnetGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnSubnetGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSubnetGroupProps: elasticache.CfnSubnetGroupProps = {\n  description: 'description',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  cacheSubnetGroupName: 'cacheSubnetGroupName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "5b24717b75b15b832ecc271aebad4965f0a75a98c7bcf746d3fb32ebbdda2c49"
    },
    "3a0e01f03053f76eed02d6fb8d48b335bfa978d2a6a006f41f5648ddcb004406": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_user = elasticache.CfnUser(self, \"MyCfnUser\",\n    engine=\"engine\",\n    user_id=\"userId\",\n    user_name=\"userName\",\n\n    # the properties below are optional\n    access_string=\"accessString\",\n    no_password_required=False,\n    passwords=[\"passwords\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnUser cfnUser = new CfnUser(this, \"MyCfnUser\", new CfnUserProps {\n    Engine = \"engine\",\n    UserId = \"userId\",\n    UserName = \"userName\",\n\n    // the properties below are optional\n    AccessString = \"accessString\",\n    NoPasswordRequired = false,\n    Passwords = new [] { \"passwords\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnUser cfnUser = CfnUser.Builder.create(this, \"MyCfnUser\")\n        .engine(\"engine\")\n        .userId(\"userId\")\n        .userName(\"userName\")\n\n        // the properties below are optional\n        .accessString(\"accessString\")\n        .noPasswordRequired(false)\n        .passwords(List.of(\"passwords\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnUser := elasticache.NewCfnUser(this, jsii.String(\"MyCfnUser\"), &cfnUserProps{\n\tengine: jsii.String(\"engine\"),\n\tuserId: jsii.String(\"userId\"),\n\tuserName: jsii.String(\"userName\"),\n\n\t// the properties below are optional\n\taccessString: jsii.String(\"accessString\"),\n\tnoPasswordRequired: jsii.Boolean(false),\n\tpasswords: []*string{\n\t\tjsii.String(\"passwords\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnUser = new elasticache.CfnUser(this, 'MyCfnUser', {\n  engine: 'engine',\n  userId: 'userId',\n  userName: 'userName',\n\n  // the properties below are optional\n  accessString: 'accessString',\n  noPasswordRequired: false,\n  passwords: ['passwords'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnUser"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnUser",
        "@aws-cdk/aws-elasticache.CfnUserProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUser = new elasticache.CfnUser(this, 'MyCfnUser', {\n  engine: 'engine',\n  userId: 'userId',\n  userName: 'userName',\n\n  // the properties below are optional\n  accessString: 'accessString',\n  noPasswordRequired: false,\n  passwords: ['passwords'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 10,
        "91": 1,
        "104": 1,
        "192": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "0b6251404ea282bdf7fe2487b234be74bd9ecc031bb6f17497b92b866cb4a3eb"
    },
    "34c6e9b6d1dee20ba08ec9a98e38216fde4342bc0f4c1d5fd9af1b7a347a306c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_user_group = elasticache.CfnUserGroup(self, \"MyCfnUserGroup\",\n    engine=\"engine\",\n    user_group_id=\"userGroupId\",\n\n    # the properties below are optional\n    user_ids=[\"userIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnUserGroup cfnUserGroup = new CfnUserGroup(this, \"MyCfnUserGroup\", new CfnUserGroupProps {\n    Engine = \"engine\",\n    UserGroupId = \"userGroupId\",\n\n    // the properties below are optional\n    UserIds = new [] { \"userIds\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnUserGroup cfnUserGroup = CfnUserGroup.Builder.create(this, \"MyCfnUserGroup\")\n        .engine(\"engine\")\n        .userGroupId(\"userGroupId\")\n\n        // the properties below are optional\n        .userIds(List.of(\"userIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnUserGroup := elasticache.NewCfnUserGroup(this, jsii.String(\"MyCfnUserGroup\"), &cfnUserGroupProps{\n\tengine: jsii.String(\"engine\"),\n\tuserGroupId: jsii.String(\"userGroupId\"),\n\n\t// the properties below are optional\n\tuserIds: []*string{\n\t\tjsii.String(\"userIds\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnUserGroup = new elasticache.CfnUserGroup(this, 'MyCfnUserGroup', {\n  engine: 'engine',\n  userGroupId: 'userGroupId',\n\n  // the properties below are optional\n  userIds: ['userIds'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnUserGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnUserGroup",
        "@aws-cdk/aws-elasticache.CfnUserGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserGroup = new elasticache.CfnUserGroup(this, 'MyCfnUserGroup', {\n  engine: 'engine',\n  userGroupId: 'userGroupId',\n\n  // the properties below are optional\n  userIds: ['userIds'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 7,
        "104": 1,
        "192": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "45fab64c750ffafd1b25f7a3219dde4a5c0344fb3222168b2329217c8ca2f0ba"
    },
    "96922d4ebbec82f9de3d876399caa9d98102d4f6d096bceea891dea837b0d672": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_user_group_props = elasticache.CfnUserGroupProps(\n    engine=\"engine\",\n    user_group_id=\"userGroupId\",\n\n    # the properties below are optional\n    user_ids=[\"userIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnUserGroupProps cfnUserGroupProps = new CfnUserGroupProps {\n    Engine = \"engine\",\n    UserGroupId = \"userGroupId\",\n\n    // the properties below are optional\n    UserIds = new [] { \"userIds\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnUserGroupProps cfnUserGroupProps = CfnUserGroupProps.builder()\n        .engine(\"engine\")\n        .userGroupId(\"userGroupId\")\n\n        // the properties below are optional\n        .userIds(List.of(\"userIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnUserGroupProps := &cfnUserGroupProps{\n\tengine: jsii.String(\"engine\"),\n\tuserGroupId: jsii.String(\"userGroupId\"),\n\n\t// the properties below are optional\n\tuserIds: []*string{\n\t\tjsii.String(\"userIds\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnUserGroupProps: elasticache.CfnUserGroupProps = {\n  engine: 'engine',\n  userGroupId: 'userGroupId',\n\n  // the properties below are optional\n  userIds: ['userIds'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnUserGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnUserGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserGroupProps: elasticache.CfnUserGroupProps = {\n  engine: 'engine',\n  userGroupId: 'userGroupId',\n\n  // the properties below are optional\n  userIds: ['userIds'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "26daebfb8e786d602967f2e4a3bfe974685c1aa3f2d6c7bd31cf5b90e9af0554"
    },
    "49003be01f5725d4bf467562a12a656d8374f4b8ce8a252323e0e41dc8d565da": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticache as elasticache\n\ncfn_user_props = elasticache.CfnUserProps(\n    engine=\"engine\",\n    user_id=\"userId\",\n    user_name=\"userName\",\n\n    # the properties below are optional\n    access_string=\"accessString\",\n    no_password_required=False,\n    passwords=[\"passwords\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElastiCache;\n\nCfnUserProps cfnUserProps = new CfnUserProps {\n    Engine = \"engine\",\n    UserId = \"userId\",\n    UserName = \"userName\",\n\n    // the properties below are optional\n    AccessString = \"accessString\",\n    NoPasswordRequired = false,\n    Passwords = new [] { \"passwords\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticache.*;\n\nCfnUserProps cfnUserProps = CfnUserProps.builder()\n        .engine(\"engine\")\n        .userId(\"userId\")\n        .userName(\"userName\")\n\n        // the properties below are optional\n        .accessString(\"accessString\")\n        .noPasswordRequired(false)\n        .passwords(List.of(\"passwords\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticache \"github.com/aws-samples/dummy/awscdkawselasticache\"\n\ncfnUserProps := &cfnUserProps{\n\tengine: jsii.String(\"engine\"),\n\tuserId: jsii.String(\"userId\"),\n\tuserName: jsii.String(\"userName\"),\n\n\t// the properties below are optional\n\taccessString: jsii.String(\"accessString\"),\n\tnoPasswordRequired: jsii.Boolean(false),\n\tpasswords: []*string{\n\t\tjsii.String(\"passwords\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\nconst cfnUserProps: elasticache.CfnUserProps = {\n  engine: 'engine',\n  userId: 'userId',\n  userName: 'userName',\n\n  // the properties below are optional\n  accessString: 'accessString',\n  noPasswordRequired: false,\n  passwords: ['passwords'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticache.CfnUserProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticache.CfnUserProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticache from '@aws-cdk/aws-elasticache';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserProps: elasticache.CfnUserProps = {\n  engine: 'engine',\n  userId: 'userId',\n  userName: 'userName',\n\n  // the properties below are optional\n  accessString: 'accessString',\n  noPasswordRequired: false,\n  passwords: ['passwords'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "4bf7d29ba728b824a7d92d13cae327ec48b29ad4118d72df7689cec74bdf4dcb"
    }
  }
}